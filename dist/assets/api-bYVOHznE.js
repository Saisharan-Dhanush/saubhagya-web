import{m as t}from"./index-Cwg1D4Xy.js";import"./ui-vendor-CnKvLbpM.js";import"./react-vendor-XSK8c6JV.js";import"./utils-Bj4fnUCk.js";import"./charts-D-uCZeDt.js";class h{token=null;setToken(e){this.token=e,e?localStorage.setItem("saubhagya_jwt_token",e):localStorage.removeItem("saubhagya_jwt_token")}getToken(){return this.token||(this.token=localStorage.getItem("saubhagya_jwt_token")),this.token}isAuthenticated(){return!!this.getToken()}clear(){this.token=null,localStorage.removeItem("saubhagya_jwt_token")}}const c=new h;class u{async login(e,r){try{const a=await fetch("http://localhost:8081/auth-service/api/auth/login",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({phone:e,password:r})});if(!a.ok){const d=await a.json();throw new Error(d.message||"Login failed")}const o=await a.json(),s=o.userProfile||o.data||{},l={id:s.id||s.externalId||"1",email:s.email||`${e}@saubhagya.com`,name:s.name||"User",role:s.roles?.[0]||"user",permissions:s.permissions||[]},n=o.accessToken||o.data?.token||o.token;return c.setToken(n),{success:!0,data:{user:l,token:n},message:"Login successful"}}catch(a){return{success:!1,error:a instanceof Error?a.message:"Login failed"}}}async logout(){return c.clear(),{success:!0,data:null,message:"Logged out successfully"}}async getCurrentUser(){return c.isAuthenticated()?{success:!0,data:{id:"1",email:"admin@saubhagya.com",name:"Admin User",role:"admin",permissions:["cattle:read","cattle:write","transactions:read","dashboard:read"]}}:{success:!1,error:"Not authenticated"}}async getCattle(){try{const e=await t.callService("auth-service","/auth/api/v1/cattle/list"),r=await e.json();if(!e.ok)throw new Error(r.message||"Failed to fetch cattle");return r}catch(e){return{success:!1,error:e instanceof Error?e.message:"Failed to fetch cattle"}}}async addCattle(e){try{const r=await t.callService("auth-service","/auth/api/v1/cattle/store",{method:"POST",body:JSON.stringify(e)}),a=await r.json();if(!r.ok)throw new Error(a.message||"Failed to add cattle");return a}catch(r){return{success:!1,error:r instanceof Error?r.message:"Failed to add cattle"}}}async getDevices(){try{const e=await t.callService("iot-service","/iot/api/v1/devices"),r=await e.json();if(!e.ok)throw new Error(r.message||"Failed to fetch devices");return r}catch(e){return{success:!1,error:e instanceof Error?e.message:"Failed to fetch devices"}}}async getRFIDTags(){try{const e=await t.callService("iot-service","/iot/api/v1/rfid-tags"),r=await e.json();if(!e.ok)throw new Error(r.message||"Failed to fetch RFID tags");return r}catch(e){return{success:!1,error:e instanceof Error?e.message:"Failed to fetch RFID tags"}}}async getTransactions(){try{const e=await t.callService("transaction-service","/api/v1/transactions"),r=await e.json();if(!e.ok)throw new Error(r.message||"Failed to fetch transactions");return r}catch(e){return{success:!1,error:e instanceof Error?e.message:"Failed to fetch transactions"}}}async addTransaction(e){try{const r=await t.callService("transaction-service","/api/v1/transactions",{method:"POST",body:JSON.stringify(e)}),a=await r.json();if(!r.ok)throw new Error(a.message||"Failed to add transaction");return a}catch(r){return{success:!1,error:r instanceof Error?r.message:"Failed to add transaction"}}}async getSales(){try{const e=await t.callService("sales-service","/api/commerce/sales"),r=await e.json();if(!e.ok)throw new Error(r.message||"Failed to fetch sales");return r}catch(e){return{success:!1,error:e instanceof Error?e.message:"Failed to fetch sales"}}}async getOrders(){try{const e=await t.callService("sales-service","/api/commerce/orders"),r=await e.json();if(!e.ok)throw new Error(r.message||"Failed to fetch orders");return r}catch(e){return{success:!1,error:e instanceof Error?e.message:"Failed to fetch orders"}}}async getDashboardStats(){try{const e=await t.callService("reporting-service","/api/v1/dashboard"),r=await e.json();if(!e.ok)throw new Error(r.message||"Failed to fetch dashboard stats");return r}catch(e){return{success:!1,error:e instanceof Error?e.message:"Failed to fetch dashboard stats"}}}async getAnalytics(e){try{const r=await t.callService("reporting-service",`/api/v1/analytics/${e}`),a=await r.json();if(!r.ok)throw new Error(a.message||"Failed to fetch analytics");return a}catch(r){return{success:!1,error:r instanceof Error?r.message:"Failed to fetch analytics"}}}async getGovernmentDashboard(){try{const e=await t.callService("government-service","/government/api/v1/dashboard"),r=await e.json();if(!e.ok)throw new Error(r.message||"Failed to fetch government dashboard");return r}catch(e){return{success:!1,error:e instanceof Error?e.message:"Failed to fetch government dashboard"}}}async getSchemes(){try{const e=await t.callService("government-service","/government/api/v1/schemes"),r=await e.json();if(!e.ok)throw new Error(r.message||"Failed to fetch schemes");return r}catch(e){return{success:!1,error:e instanceof Error?e.message:"Failed to fetch schemes"}}}async healthCheck(){try{return{success:!0,data:await t.healthCheck(),message:"Health check completed"}}catch(e){return{success:!1,error:e instanceof Error?e.message:"Health check failed"}}}}const y=new u;export{y as apiService,c as authManager,y as default};
//# sourceMappingURL=api-bYVOHznE.js.map
