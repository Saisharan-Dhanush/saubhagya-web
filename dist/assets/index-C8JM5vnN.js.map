{"version":3,"mappings":"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","names":["m","require$$0","client","ROLE_PERMISSIONS","AuthContext","createContext","useAuth","context","useContext","AuthProvider","children","user","setUser","useState","loading","setLoading","hasPermission","module","action","p","isExecutive","getAccessLevel","login","phone","password","apiService","__vitePreload","email","loginResponse","apiUser","token","correctRole","getCorrectRoleForPhone","mapApiRoleToUserRole","correctAppType","getCorrectAppTypeForPhone","getAppTypeFromRole","mappedUser","getCorrectNameForPhone","getDepartmentFromRole","mapApiPermissions","getExecutiveLevelFromRole","loginWithFallback","mockUser","logout","useEffect","savedUser","sessionStart","parsedUser","sessionAge","maxSessionAge","interval","value","jsx","apiRole","apiPermissions","permissionMap","mappedPermissions","perm","backendRole","PLATFORM_MODULES","PlatformContext","usePlatform","PlatformProvider","navigationState","setNavigationState","platformSettings","setPlatformSettings","sessionMetrics","setSessionMetrics","modules","navigateToModule","moduleId","preserveState","isModuleAccessible","prev","trackModuleUsage","updateBreadcrumbs","breadcrumbs","goBack","updatePlatformSettings","newSettings","updated","getAccessibleModules","getSessionSummary","saved","parsedSettings","currentPath","currentModule","Login","setPhone","setPassword","showPassword","setShowPassword","language","setLanguage","navigate","useNavigate","handleSubmit","e","t","jsxs","Mail","Lock","EyeOff","Eye","cn","inputs","twMerge","clsx","buttonVariants","cva","Button","React.forwardRef","className","variant","size","props","ref","Badge","Separator","orientation","decorative","BaseLayout","moduleName","navigationItems","moduleSubtitle","userInfo","contentClassName","isMobileMenuOpen","setIsMobileMenuOpen","handleLogout","Menu","X","item","Search","Bell","LogOut","index","Card","CardHeader","CardTitle","CardDescription","CardContent","CardFooter","Dashboard","lastUpdated","setLastUpdated","isRefreshing","setIsRefreshing","realTimeMetrics","setRealTimeMetrics","systemMetrics","Users","Server","Activity","AlertTriangle","Database","Clock","handleRefresh","getStatusBadge","status","RefreshCw","metric","BarChart3","Cpu","HardDrive","Wifi","Zap","TrendingUp","PieChart","Input","type","UserManagement","searchTerm","setSearchTerm","roleFilter","setRoleFilter","mockUsers","getRoleBadge","role","roleColors","filteredUsers","matchesSearch","matchesRole","UserPlus","Edit","Trash2","DeviceRegistry","mockDevices","WifiOff","Settings","getDeviceIcon","Smartphone","Monitor","Bluetooth","getBatteryColor","level","filteredDevices","device","Plus","d","AuditLogs","moduleFilter","setModuleFilter","mockLogs","getStatusIcon","CheckCircle","XCircle","getModuleIcon","Shield","User","filteredLogs","log","matchesModule","Download","l","Reports","FileText","DollarSign","Leaf","Calendar","Configuration","config","setConfig","configSections","Key","Globe","handleConfigChange","key","renderSetting","setting","option","Save","section","settingIndex","AdminModule","location","useLocation","LayoutDashboard","Routes","Route","Admin","users","setUsers","auditLogs","setAuditLogs","systemHealth","setSystemHealth","alerts","setAlerts","searchQuery","setSearchQuery","filterRole","setFilterRole","filterStatus","setFilterStatus","activeTab","setActiveTab","updateSystemHealth","mockAlerts","getRoleColor","getStatusColor","getSeverityColor","severity","getAlertTypeIcon","exportData","format","formatUptime","uptime","days","hours","Fragment","alert","API_BASE","AUTH_API","UrjaSanyojak","feasibilityProjects","setFeasibilityProjects","subsidyApplications","setSubsidyApplications","businessLeads","setBusinessLeads","selectedTab","setSelectedTab","loadBusinessData","loadFeasibilityProjects","loadSubsidyApplications","loadBusinessLeads","response","data","calculateFeasibility","farmerId","cattleCount","result","submitSubsidyApplication","applicationData","updateLeadStatus","leadId","newStage","formatCurrency","amount","Calculator","IndianRupee","Target","id","label","Icon","PlusCircle","project","MapPin","application","lead","Phone","AlertCircle","IOT_API","BIOGAS_API","SALES_API","iotData","setIotData","pickupSchedules","setPickupSchedules","clusterMetrics","setClusterMetrics","isSpeaking","setIsSpeaking","isListening","setIsListening","transcript","setTranscript","voices","setVoices","selectedVoice","setSelectedVoice","fetchIoTData","devices","newData","fetchPickupSchedules","schedule","fetchClusterMetrics","metrics","latest","speakSummary","utterance","getStatusText","Volume2","Gauge","Thermometer","Truck","ExecutiveAnalyticsContext","useExecutiveAnalytics","ExecutiveAnalyticsProvider","kpis","setKpis","insights","setInsights","initiatives","setInitiatives","carbonMetrics","setCarbonMetrics","competitiveData","setCompetitiveData","voiceHistory","setVoiceHistory","refreshing","setRefreshing","prevKpis","kpi","refreshData","resolve","newInsights","addVoiceQuery","query","updateKPI","updates","updateInitiative","init","overallPerformanceScore","sum","criticalAlerts","insight","topOpportunities","a","b","Alert","AlertTitle","AlertDescription","TabsContext","React.createContext","Tabs","onValueChange","defaultValue","internalValue","setInternalValue","React.useState","currentValue","handleValueChange","TabsList","TabsTrigger","React.useContext","TabsContent","ExecutiveCommandCenter","crossModuleMetrics","setCrossModuleMetrics","executiveInsights","setExecutiveInsights","collaborationSessions","setCollaborationSessions","handleRefreshData","handleModuleDeepDive","Factory","Filter","Brain","Video","s","session","MessageSquare","Share2","Award","ExecutiveDashboard","API_BASE_URL","__vite_import_meta_env__","apiCall","endpoint","options","headers","error","dashboardApi","limit","cattleApi","IoTServiceClient","allCattleResponse","cattle","c","rfidTag","updateData","cattleId","health","notes","record","photoFile","formData","transactionApi","transaction","BiogasServiceClient","transactionId","paymentMethod","digestorId","workerId","gauShalaApi","translations","GauShalaHome","languageContext","globalT","stats","setStats","showTransactionModal","setShowTransactionModal","transactionForm","setTransactionForm","isSubmitting","setIsSubmitting","fetchDashboardData","statsResponse","formatTimeAgo","timestamp","diff","minutes","handleTransactionSubmit","transactionData","TrendingDown","Scale","collection","performer","SERVICE_REGISTRY","MicroservicesClient","serviceName","service","url","results","name","microservicesClient","cattleData","dataWithId","contributionData","page","contributionId","paymentData","clusterId","fromDate","toDate","qualityRates","CowDungTransaction","onClose","onSuccess","setFormData","errors","setErrors","locationStatus","setLocationStatus","weight","rate","total","newRate","handleInputChange","field","getCurrentLocation","position","validateForm","newErrors","getQualityColor","grade","Star","CreditCard","Coins","TransactionHistory","farmerName","contributions","setContributions","filteredContributions","setFilteredContributions","paymentFilter","setPaymentFilter","qualityFilter","setQualityFilter","selectedContribution","setSelectedContribution","showDetailsModal","setShowDetailsModal","loadContributions","applyFilters","filtered","calculateSummary","totalContributions","totalWeight","totalValue","qualityDistribution","acc","qualityKeys","avgQuality","formatDate","dateString","getPaymentStatusColor","quality","handleViewDetails","contribution","handleExportData","csvData","csvContent","row","blob","summary","CattleManagement","setCattle","filteredCattle","setFilteredCattle","showViewModal","setShowViewModal","showEditModal","setShowEditModal","showHistoryModal","setShowHistoryModal","selectedCattle","setSelectedCattle","editFormData","setEditFormData","isUpdating","setIsUpdating","filter","setFilter","loadCattleData","getHealthColor","handleView","handleEdit","handleEditInputChange","locationField","handleEditSubmit","prevCattle","handleDelete","handleRecordTransaction","handleViewHistory","handleTransactionSuccess","handleScanRFID","cattleInfo","Scan","History","AddCattle","isLoading","setIsLoading","isScanning","setIsScanning","message","setMessage","activeSection","setActiveSection","useCallback","handleScanRfid","uploadPromises","handleCancel","sections","Home","Baby","InputField","onChange","placeholder","required","SelectField","TextAreaField","rows","FileUploadField","accept","Upload","ArrowLeft","CattleDetail","useParams","isEditing","setIsEditing","isSaving","setIsSaving","editData","setEditData","showDeleteConfirm","setShowDeleteConfirm","newMedicalRecord","setNewMedicalRecord","showAddMedical","setShowAddMedical","loadCattleDetail","handleSave","handleAddMedicalRecord","recordData","getHealthStatusColor","Camera","AllTransactions","workerFilter","setWorkerFilter","loadAllContributions","totalTransactions","uniqueWorkers","getUniqueWorkers","workers","worker","GauShala","keys","k","getCurrentTab","path","tab","getBreadcrumbs","Receipt","Progress","max","overviewData","digestersData","productionTrend","statusDistribution","KPICard","title","change","trend","icon","getTrendColor","getTrendIcon","DigesterCard","digester","statusColor","StatusIcon","Droplets","StatusBadge","count","EnhancedBiogasDashboard","ArrowUpRight","ResponsiveContainer","LineChart","CartesianGrid","XAxis","YAxis","Tooltip","Legend","Line","Pie","entry","Cell","CheckCircle2","Select","SelectPrimitive.Root","SelectValue","SelectPrimitive.Value","SelectTrigger","SelectPrimitive.Trigger","SelectPrimitive.Icon","ChevronDown","SelectScrollUpButton","SelectPrimitive.ScrollUpButton","ChevronUp","SelectScrollDownButton","SelectPrimitive.ScrollDownButton","SelectContent","SelectPrimitive.Portal","SelectPrimitive.Content","SelectPrimitive.Viewport","SelectLabel","SelectPrimitive.Label","SelectItem","SelectPrimitive.Item","SelectPrimitive.ItemIndicator","Check","SelectPrimitive.ItemText","SelectSeparator","SelectPrimitive.Separator","baseDigesters","useRealTimeDigesterData","digesters","setDigesters","isConnected","setIsConnected","isRealTimeActive","setIsRealTimeActive","lastUpdateTime","setLastUpdateTime","generateSensorVariation","baseValue","variation","min","newValue","updateDigesterData","prevDigesters","toggleRealTime","SensorCard","unit","color","getCardStyles","ConnectionStatus","lastUpdate","onToggleRealTime","Pause","Play","ChartCard","subtitle","isLive","getDetailedChartData","_","i","timeLabel","ModernDigesterMonitoring","selectedDigesterId","setSelectedDigesterId","selectedDigester","chartData","timer","Radio","Beaker","Wind","AreaChart","Area","Label","Textarea","Dialog","DialogPrimitive.Root","DialogTrigger","DialogPrimitive.Trigger","DialogPortal","DialogPrimitive.Portal","DialogOverlay","DialogPrimitive.Overlay","DialogContent","DialogPrimitive.Content","DialogPrimitive.Close","DialogHeader","DialogFooter","DialogTitle","DialogPrimitive.Title","DialogDescription","DialogPrimitive.Description","Table","TableHeader","TableBody","TableFooter","TableRow","TableHead","TableCell","TableCaption","batches","certificates","createBatch","updateBatch","deleteBatch","Package","BatchForm","batch","onSubmit","onCancel","BatchManagement","statusFilter","setStatusFilter","isCreateDialogOpen","setIsCreateDialogOpen","editingBatch","setEditingBatch","deletingBatch","setDeletingBatch","lang","filteredBatches","matchesStatus","handleCreateBatch","handleUpdateBatch","handleDeleteBatch","activeBatches","readyBatches","totalVolume","averageQuality","cert","disputes","resolveDispute","disputeId","resolutionData","escalateDispute","reason","DisputeResolution","selectedDispute","setSelectedDispute","filteredDisputes","dispute","handleResolveDispute","resolution","favorFarmer","getDisputeTypeLabel","payments","farmers","PaymentReconciliation","selectedPayment","setSelectedPayment","getPaymentTypeIcon","getFarmerName","f","payment","Hash","batchId","tzName","timeZone","date","offsetFormatCache","offsetCache","tzOffset","offsetStr","calcOffset","captures","offsetRe","cacheStr","values","seconds","TZDateMini","args","adjustToSystemTZ","syncToInternal","tz","offset","time","re","method","utcMethod","syncFromInternal","baseOffset","prevHour","systemOffset","prevHourSystemOffset","systemDSTChange","dstShift","offsetDiff","systemDate","systemSecondsOffset","secondsOffset","postBaseOffset","postOffset","postOffsetDiff","offsetChanged","postDiff","newBaseOffset","newOffset","offsetChange","TZDate","sign","day","month","year","locales","millisecondsInWeek","millisecondsInDay","constructFromSymbol","constructFrom","argument","addDays","_date","addMonths","dayOfMonth","endOfDesiredMonth","daysInMonth","defaultOptions","getDefaultOptions","startOfWeek","weekStartsOn","startOfISOWeek","getISOWeekYear","fourthOfJanuaryOfNextYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","getTimezoneOffsetInMilliseconds","utcDate","normalizeDates","dates","normalize","startOfDay","differenceInCalendarDays","laterDate","earlierDate","laterDate_","earlierDate_","laterStartOfDay","earlierStartOfDay","laterTimestamp","earlierTimestamp","startOfISOWeekYear","fourthOfJanuary","addWeeks","addYears","date_","isSameDay","dateLeft_","dateRight_","isDate","isValid","differenceInCalendarMonths","yearsDiff","monthsDiff","endOfMonth","normalizeInterval","start","end","eachMonthOfInterval","reversed","endTime","step","startOfMonth","endOfYear","startOfYear","endOfWeek","endOfISOWeek","formatDistanceLocale","formatDistance","tokenValue","buildFormatLongFn","width","dateFormats","timeFormats","dateTimeFormats","formatLong","formatRelativeLocale","formatRelative","_baseDate","_options","buildLocalizeFn","valuesArray","defaultWidth","eraValues","quarterValues","monthValues","dayValues","dayPeriodValues","formattingDayPeriodValues","ordinalNumber","dirtyNumber","number","rem100","localize","quarter","buildMatchFn","string","matchPattern","matchResult","matchedString","parsePatterns","findIndex","pattern","findKey","rest","object","predicate","array","buildMatchPatternFn","parseResult","matchOrdinalNumberPattern","parseOrdinalNumberPattern","matchEraPatterns","parseEraPatterns","matchQuarterPatterns","parseQuarterPatterns","matchMonthPatterns","parseMonthPatterns","matchDayPatterns","parseDayPatterns","matchDayPeriodPatterns","parseDayPeriodPatterns","match","enUS","getDayOfYear","getISOWeek","getWeekYear","firstWeekContainsDate","firstWeekOfNextYear","firstWeekOfThisYear","startOfWeekYear","firstWeek","getWeek","addLeadingZeros","targetLength","output","lightFormatters","signedYear","dayPeriodEnumValue","numberOfDigits","milliseconds","fractionalSeconds","dayPeriodEnum","formatters","era","signedWeekYear","weekYear","twoDigitYear","isoWeekYear","week","isoWeek","dayOfYear","dayOfWeek","localDayOfWeek","isoDayOfWeek","_localize","timezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","formatTimezoneShort","delimiter","absOffset","dateLongFormatter","timeLongFormatter","dateTimeLongFormatter","datePattern","timePattern","dateTimeFormat","longFormatters","dayOfYearTokenRE","weekYearTokenRE","throwTokens","isProtectedDayOfYearToken","isProtectedWeekYearToken","warnOrThrowProtectedError","input","_message","subject","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","formatStr","locale","defaultLocale","originalDate","parts","substring","firstCharacter","longFormatter","cleanEscapedString","formatterOptions","part","formatter","matched","getDaysInMonth","monthIndex","lastDayOfMonth","getMonth","getYear","isAfter","dateToCompare","isBefore","isSameMonth","isSameYear","setMonth","midMonth","setYear","FIVE_WEEKS","FOUR_WEEKS","getBroadcastWeeksInMonth","dateLib","firstDayOfMonth","firstDayOfWeek","broadcastStartDate","lastDateOfLastWeek","startOfBroadcastWeek","firstOfMonth","endOfBroadcastWeek","startDate","numberOfWeeks","DateLib","overrides","dateLeft","dateRight","formatted","_dateLib","numerals","digitMap","digit","code","localeCode","defaultDateLib","CalendarDay","displayMonth","CalendarMonth","weeks","CalendarWeek","weekNumber","React","CaptionLabel","Chevron","Day","modifiers","tdProps","DayButton","buttonProps","UI","DayFlag","SelectionState","Animation","Dropdown","components","classNames","selectProps","cssClassSelect","selectedOption","disabled","DropdownNav","Footer","Month","calendarMonth","displayIndex","divProps","MonthCaption","MonthGrid","Months","dayPickerContext","useDayPicker","MonthsDropdown","Nav","onPreviousClick","onNextClick","previousMonth","nextMonth","navProps","labelPrevious","labelNext","handleNextClick","handlePreviousClick","NextMonthButton","Option","PreviousMonthButton","Root","rootRef","Week","trProps","Weekday","Weekdays","WeekNumber","thProps","WeekNumberHeader","Weeks","YearsDropdown","rangeIncludesDate","range","excludeEnds","from","to","isDateInterval","matcher","isDateRange","isDateAfterType","isDateBeforeType","isDayOfWeekType","isDatesArray","dateMatchModifiers","matchers","matchersArr","diffBefore","diffAfter","isDayBefore","isDayAfter","createGetModifiers","navStart","navEnd","hidden","showOutsideDays","broadcastCalendar","today","computedNavStart","computedNavEnd","internalModifiersMap","customModifiersMap","isOutside","isBeforeNavStart","isAfterNavEnd","isDisabled","isHidden","isToday","modifierValue","dayFlags","customModifiers","getClassNamesForModifiers","modifiersClassNames","active","previousValue","getComponents","customComponents","getDataAttributes","dataAttributes","val","getDefaultClassNames","formatCaption","formatMonthCaption","formatDay","formatMonthDropdown","formatWeekdayName","weekday","formatWeekNumber","formatWeekNumberHeader","formatYearDropdown","formatYearCaption","getFormatters","customFormatters","defaultFormatters","getMonthOptions","getStyleForModifiers","dayModifiers","styles","modifiersStyles","style","modifier","getWeekdays","ISOWeek","getYearOptions","reverse","firstNavYear","lastNavYear","years","labelDayButton","labelDay","labelGrid","labelCaption","labelGridcell","labelMonthDropdown","labelNav","_month","labelWeekday","labelWeekNumber","labelWeekNumberHeader","labelYearDropdown","asHtmlElement","element","queryMonthEls","queryMonthEl","queryCaptionEl","queryWeeksEl","queryNavEl","queryWeekdaysEl","useAnimation","rootElRef","enabled","months","focused","previousRootElSnapshotRef","useRef","previousMonthsRef","animatingRef","useLayoutEffect","previousMonths","isAfterPreviousMonth","captionAnimationClass","weeksAnimationClass","previousRootElSnapshot","rootElSnapshot","currentMonthElSnapshot","previousMonthElSnapshot","captionEl","weeksEl","previousMonthEls","currentMonthEls","el","navEl","currentMonthEl","previousMonthEl","cleanUp","previousWeekdaysEl","previousCaptionEl","previousWeeksEl","getDates","displayMonths","maxDate","firstMonth","lastMonth","fixedWeeks","startWeekFirstDate","endWeekLastDate","nOfDays","nOfMonths","extraDates","daysToAdd","getDays","calendarMonths","initialDays","weekDays","getDisplayMonths","firstDisplayedMonth","calendarEndMonth","numberOfMonths","getInitialMonth","defaultMonth","initialMonth","getMonths","dayPickerMonths","firstDateOfFirstWeek","monthDates","nrOfDaysWithFixedWeeks","dayPickerMonth","getNavMonths","startMonth","endMonth","newDate","fromYear","toYear","fromMonth","toMonth","hasYearDropdown","getNextMonth","pagedNavigation","getPreviousMonth","calendarStartMonth","getWeeks","initialWeeks","useControlledValue","controlledValue","uncontrolledValue","setValue","useCalendar","setFirstMonth","newInitialMonth","disableNavigation","onMonthChange","isDayInCalendar","goToMonth","newMonth","FocusTargetPriority","isFocusableDay","calculateFocusTarget","getModifiers","isSelected","lastFocused","focusTarget","foundFocusTargetPriority","getFocusableDate","moveBy","moveDir","refDate","focusableDate","getNextFocus","refDay","attempt","targetMonth","focusDay","useFocus","calendar","autoFocus","setLastFocused","focusedDay","setFocused","nextFocus","useMulti","initiallySelected","onSelect","internallySelected","setSelected","selected","triggerDate","newDates","addToRange","initialRange","rangeContainsDayOfWeek","dayOfWeekArr","totalDays","totalDaysLimit","rangeOverlaps","rangeLeft","rangeRight","rangeContainsModifiers","functionMatchers","useRange","excludeDisabled","newRange","useSingle","compareDate","useSelection","single","multi","DayPicker","initialProps","labels","useMemo","defaultLabels","captionLayout","mode","navLayout","onDayBlur","onDayClick","onDayFocus","onDayKeyDown","onDayMouseEnter","onDayMouseLeave","onPrevClick","showWeekNumber","select","selectedValue","blur","isFocusTarget","moveFocus","weekdays","isInteractive","handleDayClick","handleDayFocus","handleDayBlur","handleDayKeyDown","keyMap","handleDayMouseEnter","handleDayMouseLeave","handleMonthChange","selectedMonth","handleYearChange","selectedYear","contextValue","monthControl","yearControl","ariaLabel","buttonVariant","defaultClassNames","ChevronLeftIcon","ChevronRightIcon","ChevronDownIcon","CalendarDayButton","React.useRef","React.useEffect","Popover","PopoverPrimitive.Root","PopoverTrigger","PopoverPrimitive.Trigger","PopoverContent","align","sideOffset","PopoverPrimitive.Portal","PopoverPrimitive.Content","schedules","createSchedule","updateSchedule","deleteSchedule","getPriorityColor","priority","ScheduleForm","CalendarIcon","PickupScheduler","editingSchedule","setEditingSchedule","deletingSchedule","setDeletingSchedule","handleCreateSchedule","handleUpdateSchedule","handleDeleteSchedule","todaysSchedules","upcomingSchedules","inProgressSchedules","completedSchedules","totalDistance","averageEfficiency","Navigation","Map","transactions","createTransaction","getQualityStatusColor","IoTWeightCapture","onWeightCaptured","isConnecting","setIsConnecting","isWeighing","setIsWeighing","currentWeight","setCurrentWeight","connectionError","setConnectionError","simulateConnection","mockIotData","newWeight","captureWeight","simulateManualWeight","manualWeight","Weight","PhotoCapture","onPhotoAdded","photos","fileInputRef","handleFileUpload","event","file","reader","simulatePhotoCapture","placeholderPhoto","photo","FileImage","TransactionEntry","capturedPhotos","setCapturedPhotos","saveSuccess","setSaveSuccess","handleWeightCaptured","handlePhotoAdded","calculateTotalAmount","calculateBalanceAmount","handleSaveTransaction","recentTransactions","pendingTransactions","todaysTransactions","verifiedTransactions","Verified","QrCode","Switch","checked","onCheckedChange","internalChecked","setInternalChecked","isChecked","handleChange","thresholds","resolveAlert","alertId","dismissAlert","updateThreshold","getAlertLevelColor","getAlertIcon","Info","getTypeIcon","Wrench","getSeverityIcon","AlertCard","onResolve","onDismiss","ThresholdConfigCard","onUpdate","localConfig","setLocalConfig","AlertsManagement","alertFilter","setAlertFilter","typeFilter","setTypeFilter","isMonitoringActive","setIsMonitoringActive","notificationSettings","setNotificationSettings","filteredAlerts","matchesLevel","matchesType","activeAlerts","warningAlerts","resolvedToday","systemStatus","handleResolveAlert","handleDismissAlert","handleAcknowledgeAll","threshold","VolumeX","RotateCcw","BiogasSangh","Gavel","renderPageContent","generateMockCustomers","generateMockContracts","generateMockInventory","generateMockOrders","generateMockInvoices","salesService","filters","customers","customer","contracts","contract","inventory","orders","order","invoices","orderId","sessionId","audioData","MetricCard","description","getChangeColor","getChangeIcon","RecentOrderItem","InventoryAlert","usagePercentage","performanceData","revenueData","gasTypeData","customerGrowthData","SimpleBarChart","maxValue","height","displayValue","SimplePieChart","SalesDashboard","setMetrics","recentOrders","setRecentOrders","inventoryAlerts","setInventoryAlerts","loadDashboardData","metricsResponse","ordersResponse","inventoryResponse","alertItems","percentage","isOnTarget","isNearTarget","CustomerCard","onEdit","onViewDetails","getTypeColor","getRiskColor","risk","creditUtilization","MoreHorizontal","Building","CustomerForm","onSave","CustomerManagement","setCustomers","filteredCustomers","setFilteredCustomers","setFilters","selectedCustomer","setSelectedCustomer","showCustomerForm","setShowCustomerForm","showCustomerDetails","setShowCustomerDetails","loadCustomers","handleCreateCustomer","handleEditCustomer","handleViewCustomerDetails","handleSaveCustomer","customerData","highRisk","totalRevenue","ContractCard","onView","onSign","daysRemaining","diffTime","contractProgress","now","elapsed","PenTool","ContractForm","calculateTotalValue","contractData","ContractManagement","setContracts","selectedContract","setSelectedContract","showContractForm","setShowContractForm","showContractDetails","setShowContractDetails","showSigningInterface","setShowSigningInterface","loadData","contractsResponse","customersResponse","handleCreateContract","handleEditContract","handleViewContract","handleSignContract","handleSaveContract","newVersion","getCustomerById","draft","expiringSoon","daysToExpiry","doc","Send","InventoryCard","availabilityPercentage","isLowStock","isPesoExpiring","InventoryManagement","setInventory","filteredInventory","setFilteredInventory","totalItems","lowStockItems","pesoExpiringItems","OrderCard","OrderManagement","setOrders","filteredOrders","setFilteredOrders","o","VoiceInvoicing","isRecording","setIsRecording","currentSession","setCurrentSession","transcription","setTranscription","confidence","setConfidence","startRecording","stopRecording","generateInvoice","Mic","MicOff","Square","Languages","PaymentTracking","setPayments","mockPayments","DeliveryScheduling","mockDeliveries","delivery","PriceBenchmarking","mockPriceData","getCompetitiveColor","ComplianceReports","mockComplianceData","SalesModule","ShoppingCart","CycleManagement","QualityControl","MaintenanceManagement","InventoryTransfer","SlurryManagement","RealTimeMonitoring","PageLoader","PurificationModule","basePath","Suspense","ExecutiveSummary","getKPIIcon","category","ArrowDownRight","Minus","getPerformanceColor","score","getConfidenceColor","formatValue","summaryText","VoiceAnalytics","queryHistory","setQueryHistory","consentGiven","setConsentGiven","showConsentDialog","setShowConsentDialog","privacySettings","setPrivacySettings","sessionTimeRemaining","setSessionTimeRemaining","encryptedData","setEncryptedData","privacyMode","setPrivacyMode","recognitionRef","synthRef","sessionTimeoutRef","simpleEncrypt","text","char","sanitizeSensitiveData","anonymizeTranscript","voiceCommands","executiveQueries","requestVoiceConsent","grantConsent","consentData","startVoiceSession","newSession","endVoiceSession","updatedSession","encryptedSessionData","processVoiceInput","processedInput","encryptedInput","SpeechRecognition","finalTranscript","interimTranscript","processVoiceQuery","speakResponse","storedConsent","consentAge","maxConsentAge","queryType","identifyQueryType","generateResponse","voiceQuery","lowerQuery","patterns","startListening","stopListening","stopSpeaking","toggleLanguage","command","example","idx","StrategicPlanning","selectedScenario","setSelectedScenario","selectedTimeframe","setSelectedTimeframe","showAdvancedMetrics","setShowAdvancedMetrics","scenarioModels","investmentOpportunities","geographicOpportunities","monteCarloResults","sensitivityData","riskAssessments","PlayCircle","PauseCircle","getSeverityScore","probability","impact","speakStrategicSummary","activeInitiatives","totalBudget","avgRoi","totalInvestmentOpps","avgNpv","topGeographicOpp","highRisks","r","exportReport","reportData","g","selectedScenarioData","scenario","initiative","opportunity","opportunities","totalInvestment","sector","sectorOpportunities","risks","region","variable","phase","goal","factor","CarbonAnalytics","selectedMetric","setSelectedMetric","showProjections","setShowProjections","carbonCredits","esgMetrics","marketTrends","complianceFrameworks","getESGRatingColor","rating","getCreditTypeIcon","Recycle","speakCarbonSummary","totalCredits","cc","avgPrice","exportCarbonReport","credit","typeCredits","frameworks","framework","req","currentPrice","pastPrice","opp","multiplier","projectedPrice","projectedRevenue","projection","target","CompetitiveIntelligence","selectedSegment","setSelectedSegment","showAdvancedAnalysis","setShowAdvancedAnalysis","competitors","marketSegments","swotAnalysis","benchmarkMetrics","competitiveAdvantages","getThreatColor","getImpactColor","TrendingFlat","getSustainabilityColor","sustainability","speakCompetitiveSummary","marketShare","ranking","strengthScore","exportCompetitiveReport","Lightbulb","company","segment","Crown","barrier","competitor","strength","weakness","move","threat","advantage","evidence","Network","categoryAdvantages","avgStrength","sustainabilityAdvantages","UrjaNeta","dashboardTabs","ScheduleManager","RouteOptimization","ActiveDeliveries","DeliveryConfirmation","VehicleManagement","DeliveryHistory","TransporterModule","RouteIcon","RoleBasedRouter","getDefaultRouteForUser","defaultRoute","PrivateRoute","Navigate","AppRoutes","App","Router","ReactDOM"],"ignoreList":[0,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201],"sources":["../../node_modules/react-dom/client.js","../../src/contexts/AuthContext.tsx","../../src/contexts/PlatformContext.tsx","../../src/pages/Login.tsx","../../src/lib/utils.ts","../../src/components/ui/button.tsx","../../src/components/ui/badge.tsx","../../src/components/ui/separator.tsx","../../src/components/layout/BaseLayout.tsx","../../src/components/ui/card.tsx","../../src/modules/admin/pages/Dashboard/Dashboard.tsx","../../src/components/ui/input.tsx","../../src/modules/admin/pages/UserManagement/UserManagement.tsx","../../src/modules/admin/pages/DeviceRegistry/DeviceRegistry.tsx","../../src/modules/admin/pages/AuditLogs/AuditLogs.tsx","../../src/modules/admin/pages/Reports/Reports.tsx","../../src/modules/admin/pages/Configuration/Configuration.tsx","../../src/modules/admin/Admin.container.tsx","../../src/pages/Admin.tsx","../../src/pages/UrjaSanyojak.tsx","../../src/pages/Dashboard.tsx","../../src/contexts/ExecutiveAnalyticsContext.tsx","../../src/components/ui/alert.tsx","../../src/components/ui/tabs.tsx","../../src/components/executive/ExecutiveCommandCenter.tsx","../../src/pages/ExecutiveDashboard.tsx","../../src/services/gaushala/api.ts","../../src/pages/gaushala/GauShalaHome.tsx","../../src/services/microservices/index.ts","../../src/components/gaushala/CowDungTransaction.tsx","../../src/components/gaushala/TransactionHistory.tsx","../../src/pages/gaushala/CattleManagement.tsx","../../src/pages/gaushala/AddCattle.tsx","../../src/pages/gaushala/CattleDetail.tsx","../../src/pages/gaushala/AllTransactions.tsx","../../src/pages/GauShala.tsx","../../src/components/ui/progress.tsx","../../src/pages/biogassangh/EnhancedBiogasDashboard.tsx","../../src/components/ui/select.tsx","../../src/pages/biogassangh/ModernDigesterMonitoring.tsx","../../src/components/ui/label.tsx","../../src/components/ui/textarea.tsx","../../src/components/ui/dialog.tsx","../../src/components/ui/table.tsx","../../src/pages/biogassangh/BatchManagement.tsx","../../src/pages/biogassangh/DisputeResolution.tsx","../../src/pages/biogassangh/PaymentReconciliation.tsx","../../node_modules/@date-fns/tz/tzName/index.js","../../node_modules/@date-fns/tz/tzOffset/index.js","../../node_modules/@date-fns/tz/date/mini.js","../../node_modules/@date-fns/tz/date/index.js","../../node_modules/react-day-picker/node_modules/date-fns/constants.js","../../node_modules/react-day-picker/node_modules/date-fns/constructFrom.js","../../node_modules/react-day-picker/node_modules/date-fns/toDate.js","../../node_modules/react-day-picker/node_modules/date-fns/addDays.js","../../node_modules/react-day-picker/node_modules/date-fns/addMonths.js","../../node_modules/react-day-picker/node_modules/date-fns/_lib/defaultOptions.js","../../node_modules/react-day-picker/node_modules/date-fns/startOfWeek.js","../../node_modules/react-day-picker/node_modules/date-fns/startOfISOWeek.js","../../node_modules/react-day-picker/node_modules/date-fns/getISOWeekYear.js","../../node_modules/react-day-picker/node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.js","../../node_modules/react-day-picker/node_modules/date-fns/_lib/normalizeDates.js","../../node_modules/react-day-picker/node_modules/date-fns/startOfDay.js","../../node_modules/react-day-picker/node_modules/date-fns/differenceInCalendarDays.js","../../node_modules/react-day-picker/node_modules/date-fns/startOfISOWeekYear.js","../../node_modules/react-day-picker/node_modules/date-fns/addWeeks.js","../../node_modules/react-day-picker/node_modules/date-fns/addYears.js","../../node_modules/react-day-picker/node_modules/date-fns/max.js","../../node_modules/react-day-picker/node_modules/date-fns/min.js","../../node_modules/react-day-picker/node_modules/date-fns/isSameDay.js","../../node_modules/react-day-picker/node_modules/date-fns/isDate.js","../../node_modules/react-day-picker/node_modules/date-fns/isValid.js","../../node_modules/react-day-picker/node_modules/date-fns/differenceInCalendarMonths.js","../../node_modules/react-day-picker/node_modules/date-fns/endOfMonth.js","../../node_modules/react-day-picker/node_modules/date-fns/_lib/normalizeInterval.js","../../node_modules/react-day-picker/node_modules/date-fns/eachMonthOfInterval.js","../../node_modules/react-day-picker/node_modules/date-fns/startOfMonth.js","../../node_modules/react-day-picker/node_modules/date-fns/endOfYear.js","../../node_modules/react-day-picker/node_modules/date-fns/startOfYear.js","../../node_modules/react-day-picker/node_modules/date-fns/endOfWeek.js","../../node_modules/react-day-picker/node_modules/date-fns/endOfISOWeek.js","../../node_modules/react-day-picker/node_modules/date-fns/locale/en-US/_lib/formatDistance.js","../../node_modules/react-day-picker/node_modules/date-fns/locale/_lib/buildFormatLongFn.js","../../node_modules/react-day-picker/node_modules/date-fns/locale/en-US/_lib/formatLong.js","../../node_modules/react-day-picker/node_modules/date-fns/locale/en-US/_lib/formatRelative.js","../../node_modules/react-day-picker/node_modules/date-fns/locale/_lib/buildLocalizeFn.js","../../node_modules/react-day-picker/node_modules/date-fns/locale/en-US/_lib/localize.js","../../node_modules/react-day-picker/node_modules/date-fns/locale/_lib/buildMatchFn.js","../../node_modules/react-day-picker/node_modules/date-fns/locale/_lib/buildMatchPatternFn.js","../../node_modules/react-day-picker/node_modules/date-fns/locale/en-US/_lib/match.js","../../node_modules/react-day-picker/node_modules/date-fns/locale/en-US.js","../../node_modules/react-day-picker/node_modules/date-fns/getDayOfYear.js","../../node_modules/react-day-picker/node_modules/date-fns/getISOWeek.js","../../node_modules/react-day-picker/node_modules/date-fns/getWeekYear.js","../../node_modules/react-day-picker/node_modules/date-fns/startOfWeekYear.js","../../node_modules/react-day-picker/node_modules/date-fns/getWeek.js","../../node_modules/react-day-picker/node_modules/date-fns/_lib/addLeadingZeros.js","../../node_modules/react-day-picker/node_modules/date-fns/_lib/format/lightFormatters.js","../../node_modules/react-day-picker/node_modules/date-fns/_lib/format/formatters.js","../../node_modules/react-day-picker/node_modules/date-fns/_lib/format/longFormatters.js","../../node_modules/react-day-picker/node_modules/date-fns/_lib/protectedTokens.js","../../node_modules/react-day-picker/node_modules/date-fns/format.js","../../node_modules/react-day-picker/node_modules/date-fns/getDaysInMonth.js","../../node_modules/react-day-picker/node_modules/date-fns/getMonth.js","../../node_modules/react-day-picker/node_modules/date-fns/getYear.js","../../node_modules/react-day-picker/node_modules/date-fns/isAfter.js","../../node_modules/react-day-picker/node_modules/date-fns/isBefore.js","../../node_modules/react-day-picker/node_modules/date-fns/isSameMonth.js","../../node_modules/react-day-picker/node_modules/date-fns/isSameYear.js","../../node_modules/react-day-picker/node_modules/date-fns/setMonth.js","../../node_modules/react-day-picker/node_modules/date-fns/setYear.js","../../node_modules/react-day-picker/dist/esm/helpers/getBroadcastWeeksInMonth.js","../../node_modules/react-day-picker/dist/esm/helpers/startOfBroadcastWeek.js","../../node_modules/react-day-picker/dist/esm/helpers/endOfBroadcastWeek.js","../../node_modules/react-day-picker/dist/esm/classes/DateLib.js","../../node_modules/react-day-picker/dist/esm/classes/CalendarDay.js","../../node_modules/react-day-picker/dist/esm/classes/CalendarMonth.js","../../node_modules/react-day-picker/dist/esm/classes/CalendarWeek.js","../../node_modules/react-day-picker/dist/esm/components/Button.js","../../node_modules/react-day-picker/dist/esm/components/CaptionLabel.js","../../node_modules/react-day-picker/dist/esm/components/Chevron.js","../../node_modules/react-day-picker/dist/esm/components/Day.js","../../node_modules/react-day-picker/dist/esm/components/DayButton.js","../../node_modules/react-day-picker/dist/esm/UI.js","../../node_modules/react-day-picker/dist/esm/components/Dropdown.js","../../node_modules/react-day-picker/dist/esm/components/DropdownNav.js","../../node_modules/react-day-picker/dist/esm/components/Footer.js","../../node_modules/react-day-picker/dist/esm/components/Month.js","../../node_modules/react-day-picker/dist/esm/components/MonthCaption.js","../../node_modules/react-day-picker/dist/esm/components/MonthGrid.js","../../node_modules/react-day-picker/dist/esm/components/Months.js","../../node_modules/react-day-picker/dist/esm/useDayPicker.js","../../node_modules/react-day-picker/dist/esm/components/MonthsDropdown.js","../../node_modules/react-day-picker/dist/esm/components/Nav.js","../../node_modules/react-day-picker/dist/esm/components/NextMonthButton.js","../../node_modules/react-day-picker/dist/esm/components/Option.js","../../node_modules/react-day-picker/dist/esm/components/PreviousMonthButton.js","../../node_modules/react-day-picker/dist/esm/components/Root.js","../../node_modules/react-day-picker/dist/esm/components/Select.js","../../node_modules/react-day-picker/dist/esm/components/Week.js","../../node_modules/react-day-picker/dist/esm/components/Weekday.js","../../node_modules/react-day-picker/dist/esm/components/Weekdays.js","../../node_modules/react-day-picker/dist/esm/components/WeekNumber.js","../../node_modules/react-day-picker/dist/esm/components/WeekNumberHeader.js","../../node_modules/react-day-picker/dist/esm/components/Weeks.js","../../node_modules/react-day-picker/dist/esm/components/YearsDropdown.js","../../node_modules/react-day-picker/dist/esm/utils/rangeIncludesDate.js","../../node_modules/react-day-picker/dist/esm/utils/typeguards.js","../../node_modules/react-day-picker/dist/esm/utils/dateMatchModifiers.js","../../node_modules/react-day-picker/dist/esm/helpers/createGetModifiers.js","../../node_modules/react-day-picker/dist/esm/helpers/getClassNamesForModifiers.js","../../node_modules/react-day-picker/dist/esm/helpers/getComponents.js","../../node_modules/react-day-picker/dist/esm/helpers/getDataAttributes.js","../../node_modules/react-day-picker/dist/esm/helpers/getDefaultClassNames.js","../../node_modules/react-day-picker/dist/esm/formatters/formatCaption.js","../../node_modules/react-day-picker/dist/esm/formatters/formatDay.js","../../node_modules/react-day-picker/dist/esm/formatters/formatMonthDropdown.js","../../node_modules/react-day-picker/dist/esm/formatters/formatWeekdayName.js","../../node_modules/react-day-picker/dist/esm/formatters/formatWeekNumber.js","../../node_modules/react-day-picker/dist/esm/formatters/formatWeekNumberHeader.js","../../node_modules/react-day-picker/dist/esm/formatters/formatYearDropdown.js","../../node_modules/react-day-picker/dist/esm/helpers/getFormatters.js","../../node_modules/react-day-picker/dist/esm/helpers/getMonthOptions.js","../../node_modules/react-day-picker/dist/esm/helpers/getStyleForModifiers.js","../../node_modules/react-day-picker/dist/esm/helpers/getWeekdays.js","../../node_modules/react-day-picker/dist/esm/helpers/getYearOptions.js","../../node_modules/react-day-picker/dist/esm/labels/labelDayButton.js","../../node_modules/react-day-picker/dist/esm/labels/labelGrid.js","../../node_modules/react-day-picker/dist/esm/labels/labelGridcell.js","../../node_modules/react-day-picker/dist/esm/labels/labelMonthDropdown.js","../../node_modules/react-day-picker/dist/esm/labels/labelNav.js","../../node_modules/react-day-picker/dist/esm/labels/labelNext.js","../../node_modules/react-day-picker/dist/esm/labels/labelPrevious.js","../../node_modules/react-day-picker/dist/esm/labels/labelWeekday.js","../../node_modules/react-day-picker/dist/esm/labels/labelWeekNumber.js","../../node_modules/react-day-picker/dist/esm/labels/labelWeekNumberHeader.js","../../node_modules/react-day-picker/dist/esm/labels/labelYearDropdown.js","../../node_modules/react-day-picker/dist/esm/useAnimation.js","../../node_modules/react-day-picker/dist/esm/helpers/getDates.js","../../node_modules/react-day-picker/dist/esm/helpers/getDays.js","../../node_modules/react-day-picker/dist/esm/helpers/getDisplayMonths.js","../../node_modules/react-day-picker/dist/esm/helpers/getInitialMonth.js","../../node_modules/react-day-picker/dist/esm/helpers/getMonths.js","../../node_modules/react-day-picker/dist/esm/helpers/getNavMonth.js","../../node_modules/react-day-picker/dist/esm/helpers/getNextMonth.js","../../node_modules/react-day-picker/dist/esm/helpers/getPreviousMonth.js","../../node_modules/react-day-picker/dist/esm/helpers/getWeeks.js","../../node_modules/react-day-picker/dist/esm/helpers/useControlledValue.js","../../node_modules/react-day-picker/dist/esm/useCalendar.js","../../node_modules/react-day-picker/dist/esm/helpers/calculateFocusTarget.js","../../node_modules/react-day-picker/dist/esm/helpers/getFocusableDate.js","../../node_modules/react-day-picker/dist/esm/helpers/getNextFocus.js","../../node_modules/react-day-picker/dist/esm/useFocus.js","../../node_modules/react-day-picker/dist/esm/selection/useMulti.js","../../node_modules/react-day-picker/dist/esm/utils/addToRange.js","../../node_modules/react-day-picker/dist/esm/utils/rangeContainsDayOfWeek.js","../../node_modules/react-day-picker/dist/esm/utils/rangeOverlaps.js","../../node_modules/react-day-picker/dist/esm/utils/rangeContainsModifiers.js","../../node_modules/react-day-picker/dist/esm/selection/useRange.js","../../node_modules/react-day-picker/dist/esm/selection/useSingle.js","../../node_modules/react-day-picker/dist/esm/useSelection.js","../../node_modules/react-day-picker/dist/esm/DayPicker.js","../../src/components/ui/calendar.tsx","../../src/components/ui/popover.tsx","../../src/pages/biogassangh/PickupScheduler.tsx","../../src/pages/biogassangh/TransactionEntry.tsx","../../src/components/ui/switch.tsx","../../src/pages/biogassangh/AlertsManagement.tsx","../../src/components/BiogasSanghProper.tsx","../../src/modules/sales/services/salesService.ts","../../src/modules/sales/pages/SalesDashboard.tsx","../../src/modules/sales/pages/CustomerManagement.tsx","../../src/modules/sales/pages/ContractManagement.tsx","../../src/modules/sales/pages/InventoryManagement.tsx","../../src/modules/sales/pages/OrderManagement.tsx","../../src/modules/sales/pages/VoiceInvoicing.tsx","../../src/modules/sales/pages/PaymentTracking.tsx","../../src/modules/sales/pages/DeliveryScheduling.tsx","../../src/modules/sales/pages/PriceBenchmarking.tsx","../../src/modules/sales/pages/ComplianceReports.tsx","../../src/modules/sales/Sales.container.tsx","../../src/modules/purification/Purification.container.tsx","../../src/components/executive/ExecutiveSummary.tsx","../../src/components/voice/VoiceAnalytics.tsx","../../src/components/executive/StrategicPlanning.tsx","../../src/components/executive/CarbonAnalytics.tsx","../../src/components/executive/CompetitiveIntelligence.tsx","../../src/pages/UrjaNeta.tsx","../../src/modules/transporter/Transporter.container.tsx","../../src/components/routing/RoleBasedRouter.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","import React, { createContext, useContext, useEffect, useState } from 'react'\r\n\r\nexport type UserRole = 'field_worker' | 'cluster_manager' | 'cbg_sales' | 'business_dev' | 'admin' | 'senior_leader' | 'purification_operator' | 'transporter'\r\n\r\nexport interface Permission {\r\n  module: string\r\n  actions: string[]\r\n}\r\n\r\nexport interface User {\r\n  id: string\r\n  phone: string\r\n  email?: string\r\n  name: string\r\n  role: UserRole\r\n  department?: string\r\n  permissions: Permission[]\r\n  lastAccess?: Date\r\n  appType: 'gausakhi' | 'biogassangh' | 'urjavyapar' | 'urjasanyojak' | 'admin' | 'urjaneta' | 'shuddhidoot'\r\n  executiveLevel?: 'ceo' | 'cfo' | 'coo' | 'vp' | 'director'\r\n  // Backend response fields\r\n  externalId?: string\r\n  locale?: string\r\n  kycStatus?: string\r\n  isActive?: boolean\r\n  roles?: string[]\r\n  governmentAccess?: any[]\r\n}\r\n\r\nexport const ROLE_PERMISSIONS: Record<UserRole, Permission[]> = {\r\n  field_worker: [\r\n    { module: 'rfid', actions: ['scan', 'sync'] },\r\n    { module: 'collection', actions: ['log', 'voice'] },\r\n    { module: 'iot', actions: ['sync', 'update'] },\r\n    { module: 'gps', actions: ['track', 'update'] }\r\n  ],\r\n  cluster_manager: [\r\n    { module: 'slurry', actions: ['monitor', 'alert'] },\r\n    { module: 'digester', actions: ['monitor', 'alert'] },\r\n    { module: 'pickup', actions: ['schedule', 'manage'] },\r\n    { module: 'disputes', actions: ['resolve', 'track'] }\r\n  ],\r\n  cbg_sales: [\r\n    { module: 'inventory', actions: ['manage', 'track'] },\r\n    { module: 'invoicing', actions: ['create', 'send'] },\r\n    { module: 'crm', actions: ['manage', 'update'] },\r\n    { module: 'peso', actions: ['comply', 'report'] },\r\n    { module: 'upi', actions: ['process', 'reconcile'] }\r\n  ],\r\n  business_dev: [\r\n    { module: 'mapping', actions: ['create', 'update'] },\r\n    { module: 'subsidy', actions: ['assist', 'track'] },\r\n    { module: 'feasibility', actions: ['calculate', 'analyze'] },\r\n    { module: 'pipeline', actions: ['track', 'update'] }\r\n  ],\r\n  admin: [\r\n    { module: 'users', actions: ['create', 'read', 'update', 'delete'] },\r\n    { module: 'devices', actions: ['manage', 'configure'] },\r\n    { module: 'permissions', actions: ['assign', 'revoke'] },\r\n    { module: 'audit', actions: ['view', 'export'] },\r\n    { module: 'alerts', actions: ['configure', 'manage'] }\r\n  ],\r\n  senior_leader: [\r\n    { module: 'voice_kpis', actions: ['view', 'analyze'] },\r\n    { module: 'revenue', actions: ['predict', 'analyze'] },\r\n    { module: 'carbon', actions: ['trade', 'track'] },\r\n    { module: 'strategic', actions: ['plan', 'approve'] }\r\n  ],\r\n  purification_operator: [\r\n    { module: 'ch4_monitoring', actions: ['monitor', 'alert'] },\r\n    { module: 'flow_rate', actions: ['monitor', 'adjust'] },\r\n    { module: 'maintenance', actions: ['schedule', 'track'] },\r\n    { module: 'voice_alerts', actions: ['receive', 'respond'] }\r\n  ],\r\n  transporter: [\r\n    { module: 'vehicle_management', actions: ['manage', 'track'] },\r\n    { module: 'route_optimization', actions: ['optimize', 'plan'] },\r\n    { module: 'delivery_tracking', actions: ['track', 'update'] },\r\n    { module: 'schedule_management', actions: ['schedule', 'modify'] },\r\n    { module: 'logistics', actions: ['coordinate', 'monitor'] }\r\n  ]\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null\r\n  loading: boolean\r\n  login: (phone: string, password: string) => Promise<void>\r\n  logout: () => Promise<void>\r\n  hasPermission: (module: string, action: string) => boolean\r\n  isExecutive: () => boolean\r\n  getAccessLevel: () => 'high' | 'medium' | 'low'\r\n  accessToken?: string\r\n  refreshToken?: string\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined)\r\n\r\nexport function useAuth() {\r\n  const context = useContext(AuthContext)\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider')\r\n  }\r\n  return context\r\n}\r\n\r\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\r\n  const [user, setUser] = useState<User | null>(null)\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  // Enhanced permission checking\r\n  const hasPermission = (module: string, action: string): boolean => {\r\n    if (!user) return false\r\n\r\n    const userPermissions = user.permissions || ROLE_PERMISSIONS[user.role] || []\r\n    const modulePermissions = userPermissions.find(p => p.module === module)\r\n    return modulePermissions?.actions.includes(action) || false\r\n  }\r\n\r\n  // Check if user has executive-level access\r\n  const isExecutive = (): boolean => {\r\n    if (!user) return false\r\n    return user.role === 'senior_leader' || user.role === 'admin' || !!user.executiveLevel\r\n  }\r\n\r\n  // Get user access level for security controls\r\n  const getAccessLevel = (): 'high' | 'medium' | 'low' => {\r\n    if (!user) return 'low'\r\n\r\n    if (user.executiveLevel) {\r\n      return user.executiveLevel === 'ceo' || user.executiveLevel === 'cfo' ? 'high' : 'medium'\r\n    }\r\n\r\n    switch (user.role) {\r\n      case 'senior_leader':\r\n      case 'admin':\r\n        return 'high'\r\n      case 'cbg_sales':\r\n      case 'business_dev':\r\n        return 'medium'\r\n      default:\r\n        return 'low'\r\n    }\r\n  }\r\n\r\n  // Backend authentication with JWT microservices integration\r\n  const login = async (phone: string, password: string) => {\r\n    try {\r\n      console.log('🔐 Attempting login with SAUBHAGYA microservices API...')\r\n\r\n      // Import the API service dynamically to avoid circular dependencies\r\n      const { apiService } = await import('../services/api')\r\n\r\n      // Use email format for login (converting phone to email format for demo)\r\n      const email = phone.includes('@') ? phone : `${phone.replace('+91', '')}@saubhagya.com`\r\n\r\n      const loginResponse = await apiService.login(email, password)\r\n\r\n      if (loginResponse.success && loginResponse.data) {\r\n        const { user: apiUser, token } = loginResponse.data\r\n\r\n        // Map API user to our User interface\r\n        // Override with correct role mapping for demo credentials\r\n        const correctRole = getCorrectRoleForPhone(phone) || mapApiRoleToUserRole(apiUser.role)\r\n        const correctAppType = getCorrectAppTypeForPhone(phone) || getAppTypeFromRole(apiUser.role)\r\n\r\n        const mappedUser: User = {\r\n          id: apiUser.id,\r\n          phone: phone,\r\n          email: apiUser.email,\r\n          name: getCorrectNameForPhone(phone) || apiUser.name,\r\n          role: correctRole,\r\n          department: getDepartmentFromRole(correctRole),\r\n          permissions: mapApiPermissions(apiUser.permissions || []),\r\n          lastAccess: new Date(),\r\n          appType: correctAppType,\r\n          executiveLevel: getExecutiveLevelFromRole(correctRole),\r\n          // API fields\r\n          isActive: true,\r\n          roles: [correctRole]\r\n        }\r\n\r\n        setUser(mappedUser)\r\n\r\n        // Store tokens and user data\r\n        localStorage.setItem('user', JSON.stringify(mappedUser))\r\n        localStorage.setItem('saubhagya_jwt_token', token)\r\n        localStorage.setItem('sessionStart', new Date().toISOString())\r\n\r\n        console.log('✅ User logged in successfully with JWT:', mappedUser)\r\n        return\r\n\r\n      } else {\r\n        console.warn('🚫 Backend authentication failed, falling back to demo credentials')\r\n        throw new Error(loginResponse.error || 'Authentication failed')\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('💥 Backend authentication failed, trying fallback:', error)\r\n      // Fallback to demo credentials\r\n      return loginWithFallback(phone, password)\r\n    }\r\n  }\r\n\r\n  // Fallback authentication for demo purposes\r\n  const loginWithFallback = async (phone: string, password: string) => {\r\n    // Demo phone-based users for 7 different SAUBHAGYA apps\r\n    const mockUsers: Record<string, User> = {\r\n      '+919876543210': {\r\n        id: 'fw-001',\r\n        phone: '+919876543210',\r\n        email: 'fieldworker@saubhagya.com',\r\n        name: 'Ramesh Kumar (Field Worker)',\r\n        role: 'field_worker',\r\n        department: 'Field Operations',\r\n        appType: 'gausakhi',\r\n        permissions: ROLE_PERMISSIONS.field_worker,\r\n        lastAccess: new Date()\r\n      },\r\n      '+918765432109': {\r\n        id: 'cm-001',\r\n        phone: '+918765432109',\r\n        email: 'clustermanager@saubhagya.com',\r\n        name: 'Suresh Patel (Cluster Manager)',\r\n        role: 'cluster_manager',\r\n        department: 'Cluster Operations',\r\n        appType: 'biogassangh',\r\n        permissions: ROLE_PERMISSIONS.cluster_manager,\r\n        lastAccess: new Date()\r\n      },\r\n      '+917654321098': {\r\n        id: 'cs-001',\r\n        phone: '+917654321098',\r\n        email: 'cbgsales@saubhagya.com',\r\n        name: 'Priya Sharma (CBG Sales Executive)',\r\n        role: 'cbg_sales',\r\n        department: 'Sales & Marketing',\r\n        appType: 'urjavyapar',\r\n        permissions: ROLE_PERMISSIONS.cbg_sales,\r\n        lastAccess: new Date()\r\n      },\r\n      // '+916543210987': {\r\n      //   id: 'bd-001',\r\n      //   phone: '+916543210987',\r\n      //   email: 'businessdev@saubhagya.com',\r\n      //   name: 'Amit Singh (Business Development)',\r\n      //   role: 'business_dev',\r\n      //   department: 'Business Development',\r\n      //   appType: 'urjasanyojak',\r\n      //   permissions: ROLE_PERMISSIONS.business_dev,\r\n      //   lastAccess: new Date()\r\n      // },\r\n      '+915432109876': {\r\n        id: 'admin-001',\r\n        phone: '+915432109876',\r\n        email: 'admin@saubhagya.com',\r\n        name: 'System Administrator',\r\n        role: 'admin',\r\n        department: 'IT Administration',\r\n        appType: 'admin',\r\n        permissions: ROLE_PERMISSIONS.admin,\r\n        lastAccess: new Date()\r\n      },\r\n      // '+914321098765': {\r\n      //   id: 'sl-001',\r\n      //   phone: '+914321098765',\r\n      //   email: 'seniorleader@saubhagya.com',\r\n      //   name: 'Dr. Rajesh Kumar (CEO)',\r\n      //   role: 'senior_leader',\r\n      //   department: 'Executive Leadership',\r\n      //   appType: 'urjaneta',\r\n      //   executiveLevel: 'ceo',\r\n      //   permissions: ROLE_PERMISSIONS.senior_leader,\r\n      //   lastAccess: new Date()\r\n      // },\r\n      '+913210987654': {\r\n        id: 'po-001',\r\n        phone: '+913210987654',\r\n        email: 'purificationop@saubhagya.com',\r\n        name: 'Vinod Yadav (Purification Operator)',\r\n        role: 'purification_operator',\r\n        department: 'Purification Operations',\r\n        appType: 'shuddhidoot',\r\n        permissions: ROLE_PERMISSIONS.purification_operator,\r\n        lastAccess: new Date()\r\n      },\r\n      '+912109876543': {\r\n        id: 't-001',\r\n        phone: '+912109876543',\r\n        email: 'transporter@saubhagya.com',\r\n        name: 'Ravi Sharma (Transporter)',\r\n        role: 'transporter',\r\n        department: 'Logistics & Transport',\r\n        appType: 'admin', // Using admin app type as transport module is integrated there\r\n        permissions: ROLE_PERMISSIONS.transporter,\r\n        lastAccess: new Date()\r\n      }\r\n    }\r\n\r\n    const mockUser = mockUsers[phone]\r\n    if (!mockUser) {\r\n      throw new Error('Invalid phone number or password')\r\n    }\r\n\r\n    // Simple password validation for demo (in real app, this would be properly hashed)\r\n    // Accept multiple valid passwords for different user types\r\n    const validPasswords = ['password123', 'fieldworker123', 'admin123'];\r\n    if (!validPasswords.includes(password)) {\r\n      throw new Error('Invalid phone number or password')\r\n    }\r\n\r\n    setUser(mockUser)\r\n    localStorage.setItem('user', JSON.stringify(mockUser))\r\n    localStorage.setItem('sessionStart', new Date().toISOString())\r\n\r\n    console.log('Fallback login successful:', mockUser)\r\n  }\r\n\r\n  const logout = async () => {\r\n    try {\r\n      // Import the API service dynamically to avoid circular dependencies\r\n      const { apiService } = await import('../services/api')\r\n      await apiService.logout()\r\n    } catch (error) {\r\n      console.error('Backend logout error:', error)\r\n    }\r\n\r\n    console.log('🔓 Logging out user, clearing session data')\r\n    setUser(null)\r\n    localStorage.removeItem('user')\r\n    localStorage.removeItem('saubhagya_jwt_token')\r\n    localStorage.removeItem('accessToken')\r\n    localStorage.removeItem('refreshToken')\r\n    localStorage.removeItem('sessionStart')\r\n    localStorage.removeItem('voiceSessionData')\r\n  }\r\n\r\n  useEffect(() => {\r\n    // Check for existing user session with security validation\r\n    const savedUser = localStorage.getItem('user')\r\n    const sessionStart = localStorage.getItem('sessionStart')\r\n\r\n    if (savedUser && sessionStart) {\r\n      const parsedUser = JSON.parse(savedUser)\r\n      const sessionAge = Date.now() - new Date(sessionStart).getTime()\r\n      const maxSessionAge = parsedUser.role === 'executive' ? 4 * 60 * 60 * 1000 : 8 * 60 * 60 * 1000 // 4h for exec, 8h for others\r\n\r\n      if (sessionAge > maxSessionAge) {\r\n        console.log('Session expired, logging out')\r\n        logout()\r\n      } else {\r\n        // Update permissions to latest role definition\r\n        parsedUser.permissions = ROLE_PERMISSIONS[parsedUser.role] || []\r\n        setUser(parsedUser)\r\n      }\r\n    }\r\n    setLoading(false)\r\n  }, [])\r\n\r\n  // Monitor executive sessions\r\n  useEffect(() => {\r\n    if (user && isExecutive()) {\r\n      const interval = setInterval(() => {\r\n        const sessionStart = localStorage.getItem('sessionStart')\r\n        if (sessionStart) {\r\n          const sessionAge = Date.now() - new Date(sessionStart).getTime()\r\n          const warningTime = 3.5 * 60 * 60 * 1000 // Warn at 3.5 hours for executives\r\n\r\n          if (sessionAge > warningTime && sessionAge < warningTime + 60000) {\r\n            console.warn('Executive session will expire in 30 minutes')\r\n          }\r\n        }\r\n      }, 60000) // Check every minute\r\n\r\n      return () => clearInterval(interval)\r\n    }\r\n  }, [user])\r\n\r\n  const value = {\r\n    user,\r\n    loading,\r\n    login,\r\n    logout,\r\n    hasPermission,\r\n    isExecutive,\r\n    getAccessLevel,\r\n    accessToken: localStorage.getItem('accessToken'),\r\n    refreshToken: localStorage.getItem('refreshToken')\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n\r\n// Helper functions to map API data to frontend types\r\nfunction mapApiRoleToUserRole(apiRole: string): UserRole {\r\n  switch (apiRole.toLowerCase()) {\r\n    case 'admin':\r\n    case 'administrator':\r\n      return 'admin'\r\n    case 'field_worker':\r\n    case 'farmer':\r\n      return 'field_worker'\r\n    case 'cluster_manager':\r\n      return 'cluster_manager'\r\n    case 'cbg_sales':\r\n    case 'sales_executive':\r\n      return 'cbg_sales'\r\n    case 'business_dev':\r\n    case 'business_developer':\r\n      return 'business_dev'\r\n    case 'senior_leader':\r\n    case 'executive':\r\n    case 'ceo':\r\n    case 'cfo':\r\n      return 'senior_leader'\r\n    case 'purification_operator':\r\n    case 'operator':\r\n      return 'purification_operator'\r\n    default:\r\n      return 'admin'\r\n  }\r\n}\r\n\r\nfunction mapApiPermissions(apiPermissions: string[]): Permission[] {\r\n  // Map API permissions to our Permission interface\r\n  const permissionMap: Record<string, Permission> = {\r\n    'cattle:read': { module: 'rfid', actions: ['scan', 'sync'] },\r\n    'cattle:write': { module: 'collection', actions: ['log', 'voice'] },\r\n    'transactions:read': { module: 'disputes', actions: ['resolve', 'track'] },\r\n    'dashboard:read': { module: 'voice_kpis', actions: ['view', 'analyze'] },\r\n    'users:manage': { module: 'users', actions: ['create', 'read', 'update', 'delete'] }\r\n  }\r\n\r\n  const mappedPermissions: Permission[] = []\r\n  apiPermissions.forEach(perm => {\r\n    if (permissionMap[perm]) {\r\n      mappedPermissions.push(permissionMap[perm])\r\n    }\r\n  })\r\n\r\n  // If no permissions mapped, use role-based defaults\r\n  if (mappedPermissions.length === 0) {\r\n    return ROLE_PERMISSIONS.admin\r\n  }\r\n\r\n  return mappedPermissions\r\n}\r\n\r\n// Helper functions to map backend data to frontend types (legacy support)\r\nfunction mapBackendRoleToUserRole(backendRole: string): UserRole {\r\n  switch (backendRole) {\r\n    case 'FARMER':\r\n    case 'FIELD_WORKER':\r\n      return 'field_worker'\r\n    case 'CLUSTER_MANAGER':\r\n      return 'cluster_manager'\r\n    case 'CBG_SALES':\r\n    case 'SALES_EXECUTIVE':\r\n      return 'cbg_sales'\r\n    case 'BUSINESS_DEV':\r\n    case 'BUSINESS_DEVELOPER':\r\n      return 'business_dev'\r\n    case 'ADMIN':\r\n    case 'ADMINISTRATOR':\r\n      return 'admin'\r\n    case 'SENIOR_LEADER':\r\n    case 'EXECUTIVE':\r\n    case 'CEO':\r\n    case 'CFO':\r\n      return 'senior_leader'\r\n    case 'PURIFICATION_OPERATOR':\r\n    case 'OPERATOR':\r\n      return 'purification_operator'\r\n    default:\r\n      return 'field_worker'\r\n  }\r\n}\r\n\r\nfunction getDepartmentFromRole(backendRole: string): string {\r\n  switch (backendRole) {\r\n    case 'FARMER':\r\n    case 'FIELD_WORKER':\r\n      return 'Field Operations'\r\n    case 'CLUSTER_MANAGER':\r\n      return 'Cluster Operations'\r\n    case 'CBG_SALES':\r\n    case 'SALES_EXECUTIVE':\r\n      return 'Sales & Marketing'\r\n    case 'BUSINESS_DEV':\r\n    case 'BUSINESS_DEVELOPER':\r\n      return 'Business Development'\r\n    case 'ADMIN':\r\n    case 'ADMINISTRATOR':\r\n      return 'IT Administration'\r\n    case 'SENIOR_LEADER':\r\n    case 'EXECUTIVE':\r\n    case 'CEO':\r\n    case 'CFO':\r\n      return 'Executive Leadership'\r\n    case 'PURIFICATION_OPERATOR':\r\n    case 'OPERATOR':\r\n      return 'Purification Operations'\r\n    default:\r\n      return 'Field Operations'\r\n  }\r\n}\r\n\r\nfunction getAppTypeFromRole(backendRole: string): User['appType'] {\r\n  switch (backendRole) {\r\n    case 'FARMER':\r\n    case 'FIELD_WORKER':\r\n      return 'gausakhi'\r\n    case 'CLUSTER_MANAGER':\r\n      return 'biogassangh'\r\n    case 'CBG_SALES':\r\n    case 'SALES_EXECUTIVE':\r\n      return 'urjavyapar'\r\n    case 'BUSINESS_DEV':\r\n    case 'BUSINESS_DEVELOPER':\r\n      return 'urjasanyojak'\r\n    case 'ADMIN':\r\n    case 'ADMINISTRATOR':\r\n      return 'admin'\r\n    case 'SENIOR_LEADER':\r\n    case 'EXECUTIVE':\r\n    case 'CEO':\r\n    case 'CFO':\r\n      return 'urjaneta'\r\n    case 'PURIFICATION_OPERATOR':\r\n    case 'OPERATOR':\r\n      return 'shuddhidoot'\r\n    default:\r\n      return 'gausakhi'\r\n  }\r\n}\r\n\r\nfunction getExecutiveLevelFromRole(backendRole: string): User['executiveLevel'] {\r\n  switch (backendRole) {\r\n    case 'CEO':\r\n      return 'ceo'\r\n    case 'CFO':\r\n      return 'cfo'\r\n    case 'COO':\r\n      return 'coo'\r\n    case 'VP':\r\n      return 'vp'\r\n    case 'DIRECTOR':\r\n      return 'director'\r\n    default:\r\n      return undefined\r\n  }\r\n}\r\n\r\nfunction mapBackendPermissions(backendPermissions: string[]): Permission[] {\r\n  // Map backend permissions to our Permission interface\r\n  const permissionMap: Record<string, Permission> = {\r\n    'CONTRIBUTE_BIOGAS': { module: 'rfid', actions: ['scan', 'sync'] },\r\n    'VIEW_HISTORY': { module: 'collection', actions: ['log', 'voice'] },\r\n    'RAISE_DISPUTE': { module: 'disputes', actions: ['resolve', 'track'] },\r\n    'MANAGE_INVENTORY': { module: 'inventory', actions: ['manage', 'track'] },\r\n    'CREATE_INVOICE': { module: 'invoicing', actions: ['create', 'send'] },\r\n    'MANAGE_CRM': { module: 'crm', actions: ['manage', 'update'] },\r\n    'ADMIN_ACCESS': { module: 'users', actions: ['create', 'read', 'update', 'delete'] },\r\n    'VIEW_ANALYTICS': { module: 'voice_kpis', actions: ['view', 'analyze'] },\r\n    'MONITOR_CH4': { module: 'ch4_monitoring', actions: ['monitor', 'alert'] }\r\n  }\r\n\r\n  const mappedPermissions: Permission[] = []\r\n  backendPermissions.forEach(perm => {\r\n    if (permissionMap[perm]) {\r\n      mappedPermissions.push(permissionMap[perm])\r\n    }\r\n  })\r\n\r\n  // If no permissions mapped, use role-based defaults\r\n  if (mappedPermissions.length === 0) {\r\n    return ROLE_PERMISSIONS.field_worker\r\n  }\r\n\r\n  return mappedPermissions\r\n}\r\n\r\n// Helper functions to map phone numbers to correct demo credentials\r\nfunction getCorrectRoleForPhone(phone: string): UserRole | null {\r\n  const phoneRoleMap: Record<string, UserRole> = {\r\n    '+919876543210': 'field_worker',\r\n    '+918765432109': 'cluster_manager',\r\n    '+917654321098': 'cbg_sales',\r\n    '+915432109876': 'admin',\r\n    '+913210987654': 'purification_operator',\r\n    '+912109876543': 'transporter'\r\n  }\r\n  return phoneRoleMap[phone] || null\r\n}\r\n\r\nfunction getCorrectAppTypeForPhone(phone: string): User['appType'] | null {\r\n  const phoneAppTypeMap: Record<string, User['appType']> = {\r\n    '+919876543210': 'gausakhi',\r\n    '+918765432109': 'biogassangh',\r\n    '+917654321098': 'urjavyapar',\r\n    '+915432109876': 'admin',\r\n    '+913210987654': 'shuddhidoot',\r\n    '+912109876543': 'admin'\r\n  }\r\n  return phoneAppTypeMap[phone] || null\r\n}\r\n\r\nfunction getCorrectNameForPhone(phone: string): string | null {\r\n  const phoneNameMap: Record<string, string> = {\r\n    '+919876543210': 'Ramesh Kumar (Field Worker)',\r\n    '+918765432109': 'Suresh Patel (Cluster Manager)',\r\n    '+917654321098': 'Priya Sharma (CBG Sales Executive)',\r\n    '+915432109876': 'System Administrator',\r\n    '+913210987654': 'Vinod Yadav (Purification Operator)',\r\n    '+912109876543': 'Ravi Sharma (Transporter)'\r\n  }\r\n  return phoneNameMap[phone] || null\r\n}\r\n","import React, { createContext, useContext, useEffect, useState } from 'react'\r\nimport { useAuth } from './AuthContext'\r\n\r\nexport interface PlatformModule {\r\n  id: string\r\n  name: string\r\n  displayName: string\r\n  description: string\r\n  url: string\r\n  icon: string\r\n  category: 'operational' | 'analytics' | 'executive'\r\n  requiredRoles: string[]\r\n  status: 'active' | 'maintenance' | 'disabled'\r\n  lastUpdated: Date\r\n}\r\n\r\nexport interface NavigationState {\r\n  currentModule: string\r\n  previousModule?: string\r\n  navigationHistory: string[]\r\n  breadcrumbs: BreadcrumbItem[]\r\n}\r\n\r\nexport interface BreadcrumbItem {\r\n  label: string\r\n  url: string\r\n  module: string\r\n}\r\n\r\nexport interface PlatformSettings {\r\n  theme: 'light' | 'dark' | 'auto'\r\n  language: 'en' | 'hi'\r\n  timezone: string\r\n  autoSave: boolean\r\n  sessionTimeout: number\r\n  notifications: {\r\n    enabled: boolean\r\n    desktop: boolean\r\n    email: boolean\r\n    categories: string[]\r\n  }\r\n}\r\n\r\nexport interface SessionMetrics {\r\n  totalSessions: number\r\n  activeModules: string[]\r\n  averageSessionDuration: number\r\n  lastActivity: Date\r\n  moduleUsageStats: Record<string, number>\r\n}\r\n\r\ninterface PlatformContextType {\r\n  modules: PlatformModule[]\r\n  navigationState: NavigationState\r\n  platformSettings: PlatformSettings\r\n  sessionMetrics: SessionMetrics\r\n\r\n  // Navigation functions\r\n  navigateToModule: (moduleId: string, preserveState?: boolean) => void\r\n  updateBreadcrumbs: (breadcrumbs: BreadcrumbItem[]) => void\r\n  goBack: () => void\r\n\r\n  // Settings management\r\n  updatePlatformSettings: (settings: Partial<PlatformSettings>) => void\r\n\r\n  // Module management\r\n  getAccessibleModules: () => PlatformModule[]\r\n  isModuleAccessible: (moduleId: string) => boolean\r\n\r\n  // Session management\r\n  trackModuleUsage: (moduleId: string) => void\r\n  getSessionSummary: () => SessionMetrics\r\n}\r\n\r\n// Platform modules configuration\r\nexport const PLATFORM_MODULES: PlatformModule[] = [\r\n  {\r\n    id: 'urjasanyojak',\r\n    name: 'UrjaSanyojak',\r\n    displayName: 'Biogas Cluster Management',\r\n    description: 'Comprehensive biogas production cluster oversight and management',\r\n    url: '/',\r\n    icon: 'factory',\r\n    category: 'operational',\r\n    requiredRoles: ['executive', 'manager', 'operator', 'admin'],\r\n    status: 'active',\r\n    lastUpdated: new Date()\r\n  },\r\n  {\r\n    id: 'shuddhi-doot',\r\n    name: 'ShuddhiDoot',\r\n    displayName: 'Purification & Quality Control',\r\n    description: 'Advanced biogas purification monitoring and quality assurance',\r\n    url: '/purification',\r\n    icon: 'filter',\r\n    category: 'operational',\r\n    requiredRoles: ['executive', 'manager', 'operator', 'analyst', 'admin'],\r\n    status: 'active',\r\n    lastUpdated: new Date()\r\n  },\r\n  {\r\n    id: 'urja-vyapar',\r\n    name: 'UrjaVyapar',\r\n    displayName: 'Sales & Distribution Management',\r\n    description: 'Comprehensive biogas sales, distribution, and customer management',\r\n    url: '/sales',\r\n    icon: 'trending-up',\r\n    category: 'operational',\r\n    requiredRoles: ['executive', 'manager', 'admin'],\r\n    status: 'active',\r\n    lastUpdated: new Date()\r\n  },\r\n  {\r\n    id: 'urja-neta',\r\n    name: 'UrjaNeta',\r\n    displayName: 'Executive Analytics Dashboard',\r\n    description: 'Advanced voice-enabled business intelligence for senior leadership',\r\n    url: '/urjaneta',\r\n    icon: 'brain',\r\n    category: 'executive',\r\n    requiredRoles: ['executive', 'admin'],\r\n    status: 'active',\r\n    lastUpdated: new Date()\r\n  },\r\n  {\r\n    id: 'admin-console',\r\n    name: 'AdminConsole',\r\n    displayName: 'System Administration',\r\n    description: 'Platform administration and system management',\r\n    url: '/admin',\r\n    icon: 'settings',\r\n    category: 'analytics',\r\n    requiredRoles: ['admin'],\r\n    status: 'active',\r\n    lastUpdated: new Date()\r\n  },\r\n  {\r\n    id: 'gaushala',\r\n    name: 'GauShala',\r\n    displayName: 'GauShala Management',\r\n    description: 'Comprehensive cattle and dung collection management',\r\n    url: '/gaushala',\r\n    icon: 'home',\r\n    category: 'operational',\r\n    requiredRoles: ['admin', 'field_worker', 'supervisor', 'manager'],\r\n    status: 'active',\r\n    lastUpdated: new Date()\r\n  },\r\n  {\r\n    id: 'executive-command',\r\n    name: 'ExecutiveCommand',\r\n    displayName: 'Executive Command Center',\r\n    description: 'Unified cross-module analytics and strategic insights',\r\n    url: '/executive',\r\n    icon: 'crown',\r\n    category: 'executive',\r\n    requiredRoles: ['executive', 'admin'],\r\n    status: 'active',\r\n    lastUpdated: new Date()\r\n  }\r\n]\r\n\r\nconst PlatformContext = createContext<PlatformContextType | undefined>(undefined)\r\n\r\nexport function usePlatform() {\r\n  const context = useContext(PlatformContext)\r\n  if (context === undefined) {\r\n    throw new Error('usePlatform must be used within a PlatformProvider')\r\n  }\r\n  return context\r\n}\r\n\r\nexport function PlatformProvider({ children }: { children: React.ReactNode }) {\r\n  const { user, hasPermission, isExecutive } = useAuth()\r\n\r\n  const [navigationState, setNavigationState] = useState<NavigationState>({\r\n    currentModule: 'urjasanyojak',\r\n    navigationHistory: ['urjasanyojak'],\r\n    breadcrumbs: [\r\n      { label: 'Dashboard', url: '/', module: 'urjasanyojak' }\r\n    ]\r\n  })\r\n\r\n  const [platformSettings, setPlatformSettings] = useState<PlatformSettings>({\r\n    theme: 'light',\r\n    language: 'en',\r\n    timezone: 'Asia/Kolkata',\r\n    autoSave: true,\r\n    sessionTimeout: isExecutive() ? 240 : 480, // 4h for exec, 8h for others\r\n    notifications: {\r\n      enabled: true,\r\n      desktop: true,\r\n      email: isExecutive(),\r\n      categories: ['alerts', 'reports', 'updates']\r\n    }\r\n  })\r\n\r\n  const [sessionMetrics, setSessionMetrics] = useState<SessionMetrics>({\r\n    totalSessions: 1,\r\n    activeModules: ['urjasanyojak'],\r\n    averageSessionDuration: 0,\r\n    lastActivity: new Date(),\r\n    moduleUsageStats: {\r\n      'urjasanyojak': 1,\r\n      'shuddhi-doot': 0,\r\n      'urja-vyapar': 0,\r\n      'urja-neta': 0\r\n    }\r\n  })\r\n\r\n  const [modules] = useState<PlatformModule[]>(PLATFORM_MODULES)\r\n\r\n  // Navigation functions\r\n  const navigateToModule = (moduleId: string, preserveState = true) => {\r\n    const module = modules.find(m => m.id === moduleId)\r\n    if (!module || !isModuleAccessible(moduleId)) {\r\n      console.warn(`Module ${moduleId} not accessible`)\r\n      return\r\n    }\r\n\r\n    setNavigationState(prev => ({\r\n      currentModule: moduleId,\r\n      previousModule: preserveState ? prev.currentModule : undefined,\r\n      navigationHistory: [...prev.navigationHistory.slice(-10), moduleId],\r\n      breadcrumbs: [\r\n        { label: module.displayName, url: module.url, module: moduleId }\r\n      ]\r\n    }))\r\n\r\n    trackModuleUsage(moduleId)\r\n\r\n    // Navigate using window.history if needed\r\n    if (window.location.pathname !== module.url) {\r\n      window.history.pushState(null, '', module.url)\r\n    }\r\n\r\n    console.log(`Navigated to ${module.displayName} (${moduleId})`)\r\n  }\r\n\r\n  const updateBreadcrumbs = (breadcrumbs: BreadcrumbItem[]) => {\r\n    setNavigationState(prev => ({\r\n      ...prev,\r\n      breadcrumbs\r\n    }))\r\n  }\r\n\r\n  const goBack = () => {\r\n    if (navigationState.previousModule) {\r\n      navigateToModule(navigationState.previousModule, false)\r\n    }\r\n  }\r\n\r\n  // Settings management\r\n  const updatePlatformSettings = (newSettings: Partial<PlatformSettings>) => {\r\n    setPlatformSettings(prev => {\r\n      const updated = { ...prev, ...newSettings }\r\n\r\n      // Persist to localStorage\r\n      localStorage.setItem('platformSettings', JSON.stringify(updated))\r\n\r\n      console.log('Platform settings updated:', newSettings)\r\n      return updated\r\n    })\r\n  }\r\n\r\n  // Module management\r\n  const getAccessibleModules = (): PlatformModule[] => {\r\n    if (!user) return []\r\n\r\n    return modules.filter(module =>\r\n      module.status === 'active' &&\r\n      module.requiredRoles.includes(user.role) &&\r\n      hasPermission(module.id, 'view')\r\n    )\r\n  }\r\n\r\n  const isModuleAccessible = (moduleId: string): boolean => {\r\n    if (!user) return false\r\n\r\n    const module = modules.find(m => m.id === moduleId)\r\n    if (!module || module.status !== 'active') return false\r\n\r\n    return module.requiredRoles.includes(user.role) &&\r\n           hasPermission(module.id, 'view')\r\n  }\r\n\r\n  // Session management\r\n  const trackModuleUsage = (moduleId: string) => {\r\n    setSessionMetrics(prev => ({\r\n      ...prev,\r\n      lastActivity: new Date(),\r\n      activeModules: Array.from(new Set([...prev.activeModules, moduleId])),\r\n      moduleUsageStats: {\r\n        ...prev.moduleUsageStats,\r\n        [moduleId]: (prev.moduleUsageStats[moduleId] || 0) + 1\r\n      }\r\n    }))\r\n  }\r\n\r\n  const getSessionSummary = (): SessionMetrics => {\r\n    return {\r\n      ...sessionMetrics,\r\n      averageSessionDuration: Date.now() - sessionMetrics.lastActivity.getTime()\r\n    }\r\n  }\r\n\r\n  // Load persisted settings on mount\r\n  useEffect(() => {\r\n    const saved = localStorage.getItem('platformSettings')\r\n    if (saved) {\r\n      try {\r\n        const parsedSettings = JSON.parse(saved)\r\n        setPlatformSettings(prev => ({ ...prev, ...parsedSettings }))\r\n      } catch (error) {\r\n        console.error('Error loading platform settings:', error)\r\n      }\r\n    }\r\n  }, [])\r\n\r\n  // Update current module based on URL\r\n  useEffect(() => {\r\n    const currentPath = window.location.pathname\r\n    const currentModule = modules.find(m => m.url === currentPath)\r\n\r\n    if (currentModule && isModuleAccessible(currentModule.id)) {\r\n      setNavigationState(prev => ({\r\n        ...prev,\r\n        currentModule: currentModule.id\r\n      }))\r\n    }\r\n  }, [modules, user])\r\n\r\n  // Executive-specific settings\r\n  useEffect(() => {\r\n    if (user && isExecutive()) {\r\n      updatePlatformSettings({\r\n        sessionTimeout: 240, // 4 hours for executives\r\n        notifications: {\r\n          ...platformSettings.notifications,\r\n          email: true,\r\n          categories: ['alerts', 'reports', 'updates', 'urgent']\r\n        }\r\n      })\r\n    }\r\n  }, [user, isExecutive])\r\n\r\n  const value = {\r\n    modules,\r\n    navigationState,\r\n    platformSettings,\r\n    sessionMetrics,\r\n    navigateToModule,\r\n    updateBreadcrumbs,\r\n    goBack,\r\n    updatePlatformSettings,\r\n    getAccessibleModules,\r\n    isModuleAccessible,\r\n    trackModuleUsage,\r\n    getSessionSummary\r\n  }\r\n\r\n  return (\r\n    <PlatformContext.Provider value={value}>\r\n      {children}\r\n    </PlatformContext.Provider>\r\n  )\r\n}","import { useState } from 'react'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Eye, EyeOff, Lock, Mail } from 'lucide-react'\r\n\r\nexport default function Login() {\r\n  const [phone, setPhone] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [showPassword, setShowPassword] = useState(false)\r\n  const [loading, setLoading] = useState(false)\r\n  const [language, setLanguage] = useState<'en' | 'hi'>('en')\r\n  const { login } = useAuth()\r\n  const navigate = useNavigate()\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    setLoading(true)\r\n\r\n    try {\r\n      await login(phone, password)\r\n      // Redirect to dashboard after successful login\r\n      console.log('Login successful, redirecting to dashboard')\r\n      navigate('/')\r\n    } catch (error) {\r\n      console.error('Login failed:', error)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const translations = {\r\n    en: {\r\n      title: 'SAUBHAGYA',\r\n      subtitle: 'Biogas Management & Rural Energy Distribution',\r\n      phone: 'Phone Number',\r\n      password: 'Password',\r\n      login: 'Login',\r\n      loading: 'Logging in...',\r\n      phonePlaceholder: 'Enter your phone number',\r\n      passwordPlaceholder: 'Enter your password'\r\n    },\r\n    hi: {\r\n      title: 'सौभाग्य',\r\n      subtitle: 'बायोगैस प्रबंधन और ग्रामीण ऊर्जा वितरण',\r\n      phone: 'फ़ोन नंबर',\r\n      password: 'पासवर्ड',\r\n      login: 'लॉगिन',\r\n      loading: 'लॉगिन हो रहा है...',\r\n      phonePlaceholder: 'अपना फ़ोन नंबर दर्ज करें',\r\n      passwordPlaceholder: 'अपना पासवर्ड दर्ज करें'\r\n    }\r\n  }\r\n\r\n  const t = translations[language]\r\n\r\n  return (\r\n    <div className=\"min-h-screen relative overflow-hidden flex items-center justify-center p-4\">\r\n      {/* Background Video/Image */}\r\n      <div className=\"absolute inset-0 z-0\">\r\n        {/* Wide panoramic pastoral landscape with cows */}\r\n        <div\r\n          className=\"absolute inset-0 bg-cover bg-center bg-no-repeat transform scale-105\"\r\n          style={{\r\n            backgroundImage: `url(\"https://images.unsplash.com/photo-1574943320219-553eb213f72d?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2560&q=80\"), url(\"https://images.unsplash.com/photo-1506905925346-21bda4d32df4?ixlib=rb-4.0.3&auto=format&fit=crop&w=2560&q=80\"), url(\"https://images.unsplash.com/photo-1595058542840-20d2ce4e77f8?ixlib=rb-4.0.3&auto=format&fit=crop&w=2560&q=80\"), linear-gradient(135deg, #22c55e 0%, #059669 100%)`\r\n          }}\r\n        ></div>\r\n\r\n        {/* Balanced natural gradient overlay */}\r\n        <div className=\"absolute inset-0 bg-gradient-to-br from-slate-900/75 via-blue-900/70 to-emerald-900/75 z-10\"></div>\r\n\r\n        {/* Additional texture overlay */}\r\n        <div\r\n          className=\"absolute inset-0 opacity-20 z-10\"\r\n          style={{\r\n            backgroundImage: `url(\"data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23ffffff' fill-opacity='0.1'%3E%3Ccircle cx='30' cy='30' r='4'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\")`\r\n          }}\r\n        ></div>\r\n\r\n        {/* Subtle natural floating animations */}\r\n        <div className=\"absolute inset-0 overflow-hidden\">\r\n          {/* Soft natural orbs */}\r\n          <div className=\"absolute top-1/4 left-1/6 w-32 h-32 bg-blue-400/10 rounded-full blur-2xl animate-pulse\"></div>\r\n          <div className=\"absolute bottom-1/3 right-1/5 w-48 h-48 bg-slate-400/8 rounded-full blur-3xl animate-pulse\" style={{animationDelay: '2s'}}></div>\r\n          <div className=\"absolute top-2/3 left-1/2 w-24 h-24 bg-teal-400/12 rounded-full blur-xl animate-pulse\" style={{animationDelay: '4s'}}></div>\r\n          <div className=\"absolute top-1/6 right-1/3 w-40 h-40 bg-cyan-400/8 rounded-full blur-2xl animate-pulse\" style={{animationDelay: '6s'}}></div>\r\n\r\n          {/* Floating particles */}\r\n          <div className=\"absolute top-1/5 left-3/4 w-2 h-2 bg-white/30 rounded-full animate-bounce\" style={{animationDelay: '1s', animationDuration: '3s'}}></div>\r\n          <div className=\"absolute bottom-1/4 left-1/5 w-1 h-1 bg-blue-300/40 rounded-full animate-bounce\" style={{animationDelay: '3s', animationDuration: '4s'}}></div>\r\n          <div className=\"absolute top-1/2 right-1/6 w-1.5 h-1.5 bg-teal-300/35 rounded-full animate-bounce\" style={{animationDelay: '5s', animationDuration: '3.5s'}}></div>\r\n        </div>\r\n\r\n        {/* Subtle grid pattern */}\r\n        <div\r\n          className=\"absolute inset-0 opacity-5\"\r\n          style={{\r\n            backgroundImage: `linear-gradient(rgba(255,255,255,.1) 1px, transparent 1px), linear-gradient(90deg, rgba(255,255,255,.1) 1px, transparent 1px)`,\r\n            backgroundSize: '50px 50px'\r\n          }}\r\n        ></div>\r\n      </div>\r\n\r\n      <div className=\"max-w-md w-full space-y-8 relative z-20 animate-in fade-in slide-in-from-bottom-4 duration-1000\">\r\n        {/* Language Toggle */}\r\n        <div className=\"flex justify-end\">\r\n          <button\r\n            onClick={() => setLanguage(language === 'en' ? 'hi' : 'en')}\r\n            className=\"px-4 py-2 text-sm bg-white/10 backdrop-blur-sm rounded-lg shadow-lg border border-white/20 hover:bg-white/20 text-white transition-all duration-300\"\r\n          >\r\n            {language === 'en' ? 'हिंदी' : 'English'}\r\n          </button>\r\n        </div>\r\n\r\n        {/* Header */}\r\n        <div className=\"text-center\">\r\n          {/* Logo/Icon */}\r\n          <div className=\"flex justify-center mb-6\">\r\n            <div className=\"relative\">\r\n              <div className=\"w-28 h-28 bg-white/95 backdrop-blur-sm rounded-2xl flex items-center justify-center shadow-2xl transform hover:scale-110 transition-all duration-300 border border-white/30 p-1\">\r\n                {/* Your Original Dhanush Logo */}\r\n                <img\r\n                  src=\"/images/dhanush_group_logo.jpg\"\r\n                  alt=\"Dhanush Group Logo\"\r\n                  className=\"w-full h-full object-contain rounded-xl\"\r\n                />\r\n              </div>\r\n              {/* Animated ring */}\r\n              <div className=\"absolute inset-0 w-28 h-28 border-2 border-white/20 rounded-2xl animate-ping\"></div>\r\n              <div className=\"absolute inset-2 w-24 h-24 border border-white/10 rounded-xl animate-pulse\"></div>\r\n            </div>\r\n          </div>\r\n\r\n          <h1 className=\"text-4xl font-bold text-white mb-4 drop-shadow-lg\">\r\n            {t.title}\r\n          </h1>\r\n          <p className=\"text-white/90 text-lg mb-8 drop-shadow\">\r\n            {t.subtitle}\r\n          </p>\r\n        </div>\r\n\r\n        {/* Login Form */}\r\n        <form onSubmit={handleSubmit} className=\"bg-white/10 backdrop-blur-md p-8 rounded-2xl shadow-2xl border border-white/20 space-y-6\">\r\n          <div>\r\n            <label htmlFor=\"phone\" className=\"block text-sm font-medium text-white mb-2\">\r\n              {t.phone}\r\n            </label>\r\n            <div className=\"relative\">\r\n              <Mail className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-white/70 h-5 w-5\" />\r\n              <input\r\n                id=\"phone\"\r\n                type=\"tel\"\r\n                value={phone}\r\n                onChange={(e) => setPhone(e.target.value)}\r\n                placeholder={t.phonePlaceholder}\r\n                className=\"w-full pl-10 pr-3 py-3 bg-white/10 backdrop-blur-sm border border-white/30 rounded-lg focus:outline-none focus:ring-2 focus:ring-white/50 focus:border-white/50 text-white placeholder-white/70 transition-all duration-300\"\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"password\" className=\"block text-sm font-medium text-white mb-2\">\r\n              {t.password}\r\n            </label>\r\n            <div className=\"relative\">\r\n              <Lock className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-white/70 h-5 w-5\" />\r\n              <input\r\n                id=\"password\"\r\n                type={showPassword ? 'text' : 'password'}\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                placeholder={t.passwordPlaceholder}\r\n                className=\"w-full pl-10 pr-12 py-3 bg-white/10 backdrop-blur-sm border border-white/30 rounded-lg focus:outline-none focus:ring-2 focus:ring-white/50 focus:border-white/50 text-white placeholder-white/70 transition-all duration-300\"\r\n                required\r\n              />\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => setShowPassword(!showPassword)}\r\n                className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-white/70 hover:text-white transition-colors duration-200\"\r\n              >\r\n                {showPassword ? <EyeOff className=\"h-5 w-5\" /> : <Eye className=\"h-5 w-5\" />}\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            disabled={loading}\r\n            className=\"w-full bg-gradient-to-r from-green-500 to-blue-600 text-white py-3 px-6 rounded-lg hover:from-green-600 hover:to-blue-700 focus:outline-none focus:ring-2 focus:ring-white/50 focus:ring-offset-2 focus:ring-offset-transparent disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-300 font-semibold shadow-lg hover:shadow-xl transform hover:scale-105\"\r\n          >\r\n            {loading ? t.loading : t.login}\r\n          </button>\r\n        </form>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { type ClassValue, clsx } from \"clsx\"\r\nimport { twMerge } from \"tailwind-merge\"\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs))\r\n}","import * as React from \"react\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\r\n        destructive: \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\r\n        outline: \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\r\n        secondary: \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\r\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\r\n        link: \"text-primary underline-offset-4 hover:underline\",\r\n      },\r\n      size: {\r\n        default: \"h-10 px-4 py-2\",\r\n        sm: \"h-9 rounded-md px-3\",\r\n        lg: \"h-11 rounded-md px-8\",\r\n        icon: \"h-10 w-10\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nexport interface ButtonProps\r\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n    VariantProps<typeof buttonVariants> {}\r\n\r\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\r\n  ({ className, variant, size, ...props }, ref) => {\r\n    return (\r\n      <button\r\n        className={cn(buttonVariants({ variant, size, className }))}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nButton.displayName = \"Button\"\r\n\r\nexport { Button, buttonVariants }","import * as React from \"react\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nexport interface BadgeProps\r\n  extends React.HTMLAttributes<HTMLDivElement> {\r\n  variant?: \"default\" | \"secondary\" | \"destructive\" | \"outline\"\r\n}\r\n\r\nfunction Badge({ className, variant = \"default\", ...props }: BadgeProps) {\r\n  return (\r\n    <div\r\n      className={cn(\r\n        \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\r\n        {\r\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\":\r\n            variant === \"default\",\r\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\":\r\n            variant === \"secondary\",\r\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\":\r\n            variant === \"destructive\",\r\n          \"text-foreground\": variant === \"outline\",\r\n        },\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Badge }","import * as React from \"react\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nexport interface SeparatorProps\r\n  extends React.HTMLAttributes<HTMLDivElement> {\r\n  orientation?: \"horizontal\" | \"vertical\"\r\n  decorative?: boolean\r\n}\r\n\r\nconst Separator = React.forwardRef<HTMLDivElement, SeparatorProps>(\r\n  (\r\n    { className, orientation = \"horizontal\", decorative = true, ...props },\r\n    ref\r\n  ) => (\r\n    <div\r\n      ref={ref}\r\n      role={decorative ? \"none\" : \"separator\"}\r\n      aria-orientation={orientation}\r\n      className={cn(\r\n        \"shrink-0 bg-border\",\r\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n)\r\nSeparator.displayName = \"Separator\"\r\n\r\nexport { Separator }","/**\r\n * BaseLayout - Reusable layout component with top navbar and left sidebar\r\n * This is the foundation layout that all modules should use for consistency\r\n * Uses shadcn/ui components for professional design system compliance\r\n */\r\n\r\nimport { ReactNode, useState } from 'react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Separator } from '@/components/ui/separator';\r\nimport { cn } from '@/lib/utils';\r\nimport { Search, Bell, Menu, X, LogOut } from 'lucide-react';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\n\r\nexport interface NavigationItem {\r\n  id: string;\r\n  label: string;\r\n  icon: ReactNode;\r\n  onClick: () => void;\r\n  isActive?: boolean;\r\n  badge?: string | number;\r\n}\r\n\r\nexport interface BreadcrumbItem {\r\n  label: string;\r\n  url?: string;\r\n  onClick?: () => void;\r\n}\r\n\r\nexport interface BaseLayoutProps {\r\n  /** Module name displayed in the navbar (e.g., \"Gausakhi\") */\r\n  moduleName: string;\r\n  /** Navigation items for the left sidebar */\r\n  navigationItems: NavigationItem[];\r\n  /** Main content to render */\r\n  children: ReactNode;\r\n  /** Optional module subtitle */\r\n  moduleSubtitle?: string;\r\n  /** Optional user info in top right */\r\n  userInfo?: {\r\n    name: string;\r\n    role: string;\r\n    avatar?: string;\r\n  };\r\n  /** Breadcrumb items to show navigation path */\r\n  breadcrumbs?: BreadcrumbItem[];\r\n  /** Custom className for the main content area */\r\n  contentClassName?: string;\r\n}\r\n\r\nexport default function BaseLayout({\r\n  moduleName,\r\n  navigationItems,\r\n  children,\r\n  moduleSubtitle,\r\n  userInfo,\r\n  breadcrumbs,\r\n  contentClassName\r\n}: BaseLayoutProps) {\r\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\r\n  const { logout } = useAuth();\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      await logout();\r\n    } catch (error) {\r\n      console.error('Logout error:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      {/* Mobile Menu Overlay */}\r\n      {isMobileMenuOpen && (\r\n        <div\r\n          className=\"fixed inset-0 bg-black bg-opacity-50 z-40 lg:hidden\"\r\n          onClick={() => setIsMobileMenuOpen(false)}\r\n        />\r\n      )}\r\n\r\n      {/* Left Sidebar - Fixed position */}\r\n      <aside className={`fixed left-0 top-0 w-56 h-screen bg-white border-r border-gray-200 z-50 transform transition-transform duration-300 ease-in-out ${\r\n        isMobileMenuOpen ? 'translate-x-0' : '-translate-x-full'\r\n      } xl:translate-x-0`}>\r\n        <div className=\"flex flex-col h-full\">\r\n          {/* Module Title */}\r\n          <div className=\"h-16 bg-white border-b border-gray-200 flex items-center px-4\">\r\n            <div className=\"flex items-center\">\r\n              <Button\r\n                variant=\"ghost\"\r\n                size=\"sm\"\r\n                className=\"lg:hidden mr-2 p-1\"\r\n                onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\r\n              >\r\n                <Menu className=\"h-5 w-5\" />\r\n              </Button>\r\n              <h1 className=\"text-lg font-bold text-gray-900\">{moduleName}</h1>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Mobile close button */}\r\n          <div className=\"lg:hidden flex justify-between items-center p-4 border-b border-gray-100\">\r\n            <span className=\"text-sm font-medium text-gray-900\">Menu</span>\r\n            <Button\r\n              variant=\"ghost\"\r\n              size=\"sm\"\r\n              onClick={() => setIsMobileMenuOpen(false)}\r\n              className=\"p-1\"\r\n            >\r\n              <X className=\"h-5 w-5\" />\r\n            </Button>\r\n          </div>\r\n\r\n          {/* Module subtitle */}\r\n          {moduleSubtitle && (\r\n            <div className=\"px-4 py-2 border-b border-gray-100\">\r\n              <p className=\"text-xs text-gray-600\">{moduleSubtitle}</p>\r\n            </div>\r\n          )}\r\n\r\n          {/* Navigation */}\r\n          <nav className=\"flex-1 p-3\">\r\n            <div className=\"space-y-2\">\r\n              {navigationItems.map((item) => (\r\n                <Button\r\n                  key={item.id}\r\n                  onClick={() => {\r\n                    item.onClick();\r\n                    setIsMobileMenuOpen(false);\r\n                  }}\r\n                  variant={item.isActive ? 'default' : 'ghost'}\r\n                  className={`w-full justify-start h-10 font-medium text-sm transition-all duration-200 ${\r\n                    item.isActive\r\n                      ? 'bg-blue-600 text-white hover:bg-blue-700 shadow-sm'\r\n                      : 'text-gray-700 hover:bg-gray-100 hover:text-gray-900'\r\n                  }`}\r\n                >\r\n                  <span className={`mr-3 flex-shrink-0 ${item.isActive ? 'text-white' : 'text-gray-500'}`}>\r\n                    {item.icon}\r\n                  </span>\r\n                  <span className=\"flex-1 text-left\">{item.label}</span>\r\n                  {item.badge && (\r\n                    <Badge\r\n                      variant={item.isActive ? \"outline\" : \"secondary\"}\r\n                      className={`ml-auto text-xs ${\r\n                        item.isActive\r\n                          ? 'border-white/30 text-white bg-white/10'\r\n                          : 'bg-gray-200 text-gray-600'\r\n                      }`}\r\n                    >\r\n                      {item.badge}\r\n                    </Badge>\r\n                  )}\r\n                </Button>\r\n              ))}\r\n            </div>\r\n          </nav>\r\n\r\n          {/* Footer */}\r\n          <div className=\"p-4 border-t border-gray-100\">\r\n            <div className=\"flex items-center text-sm text-gray-500\">\r\n              <div className=\"w-2 h-2 bg-green-500 rounded-full mr-2\" />\r\n              System Online\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </aside>\r\n\r\n      {/* Main Content Area - Offset by sidebar width */}\r\n      <div className=\"xl:ml-56 min-h-screen\">\r\n        {/* Top Navbar - Fixed */}\r\n        <header className=\"fixed top-0 left-0 right-0 xl:left-56 h-16 bg-white border-b border-gray-200 z-40 flex items-center justify-between\">\r\n          <div className=\"flex items-center space-x-2\">\r\n            {/* Mobile menu button */}\r\n            <Button\r\n              variant=\"ghost\"\r\n              size=\"sm\"\r\n              className=\"lg:hidden mr-2 p-1\"\r\n              onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\r\n            >\r\n              <Menu className=\"h-5 w-5\" />\r\n            </Button>\r\n\r\n            <div className=\"w-8 h-8 bg-blue-600 rounded-lg flex items-center justify-center\">\r\n              <span className=\"text-white font-bold text-sm\">S</span>\r\n            </div>\r\n            <div>\r\n              <h2 className=\"text-lg font-semibold text-gray-900\">SAUBHAGYA</h2>\r\n              <div className=\"text-xs text-blue-600 font-medium\">Unified Platform</div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex items-center space-x-3\">\r\n            <Button variant=\"ghost\" size=\"sm\">\r\n              <Search className=\"w-4 h-4\" />\r\n              <span className=\"sr-only\">Search</span>\r\n            </Button>\r\n\r\n            <Button variant=\"ghost\" size=\"sm\" className=\"relative\">\r\n              <Bell className=\"w-4 h-4\" />\r\n              <Badge\r\n                variant=\"destructive\"\r\n                className=\"absolute -top-1 -right-1 h-2 w-2 p-0 text-[10px] flex items-center justify-center\"\r\n              >\r\n                2\r\n              </Badge>\r\n              <span className=\"sr-only\">Notifications</span>\r\n            </Button>\r\n\r\n            <Button variant=\"ghost\" size=\"sm\">\r\n              <span className=\"text-sm font-medium\">हिं</span>\r\n            </Button>\r\n\r\n            <Separator orientation=\"vertical\" className=\"h-6\" />\r\n\r\n            {userInfo && (\r\n              <div className=\"flex items-center space-x-3\">\r\n                <div className=\"text-right text-sm hidden md:block\">\r\n                  <div className=\"font-medium text-gray-900\">{userInfo.name}</div>\r\n                  <div className=\"text-xs text-gray-500\">{userInfo.role}</div>\r\n                </div>\r\n                <div className=\"h-8 w-8 bg-blue-600 rounded-full flex items-center justify-center\">\r\n                  {userInfo.avatar ? (\r\n                    <img src={userInfo.avatar} alt={userInfo.name} className=\"h-8 w-8 rounded-full object-cover\" />\r\n                  ) : (\r\n                    <span className=\"text-white text-xs font-medium\">\r\n                      {userInfo.name.charAt(0).toUpperCase()}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n                <Button\r\n                  variant=\"ghost\"\r\n                  size=\"sm\"\r\n                  onClick={handleLogout}\r\n                  className=\"text-gray-600 hover:text-red-600 hover:bg-red-50\"\r\n                  title=\"Logout\"\r\n                >\r\n                  <LogOut className=\"w-4 h-4\" />\r\n                  <span className=\"sr-only\">Logout</span>\r\n                </Button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </header>\r\n\r\n        {/* Breadcrumbs */}\r\n        {breadcrumbs && breadcrumbs.length > 0 && (\r\n          <div className=\"fixed top-16 left-0 right-0 xl:left-56 h-12 bg-gray-50 border-b border-gray-200 z-30 flex items-center px-6\">\r\n            <nav className=\"flex items-center space-x-2 text-sm text-gray-600\">\r\n              {breadcrumbs.map((item, index) => (\r\n                <div key={index} className=\"flex items-center\">\r\n                  {index > 0 && <span className=\"mx-2 text-gray-400\">/</span>}\r\n                  {item.onClick || item.url ? (\r\n                    <button\r\n                      onClick={item.onClick}\r\n                      className=\"hover:text-blue-600 transition-colors font-medium hover:underline\"\r\n                    >\r\n                      {item.label}\r\n                    </button>\r\n                  ) : (\r\n                    <span className={index === breadcrumbs.length - 1 ? \"text-gray-900 font-medium\" : \"\"}>\r\n                      {item.label}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              ))}\r\n            </nav>\r\n          </div>\r\n        )}\r\n\r\n        {/* Main Content */}\r\n        <main\r\n          className={cn(\r\n            \"pt-20 min-h-screen w-full p-6\",\r\n            breadcrumbs && breadcrumbs.length > 0 ? \"pt-20 mt-12\" : \"pt-20\",\r\n            contentClassName\r\n          )}\r\n        >\r\n          {children}\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import * as React from \"react\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Card = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCard.displayName = \"Card\"\r\n\r\nconst CardHeader = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardHeader.displayName = \"CardHeader\"\r\n\r\nconst CardTitle = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLHeadingElement>\r\n>(({ className, ...props }, ref) => (\r\n  <h3\r\n    ref={ref}\r\n    className={cn(\r\n      \"text-2xl font-semibold leading-none tracking-tight\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCardTitle.displayName = \"CardTitle\"\r\n\r\nconst CardDescription = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, ...props }, ref) => (\r\n  <p\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardDescription.displayName = \"CardDescription\"\r\n\r\nconst CardContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\r\n))\r\nCardContent.displayName = \"CardContent\"\r\n\r\nconst CardFooter = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex items-center p-6 pt-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardFooter.displayName = \"CardFooter\"\r\n\r\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }","import React, { useState, useEffect } from 'react';\nimport { Card, CardHeader, CardTitle, CardDescription, CardContent } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Progress } from '@/components/ui/progress';\nimport {\n  Activity,\n  Users,\n  Server,\n  AlertTriangle,\n  Database,\n  Clock,\n  TrendingUp,\n  TrendingDown,\n  BarChart3,\n  PieChart,\n  Zap,\n  Wifi,\n  HardDrive,\n  Cpu,\n  RefreshCw\n} from 'lucide-react';\n\ninterface SystemMetric {\n  label: string;\n  value: string;\n  status: 'healthy' | 'warning' | 'critical';\n  icon: React.ReactNode;\n}\n\nconst Dashboard: React.FC = () => {\n  const [lastUpdated, setLastUpdated] = useState<Date>(new Date());\n  const [isRefreshing, setIsRefreshing] = useState(false);\n\n  // Real-time metrics with progress values\n  const [realTimeMetrics, setRealTimeMetrics] = useState({\n    cpuUsage: 68,\n    memoryUsage: 84,\n    diskUsage: 45,\n    networkLatency: 12,\n    uptime: 99.7,\n    throughput: 1247\n  });\n\n  // Auto refresh every 30 seconds\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setRealTimeMetrics(prev => ({\n        cpuUsage: Math.max(50, Math.min(90, prev.cpuUsage + (Math.random() - 0.5) * 10)),\n        memoryUsage: Math.max(70, Math.min(95, prev.memoryUsage + (Math.random() - 0.5) * 8)),\n        diskUsage: Math.max(35, Math.min(60, prev.diskUsage + (Math.random() - 0.5) * 5)),\n        networkLatency: Math.max(8, Math.min(25, prev.networkLatency + (Math.random() - 0.5) * 3)),\n        uptime: Math.max(99.0, Math.min(99.9, prev.uptime + (Math.random() - 0.5) * 0.2)),\n        throughput: Math.max(1000, Math.min(1500, prev.throughput + (Math.random() - 0.5) * 100))\n      }));\n      setLastUpdated(new Date());\n    }, 30000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  const systemMetrics: SystemMetric[] = [\n    {\n      label: 'Active Users',\n      value: '247',\n      status: 'healthy',\n      icon: <Users className=\"h-6 w-6\" />\n    },\n    {\n      label: 'Auth Service',\n      value: 'Online',\n      status: 'healthy',\n      icon: <Server className=\"h-6 w-6\" />\n    },\n    {\n      label: 'IoT Service',\n      value: 'Online',\n      status: 'healthy',\n      icon: <Activity className=\"h-6 w-6\" />\n    },\n    {\n      label: 'System Alerts',\n      value: '3',\n      status: 'warning',\n      icon: <AlertTriangle className=\"h-6 w-6\" />\n    },\n    {\n      label: 'Database',\n      value: '98.5%',\n      status: 'healthy',\n      icon: <Database className=\"h-6 w-6\" />\n    },\n    {\n      label: 'Last Backup',\n      value: '2h ago',\n      status: 'healthy',\n      icon: <Clock className=\"h-6 w-6\" />\n    }\n  ];\n\n  const handleRefresh = async () => {\n    setIsRefreshing(true);\n    // Simulate refresh delay\n    setTimeout(() => {\n      setIsRefreshing(false);\n      setLastUpdated(new Date());\n    }, 2000);\n  };\n\n  const getStatusBadge = (status: SystemMetric['status']) => {\n    switch (status) {\n      case 'healthy':\n        return <Badge className=\"bg-green-500\">Healthy</Badge>;\n      case 'warning':\n        return <Badge className=\"bg-yellow-500\">Warning</Badge>;\n      case 'critical':\n        return <Badge className=\"bg-red-500\">Critical</Badge>;\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header with refresh */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold tracking-tight\">Admin Dashboard</h1>\n          <p className=\"text-muted-foreground\">\n            Platform overview and system health monitoring\n          </p>\n        </div>\n        <div className=\"flex items-center space-x-4\">\n          <div className=\"text-right text-sm\">\n            <div className=\"text-gray-500\">Last updated</div>\n            <div className=\"font-medium\">{lastUpdated.toLocaleTimeString()}</div>\n          </div>\n          <button\n            onClick={handleRefresh}\n            disabled={isRefreshing}\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors disabled:opacity-50 flex items-center space-x-2\"\n          >\n            <RefreshCw className={`w-4 h-4 ${isRefreshing ? 'animate-spin' : ''}`} />\n            <span>Refresh</span>\n          </button>\n        </div>\n      </div>\n\n      {/* System Health Overview Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n        {systemMetrics.map((metric, index) => (\n          <Card key={index} className=\"hover:shadow-lg transition-shadow\">\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <CardTitle className=\"text-sm font-medium\">\n                {metric.label}\n              </CardTitle>\n              {metric.icon}\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-2xl font-bold\">{metric.value}</div>\n              <div className=\"mt-2\">\n                {getStatusBadge(metric.status)}\n              </div>\n            </CardContent>\n          </Card>\n        ))}\n      </div>\n\n      {/* Performance Metrics with Progress Bars */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center space-x-2\">\n            <BarChart3 className=\"w-5 h-5\" />\n            <span>Real-time Performance Metrics</span>\n          </CardTitle>\n          <CardDescription>\n            Live system resource utilization and performance indicators\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {/* CPU Usage */}\n            <div className=\"space-y-3\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-2\">\n                  <Cpu className=\"w-4 h-4 text-blue-500\" />\n                  <span className=\"text-sm font-medium\">CPU Usage</span>\n                </div>\n                <span className=\"text-sm font-bold\">{realTimeMetrics.cpuUsage.toFixed(1)}%</span>\n              </div>\n              <div className=\"w-full bg-gray-200 rounded-full h-3 overflow-hidden\">\n                <div\n                  className={`h-full rounded-full transition-all duration-500 ${\n                    realTimeMetrics.cpuUsage > 80 ? 'bg-red-500' :\n                    realTimeMetrics.cpuUsage > 60 ? 'bg-yellow-500' : 'bg-blue-500'\n                  }`}\n                  style={{ width: `${realTimeMetrics.cpuUsage}%` }}\n                ></div>\n              </div>\n              <div className=\"text-xs text-muted-foreground\">\n                {realTimeMetrics.cpuUsage > 80 ? 'High usage detected' : 'Normal operation'}\n              </div>\n            </div>\n\n            {/* Memory Usage */}\n            <div className=\"space-y-3\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-2\">\n                  <HardDrive className=\"w-4 h-4 text-green-500\" />\n                  <span className=\"text-sm font-medium\">Memory Usage</span>\n                </div>\n                <span className=\"text-sm font-bold\">{realTimeMetrics.memoryUsage.toFixed(1)}%</span>\n              </div>\n              <div className=\"w-full bg-gray-200 rounded-full h-3 overflow-hidden\">\n                <div\n                  className={`h-full rounded-full transition-all duration-500 ${\n                    realTimeMetrics.memoryUsage > 90 ? 'bg-red-500' :\n                    realTimeMetrics.memoryUsage > 70 ? 'bg-yellow-500' : 'bg-green-500'\n                  }`}\n                  style={{ width: `${realTimeMetrics.memoryUsage}%` }}\n                ></div>\n              </div>\n              <div className=\"text-xs text-muted-foreground\">\n                {realTimeMetrics.memoryUsage > 90 ? 'Critical memory usage' : 'Acceptable usage'}\n              </div>\n            </div>\n\n            {/* Disk Usage */}\n            <div className=\"space-y-3\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-2\">\n                  <Database className=\"w-4 h-4 text-purple-500\" />\n                  <span className=\"text-sm font-medium\">Disk Usage</span>\n                </div>\n                <span className=\"text-sm font-bold\">{realTimeMetrics.diskUsage.toFixed(1)}%</span>\n              </div>\n              <div className=\"w-full bg-gray-200 rounded-full h-3 overflow-hidden\">\n                <div\n                  className={`h-full rounded-full transition-all duration-500 ${\n                    realTimeMetrics.diskUsage > 80 ? 'bg-red-500' :\n                    realTimeMetrics.diskUsage > 60 ? 'bg-yellow-500' : 'bg-purple-500'\n                  }`}\n                  style={{ width: `${realTimeMetrics.diskUsage}%` }}\n                ></div>\n              </div>\n              <div className=\"text-xs text-muted-foreground\">\n                {realTimeMetrics.diskUsage > 80 ? 'Monitor disk space' : 'Plenty of space available'}\n              </div>\n            </div>\n\n            {/* Network Latency */}\n            <div className=\"space-y-3\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-2\">\n                  <Wifi className=\"w-4 h-4 text-orange-500\" />\n                  <span className=\"text-sm font-medium\">Network Latency</span>\n                </div>\n                <span className=\"text-sm font-bold\">{realTimeMetrics.networkLatency.toFixed(0)}ms</span>\n              </div>\n              <div className=\"w-full bg-gray-200 rounded-full h-3 overflow-hidden\">\n                <div\n                  className={`h-full rounded-full transition-all duration-500 ${\n                    realTimeMetrics.networkLatency > 30 ? 'bg-red-500' :\n                    realTimeMetrics.networkLatency > 15 ? 'bg-yellow-500' : 'bg-orange-500'\n                  }`}\n                  style={{ width: `${(realTimeMetrics.networkLatency / 50) * 100}%` }}\n                ></div>\n              </div>\n              <div className=\"text-xs text-muted-foreground\">\n                {realTimeMetrics.networkLatency > 20 ? 'High latency detected' : 'Low latency - optimal'}\n              </div>\n            </div>\n\n            {/* System Uptime */}\n            <div className=\"space-y-3\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-2\">\n                  <Zap className=\"w-4 h-4 text-yellow-500\" />\n                  <span className=\"text-sm font-medium\">System Uptime</span>\n                </div>\n                <span className=\"text-sm font-bold\">{realTimeMetrics.uptime.toFixed(2)}%</span>\n              </div>\n              <div className=\"w-full bg-gray-200 rounded-full h-3 overflow-hidden\">\n                <div\n                  className={`h-full rounded-full transition-all duration-500 ${\n                    realTimeMetrics.uptime > 99.5 ? 'bg-green-500' :\n                    realTimeMetrics.uptime > 99.0 ? 'bg-yellow-500' : 'bg-red-500'\n                  }`}\n                  style={{ width: `${realTimeMetrics.uptime}%` }}\n                ></div>\n              </div>\n              <div className=\"text-xs text-muted-foreground\">\n                Excellent availability rating\n              </div>\n            </div>\n\n            {/* Throughput */}\n            <div className=\"space-y-3\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-2\">\n                  <Activity className=\"w-4 h-4 text-red-500\" />\n                  <span className=\"text-sm font-medium\">Throughput</span>\n                </div>\n                <span className=\"text-sm font-bold\">{realTimeMetrics.throughput.toFixed(0)} req/min</span>\n              </div>\n              <div className=\"w-full bg-gray-200 rounded-full h-3 overflow-hidden\">\n                <div\n                  className={`h-full rounded-full transition-all duration-500 ${\n                    realTimeMetrics.throughput > 1400 ? 'bg-green-500' :\n                    realTimeMetrics.throughput > 1000 ? 'bg-blue-500' : 'bg-red-500'\n                  }`}\n                  style={{ width: `${(realTimeMetrics.throughput / 2000) * 100}%` }}\n                ></div>\n              </div>\n              <div className=\"text-xs text-muted-foreground\">\n                {realTimeMetrics.throughput > 1400 ? 'High traffic volume' : 'Normal traffic levels'}\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Analytics and Activity */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Enhanced Recent Activity */}\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center space-x-2\">\n              <Activity className=\"w-5 h-5\" />\n              <span>Recent Activity</span>\n            </CardTitle>\n            <CardDescription>\n              Latest system events and user actions\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-4\">\n              <div className=\"flex items-center space-x-4 p-3 bg-green-50 rounded-lg border border-green-200\">\n                <div className=\"w-3 h-3 bg-green-500 rounded-full animate-pulse\"></div>\n                <div className=\"flex-1\">\n                  <p className=\"text-sm font-medium text-green-800\">New user registration</p>\n                  <p className=\"text-xs text-green-700\">Ram Kumar - Field Worker • 2 minutes ago</p>\n                </div>\n                <TrendingUp className=\"w-4 h-4 text-green-600\" />\n              </div>\n              <div className=\"flex items-center space-x-4 p-3 bg-blue-50 rounded-lg border border-blue-200\">\n                <div className=\"w-3 h-3 bg-blue-500 rounded-full\"></div>\n                <div className=\"flex-1\">\n                  <p className=\"text-sm font-medium text-blue-800\">System backup completed</p>\n                  <p className=\"text-xs text-blue-700\">Database backup successful • 15 minutes ago</p>\n                </div>\n                <Database className=\"w-4 h-4 text-blue-600\" />\n              </div>\n              <div className=\"flex items-center space-x-4 p-3 bg-yellow-50 rounded-lg border border-yellow-200\">\n                <div className=\"w-3 h-3 bg-yellow-500 rounded-full\"></div>\n                <div className=\"flex-1\">\n                  <p className=\"text-sm font-medium text-yellow-800\">Device calibration due</p>\n                  <p className=\"text-xs text-yellow-700\">IoT Sensor #247 requires attention • 1 hour ago</p>\n                </div>\n                <AlertTriangle className=\"w-4 h-4 text-yellow-600\" />\n              </div>\n              <div className=\"flex items-center space-x-4 p-3 bg-purple-50 rounded-lg border border-purple-200\">\n                <div className=\"w-3 h-3 bg-purple-500 rounded-full\"></div>\n                <div className=\"flex-1\">\n                  <p className=\"text-sm font-medium text-purple-800\">Data sync completed</p>\n                  <p className=\"text-xs text-purple-700\">Gaushala cluster data synchronized • 2 hours ago</p>\n                </div>\n                <RefreshCw className=\"w-4 h-4 text-purple-600\" />\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Enhanced System Alerts */}\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center space-x-2\">\n              <AlertTriangle className=\"w-5 h-5\" />\n              <span>System Alerts</span>\n              <Badge className=\"bg-yellow-500\">3 Active</Badge>\n            </CardTitle>\n            <CardDescription>\n              Issues requiring immediate attention\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-4\">\n              <div className=\"p-4 border border-yellow-200 bg-yellow-50 rounded-lg\">\n                <div className=\"flex items-start justify-between\">\n                  <div className=\"flex-1\">\n                    <p className=\"text-sm font-medium text-yellow-800\">\n                      High memory usage on IoT Service\n                    </p>\n                    <p className=\"text-xs text-yellow-700 mt-1\">\n                      Memory usage: {realTimeMetrics.memoryUsage.toFixed(1)}% • Action required\n                    </p>\n                  </div>\n                  <Badge className=\"bg-yellow-600\">High</Badge>\n                </div>\n                <div className=\"mt-3\">\n                  <div className=\"w-full bg-yellow-200 rounded-full h-2 overflow-hidden\">\n                    <div\n                      className=\"h-full bg-yellow-600 rounded-full transition-all duration-500\"\n                      style={{ width: `${realTimeMetrics.memoryUsage}%` }}\n                    ></div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"p-4 border border-blue-200 bg-blue-50 rounded-lg\">\n                <div className=\"flex items-start justify-between\">\n                  <div className=\"flex-1\">\n                    <p className=\"text-sm font-medium text-blue-800\">\n                      Scheduled maintenance reminder\n                    </p>\n                    <p className=\"text-xs text-blue-700 mt-1\">\n                      Database maintenance window in 2 days • Plan accordingly\n                    </p>\n                  </div>\n                  <Badge className=\"bg-blue-600\">Medium</Badge>\n                </div>\n              </div>\n\n              <div className=\"p-4 border border-orange-200 bg-orange-50 rounded-lg\">\n                <div className=\"flex items-start justify-between\">\n                  <div className=\"flex-1\">\n                    <p className=\"text-sm font-medium text-orange-800\">\n                      SSL certificate expiring soon\n                    </p>\n                    <p className=\"text-xs text-orange-700 mt-1\">\n                      Certificate expires in 30 days • Renewal needed\n                    </p>\n                  </div>\n                  <Badge className=\"bg-orange-600\">Low</Badge>\n                </div>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* System Statistics Overview */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center space-x-2\">\n            <PieChart className=\"w-5 h-5\" />\n            <span>Platform Statistics</span>\n          </CardTitle>\n          <CardDescription>\n            Comprehensive SAUBHAGYA platform metrics and KPIs\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-6\">\n            <div className=\"text-center p-4 bg-blue-50 rounded-lg\">\n              <div className=\"text-3xl font-bold text-blue-600\">2,450</div>\n              <div className=\"text-sm text-blue-700\">CBG Production (m³)</div>\n              <div className=\"flex items-center justify-center mt-2\">\n                <TrendingUp className=\"w-4 h-4 text-green-600 mr-1\" />\n                <span className=\"text-xs text-green-600\">+12.5%</span>\n              </div>\n            </div>\n            <div className=\"text-center p-4 bg-green-50 rounded-lg\">\n              <div className=\"text-3xl font-bold text-green-600\">89.2%</div>\n              <div className=\"text-sm text-green-700\">Operational Efficiency</div>\n              <div className=\"flex items-center justify-center mt-2\">\n                <TrendingUp className=\"w-4 h-4 text-green-600 mr-1\" />\n                <span className=\"text-xs text-green-600\">+2.1%</span>\n              </div>\n            </div>\n            <div className=\"text-center p-4 bg-purple-50 rounded-lg\">\n              <div className=\"text-3xl font-bold text-purple-600\">12</div>\n              <div className=\"text-sm text-purple-700\">Active Clusters</div>\n              <div className=\"flex items-center justify-center mt-2\">\n                <div className=\"w-4 h-4 bg-purple-600 rounded-full mr-1\"></div>\n                <span className=\"text-xs text-purple-600\">Stable</span>\n              </div>\n            </div>\n            <div className=\"text-center p-4 bg-orange-50 rounded-lg\">\n              <div className=\"text-3xl font-bold text-orange-600\">145.5</div>\n              <div className=\"text-sm text-orange-700\">Carbon Credits (tCO2e)</div>\n              <div className=\"flex items-center justify-center mt-2\">\n                <TrendingUp className=\"w-4 h-4 text-green-600 mr-1\" />\n                <span className=\"text-xs text-green-600\">+8.3%</span>\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default Dashboard;\nexport { Dashboard };","import * as React from \"react\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nexport interface InputProps\r\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\r\n\r\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\r\n  ({ className, type, ...props }, ref) => {\r\n    return (\r\n      <input\r\n        type={type}\r\n        className={cn(\r\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nInput.displayName = \"Input\"\r\n\r\nexport { Input }","import React, { useState } from 'react';\nimport { Card, CardHeader, CardTitle, CardDescription, CardContent } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Select } from '@/components/ui/select';\nimport { Users, UserPlus, Edit, Trash2, Search, Filter } from 'lucide-react';\n\ninterface User {\n  id: string;\n  name: string;\n  email: string;\n  role: string;\n  status: 'active' | 'inactive' | 'suspended';\n  lastLogin: string;\n  createdDate: string;\n}\n\nconst UserManagement: React.FC = () => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [roleFilter, setRoleFilter] = useState('all');\n\n  const mockUsers: User[] = [\n    {\n      id: '1',\n      name: 'Rajesh Kumar',\n      email: 'rajesh@gaushala.com',\n      role: 'Gaushala Admin',\n      status: 'active',\n      lastLogin: '2 hours ago',\n      createdDate: '2024-01-15'\n    },\n    {\n      id: '2',\n      name: 'Priya Sharma',\n      email: 'priya@biogas.com',\n      role: 'Biogas Sangh',\n      status: 'active',\n      lastLogin: '1 day ago',\n      createdDate: '2024-02-10'\n    },\n    {\n      id: '3',\n      name: 'Amit Patel',\n      email: 'amit@sales.com',\n      role: 'Sales Representative',\n      status: 'inactive',\n      lastLogin: '1 week ago',\n      createdDate: '2024-01-20'\n    },\n    {\n      id: '4',\n      name: 'Sunita Devi',\n      email: 'sunita@purification.com',\n      role: 'Purification Operator',\n      status: 'active',\n      lastLogin: '3 hours ago',\n      createdDate: '2024-03-05'\n    },\n    {\n      id: '5',\n      name: 'Dr. Suresh Verma',\n      email: 'suresh@admin.com',\n      role: 'Super Admin',\n      status: 'active',\n      lastLogin: '30 minutes ago',\n      createdDate: '2023-12-01'\n    }\n  ];\n\n  const getStatusBadge = (status: User['status']) => {\n    switch (status) {\n      case 'active':\n        return <Badge className=\"bg-green-500\">Active</Badge>;\n      case 'inactive':\n        return <Badge className=\"bg-gray-500\">Inactive</Badge>;\n      case 'suspended':\n        return <Badge className=\"bg-red-500\">Suspended</Badge>;\n    }\n  };\n\n  const getRoleBadge = (role: string) => {\n    const roleColors: Record<string, string> = {\n      'Super Admin': 'bg-purple-500',\n      'Gaushala Admin': 'bg-blue-500',\n      'Biogas Sangh': 'bg-green-500',\n      'Sales Representative': 'bg-orange-500',\n      'Purification Operator': 'bg-cyan-500',\n      'Viewer': 'bg-gray-500'\n    };\n    return <Badge className={roleColors[role] || 'bg-gray-500'}>{role}</Badge>;\n  };\n\n  const filteredUsers = mockUsers.filter(user => {\n    const matchesSearch = user.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         user.email.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesRole = roleFilter === 'all' || user.role === roleFilter;\n    return matchesSearch && matchesRole;\n  });\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex justify-between items-center\">\n        <div>\n          <h1 className=\"text-3xl font-bold tracking-tight\">User Management</h1>\n          <p className=\"text-muted-foreground\">\n            Manage users, roles, and permissions across the platform\n          </p>\n        </div>\n        <Button className=\"flex items-center gap-2\">\n          <UserPlus className=\"h-4 w-4\" />\n          Add User\n        </Button>\n      </div>\n\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Users className=\"h-5 w-5\" />\n            User Directory\n          </CardTitle>\n          <CardDescription>\n            Total {mockUsers.length} users across all roles\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"flex gap-4 mb-6\">\n            <div className=\"flex-1\">\n              <div className=\"relative\">\n                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n                <Input\n                  placeholder=\"Search users by name or email...\"\n                  value={searchTerm}\n                  onChange={(e) => setSearchTerm(e.target.value)}\n                  className=\"pl-10\"\n                />\n              </div>\n            </div>\n            <div className=\"w-48\">\n              <select\n                value={roleFilter}\n                onChange={(e) => setRoleFilter(e.target.value)}\n                className=\"w-full px-3 py-2 border border-input bg-background rounded-md\"\n              >\n                <option value=\"all\">All Roles</option>\n                <option value=\"Super Admin\">Super Admin</option>\n                <option value=\"Gaushala Admin\">Gaushala Admin</option>\n                <option value=\"Biogas Sangh\">Biogas Sangh</option>\n                <option value=\"Sales Representative\">Sales Representative</option>\n                <option value=\"Purification Operator\">Purification Operator</option>\n                <option value=\"Viewer\">Viewer</option>\n              </select>\n            </div>\n          </div>\n\n          <div className=\"border rounded-lg overflow-hidden\">\n            <table className=\"w-full\">\n              <thead className=\"bg-muted/50\">\n                <tr className=\"border-b\">\n                  <th className=\"text-left p-4 font-medium\">User</th>\n                  <th className=\"text-left p-4 font-medium\">Role</th>\n                  <th className=\"text-left p-4 font-medium\">Status</th>\n                  <th className=\"text-left p-4 font-medium\">Last Login</th>\n                  <th className=\"text-left p-4 font-medium\">Actions</th>\n                </tr>\n              </thead>\n              <tbody>\n                {filteredUsers.map((user) => (\n                  <tr key={user.id} className=\"border-b hover:bg-muted/30\">\n                    <td className=\"p-4\">\n                      <div>\n                        <p className=\"font-medium\">{user.name}</p>\n                        <p className=\"text-sm text-muted-foreground\">{user.email}</p>\n                      </div>\n                    </td>\n                    <td className=\"p-4\">\n                      {getRoleBadge(user.role)}\n                    </td>\n                    <td className=\"p-4\">\n                      {getStatusBadge(user.status)}\n                    </td>\n                    <td className=\"p-4\">\n                      <div>\n                        <p className=\"text-sm\">{user.lastLogin}</p>\n                        <p className=\"text-xs text-muted-foreground\">\n                          Created: {new Date(user.createdDate).toLocaleDateString()}\n                        </p>\n                      </div>\n                    </td>\n                    <td className=\"p-4\">\n                      <div className=\"flex gap-2\">\n                        <Button variant=\"ghost\" size=\"sm\">\n                          <Edit className=\"h-4 w-4\" />\n                        </Button>\n                        <Button variant=\"ghost\" size=\"sm\" className=\"text-red-600 hover:text-red-700\">\n                          <Trash2 className=\"h-4 w-4\" />\n                        </Button>\n                      </div>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n\n          {filteredUsers.length === 0 && (\n            <div className=\"text-center py-12\">\n              <Users className=\"h-12 w-12 text-muted-foreground mx-auto mb-4\" />\n              <p className=\"text-muted-foreground\">No users found matching your criteria</p>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n        <Card>\n          <CardHeader>\n            <CardTitle>Role Distribution</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-3\">\n              <div className=\"flex justify-between items-center\">\n                <span className=\"text-sm\">Gaushala Admin</span>\n                <Badge variant=\"secondary\">1</Badge>\n              </div>\n              <div className=\"flex justify-between items-center\">\n                <span className=\"text-sm\">Biogas Sangh</span>\n                <Badge variant=\"secondary\">1</Badge>\n              </div>\n              <div className=\"flex justify-between items-center\">\n                <span className=\"text-sm\">Sales Rep</span>\n                <Badge variant=\"secondary\">1</Badge>\n              </div>\n              <div className=\"flex justify-between items-center\">\n                <span className=\"text-sm\">Purification Op</span>\n                <Badge variant=\"secondary\">1</Badge>\n              </div>\n              <div className=\"flex justify-between items-center\">\n                <span className=\"text-sm\">Super Admin</span>\n                <Badge variant=\"secondary\">1</Badge>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <CardTitle>User Activity</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-3\">\n              <div className=\"flex justify-between items-center\">\n                <span className=\"text-sm\">Active Users</span>\n                <Badge className=\"bg-green-500\">4</Badge>\n              </div>\n              <div className=\"flex justify-between items-center\">\n                <span className=\"text-sm\">Inactive Users</span>\n                <Badge className=\"bg-gray-500\">1</Badge>\n              </div>\n              <div className=\"flex justify-between items-center\">\n                <span className=\"text-sm\">Recent Logins</span>\n                <Badge variant=\"secondary\">3</Badge>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <CardTitle>Quick Actions</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-3\">\n              <Button variant=\"outline\" className=\"w-full justify-start\">\n                Export User List\n              </Button>\n              <Button variant=\"outline\" className=\"w-full justify-start\">\n                Bulk Import Users\n              </Button>\n              <Button variant=\"outline\" className=\"w-full justify-start\">\n                Role Permissions\n              </Button>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n};\n\nexport default UserManagement;\nexport { UserManagement };","import React, { useState } from 'react';\nimport { Card, CardHeader, CardTitle, CardDescription, CardContent } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Wifi, WifiOff, Plus, Settings, Search, Smartphone, Bluetooth, Monitor } from 'lucide-react';\n\ninterface Device {\n  id: string;\n  name: string;\n  type: 'RFID' | 'IoT Scale' | 'CH4 Sensor' | 'GPS Unit';\n  status: 'online' | 'offline' | 'maintenance';\n  location: string;\n  lastSeen: string;\n  batteryLevel?: number;\n}\n\nconst DeviceRegistry: React.FC = () => {\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const mockDevices: Device[] = [\n    {\n      id: 'RFID-001',\n      name: 'Cattle Tag Reader 1',\n      type: 'RFID',\n      status: 'online',\n      location: 'Mathura Gaushala - Gate 1',\n      lastSeen: '2 minutes ago',\n      batteryLevel: 85\n    },\n    {\n      id: 'SCALE-001',\n      name: 'Biogas Scale Unit 1',\n      type: 'IoT Scale',\n      status: 'online',\n      location: 'Mathura Cluster - Digester 1',\n      lastSeen: '1 minute ago',\n      batteryLevel: 92\n    },\n    {\n      id: 'CH4-001',\n      name: 'Methane Sensor 1',\n      type: 'CH4 Sensor',\n      status: 'maintenance',\n      location: 'Vrindavan Cluster - Production Unit',\n      lastSeen: '2 hours ago',\n      batteryLevel: 45\n    },\n    {\n      id: 'GPS-001',\n      name: 'Vehicle Tracker 1',\n      type: 'GPS Unit',\n      status: 'online',\n      location: 'Transport Vehicle TV-001',\n      lastSeen: '30 seconds ago',\n      batteryLevel: 78\n    },\n    {\n      id: 'RFID-002',\n      name: 'Cattle Tag Reader 2',\n      type: 'RFID',\n      status: 'offline',\n      location: 'Goverdhan Gaushala - Feeding Area',\n      lastSeen: '6 hours ago',\n      batteryLevel: 12\n    }\n  ];\n\n  const getStatusBadge = (status: Device['status']) => {\n    switch (status) {\n      case 'online':\n        return <Badge className=\"bg-green-500 flex items-center gap-1\"><Wifi className=\"h-3 w-3\" />Online</Badge>;\n      case 'offline':\n        return <Badge className=\"bg-red-500 flex items-center gap-1\"><WifiOff className=\"h-3 w-3\" />Offline</Badge>;\n      case 'maintenance':\n        return <Badge className=\"bg-yellow-500 flex items-center gap-1\"><Settings className=\"h-3 w-3\" />Maintenance</Badge>;\n    }\n  };\n\n  const getDeviceIcon = (type: Device['type']) => {\n    switch (type) {\n      case 'RFID':\n        return <Smartphone className=\"h-5 w-5\" />;\n      case 'IoT Scale':\n        return <Monitor className=\"h-5 w-5\" />;\n      case 'CH4 Sensor':\n        return <Bluetooth className=\"h-5 w-5\" />;\n      case 'GPS Unit':\n        return <Smartphone className=\"h-5 w-5\" />;\n    }\n  };\n\n  const getBatteryColor = (level?: number) => {\n    if (!level) return 'text-gray-500';\n    if (level > 50) return 'text-green-600';\n    if (level > 20) return 'text-yellow-600';\n    return 'text-red-600';\n  };\n\n  const filteredDevices = mockDevices.filter(device => \n    device.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    device.type.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    device.location.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex justify-between items-center\">\n        <div>\n          <h1 className=\"text-3xl font-bold tracking-tight\">Device Registry</h1>\n          <p className=\"text-muted-foreground\">\n            Manage IoT devices, RFID readers, sensors, and tracking units\n          </p>\n        </div>\n        <Button className=\"flex items-center gap-2\">\n          <Plus className=\"h-4 w-4\" />\n          Add Device\n        </Button>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium\">Total Devices</p>\n                <p className=\"text-2xl font-bold\">{mockDevices.length}</p>\n              </div>\n              <Monitor className=\"h-8 w-8 text-blue-500\" />\n            </div>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium\">Online</p>\n                <p className=\"text-2xl font-bold text-green-600\">\n                  {mockDevices.filter(d => d.status === 'online').length}\n                </p>\n              </div>\n              <Wifi className=\"h-8 w-8 text-green-500\" />\n            </div>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium\">Offline</p>\n                <p className=\"text-2xl font-bold text-red-600\">\n                  {mockDevices.filter(d => d.status === 'offline').length}\n                </p>\n              </div>\n              <WifiOff className=\"h-8 w-8 text-red-500\" />\n            </div>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium\">Maintenance</p>\n                <p className=\"text-2xl font-bold text-yellow-600\">\n                  {mockDevices.filter(d => d.status === 'maintenance').length}\n                </p>\n              </div>\n              <Settings className=\"h-8 w-8 text-yellow-500\" />\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      <Card>\n        <CardHeader>\n          <CardTitle>Device Inventory</CardTitle>\n          <CardDescription>\n            All registered IoT devices and sensors\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"mb-6\">\n            <div className=\"relative\">\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n              <Input\n                placeholder=\"Search devices by name, type, or location...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"pl-10\"\n              />\n            </div>\n          </div>\n\n          <div className=\"border rounded-lg overflow-hidden\">\n            <table className=\"w-full\">\n              <thead className=\"bg-muted/50\">\n                <tr className=\"border-b\">\n                  <th className=\"text-left p-4 font-medium\">Device</th>\n                  <th className=\"text-left p-4 font-medium\">Type</th>\n                  <th className=\"text-left p-4 font-medium\">Status</th>\n                  <th className=\"text-left p-4 font-medium\">Location</th>\n                  <th className=\"text-left p-4 font-medium\">Battery</th>\n                  <th className=\"text-left p-4 font-medium\">Last Seen</th>\n                  <th className=\"text-left p-4 font-medium\">Actions</th>\n                </tr>\n              </thead>\n              <tbody>\n                {filteredDevices.map((device) => (\n                  <tr key={device.id} className=\"border-b hover:bg-muted/30\">\n                    <td className=\"p-4\">\n                      <div className=\"flex items-center gap-3\">\n                        {getDeviceIcon(device.type)}\n                        <div>\n                          <p className=\"font-medium\">{device.name}</p>\n                          <p className=\"text-sm text-muted-foreground\">{device.id}</p>\n                        </div>\n                      </div>\n                    </td>\n                    <td className=\"p-4\">\n                      <Badge variant=\"secondary\">{device.type}</Badge>\n                    </td>\n                    <td className=\"p-4\">\n                      {getStatusBadge(device.status)}\n                    </td>\n                    <td className=\"p-4\">\n                      <p className=\"text-sm\">{device.location}</p>\n                    </td>\n                    <td className=\"p-4\">\n                      {device.batteryLevel && (\n                        <div className=\"flex items-center gap-2\">\n                          <div className=\"w-16 h-2 bg-gray-200 rounded-full\">\n                            <div \n                              className={`h-2 rounded-full ${getBatteryColor(device.batteryLevel).includes('green') ? 'bg-green-500' : \n                                getBatteryColor(device.batteryLevel).includes('yellow') ? 'bg-yellow-500' : 'bg-red-500'}`}\n                              style={{ width: `${device.batteryLevel}%` }}\n                            ></div>\n                          </div>\n                          <span className={`text-sm ${getBatteryColor(device.batteryLevel)}`}>\n                            {device.batteryLevel}%\n                          </span>\n                        </div>\n                      )}\n                    </td>\n                    <td className=\"p-4\">\n                      <p className=\"text-sm\">{device.lastSeen}</p>\n                    </td>\n                    <td className=\"p-4\">\n                      <div className=\"flex gap-2\">\n                        <Button variant=\"ghost\" size=\"sm\">\n                          <Settings className=\"h-4 w-4\" />\n                        </Button>\n                      </div>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default DeviceRegistry;\nexport { DeviceRegistry };","import React, { useState } from 'react';\nimport { Card, CardHeader, CardTitle, CardDescription, CardContent } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Shield, User, Database, AlertTriangle, CheckCircle, XCircle, Search, Download } from 'lucide-react';\n\ninterface AuditLog {\n  id: string;\n  timestamp: string;\n  user: string;\n  action: string;\n  module: string;\n  status: 'success' | 'failed' | 'warning';\n  ipAddress: string;\n  details: string;\n}\n\nconst AuditLogs: React.FC = () => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [moduleFilter, setModuleFilter] = useState('all');\n\n  const mockLogs: AuditLog[] = [\n    {\n      id: 'AL-001',\n      timestamp: '2024-01-15 14:30:25',\n      user: 'admin@saubhagya.com',\n      action: 'User Login',\n      module: 'Authentication',\n      status: 'success',\n      ipAddress: '192.168.1.100',\n      details: 'Successful admin login from dashboard'\n    },\n    {\n      id: 'AL-002',\n      timestamp: '2024-01-15 14:28:15',\n      user: 'rajesh@gaushala.com',\n      action: 'Update Device Configuration',\n      module: 'Device Management',\n      status: 'success',\n      ipAddress: '192.168.1.105',\n      details: 'Modified RFID reader settings for Cattle Tag Reader 1'\n    },\n    {\n      id: 'AL-003',\n      timestamp: '2024-01-15 14:25:10',\n      user: 'priya@biogas.com',\n      action: 'Failed Login Attempt',\n      module: 'Authentication',\n      status: 'failed',\n      ipAddress: '192.168.1.110',\n      details: 'Invalid password provided - 3rd attempt'\n    },\n    {\n      id: 'AL-004',\n      timestamp: '2024-01-15 14:20:05',\n      user: 'system',\n      action: 'Database Backup',\n      module: 'System',\n      status: 'success',\n      ipAddress: 'localhost',\n      details: 'Automated daily backup completed successfully'\n    },\n    {\n      id: 'AL-005',\n      timestamp: '2024-01-15 14:15:30',\n      user: 'amit@sales.com',\n      action: 'Export Customer Data',\n      module: 'Sales',\n      status: 'warning',\n      ipAddress: '192.168.1.112',\n      details: 'Large dataset export - monitoring for performance impact'\n    },\n    {\n      id: 'AL-006',\n      timestamp: '2024-01-15 14:10:20',\n      user: 'admin@saubhagya.com',\n      action: 'Create User Account',\n      module: 'User Management',\n      status: 'success',\n      ipAddress: '192.168.1.100',\n      details: 'New user account created for transport team member'\n    }\n  ];\n\n  const getStatusIcon = (status: AuditLog['status']) => {\n    switch (status) {\n      case 'success':\n        return <CheckCircle className=\"h-4 w-4 text-green-500\" />;\n      case 'failed':\n        return <XCircle className=\"h-4 w-4 text-red-500\" />;\n      case 'warning':\n        return <AlertTriangle className=\"h-4 w-4 text-yellow-500\" />;\n    }\n  };\n\n  const getStatusBadge = (status: AuditLog['status']) => {\n    switch (status) {\n      case 'success':\n        return <Badge className=\"bg-green-500\">Success</Badge>;\n      case 'failed':\n        return <Badge className=\"bg-red-500\">Failed</Badge>;\n      case 'warning':\n        return <Badge className=\"bg-yellow-500\">Warning</Badge>;\n    }\n  };\n\n  const getModuleIcon = (module: string) => {\n    switch (module) {\n      case 'Authentication':\n        return <Shield className=\"h-4 w-4\" />;\n      case 'User Management':\n        return <User className=\"h-4 w-4\" />;\n      case 'System':\n        return <Database className=\"h-4 w-4\" />;\n      default:\n        return <Database className=\"h-4 w-4\" />;\n    }\n  };\n\n  const filteredLogs = mockLogs.filter(log => {\n    const matchesSearch = log.action.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         log.user.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         log.details.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesModule = moduleFilter === 'all' || log.module === moduleFilter;\n    return matchesSearch && matchesModule;\n  });\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex justify-between items-center\">\n        <div>\n          <h1 className=\"text-3xl font-bold tracking-tight\">Audit Logs</h1>\n          <p className=\"text-muted-foreground\">\n            Comprehensive audit trail of all system activities and user actions\n          </p>\n        </div>\n        <Button className=\"flex items-center gap-2\">\n          <Download className=\"h-4 w-4\" />\n          Export Logs\n        </Button>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium\">Total Events</p>\n                <p className=\"text-2xl font-bold\">{mockLogs.length}</p>\n              </div>\n              <Database className=\"h-8 w-8 text-blue-500\" />\n            </div>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium\">Success</p>\n                <p className=\"text-2xl font-bold text-green-600\">\n                  {mockLogs.filter(l => l.status === 'success').length}\n                </p>\n              </div>\n              <CheckCircle className=\"h-8 w-8 text-green-500\" />\n            </div>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium\">Failed</p>\n                <p className=\"text-2xl font-bold text-red-600\">\n                  {mockLogs.filter(l => l.status === 'failed').length}\n                </p>\n              </div>\n              <XCircle className=\"h-8 w-8 text-red-500\" />\n            </div>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium\">Warnings</p>\n                <p className=\"text-2xl font-bold text-yellow-600\">\n                  {mockLogs.filter(l => l.status === 'warning').length}\n                </p>\n              </div>\n              <AlertTriangle className=\"h-8 w-8 text-yellow-500\" />\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Shield className=\"h-5 w-5\" />\n            System Audit Trail\n          </CardTitle>\n          <CardDescription>\n            Real-time monitoring of all user actions and system events\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"flex gap-4 mb-6\">\n            <div className=\"flex-1\">\n              <div className=\"relative\">\n                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n                <Input\n                  placeholder=\"Search audit logs by action, user, or details...\"\n                  value={searchTerm}\n                  onChange={(e) => setSearchTerm(e.target.value)}\n                  className=\"pl-10\"\n                />\n              </div>\n            </div>\n            <div className=\"w-48\">\n              <select\n                value={moduleFilter}\n                onChange={(e) => setModuleFilter(e.target.value)}\n                className=\"w-full px-3 py-2 border border-input bg-background rounded-md\"\n              >\n                <option value=\"all\">All Modules</option>\n                <option value=\"Authentication\">Authentication</option>\n                <option value=\"User Management\">User Management</option>\n                <option value=\"Device Management\">Device Management</option>\n                <option value=\"Sales\">Sales</option>\n                <option value=\"System\">System</option>\n              </select>\n            </div>\n          </div>\n\n          <div className=\"border rounded-lg overflow-hidden\">\n            <table className=\"w-full\">\n              <thead className=\"bg-muted/50\">\n                <tr className=\"border-b\">\n                  <th className=\"text-left p-4 font-medium\">Timestamp</th>\n                  <th className=\"text-left p-4 font-medium\">User</th>\n                  <th className=\"text-left p-4 font-medium\">Action</th>\n                  <th className=\"text-left p-4 font-medium\">Module</th>\n                  <th className=\"text-left p-4 font-medium\">Status</th>\n                  <th className=\"text-left p-4 font-medium\">IP Address</th>\n                </tr>\n              </thead>\n              <tbody>\n                {filteredLogs.map((log) => (\n                  <tr key={log.id} className=\"border-b hover:bg-muted/30\">\n                    <td className=\"p-4\">\n                      <p className=\"text-sm font-mono\">{log.timestamp}</p>\n                    </td>\n                    <td className=\"p-4\">\n                      <div className=\"flex items-center gap-2\">\n                        <User className=\"h-4 w-4\" />\n                        <p className=\"text-sm\">{log.user}</p>\n                      </div>\n                    </td>\n                    <td className=\"p-4\">\n                      <div>\n                        <p className=\"font-medium text-sm\">{log.action}</p>\n                        <p className=\"text-xs text-muted-foreground\">{log.details}</p>\n                      </div>\n                    </td>\n                    <td className=\"p-4\">\n                      <div className=\"flex items-center gap-2\">\n                        {getModuleIcon(log.module)}\n                        <Badge variant=\"secondary\">{log.module}</Badge>\n                      </div>\n                    </td>\n                    <td className=\"p-4\">\n                      <div className=\"flex items-center gap-2\">\n                        {getStatusIcon(log.status)}\n                        {getStatusBadge(log.status)}\n                      </div>\n                    </td>\n                    <td className=\"p-4\">\n                      <p className=\"text-sm font-mono\">{log.ipAddress}</p>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n\n          {filteredLogs.length === 0 && (\n            <div className=\"text-center py-12\">\n              <Shield className=\"h-12 w-12 text-muted-foreground mx-auto mb-4\" />\n              <p className=\"text-muted-foreground\">No audit logs found matching your criteria</p>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default AuditLogs;\nexport { AuditLogs };","import React from 'react';\nimport { Card, CardHeader, CardTitle, CardDescription, CardContent } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { BarChart3, TrendingUp, DollarSign, Leaf, Download, Calendar, FileText, PieChart } from 'lucide-react';\n\nconst Reports: React.FC = () => {\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex justify-between items-center\">\n        <div>\n          <h1 className=\"text-3xl font-bold tracking-tight\">Revenue & Carbon Reports</h1>\n          <p className=\"text-muted-foreground\">\n            Comprehensive financial and environmental impact reporting\n          </p>\n        </div>\n        <Button className=\"flex items-center gap-2\">\n          <FileText className=\"h-4 w-4\" />\n          Create Custom Report\n        </Button>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Monthly Revenue</CardTitle>\n            <DollarSign className=\"h-4 w-4 text-green-600\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">₹8.2L</div>\n            <div className=\"mt-2\">\n              <Badge className=\"bg-green-500\">+15.3%</Badge>\n              <span className=\"text-xs text-muted-foreground ml-2\">vs last month</span>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Carbon Credits</CardTitle>\n            <Leaf className=\"h-4 w-4 text-green-600\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">145.5 tCO2e</div>\n            <div className=\"mt-2\">\n              <Badge className=\"bg-green-500\">+12.8%</Badge>\n              <span className=\"text-xs text-muted-foreground ml-2\">this month</span>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">CBG Production</CardTitle>\n            <BarChart3 className=\"h-4 w-4 text-blue-600\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">2,450 m³</div>\n            <div className=\"mt-2\">\n              <Badge className=\"bg-blue-500\">+8.4%</Badge>\n              <span className=\"text-xs text-muted-foreground ml-2\">monthly avg</span>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Cluster Efficiency</CardTitle>\n            <TrendingUp className=\"h-4 w-4 text-purple-600\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">89.2%</div>\n            <div className=\"mt-2\">\n              <Badge className=\"bg-purple-500\">+2.1%</Badge>\n              <span className=\"text-xs text-muted-foreground ml-2\">improvement</span>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <DollarSign className=\"h-5 w-5\" />\n              Revenue Breakdown\n            </CardTitle>\n            <CardDescription>\n              Monthly revenue by source and performance\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-4\">\n              <div className=\"flex justify-between items-center p-4 border rounded-lg\">\n                <div>\n                  <p className=\"font-medium\">CBG Sales</p>\n                  <p className=\"text-sm text-muted-foreground\">Direct biogas sales to customers</p>\n                </div>\n                <div className=\"text-right\">\n                  <p className=\"font-bold text-lg\">₹6.8L</p>\n                  <Badge className=\"bg-green-500\">83% of total</Badge>\n                </div>\n              </div>\n              <div className=\"flex justify-between items-center p-4 border rounded-lg\">\n                <div>\n                  <p className=\"font-medium\">Carbon Credits</p>\n                  <p className=\"text-sm text-muted-foreground\">CO2 offset certificates sold</p>\n                </div>\n                <div className=\"text-right\">\n                  <p className=\"font-bold text-lg\">₹1.2L</p>\n                  <Badge className=\"bg-blue-500\">15% of total</Badge>\n                </div>\n              </div>\n              <div className=\"flex justify-between items-center p-4 border rounded-lg\">\n                <div>\n                  <p className=\"font-medium\">Organic Fertilizer</p>\n                  <p className=\"text-sm text-muted-foreground\">Slurry and compost sales</p>\n                </div>\n                <div className=\"text-right\">\n                  <p className=\"font-bold text-lg\">₹0.2L</p>\n                  <Badge className=\"bg-purple-500\">2% of total</Badge>\n                </div>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <Leaf className=\"h-5 w-5\" />\n              Carbon Impact Summary\n            </CardTitle>\n            <CardDescription>\n              Environmental impact and carbon credit calculations\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-4\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div className=\"p-3 bg-green-50 rounded-lg\">\n                  <p className=\"text-sm font-medium text-green-800\">CO2 Offset</p>\n                  <p className=\"text-xl font-bold text-green-900\">145.5 tCO2e</p>\n                  <p className=\"text-xs text-green-600\">This month</p>\n                </div>\n                <div className=\"p-3 bg-blue-50 rounded-lg\">\n                  <p className=\"text-sm font-medium text-blue-800\">Credits Generated</p>\n                  <p className=\"text-xl font-bold text-blue-900\">145</p>\n                  <p className=\"text-xs text-blue-600\">Verified credits</p>\n                </div>\n              </div>\n              <div className=\"p-4 border rounded-lg\">\n                <p className=\"font-medium mb-2\">Carbon Credit Pricing</p>\n                <div className=\"flex justify-between text-sm\">\n                  <span>Current Market Rate:</span>\n                  <span className=\"font-bold\">₹850/tCO2e</span>\n                </div>\n                <div className=\"flex justify-between text-sm\">\n                  <span>Our Rate:</span>\n                  <span className=\"font-bold text-green-600\">₹825/tCO2e</span>\n                </div>\n                <div className=\"flex justify-between text-sm mt-2 pt-2 border-t\">\n                  <span>Total Value:</span>\n                  <span className=\"font-bold text-lg\">₹1,19,888</span>\n                </div>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        <Card>\n          <CardHeader>\n            <CardTitle>Cluster Performance</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-3\">\n              <div className=\"flex justify-between items-center\">\n                <span className=\"text-sm\">Mathura Cluster</span>\n                <div className=\"flex items-center gap-2\">\n                  <div className=\"w-16 h-2 bg-gray-200 rounded-full\">\n                    <div className=\"h-2 bg-green-500 rounded-full\" style={{width: '95%'}}></div>\n                  </div>\n                  <span className=\"text-sm font-medium\">95%</span>\n                </div>\n              </div>\n              <div className=\"flex justify-between items-center\">\n                <span className=\"text-sm\">Vrindavan Cluster</span>\n                <div className=\"flex items-center gap-2\">\n                  <div className=\"w-16 h-2 bg-gray-200 rounded-full\">\n                    <div className=\"h-2 bg-green-500 rounded-full\" style={{width: '92%'}}></div>\n                  </div>\n                  <span className=\"text-sm font-medium\">92%</span>\n                </div>\n              </div>\n              <div className=\"flex justify-between items-center\">\n                <span className=\"text-sm\">Goverdhan Cluster</span>\n                <div className=\"flex items-center gap-2\">\n                  <div className=\"w-16 h-2 bg-gray-200 rounded-full\">\n                    <div className=\"h-2 bg-yellow-500 rounded-full\" style={{width: '87%'}}></div>\n                  </div>\n                  <span className=\"text-sm font-medium\">87%</span>\n                </div>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <CardTitle>Quick Reports</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-3\">\n              <Button variant=\"outline\" className=\"w-full justify-between\">\n                <span className=\"flex items-center gap-2\">\n                  <Calendar className=\"h-4 w-4\" />\n                  Monthly Financial\n                </span>\n                <Download className=\"h-4 w-4\" />\n              </Button>\n              <Button variant=\"outline\" className=\"w-full justify-between\">\n                <span className=\"flex items-center gap-2\">\n                  <Leaf className=\"h-4 w-4\" />\n                  Carbon Credits\n                </span>\n                <Download className=\"h-4 w-4\" />\n              </Button>\n              <Button variant=\"outline\" className=\"w-full justify-between\">\n                <span className=\"flex items-center gap-2\">\n                  <BarChart3 className=\"h-4 w-4\" />\n                  Production Summary\n                </span>\n                <Download className=\"h-4 w-4\" />\n              </Button>\n              <Button variant=\"outline\" className=\"w-full justify-between\">\n                <span className=\"flex items-center gap-2\">\n                  <PieChart className=\"h-4 w-4\" />\n                  Efficiency Analysis\n                </span>\n                <Download className=\"h-4 w-4\" />\n              </Button>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <CardTitle>Compliance Reports</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-3\">\n              <div className=\"p-3 border rounded-lg\">\n                <p className=\"text-sm font-medium\">Government Quarterly</p>\n                <p className=\"text-xs text-muted-foreground\">Due: 31st Jan 2024</p>\n                <Badge className=\"bg-green-500 mt-2\">Ready</Badge>\n              </div>\n              <div className=\"p-3 border rounded-lg\">\n                <p className=\"text-sm font-medium\">Environmental Impact</p>\n                <p className=\"text-xs text-muted-foreground\">Due: 15th Feb 2024</p>\n                <Badge className=\"bg-yellow-500 mt-2\">In Progress</Badge>\n              </div>\n              <div className=\"p-3 border rounded-lg\">\n                <p className=\"text-sm font-medium\">Carbon Verification</p>\n                <p className=\"text-xs text-muted-foreground\">Due: 28th Feb 2024</p>\n                <Badge className=\"bg-blue-500 mt-2\">Scheduled</Badge>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n};\n\nexport default Reports;\nexport { Reports };","import React, { useState } from 'react';\nimport { Card, CardHeader, CardTitle, CardDescription, CardContent } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Settings, Shield, Bell, Database, Globe, Key, Save } from 'lucide-react';\n\ninterface ConfigSection {\n  title: string;\n  description: string;\n  icon: React.ReactNode;\n  settings: ConfigSetting[];\n}\n\ninterface ConfigSetting {\n  key: string;\n  label: string;\n  type: 'text' | 'password' | 'toggle' | 'select';\n  value: string | boolean;\n  options?: string[];\n}\n\nconst Configuration: React.FC = () => {\n  const [config, setConfig] = useState<Record<string, any>>({\n    // Module Settings\n    'biogasModule': true,\n    'salesModule': true,\n    'transportModule': true,\n    'purificationModule': true,\n    'analyticsModule': true,\n    \n    // Integration Config\n    'apiBaseUrl': 'https://api.saubhagya.com',\n    'webhookUrl': 'https://webhook.saubhagya.com/events',\n    'apiKey': '••••••••••••••••',\n    \n    // Notification Rules\n    'emailNotifications': true,\n    'smsNotifications': false,\n    'alertThreshold': '85',\n    'maintenanceReminders': true,\n    \n    // Backup Settings\n    'autoBackup': true,\n    'backupFrequency': 'daily',\n    'retentionDays': '30',\n    \n    // Security Settings\n    'twoFactorAuth': true,\n    'sessionTimeout': '60',\n    'passwordExpiry': '90',\n    \n    // Localization\n    'defaultLanguage': 'en',\n    'timezone': 'Asia/Kolkata',\n    'currency': 'INR'\n  });\n\n  const configSections: ConfigSection[] = [\n    {\n      title: 'Module Settings',\n      description: 'Enable or disable platform modules',\n      icon: <Settings className=\"h-5 w-5\" />,\n      settings: [\n        { key: 'biogasModule', label: 'Biogas Production Module', type: 'toggle', value: config.biogasModule },\n        { key: 'salesModule', label: 'Sales & Distribution Module', type: 'toggle', value: config.salesModule },\n        { key: 'transportModule', label: 'Transport Management Module', type: 'toggle', value: config.transportModule },\n        { key: 'purificationModule', label: 'Purification Operations Module', type: 'toggle', value: config.purificationModule },\n        { key: 'analyticsModule', label: 'Analytics & Reporting Module', type: 'toggle', value: config.analyticsModule }\n      ]\n    },\n    {\n      title: 'Integration Configuration',\n      description: 'API keys and webhook settings',\n      icon: <Key className=\"h-5 w-5\" />,\n      settings: [\n        { key: 'apiBaseUrl', label: 'API Base URL', type: 'text', value: config.apiBaseUrl },\n        { key: 'webhookUrl', label: 'Webhook URL', type: 'text', value: config.webhookUrl },\n        { key: 'apiKey', label: 'API Key', type: 'password', value: config.apiKey }\n      ]\n    },\n    {\n      title: 'Notification Rules',\n      description: 'Alert thresholds and notification preferences',\n      icon: <Bell className=\"h-5 w-5\" />,\n      settings: [\n        { key: 'emailNotifications', label: 'Email Notifications', type: 'toggle', value: config.emailNotifications },\n        { key: 'smsNotifications', label: 'SMS Notifications', type: 'toggle', value: config.smsNotifications },\n        { key: 'alertThreshold', label: 'System Alert Threshold (%)', type: 'text', value: config.alertThreshold },\n        { key: 'maintenanceReminders', label: 'Maintenance Reminders', type: 'toggle', value: config.maintenanceReminders }\n      ]\n    },\n    {\n      title: 'Backup Settings',\n      description: 'Data backup schedule and retention',\n      icon: <Database className=\"h-5 w-5\" />,\n      settings: [\n        { key: 'autoBackup', label: 'Automatic Backups', type: 'toggle', value: config.autoBackup },\n        { key: 'backupFrequency', label: 'Backup Frequency', type: 'select', value: config.backupFrequency, options: ['hourly', 'daily', 'weekly'] },\n        { key: 'retentionDays', label: 'Retention Period (days)', type: 'text', value: config.retentionDays }\n      ]\n    },\n    {\n      title: 'Security Settings',\n      description: 'Authentication and security policies',\n      icon: <Shield className=\"h-5 w-5\" />,\n      settings: [\n        { key: 'twoFactorAuth', label: 'Two-Factor Authentication', type: 'toggle', value: config.twoFactorAuth },\n        { key: 'sessionTimeout', label: 'Session Timeout (minutes)', type: 'text', value: config.sessionTimeout },\n        { key: 'passwordExpiry', label: 'Password Expiry (days)', type: 'text', value: config.passwordExpiry }\n      ]\n    },\n    {\n      title: 'Localization',\n      description: 'Language and regional settings',\n      icon: <Globe className=\"h-5 w-5\" />,\n      settings: [\n        { key: 'defaultLanguage', label: 'Default Language', type: 'select', value: config.defaultLanguage, options: ['en', 'hi'] },\n        { key: 'timezone', label: 'Timezone', type: 'select', value: config.timezone, options: ['Asia/Kolkata', 'UTC'] },\n        { key: 'currency', label: 'Currency', type: 'select', value: config.currency, options: ['INR', 'USD'] }\n      ]\n    }\n  ];\n\n  const handleConfigChange = (key: string, value: any) => {\n    setConfig(prev => ({ ...prev, [key]: value }));\n  };\n\n  const renderSetting = (setting: ConfigSetting) => {\n    switch (setting.type) {\n      case 'toggle':\n        return (\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-sm font-medium\">{setting.label}</span>\n            <label className=\"relative inline-flex items-center cursor-pointer\">\n              <input\n                type=\"checkbox\"\n                checked={setting.value as boolean}\n                onChange={(e) => handleConfigChange(setting.key, e.target.checked)}\n                className=\"sr-only peer\"\n              />\n              <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600\"></div>\n            </label>\n          </div>\n        );\n      case 'select':\n        return (\n          <div className=\"space-y-2\">\n            <label className=\"text-sm font-medium\">{setting.label}</label>\n            <select\n              value={setting.value as string}\n              onChange={(e) => handleConfigChange(setting.key, e.target.value)}\n              className=\"w-full px-3 py-2 border border-input bg-background rounded-md\"\n            >\n              {setting.options?.map(option => (\n                <option key={option} value={option}>{option}</option>\n              ))}\n            </select>\n          </div>\n        );\n      case 'password':\n        return (\n          <div className=\"space-y-2\">\n            <label className=\"text-sm font-medium\">{setting.label}</label>\n            <Input\n              type=\"password\"\n              value={setting.value as string}\n              onChange={(e) => handleConfigChange(setting.key, e.target.value)}\n              placeholder=\"Enter value...\"\n            />\n          </div>\n        );\n      default:\n        return (\n          <div className=\"space-y-2\">\n            <label className=\"text-sm font-medium\">{setting.label}</label>\n            <Input\n              type=\"text\"\n              value={setting.value as string}\n              onChange={(e) => handleConfigChange(setting.key, e.target.value)}\n              placeholder=\"Enter value...\"\n            />\n          </div>\n        );\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex justify-between items-center\">\n        <div>\n          <h1 className=\"text-3xl font-bold tracking-tight\">System Configuration</h1>\n          <p className=\"text-muted-foreground\">\n            Manage platform settings, integrations, and security policies\n          </p>\n        </div>\n        <Button className=\"flex items-center gap-2\">\n          <Save className=\"h-4 w-4\" />\n          Save All Changes\n        </Button>\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {configSections.map((section, index) => (\n          <Card key={index}>\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                {section.icon}\n                {section.title}\n              </CardTitle>\n              <CardDescription>\n                {section.description}\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-4\">\n                {section.settings.map((setting, settingIndex) => (\n                  <div key={settingIndex}>\n                    {renderSetting(setting)}\n                  </div>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n        ))}\n      </div>\n\n      <Card>\n        <CardHeader>\n          <CardTitle>System Status</CardTitle>\n          <CardDescription>\n            Current system configuration and status overview\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <div className=\"p-4 border rounded-lg\">\n              <div className=\"flex items-center justify-between mb-2\">\n                <span className=\"text-sm font-medium\">Active Modules</span>\n                <Badge className=\"bg-green-500\">5/5</Badge>\n              </div>\n              <p className=\"text-xs text-muted-foreground\">\n                All platform modules are operational\n              </p>\n            </div>\n            <div className=\"p-4 border rounded-lg\">\n              <div className=\"flex items-center justify-between mb-2\">\n                <span className=\"text-sm font-medium\">Security Score</span>\n                <Badge className=\"bg-green-500\">98/100</Badge>\n              </div>\n              <p className=\"text-xs text-muted-foreground\">\n                Excellent security configuration\n              </p>\n            </div>\n            <div className=\"p-4 border rounded-lg\">\n              <div className=\"flex items-center justify-between mb-2\">\n                <span className=\"text-sm font-medium\">Last Backup</span>\n                <Badge className=\"bg-blue-500\">2h ago</Badge>\n              </div>\n              <p className=\"text-xs text-muted-foreground\">\n                Next backup scheduled in 22 hours\n              </p>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default Configuration;\nexport { Configuration };","import React from 'react';\nimport { Routes, Route, useNavigate, useLocation } from 'react-router-dom';\nimport BaseLayout from '@/components/layout/BaseLayout';\nimport { Dashboard } from './pages/Dashboard/Dashboard';\nimport { UserManagement } from './pages/UserManagement/UserManagement';\nimport { DeviceRegistry } from './pages/DeviceRegistry/DeviceRegistry';\nimport { AuditLogs } from './pages/AuditLogs/AuditLogs';\nimport { Reports } from './pages/Reports/Reports';\nimport { Configuration } from './pages/Configuration/Configuration';\nimport {\n  LayoutDashboard,\n  Users,\n  HardDrive,\n  FileText,\n  BarChart3,\n  Settings\n} from 'lucide-react';\n\nconst AdminModule: React.FC = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const navigationItems = [\n    {\n      id: 'dashboard',\n      label: 'Dashboard',\n      icon: <LayoutDashboard className=\"w-5 h-5\" />,\n      onClick: () => navigate('/admin'),\n      isActive: location.pathname === '/admin' || location.pathname === '/admin/'\n    },\n    {\n      id: 'users',\n      label: 'User Management',\n      icon: <Users className=\"w-5 h-5\" />,\n      onClick: () => navigate('/admin/users'),\n      isActive: location.pathname === '/admin/users'\n    },\n    {\n      id: 'devices',\n      label: 'Device Registry',\n      icon: <HardDrive className=\"w-5 h-5\" />,\n      onClick: () => navigate('/admin/devices'),\n      isActive: location.pathname === '/admin/devices'\n    },\n    {\n      id: 'audit',\n      label: 'Audit Logs',\n      icon: <FileText className=\"w-5 h-5\" />,\n      onClick: () => navigate('/admin/audit'),\n      isActive: location.pathname === '/admin/audit'\n    },\n    {\n      id: 'reports',\n      label: 'Reports',\n      icon: <BarChart3 className=\"w-5 h-5\" />,\n      onClick: () => navigate('/admin/reports'),\n      isActive: location.pathname === '/admin/reports'\n    },\n    {\n      id: 'config',\n      label: 'Configuration',\n      icon: <Settings className=\"w-5 h-5\" />,\n      onClick: () => navigate('/admin/config'),\n      isActive: location.pathname === '/admin/config'\n    }\n  ];\n\n  return (\n    <BaseLayout\n      moduleName=\"Admin\"\n      moduleSubtitle=\"Platform Management\"\n      navigationItems={navigationItems}\n      userInfo={{\n        name: \"Admin User\",\n        role: \"System Administrator\"\n      }}\n    >\n      <Routes>\n        <Route path=\"/\" element={<Dashboard />} />\n        <Route path=\"/users\" element={<UserManagement />} />\n        <Route path=\"/devices\" element={<DeviceRegistry />} />\n        <Route path=\"/audit\" element={<AuditLogs />} />\n        <Route path=\"/reports\" element={<Reports />} />\n        <Route path=\"/config\" element={<Configuration />} />\n      </Routes>\n    </BaseLayout>\n  );\n};\n\nexport default AdminModule;","import { useState, useEffect } from 'react'\r\nimport { Users, Shield, Settings, Activity, Database, AlertTriangle, Download, Plus, Search, Filter, Eye, Edit, Trash2, Clock, CheckCircle, XCircle } from 'lucide-react'\r\n\r\ninterface User {\r\n  id: string;\r\n  name: string;\r\n  email: string;\r\n  role: 'GauSakhi' | 'BiogasSangh' | 'ShuddhiDoot' | 'UrjaVyapar' | 'UrjaNeta' | 'Admin';\r\n  status: 'active' | 'inactive' | 'suspended';\r\n  lastLogin: Date;\r\n  permissions: string[];\r\n  createdAt: Date;\r\n}\r\n\r\ninterface AuditLog {\r\n  id: string;\r\n  user: string;\r\n  action: string;\r\n  resource: string;\r\n  timestamp: Date;\r\n  ipAddress: string;\r\n  status: 'success' | 'failure' | 'warning';\r\n  details: string;\r\n}\r\n\r\ninterface SystemHealth {\r\n  cpu: number;\r\n  memory: number;\r\n  disk: number;\r\n  network: number;\r\n  database: 'healthy' | 'warning' | 'critical';\r\n  uptime: number;\r\n  activeUsers: number;\r\n  lastBackup: Date;\r\n}\r\n\r\ninterface Alert {\r\n  id: string;\r\n  type: 'security' | 'performance' | 'system' | 'user';\r\n  severity: 'low' | 'medium' | 'high' | 'critical';\r\n  message: string;\r\n  timestamp: Date;\r\n  status: 'open' | 'acknowledged' | 'resolved';\r\n  assignedTo?: string;\r\n}\r\n\r\nexport default function Admin() {\r\n  const [users, setUsers] = useState<User[]>([]);\r\n  const [auditLogs, setAuditLogs] = useState<AuditLog[]>([]);\r\n  const [systemHealth, setSystemHealth] = useState<SystemHealth>({\r\n    cpu: 0,\r\n    memory: 0,\r\n    disk: 0,\r\n    network: 0,\r\n    database: 'healthy',\r\n    uptime: 0,\r\n    activeUsers: 0,\r\n    lastBackup: new Date()\r\n  });\r\n  const [alerts, setAlerts] = useState<Alert[]>([]);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [filterRole, setFilterRole] = useState<string>('all');\r\n  const [filterStatus, setFilterStatus] = useState<string>('all');\r\n  const [language, setLanguage] = useState<'en' | 'hi'>('en');\r\n  const [activeTab, setActiveTab] = useState<'dashboard' | 'users' | 'security' | 'system' | 'logs'>('dashboard');\r\n\r\n  const translations = {\r\n    en: {\r\n      title: 'System Administration Dashboard',\r\n      subtitle: 'User management, system monitoring, and security controls',\r\n      users: 'Users',\r\n      auditLogs: 'Audit Logs',\r\n      systemHealth: 'System Health',\r\n      alerts: 'Alerts',\r\n      searchUsers: 'Search users...',\r\n      filterByRole: 'Filter by role',\r\n      filterByStatus: 'Filter by status',\r\n      all: 'All',\r\n      active: 'Active',\r\n      inactive: 'Inactive',\r\n      suspended: 'Suspended',\r\n      addUser: 'Add User',\r\n      exportData: 'Export Data',\r\n      name: 'Name',\r\n      email: 'Email',\r\n      role: 'Role',\r\n      status: 'Status',\r\n      lastLogin: 'Last Login',\r\n      actions: 'Actions',\r\n      view: 'View',\r\n      edit: 'Edit',\r\n      delete: 'Delete',\r\n      systemMetrics: 'System Metrics',\r\n      cpu: 'CPU',\r\n      memory: 'Memory',\r\n      disk: 'Disk',\r\n      network: 'Network',\r\n      database: 'Database',\r\n      uptime: 'Uptime',\r\n      activeUsers: 'Active Users',\r\n      lastBackup: 'Last Backup',\r\n      healthy: 'Healthy',\r\n      warning: 'Warning',\r\n      critical: 'Critical',\r\n      security: 'Security',\r\n      performance: 'Performance',\r\n      system: 'System',\r\n      user: 'User',\r\n      low: 'Low',\r\n      medium: 'Medium',\r\n      high: 'High',\r\n      open: 'Open',\r\n      acknowledged: 'Acknowledged',\r\n      resolved: 'Resolved',\r\n      assign: 'Assign',\r\n      acknowledge: 'Acknowledge',\r\n      resolve: 'Resolve',\r\n      noActiveAlerts: 'No active alerts',\r\n      systemStatus: 'System Status',\r\n      diskUsage: 'Disk Usage',\r\n      userManagement: 'User Management',\r\n      timestamp: 'Timestamp',\r\n      resource: 'Resource',\r\n      ipAddress: 'IP Address',\r\n      success: 'Success',\r\n      failure: 'Failure',\r\n      quickActions: 'Quick Actions',\r\n      addUserDescription: 'Create new user account',\r\n      securitySettings: 'Security Settings',\r\n      securitySettingsDescription: 'Configure security policies',\r\n      backupManagement: 'Backup Management',\r\n      backupManagementDescription: 'Backup schedule and recovery',\r\n      systemConfiguration: 'System Configuration',\r\n      systemConfigurationDescription: 'Configure system settings',\r\n      gauSakhi: 'GauSakhi',\r\n      biogasSangh: 'BiogasSangh',\r\n      shuddhiDoot: 'ShuddhiDoot',\r\n      urjaVyapar: 'UrjaVyapar',\r\n      urjaNeta: 'UrjaNeta',\r\n      admin: 'Admin'\r\n    },\r\n    hi: {\r\n      title: 'सिस्टम प्रशासन डैशबोर्ड',\r\n      subtitle: 'उपयोगकर्ता प्रबंधन, सिस्टम निगरानी और सुरक्षा नियंत्रण',\r\n      users: 'उपयोगकर्ता',\r\n      auditLogs: 'ऑडिट लॉग',\r\n      systemHealth: 'सिस्टम स्वास्थ्य',\r\n      alerts: 'अलर्ट',\r\n      searchUsers: 'उपयोगकर्ताओं को खोजें...',\r\n      filterByRole: 'भूमिका के अनुसार फ़िल्टर करें',\r\n      filterByStatus: 'स्थिति के अनुसार फ़िल्टर करें',\r\n      all: 'सभी',\r\n      active: 'सक्रिय',\r\n      inactive: 'निष्क्रिय',\r\n      suspended: 'निलंबित',\r\n      addUser: 'उपयोगकर्ता जोड़ें',\r\n      exportData: 'डेटा निर्यात करें',\r\n      name: 'नाम',\r\n      email: 'ईमेल',\r\n      role: 'भूमिका',\r\n      status: 'स्थिति',\r\n      lastLogin: 'अंतिम लॉगिन',\r\n      actions: 'कार्य',\r\n      view: 'देखें',\r\n      edit: 'संपादित करें',\r\n      delete: 'हटाएं',\r\n      systemMetrics: 'सिस्टम मेट्रिक्स',\r\n      cpu: 'सीपीयू',\r\n      memory: 'मेमोरी',\r\n      disk: 'डिस्क',\r\n      network: 'नेटवर्क',\r\n      database: 'डेटाबेस',\r\n      uptime: 'अपटाइम',\r\n      activeUsers: 'सक्रिय उपयोगकर्ता',\r\n      lastBackup: 'अंतिम बैकअप',\r\n      healthy: 'स्वस्थ',\r\n      warning: 'चेतावनी',\r\n      critical: 'गंभीर',\r\n      security: 'सुरक्षा',\r\n      performance: 'प्रदर्शन',\r\n      system: 'सिस्टम',\r\n      user: 'उपयोगकर्ता',\r\n      low: 'कम',\r\n      medium: 'मध्यम',\r\n      high: 'उच्च',\r\n      open: 'खुला',\r\n      acknowledged: 'स्वीकृत',\r\n      resolved: 'समाधान',\r\n      assign: 'नियुक्त करें',\r\n      acknowledge: 'स्वीकार करें',\r\n      resolve: 'समाधान करें',\r\n      noActiveAlerts: 'कोई खुला अलर्ट नहीं',\r\n      systemStatus: 'सिस्टम स्थिति',\r\n      diskUsage: 'डिस्क उपयोग',\r\n      userManagement: 'उपयोगकर्ता प्रबंधन',\r\n      timestamp: 'समयांक',\r\n      resource: 'संसाधन',\r\n      ipAddress: 'IP पता',\r\n      success: 'सफलता',\r\n      failure: 'विफलता',\r\n      quickActions: 'तेज़ कार्य',\r\n      addUserDescription: 'नया उपयोगकर्ता खाता बनाएं',\r\n      securitySettings: 'सुरक्षा सेटिंग्स',\r\n      securitySettingsDescription: 'सुरक्षा नीतियों को कॉन्फ़िगर करें',\r\n      backupManagement: 'बैकअप प्रबंधन',\r\n      backupManagementDescription: 'बैकअप अनुसूची और पुनर्स्थापना',\r\n      systemConfiguration: 'सिस्टम कॉन्फ़िगरेशन',\r\n      systemConfigurationDescription: 'सिस्टम सेटिंग्स को कॉन्फ़िगर करें',\r\n      gauSakhi: 'गौसाक्षी',\r\n      biogasSangh: 'बिओगास संघ',\r\n      shuddhiDoot: 'शुद्धिदूत',\r\n      urjaVyapar: 'उर्जा व्यापार',\r\n      urjaNeta: 'उर्जा नेटा',\r\n      admin: 'व्यवस्थापक'\r\n    }\r\n  };\r\n\r\n  const t = translations[language];\r\n\r\n  // Mock user data\r\n  useEffect(() => {\r\n    const mockUsers: User[] = [\r\n      {\r\n        id: '1',\r\n        name: 'Rajesh Kumar',\r\n        email: 'rajesh@saubhagya.com',\r\n        role: 'GauSakhi',\r\n        status: 'active',\r\n        lastLogin: new Date(Date.now() - 2 * 60 * 60 * 1000),\r\n        permissions: ['cattle:read', 'cattle:write', 'location:read'],\r\n        createdAt: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000)\r\n      },\r\n      {\r\n        id: '2',\r\n        name: 'Priya Sharma',\r\n        email: 'priya@saubhagya.com',\r\n        role: 'BiogasSangh',\r\n        status: 'active',\r\n        lastLogin: new Date(Date.now() - 1 * 60 * 60 * 1000),\r\n        permissions: ['cluster:read', 'cluster:write', 'iot:read', 'reports:read'],\r\n        createdAt: new Date(Date.now() - 25 * 24 * 60 * 60 * 1000)\r\n      },\r\n      {\r\n        id: '3',\r\n        name: 'Amit Singh',\r\n        email: 'amit@saubhagya.com',\r\n        role: 'ShuddhiDoot',\r\n        status: 'active',\r\n        lastLogin: new Date(Date.now() - 30 * 60 * 1000),\r\n        permissions: ['purification:read', 'purification:write', 'maintenance:read'],\r\n        createdAt: new Date(Date.now() - 20 * 24 * 60 * 60 * 1000)\r\n      },\r\n      {\r\n        id: '4',\r\n        name: 'Sita Devi',\r\n        email: 'sita@saubhagya.com',\r\n        role: 'UrjaVyapar',\r\n        status: 'active',\r\n        lastLogin: new Date(Date.now() - 45 * 60 * 1000),\r\n        permissions: ['sales:read', 'sales:write', 'inventory:read', 'customers:read'],\r\n        createdAt: new Date(Date.now() - 15 * 24 * 60 * 60 * 1000)\r\n      },\r\n      {\r\n        id: '5',\r\n        name: 'Vikram Patel',\r\n        email: 'vikram@saubhagya.com',\r\n        role: 'UrjaNeta',\r\n        status: 'active',\r\n        lastLogin: new Date(Date.now() - 3 * 60 * 60 * 1000),\r\n        permissions: ['dashboard:read', 'reports:read', 'analytics:read'],\r\n        createdAt: new Date(Date.now() - 10 * 24 * 60 * 60 * 1000)\r\n      }\r\n    ];\r\n    setUsers(mockUsers);\r\n  }, []);\r\n\r\n  // Mock audit logs\r\n  useEffect(() => {\r\n    const mockLogs: AuditLog[] = [\r\n      {\r\n        id: '1',\r\n        user: 'Rajesh Kumar',\r\n        action: 'LOGIN',\r\n        resource: 'Authentication',\r\n        timestamp: new Date(Date.now() - 2 * 60 * 60 * 1000),\r\n        ipAddress: '192.168.1.100',\r\n        status: 'success',\r\n        details: 'User logged in successfully'\r\n      },\r\n      {\r\n        id: '2',\r\n        user: 'Priya Sharma',\r\n        action: 'UPDATE',\r\n        resource: 'Cluster Data',\r\n        timestamp: new Date(Date.now() - 1 * 60 * 60 * 1000),\r\n        ipAddress: '192.168.1.101',\r\n        status: 'success',\r\n        details: 'Updated cluster performance metrics'\r\n      },\r\n      {\r\n        id: '3',\r\n        user: 'Amit Singh',\r\n        action: 'CREATE',\r\n        resource: 'Maintenance Schedule',\r\n        timestamp: new Date(Date.now() - 30 * 60 * 1000),\r\n        ipAddress: '192.168.1.102',\r\n        status: 'success',\r\n        details: 'Created new maintenance schedule for Compressor Unit A'\r\n      },\r\n      {\r\n        id: '4',\r\n        user: 'Unknown',\r\n        action: 'LOGIN',\r\n        resource: 'Authentication',\r\n        timestamp: new Date(Date.now() - 15 * 60 * 1000),\r\n        ipAddress: '203.45.67.89',\r\n        status: 'failure',\r\n        details: 'Failed login attempt with invalid credentials'\r\n      }\r\n    ];\r\n    setAuditLogs(mockLogs);\r\n  }, []);\r\n\r\n  // Mock system health data\r\n  useEffect(() => {\r\n    const updateSystemHealth = () => {\r\n      setSystemHealth({\r\n        cpu: Math.random() * 30 + 20, // 20-50%\r\n        memory: Math.random() * 40 + 30, // 30-70%\r\n        disk: Math.random() * 20 + 15, // 15-35%\r\n        network: Math.random() * 25 + 10, // 10-35%\r\n        database: Math.random() > 0.8 ? 'warning' : 'healthy',\r\n        uptime: 15 * 24 * 60 * 60 * 1000 + Math.random() * 60 * 60 * 1000, // ~15 days\r\n        activeUsers: Math.floor(Math.random() * 20) + 15, // 15-35 users\r\n        lastBackup: new Date(Date.now() - 6 * 60 * 60 * 1000) // 6 hours ago\r\n      });\r\n    };\r\n\r\n    updateSystemHealth();\r\n    const interval = setInterval(updateSystemHealth, 10000); // Update every 10 seconds\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  // Mock alerts\r\n  useEffect(() => {\r\n    const mockAlerts: Alert[] = [\r\n      {\r\n        id: '1',\r\n        type: 'security',\r\n        severity: 'medium',\r\n        message: 'Multiple failed login attempts detected from IP 203.45.67.89',\r\n        timestamp: new Date(Date.now() - 15 * 60 * 1000),\r\n        status: 'open'\r\n      },\r\n      {\r\n        id: '2',\r\n        type: 'performance',\r\n        severity: 'low',\r\n        message: 'Database query response time increased by 15%',\r\n        timestamp: new Date(Date.now() - 45 * 60 * 1000),\r\n        status: 'acknowledged',\r\n        assignedTo: 'System Admin'\r\n      },\r\n      {\r\n        id: '3',\r\n        type: 'system',\r\n        severity: 'low',\r\n        message: 'Backup completed successfully',\r\n        timestamp: new Date(Date.now() - 6 * 60 * 60 * 1000),\r\n        status: 'resolved'\r\n      }\r\n    ];\r\n    setAlerts(mockAlerts);\r\n  }, []);\r\n\r\n  const getRoleColor = (role: string) => {\r\n    switch (role) {\r\n      case 'GauSakhi': return 'bg-blue-100 text-blue-800';\r\n      case 'BiogasSangh': return 'bg-green-100 text-green-800';\r\n      case 'ShuddhiDoot': return 'bg-purple-100 text-purple-800';\r\n      case 'UrjaVyapar': return 'bg-orange-100 text-orange-800';\r\n      case 'UrjaNeta': return 'bg-indigo-100 text-indigo-800';\r\n      case 'Admin': return 'bg-red-100 text-red-800';\r\n      default: return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'active': return 'bg-green-100 text-green-800';\r\n      case 'inactive': return 'bg-gray-100 text-gray-800';\r\n      case 'suspended': return 'bg-red-100 text-red-800';\r\n      default: return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  const getSeverityColor = (severity: string) => {\r\n    switch (severity) {\r\n      case 'low': return 'bg-blue-100 text-blue-800';\r\n      case 'medium': return 'bg-yellow-100 text-yellow-800';\r\n      case 'high': return 'bg-orange-100 text-orange-800';\r\n      case 'critical': return 'bg-red-100 text-red-800';\r\n      default: return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  const getAlertTypeIcon = (type: string) => {\r\n    switch (type) {\r\n      case 'security': return <Shield className=\"h-4 w-4\" />;\r\n      case 'performance': return <Activity className=\"h-4 w-4\" />;\r\n      case 'system': return <Database className=\"h-4 w-4\" />;\r\n      case 'user': return <Users className=\"h-4 w-4\" />;\r\n      default: return <AlertTriangle className=\"h-4 w-4\" />;\r\n    }\r\n  };\r\n\r\n  const exportData = (format: 'pdf' | 'excel') => {\r\n    alert(`${format.toUpperCase()} export initiated for admin data`);\r\n  };\r\n\r\n  const filteredUsers = users.filter(user =>\r\n    (filterRole === 'all' || user.role === filterRole) &&\r\n    (filterStatus === 'all' || user.status === filterStatus) &&\r\n    (user.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n     user.email.toLowerCase().includes(searchQuery.toLowerCase()))\r\n  );\r\n\r\n  const formatUptime = (uptime: number) => {\r\n    const days = Math.floor(uptime / (24 * 60 * 60 * 1000));\r\n    const hours = Math.floor((uptime % (24 * 60 * 60 * 1000)) / (60 * 60 * 1000));\r\n    return `${days}d ${hours}h`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      {/* Header */}\r\n      <div className=\"flex justify-between items-center\">\r\n        <div>\r\n          <h1 className=\"text-2xl font-bold text-gray-900\">{t.title}</h1>\r\n          <p className=\"text-gray-600\">{t.subtitle}</p>\r\n        </div>\r\n        <div className=\"flex gap-3\">\r\n          <button\r\n            onClick={() => setLanguage(language === 'en' ? 'hi' : 'en')}\r\n            className=\"px-3 py-1 text-sm bg-white rounded-md shadow-sm border border-gray-200 hover:bg-gray-50\"\r\n          >\r\n            {language === 'en' ? 'हिंदी' : 'English'}\r\n          </button>\r\n          <button className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\">\r\n            <Plus className=\"h-4 w-4 inline mr-2\" />\r\n            {t.addUser}\r\n          </button>\r\n          <button\r\n            onClick={() => exportData('pdf')}\r\n            className=\"px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700\"\r\n          >\r\n            <Download className=\"h-4 w-4 inline mr-2\" />\r\n            {t.exportData}\r\n          </button>\r\n          <button\r\n            onClick={() => exportData('excel')}\r\n            className=\"px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700\"\r\n          >\r\n            <Download className=\"h-4 w-4 inline mr-2\" />\r\n            Excel\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Tab Navigation */}\r\n      <div className=\"border-b border-gray-200\">\r\n        <nav className=\"-mb-px flex space-x-8\">\r\n          <button\r\n            onClick={() => setActiveTab('dashboard')}\r\n            className={`whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm ${\r\n              activeTab === 'dashboard'\r\n                ? 'border-blue-500 text-blue-600'\r\n                : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\r\n            }`}\r\n          >\r\n            <Activity className=\"h-4 w-4 inline mr-2\" />\r\n            Dashboard\r\n          </button>\r\n          <button\r\n            onClick={() => setActiveTab('users')}\r\n            className={`whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm ${\r\n              activeTab === 'users'\r\n                ? 'border-blue-500 text-blue-600'\r\n                : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\r\n            }`}\r\n          >\r\n            <Users className=\"h-4 w-4 inline mr-2\" />\r\n            Users\r\n          </button>\r\n          <button\r\n            onClick={() => setActiveTab('security')}\r\n            className={`whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm ${\r\n              activeTab === 'security'\r\n                ? 'border-blue-500 text-blue-600'\r\n                : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\r\n            }`}\r\n          >\r\n            <Shield className=\"h-4 w-4 inline mr-2\" />\r\n            Security\r\n          </button>\r\n          <button\r\n            onClick={() => setActiveTab('system')}\r\n            className={`whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm ${\r\n              activeTab === 'system'\r\n                ? 'border-blue-500 text-blue-600'\r\n                : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\r\n            }`}\r\n          >\r\n            <Settings className=\"h-4 w-4 inline mr-2\" />\r\n            System\r\n          </button>\r\n          <button\r\n            onClick={() => setActiveTab('logs')}\r\n            className={`whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm ${\r\n              activeTab === 'logs'\r\n                ? 'border-blue-500 text-blue-600'\r\n                : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\r\n            }`}\r\n          >\r\n            <Database className=\"h-4 w-4 inline mr-2\" />\r\n            Audit Logs\r\n          </button>\r\n        </nav>\r\n      </div>\r\n\r\n      {/* Tab Content */}\r\n      {activeTab === 'dashboard' && (\r\n        <>\r\n          {/* System Health Overview */}\r\n          <div className=\"grid grid-cols-1 gap-5 sm:grid-cols-2 lg:grid-cols-4\">\r\n            <div className=\"bg-white overflow-hidden shadow rounded-lg\">\r\n              <div className=\"p-5\">\r\n                <div className=\"flex items-center\">\r\n                  <div className=\"flex-shrink-0\">\r\n                    <Activity className=\"h-6 w-6 text-blue-400\" />\r\n                  </div>\r\n                  <div className=\"ml-5 w-0 flex-1\">\r\n                    <dl>\r\n                      <dt className=\"text-sm font-medium text-gray-500 truncate\">{t.cpu}</dt>\r\n                      <dd className=\"text-lg font-medium text-gray-900\">{systemHealth.cpu.toFixed(1)}%</dd>\r\n                    </dl>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"bg-white overflow-hidden shadow rounded-lg\">\r\n              <div className=\"p-5\">\r\n                <div className=\"flex items-center\">\r\n                  <div className=\"flex-shrink-0\">\r\n                    <Database className=\"h-6 w-6 text-green-400\" />\r\n                  </div>\r\n                  <div className=\"ml-5 w-0 flex-1\">\r\n                    <dl>\r\n                      <dt className=\"text-sm font-medium text-gray-500 truncate\">{t.memory}</dt>\r\n                      <dd className=\"text-lg font-medium text-gray-900\">{systemHealth.memory.toFixed(1)}%</dd>\r\n                    </dl>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"bg-white overflow-hidden shadow rounded-lg\">\r\n              <div className=\"p-5\">\r\n                <div className=\"flex items-center\">\r\n                  <div className=\"flex-shrink-0\">\r\n                    <Shield className=\"h-6 w-6 text-purple-400\" />\r\n                  </div>\r\n                  <div className=\"ml-5 w-0 flex-1\">\r\n                    <dl>\r\n                      <dt className=\"text-sm font-medium text-gray-500 truncate\">{t.activeUsers}</dt>\r\n                      <dd className=\"text-lg font-medium text-gray-900\">{systemHealth.activeUsers}</dd>\r\n                    </dl>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"bg-white overflow-hidden shadow rounded-lg\">\r\n              <div className=\"p-5\">\r\n                <div className=\"flex items-center\">\r\n                  <div className=\"flex-shrink-0\">\r\n                    <Clock className=\"h-6 w-6 text-orange-400\" />\r\n                  </div>\r\n                  <div className=\"ml-5 w-0 flex-1\">\r\n                    <dl>\r\n                      <dt className=\"text-sm font-medium text-gray-500 truncate\">{t.uptime}</dt>\r\n                      <dd className=\"text-lg font-medium text-gray-900\">{formatUptime(systemHealth.uptime)}</dd>\r\n                    </dl>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Alerts and System Status */}\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\r\n            {/* Active Alerts */}\r\n            <div className=\"bg-white shadow rounded-lg\">\r\n              <div className=\"px-4 py-5 sm:p-6\">\r\n                <h3 className=\"text-lg leading-6 font-medium text-gray-900 mb-4\">{t.alerts}</h3>\r\n                <div className=\"space-y-3\">\r\n                  {alerts.filter(alert => alert.status !== 'resolved').map((alert) => (\r\n                    <div key={alert.id} className=\"flex items-start gap-3 p-3 border rounded-lg\">\r\n                      <div className=\"flex-shrink-0 mt-1\">\r\n                        {getAlertTypeIcon(alert.type)}\r\n                      </div>\r\n                      <div className=\"flex-1 min-w-0\">\r\n                        <div className=\"flex items-center justify-between\">\r\n                          <p className=\"text-sm font-medium text-gray-900\">{alert.message}</p>\r\n                          <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${getSeverityColor(alert.severity)}`}>\r\n                            {alert.severity}\r\n                          </span>\r\n                        </div>\r\n                        <p className=\"text-sm text-gray-500 mt-1\">\r\n                          {alert.timestamp.toLocaleString('hi-IN')} • {alert.type}\r\n                        </p>\r\n                        {alert.assignedTo && (\r\n                          <p className=\"text-sm text-blue-600 mt-1\">{t.assign} to: {alert.assignedTo}</p>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                  {alerts.filter(alert => alert.status !== 'resolved').length === 0 && (\r\n                    <div className=\"text-center py-4 text-gray-500\">\r\n                      <CheckCircle className=\"h-8 w-8 mx-auto text-green-400 mb-2\" />\r\n                      <p>{t.noActiveAlerts}</p>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* System Status */}\r\n            <div className=\"bg-white shadow rounded-lg\">\r\n              <div className=\"px-4 py-5 sm:p-6\">\r\n                <h3 className=\"text-lg leading-6 font-medium text-gray-900 mb-4\">{t.systemStatus}</h3>\r\n                <div className=\"space-y-3\">\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <span className=\"text-sm text-gray-600\">{t.database}</span>\r\n                    <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${\r\n                      systemHealth.database === 'healthy' ? 'bg-green-100 text-green-800' :\r\n                      systemHealth.database === 'warning' ? 'bg-yellow-100 text-yellow-800' :\r\n                      'bg-red-100 text-red-800'\r\n                    }`}>\r\n                      {systemHealth.database === 'healthy' ? t.healthy :\r\n                       systemHealth.database === 'warning' ? t.warning : t.critical}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <span className=\"text-sm text-gray-600\">{t.diskUsage}</span>\r\n                    <span className=\"text-sm font-medium\">{systemHealth.disk.toFixed(1)}%</span>\r\n                  </div>\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <span className=\"text-sm text-gray-600\">{t.network}</span>\r\n                    <span className=\"text-sm font-medium\">{systemHealth.network.toFixed(1)}%</span>\r\n                  </div>\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <span className=\"text-sm text-gray-600\">{t.lastBackup}</span>\r\n                    <span className=\"text-sm font-medium\">{systemHealth.lastBackup.toLocaleString('hi-IN')}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      {/* Users Tab */}\r\n      {activeTab === 'users' && (\r\n        <div className=\"bg-white shadow rounded-lg\">\r\n          <div className=\"px-4 py-5 sm:p-6\">\r\n            <div className=\"flex justify-between items-center mb-4\">\r\n              <h3 className=\"text-lg leading-6 font-medium text-gray-900\">{t.userManagement}</h3>\r\n              <div className=\"flex gap-3\">\r\n                <div className=\"relative\">\r\n                  <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder={t.searchUsers}\r\n                    value={searchQuery}\r\n                    onChange={(e) => setSearchQuery(e.target.value)}\r\n                    className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                  />\r\n                </div>\r\n                <select\r\n                  value={filterRole}\r\n                  onChange={(e) => setFilterRole(e.target.value)}\r\n                  className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                >\r\n                  <option value=\"all\">{t.all}</option>\r\n                  <option value=\"GauSakhi\">{t.gauSakhi}</option>\r\n                  <option value=\"BiogasSangh\">{t.biogasSangh}</option>\r\n                  <option value=\"ShuddhiDoot\">{t.shuddhiDoot}</option>\r\n                  <option value=\"UrjaVyapar\">{t.urjaVyapar}</option>\r\n                  <option value=\"UrjaNeta\">{t.urjaNeta}</option>\r\n                  <option value=\"Admin\">{t.admin}</option>\r\n                </select>\r\n                <select\r\n                  value={filterStatus}\r\n                  onChange={(e) => setFilterStatus(e.target.value)}\r\n                  className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                >\r\n                  <option value=\"all\">{t.all}</option>\r\n                  <option value=\"active\">{t.active}</option>\r\n                  <option value=\"inactive\">{t.inactive}</option>\r\n                  <option value=\"suspended\">{t.suspended}</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div className=\"overflow-x-auto\">\r\n              <table className=\"min-w-full divide-y divide-gray-200\">\r\n                <thead className=\"bg-gray-50\">\r\n                  <tr>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t.user}</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t.role}</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t.status}</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t.lastLogin}</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t.actions}</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                  {filteredUsers.map((user) => (\r\n                    <tr key={user.id}>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <div>\r\n                          <div className=\"text-sm font-medium text-gray-900\">{user.name}</div>\r\n                          <div className=\"text-sm text-gray-500\">{user.email}</div>\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${getRoleColor(user.role)}`}>\r\n                          {user.role}\r\n                        </span>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${getStatusColor(user.status)}`}>\r\n                          {user.status === 'active' ? t.active :\r\n                           user.status === 'inactive' ? t.inactive : t.suspended}\r\n                        </span>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                        {user.lastLogin.toLocaleString('hi-IN')}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n                        <button className=\"text-blue-600 hover:text-blue-900 mr-3\">\r\n                          <Eye className=\"h-4 w-4 inline\" />\r\n                        </button>\r\n                        <button className=\"text-green-600 hover:text-green-900 mr-3\">\r\n                          <Edit className=\"h-4 w-4 inline\" />\r\n                        </button>\r\n                        <button className=\"text-red-600 hover:text-red-900\">\r\n                          <Trash2 className=\"h-4 w-4 inline\" />\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Security Tab */}\r\n      {activeTab === 'security' && (\r\n        <div className=\"space-y-4\">\r\n          {/* Active Alerts */}\r\n          <div className=\"bg-white shadow rounded-lg\">\r\n            <div className=\"px-4 py-5 sm:p-6\">\r\n              <h3 className=\"text-lg leading-6 font-medium text-gray-900 mb-4\">{t.alerts}</h3>\r\n              <div className=\"space-y-3\">\r\n                {alerts.filter(alert => alert.status !== 'resolved').map((alert) => (\r\n                  <div key={alert.id} className=\"flex items-start gap-3 p-3 border rounded-lg\">\r\n                    <div className=\"flex-shrink-0 mt-1\">\r\n                      {getAlertTypeIcon(alert.type)}\r\n                    </div>\r\n                    <div className=\"flex-1 min-w-0\">\r\n                      <div className=\"flex items-center justify-between\">\r\n                        <p className=\"text-sm font-medium text-gray-900\">{alert.message}</p>\r\n                        <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${getSeverityColor(alert.severity)}`}>\r\n                          {alert.severity}\r\n                        </span>\r\n                      </div>\r\n                      <p className=\"text-sm text-gray-500 mt-1\">\r\n                        {alert.timestamp.toLocaleString('hi-IN')} • {alert.type}\r\n                      </p>\r\n                      {alert.assignedTo && (\r\n                        <p className=\"text-sm text-blue-600 mt-1\">{t.assign} to: {alert.assignedTo}</p>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n                {alerts.filter(alert => alert.status !== 'resolved').length === 0 && (\r\n                  <div className=\"text-center py-4 text-gray-500\">\r\n                    <CheckCircle className=\"h-8 w-8 mx-auto text-green-400 mb-2\" />\r\n                    <p>{t.noActiveAlerts}</p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Security Settings */}\r\n          <div className=\"bg-white shadow rounded-lg\">\r\n            <div className=\"px-4 py-5 sm:p-6\">\r\n              <h3 className=\"text-lg leading-6 font-medium text-gray-900 mb-4\">{t.securitySettings}</h3>\r\n              <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-3\">\r\n                <div className=\"relative group bg-white p-6 focus-within:ring-2 focus-within:ring-inset focus-within:ring-blue-500 rounded-lg border border-gray-200 hover:border-gray-300\">\r\n                  <div>\r\n                    <span className=\"rounded-lg inline-flex p-3 bg-green-50 text-green-700 ring-4 ring-white\">\r\n                      <Shield className=\"h-6 w-6\" />\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"mt-4\">\r\n                    <h3 className=\"text-lg font-medium\">Two-Factor Authentication</h3>\r\n                    <p className=\"mt-2 text-sm text-gray-500\">Secure user accounts with 2FA</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"relative group bg-white p-6 focus-within:ring-2 focus-within:ring-inset focus-within:ring-blue-500 rounded-lg border border-gray-200 hover:border-gray-300\">\r\n                  <div>\r\n                    <span className=\"rounded-lg inline-flex p-3 bg-blue-50 text-blue-700 ring-4 ring-white\">\r\n                      <Users className=\"h-6 w-6\" />\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"mt-4\">\r\n                    <h3 className=\"text-lg font-medium\">Access Controls</h3>\r\n                    <p className=\"mt-2 text-sm text-gray-500\">Manage role-based permissions</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"relative group bg-white p-6 focus-within:ring-2 focus-within:ring-inset focus-within:ring-blue-500 rounded-lg border border-gray-200 hover:border-gray-300\">\r\n                  <div>\r\n                    <span className=\"rounded-lg inline-flex p-3 bg-red-50 text-red-700 ring-4 ring-white\">\r\n                      <AlertTriangle className=\"h-6 w-6\" />\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"mt-4\">\r\n                    <h3 className=\"text-lg font-medium\">Threat Detection</h3>\r\n                    <p className=\"mt-2 text-sm text-gray-500\">Monitor suspicious activities</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* System Tab */}\r\n      {activeTab === 'system' && (\r\n        <div className=\"space-y-4\">\r\n          {/* System Health Overview */}\r\n          <div className=\"grid grid-cols-1 gap-5 sm:grid-cols-2 lg:grid-cols-4\">\r\n            <div className=\"bg-white overflow-hidden shadow rounded-lg\">\r\n              <div className=\"p-5\">\r\n                <div className=\"flex items-center\">\r\n                  <div className=\"flex-shrink-0\">\r\n                    <Activity className=\"h-6 w-6 text-blue-400\" />\r\n                  </div>\r\n                  <div className=\"ml-5 w-0 flex-1\">\r\n                    <dl>\r\n                      <dt className=\"text-sm font-medium text-gray-500 truncate\">{t.cpu}</dt>\r\n                      <dd className=\"text-lg font-medium text-gray-900\">{systemHealth.cpu.toFixed(1)}%</dd>\r\n                    </dl>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"bg-white overflow-hidden shadow rounded-lg\">\r\n              <div className=\"p-5\">\r\n                <div className=\"flex items-center\">\r\n                  <div className=\"flex-shrink-0\">\r\n                    <Database className=\"h-6 w-6 text-green-400\" />\r\n                  </div>\r\n                  <div className=\"ml-5 w-0 flex-1\">\r\n                    <dl>\r\n                      <dt className=\"text-sm font-medium text-gray-500 truncate\">{t.memory}</dt>\r\n                      <dd className=\"text-lg font-medium text-gray-900\">{systemHealth.memory.toFixed(1)}%</dd>\r\n                    </dl>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"bg-white overflow-hidden shadow rounded-lg\">\r\n              <div className=\"p-5\">\r\n                <div className=\"flex items-center\">\r\n                  <div className=\"flex-shrink-0\">\r\n                    <Shield className=\"h-6 w-6 text-purple-400\" />\r\n                  </div>\r\n                  <div className=\"ml-5 w-0 flex-1\">\r\n                    <dl>\r\n                      <dt className=\"text-sm font-medium text-gray-500 truncate\">{t.activeUsers}</dt>\r\n                      <dd className=\"text-lg font-medium text-gray-900\">{systemHealth.activeUsers}</dd>\r\n                    </dl>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"bg-white overflow-hidden shadow rounded-lg\">\r\n              <div className=\"p-5\">\r\n                <div className=\"flex items-center\">\r\n                  <div className=\"flex-shrink-0\">\r\n                    <Clock className=\"h-6 w-6 text-orange-400\" />\r\n                  </div>\r\n                  <div className=\"ml-5 w-0 flex-1\">\r\n                    <dl>\r\n                      <dt className=\"text-sm font-medium text-gray-500 truncate\">{t.uptime}</dt>\r\n                      <dd className=\"text-lg font-medium text-gray-900\">{formatUptime(systemHealth.uptime)}</dd>\r\n                    </dl>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* System Status */}\r\n          <div className=\"bg-white shadow rounded-lg\">\r\n            <div className=\"px-4 py-5 sm:p-6\">\r\n              <h3 className=\"text-lg leading-6 font-medium text-gray-900 mb-4\">{t.systemStatus}</h3>\r\n              <div className=\"space-y-3\">\r\n                <div className=\"flex items-center justify-between\">\r\n                  <span className=\"text-sm text-gray-600\">{t.database}</span>\r\n                  <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${\r\n                    systemHealth.database === 'healthy' ? 'bg-green-100 text-green-800' :\r\n                    systemHealth.database === 'warning' ? 'bg-yellow-100 text-yellow-800' :\r\n                    'bg-red-100 text-red-800'\r\n                  }`}>\r\n                    {systemHealth.database === 'healthy' ? t.healthy :\r\n                     systemHealth.database === 'warning' ? t.warning : t.critical}\r\n                  </span>\r\n                </div>\r\n                <div className=\"flex items-center justify-between\">\r\n                  <span className=\"text-sm text-gray-600\">{t.diskUsage}</span>\r\n                  <span className=\"text-sm font-medium\">{systemHealth.disk.toFixed(1)}%</span>\r\n                </div>\r\n                <div className=\"flex items-center justify-between\">\r\n                  <span className=\"text-sm text-gray-600\">{t.network}</span>\r\n                  <span className=\"text-sm font-medium\">{systemHealth.network.toFixed(1)}%</span>\r\n                </div>\r\n                <div className=\"flex items-center justify-between\">\r\n                  <span className=\"text-sm text-gray-600\">{t.lastBackup}</span>\r\n                  <span className=\"text-sm font-medium\">{systemHealth.lastBackup.toLocaleString('hi-IN')}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Quick Actions */}\r\n          <div className=\"bg-white shadow rounded-lg\">\r\n            <div className=\"px-4 py-5 sm:p-6\">\r\n              <h3 className=\"text-lg leading-6 font-medium text-gray-900 mb-4\">{t.quickActions}</h3>\r\n              <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-4\">\r\n                <button className=\"relative group bg-white p-6 focus-within:ring-2 focus-within:ring-inset focus-within:ring-blue-500 rounded-lg border border-gray-200 hover:border-gray-300\">\r\n                  <div>\r\n                    <span className=\"rounded-lg inline-flex p-3 bg-blue-50 text-blue-700 ring-4 ring-white\">\r\n                      <Users className=\"h-6 w-6\" />\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"mt-8\">\r\n                    <h3 className=\"text-lg font-medium\">\r\n                      <span className=\"absolute inset-0\" aria-hidden=\"true\" />\r\n                      {t.addUser}\r\n                    </h3>\r\n                    <p className=\"mt-2 text-sm text-gray-500\">{t.addUserDescription}</p>\r\n                  </div>\r\n                </button>\r\n\r\n                <button className=\"relative group bg-white p-6 focus-within:ring-2 focus-within:ring-inset focus-within:ring-blue-500 rounded-lg border border-gray-200 hover:border-gray-300\">\r\n                  <div>\r\n                    <span className=\"rounded-lg inline-flex p-3 bg-green-50 text-green-700 ring-4 ring-white\">\r\n                      <Shield className=\"h-6 w-6\" />\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"mt-8\">\r\n                    <h3 className=\"text-lg font-medium\">\r\n                      <span className=\"absolute inset-0\" aria-hidden=\"true\" />\r\n                      {t.securitySettings}\r\n                    </h3>\r\n                    <p className=\"mt-2 text-sm text-gray-500\">{t.securitySettingsDescription}</p>\r\n                  </div>\r\n                </button>\r\n\r\n                <button className=\"relative group bg-white p-6 focus-within:ring-2 focus-within:ring-inset focus-within:ring-blue-500 rounded-lg border border-gray-200 hover:border-gray-300\">\r\n                  <div>\r\n                    <span className=\"rounded-lg inline-flex p-3 bg-purple-50 text-purple-700 ring-4 ring-white\">\r\n                      <Database className=\"h-6 w-6\" />\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"mt-8\">\r\n                    <h3 className=\"text-lg font-medium\">\r\n                      <span className=\"absolute inset-0\" aria-hidden=\"true\" />\r\n                      {t.backupManagement}\r\n                    </h3>\r\n                    <p className=\"mt-2 text-sm text-gray-500\">{t.backupManagementDescription}</p>\r\n                  </div>\r\n                </button>\r\n\r\n                <button className=\"relative group bg-white p-6 focus-within:ring-2 focus-within:ring-inset focus-within:ring-blue-500 rounded-lg border border-gray-200 hover:border-gray-300\">\r\n                  <div>\r\n                    <span className=\"rounded-lg inline-flex p-3 bg-orange-50 text-orange-700 ring-4 ring-white\">\r\n                      <Settings className=\"h-6 w-6\" />\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"mt-8\">\r\n                    <h3 className=\"text-lg font-medium\">\r\n                      <span className=\"absolute inset-0\" aria-hidden=\"true\" />\r\n                      {t.systemConfiguration}\r\n                    </h3>\r\n                    <p className=\"mt-2 text-sm text-gray-500\">{t.systemConfigurationDescription}</p>\r\n                  </div>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Audit Logs Tab */}\r\n      {activeTab === 'logs' && (\r\n        <div className=\"bg-white shadow rounded-lg\">\r\n          <div className=\"px-4 py-5 sm:p-6\">\r\n            <h3 className=\"text-lg leading-6 font-medium text-gray-900 mb-4\">{t.auditLogs}</h3>\r\n            <div className=\"overflow-x-auto\">\r\n              <table className=\"min-w-full divide-y divide-gray-200\">\r\n                <thead className=\"bg-gray-50\">\r\n                  <tr>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t.timestamp}</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t.user}</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t.action}</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t.resource}</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t.ipAddress}</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t.status}</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                  {auditLogs.map((log) => (\r\n                    <tr key={log.id}>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                        {log.timestamp.toLocaleString('hi-IN')}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n                        {log.user}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                        {log.action}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                        {log.resource}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                        {log.ipAddress}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${\r\n                          log.status === 'success' ? 'bg-green-100 text-green-800' :\r\n                          log.status === 'failure' ? 'bg-red-100 text-red-800' :\r\n                          'bg-yellow-100 text-yellow-800'\r\n                        }`}>\r\n                          {log.status === 'success' ? t.success :\r\n                           log.status === 'failure' ? t.failure : t.warning}\r\n                        </span>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}","import { useState, useEffect } from 'react'\r\nimport { MapPin, Calculator, TrendingUp, Users, IndianRupee, Target, FileText, Phone, CheckCircle, Clock, AlertCircle, PlusCircle } from 'lucide-react'\r\nimport { usePlatform } from '../contexts/PlatformContext'\r\nimport { useAuth } from '../contexts/AuthContext'\r\n\r\ninterface FeasibilityProject {\r\n  id: string;\r\n  farmerId: string;\r\n  farmerName: string;\r\n  location: string;\r\n  cattleCount: number;\r\n  estimatedProduction: number;\r\n  investmentRequired: number;\r\n  subsidyAmount: number;\r\n  roiMonths: number;\r\n  status: 'assessment' | 'approved' | 'in_progress' | 'completed' | 'rejected';\r\n  createdDate: Date;\r\n  expectedStartDate?: Date;\r\n}\r\n\r\ninterface SubsidyApplication {\r\n  id: string;\r\n  farmerId: string;\r\n  farmerName: string;\r\n  applicationNumber: string;\r\n  subsidyType: 'central' | 'state' | 'combined';\r\n  amount: number;\r\n  applicationDate: Date;\r\n  status: 'submitted' | 'under_review' | 'approved' | 'disbursed' | 'rejected';\r\n  remarks?: string;\r\n}\r\n\r\ninterface BusinessLead {\r\n  id: string;\r\n  farmerName: string;\r\n  phone: string;\r\n  location: string;\r\n  cattleCount: number;\r\n  interest: 'high' | 'medium' | 'low';\r\n  stage: 'contact' | 'assessment' | 'proposal' | 'negotiation' | 'conversion';\r\n  assignedTo: string;\r\n  lastContact: Date;\r\n  nextFollowUp: Date;\r\n}\r\n\r\nconst API_BASE = 'http://localhost:8080' // IoT service for mapping and feasibility\r\nconst AUTH_API = 'http://localhost:8081/auth/api' // Auth service\r\nconst BIOGAS_API = 'http://localhost:8080/biogas' // For production data\r\n\r\nexport default function UrjaSanyojak() {\r\n  const { trackModuleUsage, updateBreadcrumbs } = usePlatform()\r\n  const { user } = useAuth()\r\n\r\n  const [feasibilityProjects, setFeasibilityProjects] = useState<FeasibilityProject[]>([])\r\n  const [subsidyApplications, setSubsidyApplications] = useState<SubsidyApplication[]>([])\r\n  const [businessLeads, setBusinessLeads] = useState<BusinessLead[]>([])\r\n  const [selectedTab, setSelectedTab] = useState<'feasibility' | 'subsidies' | 'pipeline'>('feasibility')\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  useEffect(() => {\r\n    trackModuleUsage('urjasanyojak', 'view')\r\n    updateBreadcrumbs([\r\n      { label: 'UrjaSanyojak Dashboard', url: '/urjasanyojak', module: 'business-dev' }\r\n    ])\r\n    loadBusinessData()\r\n  }, [])\r\n\r\n  // Load data from backend APIs\r\n  const loadBusinessData = async () => {\r\n    setLoading(true)\r\n    try {\r\n      await Promise.all([\r\n        loadFeasibilityProjects(),\r\n        loadSubsidyApplications(),\r\n        loadBusinessLeads()\r\n      ])\r\n    } catch (error) {\r\n      console.error('Error loading business data:', error)\r\n    }\r\n    setLoading(false)\r\n  }\r\n\r\n  const loadFeasibilityProjects = async () => {\r\n    try {\r\n      // Call actual backend API for feasibility analysis\r\n      const response = await fetch(`${API_BASE}/api/iot/analytics/feasibility/projects`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n\r\n      if (response.ok) {\r\n        const data = await response.json()\r\n        setFeasibilityProjects(data)\r\n      } else {\r\n        // Fallback to mock data if backend not available\r\n        setFeasibilityProjects([])\r\n      }\r\n    } catch (error) {\r\n      console.warn('Feasibility API error, using fallback:', error)\r\n      setFeasibilityProjects([])\r\n    }\r\n  }\r\n\r\n  const loadSubsidyApplications = async () => {\r\n    try {\r\n      const response = await fetch(`${AUTH_API}/subsidies/applications`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n\r\n      if (response.ok) {\r\n        const data = await response.json()\r\n        setSubsidyApplications(data)\r\n      } else {\r\n        setSubsidyApplications([])\r\n      }\r\n    } catch (error) {\r\n      console.warn('Subsidy API error, using fallback:', error)\r\n      setSubsidyApplications([])\r\n    }\r\n  }\r\n\r\n  const loadBusinessLeads = async () => {\r\n    try {\r\n      const response = await fetch(`${AUTH_API}/business/leads`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n\r\n      if (response.ok) {\r\n        const data = await response.json()\r\n        setBusinessLeads(data)\r\n      } else {\r\n        setBusinessLeads([])\r\n      }\r\n    } catch (error) {\r\n      console.warn('Business leads API error, using fallback:', error)\r\n      setBusinessLeads([])\r\n    }\r\n  }\r\n\r\n  // Backend API calls for actions\r\n  const calculateFeasibility = async (farmerId: string, cattleCount: number) => {\r\n    try {\r\n      const response = await fetch(`${API_BASE}/api/iot/analytics/feasibility/calculate`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          farmerId,\r\n          cattleCount,\r\n          location: 'default', // Should be passed from form\r\n          userId: user?.id\r\n        })\r\n      })\r\n\r\n      if (response.ok) {\r\n        const result = await response.json()\r\n        console.log('Feasibility calculation:', result)\r\n        await loadFeasibilityProjects() // Refresh data\r\n        return result\r\n      }\r\n    } catch (error) {\r\n      console.error('Feasibility calculation error:', error)\r\n    }\r\n  }\r\n\r\n  const submitSubsidyApplication = async (applicationData: any) => {\r\n    try {\r\n      const response = await fetch(`${AUTH_API}/subsidies/apply`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          ...applicationData,\r\n          submittedBy: user?.id,\r\n          submissionDate: new Date()\r\n        })\r\n      })\r\n\r\n      if (response.ok) {\r\n        const result = await response.json()\r\n        await loadSubsidyApplications() // Refresh data\r\n        alert(`Subsidy application ${result.applicationNumber} submitted successfully!`)\r\n        return result\r\n      }\r\n    } catch (error) {\r\n      console.error('Subsidy application error:', error)\r\n      alert('Error submitting application. Please try again.')\r\n    }\r\n  }\r\n\r\n  const updateLeadStatus = async (leadId: string, newStage: string) => {\r\n    try {\r\n      const response = await fetch(`${AUTH_API}/business/leads/${leadId}/update`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          stage: newStage,\r\n          updatedBy: user?.id,\r\n          lastContact: new Date()\r\n        })\r\n      })\r\n\r\n      if (response.ok) {\r\n        await loadBusinessLeads() // Refresh data\r\n        console.log(`Lead ${leadId} updated to ${newStage}`)\r\n      }\r\n    } catch (error) {\r\n      console.error('Lead update error:', error)\r\n    }\r\n  }\r\n\r\n  // All data now comes from backend - no more mock data!\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'approved': case 'completed': case 'disbursed': case 'conversion':\r\n        return 'bg-green-100 text-green-800 border-green-200'\r\n      case 'in_progress': case 'under_review': case 'assessment': case 'negotiation':\r\n        return 'bg-yellow-100 text-yellow-800 border-yellow-200'\r\n      case 'rejected':\r\n        return 'bg-red-100 text-red-800 border-red-200'\r\n      default:\r\n        return 'bg-blue-100 text-blue-800 border-blue-200'\r\n    }\r\n  }\r\n\r\n  const formatCurrency = (amount: number) => {\r\n    return new Intl.NumberFormat('en-IN', {\r\n      style: 'currency',\r\n      currency: 'INR',\r\n      maximumFractionDigits: 0\r\n    }).format(amount)\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-screen\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-green-600 mx-auto mb-4\"></div>\r\n          <p className=\"text-gray-600\">Loading business development dashboard...</p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-6 space-y-6 max-w-7xl mx-auto\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold text-gray-900 flex items-center gap-3\">\r\n            <TrendingUp className=\"text-green-600\" />\r\n            UrjaSanyojak Dashboard\r\n          </h1>\r\n          <p className=\"text-gray-600 mt-1\">Business Development & Project Pipeline Management</p>\r\n        </div>\r\n        <div className=\"text-right\">\r\n          <p className=\"text-sm text-gray-500\">Business Development Officer</p>\r\n          <p className=\"font-semibold text-gray-900\">{user?.name}</p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Quick Stats */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\r\n        <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-sm text-gray-500\">Active Projects</p>\r\n              <p className=\"text-2xl font-bold text-blue-600\">{feasibilityProjects.length}</p>\r\n            </div>\r\n            <Calculator className=\"h-8 w-8 text-blue-600\" />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-sm text-gray-500\">Subsidy Applications</p>\r\n              <p className=\"text-2xl font-bold text-green-600\">{subsidyApplications.length}</p>\r\n            </div>\r\n            <IndianRupee className=\"h-8 w-8 text-green-600\" />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-sm text-gray-500\">Business Leads</p>\r\n              <p className=\"text-2xl font-bold text-purple-600\">{businessLeads.length}</p>\r\n            </div>\r\n            <Users className=\"h-8 w-8 text-purple-600\" />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-sm text-gray-500\">Conversion Rate</p>\r\n              <p className=\"text-2xl font-bold text-orange-600\">65%</p>\r\n            </div>\r\n            <Target className=\"h-8 w-8 text-orange-600\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Tab Navigation */}\r\n      <div className=\"bg-white rounded-lg border border-gray-200\">\r\n        <div className=\"border-b border-gray-200\">\r\n          <nav className=\"flex space-x-8 px-6\">\r\n            {[\r\n              { id: 'feasibility', label: 'Feasibility Projects', icon: Calculator },\r\n              { id: 'subsidies', label: 'Subsidy Applications', icon: IndianRupee },\r\n              { id: 'pipeline', label: 'Business Pipeline', icon: TrendingUp }\r\n            ].map(({ id, label, icon: Icon }) => (\r\n              <button\r\n                key={id}\r\n                onClick={() => setSelectedTab(id as any)}\r\n                className={`py-4 px-2 border-b-2 font-medium text-sm flex items-center gap-2 transition-colors ${\r\n                  selectedTab === id\r\n                    ? 'border-green-500 text-green-600'\r\n                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\r\n                }`}\r\n              >\r\n                <Icon className=\"h-4 w-4\" />\r\n                {label}\r\n              </button>\r\n            ))}\r\n          </nav>\r\n        </div>\r\n\r\n        <div className=\"p-6\">\r\n          {/* Feasibility Projects Tab */}\r\n          {selectedTab === 'feasibility' && (\r\n            <div>\r\n              <div className=\"flex items-center justify-between mb-6\">\r\n                <h2 className=\"text-xl font-semibold text-gray-900\">Feasibility Assessment Projects</h2>\r\n                <button\r\n                  onClick={() => calculateFeasibility('new-farmer', 25)}\r\n                  className=\"bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 flex items-center gap-2\"\r\n                >\r\n                  <PlusCircle className=\"h-4 w-4\" />\r\n                  New Assessment\r\n                </button>\r\n              </div>\r\n\r\n              <div className=\"space-y-4\">\r\n                {feasibilityProjects.map((project) => (\r\n                  <div key={project.id} className=\"border border-gray-200 rounded-lg p-4\">\r\n                    <div className=\"flex items-start justify-between\">\r\n                      <div className=\"flex-1\">\r\n                        <div className=\"flex items-center gap-3 mb-2\">\r\n                          <h3 className=\"font-semibold text-gray-900\">{project.farmerName}</h3>\r\n                          <span className={`px-2 py-1 rounded-full text-xs font-medium border ${getStatusColor(project.status)}`}>\r\n                            {project.status.replace('_', ' ').toUpperCase()}\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm text-gray-600\">\r\n                          <div className=\"flex items-center gap-2\">\r\n                            <MapPin className=\"h-4 w-4\" />\r\n                            {project.location}\r\n                          </div>\r\n                          <div>\r\n                            <span className=\"font-medium\">Cattle:</span> {project.cattleCount}\r\n                          </div>\r\n                          <div>\r\n                            <span className=\"font-medium\">Production:</span> {project.estimatedProduction} m³/day\r\n                          </div>\r\n                          <div>\r\n                            <span className=\"font-medium\">ROI:</span> {project.roiMonths} months\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"mt-2 grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\r\n                          <div>\r\n                            <span className=\"font-medium text-gray-700\">Investment Required:</span> {formatCurrency(project.investmentRequired)}\r\n                          </div>\r\n                          <div>\r\n                            <span className=\"font-medium text-gray-700\">Subsidy Amount:</span> {formatCurrency(project.subsidyAmount)}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"flex gap-2\">\r\n                        <button\r\n                          onClick={() => calculateFeasibility(project.farmerId, project.cattleCount)}\r\n                          className=\"text-blue-600 hover:text-blue-700 text-sm font-medium\"\r\n                        >\r\n                          Recalculate\r\n                        </button>\r\n                        <button className=\"text-green-600 hover:text-green-700 text-sm font-medium\">\r\n                          View Details\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Subsidies Tab */}\r\n          {selectedTab === 'subsidies' && (\r\n            <div>\r\n              <div className=\"flex items-center justify-between mb-6\">\r\n                <h2 className=\"text-xl font-semibold text-gray-900\">Subsidy Applications</h2>\r\n                <button\r\n                  onClick={() => submitSubsidyApplication({\r\n                    farmerId: 'FARM-NEW',\r\n                    farmerName: 'New Farmer',\r\n                    subsidyType: 'central',\r\n                    amount: 500000\r\n                  })}\r\n                  className=\"bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 flex items-center gap-2\"\r\n                >\r\n                  <FileText className=\"h-4 w-4\" />\r\n                  New Application\r\n                </button>\r\n              </div>\r\n\r\n              <div className=\"space-y-4\">\r\n                {subsidyApplications.map((application) => (\r\n                  <div key={application.id} className=\"border border-gray-200 rounded-lg p-4\">\r\n                    <div className=\"flex items-start justify-between\">\r\n                      <div className=\"flex-1\">\r\n                        <div className=\"flex items-center gap-3 mb-2\">\r\n                          <h3 className=\"font-semibold text-gray-900\">{application.farmerName}</h3>\r\n                          <span className={`px-2 py-1 rounded-full text-xs font-medium border ${getStatusColor(application.status)}`}>\r\n                            {application.status.replace('_', ' ').toUpperCase()}\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm text-gray-600 mb-2\">\r\n                          <div>\r\n                            <span className=\"font-medium\">Application #:</span> {application.applicationNumber}\r\n                          </div>\r\n                          <div>\r\n                            <span className=\"font-medium\">Type:</span> {application.subsidyType.toUpperCase()}\r\n                          </div>\r\n                          <div>\r\n                            <span className=\"font-medium\">Amount:</span> {formatCurrency(application.amount)}\r\n                          </div>\r\n                        </div>\r\n                        {application.remarks && (\r\n                          <div className=\"text-sm text-gray-600 mt-2\">\r\n                            <span className=\"font-medium\">Remarks:</span> {application.remarks}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                      <div className=\"text-right text-sm text-gray-500\">\r\n                        Applied: {application.applicationDate.toLocaleDateString()}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Business Pipeline Tab */}\r\n          {selectedTab === 'pipeline' && (\r\n            <div>\r\n              <div className=\"flex items-center justify-between mb-6\">\r\n                <h2 className=\"text-xl font-semibold text-gray-900\">Business Pipeline</h2>\r\n                <button className=\"bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 flex items-center gap-2\">\r\n                  <PlusCircle className=\"h-4 w-4\" />\r\n                  Add Lead\r\n                </button>\r\n              </div>\r\n\r\n              <div className=\"space-y-4\">\r\n                {businessLeads.map((lead) => (\r\n                  <div key={lead.id} className=\"border border-gray-200 rounded-lg p-4\">\r\n                    <div className=\"flex items-start justify-between\">\r\n                      <div className=\"flex-1\">\r\n                        <div className=\"flex items-center gap-3 mb-2\">\r\n                          <h3 className=\"font-semibold text-gray-900\">{lead.farmerName}</h3>\r\n                          <span className={`px-2 py-1 rounded-full text-xs font-medium border ${getStatusColor(lead.stage)}`}>\r\n                            {lead.stage.replace('_', ' ').toUpperCase()}\r\n                          </span>\r\n                          <span className={`px-2 py-1 rounded-full text-xs font-medium ${\r\n                            lead.interest === 'high' ? 'bg-red-100 text-red-800' :\r\n                            lead.interest === 'medium' ? 'bg-yellow-100 text-yellow-800' :\r\n                            'bg-gray-100 text-gray-800'\r\n                          }`}>\r\n                            {lead.interest.toUpperCase()} INTEREST\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm text-gray-600 mb-2\">\r\n                          <div className=\"flex items-center gap-2\">\r\n                            <Phone className=\"h-4 w-4\" />\r\n                            {lead.phone}\r\n                          </div>\r\n                          <div className=\"flex items-center gap-2\">\r\n                            <MapPin className=\"h-4 w-4\" />\r\n                            {lead.location}\r\n                          </div>\r\n                          <div>\r\n                            <span className=\"font-medium\">Cattle:</span> {lead.cattleCount}\r\n                          </div>\r\n                          <div>\r\n                            <span className=\"font-medium\">Assigned:</span> {lead.assignedTo}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"flex items-center gap-4 text-sm text-gray-500\">\r\n                          <div className=\"flex items-center gap-1\">\r\n                            <Clock className=\"h-4 w-4\" />\r\n                            Last Contact: {lead.lastContact.toLocaleDateString()}\r\n                          </div>\r\n                          <div className=\"flex items-center gap-1\">\r\n                            <AlertCircle className=\"h-4 w-4\" />\r\n                            Next Follow-up: {lead.nextFollowUp.toLocaleDateString()}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"flex gap-2\">\r\n                        <select\r\n                          value={lead.stage}\r\n                          onChange={(e) => updateLeadStatus(lead.id, e.target.value)}\r\n                          className=\"text-sm border border-gray-300 rounded px-2 py-1\"\r\n                        >\r\n                          <option value=\"contact\">Contact</option>\r\n                          <option value=\"assessment\">Assessment</option>\r\n                          <option value=\"proposal\">Proposal</option>\r\n                          <option value=\"negotiation\">Negotiation</option>\r\n                          <option value=\"conversion\">Conversion</option>\r\n                        </select>\r\n                        <button className=\"text-green-600 hover:text-green-700 text-sm font-medium\">\r\n                          Contact\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import { useState, useEffect, useRef } from 'react'\nimport { Users, Database, BarChart3, TrendingUp, Activity, Zap, Truck, AlertTriangle, Clock, Thermometer, Gauge, Calendar, Download, Volume2 } from 'lucide-react'\nimport { useAuth } from '../contexts/AuthContext'\nimport { usePlatform } from '../contexts/PlatformContext'\n\n// Backend API endpoints\nconst IOT_API = import.meta.env.VITE_IOT_API || 'http://localhost:8080';\nconst BIOGAS_API = import.meta.env.VITE_BIOGAS_API || 'http://localhost:8080';\nconst SALES_API = import.meta.env.VITE_SALES_API || 'http://localhost:8083';\n\ninterface IoTData {\n  ch4: number;\n  pressure: number;\n  temperature: number;\n  timestamp: Date;\n}\n\ninterface PickupSchedule {\n  id: string;\n  clusterId: string;\n  scheduledTime: Date;\n  truckId: string;\n  status: 'scheduled' | 'in-progress' | 'completed' | 'cancelled';\n  estimatedVolume: number;\n}\n\ninterface ClusterMetrics {\n  totalBiogas: number;\n  dailyProduction: number;\n  efficiency: number;\n  activePlants: number;\n  alerts: number;\n}\n\nexport default function Dashboard() {\n  const { user } = useAuth()\n  const { trackModuleUsage, updateBreadcrumbs } = usePlatform()\n  const [iotData, setIotData] = useState<IoTData[]>([]);\n  const [pickupSchedules, setPickupSchedules] = useState<PickupSchedule[]>([]);\n  const [clusterMetrics, setClusterMetrics] = useState<ClusterMetrics>({\n    totalBiogas: 0,\n    dailyProduction: 0,\n    efficiency: 0,\n    activePlants: 0,\n    alerts: 0\n  });\n  const [isSpeaking, setIsSpeaking] = useState(false);\n  const [isListening, setIsListening] = useState(false);\n  const [transcript, setTranscript] = useState('');\n  const [voices, setVoices] = useState<SpeechSynthesisVoice[]>([]);\n  const [selectedVoice, setSelectedVoice] = useState<SpeechSynthesisVoice | null>(null);\n  const [language, setLanguage] = useState<'en' | 'hi'>('en');\n\n  const translations = {\n    en: {\n      title: 'Biogas Cluster Management Dashboard',\n      subtitle: 'Real-time monitoring and management of biogas operations',\n      clusterOverview: 'Cluster Overview',\n      totalGaushalas: 'Total Gaushalas',\n      activeDigesters: 'Active Digesters',\n      totalBiogas: 'Total Biogas (m³)',\n      todayCollection: 'Today\\'s Collection',\n      pickupSchedule: 'Pickup Schedule',\n      alerts: 'Alerts',\n      alertManagement: 'Alert Management',\n      voiceSummary: 'Voice Summary',\n      speaking: 'Speaking...',\n      speakCommand: 'Speak a command',\n      startListening: 'Start Listening',\n      stopListening: 'Stop Listening',\n      exportData: 'Export Data',\n      exportPDF: 'Export PDF',\n      exportExcel: 'Export Excel',\n      recentActivity: 'Recent Activity',\n      systemHealth: 'System Health',\n      performance: 'Performance',\n      revenue: 'Revenue',\n      carbonCredits: 'Carbon Credits',\n      totalBiogasLabel: 'Total Biogas',\n      dailyProduction: 'Daily Production',\n      efficiency: 'Efficiency',\n      activePlants: 'Active Plants',\n      alertsLabel: 'Alerts',\n      ch4Level: 'CH4 Level (Methane)',\n      pressure: 'Pressure',\n      temperature: 'Temperature',\n      pickupScheduleLabel: 'Pickup Schedule',\n      cluster: 'Cluster',\n      time: 'Time',\n      truck: 'Truck',\n      quantity: 'Quantity',\n      status: 'Status',\n      action: 'Action',\n      scheduled: 'Scheduled',\n      edit: 'Edit',\n      newSchedule: 'New Schedule',\n      quickActions: 'Quick Actions',\n      pickupScheduleAction: 'Pickup Schedule',\n      clusterAnalysis: 'Cluster Analysis',\n      alertManagementLabel: 'Alert Management',\n      maintenance: 'Maintenance'\n    },\n    hi: {\n      title: 'बायोगैस क्लस्टर प्रबंधन डैशबोर्ड',\n      subtitle: 'बायोगैस संचालन का रीयल-टाइम निगरानी और प्रबंधन',\n      clusterOverview: 'क्लस्टर अवलोकन',\n      totalGaushalas: 'कुल गौशालाएं',\n      activeDigesters: 'सक्रिय डाइजेस्टर',\n      totalBiogas: 'कुल बायोगैस (m³)',\n      todayCollection: 'आज का संग्रह',\n      pickupSchedule: 'पिकअप अनुसूची',\n      alerts: 'अलर्ट',\n      alertManagement: 'अलर्ट प्रबंधन',\n      voiceSummary: 'आवाज सारांश',\n      speaking: 'बोल रहा है...',\n      speakCommand: 'एक कमांड बोलें',\n      startListening: 'सुनना शुरू करें',\n      stopListening: 'सुनना बंद करें',\n      exportData: 'डेटा निर्यात करें',\n      exportPDF: 'PDF निर्यात करें',\n      exportExcel: 'Excel निर्यात करें',\n      recentActivity: 'हाल की गतिविधि',\n      systemHealth: 'सिस्टम स्वास्थ्य',\n      performance: 'प्रदर्शन',\n      revenue: 'राजस्व',\n      carbonCredits: 'कार्बन क्रेडिट',\n      totalBiogasLabel: 'कुल बायोगैस',\n      dailyProduction: 'दैनिक उत्पादन',\n      efficiency: 'दक्षता',\n      activePlants: 'सक्रिय प्लांट',\n      alertsLabel: 'अलर्ट',\n      ch4Level: 'CH4 स्तर (मीथेन)',\n      pressure: 'दबाव',\n      temperature: 'तापमान',\n      pickupScheduleLabel: 'पिकअप शेड्यूल',\n      cluster: 'क्लस्टर',\n      time: 'समय',\n      truck: 'ट्रक',\n      quantity: 'मात्रा',\n      status: 'स्थिति',\n      action: 'कार्य',\n      scheduled: 'निर्धारित',\n      edit: 'संपादित करें',\n      newSchedule: 'नया शेड्यूल',\n      quickActions: 'त्वरित कार्य',\n      pickupScheduleAction: 'पिकअप शेड्यूल',\n      clusterAnalysis: 'क्लस्टर विश्लेषण',\n      alertManagementLabel: 'अलर्ट प्रबंधन',\n      maintenance: 'रखरखाव'\n    }\n  };\n\n  const t = translations[language]\n\n  // Track module usage and update breadcrumbs for platform integration\n  useEffect(() => {\n    trackModuleUsage('urjasanyojak')\n    updateBreadcrumbs([\n      { label: 'UrjaSanyojak', url: '/', module: 'urjasanyojak' },\n      { label: 'Dashboard', url: '/', module: 'urjasanyojak' }\n    ])\n  }, [])\n\n  // Fetch real IoT data from backend\n  const fetchIoTData = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) return;\n\n      const response = await fetch(`${IOT_API}/api/iot/devices?type=biogas_digester&gaushalaId=${user?.id}&status=ONLINE`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (response.ok) {\n        const devices = await response.json();\n        if (devices.length > 0) {\n          const device = devices[0];\n          const newData: IoTData = {\n            ch4: device.ch4Concentration || 0,\n            pressure: device.pressure || 0,\n            temperature: device.temperature || 0,\n            timestamp: new Date(device.lastUpdate || Date.now())\n          };\n          setIotData(prev => [newData, ...prev.slice(0, 19)]); // Keep last 20 readings\n        }\n      }\n    } catch (error) {\n      console.error('Error fetching IoT data:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchIoTData(); // Initial fetch\n    const interval = setInterval(fetchIoTData, 10000); // Update every 10 seconds\n    return () => clearInterval(interval);\n  }, [user]);\n\n  // Fetch pickup schedules from sales service\n  const fetchPickupSchedules = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) return;\n\n      const response = await fetch(`${SALES_API}/sales/schedules?gaushalaId=${user?.id}&type=pickup`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (response.ok) {\n        const schedules = await response.json();\n        const pickupSchedules: PickupSchedule[] = schedules.map((schedule: any) => ({\n          id: schedule.id,\n          clusterId: schedule.clusterId || user?.clusterId,\n          scheduledTime: new Date(schedule.scheduledTime),\n          truckId: schedule.vehicleId || schedule.truckId,\n          status: schedule.status?.toLowerCase() || 'scheduled',\n          estimatedVolume: schedule.estimatedVolume || schedule.quantity\n        }));\n        setPickupSchedules(pickupSchedules);\n      }\n    } catch (error) {\n      console.error('Error fetching pickup schedules:', error);\n      setPickupSchedules([]);\n    }\n  };\n\n  useEffect(() => {\n    fetchPickupSchedules();\n  }, [user]);\n\n  // Fetch cluster metrics from production service\n  const fetchClusterMetrics = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) return;\n\n      const response = await fetch(`${BIOGAS_API}/production/metrics?gaushalaId=${user?.id}&timeframe=daily`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (response.ok) {\n        const metrics = await response.json();\n        setClusterMetrics({\n          totalBiogas: metrics.totalBiogas || 0,\n          dailyProduction: metrics.dailyProduction || 0,\n          efficiency: metrics.efficiency || (iotData[0]?.ch4 || 0),\n          activePlants: metrics.activePlants || 0,\n          alerts: metrics.alerts || 0\n        });\n      }\n    } catch (error) {\n      console.error('Error fetching cluster metrics:', error);\n      // Fallback to IoT data if available\n      if (iotData.length > 0) {\n        const latest = iotData[0];\n        setClusterMetrics(prev => ({\n          ...prev,\n          efficiency: latest.ch4,\n          alerts: latest.pressure > 2.5 || latest.temperature > 40 ? 2 : 0\n        }));\n      }\n    }\n  };\n\n  useEffect(() => {\n    fetchClusterMetrics();\n    const interval = setInterval(fetchClusterMetrics, 60000); // Update every minute\n    return () => clearInterval(interval);\n  }, [user, iotData]);\n\n  const speakSummary = () => {\n    if ('speechSynthesis' in window) {\n      setIsSpeaking(true);\n      const utterance = new SpeechSynthesisUtterance(\n        `क्लस्टर सारांश: कुल बायोगैस ${Math.round(clusterMetrics.totalBiogas)} घन मीटर, दैनिक उत्पादन ${Math.round(clusterMetrics.dailyProduction)} घन मीटर, दक्षता ${Math.round(clusterMetrics.efficiency)} प्रतिशत, सक्रिय प्लांट ${clusterMetrics.activePlants}, अलर्ट ${clusterMetrics.alerts}`\n      );\n      utterance.lang = 'hi-IN';\n      utterance.onend = () => setIsSpeaking(false);\n      speechSynthesis.speak(utterance);\n    }\n  };\n\n  const exportData = (format: 'pdf' | 'excel') => {\n    // Export cluster data\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) return;\n\n      const response = fetch(`${BIOGAS_API}/production/export?gaushalaId=${user?.id}&format=${format}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n\n      alert(`${format.toUpperCase()} export initiated for cluster data`);\n    } catch (error) {\n      console.error('Export error:', error);\n      alert('Export failed. Please try again.');\n    }\n  };\n\n  const getStatusColor = (status: PickupSchedule['status']) => {\n    switch (status) {\n      case 'scheduled': return 'bg-blue-100 text-blue-800';\n      case 'in-progress': return 'bg-yellow-100 text-yellow-800';\n      case 'completed': return 'bg-green-100 text-green-800';\n      case 'cancelled': return 'bg-red-100 text-red-800';\n      default: return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const getStatusText = (status: PickupSchedule['status']) => {\n    switch (status) {\n      case 'scheduled': return 'निर्धारित';\n      case 'in-progress': return 'प्रगति में';\n      case 'completed': return 'पूर्ण';\n      case 'cancelled': return 'रद्द';\n      default: return 'अज्ञात';\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex justify-between items-center\">\n      <div>\n          <h1 className=\"text-2xl font-bold text-gray-900\">{t.title}</h1>\n          <p className=\"text-gray-600\">BiogasSangh Cluster Manager Dashboard</p>\n        </div>\n        \n        {/* Language Toggle */}\n        <button\n          onClick={() => setLanguage(language === 'en' ? 'hi' : 'en')}\n          className=\"px-3 py-1 text-sm bg-white rounded-md shadow-sm border border-gray-200 hover:bg-gray-50\"\n        >\n          {language === 'en' ? 'हिंदी' : 'English'}\n        </button>\n        <div className=\"flex gap-3\">\n          <button\n            onClick={speakSummary}\n            disabled={isSpeaking}\n            className=\"flex items-center gap-2 px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 disabled:opacity-50\"\n          >\n            <Volume2 className=\"h-4 w-4\" />\n            {isSpeaking ? t.speaking : t.voiceSummary}\n          </button>\n          <button\n            onClick={() => exportData('pdf')}\n            className=\"flex items-center gap-2 px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700\"\n          >\n            <Download className=\"h-4 w-4\" />\n            PDF\n          </button>\n          <button\n            onClick={() => exportData('excel')}\n            className=\"flex items-center gap-2 px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700\"\n          >\n            <Download className=\"h-4 w-4\" />\n            Excel\n          </button>\n        </div>\n      </div>\n\n      {/* Cluster Performance Metrics */}\n      <div className=\"grid grid-cols-1 gap-5 sm:grid-cols-2 lg:grid-cols-5\">\n        <div className=\"bg-white overflow-hidden shadow rounded-lg\">\n          <div className=\"p-5\">\n            <div className=\"flex items-center\">\n              <div className=\"flex-shrink-0\">\n                <Zap className=\"h-6 w-6 text-blue-400\" />\n              </div>\n              <div className=\"ml-5 w-0 flex-1\">\n                <dl>\n                  <dt className=\"text-sm font-medium text-gray-500 truncate\">{t.totalBiogasLabel}</dt>\n                  <dd className=\"text-lg font-medium text-gray-900\">{Math.round(clusterMetrics.totalBiogas)} m³</dd>\n                </dl>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white overflow-hidden shadow rounded-lg\">\n          <div className=\"p-5\">\n            <div className=\"flex items-center\">\n              <div className=\"flex-shrink-0\">\n                <TrendingUp className=\"h-6 w-6 text-green-400\" />\n              </div>\n              <div className=\"ml-5 w-0 flex-1\">\n                <dl>\n                  <dt className=\"text-sm font-medium text-gray-500 truncate\">{t.dailyProduction}</dt>\n                  <dd className=\"text-lg font-medium text-gray-900\">{Math.round(clusterMetrics.dailyProduction)} m³</dd>\n                </dl>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white overflow-hidden shadow rounded-lg\">\n            <div className=\"p-5\">\n              <div className=\"flex items-center\">\n                <div className=\"flex-shrink-0\">\n                <BarChart3 className=\"h-6 w-6 text-purple-400\" />\n                </div>\n                <div className=\"ml-5 w-0 flex-1\">\n                  <dl>\n                  <dt className=\"text-sm font-medium text-gray-500 truncate\">{t.efficiency}</dt>\n                  <dd className=\"text-lg font-medium text-gray-900\">{Math.round(clusterMetrics.efficiency)}%</dd>\n                  </dl>\n                </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white overflow-hidden shadow rounded-lg\">\n          <div className=\"p-5\">\n            <div className=\"flex items-center\">\n              <div className=\"flex-shrink-0\">\n                <Database className=\"h-6 w-6 text-orange-400\" />\n              </div>\n              <div className=\"ml-5 w-0 flex-1\">\n                <dl>\n                  <dt className=\"text-sm font-medium text-gray-500 truncate\">{t.activePlants}</dt>\n                  <dd className=\"text-lg font-medium text-gray-900\">{clusterMetrics.activePlants}</dd>\n                </dl>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white overflow-hidden shadow rounded-lg\">\n          <div className=\"p-5\">\n            <div className=\"flex items-center\">\n              <div className=\"flex-shrink-0\">\n                <AlertTriangle className=\"h-6 w-6 text-red-400\" />\n              </div>\n              <div className=\"ml-5 w-0 flex-1\">\n                <dl>\n                  <dt className=\"text-sm font-medium text-gray-500 truncate\">{t.alertsLabel}</dt>\n                  <dd className=\"text-lg font-medium text-gray-900\">{clusterMetrics.alerts}</dd>\n                </dl>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* IoT Real-time Data Visualization */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* CH4 Levels Chart */}\n      <div className=\"bg-white shadow rounded-lg\">\n        <div className=\"px-4 py-5 sm:p-6\">\n            <h3 className=\"text-lg leading-6 font-medium text-gray-900 mb-4\">{t.ch4Level}</h3>\n            <div className=\"space-y-3\">\n              {iotData.slice(0, 10).map((data, index) => (\n                <div key={index} className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center gap-3\">\n                    <div className=\"w-3 h-3 rounded-full bg-blue-500\"></div>\n                    <span className=\"text-sm text-gray-600\">\n                      {data.timestamp.toLocaleTimeString('hi-IN')}\n                        </span>\n                      </div>\n                  <div className=\"flex items-center gap-2\">\n                    <span className=\"text-sm font-medium\">{data.ch4.toFixed(1)}%</span>\n                    <div className=\"w-20 bg-gray-200 rounded-full h-2\">\n                      <div \n                        className=\"bg-blue-600 h-2 rounded-full\" \n                        style={{ width: `${data.ch4}%` }}\n                      ></div>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n\n        {/* Pressure and Temperature */}\n        <div className=\"bg-white shadow rounded-lg\">\n          <div className=\"px-4 py-5 sm:p-6\">\n            <h3 className=\"text-lg leading-6 font-medium text-gray-900 mb-4\">{t.pressure} और {t.temperature}</h3>\n            <div className=\"space-y-4\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center gap-3\">\n                  <Gauge className=\"h-5 w-5 text-red-500\" />\n                  <span className=\"text-sm text-gray-600\">{t.pressure}</span>\n                </div>\n                <span className=\"text-lg font-medium\">{iotData[0]?.pressure.toFixed(2)} bar</span>\n              </div>\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center gap-3\">\n                  <Thermometer className=\"h-5 w-5 text-orange-500\" />\n                  <span className=\"text-sm text-gray-600\">{t.temperature}</span>\n                </div>\n                <span className=\"text-lg font-medium\">{iotData[0]?.temperature.toFixed(1)}°C</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Pickup Scheduling System */}\n      <div className=\"bg-white shadow rounded-lg\">\n        <div className=\"px-4 py-5 sm:p-6\">\n          <div className=\"flex justify-between items-center mb-4\">\n            <h3 className=\"text-lg leading-6 font-medium text-gray-900\">{t.pickupScheduleLabel}</h3>\n            <button className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\">\n              {t.newSchedule}\n            </button>\n          </div>\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t.cluster}</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t.time}</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t.truck}</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t.quantity}</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t.status}</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t.action}</th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {pickupSchedules.map((schedule) => (\n                  <tr key={schedule.id}>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n                      {schedule.clusterId}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                      {schedule.scheduledTime.toLocaleString('hi-IN')}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                      {schedule.truckId}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                      {schedule.estimatedVolume} m³\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${getStatusColor(schedule.status)}`}>\n                        {getStatusText(schedule.status)}\n                      </span>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                      <button className=\"text-blue-600 hover:text-blue-900\">{t.edit}</button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n\n      {/* Quick Actions */}\n      <div className=\"bg-white shadow rounded-lg\">\n        <div className=\"px-4 py-5 sm:p-6\">\n          <h3 className=\"text-lg leading-6 font-medium text-gray-900 mb-4\">{t.quickActions}</h3>\n          <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-4\">\n            <button className=\"relative group bg-white p-6 focus-within:ring-2 focus-within:ring-inset focus-within:ring-blue-500 rounded-lg border border-gray-200 hover:border-gray-300\">\n              <div>\n                <span className=\"rounded-lg inline-flex p-3 bg-blue-50 text-blue-700 ring-4 ring-white\">\n                  <Truck className=\"h-6 w-6\" />\n                </span>\n              </div>\n              <div className=\"mt-8\">\n                <h3 className=\"text-lg font-medium\">\n                  <span className=\"absolute inset-0\" aria-hidden=\"true\" />\n                  {t.pickupScheduleAction}\n                </h3>\n                <p className=\"mt-2 text-sm text-gray-500\">नया पिकअप शेड्यूल बनाएं</p>\n              </div>\n            </button>\n\n            <button className=\"relative group bg-white p-6 focus-within:ring-2 focus-within:ring-inset focus-within:ring-blue-500 rounded-lg border border-gray-200 hover:border-gray-300\">\n              <div>\n                <span className=\"rounded-lg inline-flex p-3 bg-green-50 text-green-700 ring-4 ring-white\">\n                  <BarChart3 className=\"h-6 w-6\" />\n                </span>\n              </div>\n              <div className=\"mt-8\">\n                <h3 className=\"text-lg font-medium\">\n                  <span className=\"absolute inset-0\" aria-hidden=\"true\" />\n                  {t.clusterAnalysis}\n                </h3>\n                <p className=\"mt-2 text-sm text-gray-500\">विस्तृत प्रदर्शन विश्लेषण</p>\n              </div>\n            </button>\n\n            <button className=\"relative group bg-white p-6 focus-within:ring-2 focus-within:ring-inset focus-within:ring-blue-500 rounded-lg border border-gray-200 hover:border-gray-300\">\n              <div>\n                <span className=\"rounded-lg inline-flex p-3 bg-purple-50 text-purple-700 ring-4 ring-white\">\n                  <AlertTriangle className=\"h-6 w-6\" />\n                </span>\n              </div>\n              <div className=\"mt-8\">\n                <h3 className=\"text-lg font-medium\">\n                  <span className=\"absolute inset-0\" aria-hidden=\"true\" />\n                  {t.alertManagementLabel}\n                </h3>\n                <p className=\"mt-2 text-sm text-gray-500\">अलर्ट और सूचनाएं देखें</p>\n              </div>\n            </button>\n\n            <button className=\"relative group bg-white p-6 focus-within:ring-2 focus-within:ring-inset focus-within:ring-blue-500 rounded-lg border border-gray-200 hover:border-gray-300\">\n              <div>\n                <span className=\"rounded-lg inline-flex p-3 bg-orange-50 text-orange-700 ring-4 ring-white\">\n                  <Calendar className=\"h-6 w-6\" />\n                </span>\n              </div>\n              <div className=\"mt-8\">\n                <h3 className=\"text-lg font-medium\">\n                  <span className=\"absolute inset-0\" aria-hidden=\"true\" />\n                  {t.maintenance}\n                </h3>\n                <p className=\"mt-2 text-sm text-gray-500\">रखरखाव शेड्यूल देखें</p>\n              </div>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\n\r\nexport interface ExecutiveKPI {\r\n  id: string;\r\n  name: string;\r\n  value: number;\r\n  unit: string;\r\n  change: number;\r\n  trend: 'up' | 'down' | 'stable';\r\n  target: number;\r\n  confidence: number;\r\n  category: 'financial' | 'operational' | 'environmental' | 'strategic';\r\n  priority: 'high' | 'medium' | 'low';\r\n}\r\n\r\nexport interface PredictiveInsight {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  impact: 'positive' | 'negative' | 'neutral';\r\n  confidence: number;\r\n  category: string;\r\n  actionRequired: boolean;\r\n  timeline: string;\r\n  estimatedValue?: number;\r\n}\r\n\r\nexport interface StrategicInitiative {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  status: 'planning' | 'in-progress' | 'completed' | 'on-hold';\r\n  progress: number;\r\n  budget: number;\r\n  spent: number;\r\n  roi: number;\r\n  timeline: {\r\n    start: string;\r\n    end: string;\r\n    milestones: Array<{\r\n      name: string;\r\n      date: string;\r\n      completed: boolean;\r\n    }>;\r\n  };\r\n  riskLevel: 'low' | 'medium' | 'high';\r\n  owner: string;\r\n  category?: 'technology' | 'market-expansion' | 'operational' | 'financial' | 'strategic';\r\n  businessValue?: string;\r\n  kpis?: Array<{\r\n    name: string;\r\n    target: number;\r\n    current: number;\r\n    unit: string;\r\n  }>;\r\n}\r\n\r\nexport interface CarbonMetrics {\r\n  creditsGenerated: number;\r\n  creditsTarget: number;\r\n  marketValue: number;\r\n  projectedRevenue: number;\r\n  co2Reduced: number;\r\n  certifications: string[];\r\n  marketTrends: {\r\n    currentPrice: number;\r\n    projectedPrice: number;\r\n    volatility: number;\r\n  };\r\n  // Enhanced fields for CarbonAnalytics component\r\n  esgRating: string;\r\n  environmentalScore: number;\r\n  socialScore: number;\r\n  governanceScore: number;\r\n  totalCreditsIssued: number;\r\n  averagePricePerCredit: number;\r\n  complianceFrameworks: number;\r\n  creditsRetired: number;\r\n  creditsPending: number;\r\n}\r\n\r\nexport interface CompetitiveData {\r\n  marketShare: number;\r\n  ranking: number;\r\n  competitorCount: number;\r\n  strengthScore: number;\r\n  weaknessAreas: string[];\r\n  opportunities: string[];\r\n  threats: string[];\r\n  benchmarks: {\r\n    efficiency: number;\r\n    revenue: number;\r\n    growth: number;\r\n  };\r\n  // Enhanced fields for CompetitiveIntelligence component\r\n  highThreatCompetitors: number;\r\n  keyOpportunities: number;\r\n  overallCompetitiveStrength: number;\r\n  marketGrowthRate: number;\r\n  competitiveTrends: {\r\n    innovation: number;\r\n    customerSatisfaction: number;\r\n    marketPresence: number;\r\n  };\r\n}\r\n\r\nexport interface VoiceQuery {\r\n  id: string;\r\n  query: string;\r\n  timestamp: Date;\r\n  response: string;\r\n  confidence: number;\r\n  category: string;\r\n  language: 'en' | 'hi';\r\n}\r\n\r\nexport interface PredictiveAnalytics {\r\n  insights: PredictiveInsight[];\r\n  forecasts: any[];\r\n  trends: any[];\r\n}\r\n\r\nexport interface CompetitiveIntelligence {\r\n  competitiveData: CompetitiveData;\r\n  benchmarks: any[];\r\n  threats: string[];\r\n  opportunities: string[];\r\n}\r\n\r\nexport interface StrategicPlanning {\r\n  initiatives: StrategicInitiative[];\r\n  roadmap: any[];\r\n  milestones: any[];\r\n}\r\n\r\nexport interface ExecutiveAlerts {\r\n  critical: PredictiveInsight[];\r\n  warnings: PredictiveInsight[];\r\n  opportunities: PredictiveInsight[];\r\n}\r\n\r\ninterface ExecutiveAnalyticsContextType {\r\n  // Data states\r\n  kpis: ExecutiveKPI[];\r\n  insights: PredictiveInsight[];\r\n  initiatives: StrategicInitiative[];\r\n  carbonMetrics: CarbonMetrics;\r\n  competitiveData: CompetitiveData;\r\n  voiceHistory: VoiceQuery[];\r\n\r\n  // Loading states\r\n  loading: boolean;\r\n  refreshing: boolean;\r\n\r\n  // Actions\r\n  refreshData: () => Promise<void>;\r\n  addVoiceQuery: (query: VoiceQuery) => void;\r\n  updateKPI: (id: string, updates: Partial<ExecutiveKPI>) => void;\r\n  updateInitiative: (id: string, updates: Partial<StrategicInitiative>) => void;\r\n\r\n  // Computed values\r\n  overallPerformanceScore: number;\r\n  criticalAlerts: PredictiveInsight[];\r\n  topOpportunities: PredictiveInsight[];\r\n}\r\n\r\nconst ExecutiveAnalyticsContext = createContext<ExecutiveAnalyticsContextType | undefined>(undefined);\r\n\r\nexport const useExecutiveAnalytics = () => {\r\n  const context = useContext(ExecutiveAnalyticsContext);\r\n  if (!context) {\r\n    throw new Error('useExecutiveAnalytics must be used within ExecutiveAnalyticsProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface ExecutiveAnalyticsProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const ExecutiveAnalyticsProvider: React.FC<ExecutiveAnalyticsProviderProps> = ({ children }) => {\r\n  const [kpis, setKpis] = useState<ExecutiveKPI[]>([\r\n    {\r\n      id: 'revenue',\r\n      name: 'Monthly Revenue',\r\n      value: 125000000,\r\n      unit: '₹',\r\n      change: 15.8,\r\n      trend: 'up',\r\n      target: 150000000,\r\n      confidence: 0.92,\r\n      category: 'financial',\r\n      priority: 'high'\r\n    },\r\n    {\r\n      id: 'production',\r\n      name: 'Biogas Production',\r\n      value: 12500,\r\n      unit: 'm³/day',\r\n      change: 12.5,\r\n      trend: 'up',\r\n      target: 15000,\r\n      confidence: 0.89,\r\n      category: 'operational',\r\n      priority: 'high'\r\n    },\r\n    {\r\n      id: 'carbon_credits',\r\n      name: 'Carbon Credits',\r\n      value: 450,\r\n      unit: 'tons CO2',\r\n      change: 22.1,\r\n      trend: 'up',\r\n      target: 500,\r\n      confidence: 0.85,\r\n      category: 'environmental',\r\n      priority: 'high'\r\n    },\r\n    {\r\n      id: 'market_share',\r\n      name: 'Market Share',\r\n      value: 18.5,\r\n      unit: '%',\r\n      change: 3.2,\r\n      trend: 'up',\r\n      target: 25,\r\n      confidence: 0.78,\r\n      category: 'strategic',\r\n      priority: 'medium'\r\n    },\r\n    {\r\n      id: 'efficiency',\r\n      name: 'Operational Efficiency',\r\n      value: 87.3,\r\n      unit: '%',\r\n      change: 5.1,\r\n      trend: 'up',\r\n      target: 90,\r\n      confidence: 0.91,\r\n      category: 'operational',\r\n      priority: 'medium'\r\n    },\r\n    {\r\n      id: 'customer_satisfaction',\r\n      name: 'Customer Satisfaction',\r\n      value: 4.6,\r\n      unit: '/5',\r\n      change: -2.1,\r\n      trend: 'down',\r\n      target: 4.8,\r\n      confidence: 0.83,\r\n      category: 'strategic',\r\n      priority: 'high'\r\n    }\r\n  ]);\r\n\r\n  const [insights, setInsights] = useState<PredictiveInsight[]>([\r\n    {\r\n      id: 'revenue_forecast',\r\n      title: 'Revenue Growth Acceleration',\r\n      description: 'Current trajectory suggests 18% quarterly growth, exceeding targets by ₹25Cr',\r\n      impact: 'positive',\r\n      confidence: 0.87,\r\n      category: 'financial',\r\n      actionRequired: false,\r\n      timeline: 'Next Quarter',\r\n      estimatedValue: 25000000\r\n    },\r\n    {\r\n      id: 'carbon_opportunity',\r\n      title: 'Carbon Credit Market Expansion',\r\n      description: 'International markets showing 35% price premium - opportunity for ₹8Cr additional revenue',\r\n      impact: 'positive',\r\n      confidence: 0.74,\r\n      category: 'environmental',\r\n      actionRequired: true,\r\n      timeline: '3-6 months',\r\n      estimatedValue: 80000000\r\n    },\r\n    {\r\n      id: 'efficiency_risk',\r\n      title: 'Production Efficiency Plateau',\r\n      description: 'Three plants showing declining efficiency - risk of ₹12Cr revenue impact',\r\n      impact: 'negative',\r\n      confidence: 0.82,\r\n      category: 'operational',\r\n      actionRequired: true,\r\n      timeline: 'Immediate',\r\n      estimatedValue: -120000000\r\n    }\r\n  ]);\r\n\r\n  const [initiatives, setInitiatives] = useState<StrategicInitiative[]>([\r\n    {\r\n      id: 'market_expansion',\r\n      name: 'Regional Market Expansion',\r\n      description: 'Expand operations to 5 new high-potential regions with focus on rural communities',\r\n      status: 'in-progress',\r\n      progress: 65,\r\n      budget: 500000000,\r\n      spent: 320000000,\r\n      roi: 240,\r\n      timeline: {\r\n        start: '2024-01-01',\r\n        end: '2024-12-31',\r\n        milestones: [\r\n          { name: 'Site Selection', date: '2024-03-15', completed: true },\r\n          { name: 'Regulatory Approval', date: '2024-06-30', completed: true },\r\n          { name: 'Construction Phase', date: '2024-10-15', completed: false },\r\n          { name: 'Operations Launch', date: '2024-12-31', completed: false }\r\n        ]\r\n      },\r\n      riskLevel: 'medium',\r\n      owner: 'Regional Development Team',\r\n      category: 'market-expansion',\r\n      businessValue: 'Increase market presence and revenue base',\r\n      kpis: [\r\n        { name: 'New Regions', target: 5, current: 3, unit: 'regions' },\r\n        { name: 'Revenue Increase', target: 25, current: 18, unit: '%' }\r\n      ]\r\n    },\r\n    {\r\n      id: 'ai_optimization',\r\n      name: 'AI-Driven Production Optimization',\r\n      description: 'Implement ML algorithms for biogas production efficiency and predictive maintenance',\r\n      status: 'planning',\r\n      progress: 25,\r\n      budget: 200000000,\r\n      spent: 50000000,\r\n      roi: 380,\r\n      timeline: {\r\n        start: '2024-06-01',\r\n        end: '2024-11-30',\r\n        milestones: [\r\n          { name: 'Algorithm Development', date: '2024-07-15', completed: false },\r\n          { name: 'Pilot Testing', date: '2024-09-30', completed: false },\r\n          { name: 'Full Deployment', date: '2024-11-30', completed: false }\r\n        ]\r\n      },\r\n      riskLevel: 'low',\r\n      owner: 'Technology Innovation Team',\r\n      category: 'technology',\r\n      businessValue: 'Improve operational efficiency and reduce costs',\r\n      kpis: [\r\n        { name: 'Efficiency Gain', target: 20, current: 5, unit: '%' },\r\n        { name: 'Cost Reduction', target: 15, current: 0, unit: '%' }\r\n      ]\r\n    },\r\n    {\r\n      id: 'carbon_trading',\r\n      name: 'Carbon Credit Trading Platform',\r\n      description: 'Develop integrated platform for carbon credit generation and trading',\r\n      status: 'in-progress',\r\n      progress: 45,\r\n      budget: 150000000,\r\n      spent: 68000000,\r\n      roi: 450,\r\n      timeline: {\r\n        start: '2024-03-01',\r\n        end: '2025-01-31',\r\n        milestones: [\r\n          { name: 'Platform Design', date: '2024-05-15', completed: true },\r\n          { name: 'Compliance Setup', date: '2024-08-30', completed: true },\r\n          { name: 'Market Integration', date: '2024-12-15', completed: false },\r\n          { name: 'Full Launch', date: '2025-01-31', completed: false }\r\n        ]\r\n      },\r\n      riskLevel: 'medium',\r\n      owner: 'Environmental Strategy Team',\r\n      category: 'strategic',\r\n      businessValue: 'Create new revenue stream from carbon credits',\r\n      kpis: [\r\n        { name: 'Credits Generated', target: 2000, current: 850, unit: 'tons' },\r\n        { name: 'Revenue from Credits', target: 80, current: 35, unit: '₹Cr' }\r\n      ]\r\n    },\r\n    {\r\n      id: 'rural_digitization',\r\n      name: 'Rural Digitization Initiative',\r\n      description: 'Digital transformation of rural operations and farmer engagement',\r\n      status: 'planning',\r\n      progress: 15,\r\n      budget: 120000000,\r\n      spent: 18000000,\r\n      roi: 280,\r\n      timeline: {\r\n        start: '2024-08-01',\r\n        end: '2025-06-30',\r\n        milestones: [\r\n          { name: 'Technology Assessment', date: '2024-09-15', completed: false },\r\n          { name: 'Pilot Implementation', date: '2024-12-31', completed: false },\r\n          { name: 'Scale-up Phase', date: '2025-04-30', completed: false },\r\n          { name: 'Full Deployment', date: '2025-06-30', completed: false }\r\n        ]\r\n      },\r\n      riskLevel: 'high',\r\n      owner: 'Digital Innovation Team',\r\n      category: 'operational',\r\n      businessValue: 'Improve farmer engagement and operational transparency',\r\n      kpis: [\r\n        { name: 'Farmers Onboarded', target: 10000, current: 1500, unit: 'farmers' },\r\n        { name: 'Process Efficiency', target: 30, current: 8, unit: '%' }\r\n      ]\r\n    }\r\n  ]);\r\n\r\n  const [carbonMetrics, setCarbonMetrics] = useState<CarbonMetrics>({\r\n    creditsGenerated: 450,\r\n    creditsTarget: 500,\r\n    marketValue: 67500000,\r\n    projectedRevenue: 85000000,\r\n    co2Reduced: 2250,\r\n    certifications: ['Gold Standard', 'VCS', 'CDM'],\r\n    marketTrends: {\r\n      currentPrice: 150000,\r\n      projectedPrice: 185000,\r\n      volatility: 0.12\r\n    },\r\n    // Enhanced fields for CarbonAnalytics\r\n    esgRating: 'A',\r\n    environmentalScore: 87,\r\n    socialScore: 82,\r\n    governanceScore: 88,\r\n    totalCreditsIssued: 420,\r\n    averagePricePerCredit: 165000,\r\n    complianceFrameworks: 4,\r\n    creditsRetired: 380,\r\n    creditsPending: 70\r\n  });\r\n\r\n  const [competitiveData, setCompetitiveData] = useState<CompetitiveData>({\r\n    marketShare: 18.5,\r\n    ranking: 3,\r\n    competitorCount: 15,\r\n    strengthScore: 85,\r\n    weaknessAreas: ['Brand Recognition', 'Scale Limitations'],\r\n    opportunities: ['Government Policy Support', 'Carbon Market Growth', 'Technology Integration'],\r\n    threats: ['New Market Entrants', 'Regulatory Changes', 'Technology Disruption'],\r\n    benchmarks: {\r\n      efficiency: 87,\r\n      revenue: 92,\r\n      growth: 85\r\n    },\r\n    // Enhanced fields for CompetitiveIntelligence\r\n    highThreatCompetitors: 2,\r\n    keyOpportunities: 3,\r\n    overallCompetitiveStrength: 85,\r\n    marketGrowthRate: 15.2,\r\n    competitiveTrends: {\r\n      innovation: 82,\r\n      customerSatisfaction: 88,\r\n      marketPresence: 78\r\n    }\r\n  });\r\n\r\n  const [voiceHistory, setVoiceHistory] = useState<VoiceQuery[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n\r\n  // Real-time data simulation\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setKpis(prevKpis =>\r\n        prevKpis.map(kpi => ({\r\n          ...kpi,\r\n          value: kpi.value + (Math.random() - 0.5) * (kpi.value * 0.01), // ±1% variance\r\n          change: kpi.change + (Math.random() - 0.5) * 2, // ±2% change variance\r\n        }))\r\n      );\r\n    }, 30000); // Update every 30 seconds\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const refreshData = async (): Promise<void> => {\r\n    setRefreshing(true);\r\n    try {\r\n      // Simulate API call\r\n      await new Promise(resolve => setTimeout(resolve, 1500));\r\n\r\n      // Refresh insights with new data\r\n      const newInsights: PredictiveInsight[] = [\r\n        {\r\n          id: 'market_trend_' + Date.now(),\r\n          title: 'Emerging Market Opportunity',\r\n          description: `New government incentives in ${['Maharashtra', 'Gujarat', 'Punjab'][Math.floor(Math.random() * 3)]} creating 25% growth potential`,\r\n          impact: 'positive',\r\n          confidence: 0.76,\r\n          category: 'strategic',\r\n          actionRequired: true,\r\n          timeline: '2-4 months',\r\n          estimatedValue: 35000000\r\n        }\r\n      ];\r\n\r\n      setInsights(prev => [...newInsights, ...prev.slice(0, 2)]);\r\n    } finally {\r\n      setRefreshing(false);\r\n    }\r\n  };\r\n\r\n  const addVoiceQuery = (query: VoiceQuery) => {\r\n    setVoiceHistory(prev => [query, ...prev.slice(0, 19)]); // Keep last 20 queries\r\n  };\r\n\r\n  const updateKPI = (id: string, updates: Partial<ExecutiveKPI>) => {\r\n    setKpis(prev => prev.map(kpi => kpi.id === id ? { ...kpi, ...updates } : kpi));\r\n  };\r\n\r\n  const updateInitiative = (id: string, updates: Partial<StrategicInitiative>) => {\r\n    setInitiatives(prev => prev.map(init => init.id === id ? { ...init, ...updates } : init));\r\n  };\r\n\r\n  // Computed values\r\n  const overallPerformanceScore = Math.round(\r\n    kpis.reduce((sum, kpi) => sum + (kpi.value / kpi.target) * 100, 0) / kpis.length\r\n  );\r\n\r\n  const criticalAlerts = insights.filter(insight =>\r\n    insight.impact === 'negative' && insight.actionRequired && insight.confidence > 0.7\r\n  );\r\n\r\n  const topOpportunities = insights.filter(insight =>\r\n    insight.impact === 'positive' && insight.confidence > 0.7\r\n  ).sort((a, b) => (b.estimatedValue || 0) - (a.estimatedValue || 0));\r\n\r\n  const value: ExecutiveAnalyticsContextType = {\r\n    kpis,\r\n    insights,\r\n    initiatives,\r\n    carbonMetrics,\r\n    competitiveData,\r\n    voiceHistory,\r\n    loading,\r\n    refreshing,\r\n    refreshData,\r\n    addVoiceQuery,\r\n    updateKPI,\r\n    updateInitiative,\r\n    overallPerformanceScore,\r\n    criticalAlerts,\r\n    topOpportunities\r\n  };\r\n\r\n  return (\r\n    <ExecutiveAnalyticsContext.Provider value={value}>\r\n      {children}\r\n    </ExecutiveAnalyticsContext.Provider>\r\n  );\r\n};","import * as React from \"react\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Alert = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement> & {\r\n    variant?: \"default\" | \"destructive\"\r\n  }\r\n>(({ className, variant = \"default\", ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    role=\"alert\"\r\n    className={cn(\r\n      \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\r\n      {\r\n        \"bg-background text-foreground\": variant === \"default\",\r\n        \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\":\r\n          variant === \"destructive\",\r\n      },\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nAlert.displayName = \"Alert\"\r\n\r\nconst AlertTitle = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLHeadingElement>\r\n>(({ className, ...props }, ref) => (\r\n  <h5\r\n    ref={ref}\r\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\r\n    {...props}\r\n  />\r\n))\r\nAlertTitle.displayName = \"AlertTitle\"\r\n\r\nconst AlertDescription = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\r\n    {...props}\r\n  />\r\n))\r\nAlertDescription.displayName = \"AlertDescription\"\r\n\r\nexport { Alert, AlertTitle, AlertDescription }","import * as React from \"react\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst TabsContext = React.createContext<{\r\n  value: string;\r\n  onValueChange: (value: string) => void;\r\n}>({\r\n  value: \"\",\r\n  onValueChange: () => {},\r\n})\r\n\r\nconst Tabs = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement> & {\r\n    value?: string;\r\n    onValueChange?: (value: string) => void;\r\n    defaultValue?: string;\r\n  }\r\n>(({ className, value, onValueChange, defaultValue, children, ...props }, ref) => {\r\n  const [internalValue, setInternalValue] = React.useState(defaultValue || \"\")\r\n  const currentValue = value !== undefined ? value : internalValue\r\n  const handleValueChange = onValueChange || setInternalValue\r\n\r\n  return (\r\n    <TabsContext.Provider value={{ value: currentValue, onValueChange: handleValueChange }}>\r\n      <div ref={ref} className={cn(\"w-full\", className)} {...props}>\r\n        {children}\r\n      </div>\r\n    </TabsContext.Provider>\r\n  )\r\n})\r\nTabs.displayName = \"Tabs\"\r\n\r\nconst TabsList = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTabsList.displayName = \"TabsList\"\r\n\r\nconst TabsTrigger = React.forwardRef<\r\n  HTMLButtonElement,\r\n  React.ButtonHTMLAttributes<HTMLButtonElement> & { value: string }\r\n>(({ className, value, children, ...props }, ref) => {\r\n  const { value: currentValue, onValueChange } = React.useContext(TabsContext)\r\n  \r\n  return (\r\n    <button\r\n      ref={ref}\r\n      className={cn(\r\n        \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\r\n        currentValue === value && \"bg-background text-foreground shadow-sm\",\r\n        className\r\n      )}\r\n      onClick={() => onValueChange(value)}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </button>\r\n  )\r\n})\r\nTabsTrigger.displayName = \"TabsTrigger\"\r\n\r\nconst TabsContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement> & { value: string }\r\n>(({ className, value, children, ...props }, ref) => {\r\n  const { value: currentValue } = React.useContext(TabsContext)\r\n  \r\n  if (currentValue !== value) return null\r\n  \r\n  return (\r\n    <div\r\n      ref={ref}\r\n      className={cn(\r\n        \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </div>\r\n  )\r\n})\r\nTabsContent.displayName = \"TabsContent\"\r\n\r\nexport { Tabs, TabsList, TabsTrigger, TabsContent }","import React, { useState, useEffect } from 'react'\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'\r\nimport { Button } from '@/components/ui/button'\r\nimport { Badge } from '@/components/ui/badge'\r\nimport { Alert, AlertDescription } from '@/components/ui/alert'\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'\r\nimport {\r\n  BarChart3,\r\n  TrendingUp,\r\n  AlertTriangle,\r\n  Brain,\r\n  Factory,\r\n  Filter,\r\n  DollarSign,\r\n  Users,\r\n  Zap,\r\n  Globe,\r\n  Clock,\r\n  Target,\r\n  Award,\r\n  Calendar,\r\n  FileText,\r\n  Video,\r\n  MessageSquare,\r\n  Share2,\r\n  Download,\r\n  RefreshCw\r\n} from 'lucide-react'\r\nimport { useAuth } from '../../contexts/AuthContext'\r\nimport { usePlatform } from '../../contexts/PlatformContext'\r\nimport { useExecutiveAnalytics } from '../../contexts/ExecutiveAnalyticsContext'\r\n\r\ninterface CrossModuleMetric {\r\n  id: string\r\n  name: string\r\n  value: number\r\n  unit: string\r\n  change: number\r\n  trend: 'up' | 'down' | 'stable'\r\n  modules: string[]\r\n  priority: 'high' | 'medium' | 'low'\r\n  lastUpdated: Date\r\n}\r\n\r\ninterface ExecutiveInsight {\r\n  id: string\r\n  title: string\r\n  description: string\r\n  impact: 'positive' | 'negative' | 'neutral'\r\n  confidence: number\r\n  actionRequired: boolean\r\n  modules: string[]\r\n  value?: string\r\n  timeframe: string\r\n}\r\n\r\ninterface CollaborationSession {\r\n  id: string\r\n  title: string\r\n  participants: string[]\r\n  status: 'active' | 'scheduled' | 'completed'\r\n  startTime: Date\r\n  duration: number\r\n  modules: string[]\r\n}\r\n\r\nconst ExecutiveCommandCenter: React.FC = () => {\r\n  const { user, isExecutive } = useAuth()\r\n  const { navigationState, sessionMetrics, navigateToModule } = usePlatform()\r\n  const { kpis } = useExecutiveAnalytics()\r\n\r\n  const [crossModuleMetrics, setCrossModuleMetrics] = useState<CrossModuleMetric[]>([\r\n    {\r\n      id: 'unified-revenue',\r\n      name: 'Total Platform Revenue',\r\n      value: 18750000, // 18.75 Cr combining all modules\r\n      unit: '₹',\r\n      change: 22.5,\r\n      trend: 'up',\r\n      modules: ['urjasanyojak', 'shuddhi-doot', 'urja-vyapar'],\r\n      priority: 'high',\r\n      lastUpdated: new Date()\r\n    },\r\n    {\r\n      id: 'operational-efficiency',\r\n      name: 'Cross-Platform Efficiency',\r\n      value: 91.2,\r\n      unit: '%',\r\n      change: 8.3,\r\n      trend: 'up',\r\n      modules: ['urjasanyojak', 'shuddhi-doot'],\r\n      priority: 'high',\r\n      lastUpdated: new Date()\r\n    },\r\n    {\r\n      id: 'executive-decisions',\r\n      name: 'Strategic Decisions This Week',\r\n      value: 12,\r\n      unit: 'decisions',\r\n      change: -15.2,\r\n      trend: 'down',\r\n      modules: ['urja-neta'],\r\n      priority: 'medium',\r\n      lastUpdated: new Date()\r\n    }\r\n  ])\r\n\r\n  const [executiveInsights, setExecutiveInsights] = useState<ExecutiveInsight[]>([\r\n    {\r\n      id: 'cross-platform-synergy',\r\n      title: 'Cross-Platform Operational Synergy',\r\n      description: 'UrjaSanyojak and ShuddhiDoot integration showing 15% efficiency gain in biogas quality control',\r\n      impact: 'positive',\r\n      confidence: 94,\r\n      actionRequired: false,\r\n      modules: ['urjasanyojak', 'shuddhi-doot'],\r\n      value: '+₹2.3Cr',\r\n      timeframe: 'Q1 2025'\r\n    },\r\n    {\r\n      id: 'sales-production-gap',\r\n      title: 'Sales-Production Alignment Gap',\r\n      description: 'UrjaVyapar sales commitments exceeding UrjaSanyojak production capacity by 12%',\r\n      impact: 'negative',\r\n      confidence: 87,\r\n      actionRequired: true,\r\n      modules: ['urjasanyojak', 'urja-vyapar'],\r\n      value: 'Risk: ₹1.8Cr',\r\n      timeframe: 'Immediate'\r\n    },\r\n    {\r\n      id: 'quality-premium-opportunity',\r\n      title: 'Premium Quality Market Opportunity',\r\n      description: 'ShuddhiDoot purity levels enabling 25% premium pricing in international markets',\r\n      impact: 'positive',\r\n      confidence: 82,\r\n      actionRequired: true,\r\n      modules: ['shuddhi-doot', 'urja-vyapar'],\r\n      value: '+₹4.2Cr',\r\n      timeframe: '6 months'\r\n    }\r\n  ])\r\n\r\n  const [collaborationSessions, setCollaborationSessions] = useState<CollaborationSession[]>([\r\n    {\r\n      id: 'weekly-exec-review',\r\n      title: 'Weekly Executive Review',\r\n      participants: ['Dr. Rajesh Kumar', 'Priya Sharma', 'Amit Patel'],\r\n      status: 'scheduled',\r\n      startTime: new Date(Date.now() + 2 * 60 * 60 * 1000), // 2 hours from now\r\n      duration: 60,\r\n      modules: ['urjasanyojak', 'shuddhi-doot', 'urja-vyapar', 'urja-neta']\r\n    },\r\n    {\r\n      id: 'production-sales-sync',\r\n      title: 'Production-Sales Alignment',\r\n      participants: ['Operations Team', 'Sales Team'],\r\n      status: 'active',\r\n      startTime: new Date(Date.now() - 30 * 60 * 1000), // Started 30 min ago\r\n      duration: 90,\r\n      modules: ['urjasanyojak', 'urja-vyapar']\r\n    }\r\n  ])\r\n\r\n  const [refreshing, setRefreshing] = useState(false)\r\n\r\n  const formatCurrency = (value: number): string => {\r\n    if (value >= 10000000) {\r\n      return `₹${(value / 10000000).toFixed(1)}Cr`\r\n    } else if (value >= 100000) {\r\n      return `₹${(value / 100000).toFixed(1)}L`\r\n    } else {\r\n      return `₹${value.toLocaleString()}`\r\n    }\r\n  }\r\n\r\n  const handleRefreshData = async () => {\r\n    setRefreshing(true)\r\n    // Simulate data refresh\r\n    await new Promise(resolve => setTimeout(resolve, 2000))\r\n\r\n    // Update timestamps\r\n    setCrossModuleMetrics(prev => prev.map(metric => ({\r\n      ...metric,\r\n      lastUpdated: new Date()\r\n    })))\r\n\r\n    setRefreshing(false)\r\n  }\r\n\r\n  const handleModuleDeepDive = (moduleId: string) => {\r\n    navigateToModule(moduleId)\r\n  }\r\n\r\n  if (!isExecutive()) {\r\n    return (\r\n      <Alert className=\"m-6\">\r\n        <AlertTriangle className=\"h-4 w-4\" />\r\n        <AlertDescription>\r\n          Executive Command Center requires executive-level access.\r\n        </AlertDescription>\r\n      </Alert>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold text-gray-900\">Executive Command Center</h1>\r\n          <p className=\"text-gray-600\">Unified platform oversight and strategic decision support</p>\r\n        </div>\r\n        <div className=\"flex items-center space-x-3\">\r\n          <Badge variant=\"default\" className=\"bg-gold-100 text-gold-800 border-gold-300\">\r\n            Executive Access\r\n          </Badge>\r\n          <Button\r\n            onClick={handleRefreshData}\r\n            disabled={refreshing}\r\n            variant=\"outline\"\r\n            className=\"flex items-center space-x-2\"\r\n          >\r\n            <RefreshCw className={`h-4 w-4 ${refreshing ? 'animate-spin' : ''}`} />\r\n            <span>Refresh</span>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      <Tabs defaultValue=\"overview\" className=\"space-y-6\">\r\n        <TabsList className=\"grid w-full grid-cols-5\">\r\n          <TabsTrigger value=\"overview\">Platform Overview</TabsTrigger>\r\n          <TabsTrigger value=\"insights\">Strategic Insights</TabsTrigger>\r\n          <TabsTrigger value=\"collaboration\">Collaboration</TabsTrigger>\r\n          <TabsTrigger value=\"performance\">Performance</TabsTrigger>\r\n          <TabsTrigger value=\"reports\">Executive Reports</TabsTrigger>\r\n        </TabsList>\r\n\r\n        {/* Platform Overview Tab */}\r\n        <TabsContent value=\"overview\" className=\"space-y-6\">\r\n          {/* Cross-Module KPIs */}\r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n            {crossModuleMetrics.map((metric) => (\r\n              <Card key={metric.id} className=\"relative\">\r\n                <CardHeader className=\"pb-3\">\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <CardTitle className=\"text-sm font-medium\">{metric.name}</CardTitle>\r\n                    <Badge\r\n                      variant={metric.priority === 'high' ? 'default' : 'secondary'}\r\n                      className=\"text-xs\"\r\n                    >\r\n                      {metric.priority}\r\n                    </Badge>\r\n                  </div>\r\n                </CardHeader>\r\n                <CardContent>\r\n                  <div className=\"space-y-3\">\r\n                    <div className=\"flex items-end space-x-2\">\r\n                      <span className=\"text-2xl font-bold\">\r\n                        {metric.unit === '₹' ? formatCurrency(metric.value) : `${metric.value}${metric.unit}`}\r\n                      </span>\r\n                      <div className={`flex items-center text-sm ${\r\n                        metric.trend === 'up' ? 'text-green-600' : 'text-red-600'\r\n                      }`}>\r\n                        <TrendingUp className={`h-4 w-4 mr-1 ${metric.trend === 'down' ? 'rotate-180' : ''}`} />\r\n                        {Math.abs(metric.change)}%\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"space-y-2\">\r\n                      <div className=\"text-xs text-gray-500\">Source Modules:</div>\r\n                      <div className=\"flex flex-wrap gap-1\">\r\n                        {metric.modules.map((moduleId) => (\r\n                          <Button\r\n                            key={moduleId}\r\n                            variant=\"ghost\"\r\n                            size=\"sm\"\r\n                            onClick={() => handleModuleDeepDive(moduleId)}\r\n                            className=\"h-6 px-2 text-xs bg-blue-50 hover:bg-blue-100 text-blue-700\"\r\n                          >\r\n                            {moduleId.replace('-', '')}\r\n                          </Button>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"text-xs text-gray-400\">\r\n                      Updated: {metric.lastUpdated.toLocaleTimeString()}\r\n                    </div>\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n            ))}\r\n          </div>\r\n\r\n          {/* Module Status Grid */}\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center space-x-2\">\r\n                <Globe className=\"h-5 w-5\" />\r\n                <span>Platform Module Status</span>\r\n              </CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\r\n                <div className=\"flex items-center justify-between p-4 bg-green-50 rounded-lg border border-green-200\">\r\n                  <div className=\"flex items-center space-x-3\">\r\n                    <Factory className=\"h-8 w-8 text-green-600\" />\r\n                    <div>\r\n                      <div className=\"font-medium text-green-900\">UrjaSanyojak</div>\r\n                      <div className=\"text-sm text-green-700\">Active</div>\r\n                    </div>\r\n                  </div>\r\n                  <Badge variant=\"default\" className=\"bg-green-100 text-green-800 border-green-300\">\r\n                    99.2%\r\n                  </Badge>\r\n                </div>\r\n\r\n                <div className=\"flex items-center justify-between p-4 bg-blue-50 rounded-lg border border-blue-200\">\r\n                  <div className=\"flex items-center space-x-3\">\r\n                    <Filter className=\"h-8 w-8 text-blue-600\" />\r\n                    <div>\r\n                      <div className=\"font-medium text-blue-900\">ShuddhiDoot</div>\r\n                      <div className=\"text-sm text-blue-700\">Active</div>\r\n                    </div>\r\n                  </div>\r\n                  <Badge variant=\"default\" className=\"bg-blue-100 text-blue-800 border-blue-300\">\r\n                    98.7%\r\n                  </Badge>\r\n                </div>\r\n\r\n                <div className=\"flex items-center justify-between p-4 bg-purple-50 rounded-lg border border-purple-200\">\r\n                  <div className=\"flex items-center space-x-3\">\r\n                    <TrendingUp className=\"h-8 w-8 text-purple-600\" />\r\n                    <div>\r\n                      <div className=\"font-medium text-purple-900\">UrjaVyapar</div>\r\n                      <div className=\"text-sm text-purple-700\">Active</div>\r\n                    </div>\r\n                  </div>\r\n                  <Badge variant=\"default\" className=\"bg-purple-100 text-purple-800 border-purple-300\">\r\n                    97.9%\r\n                  </Badge>\r\n                </div>\r\n\r\n                <div className=\"flex items-center justify-between p-4 bg-gold-50 rounded-lg border border-gold-200\">\r\n                  <div className=\"flex items-center space-x-3\">\r\n                    <Brain className=\"h-8 w-8 text-gold-600\" />\r\n                    <div>\r\n                      <div className=\"font-medium text-gold-900\">UrjaNeta</div>\r\n                      <div className=\"text-sm text-gold-700\">Executive</div>\r\n                    </div>\r\n                  </div>\r\n                  <Badge variant=\"default\" className=\"bg-gold-100 text-gold-800 border-gold-300\">\r\n                    100%\r\n                  </Badge>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        {/* Strategic Insights Tab */}\r\n        <TabsContent value=\"insights\" className=\"space-y-6\">\r\n          <div className=\"space-y-4\">\r\n            {executiveInsights.map((insight) => (\r\n              <Card key={insight.id} className={`border-l-4 ${\r\n                insight.impact === 'positive' ? 'border-l-green-500 bg-green-50' :\r\n                insight.impact === 'negative' ? 'border-l-red-500 bg-red-50' :\r\n                'border-l-blue-500 bg-blue-50'\r\n              }`}>\r\n                <CardHeader className=\"pb-3\">\r\n                  <div className=\"flex items-start justify-between\">\r\n                    <div className=\"space-y-1\">\r\n                      <CardTitle className=\"text-lg\">{insight.title}</CardTitle>\r\n                      <div className=\"flex items-center space-x-4\">\r\n                        <Badge variant=\"outline\" className=\"text-xs\">\r\n                          Confidence: {insight.confidence}%\r\n                        </Badge>\r\n                        <Badge variant=\"secondary\" className=\"text-xs\">\r\n                          {insight.timeframe}\r\n                        </Badge>\r\n                        {insight.value && (\r\n                          <Badge variant={insight.impact === 'positive' ? 'default' : 'destructive'} className=\"text-xs\">\r\n                            {insight.value}\r\n                          </Badge>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                    {insight.actionRequired && (\r\n                      <Button variant=\"outline\" size=\"sm\">\r\n                        <Target className=\"h-4 w-4 mr-1\" />\r\n                        Action Required\r\n                      </Button>\r\n                    )}\r\n                  </div>\r\n                </CardHeader>\r\n                <CardContent>\r\n                  <p className=\"text-gray-700 mb-4\">{insight.description}</p>\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <div className=\"flex flex-wrap gap-1\">\r\n                      {insight.modules.map((moduleId) => (\r\n                        <Button\r\n                          key={moduleId}\r\n                          variant=\"ghost\"\r\n                          size=\"sm\"\r\n                          onClick={() => handleModuleDeepDive(moduleId)}\r\n                          className=\"h-6 px-2 text-xs\"\r\n                        >\r\n                          {moduleId}\r\n                        </Button>\r\n                      ))}\r\n                    </div>\r\n                    <Button variant=\"outline\" size=\"sm\">\r\n                      <FileText className=\"h-4 w-4 mr-1\" />\r\n                      Generate Report\r\n                    </Button>\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n            ))}\r\n          </div>\r\n        </TabsContent>\r\n\r\n        {/* Collaboration Tab */}\r\n        <TabsContent value=\"collaboration\" className=\"space-y-6\">\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n            {/* Active Sessions */}\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center space-x-2\">\r\n                  <Video className=\"h-5 w-5\" />\r\n                  <span>Active Sessions</span>\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                {collaborationSessions.filter(s => s.status === 'active').map((session) => (\r\n                  <div key={session.id} className=\"p-4 bg-green-50 rounded-lg border border-green-200\">\r\n                    <div className=\"flex items-center justify-between mb-2\">\r\n                      <h4 className=\"font-medium text-green-900\">{session.title}</h4>\r\n                      <Badge variant=\"default\" className=\"bg-green-100 text-green-800\">\r\n                        Live\r\n                      </Badge>\r\n                    </div>\r\n                    <p className=\"text-sm text-green-700 mb-2\">\r\n                      Participants: {session.participants.join(', ')}\r\n                    </p>\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <span className=\"text-xs text-green-600\">\r\n                        Started: {Math.floor((Date.now() - session.startTime.getTime()) / 60000)}m ago\r\n                      </span>\r\n                      <Button variant=\"outline\" size=\"sm\">\r\n                        <Video className=\"h-4 w-4 mr-1\" />\r\n                        Join\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n\r\n                {collaborationSessions.filter(s => s.status === 'scheduled').map((session) => (\r\n                  <div key={session.id} className=\"p-4 bg-blue-50 rounded-lg border border-blue-200\">\r\n                    <div className=\"flex items-center justify-between mb-2\">\r\n                      <h4 className=\"font-medium text-blue-900\">{session.title}</h4>\r\n                      <Badge variant=\"secondary\">\r\n                        Scheduled\r\n                      </Badge>\r\n                    </div>\r\n                    <p className=\"text-sm text-blue-700 mb-2\">\r\n                      Participants: {session.participants.join(', ')}\r\n                    </p>\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <span className=\"text-xs text-blue-600\">\r\n                        Starts: {session.startTime.toLocaleTimeString()}\r\n                      </span>\r\n                      <Button variant=\"outline\" size=\"sm\">\r\n                        <Calendar className=\"h-4 w-4 mr-1\" />\r\n                        Add to Calendar\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </CardContent>\r\n            </Card>\r\n\r\n            {/* Quick Actions */}\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center space-x-2\">\r\n                  <MessageSquare className=\"h-5 w-5\" />\r\n                  <span>Executive Actions</span>\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-3\">\r\n                <Button variant=\"outline\" className=\"w-full justify-start\">\r\n                  <Video className=\"h-4 w-4 mr-2\" />\r\n                  Start Executive Meeting\r\n                </Button>\r\n                <Button variant=\"outline\" className=\"w-full justify-start\">\r\n                  <Share2 className=\"h-4 w-4 mr-2\" />\r\n                  Share Cross-Module Insights\r\n                </Button>\r\n                <Button variant=\"outline\" className=\"w-full justify-start\">\r\n                  <FileText className=\"h-4 w-4 mr-2\" />\r\n                  Create Strategic Document\r\n                </Button>\r\n                <Button variant=\"outline\" className=\"w-full justify-start\">\r\n                  <Download className=\"h-4 w-4 mr-2\" />\r\n                  Export Unified Report\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </TabsContent>\r\n\r\n        {/* Performance Tab */}\r\n        <TabsContent value=\"performance\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center space-x-2\">\r\n                <BarChart3 className=\"h-5 w-5\" />\r\n                <span>Platform Performance Metrics</span>\r\n              </CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\r\n                <div className=\"text-center p-4 bg-blue-50 rounded-lg\">\r\n                  <div className=\"text-2xl font-bold text-blue-600\">1.2s</div>\r\n                  <div className=\"text-sm text-blue-700\">Avg Load Time</div>\r\n                </div>\r\n                <div className=\"text-center p-4 bg-green-50 rounded-lg\">\r\n                  <div className=\"text-2xl font-bold text-green-600\">99.8%</div>\r\n                  <div className=\"text-sm text-green-700\">Platform Uptime</div>\r\n                </div>\r\n                <div className=\"text-center p-4 bg-purple-50 rounded-lg\">\r\n                  <div className=\"text-2xl font-bold text-purple-600\">2.1s</div>\r\n                  <div className=\"text-sm text-purple-700\">SSO Response</div>\r\n                </div>\r\n                <div className=\"text-center p-4 bg-orange-50 rounded-lg\">\r\n                  <div className=\"text-2xl font-bold text-orange-600\">94.2%</div>\r\n                  <div className=\"text-sm text-orange-700\">User Satisfaction</div>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        {/* Reports Tab */}\r\n        <TabsContent value=\"reports\" className=\"space-y-6\">\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n            <Button variant=\"outline\" className=\"h-24 flex flex-col items-center justify-center space-y-2\">\r\n              <FileText className=\"h-6 w-6\" />\r\n              <span>Weekly Executive Summary</span>\r\n            </Button>\r\n            <Button variant=\"outline\" className=\"h-24 flex flex-col items-center justify-center space-y-2\">\r\n              <BarChart3 className=\"h-6 w-6\" />\r\n              <span>Cross-Module Analytics</span>\r\n            </Button>\r\n            <Button variant=\"outline\" className=\"h-24 flex flex-col items-center justify-center space-y-2\">\r\n              <Target className=\"h-6 w-6\" />\r\n              <span>Strategic Planning Report</span>\r\n            </Button>\r\n            <Button variant=\"outline\" className=\"h-24 flex flex-col items-center justify-center space-y-2\">\r\n              <Award className=\"h-6 w-6\" />\r\n              <span>Performance Review</span>\r\n            </Button>\r\n            <Button variant=\"outline\" className=\"h-24 flex flex-col items-center justify-center space-y-2\">\r\n              <DollarSign className=\"h-6 w-6\" />\r\n              <span>Financial Overview</span>\r\n            </Button>\r\n            <Button variant=\"outline\" className=\"h-24 flex flex-col items-center justify-center space-y-2\">\r\n              <Users className=\"h-6 w-6\" />\r\n              <span>Team Productivity</span>\r\n            </Button>\r\n          </div>\r\n        </TabsContent>\r\n      </Tabs>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport { ExecutiveCommandCenter }","import React, { useEffect } from 'react';\r\nimport { usePlatform } from '../contexts/PlatformContext';\r\nimport { ExecutiveAnalyticsProvider } from '../contexts/ExecutiveAnalyticsContext';\r\nimport { ExecutiveCommandCenter } from '../components/executive/ExecutiveCommandCenter';\r\n\r\nconst ExecutiveDashboard: React.FC = () => {\r\n  const { trackModuleUsage, updateBreadcrumbs } = usePlatform();\r\n\r\n  // Track module usage and update breadcrumbs for platform integration\r\n  useEffect(() => {\r\n    trackModuleUsage('urja-neta');\r\n    updateBreadcrumbs([\r\n      { label: 'Executive', url: '/executive', module: 'urja-neta' },\r\n      { label: 'Command Center', url: '/executive', module: 'urja-neta' }\r\n    ]);\r\n  }, []);\r\n\r\n  return (\r\n    <ExecutiveAnalyticsProvider>\r\n      <div className=\"space-y-6\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <div>\r\n            <h1 className=\"text-3xl font-bold text-gray-900\">Executive Command Center</h1>\r\n            <p className=\"text-gray-600\">\r\n              Unified platform analytics and cross-module insights for senior leadership\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <ExecutiveCommandCenter />\r\n      </div>\r\n    </ExecutiveAnalyticsProvider>\r\n  );\r\n};\r\n\r\nexport default ExecutiveDashboard;","/**\r\n * GauShala API Service - Fixed version with proper microservices integration\r\n * Handles all API calls for cattle management, transactions, and dashboard data\r\n */\r\n\r\nconst API_BASE_URL = (import.meta as any).env?.VITE_API_URL || 'http://localhost:8080';\r\n\r\nexport interface ApiResponse<T> {\r\n  success: boolean;\r\n  data?: T;\r\n  message?: string;\r\n  error?: string;\r\n}\r\n\r\n// Cattle Management APIs\r\nexport interface Cattle {\r\n  id: string;\r\n  rfidTag: string;\r\n  name: string;\r\n  breed: string;\r\n  age: number;\r\n  weight: number;\r\n  health: 'healthy' | 'sick' | 'recovering' | 'vaccination_due';\r\n  owner: string;\r\n  ownerId: string;\r\n  location: {\r\n    latitude: number;\r\n    longitude: number;\r\n    timestamp: number;\r\n    address?: string;\r\n  };\r\n  totalDungCollected: number;\r\n  lastDungCollection?: number;\r\n  isActive: boolean;\r\n  photoUrl?: string;\r\n  medicalHistory: MedicalRecord[];\r\n  createdAt: number;\r\n  updatedAt: number;\r\n}\r\n\r\nexport interface MedicalRecord {\r\n  id: string;\r\n  date: number;\r\n  type: 'checkup' | 'vaccination' | 'treatment' | 'surgery';\r\n  description: string;\r\n  veterinarian: string;\r\n  medication?: string;\r\n  nextCheckup?: number;\r\n}\r\n\r\nexport interface Transaction {\r\n  id: string;\r\n  cattleId: string;\r\n  cattleName: string;\r\n  digestorId: string;\r\n  dungWeight: number;\r\n  dungQuality: number;\r\n  worker: string;\r\n  timestamp: number;\r\n  biogasGenerated: number;\r\n  amount: number;\r\n  status: 'pending' | 'completed' | 'cancelled';\r\n  paymentMethod: 'cash' | 'digital' | 'credit';\r\n  notes?: string;\r\n}\r\n\r\nexport interface DashboardStats {\r\n  totalCattle: number;\r\n  activeCattle: number;\r\n  sickCattle: number;\r\n  totalDungCollected: number;\r\n  todayDungCollection: number;\r\n  totalBiogasGenerated: number;\r\n  todayBiogasGenerated: number;\r\n  totalRevenue: number;\r\n  pendingTransactions: number;\r\n  averageHealthScore: number;\r\n}\r\n\r\nexport interface RecentCollection {\r\n  id: string;\r\n  cattleName: string;\r\n  weight: number;\r\n  quality: number;\r\n  worker: string;\r\n  timestamp: number;\r\n  digestorId: string;\r\n  status: 'completed' | 'processing' | 'failed';\r\n}\r\n\r\nexport interface TopPerformer {\r\n  name: string;\r\n  collections: number;\r\n  totalWeight: number;\r\n  avgQuality: number;\r\n}\r\n\r\n// API Helper function\r\nasync function apiCall<T>(\r\n  endpoint: string,\r\n  options: RequestInit = {}\r\n): Promise<ApiResponse<T>> {\r\n  try {\r\n    const token = localStorage.getItem('saubhagya_jwt_token');\r\n    const headers = {\r\n      'Content-Type': 'application/json',\r\n      ...(token && { Authorization: `Bearer ${token}` }),\r\n      ...options.headers,\r\n    };\r\n\r\n    const response = await fetch(`${API_BASE_URL}${endpoint}`, {\r\n      ...options,\r\n      headers,\r\n    });\r\n\r\n    const data = await response.json();\r\n\r\n    if (!response.ok) {\r\n      return {\r\n        success: false,\r\n        error: data.message || `HTTP error! status: ${response.status}`,\r\n      };\r\n    }\r\n\r\n    return {\r\n      success: true,\r\n      data,\r\n    };\r\n  } catch (error) {\r\n    console.error('API call failed:', error);\r\n    return {\r\n      success: false,\r\n      error: error instanceof Error ? error.message : 'Unknown error occurred',\r\n    };\r\n  }\r\n}\r\n\r\n// Dashboard API\r\nexport const dashboardApi = {\r\n  async getStats(): Promise<ApiResponse<DashboardStats>> {\r\n    return apiCall<DashboardStats>('/api/dashboard/stats');\r\n  },\r\n\r\n  async getRecentCollections(limit: number = 10): Promise<ApiResponse<RecentCollection[]>> {\r\n    return apiCall<RecentCollection[]>(`/api/dashboard/recent-collections?limit=${limit}`);\r\n  },\r\n\r\n  async getTopPerformers(limit: number = 5): Promise<ApiResponse<TopPerformer[]>> {\r\n    return apiCall<TopPerformer[]>(`/api/dashboard/top-performers?limit=${limit}`);\r\n  },\r\n};\r\n\r\n// Cattle Management API - Using proper microservices architecture\r\nexport const cattleApi = {\r\n  async getAllCattle(): Promise<ApiResponse<Cattle[]>> {\r\n    // Use IoT Service via proper microservices routing (Auth gateway)\r\n    try {\r\n      // Import microservices client dynamically to avoid circular dependencies\r\n      const { IoTServiceClient } = await import('../microservices');\r\n      const result = await IoTServiceClient.getCattleList();\r\n\r\n      return {\r\n        success: result.success,\r\n        data: result.data || [],\r\n      };\r\n    } catch (error) {\r\n      console.error('Get all cattle failed:', error);\r\n      return {\r\n        success: false,\r\n        error: error instanceof Error ? error.message : 'Unknown error occurred',\r\n      };\r\n    }\r\n  },\r\n\r\n  async getCattleById(id: string): Promise<ApiResponse<Cattle>> {\r\n    const allCattleResponse = await this.getAllCattle();\r\n    if (!allCattleResponse.success || !allCattleResponse.data) {\r\n      return {\r\n        success: false,\r\n        error: allCattleResponse.error || 'Failed to fetch cattle data'\r\n      };\r\n    }\r\n\r\n    const cattle = allCattleResponse.data.find(c => c.id === id);\r\n    if (!cattle) {\r\n      return {\r\n        success: false,\r\n        error: 'Cattle not found',\r\n      };\r\n    }\r\n\r\n    return {\r\n      success: true,\r\n      data: cattle,\r\n    };\r\n  },\r\n\r\n  async getCattleByRfid(rfidTag: string): Promise<ApiResponse<Cattle>> {\r\n    return apiCall<Cattle>(`/api/v1/cattle/rfid/${encodeURIComponent(rfidTag)}`);\r\n  },\r\n\r\n  async createCattle(cattle: Omit<Cattle, 'id' | 'createdAt' | 'updatedAt'>): Promise<ApiResponse<Cattle>> {\r\n    try {\r\n      const { IoTServiceClient } = await import('../microservices');\r\n      const result = await IoTServiceClient.addCattle({\r\n        tagId: cattle.rfidTag,\r\n        name: cattle.name,\r\n        breed: cattle.breed,\r\n        age: cattle.age,\r\n        weight: cattle.weight,\r\n      });\r\n\r\n      return {\r\n        success: result.success,\r\n        data: result.data,\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error instanceof Error ? error.message : 'Unknown error occurred',\r\n      };\r\n    }\r\n  },\r\n\r\n  async updateCattle(id: string, updates: Partial<Cattle>): Promise<ApiResponse<Cattle>> {\r\n    try {\r\n      const { IoTServiceClient } = await import('../microservices');\r\n\r\n      // Prepare complete data structure for backend\r\n      const updateData: any = {\r\n        id: id,\r\n        name: updates.name,\r\n        breed: updates.breed,\r\n        age: updates.age,\r\n        weight: updates.weight,\r\n      };\r\n\r\n      // Add optional fields if provided\r\n      if (updates.rfidTag) {\r\n        updateData.rfidTag = updates.rfidTag;\r\n      }\r\n      if (updates.health) {\r\n        updateData.health = updates.health;\r\n      }\r\n      if (updates.owner) {\r\n        updateData.ownerName = updates.owner;\r\n      }\r\n      if (updates.ownerId) {\r\n        updateData.ownerId = updates.ownerId;\r\n      }\r\n      if (updates.location) {\r\n        updateData.location = updates.location;\r\n      }\r\n\r\n      const result = await IoTServiceClient.updateCattle(id, updateData);\r\n\r\n      return {\r\n        success: result.success,\r\n        data: result.data,\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error instanceof Error ? error.message : 'Unknown error occurred',\r\n      };\r\n    }\r\n  },\r\n\r\n  async deleteCattle(id: string): Promise<ApiResponse<void>> {\r\n    try {\r\n      const { IoTServiceClient } = await import('../microservices');\r\n      const result = await IoTServiceClient.deleteCattle(id);\r\n\r\n      return {\r\n        success: result.success,\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error instanceof Error ? error.message : 'Unknown error occurred',\r\n      };\r\n    }\r\n  },\r\n\r\n  async scanRfid(): Promise<ApiResponse<{ rfidTag: string; cattleInfo?: Cattle }>> {\r\n    // Simulate RFID scanning\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        resolve({\r\n          success: true,\r\n          data: {\r\n            rfidTag: `RFID-${Date.now()}`,\r\n          },\r\n        });\r\n      }, 2000);\r\n    });\r\n  },\r\n\r\n  async updateHealth(cattleId: string, health: Cattle['health'], notes?: string): Promise<ApiResponse<Cattle>> {\r\n    const updateData: Partial<Cattle> = { health };\r\n    if (notes) {\r\n      // Notes can be used for logging or future implementation\r\n      console.log(`Health update notes for ${cattleId}: ${notes}`);\r\n    }\r\n    return this.updateCattle(cattleId, updateData);\r\n  },\r\n\r\n  async addMedicalRecord(cattleId: string, record: Omit<MedicalRecord, 'id'>): Promise<ApiResponse<MedicalRecord>> {\r\n    return apiCall<MedicalRecord>(`/api/v1/cattle/${cattleId}/medical-records`, {\r\n      method: 'POST',\r\n      body: JSON.stringify(record),\r\n    });\r\n  },\r\n\r\n  async uploadPhoto(cattleId: string, photoFile: File): Promise<ApiResponse<{ photoUrl: string }>> {\r\n    const formData = new FormData();\r\n    formData.append('photo', photoFile);\r\n\r\n    try {\r\n      const token = localStorage.getItem('saubhagya_jwt_token');\r\n      const response = await fetch(`${API_BASE_URL}/api/v1/cattle/${cattleId}/photo`, {\r\n        method: 'POST',\r\n        headers: {\r\n          ...(token && { Authorization: `Bearer ${token}` }),\r\n        },\r\n        body: formData,\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        return {\r\n          success: false,\r\n          error: data.message || `HTTP error! status: ${response.status}`,\r\n        };\r\n      }\r\n\r\n      return {\r\n        success: true,\r\n        data,\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error instanceof Error ? error.message : 'Unknown error occurred',\r\n      };\r\n    }\r\n  },\r\n};\r\n\r\n// Transaction API\r\nexport const transactionApi = {\r\n  async getAllTransactions(): Promise<ApiResponse<Transaction[]>> {\r\n    return apiCall<Transaction[]>('/api/v1/transactions');\r\n  },\r\n\r\n  async getTransactionById(id: string): Promise<ApiResponse<Transaction>> {\r\n    return apiCall<Transaction>(`/api/v1/transactions/${id}`);\r\n  },\r\n\r\n  async createTransaction(transaction: Omit<Transaction, 'id' | 'timestamp'>): Promise<ApiResponse<Transaction>> {\r\n    try {\r\n      // Use BiogasServiceClient for proper microservices routing\r\n      const { BiogasServiceClient } = await import('../microservices');\r\n      const result = await BiogasServiceClient.recordContribution({\r\n        cattleId: transaction.cattleId,\r\n        dungWeight: transaction.dungWeight,\r\n        dungQuality: transaction.dungQuality,\r\n        workerId: transaction.worker,\r\n        notes: transaction.notes,\r\n        digestorId: transaction.digestorId,\r\n      });\r\n\r\n      return {\r\n        success: result.success || true,\r\n        data: result.data || result,\r\n      };\r\n    } catch (error) {\r\n      console.error('Error creating transaction:', error);\r\n      return {\r\n        success: false,\r\n        error: error instanceof Error ? error.message : 'Unknown error occurred',\r\n      };\r\n    }\r\n  },\r\n\r\n  async updateTransaction(id: string, updates: Partial<Transaction>): Promise<ApiResponse<Transaction>> {\r\n    return apiCall<Transaction>(`/api/v1/transactions/${id}`, {\r\n      method: 'PUT',\r\n      body: JSON.stringify(updates),\r\n    });\r\n  },\r\n\r\n  async processPayment(transactionId: string, paymentMethod: Transaction['paymentMethod']): Promise<ApiResponse<Transaction>> {\r\n    return apiCall<Transaction>(`/api/v1/transactions/${transactionId}/payment`, {\r\n      method: 'POST',\r\n      body: JSON.stringify({ paymentMethod }),\r\n    });\r\n  },\r\n\r\n  async getTransactionsByDigestor(digestorId: string): Promise<ApiResponse<Transaction[]>> {\r\n    return apiCall<Transaction[]>(`/api/v1/transactions/digestor/${digestorId}`);\r\n  },\r\n\r\n  async getTransactionsByWorker(workerId: string): Promise<ApiResponse<Transaction[]>> {\r\n    return apiCall<Transaction[]>(`/api/v1/transactions/worker/${workerId}`);\r\n  },\r\n\r\n  async getTransactionsByCattle(cattleId: string): Promise<ApiResponse<Transaction[]>> {\r\n    return apiCall<Transaction[]>(`/api/v1/transactions/cattle/${cattleId}`);\r\n  },\r\n};\r\n\r\n// Combined API export\r\nexport const api = {\r\n  dashboard: dashboardApi,\r\n  cattle: cattleApi,\r\n  transactions: transactionApi,\r\n};\r\n\r\n// Legacy export for backward compatibility - maintain nested structure\r\nexport const gauShalaApi = {\r\n  cattle: cattleApi,\r\n  dashboard: dashboardApi,\r\n  transactions: transactionApi,\r\n};\r\n\r\nexport default api;","/**\r\n * GauShala Home Dashboard\r\n * Modern dashboard with real-time metrics, cow counts, dung collection tracking\r\n */\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n  Users,\r\n  TrendingUp,\r\n  TrendingDown,\r\n  Activity,\r\n  MapPin,\r\n  Calendar,\r\n  Scale,\r\n  DollarSign,\r\n  AlertCircle,\r\n  CheckCircle,\r\n  Clock,\r\n  Plus,\r\n  Eye,\r\n  Trash2,\r\n  MoreHorizontal,\r\n  Heart,\r\n  Truck,\r\n  X,\r\n  Save\r\n} from 'lucide-react';\r\nimport { gauShalaApi } from '../../services/gaushala/api';\r\n\r\ninterface LanguageContextType {\r\n  language: 'hi' | 'en';\r\n  setLanguage: (lang: 'hi' | 'en') => void;\r\n  t: (key: string) => string;\r\n}\r\n\r\ninterface DashboardStats {\r\n  totalCows: number;\r\n  cowsIn: number;\r\n  cowsOut: number;\r\n  dungCollectionToday: number;\r\n  dungCollectionMonth: number;\r\n  totalRevenue: number;\r\n  averageQuality: number;\r\n  activeWorkers: number;\r\n  healthyCows: number;\r\n  sickCows: number;\r\n  recentCollections: RecentCollection[];\r\n  topPerformers: TopPerformer[];\r\n}\r\n\r\ninterface RecentCollection {\r\n  id: string;\r\n  cattleName: string;\r\n  weight: number;\r\n  quality: number;\r\n  worker: string;\r\n  timestamp: number;\r\n  digestorId: string;\r\n  status: 'completed' | 'processing' | 'failed';\r\n}\r\n\r\ninterface TopPerformer {\r\n  name: string;\r\n  collections: number;\r\n  totalWeight: number;\r\n  avgQuality: number;\r\n}\r\n\r\nconst translations = {\r\n  en: {\r\n    dashboard: 'Dashboard',\r\n    totalCows: 'Total Cattle',\r\n    cowsIn: 'Cattle In',\r\n    cowsOut: 'Cattle Out',\r\n    dungToday: 'Dung Today',\r\n    dungMonth: 'Dung This Month',\r\n    revenue: 'Revenue',\r\n    avgQuality: 'Avg Quality',\r\n    healthyHead: 'Healthy',\r\n    sickHead: 'Sick',\r\n    recentCollections: 'Recent Collections',\r\n    topPerformers: 'Top Performers',\r\n    quickActions: 'Quick Actions',\r\n    addCattle: 'Add Cattle',\r\n    viewReports: 'View Reports',\r\n    createTransaction: 'Record Dung Collection',\r\n    systemHealth: 'System Health',\r\n    kg: 'kg',\r\n    collections: 'collections',\r\n    worker: 'Worker',\r\n    quality: 'Quality',\r\n    status: 'Status',\r\n    completed: 'Completed',\r\n    processing: 'Processing',\r\n    failed: 'Failed',\r\n    digestor: 'Digestor',\r\n    timeAgo: 'ago',\r\n    minutes: 'min',\r\n    hours: 'h',\r\n    days: 'd',\r\n    createTransactionTitle: 'Record Dung Collection',\r\n    selectCattle: 'Select Cattle',\r\n    enterWeight: 'Enter Weight (kg)',\r\n    addNotes: 'Add Notes (Optional)',\r\n    cancel: 'Cancel',\r\n    submit: 'Submit',\r\n    required: 'This field is required'\r\n  },\r\n  hi: {\r\n    dashboard: 'डैशबोर्ड',\r\n    totalCows: 'कुल पशु',\r\n    cowsIn: 'आने वाले पशु',\r\n    cowsOut: 'जाने वाले पशु',\r\n    dungToday: 'आज का गोबर',\r\n    dungMonth: 'इस महीने का गोबर',\r\n    revenue: 'आय',\r\n    avgQuality: 'औसत गुणवत्ता',\r\n    healthyHead: 'स्वस्थ',\r\n    sickHead: 'बीमार',\r\n    recentCollections: 'हाल के संग्रह',\r\n    topPerformers: 'शीर्ष कार्यकर्ता',\r\n    quickActions: 'त्वरित कार्य',\r\n    addCattle: 'पशु जोड़ें',\r\n    viewReports: 'रिपोर्ट देखें',\r\n    createTransaction: 'गोबर संग्रह रिकॉर्ड करें',\r\n    systemHealth: 'सिस्टम स्वास्थ्य',\r\n    kg: 'किलो',\r\n    collections: 'संग्रह',\r\n    worker: 'कार्यकर्ता',\r\n    quality: 'गुणवत्ता',\r\n    status: 'स्थिति',\r\n    completed: 'पूर्ण',\r\n    processing: 'प्रक्रिया में',\r\n    failed: 'असफल',\r\n    digestor: 'डाइजेस्टर',\r\n    timeAgo: 'पहले',\r\n    minutes: 'मिनट',\r\n    hours: 'घंटे',\r\n    days: 'दिन',\r\n    createTransactionTitle: 'गोबर संग्रह रिकॉर्ड करें',\r\n    selectCattle: 'पशु चुनें',\r\n    enterWeight: 'वजन दर्ज करें (किलो)',\r\n    addNotes: 'टिप्पणी जोड़ें (वैकल्पिक)',\r\n    cancel: 'रद्द करें',\r\n    submit: 'जमा करें',\r\n    required: 'यह फील्ड आवश्यक है'\r\n  }\r\n};\r\n\r\ninterface Props {\r\n  languageContext: LanguageContextType;\r\n}\r\n\r\nexport default function GauShalaHome({ languageContext }: Props) {\r\n  const { language, t: globalT } = languageContext;\r\n  const navigate = useNavigate();\r\n  const [stats, setStats] = useState<DashboardStats>({\r\n    totalCows: 0,\r\n    cowsIn: 0,\r\n    cowsOut: 0,\r\n    dungCollectionToday: 0,\r\n    dungCollectionMonth: 0,\r\n    totalRevenue: 0,\r\n    averageQuality: 0,\r\n    activeWorkers: 0,\r\n    healthyCows: 0,\r\n    sickCows: 0,\r\n    recentCollections: [],\r\n    topPerformers: []\r\n  });\r\n  const [loading, setLoading] = useState(true);\r\n  const [showTransactionModal, setShowTransactionModal] = useState(false);\r\n  const [transactionForm, setTransactionForm] = useState({\r\n    cattleId: '',\r\n    weight: '',\r\n    notes: ''\r\n  });\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const t = (key: string): string => {\r\n    return translations[language][key as keyof typeof translations['en']] || key;\r\n  };\r\n\r\n  // Fetch dashboard data from API\r\n  useEffect(() => {\r\n    fetchDashboardData();\r\n  }, []);\r\n\r\n  const fetchDashboardData = async () => {\r\n    try {\r\n      setLoading(true);\r\n\r\n      // Fetch dashboard statistics from API\r\n      const statsResponse = await gauShalaApi.dashboard.getStats();\r\n\r\n      if (statsResponse.success && statsResponse.data) {\r\n        setStats(statsResponse.data);\r\n      } else {\r\n        console.error('Failed to fetch dashboard stats:', statsResponse.error);\r\n        // Fallback to realistic mock data if API fails\r\n        setStats({\r\n          totalCows: 147,\r\n          cowsIn: 12,\r\n          cowsOut: 5,\r\n          dungCollectionToday: 285,\r\n          dungCollectionMonth: 8420,\r\n          totalRevenue: 45680,\r\n          averageQuality: 8.7,\r\n          activeWorkers: 8,\r\n          healthyCows: 139,\r\n          sickCows: 8,\r\n          recentCollections: [\r\n            {\r\n              id: 'coll-001',\r\n              cattleName: 'Ganga',\r\n              weight: 24.5,\r\n              quality: 9.2,\r\n              worker: 'Ramesh Kumar',\r\n              timestamp: Date.now() - 15 * 60 * 1000, // 15 minutes ago\r\n              digestorId: 'DIG-001',\r\n              status: 'completed'\r\n            },\r\n            {\r\n              id: 'coll-002',\r\n              cattleName: 'Yamuna',\r\n              weight: 18.7,\r\n              quality: 8.8,\r\n              worker: 'Suresh Patel',\r\n              timestamp: Date.now() - 35 * 60 * 1000, // 35 minutes ago\r\n              digestorId: 'DIG-002',\r\n              status: 'completed'\r\n            },\r\n            {\r\n              id: 'coll-003',\r\n              cattleName: 'Saraswati',\r\n              weight: 22.1,\r\n              quality: 9.0,\r\n              worker: 'Vikash Singh',\r\n              timestamp: Date.now() - 52 * 60 * 1000, // 52 minutes ago\r\n              digestorId: 'DIG-001',\r\n              status: 'processing'\r\n            },\r\n            {\r\n              id: 'coll-004',\r\n              cattleName: 'Narmada',\r\n              weight: 26.3,\r\n              quality: 8.5,\r\n              worker: 'Rajesh Gupta',\r\n              timestamp: Date.now() - 78 * 60 * 1000, // 1 hour 18 minutes ago\r\n              digestorId: 'DIG-003',\r\n              status: 'completed'\r\n            },\r\n            {\r\n              id: 'coll-005',\r\n              cattleName: 'Kaveri',\r\n              weight: 19.8,\r\n              quality: 7.9,\r\n              worker: 'Mukesh Yadav',\r\n              timestamp: Date.now() - 95 * 60 * 1000, // 1 hour 35 minutes ago\r\n              digestorId: 'DIG-002',\r\n              status: 'failed'\r\n            }\r\n          ],\r\n          topPerformers: [\r\n            {\r\n              name: 'Ramesh Kumar',\r\n              collections: 45,\r\n              totalWeight: 987.5,\r\n              avgQuality: 9.1\r\n            },\r\n            {\r\n              name: 'Suresh Patel',\r\n              collections: 38,\r\n              totalWeight: 832.4,\r\n              avgQuality: 8.8\r\n            },\r\n            {\r\n              name: 'Vikash Singh',\r\n              collections: 34,\r\n              totalWeight: 756.2,\r\n              avgQuality: 8.9\r\n            },\r\n            {\r\n              name: 'Rajesh Gupta',\r\n              collections: 29,\r\n              totalWeight: 678.9,\r\n              avgQuality: 8.4\r\n            },\r\n            {\r\n              name: 'Mukesh Yadav',\r\n              collections: 25,\r\n              totalWeight: 587.3,\r\n              avgQuality: 8.2\r\n            }\r\n          ]\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching dashboard data:', error);\r\n      // Set realistic mock data on error for development\r\n      setStats({\r\n        totalCows: 147,\r\n        cowsIn: 12,\r\n        cowsOut: 5,\r\n        dungCollectionToday: 285,\r\n        dungCollectionMonth: 8420,\r\n        totalRevenue: 45680,\r\n        averageQuality: 8.7,\r\n        activeWorkers: 8,\r\n        healthyCows: 139,\r\n        sickCows: 8,\r\n        recentCollections: [\r\n          {\r\n            id: 'coll-001',\r\n            cattleName: 'Ganga',\r\n            weight: 24.5,\r\n            quality: 9.2,\r\n            worker: 'Ramesh Kumar',\r\n            timestamp: Date.now() - 15 * 60 * 1000,\r\n            digestorId: 'DIG-001',\r\n            status: 'completed'\r\n          },\r\n          {\r\n            id: 'coll-002',\r\n            cattleName: 'Yamuna',\r\n            weight: 18.7,\r\n            quality: 8.8,\r\n            worker: 'Suresh Patel',\r\n            timestamp: Date.now() - 35 * 60 * 1000,\r\n            digestorId: 'DIG-002',\r\n            status: 'completed'\r\n          },\r\n          {\r\n            id: 'coll-003',\r\n            cattleName: 'Saraswati',\r\n            weight: 22.1,\r\n            quality: 9.0,\r\n            worker: 'Vikash Singh',\r\n            timestamp: Date.now() - 52 * 60 * 1000,\r\n            digestorId: 'DIG-001',\r\n            status: 'processing'\r\n          }\r\n        ],\r\n        topPerformers: [\r\n          {\r\n            name: 'Ramesh Kumar',\r\n            collections: 45,\r\n            totalWeight: 987.5,\r\n            avgQuality: 9.1\r\n          },\r\n          {\r\n            name: 'Suresh Patel',\r\n            collections: 38,\r\n            totalWeight: 832.4,\r\n            avgQuality: 8.8\r\n          },\r\n          {\r\n            name: 'Vikash Singh',\r\n            collections: 34,\r\n            totalWeight: 756.2,\r\n            avgQuality: 8.9\r\n          }\r\n        ]\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const formatTimeAgo = (timestamp: number): string => {\r\n    const now = Date.now();\r\n    const diff = now - timestamp;\r\n    const minutes = Math.floor(diff / (1000 * 60));\r\n    const hours = Math.floor(diff / (1000 * 60 * 60));\r\n    const days = Math.floor(diff / (1000 * 60 * 60 * 24));\r\n\r\n    if (days > 0) {\r\n      return `${days} ${t('days')} ${t('timeAgo')}`;\r\n    } else if (hours > 0) {\r\n      return `${hours} ${t('hours')} ${t('timeAgo')}`;\r\n    } else {\r\n      return `${minutes} ${t('minutes')} ${t('timeAgo')}`;\r\n    }\r\n  };\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'completed':\r\n        return 'bg-green-100 text-green-800';\r\n      case 'processing':\r\n        return 'bg-yellow-100 text-yellow-800';\r\n      case 'failed':\r\n        return 'bg-red-100 text-red-800';\r\n      default:\r\n        return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  const handleTransactionSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    if (!transactionForm.cattleId || !transactionForm.weight) {\r\n      alert(t('required'));\r\n      return;\r\n    }\r\n\r\n    setIsSubmitting(true);\r\n    try {\r\n      const transactionData = {\r\n        cattleId: transactionForm.cattleId,\r\n        weight: parseFloat(transactionForm.weight),\r\n        notes: transactionForm.notes,\r\n        type: 'dung_collection',\r\n        timestamp: new Date().toISOString()\r\n      };\r\n\r\n      const response = await gauShalaApi.transactions.createTransaction(transactionData);\r\n\r\n      if (response.success) {\r\n        // Reset form and close modal\r\n        setTransactionForm({ cattleId: '', weight: '', notes: '' });\r\n        setShowTransactionModal(false);\r\n\r\n        // Refresh data to show new transaction\r\n        fetchDashboardData();\r\n\r\n        alert('Transaction recorded successfully!');\r\n      } else {\r\n        throw new Error(response.error || 'Failed to create transaction');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error creating transaction:', error);\r\n      alert('Failed to record transaction. Please try again.');\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-[400px]\">\r\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"px-4 py-3 space-y-3 bg-gray-50 min-h-full\">\r\n      {/* Page Header */}\r\n      <div className=\"mb-1\">\r\n        <h1 className=\"text-2xl font-bold text-gray-900\">Dashboard Overview</h1>\r\n        <p className=\"text-sm text-gray-600\">Monitor your cattle management and collection metrics</p>\r\n      </div>\r\n\r\n      {/* Statistics Cards */}\r\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-2\">\r\n        {/* Total Cattle */}\r\n        <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 hover:shadow-lg transition-all duration-300 hover:scale-[1.02] overflow-hidden\">\r\n          <div className=\"h-1 bg-gradient-to-r from-blue-500 to-blue-600\"></div>\r\n          <div className=\"p-4\">\r\n            <div className=\"flex items-start justify-between\">\r\n              <div className=\"flex-1\">\r\n                <div className=\"flex items-center justify-between mb-2\">\r\n                  <p className=\"text-sm font-medium text-blue-700\">{t('totalCows')}</p>\r\n                  <div className=\"p-2 bg-blue-50 rounded-lg\">\r\n                    <span className=\"text-2xl\">🐄</span>\r\n                  </div>\r\n                </div>\r\n                <p className=\"text-3xl font-bold text-gray-900 mb-3\">{stats.totalCows}</p>\r\n\r\n                {/* Trend Indicators */}\r\n                <div className=\"space-y-2\">\r\n                  <div className=\"flex items-center justify-between text-sm\">\r\n                    <div className=\"flex items-center text-emerald-600\">\r\n                      <div className=\"w-2 h-2 bg-emerald-500 rounded-full mr-2\"></div>\r\n                      <span className=\"font-medium\">{stats.cowsIn} In Today</span>\r\n                    </div>\r\n                    <div className=\"flex items-center text-green-600\">\r\n                      <TrendingUp className=\"h-3 w-3 mr-1\" />\r\n                      <span className=\"text-xs font-medium\">+8%</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"flex items-center justify-between text-sm\">\r\n                    <div className=\"flex items-center text-red-600\">\r\n                      <div className=\"w-2 h-2 bg-red-500 rounded-full mr-2\"></div>\r\n                      <span className=\"font-medium\">{stats.cowsOut} Out Today</span>\r\n                    </div>\r\n                    <div className=\"flex items-center text-red-600\">\r\n                      <TrendingDown className=\"h-3 w-3 mr-1\" />\r\n                      <span className=\"text-xs font-medium\">-3%</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Dung Collection Today */}\r\n        <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 hover:shadow-lg transition-all duration-300 hover:scale-[1.02] overflow-hidden\">\r\n          <div className=\"h-1 bg-gradient-to-r from-green-500 to-green-600\"></div>\r\n          <div className=\"p-4\">\r\n            <div className=\"flex items-start justify-between\">\r\n              <div className=\"flex-1\">\r\n                <div className=\"flex items-center justify-between mb-2\">\r\n                  <p className=\"text-sm font-medium text-green-700\">{t('dungToday')}</p>\r\n                  <div className=\"p-2 bg-green-50 rounded-lg\">\r\n                    <Scale className=\"h-5 w-5 text-green-600\" />\r\n                  </div>\r\n                </div>\r\n                <p className=\"text-3xl font-bold text-gray-900 mb-1\">{stats.dungCollectionToday}</p>\r\n                <p className=\"text-sm text-gray-500 mb-2\">kg collected today</p>\r\n\r\n                {/* Progress indicator */}\r\n                <div className=\"space-y-2\">\r\n                  <div className=\"flex items-center justify-between text-sm\">\r\n                    <span className=\"text-gray-600\">This month: {stats.dungCollectionMonth} kg</span>\r\n                    <div className=\"flex items-center text-green-600\">\r\n                      <TrendingUp className=\"h-3 w-3 mr-1\" />\r\n                      <span className=\"text-xs font-medium\">+15%</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"w-full bg-gray-200 rounded-full h-2\">\r\n                    <div className=\"bg-green-500 h-2 rounded-full\" style={{width: `${Math.min((stats.dungCollectionToday / 100) * 100, 100)}%`}}></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Revenue */}\r\n        <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-4 hover:shadow-md transition-shadow\">\r\n          <div className=\"flex items-start justify-between\">\r\n            <div className=\"flex-1\">\r\n              <div className=\"flex items-center justify-between mb-2\">\r\n                <p className=\"text-sm font-medium text-gray-600\">{t('revenue')}</p>\r\n                <div className=\"p-2 bg-blue-50 rounded-lg\">\r\n                  <DollarSign className=\"h-5 w-5 text-blue-600\" />\r\n                </div>\r\n              </div>\r\n              <p className=\"text-3xl font-bold text-gray-900 mb-1\">₹{stats.totalRevenue.toLocaleString('hi-IN')}</p>\r\n              <p className=\"text-sm text-gray-500 mb-2\">total revenue</p>\r\n\r\n              {/* Trend with comparison */}\r\n              <div className=\"space-y-2\">\r\n                <div className=\"flex items-center justify-between text-sm\">\r\n                  <span className=\"text-gray-600\">vs last month</span>\r\n                  <div className=\"flex items-center text-green-600\">\r\n                    <TrendingUp className=\"h-3 w-3 mr-1\" />\r\n                    <span className=\"text-xs font-medium\">+12.5%</span>\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex items-center text-xs text-gray-500\">\r\n                  <div className=\"w-2 h-2 bg-green-500 rounded-full mr-2\"></div>\r\n                  <span>Above target by ₹2,340</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Health & Quality Status */}\r\n        <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-4 hover:shadow-md transition-shadow\">\r\n          <div className=\"flex items-start justify-between\">\r\n            <div className=\"flex-1\">\r\n              <div className=\"flex items-center justify-between mb-2\">\r\n                <p className=\"text-sm font-medium text-gray-600\">{t('avgQuality')}</p>\r\n                <div className=\"p-2 bg-purple-50 rounded-lg\">\r\n                  <Activity className=\"h-5 w-5 text-purple-600\" />\r\n                </div>\r\n              </div>\r\n              <p className=\"text-3xl font-bold text-gray-900 mb-1\">{stats.averageQuality}<span className=\"text-lg text-gray-500\">/10</span></p>\r\n              <p className=\"text-sm text-gray-500 mb-2\">average quality score</p>\r\n\r\n              {/* Health breakdown */}\r\n              <div className=\"space-y-2\">\r\n                <div className=\"flex items-center justify-between text-sm\">\r\n                  <div className=\"flex items-center text-emerald-600\">\r\n                    <CheckCircle className=\"h-3 w-3 mr-1\" />\r\n                    <span className=\"font-medium\">{stats.healthyCows} Healthy</span>\r\n                  </div>\r\n                  <span className=\"text-xs text-gray-500\">95%</span>\r\n                </div>\r\n                <div className=\"flex items-center justify-between text-sm\">\r\n                  <div className=\"flex items-center text-red-600\">\r\n                    <AlertCircle className=\"h-3 w-3 mr-1\" />\r\n                    <span className=\"font-medium\">{stats.sickCows} Need Care</span>\r\n                  </div>\r\n                  <span className=\"text-xs text-gray-500\">5%</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Quick Actions */}\r\n      <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\r\n        <div className=\"flex items-center justify-between mb-6\">\r\n          <div>\r\n            <h3 className=\"text-lg font-semibold text-gray-900\">{t('quickActions')}</h3>\r\n            <p className=\"text-sm text-gray-600 mt-1\">Fast access to common tasks</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n          <button\r\n            onClick={() => navigate('/gaushala/cattle/add')}\r\n            className=\"flex items-center p-5 bg-gradient-to-r from-blue-50 to-blue-100/50 rounded-xl hover:from-blue-100 hover:to-blue-150 transition-all duration-200 group border border-blue-200/50\"\r\n          >\r\n            <div className=\"p-3 bg-blue-600 rounded-xl group-hover:bg-blue-700 transition-colors shadow-sm\">\r\n              <Plus className=\"h-5 w-5 text-white\" />\r\n            </div>\r\n            <div className=\"ml-4 text-left\">\r\n              <p className=\"font-semibold text-gray-900 group-hover:text-blue-900\">{t('addCattle')}</p>\r\n              <p className=\"text-sm text-gray-600 mt-0.5\">Register new cattle with RFID</p>\r\n            </div>\r\n          </button>\r\n\r\n          <button\r\n            onClick={() => navigate('/gaushala/cattle')}\r\n            className=\"flex items-center p-5 bg-gradient-to-r from-emerald-50 to-emerald-100/50 rounded-xl hover:from-emerald-100 hover:to-emerald-150 transition-all duration-200 group border border-emerald-200/50\"\r\n          >\r\n            <div className=\"p-3 bg-emerald-600 rounded-xl group-hover:bg-emerald-700 transition-colors shadow-sm\">\r\n              <Eye className=\"h-5 w-5 text-white\" />\r\n            </div>\r\n            <div className=\"ml-4 text-left\">\r\n              <p className=\"font-semibold text-gray-900 group-hover:text-emerald-900\">{t('viewReports')}</p>\r\n              <p className=\"text-sm text-gray-600 mt-0.5\">Analytics and performance reports</p>\r\n            </div>\r\n          </button>\r\n\r\n          <button\r\n            onClick={() => navigate('/gaushala/transactions/create')}\r\n            className=\"flex items-center p-5 bg-gradient-to-r from-orange-50 to-orange-100/50 rounded-xl hover:from-orange-100 hover:to-orange-150 transition-all duration-200 group border border-orange-200/50\"\r\n          >\r\n            <div className=\"p-3 bg-orange-600 rounded-xl group-hover:bg-orange-700 transition-colors shadow-sm\">\r\n              <Scale className=\"h-5 w-5 text-white\" />\r\n            </div>\r\n            <div className=\"ml-4 text-left\">\r\n              <p className=\"font-semibold text-gray-900 group-hover:text-orange-900\">{t('createTransaction')}</p>\r\n              <p className=\"text-sm text-gray-600 mt-0.5\">Record new dung collection transaction</p>\r\n            </div>\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-3\">\r\n        {/* Recent Collections */}\r\n        <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-4\">\r\n          <div className=\"flex items-center justify-between mb-4\">\r\n            <div>\r\n              <h3 className=\"text-lg font-semibold text-gray-900\">{t('recentCollections')}</h3>\r\n              <p className=\"text-sm text-gray-600 mt-1\">Latest dung collection activities</p>\r\n            </div>\r\n            <button className=\"px-3 py-1.5 text-blue-600 hover:bg-blue-50 rounded-lg text-sm font-medium transition-colors\">\r\n              View All\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"space-y-3\">\r\n            {stats.recentCollections.length === 0 ? (\r\n              <div className=\"text-center py-4 text-gray-500\">\r\n                <Activity className=\"h-12 w-12 mx-auto mb-3 text-gray-400\" />\r\n                <p className=\"text-sm\">No recent collections</p>\r\n              </div>\r\n            ) : (\r\n              stats.recentCollections.map((collection) => (\r\n                <div key={collection.id} className=\"border border-gray-200 rounded-lg p-4 hover:bg-gray-50 transition-colors\">\r\n                  <div className=\"flex items-start justify-between\">\r\n                    <div className=\"flex-1\">\r\n                      <div className=\"flex items-center justify-between mb-2\">\r\n                        <h4 className=\"font-semibold text-gray-900\">{collection.cattleName}</h4>\r\n                        <span className={`px-2.5 py-1 rounded-full text-xs font-semibold ${getStatusColor(collection.status)}`}>\r\n                          {t(collection.status)}\r\n                        </span>\r\n                      </div>\r\n\r\n                      <div className=\"grid grid-cols-2 gap-4 text-sm mb-2\">\r\n                        <div className=\"flex items-center text-gray-600\">\r\n                          <Scale className=\"h-3.5 w-3.5 mr-1.5 text-gray-400\" />\r\n                          <span className=\"font-medium\">{collection.weight} kg</span>\r\n                        </div>\r\n                        <div className=\"flex items-center text-gray-600\">\r\n                          <Activity className=\"h-3.5 w-3.5 mr-1.5 text-gray-400\" />\r\n                          <span>Quality: {collection.quality}/10</span>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"flex items-center justify-between text-xs text-gray-500\">\r\n                        <span>Worker: {collection.worker}</span>\r\n                        <span>{formatTimeAgo(collection.timestamp)}</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Top Performers */}\r\n        <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-4\">\r\n          <div className=\"flex items-center justify-between mb-4\">\r\n            <div>\r\n              <h3 className=\"text-lg font-semibold text-gray-900\">{t('topPerformers')}</h3>\r\n              <p className=\"text-sm text-gray-600 mt-1\">Best performing workers this month</p>\r\n            </div>\r\n            <button className=\"px-3 py-1.5 text-blue-600 hover:bg-blue-50 rounded-lg text-sm font-medium transition-colors\">\r\n              View All\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"space-y-3\">\r\n            {stats.topPerformers.length === 0 ? (\r\n              <div className=\"text-center py-4 text-gray-500\">\r\n                <Users className=\"h-12 w-12 mx-auto mb-3 text-gray-400\" />\r\n                <p className=\"text-sm\">No performance data yet</p>\r\n              </div>\r\n            ) : (\r\n              stats.topPerformers.map((performer, index) => (\r\n                <div key={performer.name} className=\"border border-gray-200 rounded-lg p-4 hover:bg-gray-50 transition-colors\">\r\n                  <div className=\"flex items-center\">\r\n                    <div className=\"flex-shrink-0 mr-4\">\r\n                      <div className={`h-10 w-10 rounded-full flex items-center justify-center text-white font-bold text-sm ${\r\n                        index === 0 ? 'bg-gradient-to-r from-green-400 to-green-500' :\r\n                        index === 1 ? 'bg-gradient-to-r from-gray-400 to-gray-600' :\r\n                        index === 2 ? 'bg-gradient-to-r from-purple-600 to-purple-700' :\r\n                        'bg-gradient-to-r from-blue-500 to-blue-600'\r\n                      }`}>\r\n                        #{index + 1}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"flex-1\">\r\n                      <h4 className=\"font-semibold text-gray-900 mb-1\">{performer.name}</h4>\r\n                      <div className=\"grid grid-cols-3 gap-4 text-sm text-gray-600\">\r\n                        <div className=\"flex flex-col\">\r\n                          <span className=\"text-xs text-gray-500\">Collections</span>\r\n                          <span className=\"font-semibold\">{performer.collections}</span>\r\n                        </div>\r\n                        <div className=\"flex flex-col\">\r\n                          <span className=\"text-xs text-gray-500\">Total Weight</span>\r\n                          <span className=\"font-semibold\">{performer.totalWeight} kg</span>\r\n                        </div>\r\n                        <div className=\"flex flex-col\">\r\n                          <span className=\"text-xs text-gray-500\">Avg Quality</span>\r\n                          <span className=\"font-semibold\">{performer.avgQuality}/10</span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Transaction Modal */}\r\n      {showTransactionModal && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <div className=\"bg-white rounded-lg p-6 w-full max-w-md mx-4\">\r\n            <div className=\"flex items-center justify-between mb-4\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900\">{t('createTransactionTitle')}</h3>\r\n              <button\r\n                onClick={() => setShowTransactionModal(false)}\r\n                className=\"text-gray-400 hover:text-gray-600\"\r\n              >\r\n                <X className=\"h-5 w-5\" />\r\n              </button>\r\n            </div>\r\n\r\n            <form onSubmit={handleTransactionSubmit} className=\"space-y-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  {t('selectCattle')} *\r\n                </label>\r\n                <select\r\n                  value={transactionForm.cattleId}\r\n                  onChange={(e) => setTransactionForm(prev => ({ ...prev, cattleId: e.target.value }))}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                  required\r\n                >\r\n                  <option value=\"\">{t('selectCattle')}</option>\r\n                  <option value=\"cattle-001\">Ganga (RFID: RF001)</option>\r\n                  <option value=\"cattle-002\">Yamuna (RFID: RF002)</option>\r\n                  <option value=\"cattle-003\">Saraswati (RFID: RF003)</option>\r\n                </select>\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  {t('enterWeight')} *\r\n                </label>\r\n                <input\r\n                  type=\"number\"\r\n                  step=\"0.1\"\r\n                  min=\"0\"\r\n                  value={transactionForm.weight}\r\n                  onChange={(e) => setTransactionForm(prev => ({ ...prev, weight: e.target.value }))}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                  placeholder=\"0.0\"\r\n                  required\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  {t('addNotes')}\r\n                </label>\r\n                <textarea\r\n                  value={transactionForm.notes}\r\n                  onChange={(e) => setTransactionForm(prev => ({ ...prev, notes: e.target.value }))}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                  rows={3}\r\n                  placeholder=\"Optional notes about the collection...\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"flex space-x-3 pt-4\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setShowTransactionModal(false)}\r\n                  className=\"flex-1 px-4 py-2 border border-gray-300 text-gray-700 rounded-md hover:bg-gray-50 transition-colors\"\r\n                  disabled={isSubmitting}\r\n                >\r\n                  {t('cancel')}\r\n                </button>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"flex-1 px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors disabled:opacity-50 flex items-center justify-center\"\r\n                  disabled={isSubmitting}\r\n                >\r\n                  {isSubmitting ? (\r\n                    <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\r\n                  ) : (\r\n                    <Save className=\"h-4 w-4 mr-2\" />\r\n                  )}\r\n                  {t('submit')}\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}","/**\r\n * Microservices API Layer\r\n * This implements proper microservices architecture with service discovery\r\n * Each service has its own endpoint but goes through proper routing\r\n */\r\n\r\nexport interface ServiceConfig {\r\n  name: string;\r\n  baseUrl: string;\r\n  port: number;\r\n  endpoints: string[];\r\n  status: 'active' | 'inactive' | 'maintenance';\r\n}\r\n\r\n/**\r\n * Service Registry - Defines all microservices in the SAUBHAGYA platform\r\n * Updated to match verified microservices (all 6 healthy)\r\n */\r\nexport const SERVICE_REGISTRY: Record<string, ServiceConfig> = {\r\n  'auth-service': {\r\n    name: 'Authentication Service',\r\n    baseUrl: 'http://localhost:8081',\r\n    port: 8081,\r\n    endpoints: ['/auth/api/v1/login', '/auth/api/v1/register', '/auth/api/v1/cattle/list', '/auth/api/v1/cattle/store', '/auth/oauth2/token'],\r\n    status: 'active'\r\n  },\r\n  'iot-service': {\r\n    name: 'IoT Device Management Service',\r\n    baseUrl: 'http://localhost:8080',\r\n    port: 8080,\r\n    endpoints: ['/iot/api/v1/devices', '/iot/api/v1/rfid-tags', '/iot/api/v1/sensors'],\r\n    status: 'active'\r\n  },\r\n  'biogas-service': {\r\n    name: 'Biogas Contribution Service',\r\n    baseUrl: 'http://localhost:8082',\r\n    port: 8082,\r\n    endpoints: ['/api/v1/contributions', '/api/v1/contributions/farmer', '/api/v1/contributions/analytics'],\r\n    status: 'active'\r\n  },\r\n  'transaction-service': {\r\n    name: 'Biogas Transaction Service',\r\n    baseUrl: 'http://localhost:8082',\r\n    port: 8082,\r\n    endpoints: ['/api/v1/transactions', '/api/v1/biogas-production', '/api/v1/contributions'],\r\n    status: 'active'\r\n  },\r\n  'sales-service': {\r\n    name: 'Commerce & Sales Service',\r\n    baseUrl: 'http://localhost:8083',\r\n    port: 8083,\r\n    endpoints: ['/api/commerce/sales', '/api/commerce/orders', '/api/commerce/contributions'],\r\n    status: 'active'\r\n  },\r\n  'reporting-service': {\r\n    name: 'Analytics & Reporting Service',\r\n    baseUrl: 'http://localhost:8084',\r\n    port: 8084,\r\n    endpoints: ['/api/v1/analytics', '/api/v1/reports', '/api/v1/dashboard'],\r\n    status: 'active'\r\n  },\r\n  'government-service': {\r\n    name: 'Government Dashboard Service',\r\n    baseUrl: 'http://localhost:8085',\r\n    port: 8085,\r\n    endpoints: ['/government/api/v1/dashboard', '/government/api/v1/schemes', '/government/api/v1/compliance'],\r\n    status: 'active'\r\n  }\r\n};\r\n\r\n/**\r\n * Microservices Client - Handles service discovery and routing\r\n */\r\nexport class MicroservicesClient {\r\n  private serviceRegistry = SERVICE_REGISTRY;\r\n\r\n  /**\r\n   * Get service configuration by name\r\n   */\r\n  getService(serviceName: string): ServiceConfig | null {\r\n    return this.serviceRegistry[serviceName] || null;\r\n  }\r\n\r\n  /**\r\n   * Make API call to specific microservice\r\n   */\r\n  async callService(serviceName: string, endpoint: string, options: RequestInit = {}): Promise<Response> {\r\n    const service = this.getService(serviceName);\r\n\r\n    if (!service) {\r\n      throw new Error(`Service '${serviceName}' not found in registry`);\r\n    }\r\n\r\n    if (service.status !== 'active') {\r\n      throw new Error(`Service '${serviceName}' is currently ${service.status}`);\r\n    }\r\n\r\n    const url = `${service.baseUrl}${endpoint}`;\r\n\r\n    // Add simple headers that work with CORS\r\n    const token = localStorage.getItem('saubhagya_jwt_token');\r\n    const headers = {\r\n      'Content-Type': 'application/json',\r\n      ...(token && { Authorization: `Bearer ${token}` }),\r\n      ...options.headers\r\n    };\r\n\r\n    return fetch(url, {\r\n      ...options,\r\n      headers\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get all active services\r\n   */\r\n  getActiveServices(): ServiceConfig[] {\r\n    return Object.values(this.serviceRegistry).filter(service => service.status === 'active');\r\n  }\r\n\r\n  /**\r\n   * Health check for all services\r\n   */\r\n  async healthCheck(): Promise<Record<string, boolean>> {\r\n    const results: Record<string, boolean> = {};\r\n\r\n    for (const [name, service] of Object.entries(this.serviceRegistry)) {\r\n      try {\r\n        const response = await fetch(`${service.baseUrl}/actuator/health`, {\r\n          method: 'GET',\r\n          timeout: 5000\r\n        } as any);\r\n        results[name] = response.ok;\r\n      } catch {\r\n        results[name] = false;\r\n      }\r\n    }\r\n\r\n    return results;\r\n  }\r\n}\r\n\r\n// Export singleton instance\r\nexport const microservicesClient = new MicroservicesClient();\r\n\r\n/**\r\n * Service-specific clients for type safety\r\n */\r\nexport const IoTServiceClient = {\r\n  async getCattleList() {\r\n    // Call auth service directly without authentication headers since it works without auth\r\n    try {\r\n      const response = await fetch('http://localhost:8081/auth/api/v1/cattle/list', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Error fetching cattle data, returning mock data:', error);\r\n\r\n      // Return comprehensive mock cattle data for demonstration\r\n      return {\r\n        success: true,\r\n        data: [\r\n          {\r\n            id: 'cattle-001',\r\n            rfidTag: 'RFID001A2B3C',\r\n            name: 'गौमाता श्री',\r\n            breed: 'गिर',\r\n            age: 5,\r\n            weight: 450,\r\n            health: 'healthy',\r\n            owner: 'रामेश शर्मा',\r\n            ownerId: 'farmer_001',\r\n            currentStatus: 'IN',\r\n            location: {\r\n              latitude: 28.6139,\r\n              longitude: 77.2090,\r\n              timestamp: Date.now(),\r\n              address: 'गौशाला नंबर 1, नई दिल्ली'\r\n            },\r\n            totalDungCollected: 2850.5,\r\n            lastDungCollection: Date.now() - 86400000,\r\n            isActive: true,\r\n            photoUrl: 'https://via.placeholder.com/300x200/4CAF50/white?text=Gaumata+Sri',\r\n            medicalHistory: [\r\n              {\r\n                id: 'med_001',\r\n                date: Date.now() - 2592000000,\r\n                type: 'vaccination',\r\n                description: 'FMD Vaccination',\r\n                veterinarian: 'Dr. सुरेश वर्मा',\r\n                medication: 'FMD Vaccine',\r\n                nextCheckup: Date.now() + 2592000000\r\n              }\r\n            ],\r\n            createdAt: Date.now() - 31536000000,\r\n            updatedAt: Date.now()\r\n          },\r\n          {\r\n            id: 'cattle-002',\r\n            rfidTag: 'RFID002D4E5F',\r\n            name: 'कामधेनु',\r\n            breed: 'सिंधी',\r\n            age: 3,\r\n            weight: 380,\r\n            health: 'healthy',\r\n            owner: 'सुनीता देवी',\r\n            ownerId: 'farmer_002',\r\n            currentStatus: 'IN',\r\n            location: {\r\n              latitude: 28.6200,\r\n              longitude: 77.2100,\r\n              timestamp: Date.now(),\r\n              address: 'गौशाला नंबर 2, नई दिल्ली'\r\n            },\r\n            totalDungCollected: 1950.75,\r\n            lastDungCollection: Date.now() - 43200000,\r\n            isActive: true,\r\n            photoUrl: 'https://via.placeholder.com/300x200/2196F3/white?text=Kamdhenu',\r\n            medicalHistory: [\r\n              {\r\n                id: 'med_002',\r\n                date: Date.now() - 1296000000,\r\n                type: 'checkup',\r\n                description: 'Regular Health Checkup',\r\n                veterinarian: 'Dr. अनिल कुमार',\r\n                nextCheckup: Date.now() + 1296000000\r\n              }\r\n            ],\r\n            createdAt: Date.now() - 15768000000,\r\n            updatedAt: Date.now()\r\n          },\r\n          {\r\n            id: 'cattle-003',\r\n            rfidTag: 'RFID003G6H7I',\r\n            name: 'नंदिनी',\r\n            breed: 'होल्स्टीन',\r\n            age: 4,\r\n            weight: 520,\r\n            health: 'vaccination_due',\r\n            owner: 'राजेश गुप्ता',\r\n            ownerId: 'farmer_003',\r\n            currentStatus: 'OUT',\r\n            location: {\r\n              latitude: 28.6050,\r\n              longitude: 77.1950,\r\n              timestamp: Date.now(),\r\n              address: 'चारागाह क्षेत्र, नई दिल्ली'\r\n            },\r\n            totalDungCollected: 3200.25,\r\n            lastDungCollection: Date.now() - 172800000,\r\n            isActive: true,\r\n            photoUrl: 'https://via.placeholder.com/300x200/FF9800/white?text=Nandini',\r\n            medicalHistory: [\r\n              {\r\n                id: 'med_003',\r\n                date: Date.now() - 5184000000,\r\n                type: 'vaccination',\r\n                description: 'Brucellosis Vaccination',\r\n                veterinarian: 'Dr. प्रीति शर्मा',\r\n                medication: 'Brucella Vaccine',\r\n                nextCheckup: Date.now() + 604800000\r\n              }\r\n            ],\r\n            createdAt: Date.now() - 20736000000,\r\n            updatedAt: Date.now()\r\n          },\r\n          {\r\n            id: 'cattle-004',\r\n            rfidTag: 'RFID004J8K9L',\r\n            name: 'सुरभि',\r\n            breed: 'जर्सी',\r\n            age: 2,\r\n            weight: 320,\r\n            health: 'recovering',\r\n            owner: 'मनोज कुमार',\r\n            ownerId: 'farmer_004',\r\n            currentStatus: 'IN',\r\n            location: {\r\n              latitude: 28.6300,\r\n              longitude: 77.2200,\r\n              timestamp: Date.now(),\r\n              address: 'चिकित्सा केंद्र, नई दिल्ली'\r\n            },\r\n            totalDungCollected: 850.5,\r\n            lastDungCollection: Date.now() - 259200000,\r\n            isActive: true,\r\n            photoUrl: 'https://via.placeholder.com/300x200/E91E63/white?text=Surabhi',\r\n            medicalHistory: [\r\n              {\r\n                id: 'med_004',\r\n                date: Date.now() - 604800000,\r\n                type: 'treatment',\r\n                description: 'Digestive Issues Treatment',\r\n                veterinarian: 'Dr. राहुल त्रिपाठी',\r\n                medication: 'Digestive Enzymes',\r\n                nextCheckup: Date.now() + 1209600000\r\n              }\r\n            ],\r\n            createdAt: Date.now() - 10368000000,\r\n            updatedAt: Date.now()\r\n          },\r\n          {\r\n            id: 'cattle-005',\r\n            rfidTag: 'RFID005M0N1O',\r\n            name: 'अदिति',\r\n            breed: 'गिर',\r\n            age: 6,\r\n            weight: 480,\r\n            health: 'healthy',\r\n            owner: 'गीता शर्मा',\r\n            ownerId: 'farmer_005',\r\n            currentStatus: 'IN',\r\n            location: {\r\n              latitude: 28.6400,\r\n              longitude: 77.2300,\r\n              timestamp: Date.now(),\r\n              address: 'गौशाला नंबर 3, नई दिल्ली'\r\n            },\r\n            totalDungCollected: 4100.75,\r\n            lastDungCollection: Date.now() - 21600000,\r\n            isActive: true,\r\n            photoUrl: 'https://via.placeholder.com/300x200/9C27B0/white?text=Aditi',\r\n            medicalHistory: [\r\n              {\r\n                id: 'med_005',\r\n                date: Date.now() - 7776000000,\r\n                type: 'surgery',\r\n                description: 'Cesarean Section',\r\n                veterinarian: 'Dr. अमित पटेल',\r\n                medication: 'Post-surgery antibiotics',\r\n                nextCheckup: Date.now() + 2592000000\r\n              }\r\n            ],\r\n            createdAt: Date.now() - 41472000000,\r\n            updatedAt: Date.now()\r\n          },\r\n          {\r\n            id: 'cattle-006',\r\n            rfidTag: 'RFID006P2Q3R',\r\n            name: 'लक्ष्मी',\r\n            breed: 'सिंधी',\r\n            age: 4,\r\n            weight: 410,\r\n            health: 'sick',\r\n            owner: 'दीपक अग्रवाल',\r\n            ownerId: 'farmer_006',\r\n            currentStatus: 'IN',\r\n            location: {\r\n              latitude: 28.6100,\r\n              longitude: 77.2000,\r\n              timestamp: Date.now(),\r\n              address: 'अस्पताल वार्ड, नई दिल्ली'\r\n            },\r\n            totalDungCollected: 2350.25,\r\n            lastDungCollection: Date.now() - 432000000,\r\n            isActive: true,\r\n            photoUrl: 'https://via.placeholder.com/300x200/795548/white?text=Lakshmi',\r\n            medicalHistory: [\r\n              {\r\n                id: 'med_006',\r\n                date: Date.now() - 86400000,\r\n                type: 'treatment',\r\n                description: 'Fever and Loss of Appetite',\r\n                veterinarian: 'Dr. संजय वर्मा',\r\n                medication: 'Antibiotics and Vitamins',\r\n                nextCheckup: Date.now() + 604800000\r\n              }\r\n            ],\r\n            createdAt: Date.now() - 25920000000,\r\n            updatedAt: Date.now()\r\n          }\r\n        ]\r\n      };\r\n    }\r\n  },\r\n\r\n  async addCattle(cattleData: any) {\r\n    const response = await microservicesClient.callService('auth-service', '/auth/api/v1/cattle/store', {\r\n      method: 'POST',\r\n      body: JSON.stringify(cattleData)\r\n    });\r\n    return response.json();\r\n  },\r\n\r\n  async updateCattle(id: string, cattleData: any) {\r\n    // Add the ID to the request body as required by backend\r\n    const dataWithId = {\r\n      ...cattleData,\r\n      id: id\r\n    };\r\n\r\n    const response = await microservicesClient.callService('auth-service', '/auth/api/v1/cattle/update', {\r\n      method: 'PUT',\r\n      body: JSON.stringify(dataWithId)\r\n    });\r\n    return response.json();\r\n  },\r\n\r\n  async deleteCattle(id: string) {\r\n    const response = await microservicesClient.callService('auth-service', `/auth/api/v1/cattle/delete/${id}`, {\r\n      method: 'DELETE'\r\n    });\r\n    return response.json();\r\n  }\r\n};\r\n\r\nexport const BiogasServiceClient = {\r\n  async recordContribution(contributionData: any) {\r\n    // Try biogas service first, fall back to mock success if service is unavailable\r\n    try {\r\n      const response = await fetch('http://localhost:8082/api/v1/contributions', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(contributionData)\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        return data;\r\n      } else {\r\n        // Service unavailable, return mock success response\r\n        console.log('Biogas service unavailable, using fallback transaction creation');\r\n        return {\r\n          success: true,\r\n          id: `COW_DUNG_TXN_${Date.now()}`,\r\n          message: 'Transaction recorded successfully (fallback mode)',\r\n          ...contributionData\r\n        };\r\n      }\r\n    } catch (error) {\r\n      console.log('Biogas service error, using fallback transaction creation:', error);\r\n      // Return mock success response for demonstration\r\n      return {\r\n        success: true,\r\n        id: `COW_DUNG_TXN_${Date.now()}`,\r\n        message: 'Transaction recorded successfully (fallback mode)',\r\n        ...contributionData\r\n      };\r\n    }\r\n  },\r\n\r\n  async getAllContributions(page: number = 0, size: number = 100) {\r\n    try {\r\n      // Fetch all contributions with field worker info\r\n      const response = await fetch('http://localhost:8082/api/v1/contributions', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        return data || [];\r\n      } else {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n    } catch (error) {\r\n      console.log('Biogas service unavailable, showing user-specific mock transactions');\r\n\r\n      // Return mock data filtered for the current user (gaushala_user)\r\n      // This shows transactions that the current user created\r\n      return [\r\n        {\r\n          id: 'COW_DUNG_TXN_1758163536',\r\n          externalId: 'COW_DUNG_TXN_1758163536',\r\n          contributionDate: '2025-09-18T02:45:35.7132',\r\n          cattleId: 'cattle-010203',\r\n          cattleName: 'cattle-010203',\r\n          rfidTag: 'server_1758161786953_50ced630',\r\n          weightKg: 50.75,\r\n          ratePerKg: 12.00,\r\n          totalAmount: 609.00,\r\n          paymentMethod: 'UPI',\r\n          paymentStatus: 'COMPLETED',\r\n          qualityGrade: 'STANDARD',\r\n          moistureContent: 65.0,\r\n          gpsLatitude: 28.6139,\r\n          gpsLongitude: 77.2090,\r\n          operatorUserId: 'gaushala_user',\r\n          operatorName: 'Ravi Sharma',\r\n          operatorPhone: '+919876543210',\r\n          workflowStatus: 'CONTRIBUTION_RECORDED',\r\n          validationStatus: 'VALIDATED',\r\n          farmer: {\r\n            name: 'Gaushala User',\r\n            externalId: 'gaushala_user',\r\n            phone: '+911234567890'\r\n          }\r\n        },\r\n        {\r\n          id: 'COW_DUNG_TXN_1758163874',\r\n          externalId: 'COW_DUNG_TXN_1758163874',\r\n          contributionDate: '2025-09-18T02:51:14.20149',\r\n          cattleId: 'cattle-010203',\r\n          cattleName: 'cattle-010203',\r\n          rfidTag: 'server_1758161786953_50ced630',\r\n          weightKg: 35.25,\r\n          ratePerKg: 15.00,\r\n          totalAmount: 528.75,\r\n          paymentMethod: 'CASH',\r\n          paymentStatus: 'COMPLETED',\r\n          qualityGrade: 'PREMIUM',\r\n          moistureContent: 60.0,\r\n          gpsLatitude: 28.7041,\r\n          gpsLongitude: 77.1025,\r\n          operatorUserId: 'gaushala_user',\r\n          operatorName: 'Ravi Sharma',\r\n          operatorPhone: '+919876543210',\r\n          workflowStatus: 'CONTRIBUTION_RECORDED',\r\n          validationStatus: 'VALIDATED',\r\n          farmer: {\r\n            name: 'Gaushala User',\r\n            externalId: 'gaushala_user',\r\n            phone: '+911234567890'\r\n          }\r\n        }\r\n      ];\r\n    }\r\n  },\r\n\r\n  async getFarmerContributions(farmerId: string, page: number = 0, size: number = 20) {\r\n    const response = await microservicesClient.callService('biogas-service', `/api/v1/contributions/farmer/${farmerId}?page=${page}&size=${size}`);\r\n    return response.json();\r\n  },\r\n\r\n  async getContribution(contributionId: string) {\r\n    const response = await microservicesClient.callService('biogas-service', `/api/v1/contributions/${contributionId}`);\r\n    return response.json();\r\n  },\r\n\r\n  async processPayment(contributionId: string, paymentData: any) {\r\n    const response = await microservicesClient.callService('biogas-service', `/api/v1/contributions/${contributionId}/payment`, {\r\n      method: 'POST',\r\n      body: JSON.stringify(paymentData)\r\n    });\r\n    return response.json();\r\n  },\r\n\r\n  async getContributionAnalytics(clusterId: string, fromDate: string, toDate: string) {\r\n    const response = await microservicesClient.callService('biogas-service', `/api/v1/contributions/analytics?clusterId=${clusterId}&fromDate=${fromDate}&toDate=${toDate}`);\r\n    return response.json();\r\n  }\r\n};\r\n\r\nexport default microservicesClient;","/**\r\n * Cow Dung Transaction Recording Component\r\n * Integrates with biogas service for contribution tracking\r\n */\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport {\r\n  Scale,\r\n  MapPin,\r\n  CreditCard,\r\n  CheckCircle,\r\n  AlertTriangle,\r\n  Clock,\r\n  User,\r\n  Calendar,\r\n  Save,\r\n  X,\r\n  Star,\r\n  TrendingUp,\r\n  Coins\r\n} from 'lucide-react';\r\nimport { BiogasServiceClient } from '../../services/microservices';\r\n\r\ninterface TransactionFormData {\r\n  cattleId: string;\r\n  farmerId: string;\r\n  farmerName: string;\r\n  weightKg: string;\r\n  ratePerKg: string;\r\n  totalAmount: string;\r\n  paymentMethod: 'UPI' | 'CASH' | 'NEFT' | 'AEPS';\r\n  qualityGrade: 'PREMIUM' | 'STANDARD' | 'BASIC';\r\n  moistureContent: string;\r\n  gpsLatitude: string;\r\n  gpsLongitude: string;\r\n  deviceReadingId?: string;\r\n  notes?: string;\r\n}\r\n\r\ninterface Cattle {\r\n  id: string;\r\n  name: string;\r\n  rfidTag: string;\r\n  owner: string;\r\n  ownerId: string;\r\n}\r\n\r\ninterface Props {\r\n  cattle?: Cattle;\r\n  onClose: () => void;\r\n  onSuccess: (transaction: any) => void;\r\n}\r\n\r\nconst qualityRates = {\r\n  PREMIUM: 15.0,  // ₹15 per kg for premium quality\r\n  STANDARD: 12.0, // ₹12 per kg for standard quality\r\n  BASIC: 8.0      // ₹8 per kg for basic quality\r\n};\r\n\r\nconst translations = {\r\n  en: {\r\n    title: 'Record Cow Dung Collection',\r\n    subtitle: 'Add new contribution to biogas production',\r\n    farmerInfo: 'Farmer Information',\r\n    farmerName: 'Farmer Name',\r\n    farmerId: 'Farmer ID',\r\n    collectionDetails: 'Collection Details',\r\n    weight: 'Weight (kg)',\r\n    qualityGrade: 'Quality Grade',\r\n    premium: 'Premium',\r\n    standard: 'Standard',\r\n    basic: 'Basic',\r\n    moistureContent: 'Moisture Content (%)',\r\n    location: 'Collection Location',\r\n    latitude: 'Latitude',\r\n    longitude: 'Longitude',\r\n    getCurrentLocation: 'Get Current Location',\r\n    paymentDetails: 'Payment Details',\r\n    ratePerKg: 'Rate per kg (₹)',\r\n    totalAmount: 'Total Amount (₹)',\r\n    paymentMethod: 'Payment Method',\r\n    additionalInfo: 'Additional Information',\r\n    deviceId: 'Device Reading ID',\r\n    notes: 'Notes',\r\n    recordTransaction: 'Record Transaction',\r\n    cancel: 'Cancel',\r\n    processing: 'Processing...',\r\n    success: 'Transaction recorded successfully!',\r\n    error: 'Failed to record transaction. Please try again.',\r\n    requiredField: 'This field is required',\r\n    invalidWeight: 'Weight must be greater than 0',\r\n    invalidRate: 'Rate must be greater than 0'\r\n  },\r\n  hi: {\r\n    title: 'गोबर संग्रह रिकॉर्ड करें',\r\n    subtitle: 'बायोगैस उत्पादन में नया योगदान जोड़ें',\r\n    farmerInfo: 'किसान की जानकारी',\r\n    farmerName: 'किसान का नाम',\r\n    farmerId: 'किसान ID',\r\n    collectionDetails: 'संग्रह विवरण',\r\n    weight: 'वजन (किलो)',\r\n    qualityGrade: 'गुणवत्ता श्रेणी',\r\n    premium: 'प्रीमियम',\r\n    standard: 'मानक',\r\n    basic: 'बेसिक',\r\n    moistureContent: 'नमी की मात्रा (%)',\r\n    location: 'संग्रह स्थान',\r\n    latitude: 'अक्षांश',\r\n    longitude: 'देशांतर',\r\n    getCurrentLocation: 'वर्तमान स्थान लें',\r\n    paymentDetails: 'भुगतान विवरण',\r\n    ratePerKg: 'प्रति किलो दर (₹)',\r\n    totalAmount: 'कुल राशि (₹)',\r\n    paymentMethod: 'भुगतान विधि',\r\n    additionalInfo: 'अतिरिक्त जानकारी',\r\n    deviceId: 'डिवाइस रीडिंग ID',\r\n    notes: 'टिप्पणी',\r\n    recordTransaction: 'लेनदेन रिकॉर्ड करें',\r\n    cancel: 'रद्द करें',\r\n    processing: 'प्रसंस्करण...',\r\n    success: 'लेनदेन सफलतापूर्वक रिकॉर्ड हुआ!',\r\n    error: 'लेनदेन रिकॉर्ड करने में विफल। कृपया पुनः प्रयास करें।',\r\n    requiredField: 'यह फ़ील्ड आवश्यक है',\r\n    invalidWeight: 'वजन 0 से अधिक होना चाहिए',\r\n    invalidRate: 'दर 0 से अधिक होनी चाहिए'\r\n  }\r\n};\r\n\r\nexport default function CowDungTransaction({ cattle, onClose, onSuccess }: Props) {\r\n  const [language] = useState<'en' | 'hi'>('en');\r\n  const [formData, setFormData] = useState<TransactionFormData>({\r\n    cattleId: cattle?.id || '',\r\n    farmerId: cattle?.ownerId || '',\r\n    farmerName: cattle?.owner || '',\r\n    weightKg: '',\r\n    ratePerKg: qualityRates.STANDARD.toString(),\r\n    totalAmount: '0.00',\r\n    paymentMethod: 'UPI',\r\n    qualityGrade: 'STANDARD',\r\n    moistureContent: '65',\r\n    gpsLatitude: '',\r\n    gpsLongitude: '',\r\n    deviceReadingId: '',\r\n    notes: ''\r\n  });\r\n\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [errors, setErrors] = useState<Record<string, string>>({});\r\n  const [locationStatus, setLocationStatus] = useState<'idle' | 'loading' | 'success' | 'error'>('idle');\r\n\r\n  const t = (key: string): string => {\r\n    return translations[language][key as keyof typeof translations['en']] || key;\r\n  };\r\n\r\n  // Calculate total amount when weight or quality changes\r\n  useEffect(() => {\r\n    const weight = parseFloat(formData.weightKg);\r\n    const rate = parseFloat(formData.ratePerKg);\r\n\r\n    if (!isNaN(weight) && !isNaN(rate) && weight > 0 && rate > 0) {\r\n      const total = (weight * rate).toFixed(2);\r\n      setFormData(prev => ({ ...prev, totalAmount: total }));\r\n    } else {\r\n      setFormData(prev => ({ ...prev, totalAmount: '0.00' }));\r\n    }\r\n  }, [formData.weightKg, formData.ratePerKg]);\r\n\r\n  // Update rate when quality grade changes\r\n  useEffect(() => {\r\n    const newRate = qualityRates[formData.qualityGrade].toString();\r\n    setFormData(prev => ({ ...prev, ratePerKg: newRate }));\r\n  }, [formData.qualityGrade]);\r\n\r\n  const handleInputChange = (field: keyof TransactionFormData, value: string) => {\r\n    setFormData(prev => ({ ...prev, [field]: value }));\r\n\r\n    // Clear error for this field\r\n    if (errors[field]) {\r\n      setErrors(prev => ({ ...prev, [field]: '' }));\r\n    }\r\n  };\r\n\r\n  const getCurrentLocation = () => {\r\n    setLocationStatus('loading');\r\n\r\n    if (!navigator.geolocation) {\r\n      setLocationStatus('error');\r\n      alert('Geolocation is not supported by this browser.');\r\n      return;\r\n    }\r\n\r\n    navigator.geolocation.getCurrentPosition(\r\n      (position) => {\r\n        setFormData(prev => ({\r\n          ...prev,\r\n          gpsLatitude: position.coords.latitude.toFixed(6),\r\n          gpsLongitude: position.coords.longitude.toFixed(6)\r\n        }));\r\n        setLocationStatus('success');\r\n      },\r\n      (error) => {\r\n        console.error('Error getting location:', error);\r\n        setLocationStatus('error');\r\n        alert('Unable to get current location. Please enter manually.');\r\n      }\r\n    );\r\n  };\r\n\r\n  const validateForm = (): boolean => {\r\n    const newErrors: Record<string, string> = {};\r\n\r\n    if (!formData.farmerName.trim()) {\r\n      newErrors.farmerName = t('requiredField');\r\n    }\r\n\r\n    if (!formData.farmerId.trim()) {\r\n      newErrors.farmerId = t('requiredField');\r\n    }\r\n\r\n    const weight = parseFloat(formData.weightKg);\r\n    if (!formData.weightKg || isNaN(weight) || weight <= 0) {\r\n      newErrors.weightKg = t('invalidWeight');\r\n    }\r\n\r\n    const rate = parseFloat(formData.ratePerKg);\r\n    if (!formData.ratePerKg || isNaN(rate) || rate <= 0) {\r\n      newErrors.ratePerKg = t('invalidRate');\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    setIsSubmitting(true);\r\n\r\n    try {\r\n      const contributionData = {\r\n        externalId: `CONTRIB-${Date.now()}`,\r\n        farmerId: formData.farmerId,\r\n        farmerName: formData.farmerName,\r\n        cattleId: formData.cattleId,\r\n        deviceReadingId: formData.deviceReadingId || null,\r\n        contributionDate: new Date().toISOString(),\r\n        weightKg: parseFloat(formData.weightKg),\r\n        ratePerKg: parseFloat(formData.ratePerKg),\r\n        totalAmount: parseFloat(formData.totalAmount),\r\n        paymentMethod: formData.paymentMethod,\r\n        qualityGrade: formData.qualityGrade,\r\n        moistureContent: parseFloat(formData.moistureContent),\r\n        gpsLatitude: formData.gpsLatitude ? parseFloat(formData.gpsLatitude) : null,\r\n        gpsLongitude: formData.gpsLongitude ? parseFloat(formData.gpsLongitude) : null,\r\n        notes: formData.notes || null,\r\n        isSubsidyEligible: true,\r\n        carbonCreditEligible: true\r\n      };\r\n\r\n      const response = await BiogasServiceClient.recordContribution(contributionData);\r\n\r\n      if (response.success !== false) {\r\n        alert(t('success'));\r\n        onSuccess(response);\r\n        onClose();\r\n      } else {\r\n        throw new Error(response.message || 'Failed to record contribution');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error recording contribution:', error);\r\n      alert(t('error'));\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const getQualityColor = (grade: string) => {\r\n    switch (grade) {\r\n      case 'PREMIUM':\r\n        return 'bg-green-100 text-green-800 border-green-200';\r\n      case 'STANDARD':\r\n        return 'bg-blue-100 text-blue-800 border-blue-200';\r\n      case 'BASIC':\r\n        return 'bg-yellow-100 text-yellow-800 border-yellow-200';\r\n      default:\r\n        return 'bg-gray-100 text-gray-800 border-gray-200';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\r\n      <div className=\"bg-white rounded-xl max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\r\n        {/* Header */}\r\n        <div className=\"flex justify-between items-center p-6 border-b bg-gradient-to-r from-green-50 to-blue-50\">\r\n          <div>\r\n            <h3 className=\"text-xl font-semibold text-gray-900\">{t('title')}</h3>\r\n            <p className=\"text-gray-600\">{t('subtitle')}</p>\r\n            {cattle && (\r\n              <p className=\"text-sm text-green-600 mt-1\">\r\n                Cattle: {cattle.name} (ID: {cattle.rfidTag})\r\n              </p>\r\n            )}\r\n          </div>\r\n          <button\r\n            onClick={onClose}\r\n            className=\"text-gray-400 hover:text-gray-600 p-2 rounded-full hover:bg-gray-100\"\r\n          >\r\n            <X className=\"h-6 w-6\" />\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"p-6 space-y-6\">\r\n          {/* Farmer Information */}\r\n          <div className=\"bg-gray-50 rounded-lg p-4\">\r\n            <h4 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\r\n              <User className=\"h-5 w-5 mr-2 text-blue-600\" />\r\n              {t('farmerInfo')}\r\n            </h4>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  {t('farmerName')} *\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={formData.farmerName}\r\n                  onChange={(e) => handleInputChange('farmerName', e.target.value)}\r\n                  className={`w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 ${\r\n                    errors.farmerName ? 'border-red-300' : 'border-gray-300'\r\n                  }`}\r\n                />\r\n                {errors.farmerName && (\r\n                  <p className=\"text-red-600 text-sm mt-1\">{errors.farmerName}</p>\r\n                )}\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  {t('farmerId')} *\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={formData.farmerId}\r\n                  onChange={(e) => handleInputChange('farmerId', e.target.value)}\r\n                  className={`w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 ${\r\n                    errors.farmerId ? 'border-red-300' : 'border-gray-300'\r\n                  }`}\r\n                />\r\n                {errors.farmerId && (\r\n                  <p className=\"text-red-600 text-sm mt-1\">{errors.farmerId}</p>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Collection Details */}\r\n          <div className=\"bg-gray-50 rounded-lg p-4\">\r\n            <h4 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\r\n              <Scale className=\"h-5 w-5 mr-2 text-green-600\" />\r\n              {t('collectionDetails')}\r\n            </h4>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  {t('weight')} *\r\n                </label>\r\n                <input\r\n                  type=\"number\"\r\n                  step=\"0.1\"\r\n                  min=\"0\"\r\n                  value={formData.weightKg}\r\n                  onChange={(e) => handleInputChange('weightKg', e.target.value)}\r\n                  className={`w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 ${\r\n                    errors.weightKg ? 'border-red-300' : 'border-gray-300'\r\n                  }`}\r\n                />\r\n                {errors.weightKg && (\r\n                  <p className=\"text-red-600 text-sm mt-1\">{errors.weightKg}</p>\r\n                )}\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  {t('qualityGrade')}\r\n                </label>\r\n                <select\r\n                  value={formData.qualityGrade}\r\n                  onChange={(e) => handleInputChange('qualityGrade', e.target.value)}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                >\r\n                  <option value=\"PREMIUM\">{t('premium')} (₹{qualityRates.PREMIUM}/kg)</option>\r\n                  <option value=\"STANDARD\">{t('standard')} (₹{qualityRates.STANDARD}/kg)</option>\r\n                  <option value=\"BASIC\">{t('basic')} (₹{qualityRates.BASIC}/kg)</option>\r\n                </select>\r\n                <div className={`mt-2 px-2 py-1 rounded text-xs border ${getQualityColor(formData.qualityGrade)}`}>\r\n                  <Star className=\"h-3 w-3 inline mr-1\" />\r\n                  {formData.qualityGrade} Quality\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  {t('moistureContent')}\r\n                </label>\r\n                <input\r\n                  type=\"number\"\r\n                  step=\"0.1\"\r\n                  min=\"0\"\r\n                  max=\"100\"\r\n                  value={formData.moistureContent}\r\n                  onChange={(e) => handleInputChange('moistureContent', e.target.value)}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Location */}\r\n          <div className=\"bg-gray-50 rounded-lg p-4\">\r\n            <h4 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\r\n              <MapPin className=\"h-5 w-5 mr-2 text-red-600\" />\r\n              {t('location')}\r\n            </h4>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  {t('latitude')}\r\n                </label>\r\n                <input\r\n                  type=\"number\"\r\n                  step=\"any\"\r\n                  value={formData.gpsLatitude}\r\n                  onChange={(e) => handleInputChange('gpsLatitude', e.target.value)}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  {t('longitude')}\r\n                </label>\r\n                <input\r\n                  type=\"number\"\r\n                  step=\"any\"\r\n                  value={formData.gpsLongitude}\r\n                  onChange={(e) => handleInputChange('gpsLongitude', e.target.value)}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                />\r\n              </div>\r\n              <div className=\"flex items-end\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={getCurrentLocation}\r\n                  disabled={locationStatus === 'loading'}\r\n                  className=\"w-full px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 flex items-center justify-center\"\r\n                >\r\n                  {locationStatus === 'loading' ? (\r\n                    <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin mr-2\"></div>\r\n                  ) : (\r\n                    <MapPin className=\"h-4 w-4 mr-2\" />\r\n                  )}\r\n                  {t('getCurrentLocation')}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Payment Details */}\r\n          <div className=\"bg-gray-50 rounded-lg p-4\">\r\n            <h4 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\r\n              <CreditCard className=\"h-5 w-5 mr-2 text-purple-600\" />\r\n              {t('paymentDetails')}\r\n            </h4>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  {t('ratePerKg')} *\r\n                </label>\r\n                <input\r\n                  type=\"number\"\r\n                  step=\"0.01\"\r\n                  min=\"0\"\r\n                  value={formData.ratePerKg}\r\n                  onChange={(e) => handleInputChange('ratePerKg', e.target.value)}\r\n                  className={`w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 ${\r\n                    errors.ratePerKg ? 'border-red-300' : 'border-gray-300'\r\n                  }`}\r\n                />\r\n                {errors.ratePerKg && (\r\n                  <p className=\"text-red-600 text-sm mt-1\">{errors.ratePerKg}</p>\r\n                )}\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  {t('totalAmount')}\r\n                </label>\r\n                <div className=\"relative\">\r\n                  <input\r\n                    type=\"text\"\r\n                    value={`₹${formData.totalAmount}`}\r\n                    readOnly\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg bg-gray-100 font-semibold text-green-600\"\r\n                  />\r\n                  <Coins className=\"absolute right-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-green-600\" />\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  {t('paymentMethod')}\r\n                </label>\r\n                <select\r\n                  value={formData.paymentMethod}\r\n                  onChange={(e) => handleInputChange('paymentMethod', e.target.value)}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                >\r\n                  <option value=\"UPI\">UPI</option>\r\n                  <option value=\"CASH\">Cash</option>\r\n                  <option value=\"NEFT\">NEFT</option>\r\n                  <option value=\"AEPS\">AEPS</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Additional Information */}\r\n          <div className=\"bg-gray-50 rounded-lg p-4\">\r\n            <h4 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\r\n              <TrendingUp className=\"h-5 w-5 mr-2 text-orange-600\" />\r\n              {t('additionalInfo')}\r\n            </h4>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  {t('deviceId')}\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={formData.deviceReadingId}\r\n                  onChange={(e) => handleInputChange('deviceReadingId', e.target.value)}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                  placeholder=\"Optional device reading ID\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  {t('notes')}\r\n                </label>\r\n                <textarea\r\n                  value={formData.notes}\r\n                  onChange={(e) => handleInputChange('notes', e.target.value)}\r\n                  rows={2}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                  placeholder=\"Optional notes about the collection\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Action Buttons */}\r\n          <div className=\"flex justify-end gap-3 pt-4 border-t\">\r\n            <button\r\n              onClick={onClose}\r\n              disabled={isSubmitting}\r\n              className=\"px-6 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 disabled:opacity-50\"\r\n            >\r\n              {t('cancel')}\r\n            </button>\r\n            <button\r\n              onClick={handleSubmit}\r\n              disabled={isSubmitting}\r\n              className=\"px-6 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 disabled:opacity-50 flex items-center gap-2\"\r\n            >\r\n              {isSubmitting ? (\r\n                <>\r\n                  <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\"></div>\r\n                  {t('processing')}\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Save className=\"h-4 w-4\" />\r\n                  {t('recordTransaction')}\r\n                </>\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}","/**\r\n * Transaction History Component\r\n * Shows farmer contribution history with payment details and analytics\r\n */\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport {\r\n  Calendar,\r\n  Scale,\r\n  CreditCard,\r\n  MapPin,\r\n  TrendingUp,\r\n  Star,\r\n  Clock,\r\n  CheckCircle,\r\n  AlertTriangle,\r\n  X,\r\n  Download,\r\n  Filter,\r\n  Search,\r\n  Coins,\r\n  BarChart3\r\n} from 'lucide-react';\r\nimport { BiogasServiceClient } from '../../services/microservices';\r\n\r\ninterface Contribution {\r\n  id: string;\r\n  externalId: string;\r\n  contributionDate: string;\r\n  weightKg: number;\r\n  ratePerKg: number;\r\n  totalAmount: number;\r\n  paymentMethod: 'UPI' | 'CASH' | 'NEFT' | 'AEPS';\r\n  paymentStatus: 'PENDING' | 'PROCESSING' | 'COMPLETED' | 'FAILED';\r\n  qualityGrade: 'PREMIUM' | 'STANDARD' | 'BASIC';\r\n  moistureContent?: number;\r\n  gpsLatitude?: number;\r\n  gpsLongitude?: number;\r\n  workflowStatus: string;\r\n  validationStatus: string;\r\n  notes?: string;\r\n  operatorUserId?: string;\r\n  operatorName?: string;\r\n  operatorPhone?: string;\r\n  farmer?: {\r\n    name: string;\r\n    externalId: string;\r\n    phone?: string;\r\n  };\r\n}\r\n\r\ninterface Props {\r\n  farmerId: string;\r\n  farmerName: string;\r\n  onClose: () => void;\r\n}\r\n\r\nconst translations = {\r\n  en: {\r\n    title: 'Transaction History',\r\n    subtitle: 'Complete contribution and payment history',\r\n    summary: 'Summary',\r\n    totalContributions: 'Total Contributions',\r\n    totalWeight: 'Total Weight',\r\n    totalValue: 'Total Value',\r\n    avgQuality: 'Average Quality',\r\n    searchPlaceholder: 'Search by transaction ID or notes...',\r\n    filterByPayment: 'Filter by Payment',\r\n    filterByQuality: 'Filter by Quality',\r\n    allPayments: 'All Payments',\r\n    allQualities: 'All Qualities',\r\n    date: 'Date',\r\n    transactionId: 'Transaction ID',\r\n    weight: 'Weight (kg)',\r\n    quality: 'Quality',\r\n    amount: 'Amount (₹)',\r\n    paymentMethod: 'Payment',\r\n    status: 'Status',\r\n    actions: 'Actions',\r\n    view: 'View Details',\r\n    premium: 'Premium',\r\n    standard: 'Standard',\r\n    basic: 'Basic',\r\n    pending: 'Pending',\r\n    processing: 'Processing',\r\n    completed: 'Completed',\r\n    failed: 'Failed',\r\n    exportData: 'Export Data',\r\n    noTransactions: 'No transactions found',\r\n    kg: 'kg',\r\n    close: 'Close',\r\n    viewDetails: 'View Details',\r\n    location: 'Location',\r\n    moistureContent: 'Moisture Content',\r\n    notes: 'Notes',\r\n    workflowStatus: 'Workflow Status',\r\n    validationStatus: 'Validation Status'\r\n  },\r\n  hi: {\r\n    title: 'लेनदेन इतिहास',\r\n    subtitle: 'पूर्ण योगदान और भुगतान इतिहास',\r\n    summary: 'सारांश',\r\n    totalContributions: 'कुल योगदान',\r\n    totalWeight: 'कुल वजन',\r\n    totalValue: 'कुल मूल्य',\r\n    avgQuality: 'औसत गुणवत्ता',\r\n    searchPlaceholder: 'लेनदेन ID या नोट्स से खोजें...',\r\n    filterByPayment: 'भुगतान के अनुसार फ़िल्टर करें',\r\n    filterByQuality: 'गुणवत्ता के अनुसार फ़िल्टर करें',\r\n    allPayments: 'सभी भुगतान',\r\n    allQualities: 'सभी गुणवत्ता',\r\n    date: 'दिनांक',\r\n    transactionId: 'लेनदेन ID',\r\n    weight: 'वजन (किलो)',\r\n    quality: 'गुणवत्ता',\r\n    amount: 'राशि (₹)',\r\n    paymentMethod: 'भुगतान',\r\n    status: 'स्थिति',\r\n    actions: 'कार्य',\r\n    view: 'विवरण देखें',\r\n    premium: 'प्रीमियम',\r\n    standard: 'मानक',\r\n    basic: 'बेसिक',\r\n    pending: 'लंबित',\r\n    processing: 'प्रसंस्करण',\r\n    completed: 'पूर्ण',\r\n    failed: 'असफल',\r\n    exportData: 'डेटा निर्यात करें',\r\n    noTransactions: 'कोई लेनदेन नहीं मिला',\r\n    kg: 'किलो',\r\n    close: 'बंद करें',\r\n    viewDetails: 'विवरण देखें',\r\n    location: 'स्थान',\r\n    moistureContent: 'नमी की मात्रा',\r\n    notes: 'टिप्पणी',\r\n    workflowStatus: 'वर्कफ़्लो स्थिति',\r\n    validationStatus: 'सत्यापन स्थिति'\r\n  }\r\n};\r\n\r\nexport default function TransactionHistory({ farmerId, farmerName, onClose }: Props) {\r\n  const [language] = useState<'en' | 'hi'>('en');\r\n  const [contributions, setContributions] = useState<Contribution[]>([]);\r\n  const [filteredContributions, setFilteredContributions] = useState<Contribution[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [paymentFilter, setPaymentFilter] = useState('');\r\n  const [qualityFilter, setQualityFilter] = useState('');\r\n  const [selectedContribution, setSelectedContribution] = useState<Contribution | null>(null);\r\n  const [showDetailsModal, setShowDetailsModal] = useState(false);\r\n\r\n  const t = (key: string): string => {\r\n    return translations[language][key as keyof typeof translations['en']] || key;\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadContributions();\r\n  }, [farmerId]);\r\n\r\n  useEffect(() => {\r\n    applyFilters();\r\n  }, [contributions, searchTerm, paymentFilter, qualityFilter]);\r\n\r\n  const loadContributions = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await BiogasServiceClient.getFarmerContributions(farmerId, 0, 100);\r\n\r\n      if (response && Array.isArray(response)) {\r\n        setContributions(response);\r\n      } else {\r\n        console.error('Invalid response format:', response);\r\n        setContributions([]);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading contributions:', error);\r\n      setContributions([]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const applyFilters = () => {\r\n    let filtered = [...contributions];\r\n\r\n    // Search filter\r\n    if (searchTerm) {\r\n      filtered = filtered.filter(c =>\r\n        c.externalId.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        (c.notes && c.notes.toLowerCase().includes(searchTerm.toLowerCase()))\r\n      );\r\n    }\r\n\r\n    // Payment method filter\r\n    if (paymentFilter) {\r\n      filtered = filtered.filter(c => c.paymentMethod === paymentFilter);\r\n    }\r\n\r\n    // Quality filter\r\n    if (qualityFilter) {\r\n      filtered = filtered.filter(c => c.qualityGrade === qualityFilter);\r\n    }\r\n\r\n    setFilteredContributions(filtered);\r\n  };\r\n\r\n  const calculateSummary = () => {\r\n    const totalContributions = contributions.length;\r\n    const totalWeight = contributions.reduce((sum, c) => sum + c.weightKg, 0);\r\n    const totalValue = contributions.reduce((sum, c) => sum + c.totalAmount, 0);\r\n    const qualityDistribution = contributions.reduce((acc, c) => {\r\n      acc[c.qualityGrade] = (acc[c.qualityGrade] || 0) + 1;\r\n      return acc;\r\n    }, {} as Record<string, number>);\r\n\r\n    // Handle empty contributions array\r\n    const qualityKeys = Object.keys(qualityDistribution);\r\n    const avgQuality = qualityKeys.length > 0\r\n      ? qualityKeys.reduce((a, b) => qualityDistribution[a] > qualityDistribution[b] ? a : b)\r\n      : 'STANDARD'; // Default quality when no data\r\n\r\n    return {\r\n      totalContributions,\r\n      totalWeight: totalWeight.toFixed(1),\r\n      totalValue: totalValue.toFixed(2),\r\n      avgQuality\r\n    };\r\n  };\r\n\r\n  const formatDate = (dateString: string): string => {\r\n    return new Date(dateString).toLocaleDateString(language === 'hi' ? 'hi-IN' : 'en-IN');\r\n  };\r\n\r\n  const getPaymentStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'COMPLETED':\r\n        return 'bg-green-100 text-green-800';\r\n      case 'PENDING':\r\n        return 'bg-yellow-100 text-yellow-800';\r\n      case 'PROCESSING':\r\n        return 'bg-blue-100 text-blue-800';\r\n      case 'FAILED':\r\n        return 'bg-red-100 text-red-800';\r\n      default:\r\n        return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  const getQualityColor = (quality: string) => {\r\n    switch (quality) {\r\n      case 'PREMIUM':\r\n        return 'bg-green-100 text-green-800';\r\n      case 'STANDARD':\r\n        return 'bg-blue-100 text-blue-800';\r\n      case 'BASIC':\r\n        return 'bg-yellow-100 text-yellow-800';\r\n      default:\r\n        return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  const handleViewDetails = (contribution: Contribution) => {\r\n    setSelectedContribution(contribution);\r\n    setShowDetailsModal(true);\r\n  };\r\n\r\n  const handleExportData = () => {\r\n    const csvData = contributions.map(c => ({\r\n      'Transaction ID': c.externalId,\r\n      'Date': formatDate(c.contributionDate),\r\n      'Weight (kg)': c.weightKg,\r\n      'Quality': c.qualityGrade,\r\n      'Rate (₹/kg)': c.ratePerKg,\r\n      'Total Amount (₹)': c.totalAmount,\r\n      'Payment Method': c.paymentMethod,\r\n      'Payment Status': c.paymentStatus,\r\n      'Location': c.gpsLatitude && c.gpsLongitude ? `${c.gpsLatitude}, ${c.gpsLongitude}` : 'N/A',\r\n      'Notes': c.notes || 'N/A'\r\n    }));\r\n\r\n    const csvContent = [\r\n      Object.keys(csvData[0] || {}).join(','),\r\n      ...csvData.map(row => Object.values(row).join(','))\r\n    ].join('\\n');\r\n\r\n    const blob = new Blob([csvContent], { type: 'text/csv' });\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = `farmer-${farmerId}-contributions.csv`;\r\n    a.click();\r\n    window.URL.revokeObjectURL(url);\r\n  };\r\n\r\n  const summary = calculateSummary();\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n        <div className=\"bg-white rounded-xl p-8\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto\"></div>\r\n          <p className=\"text-center mt-4\">Loading transaction history...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\r\n      <div className=\"bg-white rounded-xl max-w-7xl w-full max-h-[90vh] overflow-y-auto\">\r\n        {/* Header */}\r\n        <div className=\"flex justify-between items-center p-6 border-b bg-gradient-to-r from-blue-50 to-green-50\">\r\n          <div>\r\n            <h3 className=\"text-xl font-semibold text-gray-900\">{t('title')}</h3>\r\n            <p className=\"text-gray-600\">{t('subtitle')}</p>\r\n            <p className=\"text-sm text-blue-600 mt-1\">Farmer: {farmerName} (ID: {farmerId})</p>\r\n          </div>\r\n          <button\r\n            onClick={onClose}\r\n            className=\"text-gray-400 hover:text-gray-600 p-2 rounded-full hover:bg-gray-100\"\r\n          >\r\n            <X className=\"h-6 w-6\" />\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"p-6 space-y-6\">\r\n          {/* Summary Cards */}\r\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\r\n            <div className=\"bg-blue-50 rounded-lg p-4\">\r\n              <div className=\"flex items-center\">\r\n                <BarChart3 className=\"h-8 w-8 text-blue-600\" />\r\n                <div className=\"ml-3\">\r\n                  <p className=\"text-sm font-medium text-blue-600\">{t('totalContributions')}</p>\r\n                  <p className=\"text-2xl font-bold text-blue-900\">{summary.totalContributions}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"bg-green-50 rounded-lg p-4\">\r\n              <div className=\"flex items-center\">\r\n                <Scale className=\"h-8 w-8 text-green-600\" />\r\n                <div className=\"ml-3\">\r\n                  <p className=\"text-sm font-medium text-green-600\">{t('totalWeight')}</p>\r\n                  <p className=\"text-2xl font-bold text-green-900\">{summary.totalWeight} {t('kg')}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"bg-yellow-50 rounded-lg p-4\">\r\n              <div className=\"flex items-center\">\r\n                <Coins className=\"h-8 w-8 text-yellow-600\" />\r\n                <div className=\"ml-3\">\r\n                  <p className=\"text-sm font-medium text-yellow-600\">{t('totalValue')}</p>\r\n                  <p className=\"text-2xl font-bold text-yellow-900\">₹{summary.totalValue}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"bg-purple-50 rounded-lg p-4\">\r\n              <div className=\"flex items-center\">\r\n                <Star className=\"h-8 w-8 text-purple-600\" />\r\n                <div className=\"ml-3\">\r\n                  <p className=\"text-sm font-medium text-purple-600\">{t('avgQuality')}</p>\r\n                  <p className=\"text-2xl font-bold text-purple-900\">{t(summary.avgQuality.toLowerCase())}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Filters */}\r\n          <div className=\"bg-gray-50 rounded-lg p-4\">\r\n            <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\r\n              <div className=\"md:col-span-2\">\r\n                <div className=\"relative\">\r\n                  <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder={t('searchPlaceholder')}\r\n                    value={searchTerm}\r\n                    onChange={(e) => setSearchTerm(e.target.value)}\r\n                    className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <select\r\n                value={paymentFilter}\r\n                onChange={(e) => setPaymentFilter(e.target.value)}\r\n                className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n              >\r\n                <option value=\"\">{t('allPayments')}</option>\r\n                <option value=\"UPI\">UPI</option>\r\n                <option value=\"CASH\">Cash</option>\r\n                <option value=\"NEFT\">NEFT</option>\r\n                <option value=\"AEPS\">AEPS</option>\r\n              </select>\r\n              <select\r\n                value={qualityFilter}\r\n                onChange={(e) => setQualityFilter(e.target.value)}\r\n                className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n              >\r\n                <option value=\"\">{t('allQualities')}</option>\r\n                <option value=\"PREMIUM\">{t('premium')}</option>\r\n                <option value=\"STANDARD\">{t('standard')}</option>\r\n                <option value=\"BASIC\">{t('basic')}</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Export Button */}\r\n          <div className=\"flex justify-end\">\r\n            <button\r\n              onClick={handleExportData}\r\n              className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\r\n            >\r\n              <Download className=\"h-4 w-4\" />\r\n              {t('exportData')}\r\n            </button>\r\n          </div>\r\n\r\n          {/* Transactions Table */}\r\n          <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 overflow-hidden\">\r\n            <div className=\"overflow-x-auto\">\r\n              <table className=\"w-full\">\r\n                <thead className=\"bg-gray-50 border-b border-gray-200\">\r\n                  <tr>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t('date')}</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t('transactionId')}</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t('weight')}</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t('quality')}</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t('amount')}</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t('paymentMethod')}</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t('status')}</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t('actions')}</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                  {filteredContributions.map((contribution) => (\r\n                    <tr key={contribution.id} className=\"hover:bg-gray-50 transition-colors\">\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                        <div className=\"flex items-center\">\r\n                          <Calendar className=\"h-4 w-4 text-gray-400 mr-2\" />\r\n                          {formatDate(contribution.contributionDate)}\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm font-mono text-gray-900\">\r\n                        {contribution.externalId}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                        {contribution.weightKg} {t('kg')}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${getQualityColor(contribution.qualityGrade)}`}>\r\n                          {t(contribution.qualityGrade.toLowerCase())}\r\n                        </span>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm font-semibold text-green-600\">\r\n                        ₹{contribution.totalAmount.toFixed(2)}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                        {contribution.paymentMethod}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${getPaymentStatusColor(contribution.paymentStatus)}`}>\r\n                          {t(contribution.paymentStatus.toLowerCase())}\r\n                        </span>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n                        <button\r\n                          onClick={() => handleViewDetails(contribution)}\r\n                          className=\"text-blue-600 hover:text-blue-900 p-1 rounded hover:bg-blue-50\"\r\n                          title={t('viewDetails')}\r\n                        >\r\n                          <Clock className=\"h-4 w-4\" />\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n\r\n            {filteredContributions.length === 0 && (\r\n              <div className=\"text-center py-12\">\r\n                <Scale className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\r\n                <p className=\"text-gray-500 text-lg\">{t('noTransactions')}</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Details Modal */}\r\n        {showDetailsModal && selectedContribution && (\r\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\r\n            <div className=\"bg-white rounded-xl max-w-2xl w-full max-h-[90vh] overflow-y-auto\">\r\n              <div className=\"flex justify-between items-center p-6 border-b\">\r\n                <h3 className=\"text-xl font-semibold\">Transaction Details</h3>\r\n                <button\r\n                  onClick={() => setShowDetailsModal(false)}\r\n                  className=\"text-gray-400 hover:text-gray-600\"\r\n                >\r\n                  <X className=\"h-6 w-6\" />\r\n                </button>\r\n              </div>\r\n              <div className=\"p-6 space-y-4\">\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                  <div>\r\n                    <label className=\"text-sm font-medium text-gray-500\">Transaction ID</label>\r\n                    <p className=\"text-lg font-mono\">{selectedContribution.externalId}</p>\r\n                  </div>\r\n                  <div>\r\n                    <label className=\"text-sm font-medium text-gray-500\">Date</label>\r\n                    <p className=\"text-lg\">{formatDate(selectedContribution.contributionDate)}</p>\r\n                  </div>\r\n                  <div>\r\n                    <label className=\"text-sm font-medium text-gray-500\">Weight</label>\r\n                    <p className=\"text-lg\">{selectedContribution.weightKg} kg</p>\r\n                  </div>\r\n                  <div>\r\n                    <label className=\"text-sm font-medium text-gray-500\">Rate per kg</label>\r\n                    <p className=\"text-lg\">₹{selectedContribution.ratePerKg}</p>\r\n                  </div>\r\n                  <div>\r\n                    <label className=\"text-sm font-medium text-gray-500\">Total Amount</label>\r\n                    <p className=\"text-lg font-semibold text-green-600\">₹{selectedContribution.totalAmount}</p>\r\n                  </div>\r\n                  <div>\r\n                    <label className=\"text-sm font-medium text-gray-500\">Payment Method</label>\r\n                    <p className=\"text-lg\">{selectedContribution.paymentMethod}</p>\r\n                  </div>\r\n                  {selectedContribution.moistureContent && (\r\n                    <div>\r\n                      <label className=\"text-sm font-medium text-gray-500\">Moisture Content</label>\r\n                      <p className=\"text-lg\">{selectedContribution.moistureContent}%</p>\r\n                    </div>\r\n                  )}\r\n                  {selectedContribution.gpsLatitude && selectedContribution.gpsLongitude && (\r\n                    <div>\r\n                      <label className=\"text-sm font-medium text-gray-500\">Location</label>\r\n                      <p className=\"text-lg\">{selectedContribution.gpsLatitude}, {selectedContribution.gpsLongitude}</p>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                {selectedContribution.notes && (\r\n                  <div>\r\n                    <label className=\"text-sm font-medium text-gray-500\">Notes</label>\r\n                    <p className=\"text-lg\">{selectedContribution.notes}</p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}","/**\r\n * Cattle Management System\r\n * Complete CRUD operations with RFID integration, search, filtering, and detailed cattle records\r\n */\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport {\r\n  Search,\r\n  Filter,\r\n  Plus,\r\n  Edit,\r\n  Trash2,\r\n  Eye,\r\n  MapPin,\r\n  Calendar,\r\n  Users,\r\n  Activity,\r\n  Wifi,\r\n  AlertTriangle,\r\n  CheckCircle,\r\n  Camera,\r\n  X,\r\n  Save,\r\n  Scan,\r\n  Circle,\r\n  Scale,\r\n  History\r\n} from 'lucide-react';\r\nimport { gauShalaApi } from '../../services/gaushala/api';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport CowDungTransaction from '../../components/gaushala/CowDungTransaction';\r\nimport TransactionHistory from '../../components/gaushala/TransactionHistory';\r\n\r\ninterface LanguageContextType {\r\n  language: 'hi' | 'en';\r\n  setLanguage: (lang: 'hi' | 'en') => void;\r\n  t: (key: string) => string;\r\n}\r\n\r\ninterface Cattle {\r\n  id: string;\r\n  rfidTag: string;\r\n  name: string;\r\n  breed: string;\r\n  age: number;\r\n  weight: number;\r\n  health: 'healthy' | 'sick' | 'recovering' | 'vaccination_due';\r\n  owner: string;\r\n  ownerId: string;\r\n  currentStatus: 'IN' | 'OUT' | 'UNKNOWN';\r\n  location: {\r\n    latitude: number;\r\n    longitude: number;\r\n    timestamp: number;\r\n    address?: string;\r\n  };\r\n  totalDungCollected: number;\r\n  lastDungCollection?: number;\r\n  isActive: boolean;\r\n  photoUrl?: string;\r\n  medicalHistory: MedicalRecord[];\r\n  createdAt: number;\r\n  updatedAt: number;\r\n}\r\n\r\ninterface MedicalRecord {\r\n  id: string;\r\n  date: number;\r\n  type: 'checkup' | 'vaccination' | 'treatment' | 'surgery';\r\n  description: string;\r\n  veterinarian: string;\r\n  medication?: string;\r\n  nextCheckup?: number;\r\n}\r\n\r\ninterface CattleFilter {\r\n  search: string;\r\n  health: string;\r\n  breed: string;\r\n  owner: string;\r\n  status: string;\r\n  isActive: boolean | null;\r\n  gaushalaId?: string;\r\n}\r\n\r\nconst translations = {\r\n  en: {\r\n    title: 'Cattle Management',\r\n    subtitle: 'Manage cattle records with RFID tracking',\r\n    addCattle: 'Add Cattle',\r\n    searchPlaceholder: 'Search by name, RFID, or owner...',\r\n    filterBy: 'Filter',\r\n    allHealth: 'All Health',\r\n    healthy: 'Healthy',\r\n    sick: 'Sick',\r\n    recovering: 'Recovering',\r\n    vaccinationDue: 'Vaccination Due',\r\n    allBreeds: 'All Breeds',\r\n    allOwners: 'All Owners',\r\n    active: 'Active',\r\n    inactive: 'Inactive',\r\n    name: 'Name',\r\n    rfidTag: 'RFID Tag',\r\n    breed: 'Breed',\r\n    age: 'Age',\r\n    weight: 'Weight',\r\n    health: 'Health',\r\n    status: 'Status',\r\n    statusIn: 'Inside',\r\n    statusOut: 'Outside',\r\n    statusUnknown: 'Unknown',\r\n    allStatus: 'All Status',\r\n    owner: 'Owner',\r\n    lastCollection: 'Last Collection',\r\n    actions: 'Actions',\r\n    view: 'View',\r\n    edit: 'Edit',\r\n    delete: 'Delete',\r\n    recordTransaction: 'Record Dung Collection',\r\n    viewHistory: 'View Transaction History',\r\n    scanRFID: 'Scan RFID',\r\n    addPhoto: 'Add Photo',\r\n    saveChanges: 'Save Changes',\r\n    cancel: 'Cancel',\r\n    cattleDetails: 'Cattle Details',\r\n    basicInfo: 'Basic Information',\r\n    locationInfo: 'Location Information',\r\n    collectionStats: 'Collection Statistics',\r\n    medicalHistory: 'Medical History',\r\n    latitude: 'Latitude',\r\n    longitude: 'Longitude',\r\n    address: 'Address',\r\n    totalCollected: 'Total Collected',\r\n    avgQuality: 'Average Quality',\r\n    lastCheckup: 'Last Checkup',\r\n    nextCheckup: 'Next Checkup',\r\n    kg: 'kg',\r\n    years: 'years',\r\n    never: 'Never',\r\n    editCattle: 'Edit Cattle',\r\n    deleteCattle: 'Delete Cattle',\r\n    confirmDelete: 'Are you sure you want to delete this cattle record?',\r\n    yes: 'Yes',\r\n    no: 'No'\r\n  },\r\n  hi: {\r\n    title: 'पशु प्रबंधन',\r\n    subtitle: 'RFID ट्रैकिंग के साथ पशु रिकॉर्ड प्रबंधन',\r\n    addCattle: 'पशु जोड़ें',\r\n    searchPlaceholder: 'नाम, RFID, या मालिक से खोजें...',\r\n    filterBy: 'फ़िल्टर',\r\n    allHealth: 'सभी स्वास्थ्य',\r\n    healthy: 'स्वस्थ',\r\n    sick: 'बीमार',\r\n    recovering: 'ठीक हो रहा',\r\n    vaccinationDue: 'टीकाकरण देय',\r\n    allBreeds: 'सभी नस्लें',\r\n    allOwners: 'सभी मालिक',\r\n    active: 'सक्रिय',\r\n    inactive: 'निष्क्रिय',\r\n    name: 'नाम',\r\n    rfidTag: 'RFID टैग',\r\n    breed: 'नस्ल',\r\n    age: 'आयु',\r\n    weight: 'वज़न',\r\n    health: 'स्वास्थ्य',\r\n    owner: 'मालिक',\r\n    lastCollection: 'अंतिम संग्रह',\r\n    actions: 'कार्य',\r\n    view: 'देखें',\r\n    edit: 'संपादित करें',\r\n    delete: 'हटाएं',\r\n    recordTransaction: 'गोबर संग्रह रिकॉर्ड करें',\r\n    viewHistory: 'लेनदेन इतिहास देखें',\r\n    scanRFID: 'RFID स्कैन करें',\r\n    addPhoto: 'फोटो जोड़ें',\r\n    saveChanges: 'परिवर्तन सेव करें',\r\n    cancel: 'रद्द करें',\r\n    cattleDetails: 'पशु विवरण',\r\n    basicInfo: 'मूलभूत जानकारी',\r\n    locationInfo: 'स्थान की जानकारी',\r\n    collectionStats: 'संग्रह आंकड़े',\r\n    medicalHistory: 'चिकित्सा इतिहास',\r\n    latitude: 'अक्षांश',\r\n    longitude: 'देशांतर',\r\n    address: 'पता',\r\n    totalCollected: 'कुल संग्रहीत',\r\n    avgQuality: 'औसत गुणवत्ता',\r\n    lastCheckup: 'अंतिम जांच',\r\n    nextCheckup: 'अगली जांच',\r\n    kg: 'किलो',\r\n    years: 'वर्ष',\r\n    never: 'कभी नहीं',\r\n    editCattle: 'पशु संपादित करें',\r\n    deleteCattle: 'पशु हटाएं',\r\n    confirmDelete: 'क्या आप वाकई इस पशु रिकॉर्ड को हटाना चाहते हैं?',\r\n    yes: 'हाँ',\r\n    no: 'नहीं'\r\n  }\r\n};\r\n\r\ninterface Props {\r\n  languageContext: LanguageContextType;\r\n}\r\n\r\nexport default function CattleManagement({ languageContext }: Props) {\r\n  const { language } = languageContext;\r\n  const navigate = useNavigate();\r\n  const [cattle, setCattle] = useState<Cattle[]>([]);\r\n  const [filteredCattle, setFilteredCattle] = useState<Cattle[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [showViewModal, setShowViewModal] = useState(false);\r\n  const [showEditModal, setShowEditModal] = useState(false);\r\n  const [showTransactionModal, setShowTransactionModal] = useState(false);\r\n  const [showHistoryModal, setShowHistoryModal] = useState(false);\r\n  const [selectedCattle, setSelectedCattle] = useState<Cattle | null>(null);\r\n  const [editFormData, setEditFormData] = useState<any>({});\r\n  const [isUpdating, setIsUpdating] = useState(false);\r\n  const [filter, setFilter] = useState<CattleFilter>({\r\n    search: '',\r\n    health: '',\r\n    breed: '',\r\n    owner: '',\r\n    status: '',\r\n    isActive: null,\r\n    gaushalaId: undefined // No default filter - show all cattle\r\n  });\r\n\r\n  const t = (key: string): string => {\r\n    return translations[language][key as keyof typeof translations['en']] || key;\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadCattleData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    applyFilters();\r\n  }, [cattle, filter]);\r\n\r\n  const loadCattleData = async () => {\r\n    try {\r\n      setLoading(true);\r\n\r\n      // Fetch cattle data from API\r\n      const response = await gauShalaApi.cattle.getAllCattle();\r\n\r\n      if (response.success && response.data) {\r\n        setCattle(response.data);\r\n      } else {\r\n        console.error('Failed to fetch cattle data:', response.error);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading cattle data:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const applyFilters = () => {\r\n    let filtered = [...cattle];\r\n\r\n    // Search filter\r\n    if (filter.search) {\r\n      filtered = filtered.filter(c =>\r\n        c.name.toLowerCase().includes(filter.search.toLowerCase()) ||\r\n        c.rfidTag.toLowerCase().includes(filter.search.toLowerCase()) ||\r\n        c.owner.toLowerCase().includes(filter.search.toLowerCase())\r\n      );\r\n    }\r\n\r\n    // Health filter\r\n    if (filter.health) {\r\n      filtered = filtered.filter(c => c.health === filter.health);\r\n    }\r\n\r\n    // Breed filter\r\n    if (filter.breed) {\r\n      filtered = filtered.filter(c => c.breed === filter.breed);\r\n    }\r\n\r\n    // Owner filter\r\n    if (filter.owner) {\r\n      filtered = filtered.filter(c => c.owner === filter.owner);\r\n    }\r\n\r\n    // Status filter (IN/OUT/UNKNOWN)\r\n    if (filter.status) {\r\n      filtered = filtered.filter(c => c.currentStatus === filter.status);\r\n    }\r\n\r\n    // Active status filter\r\n    if (filter.isActive !== null) {\r\n      filtered = filtered.filter(c => c.isActive === filter.isActive);\r\n    }\r\n\r\n    // Gaushala filter - only show cattle belonging to specific gaushala\r\n    if (filter.gaushalaId) {\r\n      // For now, we'll filter by ownerId (assuming ownerId represents gaushala membership)\r\n      // This can be enhanced later with proper gaushala-cattle relationship data\r\n      filtered = filtered.filter(c => c.ownerId === filter.gaushalaId);\r\n    }\r\n\r\n    setFilteredCattle(filtered);\r\n  };\r\n\r\n  const getHealthColor = (health: string) => {\r\n    switch (health) {\r\n      case 'healthy':\r\n        return 'bg-green-100 text-green-800';\r\n      case 'sick':\r\n        return 'bg-red-100 text-red-800';\r\n      case 'recovering':\r\n        return 'bg-yellow-100 text-yellow-800';\r\n      case 'vaccination_due':\r\n        return 'bg-blue-100 text-blue-800';\r\n      default:\r\n        return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'IN':\r\n        return 'bg-green-100 text-green-800';\r\n      case 'OUT':\r\n        return 'bg-orange-100 text-orange-800';\r\n      case 'UNKNOWN':\r\n        return 'bg-gray-100 text-gray-800';\r\n      default:\r\n        return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  const formatDate = (timestamp: number): string => {\r\n    return new Date(timestamp).toLocaleDateString(language === 'hi' ? 'hi-IN' : 'en-IN');\r\n  };\r\n\r\n  const handleView = (cattle: Cattle) => {\r\n    setSelectedCattle(cattle);\r\n    setShowViewModal(true);\r\n  };\r\n\r\n  const handleEdit = (cattle: Cattle) => {\r\n    setSelectedCattle(cattle);\r\n    // Initialize edit form with current cattle data\r\n    setEditFormData({\r\n      name: cattle.name,\r\n      rfidTag: cattle.rfidTag,\r\n      breed: cattle.breed.toLowerCase(), // Convert to lowercase to match breed options\r\n      age: (cattle.age * 12).toString(), // Convert years to months for form input\r\n      weight: cattle.weight.toString(),\r\n      health: cattle.health,\r\n      owner: cattle.owner,\r\n      ownerId: cattle.ownerId,\r\n      location: {\r\n        latitude: cattle.location.latitude.toString(),\r\n        longitude: cattle.location.longitude.toString(),\r\n        address: cattle.location.address || ''\r\n      }\r\n    });\r\n    setShowEditModal(true);\r\n  };\r\n\r\n  const handleEditInputChange = (field: string, value: string) => {\r\n    if (field.startsWith('location.')) {\r\n      const locationField = field.split('.')[1];\r\n      setEditFormData((prev: any) => ({\r\n        ...prev,\r\n        location: {\r\n          ...prev.location,\r\n          [locationField]: value\r\n        }\r\n      }));\r\n    } else {\r\n      setEditFormData((prev: any) => ({\r\n        ...prev,\r\n        [field]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleEditSubmit = async () => {\r\n    if (!selectedCattle) return;\r\n\r\n    setIsUpdating(true);\r\n    try {\r\n      // Prepare update data in the format expected by the API\r\n      const updateData = {\r\n        ...editFormData,\r\n        age: parseInt(editFormData.age),\r\n        weight: parseFloat(editFormData.weight),\r\n        location: {\r\n          latitude: parseFloat(editFormData.location.latitude),\r\n          longitude: parseFloat(editFormData.location.longitude),\r\n          address: editFormData.location.address,\r\n          timestamp: Date.now()\r\n        }\r\n      };\r\n\r\n      const response = await gauShalaApi.cattle.updateCattle(selectedCattle.id, updateData);\r\n\r\n      if (response.success) {\r\n        // Update the cattle in the local state\r\n        setCattle(prevCattle =>\r\n          prevCattle.map(c =>\r\n            c.id === selectedCattle.id\r\n              ? { ...c, ...updateData, updatedAt: Date.now() }\r\n              : c\r\n          )\r\n        );\r\n        setShowEditModal(false);\r\n        setSelectedCattle(null);\r\n        setEditFormData({});\r\n        alert('Cattle updated successfully!');\r\n      } else {\r\n        alert('Failed to update cattle: ' + (response.error || 'Unknown error'));\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to update cattle:', error);\r\n      alert('Failed to update cattle. Please try again.');\r\n    } finally {\r\n      setIsUpdating(false);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (cattle: Cattle) => {\r\n    if (confirm(t('confirmDelete'))) {\r\n      try {\r\n        const response = await gauShalaApi.cattle.deleteCattle(cattle.id);\r\n\r\n        if (response.success) {\r\n          setCattle(prev => prev.filter(c => c.id !== cattle.id));\r\n        } else {\r\n          console.error('Failed to delete cattle:', response.error);\r\n          alert('Failed to delete cattle. Please try again.');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error deleting cattle:', error);\r\n        alert('Error deleting cattle. Please try again.');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleRecordTransaction = (cattle: Cattle) => {\r\n    setSelectedCattle(cattle);\r\n    setShowTransactionModal(true);\r\n  };\r\n\r\n  const handleViewHistory = (cattle: Cattle) => {\r\n    setSelectedCattle(cattle);\r\n    setShowHistoryModal(true);\r\n  };\r\n\r\n  const handleTransactionSuccess = (transaction: any) => {\r\n    // Update cattle data with latest collection info\r\n    setCattle(prevCattle =>\r\n      prevCattle.map(c =>\r\n        c.id === selectedCattle?.id\r\n          ? {\r\n              ...c,\r\n              totalDungCollected: c.totalDungCollected + parseFloat(transaction.weightKg || '0'),\r\n              lastDungCollection: Date.now()\r\n            }\r\n          : c\r\n      )\r\n    );\r\n\r\n    console.log('Transaction recorded successfully:', transaction);\r\n  };\r\n\r\n\r\n  const handleScanRFID = async () => {\r\n    try {\r\n      const response = await gauShalaApi.cattle.scanRfid();\r\n\r\n      if (response.success && response.data) {\r\n        const { rfidTag, cattleInfo } = response.data;\r\n        if (cattleInfo) {\r\n          alert(`RFID Scanned: ${rfidTag}\\nCattle Found: ${cattleInfo.name}`);\r\n        } else {\r\n          alert(`RFID Scanned: ${rfidTag}\\nNo cattle found with this tag.`);\r\n        }\r\n      } else {\r\n        console.error('Failed to scan RFID:', response.error);\r\n        alert('Failed to scan RFID. Please try again.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error scanning RFID:', error);\r\n      alert('Error scanning RFID. Please try again.');\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-[400px]\">\r\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-6 space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex justify-between items-center\">\r\n        <div>\r\n          <h2 className=\"text-2xl font-bold text-gray-900\">{t('title')}</h2>\r\n          <p className=\"text-gray-600\">{t('subtitle')}</p>\r\n        </div>\r\n        <button\r\n          onClick={() => navigate('/gaushala/cattle/add')}\r\n          className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\r\n        >\r\n          <Plus className=\"h-4 w-4\" />\r\n          {t('addCattle')}\r\n        </button>\r\n      </div>\r\n\r\n      {/* Filters */}\r\n      <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 p-6\">\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-4\">\r\n          {/* Search */}\r\n          <div className=\"lg:col-span-2\">\r\n            <div className=\"relative\">\r\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder={t('searchPlaceholder')}\r\n                value={filter.search}\r\n                onChange={(e) => setFilter(prev => ({ ...prev, search: e.target.value }))}\r\n                className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Health Filter */}\r\n          <select\r\n            value={filter.health}\r\n            onChange={(e) => setFilter(prev => ({ ...prev, health: e.target.value }))}\r\n            className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n          >\r\n            <option value=\"\">{t('allHealth')}</option>\r\n            <option value=\"healthy\">{t('healthy')}</option>\r\n            <option value=\"sick\">{t('sick')}</option>\r\n            <option value=\"recovering\">{t('recovering')}</option>\r\n            <option value=\"vaccination_due\">{t('vaccinationDue')}</option>\r\n          </select>\r\n\r\n          {/* Breed Filter */}\r\n          <select\r\n            value={filter.breed}\r\n            onChange={(e) => setFilter(prev => ({ ...prev, breed: e.target.value }))}\r\n            className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n          >\r\n            <option value=\"\">{t('allBreeds')}</option>\r\n            <option value=\"गिर\">गिर</option>\r\n            <option value=\"सिंधी\">सिंधी</option>\r\n            <option value=\"होल्स्टीन\">होल्स्टीन</option>\r\n            <option value=\"जर्सी\">जर्सी</option>\r\n          </select>\r\n\r\n          {/* RFID Scan Button */}\r\n          <button\r\n            onClick={handleScanRFID}\r\n            className=\"flex items-center justify-center gap-2 px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors\"\r\n          >\r\n            <Scan className=\"h-4 w-4\" />\r\n            {t('scanRFID')}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Cattle Table */}\r\n      <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 overflow-hidden\">\r\n        <div className=\"overflow-x-auto\">\r\n          <table className=\"w-full\">\r\n            <thead className=\"bg-gray-50 border-b border-gray-200\">\r\n              <tr>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t('name')}</th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t('rfidTag')}</th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t('breed')}</th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t('age')}</th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t('weight')}</th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t('health')}</th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t('owner')}</th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t('lastCollection')}</th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t('actions')}</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"bg-white divide-y divide-gray-200\">\r\n              {filteredCattle.map((cattle) => (\r\n                <tr key={cattle.id} className=\"hover:bg-gray-50 transition-colors\">\r\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                    <div className=\"flex items-center\">\r\n                      <div className=\"h-10 w-10 bg-blue-100 rounded-full flex items-center justify-center\">\r\n                        <span className=\"text-2xl\">🐄</span>\r\n                      </div>\r\n                      <div className=\"ml-3\">\r\n                        <div className=\"text-sm font-medium text-gray-900\">{cattle.name}</div>\r\n                        <div className=\"text-sm text-gray-500\">ID: {cattle.id}</div>\r\n                      </div>\r\n                    </div>\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                    <div className=\"flex items-center\">\r\n                      <Wifi className=\"h-4 w-4 text-blue-500 mr-2\" />\r\n                      <span className=\"text-sm font-mono text-gray-900\">{cattle.rfidTag || cattle.tagId || cattle.id}</span>\r\n                    </div>\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">{cattle.breed}</td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">{cattle.age} {t('years')}</td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">{cattle.weight} {t('kg')}</td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                    <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${getHealthColor(cattle.health)}`}>\r\n                      {t(cattle.health)}\r\n                    </span>\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">{cattle.owner}</td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                    {cattle.lastDungCollection ? formatDate(cattle.lastDungCollection) : t('never')}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      <button\r\n                        onClick={() => handleView(cattle)}\r\n                        className=\"text-blue-600 hover:text-blue-900 p-1 rounded hover:bg-blue-50\"\r\n                        title={t('view')}\r\n                      >\r\n                        <Eye className=\"h-4 w-4\" />\r\n                      </button>\r\n                      <button\r\n                        onClick={() => handleEdit(cattle)}\r\n                        className=\"text-green-600 hover:text-green-900 p-1 rounded hover:bg-green-50\"\r\n                        title={t('edit')}\r\n                      >\r\n                        <Edit className=\"h-4 w-4\" />\r\n                      </button>\r\n                      <button\r\n                        onClick={() => handleRecordTransaction(cattle)}\r\n                        className=\"text-orange-600 hover:text-orange-900 p-1 rounded hover:bg-orange-50\"\r\n                        title={t('recordTransaction')}\r\n                      >\r\n                        <Scale className=\"h-4 w-4\" />\r\n                      </button>\r\n                      <button\r\n                        onClick={() => handleViewHistory(cattle)}\r\n                        className=\"text-purple-600 hover:text-purple-900 p-1 rounded hover:bg-purple-50\"\r\n                        title={t('viewHistory')}\r\n                      >\r\n                        <History className=\"h-4 w-4\" />\r\n                      </button>\r\n                      <button\r\n                        onClick={() => handleDelete(cattle)}\r\n                        className=\"text-red-600 hover:text-red-900 p-1 rounded hover:bg-red-50\"\r\n                        title={t('delete')}\r\n                      >\r\n                        <Trash2 className=\"h-4 w-4\" />\r\n                      </button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        {filteredCattle.length === 0 && (\r\n          <div className=\"text-center py-12\">\r\n            <span className=\"text-6xl mx-auto mb-4 block\">🐄</span>\r\n            <p className=\"text-gray-500 text-lg\">No cattle found matching your filters</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* View Modal */}\r\n      {showViewModal && selectedCattle && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\r\n          <div className=\"bg-white rounded-xl max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\r\n            <div className=\"flex justify-between items-center p-6 border-b\">\r\n              <h3 className=\"text-xl font-semibold\">{t('cattleDetails')} - {selectedCattle.name}</h3>\r\n              <button\r\n                onClick={() => setShowViewModal(false)}\r\n                className=\"text-gray-400 hover:text-gray-600\"\r\n              >\r\n                <X className=\"h-6 w-6\" />\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"p-6 grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n              {/* Basic Information */}\r\n              <div className=\"space-y-4\">\r\n                <h4 className=\"text-lg font-semibold text-gray-900\">{t('basicInfo')}</h4>\r\n                <div className=\"bg-gray-50 rounded-lg p-4 space-y-3\">\r\n                  <div className=\"flex justify-between\">\r\n                    <span className=\"text-gray-600\">{t('name')}:</span>\r\n                    <span className=\"font-medium\">{selectedCattle.name}</span>\r\n                  </div>\r\n                  <div className=\"flex justify-between\">\r\n                    <span className=\"text-gray-600\">{t('rfidTag')}:</span>\r\n                    <span className=\"font-mono font-medium\">{selectedCattle.rfidTag}</span>\r\n                  </div>\r\n                  <div className=\"flex justify-between\">\r\n                    <span className=\"text-gray-600\">{t('breed')}:</span>\r\n                    <span className=\"font-medium\">{selectedCattle.breed}</span>\r\n                  </div>\r\n                  <div className=\"flex justify-between\">\r\n                    <span className=\"text-gray-600\">{t('age')}:</span>\r\n                    <span className=\"font-medium\">{selectedCattle.age} {t('years')}</span>\r\n                  </div>\r\n                  <div className=\"flex justify-between\">\r\n                    <span className=\"text-gray-600\">{t('weight')}:</span>\r\n                    <span className=\"font-medium\">{selectedCattle.weight} {t('kg')}</span>\r\n                  </div>\r\n                  <div className=\"flex justify-between\">\r\n                    <span className=\"text-gray-600\">{t('health')}:</span>\r\n                    <span className={`px-2 py-1 rounded-full text-sm font-medium ${getHealthColor(selectedCattle.health)}`}>\r\n                      {t(selectedCattle.health)}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"flex justify-between\">\r\n                    <span className=\"text-gray-600\">{t('owner')}:</span>\r\n                    <span className=\"font-medium\">{selectedCattle.owner}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Location Information */}\r\n              <div className=\"space-y-4\">\r\n                <h4 className=\"text-lg font-semibold text-gray-900\">{t('locationInfo')}</h4>\r\n                <div className=\"bg-gray-50 rounded-lg p-4 space-y-3\">\r\n                  <div className=\"flex justify-between\">\r\n                    <span className=\"text-gray-600\">{t('latitude')}:</span>\r\n                    <span className=\"font-medium\">{selectedCattle.location.latitude.toFixed(6)}</span>\r\n                  </div>\r\n                  <div className=\"flex justify-between\">\r\n                    <span className=\"text-gray-600\">{t('longitude')}:</span>\r\n                    <span className=\"font-medium\">{selectedCattle.location.longitude.toFixed(6)}</span>\r\n                  </div>\r\n                  {selectedCattle.location.address && (\r\n                    <div className=\"flex justify-between\">\r\n                      <span className=\"text-gray-600\">{t('address')}:</span>\r\n                      <span className=\"font-medium text-right\">{selectedCattle.location.address}</span>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              {/* Collection Statistics */}\r\n              <div className=\"space-y-4\">\r\n                <h4 className=\"text-lg font-semibold text-gray-900\">{t('collectionStats')}</h4>\r\n                <div className=\"bg-gray-50 rounded-lg p-4 space-y-3\">\r\n                  <div className=\"flex justify-between\">\r\n                    <span className=\"text-gray-600\">{t('totalCollected')}:</span>\r\n                    <span className=\"font-medium\">{selectedCattle.totalDungCollected} {t('kg')}</span>\r\n                  </div>\r\n                  <div className=\"flex justify-between\">\r\n                    <span className=\"text-gray-600\">{t('lastCollection')}:</span>\r\n                    <span className=\"font-medium\">\r\n                      {selectedCattle.lastDungCollection ? formatDate(selectedCattle.lastDungCollection) : t('never')}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Medical History */}\r\n              <div className=\"space-y-4\">\r\n                <h4 className=\"text-lg font-semibold text-gray-900\">{t('medicalHistory')}</h4>\r\n                <div className=\"bg-gray-50 rounded-lg p-4 space-y-3\">\r\n                  {selectedCattle.medicalHistory.map((record) => (\r\n                    <div key={record.id} className=\"border-l-4 border-blue-500 pl-3\">\r\n                      <div className=\"flex justify-between items-start\">\r\n                        <div>\r\n                          <p className=\"font-medium\">{record.description}</p>\r\n                          <p className=\"text-sm text-gray-600\">{record.veterinarian}</p>\r\n                          {record.medication && (\r\n                            <p className=\"text-xs text-gray-500\">{record.medication}</p>\r\n                          )}\r\n                        </div>\r\n                        <span className=\"text-sm text-gray-500\">{formatDate(record.date)}</span>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n\r\n      {/* Edit Cattle Modal */}\r\n      {showEditModal && selectedCattle && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\r\n          <div className=\"bg-white rounded-xl max-w-2xl w-full max-h-[90vh] overflow-y-auto\">\r\n            <div className=\"flex justify-between items-center p-6 border-b\">\r\n              <h3 className=\"text-xl font-semibold\">{t('editCattle')} - {selectedCattle.name}</h3>\r\n              <button\r\n                onClick={() => setShowEditModal(false)}\r\n                className=\"text-gray-400 hover:text-gray-600\"\r\n              >\r\n                <X className=\"h-6 w-6\" />\r\n              </button>\r\n            </div>\r\n            <div className=\"p-6 space-y-6\">\r\n              {/* Basic Information */}\r\n              <div>\r\n                <h4 className=\"text-lg font-semibold mb-4\">Basic Information</h4>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                      Cattle Name *\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={editFormData.name || ''}\r\n                      onChange={(e) => handleEditInputChange('name', e.target.value)}\r\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                      required\r\n                    />\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                      RFID Tag *\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={editFormData.rfidTag || ''}\r\n                      onChange={(e) => handleEditInputChange('rfidTag', e.target.value)}\r\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                      required\r\n                    />\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                      Breed *\r\n                    </label>\r\n                    <select\r\n                      value={editFormData.breed || ''}\r\n                      onChange={(e) => handleEditInputChange('breed', e.target.value)}\r\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                      required\r\n                    >\r\n                      <option value=\"\">Select Breed</option>\r\n                      <option value=\"gir\">Gir</option>\r\n                      <option value=\"sahiwal\">Sahiwal</option>\r\n                      <option value=\"sindhi\">Red Sindhi</option>\r\n                      <option value=\"tharparkar\">Tharparkar</option>\r\n                      <option value=\"holstein\">Holstein Friesian</option>\r\n                      <option value=\"jersey\">Jersey</option>\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                      Health Status\r\n                    </label>\r\n                    <select\r\n                      value={editFormData.health || ''}\r\n                      onChange={(e) => handleEditInputChange('health', e.target.value)}\r\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                    >\r\n                      <option value=\"healthy\">Healthy</option>\r\n                      <option value=\"sick\">Sick</option>\r\n                      <option value=\"recovering\">Recovering</option>\r\n                      <option value=\"vaccination_due\">Vaccination Due</option>\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                      Age (months)\r\n                    </label>\r\n                    <input\r\n                      type=\"number\"\r\n                      value={editFormData.age || ''}\r\n                      onChange={(e) => handleEditInputChange('age', e.target.value)}\r\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                      min=\"0\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                      Weight (kg)\r\n                    </label>\r\n                    <input\r\n                      type=\"number\"\r\n                      value={editFormData.weight || ''}\r\n                      onChange={(e) => handleEditInputChange('weight', e.target.value)}\r\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                      min=\"0\"\r\n                      step=\"0.1\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Owner Information */}\r\n              <div>\r\n                <h4 className=\"text-lg font-semibold mb-4\">Owner Information</h4>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                      Owner Name *\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={editFormData.owner || ''}\r\n                      onChange={(e) => handleEditInputChange('owner', e.target.value)}\r\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                      required\r\n                    />\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                      Owner ID/Phone\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={editFormData.ownerId || ''}\r\n                      onChange={(e) => handleEditInputChange('ownerId', e.target.value)}\r\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Location Information */}\r\n              <div>\r\n                <h4 className=\"text-lg font-semibold mb-4\">Location Information</h4>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                  <div className=\"md:col-span-2\">\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                      Address\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={editFormData.location?.address || ''}\r\n                      onChange={(e) => handleEditInputChange('location.address', e.target.value)}\r\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                      Latitude\r\n                    </label>\r\n                    <input\r\n                      type=\"number\"\r\n                      value={editFormData.location?.latitude || ''}\r\n                      onChange={(e) => handleEditInputChange('location.latitude', e.target.value)}\r\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                      step=\"any\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                      Longitude\r\n                    </label>\r\n                    <input\r\n                      type=\"number\"\r\n                      value={editFormData.location?.longitude || ''}\r\n                      onChange={(e) => handleEditInputChange('location.longitude', e.target.value)}\r\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                      step=\"any\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Action Buttons */}\r\n              <div className=\"flex justify-end gap-3 pt-4 border-t\">\r\n                <button\r\n                  onClick={() => {\r\n                    setShowEditModal(false);\r\n                    setEditFormData({});\r\n                  }}\r\n                  disabled={isUpdating}\r\n                  className=\"px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 disabled:opacity-50\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  onClick={handleEditSubmit}\r\n                  disabled={isUpdating || !editFormData.name || !editFormData.rfidTag}\r\n                  className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 flex items-center gap-2\"\r\n                >\r\n                  {isUpdating && (\r\n                    <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\"></div>\r\n                  )}\r\n                  {isUpdating ? 'Updating...' : 'Update Cattle'}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Cow Dung Transaction Modal */}\r\n      {showTransactionModal && selectedCattle && (\r\n        <CowDungTransaction\r\n          cattle={selectedCattle}\r\n          onClose={() => {\r\n            setShowTransactionModal(false);\r\n            setSelectedCattle(null);\r\n          }}\r\n          onSuccess={handleTransactionSuccess}\r\n        />\r\n      )}\r\n\r\n      {/* Transaction History Modal */}\r\n      {showHistoryModal && selectedCattle && (\r\n        <TransactionHistory\r\n          farmerId={selectedCattle.ownerId}\r\n          farmerName={selectedCattle.owner}\r\n          onClose={() => {\r\n            setShowHistoryModal(false);\r\n            setSelectedCattle(null);\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}","/**\r\n * Add Cattle Page - Production-level cattle registration form\r\n */\r\n\r\nimport { useState, useCallback } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n  Save, ArrowLeft, Scan, Upload, Camera, FileText,\r\n  User, Home, Activity, Baby, Globe, Settings,\r\n  AlertCircle, CheckCircle, Clock, Plus, X\r\n} from 'lucide-react';\r\nimport { gauShalaApi } from '../../services/gaushala/api';\r\n\r\ninterface LanguageContextType {\r\n  language: 'hi' | 'en';\r\n  t: (key: string) => string;\r\n}\r\n\r\ninterface AddCattleProps {\r\n  languageContext: LanguageContextType;\r\n}\r\n\r\nexport default function AddCattle({ languageContext }: AddCattleProps) {\r\n  const navigate = useNavigate();\r\n\r\n  const [formData, setFormData] = useState({\r\n    // Basic Identification\r\n    uniqueAnimalId: '',\r\n    name: '',\r\n    breed: '',\r\n    species: 'cattle',\r\n    gender: '',\r\n    color: '',\r\n    dateOfBirth: '',\r\n    dateOfEntry: new Date().toISOString().split('T')[0],\r\n\r\n    // Gaushala Assignment\r\n    gaushala: '',\r\n\r\n    // Health & Medical Records\r\n    vaccinationStatus: '',\r\n    disability: '',\r\n    veterinarianName: '',\r\n    dewormingSchedule: '',\r\n    lastHealthCheckup: '',\r\n    veterinarianContact: '',\r\n    medicalHistory: '',\r\n\r\n    // Physical Characteristics\r\n    weight: '',\r\n    hornStatus: '',\r\n    rfidTagNumber: '',\r\n    height: '',\r\n    earTagNumber: '',\r\n    microchipNumber: '',\r\n\r\n    // Reproductive Details (Female only)\r\n    milkingStatus: '',\r\n    milkYieldPerDay: '',\r\n    numberOfCalves: '',\r\n    lactationNumber: '',\r\n    lastCalvingDate: '',\r\n    pregnancyStatus: '',\r\n\r\n    // Origin & Ownership\r\n    sourceOfAcquisition: '',\r\n    previousOwner: '',\r\n    dateOfAcquisition: '',\r\n    ownershipStatus: '',\r\n\r\n    // Shelter & Feeding\r\n    shedNumber: '',\r\n    typeOfFeed: '',\r\n    feedingSchedule: '',\r\n\r\n    // Supporting Documents\r\n    photoFile: null as File | null,\r\n    healthCertificate: null as File | null,\r\n    vaccinationRecord: null as File | null,\r\n    purchaseDocument: null as File | null\r\n  });\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isScanning, setIsScanning] = useState(false);\r\n  const [message, setMessage] = useState<{ type: 'success' | 'error' | 'warning'; text: string } | null>(null);\r\n  const [errors, setErrors] = useState<Record<string, string>>({});\r\n  const [activeSection, setActiveSection] = useState(0);\r\n\r\n  const handleInputChange = useCallback((field: string, value: string | File | null) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [field]: value\r\n    }));\r\n\r\n    // Clear error for this field\r\n    if (errors[field]) {\r\n      setErrors(prev => ({\r\n        ...prev,\r\n        [field]: ''\r\n      }));\r\n    }\r\n    setMessage(null);\r\n  }, [errors]);\r\n\r\n  const handleScanRfid = async () => {\r\n    setIsScanning(true);\r\n    try {\r\n      const response = await gauShalaApi.cattle.scanRfid();\r\n      if (response.success && response.data) {\r\n        handleInputChange('rfidTagNumber', response.data.rfidTag);\r\n\r\n        if (response.data.cattleInfo) {\r\n          setMessage({\r\n            type: 'warning',\r\n            text: 'RFID tag already exists for another cattle'\r\n          });\r\n        } else {\r\n          setMessage({\r\n            type: 'success',\r\n            text: 'RFID tag scanned successfully'\r\n          });\r\n        }\r\n      }\r\n    } catch (error) {\r\n      setMessage({\r\n        type: 'error',\r\n        text: 'Failed to scan RFID tag'\r\n      });\r\n    } finally {\r\n      setIsScanning(false);\r\n    }\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const newErrors: Record<string, string> = {};\r\n\r\n    // Required fields validation\r\n    if (!formData.uniqueAnimalId.trim()) newErrors.uniqueAnimalId = 'Unique Animal ID is required';\r\n    if (!formData.breed) newErrors.breed = 'Breed is required';\r\n    if (!formData.species) newErrors.species = 'Species is required';\r\n    if (!formData.gender) newErrors.gender = 'Gender is required';\r\n    if (!formData.dateOfEntry) newErrors.dateOfEntry = 'Date of Entry is required';\r\n    if (!formData.gaushala) newErrors.gaushala = 'Gaushala selection is required';\r\n    if (!formData.rfidTagNumber.trim()) newErrors.rfidTagNumber = 'RFID Tag Number is required';\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    if (!validateForm()) {\r\n      setMessage({\r\n        type: 'error',\r\n        text: 'Please fill in all required fields'\r\n      });\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    setMessage(null);\r\n\r\n    try {\r\n      // Create cattle record\r\n      const cattleData = {\r\n        ...formData,\r\n        weight: formData.weight ? parseFloat(formData.weight) : null,\r\n        height: formData.height ? parseFloat(formData.height) : null,\r\n        milkYieldPerDay: formData.milkYieldPerDay ? parseFloat(formData.milkYieldPerDay) : null,\r\n        numberOfCalves: formData.numberOfCalves ? parseInt(formData.numberOfCalves) : null,\r\n        lactationNumber: formData.lactationNumber ? parseInt(formData.lactationNumber) : null,\r\n        isActive: true,\r\n        totalDungCollected: 0,\r\n        lastDungCollection: null,\r\n        photoUrl: '',\r\n        location: {\r\n          latitude: 23.7126,\r\n          longitude: 76.6566,\r\n          timestamp: new Date().toISOString(),\r\n        }\r\n      };\r\n\r\n      const response = await gauShalaApi.cattle.createCattle(cattleData);\r\n\r\n      if (response.success && response.data) {\r\n        // Upload documents if provided\r\n        const uploadPromises = [];\r\n\r\n        if (formData.photoFile) {\r\n          uploadPromises.push(gauShalaApi.cattle.uploadPhoto(response.data.id, formData.photoFile));\r\n        }\r\n\r\n        if (formData.healthCertificate) {\r\n          uploadPromises.push(gauShalaApi.cattle.uploadDocument(response.data.id, formData.healthCertificate, 'health_certificate'));\r\n        }\r\n\r\n        if (formData.vaccinationRecord) {\r\n          uploadPromises.push(gauShalaApi.cattle.uploadDocument(response.data.id, formData.vaccinationRecord, 'vaccination_record'));\r\n        }\r\n\r\n        if (formData.purchaseDocument) {\r\n          uploadPromises.push(gauShalaApi.cattle.uploadDocument(response.data.id, formData.purchaseDocument, 'purchase_document'));\r\n        }\r\n\r\n        // Wait for all uploads\r\n        if (uploadPromises.length > 0) {\r\n          try {\r\n            await Promise.all(uploadPromises);\r\n          } catch (uploadError) {\r\n            console.warn('Some document uploads failed:', uploadError);\r\n          }\r\n        }\r\n\r\n        setMessage({\r\n          type: 'success',\r\n          text: 'Cattle registered successfully!'\r\n        });\r\n\r\n        // Navigate back after delay\r\n        setTimeout(() => {\r\n          navigate('/gaushala/cattle');\r\n        }, 2000);\r\n      } else {\r\n        throw new Error(response.error || 'Failed to create cattle');\r\n      }\r\n    } catch (error) {\r\n      setMessage({\r\n        type: 'error',\r\n        text: 'Failed to register cattle. Please try again.'\r\n      });\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    navigate('/gaushala/cattle');\r\n  };\r\n\r\n  const sections = [\r\n    {\r\n      id: 'basic',\r\n      title: 'Basic Identification',\r\n      icon: User,\r\n      color: 'from-blue-500 to-indigo-600',\r\n      progress: 0\r\n    },\r\n    {\r\n      id: 'gaushala',\r\n      title: 'Gaushala & Physical',\r\n      icon: Home,\r\n      color: 'from-green-500 to-teal-600',\r\n      progress: 0\r\n    },\r\n    {\r\n      id: 'health',\r\n      title: 'Health & Medical',\r\n      icon: Activity,\r\n      color: 'from-red-500 to-pink-600',\r\n      progress: 0\r\n    },\r\n    {\r\n      id: 'reproductive',\r\n      title: 'Reproductive Details',\r\n      icon: Baby,\r\n      color: 'from-pink-500 to-rose-600',\r\n      progress: 0\r\n    },\r\n    {\r\n      id: 'origin',\r\n      title: 'Origin & Ownership',\r\n      icon: Globe,\r\n      color: 'from-emerald-500 to-teal-600',\r\n      progress: 0\r\n    },\r\n    {\r\n      id: 'shelter',\r\n      title: 'Shelter & Feeding',\r\n      icon: Settings,\r\n      color: 'from-amber-500 to-yellow-600',\r\n      progress: 0\r\n    }\r\n  ];\r\n\r\n  const InputField = ({\r\n    label,\r\n    value,\r\n    onChange,\r\n    type = 'text',\r\n    placeholder,\r\n    required = false,\r\n    error,\r\n    className = '',\r\n    ...props\r\n  }: any) => (\r\n    <div className={`space-y-2 ${className}`}>\r\n      <label className=\"block text-sm font-medium text-gray-800\">\r\n        {label} {required && <span className=\"text-red-500\">*</span>}\r\n      </label>\r\n      <input\r\n        type={type}\r\n        value={value}\r\n        onChange={(e) => onChange(e.target.value)}\r\n        placeholder={placeholder}\r\n        className={`w-full px-3 py-2 bg-white border rounded-lg transition-all duration-200 text-gray-900 placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent hover:border-gray-400 ${\r\n          error ? 'border-red-300 bg-red-50' : 'border-gray-300'\r\n        }`}\r\n        {...props}\r\n      />\r\n      {error && (\r\n        <div className=\"flex items-center gap-2 text-sm text-red-600\">\r\n          <AlertCircle className=\"h-4 w-4\" />\r\n          {error}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  const SelectField = ({\r\n    label,\r\n    value,\r\n    onChange,\r\n    options,\r\n    placeholder,\r\n    required = false,\r\n    error,\r\n    className = ''\r\n  }: any) => (\r\n    <div className={`space-y-2 ${className}`}>\r\n      <label className=\"block text-sm font-medium text-gray-800\">\r\n        {label} {required && <span className=\"text-red-500\">*</span>}\r\n      </label>\r\n      <select\r\n        value={value}\r\n        onChange={(e) => onChange(e.target.value)}\r\n        className={`w-full px-3 py-2 bg-white border rounded-lg transition-all duration-200 text-gray-900 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent hover:border-gray-400 ${\r\n          error ? 'border-red-300 bg-red-50' : 'border-gray-300'\r\n        }`}\r\n      >\r\n        <option value=\"\">{placeholder}</option>\r\n        {options.map((option: any) => (\r\n          <option key={option.value} value={option.value}>\r\n            {option.label}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error && (\r\n        <div className=\"flex items-center gap-2 text-sm text-red-600\">\r\n          <AlertCircle className=\"h-4 w-4\" />\r\n          {error}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  const TextAreaField = ({\r\n    label,\r\n    value,\r\n    onChange,\r\n    placeholder,\r\n    rows = 3,\r\n    className = ''\r\n  }: any) => (\r\n    <div className={`space-y-2 ${className}`}>\r\n      <label className=\"block text-sm font-medium text-gray-800\">\r\n        {label}\r\n      </label>\r\n      <textarea\r\n        value={value}\r\n        onChange={(e) => onChange(e.target.value)}\r\n        placeholder={placeholder}\r\n        rows={rows}\r\n        className=\"w-full px-3 py-2 bg-white border border-gray-300 rounded-lg transition-all duration-200 text-gray-900 placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent hover:border-gray-400 resize-none\"\r\n      />\r\n    </div>\r\n  );\r\n\r\n  const FileUploadField = ({\r\n    label,\r\n    value,\r\n    onChange,\r\n    accept,\r\n    className = ''\r\n  }: any) => (\r\n    <div className={`space-y-2 ${className}`}>\r\n      <label className=\"block text-sm font-medium text-gray-800\">\r\n        {label}\r\n      </label>\r\n      <div className=\"relative\">\r\n        <input\r\n          type=\"file\"\r\n          accept={accept}\r\n          onChange={(e) => onChange(e.target.files?.[0] || null)}\r\n          className=\"hidden\"\r\n          id={label.replace(/\\s+/g, '-').toLowerCase()}\r\n        />\r\n        <label\r\n          htmlFor={label.replace(/\\s+/g, '-').toLowerCase()}\r\n          className=\"flex items-center justify-center w-full px-3 py-2 bg-white border-2 border-dashed border-gray-300 rounded-lg transition-all duration-200 cursor-pointer hover:border-blue-400 hover:bg-blue-50 group\"\r\n        >\r\n          <div className=\"flex items-center gap-3 text-gray-600 group-hover:text-blue-600\">\r\n            <Upload className=\"h-5 w-5\" />\r\n            <span className=\"text-sm font-medium\">\r\n              {value ? value.name : `Choose ${label.toLowerCase()}`}\r\n            </span>\r\n          </div>\r\n        </label>\r\n        {value && (\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => onChange(null)}\r\n            className=\"absolute top-2 right-2 p-1 bg-red-100 text-red-600 rounded-full hover:bg-red-200 transition-colors\"\r\n          >\r\n            <X className=\"h-4 w-4\" />\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"p-6 space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex justify-between items-center\">\r\n        <div className=\"flex items-center gap-4\">\r\n          <button\r\n            onClick={handleCancel}\r\n            className=\"flex items-center gap-2 px-4 py-2 text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded-lg transition-colors\"\r\n          >\r\n            <ArrowLeft className=\"h-5 w-5\" />\r\n            <span className=\"font-medium\">Back</span>\r\n          </button>\r\n\r\n          <div className=\"h-8 w-px bg-gray-300\"></div>\r\n\r\n          <div className=\"flex items-center gap-3\">\r\n            <div className=\"h-10 w-10 bg-blue-100 rounded-full flex items-center justify-center\">\r\n              <span className=\"text-2xl\">🐄</span>\r\n            </div>\r\n            <div>\r\n              <h2 className=\"text-2xl font-bold text-gray-900\">Register New Cattle</h2>\r\n              <p className=\"text-gray-600\">Complete cattle registration with comprehensive details</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex items-center gap-3\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={handleCancel}\r\n            className=\"px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            type=\"submit\"\r\n            form=\"cattle-form\"\r\n            disabled={isLoading}\r\n            className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 transition-colors\"\r\n          >\r\n            <Save className=\"h-4 w-4\" />\r\n            {isLoading ? 'Saving...' : 'Save Cattle'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Progress Indicator */}\r\n      <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 p-4\">\r\n        <div className=\"flex items-center justify-between overflow-x-auto\">\r\n          {sections.map((section, index) => {\r\n            const Icon = section.icon;\r\n            return (\r\n              <div key={section.id} className=\"flex items-center flex-shrink-0\">\r\n                <div className=\"flex items-center justify-center w-8 h-8 rounded-lg bg-blue-100 text-blue-600\">\r\n                  <Icon className=\"h-4 w-4\" />\r\n                </div>\r\n                <div className=\"ml-2\">\r\n                  <p className=\"text-xs font-medium text-gray-700\">{section.title}</p>\r\n                </div>\r\n                {index < sections.length - 1 && (\r\n                  <div className=\"w-8 h-px bg-gray-300 mx-3\"></div>\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Message Alert */}\r\n      {message && (\r\n        <div className={`p-4 rounded-lg border-l-4 ${\r\n          message.type === 'success'\r\n            ? 'bg-green-50 border-green-400 text-green-800'\r\n            : message.type === 'warning'\r\n            ? 'bg-yellow-50 border-yellow-400 text-yellow-800'\r\n            : 'bg-red-50 border-red-400 text-red-800'\r\n        }`}>\r\n          <div className=\"flex items-center gap-3\">\r\n            {message.type === 'success' ? (\r\n              <CheckCircle className=\"h-5 w-5\" />\r\n            ) : message.type === 'warning' ? (\r\n              <Clock className=\"h-5 w-5\" />\r\n            ) : (\r\n              <AlertCircle className=\"h-5 w-5\" />\r\n            )}\r\n            <span className=\"font-medium\">{message.text}</span>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <form id=\"cattle-form\" onSubmit={handleSubmit} className=\"space-y-6\">\r\n        {/* Main Grid Layout */}\r\n        <div className=\"grid grid-cols-1 xl:grid-cols-4 gap-6\">\r\n\r\n          {/* Left Section - 3 columns */}\r\n          <div className=\"xl:col-span-3 space-y-6\">\r\n\r\n            {/* Basic Identification */}\r\n            <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 p-6\">\r\n              <h2 className=\"text-lg font-semibold text-gray-900 mb-6 flex items-center gap-3\">\r\n                <div className=\"h-10 w-10 bg-blue-100 rounded-full flex items-center justify-center\">\r\n                  <User className=\"h-5 w-5 text-blue-600\" />\r\n                </div>\r\n                🐄 Basic Identification\r\n              </h2>\r\n\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n                  <InputField\r\n                    label=\"Unique Animal ID\"\r\n                    value={formData.uniqueAnimalId}\r\n                    onChange={(value: string) => handleInputChange('uniqueAnimalId', value)}\r\n                    placeholder=\"Enter unique animal ID\"\r\n                    required\r\n                    error={errors.uniqueAnimalId}\r\n                  />\r\n\r\n                  <InputField\r\n                    label=\"Name (Optional)\"\r\n                    value={formData.name}\r\n                    onChange={(value: string) => handleInputChange('name', value)}\r\n                    placeholder=\"Enter cattle name\"\r\n                  />\r\n\r\n                  <SelectField\r\n                    label=\"Breed\"\r\n                    value={formData.breed}\r\n                    onChange={(value: string) => handleInputChange('breed', value)}\r\n                    placeholder=\"Select Breed\"\r\n                    required\r\n                    error={errors.breed}\r\n                    options={[\r\n                      { value: 'gir', label: 'Gir' },\r\n                      { value: 'sahiwal', label: 'Sahiwal' },\r\n                      { value: 'sindhi', label: 'Red Sindhi' },\r\n                      { value: 'tharparkar', label: 'Tharparkar' },\r\n                      { value: 'holstein', label: 'Holstein Friesian' },\r\n                      { value: 'jersey', label: 'Jersey' },\r\n                      { value: 'crossbred', label: 'Crossbred' },\r\n                      { value: 'indigenous', label: 'Indigenous' }\r\n                    ]}\r\n                  />\r\n\r\n                  <SelectField\r\n                    label=\"Species\"\r\n                    value={formData.species}\r\n                    onChange={(value: string) => handleInputChange('species', value)}\r\n                    placeholder=\"Select Species\"\r\n                    required\r\n                    error={errors.species}\r\n                    options={[\r\n                      { value: 'cattle', label: 'Cattle' },\r\n                      { value: 'buffalo', label: 'Buffalo' },\r\n                      { value: 'goat', label: 'Goat' },\r\n                      { value: 'sheep', label: 'Sheep' }\r\n                    ]}\r\n                  />\r\n\r\n                  <SelectField\r\n                    label=\"Gender\"\r\n                    value={formData.gender}\r\n                    onChange={(value: string) => handleInputChange('gender', value)}\r\n                    placeholder=\"Select Gender\"\r\n                    required\r\n                    error={errors.gender}\r\n                    options={[\r\n                      { value: 'male', label: 'Male' },\r\n                      { value: 'female', label: 'Female' }\r\n                    ]}\r\n                  />\r\n\r\n                  <SelectField\r\n                    label=\"Color\"\r\n                    value={formData.color}\r\n                    onChange={(value: string) => handleInputChange('color', value)}\r\n                    placeholder=\"Select Color\"\r\n                    options={[\r\n                      { value: 'white', label: 'White' },\r\n                      { value: 'black', label: 'Black' },\r\n                      { value: 'brown', label: 'Brown' },\r\n                      { value: 'red', label: 'Red' },\r\n                      { value: 'grey', label: 'Grey' },\r\n                      { value: 'mixed', label: 'Mixed' }\r\n                    ]}\r\n                  />\r\n\r\n                  <InputField\r\n                    label=\"Date of Birth\"\r\n                    value={formData.dateOfBirth}\r\n                    onChange={(value: string) => handleInputChange('dateOfBirth', value)}\r\n                    type=\"date\"\r\n                  />\r\n\r\n                  <InputField\r\n                    label=\"Date of Entry\"\r\n                    value={formData.dateOfEntry}\r\n                    onChange={(value: string) => handleInputChange('dateOfEntry', value)}\r\n                    type=\"date\"\r\n                    required\r\n                    error={errors.dateOfEntry}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n            {/* Gaushala & Physical Characteristics */}\r\n            <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 p-6\">\r\n              <h2 className=\"text-lg font-semibold text-gray-900 mb-6 flex items-center gap-3\">\r\n                <div className=\"h-10 w-10 bg-blue-100 rounded-full flex items-center justify-center\">\r\n                  <Home className=\"h-5 w-5 text-blue-600\" />\r\n                </div>\r\n                🏠 Gaushala & Physical Details\r\n              </h2>\r\n\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n                  <SelectField\r\n                    label=\"Select Gaushala\"\r\n                    value={formData.gaushala}\r\n                    onChange={(value: string) => handleInputChange('gaushala', value)}\r\n                    placeholder=\"Select Gaushala\"\r\n                    required\r\n                    error={errors.gaushala}\r\n                    options={[\r\n                      { value: 'main_gaushala', label: 'Main Gaushala' },\r\n                      { value: 'branch_gaushala_1', label: 'Branch Gaushala 1' },\r\n                      { value: 'branch_gaushala_2', label: 'Branch Gaushala 2' },\r\n                      { value: 'temporary_shelter', label: 'Temporary Shelter' }\r\n                    ]}\r\n                  />\r\n\r\n                  <InputField\r\n                    label=\"Weight (kg)\"\r\n                    value={formData.weight}\r\n                    onChange={(value: string) => handleInputChange('weight', value)}\r\n                    type=\"number\"\r\n                    step=\"0.1\"\r\n                    placeholder=\"Weight in kilograms\"\r\n                  />\r\n\r\n                  <InputField\r\n                    label=\"Height (cm)\"\r\n                    value={formData.height}\r\n                    onChange={(value: string) => handleInputChange('height', value)}\r\n                    type=\"number\"\r\n                    placeholder=\"Height in centimeters\"\r\n                  />\r\n\r\n                  <SelectField\r\n                    label=\"Horn Status\"\r\n                    value={formData.hornStatus}\r\n                    onChange={(value: string) => handleInputChange('hornStatus', value)}\r\n                    placeholder=\"Select Status\"\r\n                    options={[\r\n                      { value: 'horned', label: 'Horned' },\r\n                      { value: 'dehorned', label: 'Dehorned' },\r\n                      { value: 'polled', label: 'Polled (Naturally hornless)' }\r\n                    ]}\r\n                  />\r\n\r\n                  <div className=\"lg:col-span-2\">\r\n                    <label className=\"block text-sm font-medium text-gray-800 mb-2\">\r\n                      RFID Tag Number <span className=\"text-red-500\">*</span>\r\n                    </label>\r\n                    <div className=\"flex gap-3\">\r\n                      <input\r\n                        type=\"text\"\r\n                        value={formData.rfidTagNumber}\r\n                        onChange={(e) => handleInputChange('rfidTagNumber', e.target.value)}\r\n                        placeholder=\"Scan or enter RFID tag\"\r\n                        className={`flex-1 px-4 py-3.5 bg-white border-2 rounded-xl transition-all duration-200 text-gray-900 placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:border-blue-500 hover:border-gray-300 ${\r\n                          errors.rfidTagNumber ? 'border-red-300 bg-red-50' : 'border-gray-200'\r\n                        }`}\r\n                        required\r\n                      />\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={handleScanRfid}\r\n                        disabled={isScanning}\r\n                        className=\"flex items-center gap-2 px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 disabled:opacity-50 transition-colors\"\r\n                      >\r\n                        <Scan className=\"h-5 w-5\" />\r\n                        {isScanning ? 'Scanning...' : 'Scan'}\r\n                      </button>\r\n                    </div>\r\n                    {errors.rfidTagNumber && (\r\n                      <div className=\"flex items-center gap-2 text-sm text-red-600 mt-2\">\r\n                        <AlertCircle className=\"h-4 w-4\" />\r\n                        {errors.rfidTagNumber}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n\r\n                  <InputField\r\n                    label=\"Ear Tag Number\"\r\n                    value={formData.earTagNumber}\r\n                    onChange={(value: string) => handleInputChange('earTagNumber', value)}\r\n                    placeholder=\"Ear tag number\"\r\n                  />\r\n\r\n                  <InputField\r\n                    label=\"Microchip Number\"\r\n                    value={formData.microchipNumber}\r\n                    onChange={(value: string) => handleInputChange('microchipNumber', value)}\r\n                    placeholder=\"Microchip number\"\r\n                  />\r\n\r\n                  <InputField\r\n                    label=\"Shed Number\"\r\n                    value={formData.shedNumber}\r\n                    onChange={(value: string) => handleInputChange('shedNumber', value)}\r\n                    placeholder=\"Assigned shed number\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n            {/* Health & Medical Records */}\r\n            <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 p-6\">\r\n              <h2 className=\"text-lg font-semibold text-gray-900 mb-6 flex items-center gap-3\">\r\n                <div className=\"h-10 w-10 bg-blue-100 rounded-full flex items-center justify-center\">\r\n                  <Activity className=\"h-5 w-5 text-blue-600\" />\r\n                </div>\r\n                🩺 Health & Medical Records\r\n              </h2>\r\n\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n                  <InputField\r\n                    label=\"Vaccination Status\"\r\n                    value={formData.vaccinationStatus}\r\n                    onChange={(value: string) => handleInputChange('vaccinationStatus', value)}\r\n                    placeholder=\"e.g., FMD, HS completed\"\r\n                  />\r\n\r\n                  <InputField\r\n                    label=\"Disability / Injury\"\r\n                    value={formData.disability}\r\n                    onChange={(value: string) => handleInputChange('disability', value)}\r\n                    placeholder=\"Any disabilities or injuries\"\r\n                  />\r\n\r\n                  <InputField\r\n                    label=\"Veterinarian Name\"\r\n                    value={formData.veterinarianName}\r\n                    onChange={(value: string) => handleInputChange('veterinarianName', value)}\r\n                    placeholder=\"Name of attending veterinarian\"\r\n                  />\r\n\r\n                  <InputField\r\n                    label=\"Veterinarian Contact\"\r\n                    value={formData.veterinarianContact}\r\n                    onChange={(value: string) => handleInputChange('veterinarianContact', value)}\r\n                    type=\"tel\"\r\n                    placeholder=\"Phone number\"\r\n                  />\r\n\r\n                  <InputField\r\n                    label=\"Last Health Check-up\"\r\n                    value={formData.lastHealthCheckup}\r\n                    onChange={(value: string) => handleInputChange('lastHealthCheckup', value)}\r\n                    type=\"date\"\r\n                  />\r\n\r\n                  <InputField\r\n                    label=\"Deworming Schedule\"\r\n                    value={formData.dewormingSchedule}\r\n                    onChange={(value: string) => handleInputChange('dewormingSchedule', value)}\r\n                    placeholder=\"e.g., Every 6 months\"\r\n                  />\r\n\r\n                  <TextAreaField\r\n                    label=\"Medical History\"\r\n                    value={formData.medicalHistory}\r\n                    onChange={(value: string) => handleInputChange('medicalHistory', value)}\r\n                    placeholder=\"Previous medical treatments, surgeries, etc.\"\r\n                    className=\"lg:col-span-3\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              {/* Additional Sections Grid */}\r\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n\r\n                {/* Reproductive Details (Female only) */}\r\n                {formData.gender === 'female' && (\r\n                  <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 p-6\">\r\n                    <h2 className=\"text-lg font-semibold text-gray-900 mb-6 flex items-center gap-3\">\r\n                      <div className=\"h-10 w-10 bg-blue-100 rounded-full flex items-center justify-center\">\r\n                        <Baby className=\"h-5 w-5 text-blue-600\" />\r\n                      </div>\r\n                      🤱 Reproductive Details\r\n                    </h2>\r\n\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                      <SelectField\r\n                        label=\"Milking Status\"\r\n                        value={formData.milkingStatus}\r\n                        onChange={(value: string) => handleInputChange('milkingStatus', value)}\r\n                        placeholder=\"Select Status\"\r\n                        options={[\r\n                          { value: 'lactating', label: 'Lactating' },\r\n                          { value: 'dry', label: 'Dry' },\r\n                          { value: 'pregnant', label: 'Pregnant' },\r\n                          { value: 'not_breeding', label: 'Not for Breeding' }\r\n                        ]}\r\n                      />\r\n\r\n                      <InputField\r\n                        label=\"Milk Yield Per Day (Liters)\"\r\n                        value={formData.milkYieldPerDay}\r\n                        onChange={(value: string) => handleInputChange('milkYieldPerDay', value)}\r\n                        type=\"number\"\r\n                        step=\"0.1\"\r\n                        placeholder=\"Daily milk yield\"\r\n                      />\r\n\r\n                      <InputField\r\n                        label=\"Number of Calves\"\r\n                        value={formData.numberOfCalves}\r\n                        onChange={(value: string) => handleInputChange('numberOfCalves', value)}\r\n                        type=\"number\"\r\n                        placeholder=\"Total calves born\"\r\n                      />\r\n\r\n                      <InputField\r\n                        label=\"Lactation Number\"\r\n                        value={formData.lactationNumber}\r\n                        onChange={(value: string) => handleInputChange('lactationNumber', value)}\r\n                        type=\"number\"\r\n                        placeholder=\"Current lactation number\"\r\n                      />\r\n\r\n                      <InputField\r\n                        label=\"Last Calving Date\"\r\n                        value={formData.lastCalvingDate}\r\n                        onChange={(value: string) => handleInputChange('lastCalvingDate', value)}\r\n                        type=\"date\"\r\n                      />\r\n\r\n                      <SelectField\r\n                        label=\"Pregnancy Status\"\r\n                        value={formData.pregnancyStatus}\r\n                        onChange={(value: string) => handleInputChange('pregnancyStatus', value)}\r\n                        placeholder=\"Select Status\"\r\n                        options={[\r\n                          { value: 'pregnant', label: 'Pregnant' },\r\n                          { value: 'not_pregnant', label: 'Not Pregnant' },\r\n                          { value: 'unknown', label: 'Unknown' }\r\n                        ]}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                {/* Origin & Ownership */}\r\n                <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 p-6\">\r\n                  <h2 className=\"text-lg font-semibold text-gray-900 mb-6 flex items-center gap-3\">\r\n                    <div className=\"h-10 w-10 bg-blue-100 rounded-full flex items-center justify-center\">\r\n                      <Globe className=\"h-5 w-5 text-blue-600\" />\r\n                    </div>\r\n                    🌍 Origin & Ownership\r\n                  </h2>\r\n\r\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                    <SelectField\r\n                      label=\"Source of Acquisition\"\r\n                      value={formData.sourceOfAcquisition}\r\n                      onChange={(value: string) => handleInputChange('sourceOfAcquisition', value)}\r\n                      placeholder=\"Select Source\"\r\n                      options={[\r\n                        { value: 'purchase', label: 'Purchase' },\r\n                        { value: 'donation', label: 'Donation' },\r\n                        { value: 'rescue', label: 'Rescue' },\r\n                        { value: 'transfer', label: 'Transfer' },\r\n                        { value: 'born_here', label: 'Born Here' }\r\n                      ]}\r\n                    />\r\n\r\n                    <InputField\r\n                      label=\"Previous Owner\"\r\n                      value={formData.previousOwner}\r\n                      onChange={(value: string) => handleInputChange('previousOwner', value)}\r\n                      placeholder=\"Name of previous owner\"\r\n                    />\r\n\r\n                    <InputField\r\n                      label=\"Date of Acquisition\"\r\n                      value={formData.dateOfAcquisition}\r\n                      onChange={(value: string) => handleInputChange('dateOfAcquisition', value)}\r\n                      type=\"date\"\r\n                    />\r\n\r\n                    <SelectField\r\n                      label=\"Ownership Status\"\r\n                      value={formData.ownershipStatus}\r\n                      onChange={(value: string) => handleInputChange('ownershipStatus', value)}\r\n                      placeholder=\"Select Status\"\r\n                      options={[\r\n                        { value: 'owned', label: 'Owned by Gaushala' },\r\n                        { value: 'fostered', label: 'Fostered' },\r\n                        { value: 'temporary', label: 'Temporary Care' },\r\n                        { value: 'sponsored', label: 'Sponsored' }\r\n                      ]}\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Shelter & Feeding */}\r\n                <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 p-6\">\r\n                  <h2 className=\"text-lg font-semibold text-gray-900 mb-6 flex items-center gap-3\">\r\n                    <div className=\"h-10 w-10 bg-blue-100 rounded-full flex items-center justify-center\">\r\n                      <Settings className=\"h-5 w-5 text-blue-600\" />\r\n                    </div>\r\n                    🏠 Shelter & Feeding\r\n                  </h2>\r\n\r\n                  <div className=\"space-y-6\">\r\n                    <SelectField\r\n                      label=\"Type of Feed\"\r\n                      value={formData.typeOfFeed}\r\n                      onChange={(value: string) => handleInputChange('typeOfFeed', value)}\r\n                      placeholder=\"Select Feed Type\"\r\n                      options={[\r\n                        { value: 'grass', label: 'Grass' },\r\n                        { value: 'hay', label: 'Hay' },\r\n                        { value: 'silage', label: 'Silage' },\r\n                        { value: 'concentrate', label: 'Concentrate' },\r\n                        { value: 'mixed', label: 'Mixed Feed' }\r\n                      ]}\r\n                    />\r\n\r\n                    <TextAreaField\r\n                      label=\"Feeding Schedule\"\r\n                      value={formData.feedingSchedule}\r\n                      onChange={(value: string) => handleInputChange('feedingSchedule', value)}\r\n                      placeholder=\"Feeding times and quantities\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n          {/* Right Sidebar */}\r\n          <div className=\"xl:col-span-1 space-y-6\">\r\n\r\n            {/* Supporting Documents */}\r\n            <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 p-6 sticky top-4\">\r\n              <h2 className=\"text-lg font-semibold text-gray-900 mb-6 flex items-center gap-3\">\r\n                <div className=\"h-10 w-10 bg-blue-100 rounded-full flex items-center justify-center\">\r\n                  <FileText className=\"h-5 w-5 text-blue-600\" />\r\n                </div>\r\n                📎 Documents\r\n              </h2>\r\n\r\n                <div className=\"space-y-6\">\r\n                  <FileUploadField\r\n                    label=\"Photo\"\r\n                    value={formData.photoFile}\r\n                    onChange={(value: File | null) => handleInputChange('photoFile', value)}\r\n                    accept=\"image/*\"\r\n                  />\r\n\r\n                  <FileUploadField\r\n                    label=\"Health Certificate\"\r\n                    value={formData.healthCertificate}\r\n                    onChange={(value: File | null) => handleInputChange('healthCertificate', value)}\r\n                    accept=\".pdf\"\r\n                  />\r\n\r\n                  <FileUploadField\r\n                    label=\"Vaccination Record\"\r\n                    value={formData.vaccinationRecord}\r\n                    onChange={(value: File | null) => handleInputChange('vaccinationRecord', value)}\r\n                    accept=\".pdf\"\r\n                  />\r\n\r\n                  <FileUploadField\r\n                    label=\"Purchase/Donation Document\"\r\n                    value={formData.purchaseDocument}\r\n                    onChange={(value: File | null) => handleInputChange('purchaseDocument', value)}\r\n                    accept=\".pdf\"\r\n                  />\r\n                </div>\r\n\r\n                {/* Quick Stats */}\r\n                <div className=\"mt-8 pt-6 border-t border-gray-200\">\r\n                  <h3 className=\"text-sm font-medium text-gray-700 mb-4\">Form Progress</h3>\r\n                  <div className=\"space-y-3\">\r\n                    <div className=\"flex justify-between text-sm\">\r\n                      <span className=\"text-gray-600\">Required Fields</span>\r\n                      <span className=\"font-medium text-gray-900\">\r\n                        {Object.keys(errors).length === 0 ? '✓ Complete' : `${Object.keys(errors).length} missing`}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"flex justify-between text-sm\">\r\n                      <span className=\"text-gray-600\">Documents</span>\r\n                      <span className=\"font-medium text-gray-900\">\r\n                        {[formData.photoFile, formData.healthCertificate, formData.vaccinationRecord, formData.purchaseDocument].filter(Boolean).length}/4\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}","/**\r\n * Cattle Detail Page - View and Update cattle information\r\n */\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport {\r\n  Edit,\r\n  Save,\r\n  ArrowLeft,\r\n  Calendar,\r\n  MapPin,\r\n  Activity,\r\n  Heart,\r\n  FileText,\r\n  Camera,\r\n  Trash2,\r\n  AlertTriangle\r\n} from 'lucide-react';\r\nimport { gauShalaApi, Cattle, MedicalRecord } from '../../services/gaushala/api';\r\n\r\ninterface LanguageContextType {\r\n  language: 'hi' | 'en';\r\n  t: (key: string) => string;\r\n}\r\n\r\ninterface CattleDetailProps {\r\n  languageContext: LanguageContextType;\r\n}\r\n\r\nconst translations = {\r\n  en: {\r\n    title: 'Cattle Details',\r\n    subtitle: 'View and manage cattle information',\r\n    edit: 'Edit',\r\n    save: 'Save Changes',\r\n    cancel: 'Cancel',\r\n    delete: 'Delete Cattle',\r\n    confirmDelete: 'Are you sure you want to delete this cattle record?',\r\n    basicInfo: 'Basic Information',\r\n    name: 'Name',\r\n    rfidTag: 'RFID Tag',\r\n    breed: 'Breed',\r\n    age: 'Age',\r\n    weight: 'Weight',\r\n    health: 'Health Status',\r\n    owner: 'Owner',\r\n    ownerId: 'Owner ID',\r\n    locationInfo: 'Location Information',\r\n    address: 'Address',\r\n    coordinates: 'Coordinates',\r\n    medicalHistory: 'Medical History',\r\n    addMedicalRecord: 'Add Medical Record',\r\n    collectionHistory: 'Collection History',\r\n    totalCollected: 'Total Dung Collected',\r\n    lastCollection: 'Last Collection',\r\n    photo: 'Photo',\r\n    changePhoto: 'Change Photo',\r\n    loading: 'Loading...',\r\n    saving: 'Saving...',\r\n    success: 'Cattle updated successfully!',\r\n    error: 'Failed to update cattle',\r\n    notFound: 'Cattle not found',\r\n    medicalRecordType: 'Type',\r\n    medicalRecordDate: 'Date',\r\n    medicalRecordDescription: 'Description',\r\n    medicalRecordVet: 'Veterinarian',\r\n    medicalRecordMedication: 'Medication',\r\n    medicalRecordNextCheckup: 'Next Checkup',\r\n    recordTypes: {\r\n      checkup: 'Checkup',\r\n      vaccination: 'Vaccination',\r\n      treatment: 'Treatment',\r\n      surgery: 'Surgery'\r\n    },\r\n    healthStatus: {\r\n      healthy: 'Healthy',\r\n      sick: 'Sick',\r\n      recovering: 'Recovering',\r\n      vaccination_due: 'Vaccination Due'\r\n    },\r\n    breeds: {\r\n      gir: 'Gir',\r\n      sindhi: 'Red Sindhi',\r\n      holstein: 'Holstein Friesian',\r\n      jersey: 'Jersey',\r\n      sahiwal: 'Sahiwal',\r\n      tharparkar: 'Tharparkar'\r\n    }\r\n  },\r\n  hi: {\r\n    title: 'पशु विवरण',\r\n    subtitle: 'पशु की जानकारी देखें और प्रबंधित करें',\r\n    edit: 'संपादित करें',\r\n    save: 'परिवर्तन सहेजें',\r\n    cancel: 'रद्द करें',\r\n    delete: 'पशु हटाएं',\r\n    confirmDelete: 'क्या आप वाकई इस पशु का रिकॉर्ड हटाना चाहते हैं?',\r\n    basicInfo: 'बुनियादी जानकारी',\r\n    name: 'नाम',\r\n    rfidTag: 'RFID टैग',\r\n    breed: 'नस्ल',\r\n    age: 'आयु',\r\n    weight: 'वजन',\r\n    health: 'स्वास्थ्य स्थिति',\r\n    owner: 'मालिक',\r\n    ownerId: 'मालिक ID',\r\n    locationInfo: 'स्थान की जानकारी',\r\n    address: 'पता',\r\n    coordinates: 'निर्देशांक',\r\n    medicalHistory: 'चिकित्सा इतिहास',\r\n    addMedicalRecord: 'चिकित्सा रिकॉर्ड जोड़ें',\r\n    collectionHistory: 'संग्रह इतिहास',\r\n    totalCollected: 'कुल गोबर संग्रह',\r\n    lastCollection: 'अंतिम संग्रह',\r\n    photo: 'फोटो',\r\n    changePhoto: 'फोटो बदलें',\r\n    loading: 'लोड हो रहा है...',\r\n    saving: 'सहेजा जा रहा है...',\r\n    success: 'पशु सफलतापूर्वक अपडेट किया गया!',\r\n    error: 'पशु अपडेट करने में विफल',\r\n    notFound: 'पशु नहीं मिला',\r\n    medicalRecordType: 'प्रकार',\r\n    medicalRecordDate: 'तारीख',\r\n    medicalRecordDescription: 'विवरण',\r\n    medicalRecordVet: 'पशु चिकित्सक',\r\n    medicalRecordMedication: 'दवा',\r\n    medicalRecordNextCheckup: 'अगली जांच',\r\n    recordTypes: {\r\n      checkup: 'जांच',\r\n      vaccination: 'टीकाकरण',\r\n      treatment: 'उपचार',\r\n      surgery: 'सर्जरी'\r\n    },\r\n    healthStatus: {\r\n      healthy: 'स्वस्थ',\r\n      sick: 'बीमार',\r\n      recovering: 'ठीक हो रहा',\r\n      vaccination_due: 'टीकाकरण देय'\r\n    },\r\n    breeds: {\r\n      gir: 'गिर',\r\n      sindhi: 'लाल सिंधी',\r\n      holstein: 'होल्स्टीन फ्रीजियन',\r\n      jersey: 'जर्सी',\r\n      sahiwal: 'साहीवाल',\r\n      tharparkar: 'थारपारकर'\r\n    }\r\n  }\r\n};\r\n\r\nexport default function CattleDetail({ languageContext }: CattleDetailProps) {\r\n  const { id } = useParams<{ id: string }>();\r\n  const navigate = useNavigate();\r\n  const { t } = languageContext;\r\n\r\n  const [cattle, setCattle] = useState<Cattle | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [isSaving, setIsSaving] = useState(false);\r\n  const [editData, setEditData] = useState<Partial<Cattle>>({});\r\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\r\n  const [message, setMessage] = useState<{ type: 'success' | 'error'; text: string } | null>(null);\r\n  const [newMedicalRecord, setNewMedicalRecord] = useState({\r\n    type: 'checkup' as const,\r\n    date: '',\r\n    description: '',\r\n    veterinarian: '',\r\n    medication: '',\r\n    nextCheckup: ''\r\n  });\r\n  const [showAddMedical, setShowAddMedical] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      loadCattleDetail();\r\n    }\r\n  }, [id]);\r\n\r\n  const loadCattleDetail = async () => {\r\n    try {\r\n      const response = await gauShalaApi.cattle.getCattleById(id!);\r\n      if (response.success && response.data) {\r\n        setCattle(response.data);\r\n        setEditData(response.data);\r\n      } else {\r\n        setMessage({\r\n          type: 'error',\r\n          text: translations[languageContext.language].notFound\r\n        });\r\n      }\r\n    } catch (error) {\r\n      setMessage({\r\n        type: 'error',\r\n        text: translations[languageContext.language].error\r\n      });\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    setIsEditing(true);\r\n    setMessage(null);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsEditing(false);\r\n    setEditData(cattle || {});\r\n    setMessage(null);\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    if (!cattle || !id) return;\r\n\r\n    setIsSaving(true);\r\n    try {\r\n      const response = await gauShalaApi.cattle.updateCattle(id, editData);\r\n      if (response.success && response.data) {\r\n        setCattle(response.data);\r\n        setIsEditing(false);\r\n        setMessage({\r\n          type: 'success',\r\n          text: translations[languageContext.language].success\r\n        });\r\n      } else {\r\n        throw new Error(response.error);\r\n      }\r\n    } catch (error) {\r\n      setMessage({\r\n        type: 'error',\r\n        text: translations[languageContext.language].error\r\n      });\r\n    } finally {\r\n      setIsSaving(false);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    if (!id) return;\r\n\r\n    try {\r\n      const response = await gauShalaApi.cattle.deleteCattle(id);\r\n      if (response.success) {\r\n        navigate('/gaushala/cattle');\r\n      } else {\r\n        throw new Error(response.error);\r\n      }\r\n    } catch (error) {\r\n      setMessage({\r\n        type: 'error',\r\n        text: translations[languageContext.language].error\r\n      });\r\n    }\r\n    setShowDeleteConfirm(false);\r\n  };\r\n\r\n  const handleAddMedicalRecord = async () => {\r\n    if (!cattle || !id) return;\r\n\r\n    try {\r\n      const recordData = {\r\n        ...newMedicalRecord,\r\n        date: new Date(newMedicalRecord.date).getTime(),\r\n        nextCheckup: newMedicalRecord.nextCheckup ? new Date(newMedicalRecord.nextCheckup).getTime() : undefined\r\n      };\r\n\r\n      const response = await gauShalaApi.cattle.addMedicalRecord(id, recordData);\r\n      if (response.success) {\r\n        await loadCattleDetail(); // Reload to get updated medical history\r\n        setShowAddMedical(false);\r\n        setNewMedicalRecord({\r\n          type: 'checkup',\r\n          date: '',\r\n          description: '',\r\n          veterinarian: '',\r\n          medication: '',\r\n          nextCheckup: ''\r\n        });\r\n      }\r\n    } catch (error) {\r\n      setMessage({\r\n        type: 'error',\r\n        text: 'Failed to add medical record'\r\n      });\r\n    }\r\n  };\r\n\r\n  const formatDate = (timestamp: number) => {\r\n    return new Date(timestamp).toLocaleDateString();\r\n  };\r\n\r\n  const getHealthStatusColor = (health: string) => {\r\n    switch (health) {\r\n      case 'healthy': return 'text-green-600 bg-green-100';\r\n      case 'sick': return 'text-red-600 bg-red-100';\r\n      case 'recovering': return 'text-yellow-600 bg-yellow-100';\r\n      case 'vaccination_due': return 'text-orange-600 bg-orange-100';\r\n      default: return 'text-gray-600 bg-gray-100';\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto\"></div>\r\n          <p className=\"mt-4 text-gray-600\">{translations[languageContext.language].loading}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!cattle) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <AlertTriangle className=\"h-12 w-12 text-red-600 mx-auto mb-4\" />\r\n          <p className=\"text-gray-600\">{translations[languageContext.language].notFound}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 py-6\">\r\n      <div className=\"max-w-6xl mx-auto px-6\">\r\n        {/* Header */}\r\n        <div className=\"mb-6\">\r\n          <div className=\"flex items-center gap-4 mb-4\">\r\n            <button\r\n              onClick={() => navigate('/gaushala/cattle')}\r\n              className=\"flex items-center gap-2 px-3 py-2 text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded-lg transition-colors\"\r\n            >\r\n              <ArrowLeft className=\"h-4 w-4\" />\r\n              Back to Cattle List\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"flex items-center gap-3\">\r\n              <div className=\"flex items-center justify-center w-12 h-12 bg-blue-100 rounded-xl\">\r\n                <span className=\"text-3xl\">🐄</span>\r\n              </div>\r\n              <div>\r\n                <h1 className=\"text-2xl font-bold text-gray-900\">\r\n                  {cattle.name}\r\n                </h1>\r\n                <p className=\"text-gray-600\">\r\n                  RFID: {cattle.rfidTag}\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"flex gap-3\">\r\n              {!isEditing ? (\r\n                <>\r\n                  <button\r\n                    onClick={handleEdit}\r\n                    className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\r\n                  >\r\n                    <Edit className=\"h-4 w-4\" />\r\n                    {translations[languageContext.language].edit}\r\n                  </button>\r\n                  <button\r\n                    onClick={() => setShowDeleteConfirm(true)}\r\n                    className=\"flex items-center gap-2 px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700\"\r\n                  >\r\n                    <Trash2 className=\"h-4 w-4\" />\r\n                    {translations[languageContext.language].delete}\r\n                  </button>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <button\r\n                    onClick={handleCancel}\r\n                    className=\"px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50\"\r\n                  >\r\n                    {translations[languageContext.language].cancel}\r\n                  </button>\r\n                  <button\r\n                    onClick={handleSave}\r\n                    disabled={isSaving}\r\n                    className=\"flex items-center gap-2 px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 disabled:opacity-50\"\r\n                  >\r\n                    <Save className=\"h-4 w-4\" />\r\n                    {isSaving\r\n                      ? translations[languageContext.language].saving\r\n                      : translations[languageContext.language].save\r\n                    }\r\n                  </button>\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Message */}\r\n        {message && (\r\n          <div className={`mb-6 p-4 rounded-lg ${\r\n            message.type === 'success'\r\n              ? 'bg-green-50 text-green-800 border border-green-200'\r\n              : 'bg-red-50 text-red-800 border border-red-200'\r\n          }`}>\r\n            {message.text}\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\r\n          {/* Main Information */}\r\n          <div className=\"lg:col-span-2 space-y-6\">\r\n            {/* Basic Information */}\r\n            <div className=\"bg-white rounded-xl p-6 shadow-sm\">\r\n              <h2 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center gap-2\">\r\n                <span className=\"text-2xl\">🐄</span>\r\n                {translations[languageContext.language].basicInfo}\r\n              </h2>\r\n\r\n              <div className=\"grid grid-cols-2 gap-4\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-500 mb-1\">\r\n                    {translations[languageContext.language].name}\r\n                  </label>\r\n                  {isEditing ? (\r\n                    <input\r\n                      type=\"text\"\r\n                      value={editData.name || ''}\r\n                      onChange={(e) => setEditData(prev => ({ ...prev, name: e.target.value }))}\r\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                    />\r\n                  ) : (\r\n                    <p className=\"text-gray-900\">{cattle.name}</p>\r\n                  )}\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-500 mb-1\">\r\n                    {translations[languageContext.language].rfidTag}\r\n                  </label>\r\n                  <p className=\"text-gray-900 font-mono\">{cattle.rfidTag}</p>\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-500 mb-1\">\r\n                    {translations[languageContext.language].breed}\r\n                  </label>\r\n                  {isEditing ? (\r\n                    <select\r\n                      value={editData.breed || ''}\r\n                      onChange={(e) => setEditData(prev => ({ ...prev, breed: e.target.value }))}\r\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                    >\r\n                      <option value=\"gir\">{translations[languageContext.language].breeds.gir}</option>\r\n                      <option value=\"sindhi\">{translations[languageContext.language].breeds.sindhi}</option>\r\n                      <option value=\"holstein\">{translations[languageContext.language].breeds.holstein}</option>\r\n                      <option value=\"jersey\">{translations[languageContext.language].breeds.jersey}</option>\r\n                    </select>\r\n                  ) : (\r\n                    <p className=\"text-gray-900\">{translations[languageContext.language].breeds[cattle.breed] || cattle.breed}</p>\r\n                  )}\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-500 mb-1\">\r\n                    {translations[languageContext.language].health}\r\n                  </label>\r\n                  {isEditing ? (\r\n                    <select\r\n                      value={editData.health || ''}\r\n                      onChange={(e) => setEditData(prev => ({ ...prev, health: e.target.value as any }))}\r\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                    >\r\n                      <option value=\"healthy\">{translations[languageContext.language].healthStatus.healthy}</option>\r\n                      <option value=\"sick\">{translations[languageContext.language].healthStatus.sick}</option>\r\n                      <option value=\"recovering\">{translations[languageContext.language].healthStatus.recovering}</option>\r\n                      <option value=\"vaccination_due\">{translations[languageContext.language].healthStatus.vaccination_due}</option>\r\n                    </select>\r\n                  ) : (\r\n                    <span className={`inline-flex px-2 py-1 text-xs font-medium rounded-full ${getHealthStatusColor(cattle.health)}`}>\r\n                      {translations[languageContext.language].healthStatus[cattle.health]}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-500 mb-1\">\r\n                    {translations[languageContext.language].age}\r\n                  </label>\r\n                  {isEditing ? (\r\n                    <input\r\n                      type=\"number\"\r\n                      value={editData.age || ''}\r\n                      onChange={(e) => setEditData(prev => ({ ...prev, age: parseInt(e.target.value) }))}\r\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                    />\r\n                  ) : (\r\n                    <p className=\"text-gray-900\">{cattle.age} months</p>\r\n                  )}\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-500 mb-1\">\r\n                    {translations[languageContext.language].weight}\r\n                  </label>\r\n                  {isEditing ? (\r\n                    <input\r\n                      type=\"number\"\r\n                      step=\"0.1\"\r\n                      value={editData.weight || ''}\r\n                      onChange={(e) => setEditData(prev => ({ ...prev, weight: parseFloat(e.target.value) }))}\r\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                    />\r\n                  ) : (\r\n                    <p className=\"text-gray-900\">{cattle.weight} kg</p>\r\n                  )}\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-500 mb-1\">\r\n                    {translations[languageContext.language].owner}\r\n                  </label>\r\n                  {isEditing ? (\r\n                    <input\r\n                      type=\"text\"\r\n                      value={editData.owner || ''}\r\n                      onChange={(e) => setEditData(prev => ({ ...prev, owner: e.target.value }))}\r\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                    />\r\n                  ) : (\r\n                    <p className=\"text-gray-900\">{cattle.owner}</p>\r\n                  )}\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-500 mb-1\">\r\n                    {translations[languageContext.language].ownerId}\r\n                  </label>\r\n                  <p className=\"text-gray-900\">{cattle.ownerId}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Location Information */}\r\n            <div className=\"bg-white rounded-xl p-6 shadow-sm\">\r\n              <h2 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center gap-2\">\r\n                <MapPin className=\"h-5 w-5 text-blue-600\" />\r\n                {translations[languageContext.language].locationInfo}\r\n              </h2>\r\n\r\n              <div className=\"space-y-4\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-500 mb-1\">\r\n                    {translations[languageContext.language].address}\r\n                  </label>\r\n                  <p className=\"text-gray-900\">{cattle.location.address || 'Not provided'}</p>\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-500 mb-1\">\r\n                    {translations[languageContext.language].coordinates}\r\n                  </label>\r\n                  <p className=\"text-gray-900\">\r\n                    {cattle.location.latitude}, {cattle.location.longitude}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Medical History */}\r\n            <div className=\"bg-white rounded-xl p-6 shadow-sm\">\r\n              <div className=\"flex items-center justify-between mb-4\">\r\n                <h2 className=\"text-lg font-semibold text-gray-900 flex items-center gap-2\">\r\n                  <span className=\"text-2xl\">🐄</span>\r\n                  {translations[languageContext.language].medicalHistory}\r\n                </h2>\r\n                <button\r\n                  onClick={() => setShowAddMedical(true)}\r\n                  className=\"flex items-center gap-2 px-3 py-1 bg-blue-600 text-white rounded-lg hover:bg-blue-700 text-sm\"\r\n                >\r\n                  <FileText className=\"h-4 w-4\" />\r\n                  {translations[languageContext.language].addMedicalRecord}\r\n                </button>\r\n              </div>\r\n\r\n              {cattle.medicalHistory.length > 0 ? (\r\n                <div className=\"space-y-4\">\r\n                  {cattle.medicalHistory.map((record, index) => (\r\n                    <div key={index} className=\"border border-gray-200 rounded-lg p-4\">\r\n                      <div className=\"flex items-center justify-between mb-2\">\r\n                        <span className=\"font-medium text-gray-900\">\r\n                          {translations[languageContext.language].recordTypes[record.type]}\r\n                        </span>\r\n                        <span className=\"text-sm text-gray-500\">\r\n                          {formatDate(record.date)}\r\n                        </span>\r\n                      </div>\r\n                      <p className=\"text-gray-700 mb-2\">{record.description}</p>\r\n                      <div className=\"text-sm text-gray-600\">\r\n                        <p>Veterinarian: {record.veterinarian}</p>\r\n                        {record.medication && <p>Medication: {record.medication}</p>}\r\n                        {record.nextCheckup && <p>Next Checkup: {formatDate(record.nextCheckup)}</p>}\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              ) : (\r\n                <p className=\"text-gray-500 text-center py-8\">No medical records found</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Sidebar */}\r\n          <div className=\"space-y-6\">\r\n            {/* Photo */}\r\n            <div className=\"bg-white rounded-xl p-6 shadow-sm\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center gap-2\">\r\n                <Camera className=\"h-5 w-5 text-blue-600\" />\r\n                {translations[languageContext.language].photo}\r\n              </h3>\r\n\r\n              <div className=\"text-center\">\r\n                {cattle.photoUrl ? (\r\n                  <img\r\n                    src={cattle.photoUrl}\r\n                    alt={cattle.name}\r\n                    className=\"w-full h-48 object-cover rounded-lg mb-4\"\r\n                  />\r\n                ) : (\r\n                  <div className=\"w-full h-48 bg-gray-100 rounded-lg flex items-center justify-center mb-4\">\r\n                    <span className=\"text-6xl\">🐄</span>\r\n                  </div>\r\n                )}\r\n\r\n                <button className=\"text-sm text-blue-600 hover:text-blue-700\">\r\n                  {translations[languageContext.language].changePhoto}\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Collection Stats */}\r\n            <div className=\"bg-white rounded-xl p-6 shadow-sm\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center gap-2\">\r\n                <Activity className=\"h-5 w-5 text-blue-600\" />\r\n                {translations[languageContext.language].collectionHistory}\r\n              </h3>\r\n\r\n              <div className=\"space-y-4\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-500 mb-1\">\r\n                    {translations[languageContext.language].totalCollected}\r\n                  </label>\r\n                  <p className=\"text-2xl font-bold text-green-600\">\r\n                    {cattle.totalDungCollected} kg\r\n                  </p>\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-500 mb-1\">\r\n                    {translations[languageContext.language].lastCollection}\r\n                  </label>\r\n                  <p className=\"text-gray-900\">\r\n                    {cattle.lastDungCollection\r\n                      ? formatDate(cattle.lastDungCollection)\r\n                      : 'No collections yet'\r\n                    }\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Delete Confirmation Modal */}\r\n        {showDeleteConfirm && (\r\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n            <div className=\"bg-white rounded-xl p-6 max-w-md w-full\">\r\n              <div className=\"flex items-center gap-3 mb-4\">\r\n                <AlertTriangle className=\"h-6 w-6 text-red-600\" />\r\n                <h3 className=\"text-lg font-semibold text-gray-900\">\r\n                  {translations[languageContext.language].delete}\r\n                </h3>\r\n              </div>\r\n\r\n              <p className=\"text-gray-600 mb-6\">\r\n                {translations[languageContext.language].confirmDelete}\r\n              </p>\r\n\r\n              <div className=\"flex justify-end gap-3\">\r\n                <button\r\n                  onClick={() => setShowDeleteConfirm(false)}\r\n                  className=\"px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50\"\r\n                >\r\n                  {translations[languageContext.language].cancel}\r\n                </button>\r\n                <button\r\n                  onClick={handleDelete}\r\n                  className=\"px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700\"\r\n                >\r\n                  {translations[languageContext.language].delete}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Add Medical Record Modal */}\r\n        {showAddMedical && (\r\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n            <div className=\"bg-white rounded-xl p-6 max-w-md w-full\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">\r\n                {translations[languageContext.language].addMedicalRecord}\r\n              </h3>\r\n\r\n              <div className=\"space-y-4\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                    {translations[languageContext.language].medicalRecordType}\r\n                  </label>\r\n                  <select\r\n                    value={newMedicalRecord.type}\r\n                    onChange={(e) => setNewMedicalRecord(prev => ({ ...prev, type: e.target.value as any }))}\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                  >\r\n                    <option value=\"checkup\">{translations[languageContext.language].recordTypes.checkup}</option>\r\n                    <option value=\"vaccination\">{translations[languageContext.language].recordTypes.vaccination}</option>\r\n                    <option value=\"treatment\">{translations[languageContext.language].recordTypes.treatment}</option>\r\n                    <option value=\"surgery\">{translations[languageContext.language].recordTypes.surgery}</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                    {translations[languageContext.language].medicalRecordDate}\r\n                  </label>\r\n                  <input\r\n                    type=\"date\"\r\n                    value={newMedicalRecord.date}\r\n                    onChange={(e) => setNewMedicalRecord(prev => ({ ...prev, date: e.target.value }))}\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                    {translations[languageContext.language].medicalRecordDescription}\r\n                  </label>\r\n                  <textarea\r\n                    value={newMedicalRecord.description}\r\n                    onChange={(e) => setNewMedicalRecord(prev => ({ ...prev, description: e.target.value }))}\r\n                    rows={3}\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                    {translations[languageContext.language].medicalRecordVet}\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={newMedicalRecord.veterinarian}\r\n                    onChange={(e) => setNewMedicalRecord(prev => ({ ...prev, veterinarian: e.target.value }))}\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex justify-end gap-3 mt-6\">\r\n                <button\r\n                  onClick={() => setShowAddMedical(false)}\r\n                  className=\"px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50\"\r\n                >\r\n                  {translations[languageContext.language].cancel}\r\n                </button>\r\n                <button\r\n                  onClick={handleAddMedicalRecord}\r\n                  className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\r\n                >\r\n                  Add Record\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}","/**\r\n * All Transactions Page - Shows all field worker transactions\r\n * Displays comprehensive transaction history with field worker management\r\n */\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport {\r\n  Calendar,\r\n  Scale,\r\n  User,\r\n  MapPin,\r\n  Star,\r\n  Clock,\r\n  CheckCircle,\r\n  X,\r\n  Download,\r\n  Filter,\r\n  Search,\r\n  Coins,\r\n  BarChart3,\r\n  Users\r\n} from 'lucide-react';\r\nimport { BiogasServiceClient } from '../../services/microservices';\r\n\r\ninterface Contribution {\r\n  id: string;\r\n  externalId: string;\r\n  contributionDate: string;\r\n  weightKg: number;\r\n  ratePerKg: number;\r\n  totalAmount: number;\r\n  paymentMethod: 'UPI' | 'CASH' | 'NEFT' | 'AEPS';\r\n  paymentStatus: 'PENDING' | 'PROCESSING' | 'COMPLETED' | 'FAILED';\r\n  qualityGrade: 'PREMIUM' | 'STANDARD' | 'BASIC';\r\n  moistureContent?: number;\r\n  gpsLatitude?: number;\r\n  gpsLongitude?: number;\r\n  workflowStatus: string;\r\n  validationStatus: string;\r\n  notes?: string;\r\n  operatorUserId?: string;\r\n  operatorName?: string;\r\n  operatorPhone?: string;\r\n  farmer?: {\r\n    name: string;\r\n    externalId: string;\r\n    phone?: string;\r\n  };\r\n}\r\n\r\ninterface Props {\r\n  onClose?: () => void;\r\n}\r\n\r\nconst translations = {\r\n  en: {\r\n    title: 'All Field Worker Transactions',\r\n    subtitle: 'Comprehensive transaction history across all field workers',\r\n    summary: 'Summary',\r\n    totalTransactions: 'Total Transactions',\r\n    totalWeight: 'Total Weight',\r\n    totalValue: 'Total Value',\r\n    activeWorkers: 'Active Workers',\r\n    searchPlaceholder: 'Search by transaction ID, farmer, or field worker...',\r\n    filterByPayment: 'Filter by Payment',\r\n    filterByQuality: 'Filter by Quality',\r\n    filterByWorker: 'Filter by Field Worker',\r\n    allPayments: 'All Payments',\r\n    allQualities: 'All Qualities',\r\n    allWorkers: 'All Field Workers',\r\n    date: 'Date',\r\n    transactionId: 'Transaction ID',\r\n    farmer: 'Farmer',\r\n    fieldWorker: 'Field Worker',\r\n    weight: 'Weight (kg)',\r\n    quality: 'Quality',\r\n    amount: 'Amount (₹)',\r\n    paymentMethod: 'Payment',\r\n    status: 'Status',\r\n    actions: 'Actions',\r\n    view: 'View Details',\r\n    premium: 'Premium',\r\n    standard: 'Standard',\r\n    basic: 'Basic',\r\n    pending: 'Pending',\r\n    processing: 'Processing',\r\n    completed: 'Completed',\r\n    failed: 'Failed',\r\n    exportData: 'Export Data',\r\n    noTransactions: 'No transactions found',\r\n    kg: 'kg',\r\n    close: 'Close',\r\n    viewDetails: 'View Details',\r\n    location: 'Location',\r\n    moistureContent: 'Moisture Content',\r\n    notes: 'Notes',\r\n    workflowStatus: 'Workflow Status',\r\n    validationStatus: 'Validation Status'\r\n  }\r\n};\r\n\r\nexport default function AllTransactions({ onClose }: Props) {\r\n  const [language] = useState<'en'>('en');\r\n  const [contributions, setContributions] = useState<Contribution[]>([]);\r\n  const [filteredContributions, setFilteredContributions] = useState<Contribution[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [paymentFilter, setPaymentFilter] = useState('');\r\n  const [qualityFilter, setQualityFilter] = useState('');\r\n  const [workerFilter, setWorkerFilter] = useState('');\r\n  const [selectedContribution, setSelectedContribution] = useState<Contribution | null>(null);\r\n  const [showDetailsModal, setShowDetailsModal] = useState(false);\r\n\r\n  const t = (key: string): string => {\r\n    return translations[language][key as keyof typeof translations['en']] || key;\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadAllContributions();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    applyFilters();\r\n  }, [contributions, searchTerm, paymentFilter, qualityFilter, workerFilter]);\r\n\r\n  const loadAllContributions = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await BiogasServiceClient.getAllContributions();\r\n\r\n      if (response && Array.isArray(response)) {\r\n        setContributions(response);\r\n      } else {\r\n        console.error('Invalid response format:', response);\r\n        setContributions([]);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading contributions:', error);\r\n      setContributions([]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const applyFilters = () => {\r\n    let filtered = [...contributions];\r\n\r\n    // Search filter\r\n    if (searchTerm) {\r\n      filtered = filtered.filter(c =>\r\n        c.externalId.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        (c.farmer?.name && c.farmer.name.toLowerCase().includes(searchTerm.toLowerCase())) ||\r\n        (c.operatorName && c.operatorName.toLowerCase().includes(searchTerm.toLowerCase())) ||\r\n        (c.notes && c.notes.toLowerCase().includes(searchTerm.toLowerCase()))\r\n      );\r\n    }\r\n\r\n    // Payment method filter\r\n    if (paymentFilter) {\r\n      filtered = filtered.filter(c => c.paymentMethod === paymentFilter);\r\n    }\r\n\r\n    // Quality filter\r\n    if (qualityFilter) {\r\n      filtered = filtered.filter(c => c.qualityGrade === qualityFilter);\r\n    }\r\n\r\n    // Field worker filter\r\n    if (workerFilter) {\r\n      filtered = filtered.filter(c => c.operatorUserId === workerFilter);\r\n    }\r\n\r\n    setFilteredContributions(filtered);\r\n  };\r\n\r\n  const calculateSummary = () => {\r\n    const totalTransactions = contributions.length;\r\n    const totalWeight = contributions.reduce((sum, c) => sum + c.weightKg, 0);\r\n    const totalValue = contributions.reduce((sum, c) => sum + c.totalAmount, 0);\r\n    const uniqueWorkers = new Set(contributions.map(c => c.operatorUserId).filter(Boolean));\r\n\r\n    return {\r\n      totalTransactions,\r\n      totalWeight: totalWeight.toFixed(1),\r\n      totalValue: totalValue.toFixed(2),\r\n      activeWorkers: uniqueWorkers.size\r\n    };\r\n  };\r\n\r\n  const getUniqueWorkers = () => {\r\n    const workers = new Map();\r\n    contributions.forEach(c => {\r\n      if (c.operatorUserId && c.operatorName) {\r\n        workers.set(c.operatorUserId, c.operatorName);\r\n      }\r\n    });\r\n    return Array.from(workers.entries()).map(([id, name]) => ({ id, name }));\r\n  };\r\n\r\n  const formatDate = (dateString: string): string => {\r\n    return new Date(dateString).toLocaleDateString('en-IN');\r\n  };\r\n\r\n  const getPaymentStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'COMPLETED':\r\n        return 'bg-green-100 text-green-800';\r\n      case 'PENDING':\r\n        return 'bg-yellow-100 text-yellow-800';\r\n      case 'PROCESSING':\r\n        return 'bg-blue-100 text-blue-800';\r\n      case 'FAILED':\r\n        return 'bg-red-100 text-red-800';\r\n      default:\r\n        return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  const getQualityColor = (quality: string) => {\r\n    switch (quality) {\r\n      case 'PREMIUM':\r\n        return 'bg-green-100 text-green-800';\r\n      case 'STANDARD':\r\n        return 'bg-blue-100 text-blue-800';\r\n      case 'BASIC':\r\n        return 'bg-yellow-100 text-yellow-800';\r\n      default:\r\n        return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  const handleViewDetails = (contribution: Contribution) => {\r\n    setSelectedContribution(contribution);\r\n    setShowDetailsModal(true);\r\n  };\r\n\r\n  const handleExportData = () => {\r\n    const csvData = contributions.map(c => ({\r\n      'Transaction ID': c.externalId,\r\n      'Date': formatDate(c.contributionDate),\r\n      'Farmer': c.farmer?.name || 'Unknown',\r\n      'Field Worker': c.operatorName || 'Unknown',\r\n      'Phone': c.operatorPhone || 'N/A',\r\n      'Weight (kg)': c.weightKg,\r\n      'Quality': c.qualityGrade,\r\n      'Rate (₹/kg)': c.ratePerKg,\r\n      'Total Amount (₹)': c.totalAmount,\r\n      'Payment Method': c.paymentMethod,\r\n      'Payment Status': c.paymentStatus,\r\n      'Location': c.gpsLatitude && c.gpsLongitude ? `${c.gpsLatitude}, ${c.gpsLongitude}` : 'N/A',\r\n      'Notes': c.notes || 'N/A'\r\n    }));\r\n\r\n    const csvContent = [\r\n      Object.keys(csvData[0] || {}).join(','),\r\n      ...csvData.map(row => Object.values(row).join(','))\r\n    ].join('\\n');\r\n\r\n    const blob = new Blob([csvContent], { type: 'text/csv' });\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = `field-worker-transactions-${new Date().toISOString().split('T')[0]}.csv`;\r\n    a.click();\r\n    window.URL.revokeObjectURL(url);\r\n  };\r\n\r\n  const summary = calculateSummary();\r\n  const uniqueWorkers = getUniqueWorkers();\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-screen\">\r\n        <div className=\"bg-white rounded-xl p-8 shadow-lg\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto\"></div>\r\n          <p className=\"text-center mt-4\">Loading transactions...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 p-6\">\r\n      <div className=\"max-w-7xl mx-auto\">\r\n        {/* Header */}\r\n        <div className=\"bg-white rounded-xl shadow-sm p-6 mb-6\">\r\n          <div className=\"flex justify-between items-center\">\r\n            <div>\r\n              <h1 className=\"text-2xl font-bold text-gray-900\">{t('title')}</h1>\r\n              <p className=\"text-gray-600 mt-1\">{t('subtitle')}</p>\r\n            </div>\r\n            {onClose && (\r\n              <button\r\n                onClick={onClose}\r\n                className=\"text-gray-400 hover:text-gray-600 p-2 rounded-full hover:bg-gray-100\"\r\n              >\r\n                <X className=\"h-6 w-6\" />\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Summary Cards */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-6\">\r\n          <div className=\"bg-white rounded-xl shadow-sm p-6\">\r\n            <div className=\"flex items-center\">\r\n              <BarChart3 className=\"h-10 w-10 text-blue-600\" />\r\n              <div className=\"ml-4\">\r\n                <p className=\"text-sm font-medium text-gray-600\">{t('totalTransactions')}</p>\r\n                <p className=\"text-2xl font-bold text-gray-900\">{summary.totalTransactions}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"bg-white rounded-xl shadow-sm p-6\">\r\n            <div className=\"flex items-center\">\r\n              <Scale className=\"h-10 w-10 text-green-600\" />\r\n              <div className=\"ml-4\">\r\n                <p className=\"text-sm font-medium text-gray-600\">{t('totalWeight')}</p>\r\n                <p className=\"text-2xl font-bold text-gray-900\">{summary.totalWeight} {t('kg')}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"bg-white rounded-xl shadow-sm p-6\">\r\n            <div className=\"flex items-center\">\r\n              <Coins className=\"h-10 w-10 text-yellow-600\" />\r\n              <div className=\"ml-4\">\r\n                <p className=\"text-sm font-medium text-gray-600\">{t('totalValue')}</p>\r\n                <p className=\"text-2xl font-bold text-gray-900\">₹{summary.totalValue}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"bg-white rounded-xl shadow-sm p-6\">\r\n            <div className=\"flex items-center\">\r\n              <Users className=\"h-10 w-10 text-purple-600\" />\r\n              <div className=\"ml-4\">\r\n                <p className=\"text-sm font-medium text-gray-600\">{t('activeWorkers')}</p>\r\n                <p className=\"text-2xl font-bold text-gray-900\">{summary.activeWorkers}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Filters */}\r\n        <div className=\"bg-white rounded-xl shadow-sm p-6 mb-6\">\r\n          <div className=\"grid grid-cols-1 md:grid-cols-5 gap-4\">\r\n            <div className=\"md:col-span-2\">\r\n              <div className=\"relative\">\r\n                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder={t('searchPlaceholder')}\r\n                  value={searchTerm}\r\n                  onChange={(e) => setSearchTerm(e.target.value)}\r\n                  className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <select\r\n              value={workerFilter}\r\n              onChange={(e) => setWorkerFilter(e.target.value)}\r\n              className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n            >\r\n              <option value=\"\">{t('allWorkers')}</option>\r\n              {uniqueWorkers.map((worker) => (\r\n                <option key={worker.id} value={worker.id}>{worker.name}</option>\r\n              ))}\r\n            </select>\r\n            <select\r\n              value={paymentFilter}\r\n              onChange={(e) => setPaymentFilter(e.target.value)}\r\n              className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n            >\r\n              <option value=\"\">{t('allPayments')}</option>\r\n              <option value=\"UPI\">UPI</option>\r\n              <option value=\"CASH\">Cash</option>\r\n              <option value=\"NEFT\">NEFT</option>\r\n              <option value=\"AEPS\">AEPS</option>\r\n            </select>\r\n            <select\r\n              value={qualityFilter}\r\n              onChange={(e) => setQualityFilter(e.target.value)}\r\n              className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n            >\r\n              <option value=\"\">{t('allQualities')}</option>\r\n              <option value=\"PREMIUM\">{t('premium')}</option>\r\n              <option value=\"STANDARD\">{t('standard')}</option>\r\n              <option value=\"BASIC\">{t('basic')}</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"flex justify-end mt-4\">\r\n            <button\r\n              onClick={handleExportData}\r\n              className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\r\n            >\r\n              <Download className=\"h-4 w-4\" />\r\n              {t('exportData')}\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Transactions Table */}\r\n        <div className=\"bg-white rounded-xl shadow-sm overflow-hidden\">\r\n          <div className=\"overflow-x-auto\">\r\n            <table className=\"w-full\">\r\n              <thead className=\"bg-gray-50 border-b border-gray-200\">\r\n                <tr>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t('date')}</th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t('transactionId')}</th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t('farmer')}</th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t('fieldWorker')}</th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t('weight')}</th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t('quality')}</th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t('amount')}</th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t('paymentMethod')}</th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t('status')}</th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t('actions')}</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                {filteredContributions.map((contribution) => (\r\n                  <tr key={contribution.id} className=\"hover:bg-gray-50 transition-colors\">\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                      <div className=\"flex items-center\">\r\n                        <Calendar className=\"h-4 w-4 text-gray-400 mr-2\" />\r\n                        {formatDate(contribution.contributionDate)}\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-mono text-gray-900\">\r\n                      {contribution.externalId}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                      <div>\r\n                        <div className=\"font-medium\">{contribution.farmer?.name || 'Unknown'}</div>\r\n                        <div className=\"text-xs text-gray-500\">{contribution.farmer?.externalId}</div>\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                      <div className=\"flex items-center\">\r\n                        <User className=\"h-4 w-4 text-gray-400 mr-2\" />\r\n                        <div>\r\n                          <div className=\"font-medium\">{contribution.operatorName || 'Unknown'}</div>\r\n                          <div className=\"text-xs text-gray-500\">{contribution.operatorPhone}</div>\r\n                        </div>\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                      {contribution.weightKg} {t('kg')}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${getQualityColor(contribution.qualityGrade)}`}>\r\n                        {t(contribution.qualityGrade.toLowerCase())}\r\n                      </span>\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-semibold text-green-600\">\r\n                      ₹{contribution.totalAmount.toFixed(2)}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                      {contribution.paymentMethod}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${getPaymentStatusColor(contribution.paymentStatus)}`}>\r\n                        {t(contribution.paymentStatus.toLowerCase())}\r\n                      </span>\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n                      <button\r\n                        onClick={() => handleViewDetails(contribution)}\r\n                        className=\"text-blue-600 hover:text-blue-900 p-1 rounded hover:bg-blue-50\"\r\n                        title={t('viewDetails')}\r\n                      >\r\n                        <Clock className=\"h-4 w-4\" />\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n\r\n          {filteredContributions.length === 0 && (\r\n            <div className=\"text-center py-12\">\r\n              <Scale className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\r\n              <p className=\"text-gray-500 text-lg\">{t('noTransactions')}</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Details Modal */}\r\n        {showDetailsModal && selectedContribution && (\r\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\r\n            <div className=\"bg-white rounded-xl max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\r\n              <div className=\"flex justify-between items-center p-6 border-b\">\r\n                <h3 className=\"text-xl font-semibold\">Transaction Details</h3>\r\n                <button\r\n                  onClick={() => setShowDetailsModal(false)}\r\n                  className=\"text-gray-400 hover:text-gray-600\"\r\n                >\r\n                  <X className=\"h-6 w-6\" />\r\n                </button>\r\n              </div>\r\n              <div className=\"p-6 space-y-6\">\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                  <div>\r\n                    <label className=\"text-sm font-medium text-gray-500\">Transaction ID</label>\r\n                    <p className=\"text-lg font-mono\">{selectedContribution.externalId}</p>\r\n                  </div>\r\n                  <div>\r\n                    <label className=\"text-sm font-medium text-gray-500\">Date</label>\r\n                    <p className=\"text-lg\">{formatDate(selectedContribution.contributionDate)}</p>\r\n                  </div>\r\n                  <div>\r\n                    <label className=\"text-sm font-medium text-gray-500\">Farmer</label>\r\n                    <p className=\"text-lg\">{selectedContribution.farmer?.name || 'Unknown'}</p>\r\n                    <p className=\"text-sm text-gray-500\">{selectedContribution.farmer?.externalId}</p>\r\n                  </div>\r\n                  <div>\r\n                    <label className=\"text-sm font-medium text-gray-500\">Field Worker</label>\r\n                    <p className=\"text-lg\">{selectedContribution.operatorName || 'Unknown'}</p>\r\n                    <p className=\"text-sm text-gray-500\">{selectedContribution.operatorPhone}</p>\r\n                  </div>\r\n                  <div>\r\n                    <label className=\"text-sm font-medium text-gray-500\">Weight</label>\r\n                    <p className=\"text-lg\">{selectedContribution.weightKg} kg</p>\r\n                  </div>\r\n                  <div>\r\n                    <label className=\"text-sm font-medium text-gray-500\">Rate per kg</label>\r\n                    <p className=\"text-lg\">₹{selectedContribution.ratePerKg}</p>\r\n                  </div>\r\n                  <div>\r\n                    <label className=\"text-sm font-medium text-gray-500\">Total Amount</label>\r\n                    <p className=\"text-lg font-semibold text-green-600\">₹{selectedContribution.totalAmount}</p>\r\n                  </div>\r\n                  <div>\r\n                    <label className=\"text-sm font-medium text-gray-500\">Payment Method</label>\r\n                    <p className=\"text-lg\">{selectedContribution.paymentMethod}</p>\r\n                  </div>\r\n                  {selectedContribution.moistureContent && (\r\n                    <div>\r\n                      <label className=\"text-sm font-medium text-gray-500\">Moisture Content</label>\r\n                      <p className=\"text-lg\">{selectedContribution.moistureContent}%</p>\r\n                    </div>\r\n                  )}\r\n                  {selectedContribution.gpsLatitude && selectedContribution.gpsLongitude && (\r\n                    <div>\r\n                      <label className=\"text-sm font-medium text-gray-500\">Location</label>\r\n                      <p className=\"text-lg\">{selectedContribution.gpsLatitude}, {selectedContribution.gpsLongitude}</p>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                {selectedContribution.notes && (\r\n                  <div>\r\n                    <label className=\"text-sm font-medium text-gray-500\">Notes</label>\r\n                    <p className=\"text-lg\">{selectedContribution.notes}</p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}","/**\r\n * GauShala Management System - Field Worker Dashboard\r\n * Comprehensive cattle management, dung collection tracking, and transaction history\r\n * Uses BaseLayout for consistent UI architecture\r\n */\r\n\r\nimport { useEffect } from 'react';\r\nimport { Routes, Route, useNavigate, useLocation } from 'react-router-dom';\r\nimport { Users, Home, Receipt } from 'lucide-react';\r\nimport { usePlatform } from '../contexts/PlatformContext';\r\nimport BaseLayout, { NavigationItem, BreadcrumbItem } from '@/components/layout/BaseLayout';\r\nimport GauShalaHome from './gaushala/GauShalaHome';\r\nimport CattleManagement from './gaushala/CattleManagement';\r\nimport AddCattle from './gaushala/AddCattle';\r\nimport CattleDetail from './gaushala/CattleDetail';\r\nimport AllTransactions from './gaushala/AllTransactions';\r\n\r\n// Language Context\r\ninterface LanguageContextType {\r\n  language: 'hi' | 'en';\r\n  setLanguage: (lang: 'hi' | 'en') => void;\r\n  t: (key: string) => string;\r\n}\r\n\r\nconst translations = {\r\n  en: {\r\n    title: 'GauShala Management',\r\n    subtitle: 'Comprehensive cattle and dung collection management',\r\n    home: 'Dashboard',\r\n    cattle: 'Cattle Management',\r\n    addCattle: 'Add Cattle',\r\n    cattleDetails: 'Cattle Details',\r\n    transactions: 'Transaction History',\r\n    allTransactions: 'All Field Worker Transactions',\r\n    settings: 'Settings',\r\n    hindi: 'हिंदी',\r\n    english: 'English'\r\n  },\r\n  hi: {\r\n    title: 'गौशाला प्रबंधन',\r\n    subtitle: 'व्यापक पशु और गोबर संग्रह प्रबंधन',\r\n    home: 'डैशबोर्ड',\r\n    cattle: 'पशु प्रबंधन',\r\n    addCattle: 'पशु जोड़ें',\r\n    cattleDetails: 'पशु विवरण',\r\n    transactions: 'लेन-देन का इतिहास',\r\n    allTransactions: 'सभी फील्ड वर्कर लेन-देन',\r\n    settings: 'सेटिंग्स',\r\n    hindi: 'हिंदी',\r\n    english: 'English'\r\n  }\r\n};\r\n\r\nexport default function GauShala() {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const { platformSettings, updateBreadcrumbs } = usePlatform();\r\n\r\n  const t = (key: string): string => {\r\n    const keys = key.split('.');\r\n    let value: any = translations[platformSettings.language];\r\n    for (const k of keys) {\r\n      value = value?.[k];\r\n    }\r\n    return value || key;\r\n  };\r\n\r\n  const languageContext: LanguageContextType = {\r\n    language: platformSettings.language,\r\n    setLanguage: () => {}, // This will be handled by the global platform context\r\n    t\r\n  };\r\n\r\n  // Get current tab from URL\r\n  const getCurrentTab = () => {\r\n    const path = location.pathname;\r\n    if (path.includes('/cattle/add')) return 'addCattle';\r\n    if (path.includes('/cattle/') && path.split('/').length > 3) return 'cattleDetails';\r\n    if (path.includes('/cattle')) return 'cattle';\r\n    if (path.includes('/all-transactions')) return 'allTransactions';\r\n    return 'home';\r\n  };\r\n\r\n  const setActiveTab = (tab: string) => {\r\n    switch (tab) {\r\n      case 'home':\r\n        navigate('/gaushala');\r\n        updateBreadcrumbs([\r\n          { label: t('title'), url: '/gaushala', module: 'gaushala' },\r\n          { label: t('home'), url: '/gaushala', module: 'gaushala' }\r\n        ]);\r\n        break;\r\n      case 'cattle':\r\n        navigate('/gaushala/cattle');\r\n        updateBreadcrumbs([\r\n          { label: t('title'), url: '/gaushala', module: 'gaushala' },\r\n          { label: t('cattle'), url: '/gaushala/cattle', module: 'gaushala' }\r\n        ]);\r\n        break;\r\n      case 'allTransactions':\r\n        navigate('/gaushala/all-transactions');\r\n        updateBreadcrumbs([\r\n          { label: t('title'), url: '/gaushala', module: 'gaushala' },\r\n          { label: t('allTransactions'), url: '/gaushala/all-transactions', module: 'gaushala' }\r\n        ]);\r\n        break;\r\n    }\r\n  };\r\n\r\n  const activeTab = getCurrentTab();\r\n\r\n  // Generate breadcrumbs based on current route\r\n  const getBreadcrumbs = (): BreadcrumbItem[] => {\r\n    const currentTab = getCurrentTab();\r\n    switch (currentTab) {\r\n      case 'home':\r\n        return [\r\n          { label: 'Gausakhi', onClick: () => navigate('/gaushala') },\r\n          { label: 'Dashboard' }\r\n        ];\r\n      case 'cattle':\r\n        return [\r\n          { label: 'Gausakhi', onClick: () => navigate('/gaushala') },\r\n          { label: 'Cattle Management' }\r\n        ];\r\n      case 'addCattle':\r\n        return [\r\n          { label: 'Gausakhi', onClick: () => navigate('/gaushala') },\r\n          { label: 'Cattle Management', onClick: () => navigate('/gaushala/cattle') },\r\n          { label: 'Add Cattle' }\r\n        ];\r\n      case 'cattleDetails':\r\n        return [\r\n          { label: 'Gausakhi', onClick: () => navigate('/gaushala') },\r\n          { label: 'Cattle Management', onClick: () => navigate('/gaushala/cattle') },\r\n          { label: 'Cattle Details' }\r\n        ];\r\n      case 'allTransactions':\r\n        return [\r\n          { label: 'Gausakhi', onClick: () => navigate('/gaushala') },\r\n          { label: 'Transaction History' }\r\n        ];\r\n      default:\r\n        return [{ label: 'Gausakhi' }];\r\n    }\r\n  };\r\n\r\n  // Define navigation items for BaseLayout\r\n  const navigationItems: NavigationItem[] = [\r\n    {\r\n      id: 'home',\r\n      label: 'Dashboard',\r\n      icon: <Home className=\"w-4 h-4\" />,\r\n      onClick: () => setActiveTab('home'),\r\n      isActive: activeTab === 'home'\r\n    },\r\n    {\r\n      id: 'cattle',\r\n      label: 'Cattle Management',\r\n      icon: <Users className=\"w-4 h-4\" />,\r\n      onClick: () => setActiveTab('cattle'),\r\n      isActive: activeTab === 'cattle' || activeTab === 'addCattle' || activeTab === 'cattleDetails'\r\n    },\r\n    {\r\n      id: 'allTransactions',\r\n      label: 'Transaction History',\r\n      icon: <Receipt className=\"w-4 h-4\" />,\r\n      onClick: () => setActiveTab('allTransactions'),\r\n      isActive: activeTab === 'allTransactions'\r\n    }\r\n  ];\r\n\r\n  // Update breadcrumbs when component loads or location changes\r\n  useEffect(() => {\r\n    const currentTab = getCurrentTab();\r\n    switch (currentTab) {\r\n      case 'home':\r\n        updateBreadcrumbs([\r\n          { label: t('title'), url: '/gaushala', module: 'gaushala' },\r\n          { label: t('home'), url: '/gaushala', module: 'gaushala' }\r\n        ]);\r\n        break;\r\n      case 'cattle':\r\n        updateBreadcrumbs([\r\n          { label: t('title'), url: '/gaushala', module: 'gaushala' },\r\n          { label: t('cattle'), url: '/gaushala/cattle', module: 'gaushala' }\r\n        ]);\r\n        break;\r\n      case 'addCattle':\r\n        updateBreadcrumbs([\r\n          { label: t('title'), url: '/gaushala', module: 'gaushala' },\r\n          { label: t('cattle'), url: '/gaushala/cattle', module: 'gaushala' },\r\n          { label: t('addCattle'), url: '/gaushala/cattle/add', module: 'gaushala' }\r\n        ]);\r\n        break;\r\n      case 'cattleDetails':\r\n        updateBreadcrumbs([\r\n          { label: t('title'), url: '/gaushala', module: 'gaushala' },\r\n          { label: t('cattle'), url: '/gaushala/cattle', module: 'gaushala' },\r\n          { label: t('cattleDetails'), url: location.pathname, module: 'gaushala' }\r\n        ]);\r\n        break;\r\n      case 'allTransactions':\r\n        updateBreadcrumbs([\r\n          { label: t('title'), url: '/gaushala', module: 'gaushala' },\r\n          { label: t('allTransactions'), url: '/gaushala/all-transactions', module: 'gaushala' }\r\n        ]);\r\n        break;\r\n    }\r\n  }, [location.pathname, platformSettings.language]);\r\n\r\n  return (\r\n    <BaseLayout\r\n      moduleName=\"Gausakhi\"\r\n      moduleSubtitle=\"Comprehensive cattle and dung collection management\"\r\n      navigationItems={navigationItems}\r\n      breadcrumbs={getBreadcrumbs()}\r\n      userInfo={{\r\n        name: \"Ramesh Kumar\",\r\n        role: \"Field Worker\",\r\n      }}\r\n    >\r\n      <Routes>\r\n        <Route path=\"/\" element={<GauShalaHome languageContext={languageContext} />} />\r\n        <Route path=\"/cattle\" element={<CattleManagement languageContext={languageContext} />} />\r\n        <Route path=\"/cattle/add\" element={<AddCattle languageContext={languageContext} />} />\r\n        <Route path=\"/cattle/:id\" element={<CattleDetail languageContext={languageContext} />} />\r\n        <Route path=\"/all-transactions\" element={<AllTransactions />} />\r\n      </Routes>\r\n    </BaseLayout>\r\n  );\r\n}","import * as React from \"react\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nexport interface ProgressProps\r\n  extends React.HTMLAttributes<HTMLDivElement> {\r\n  value?: number\r\n  max?: number\r\n}\r\n\r\nconst Progress = React.forwardRef<HTMLDivElement, ProgressProps>(\r\n  ({ className, value = 0, max = 100, ...props }, ref) => (\r\n    <div\r\n      ref={ref}\r\n      className={cn(\r\n        \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      <div\r\n        className=\"h-full w-full flex-1 bg-primary transition-all\"\r\n        style={{ transform: `translateX(-${100 - (value / max) * 100}%)` }}\r\n      />\r\n    </div>\r\n  )\r\n)\r\nProgress.displayName = \"Progress\"\r\n\r\nexport { Progress }","import React from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '../../components/ui/card';\nimport { Badge } from '../../components/ui/badge';\nimport { Button } from '../../components/ui/button';\nimport { Progress } from '../../components/ui/progress';\nimport { Separator } from '../../components/ui/separator';\nimport {\n  Activity,\n  TrendingUp,\n  TrendingDown,\n  Zap,\n  Droplets,\n  BarChart3,\n  Users,\n  Calendar,\n  Clock,\n  ArrowUpRight,\n  Factory,\n  AlertTriangle,\n  CheckCircle2,\n  Thermometer,\n  Gauge,\n  CheckCircle\n} from 'lucide-react';\nimport {\n  LineChart, Line, AreaChart, Area,\n  XAxis, YAxis, CartesianGrid, ResponsiveContainer, Legend, Tooltip,\n  PieChart, Pie, Cell, BarChart, Bar\n} from 'recharts';\n\n// Type definitions for digester data\ninterface DigesterData {\n  id: string;\n  name: string;\n  status: string;\n  temperature: number;\n  pressure: number;\n  methaneLevel: number;\n  dailyProduction: number;\n  efficiency: number;\n  lastUpdated: string;\n  trends?: {\n    methane: number;\n    production: number;\n  };\n}\n\n// Mock data for dashboard overview\nconst overviewData = {\n  totalDigesters: 3,\n  activeDigesters: 2,\n  maintenanceDigesters: 1,\n  totalProduction: 445.5, // m³\n  averageEfficiency: 83.7, // %\n  criticalAlerts: 0,\n  warningAlerts: 1,\n  totalBatches: 156,\n  pendingPayments: 12,\n  scheduledPickups: 8\n};\n\n// Mock digester data\nconst digestersData: DigesterData[] = [\n  {\n    id: 'D001',\n    name: 'Digester Alpha-1',\n    status: 'active',\n    temperature: 35.5,\n    pressure: 1.2,\n    methaneLevel: 65,\n    dailyProduction: 150.5,\n    efficiency: 85,\n    lastUpdated: new Date().toISOString(),\n    trends: { methane: 2, production: 5 }\n  },\n  {\n    id: 'D002',\n    name: 'Digester Alpha-2',\n    status: 'active',\n    temperature: 37.2,\n    pressure: 1.5,\n    methaneLevel: 68,\n    dailyProduction: 175.0,\n    efficiency: 88,\n    lastUpdated: new Date().toISOString(),\n    trends: { methane: 1, production: 3 }\n  },\n  {\n    id: 'D003',\n    name: 'Digester Alpha-3',\n    status: 'maintenance',\n    temperature: 32.1,\n    pressure: 0.8,\n    methaneLevel: 58,\n    dailyProduction: 120.0,\n    efficiency: 78,\n    lastUpdated: new Date().toISOString(),\n    trends: { methane: -1, production: -2 }\n  }\n];\n\nconst productionTrend = [\n  { month: 'Jan', production: 380, efficiency: 85 },\n  { month: 'Feb', production: 420, efficiency: 87 },\n  { month: 'Mar', production: 445, efficiency: 84 },\n  { month: 'Apr', production: 465, efficiency: 88 },\n  { month: 'May', production: 445, efficiency: 86 }\n];\n\nconst statusDistribution = [\n  { name: 'Active', value: 2, color: '#22c55e' },\n  { name: 'Maintenance', value: 1, color: '#f59e0b' },\n  { name: 'Offline', value: 0, color: '#ef4444' }\n];\n\nconst KPICard: React.FC<{\n  title: string;\n  value: string;\n  change: string;\n  trend: 'up' | 'down' | 'neutral';\n  icon: React.ReactNode;\n  className?: string;\n}> = ({ title, value, change, trend, icon, className = '' }) => {\n  const getTrendColor = () => {\n    switch (trend) {\n      case 'up': return 'text-green-600';\n      case 'down': return 'text-red-600';\n      default: return 'text-gray-600';\n    }\n  };\n\n  const getTrendIcon = () => {\n    switch (trend) {\n      case 'up': return <TrendingUp className=\"w-3 h-3\" />;\n      case 'down': return <TrendingDown className=\"w-3 h-3\" />;\n      default: return <Activity className=\"w-3 h-3\" />;\n    }\n  };\n\n  return (\n    <Card className={`relative overflow-hidden ${className}`}>\n      <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n        <CardTitle className=\"text-sm font-medium text-muted-foreground\">{title}</CardTitle>\n        <div className=\"h-8 w-8 rounded-lg bg-primary/10 flex items-center justify-center\">\n          {icon}\n        </div>\n      </CardHeader>\n      <CardContent>\n        <div className=\"text-2xl font-bold tracking-tight\">{value}</div>\n        <div className={`flex items-center gap-1 text-xs ${getTrendColor()}`}>\n          {getTrendIcon()}\n          {change}\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nconst DigesterCard: React.FC<{ digester: DigesterData }> = ({ digester }) => {\n  const statusColor = digester.status === 'active' ? 'bg-green-100 text-green-800 border-green-200' :\n                     digester.status === 'maintenance' ? 'bg-yellow-100 text-yellow-800 border-yellow-200' :\n                     'bg-red-100 text-red-800 border-red-200';\n\n  const statusIcon = digester.status === 'active' ? CheckCircle : AlertTriangle;\n  const StatusIcon = statusIcon;\n\n  return (\n    <Card className=\"hover:shadow-lg transition-all duration-300 border-0 bg-gradient-to-br from-white to-slate-50\">\n      <CardHeader className=\"pb-3\">\n        <div className=\"flex items-center justify-between\">\n          <CardTitle className=\"text-lg font-bold text-slate-800\">{digester.name}</CardTitle>\n          <Badge className={`${statusColor} border font-semibold capitalize flex items-center gap-1`}>\n            <StatusIcon className=\"w-3 h-3\" />\n            {digester.status}\n          </Badge>\n        </div>\n        <p className=\"text-sm text-slate-500 font-medium\">\n          Last Updated: {new Date(digester.lastUpdated).toLocaleTimeString()}\n        </p>\n      </CardHeader>\n      <CardContent className=\"space-y-4\">\n        {/* Metrics Grid */}\n        <div className=\"grid grid-cols-2 gap-4\">\n          <div className=\"bg-gradient-to-br from-orange-50 to-red-50 p-3 rounded-lg\">\n            <div className=\"flex items-center gap-2\">\n              <Thermometer className=\"w-4 h-4 text-orange-600\" />\n              <span className=\"text-sm font-semibold text-orange-700\">Temperature</span>\n            </div>\n            <div className=\"text-lg font-bold text-orange-900\">{digester.temperature}°C</div>\n          </div>\n\n          <div className=\"bg-gradient-to-br from-blue-50 to-indigo-50 p-3 rounded-lg\">\n            <div className=\"flex items-center gap-2\">\n              <Gauge className=\"w-4 h-4 text-blue-600\" />\n              <span className=\"text-sm font-semibold text-blue-700\">Pressure</span>\n            </div>\n            <div className=\"text-lg font-bold text-blue-900\">{digester.pressure} kPa</div>\n          </div>\n        </div>\n\n        {/* Methane Level */}\n        <div className=\"bg-gradient-to-br from-yellow-50 to-orange-50 p-3 rounded-lg\">\n          <div className=\"flex items-center justify-between mb-2\">\n            <div className=\"flex items-center gap-2\">\n              <Zap className=\"w-4 h-4 text-yellow-600\" />\n              <span className=\"text-sm font-semibold text-yellow-700\">Methane</span>\n            </div>\n            <div className=\"flex items-center gap-1\">\n              <span className=\"text-lg font-bold text-yellow-900\">{digester.methaneLevel}%</span>\n              {digester.trends?.methane && digester.trends.methane > 0 ? (\n                <TrendingUp className=\"w-4 h-4 text-green-600\" />\n              ) : (\n                <TrendingDown className=\"w-4 h-4 text-red-600\" />\n              )}\n            </div>\n          </div>\n          <Progress value={digester.methaneLevel} className=\"h-3 bg-yellow-200\" />\n        </div>\n\n        {/* Daily Production */}\n        <div className=\"bg-gradient-to-br from-green-50 to-emerald-50 p-3 rounded-lg\">\n          <div className=\"flex items-center justify-between mb-2\">\n            <div className=\"flex items-center gap-2\">\n              <Droplets className=\"w-4 h-4 text-green-600\" />\n              <span className=\"text-sm font-semibold text-green-700\">Daily Production</span>\n            </div>\n            <div className=\"flex items-center gap-1\">\n              <span className=\"text-lg font-bold text-green-900\">{digester.dailyProduction} m³</span>\n              {digester.trends?.production && digester.trends.production > 0 ? (\n                <TrendingUp className=\"w-4 h-4 text-green-600\" />\n              ) : (\n                <TrendingDown className=\"w-4 h-4 text-red-600\" />\n              )}\n            </div>\n          </div>\n          <Progress value={digester.efficiency} className=\"h-3 bg-green-200\" />\n        </div>\n\n        {/* Efficiency */}\n        <div className=\"flex items-center justify-between pt-3 border-t border-slate-200\">\n          <span className=\"text-sm font-semibold text-slate-700\">Efficiency</span>\n          <span className=\"text-lg font-bold text-emerald-600\">{digester.efficiency}%</span>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nconst StatusBadge: React.FC<{ status: string; count: number }> = ({ status, count }) => {\n  const getStatusColor = () => {\n    switch (status.toLowerCase()) {\n      case 'active': return 'bg-green-100 text-green-800';\n      case 'maintenance': return 'bg-yellow-100 text-yellow-800';\n      case 'offline': return 'bg-red-100 text-red-800';\n      default: return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  return (\n    <Badge className={`${getStatusColor()} px-2 py-1`}>\n      {count} {status}\n    </Badge>\n  );\n};\n\nexport const EnhancedBiogasDashboard: React.FC = () => {\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between -mt-6\">\n        <div>\n          <h1 className=\"text-3xl font-bold tracking-tight\">BiogasSangh Dashboard</h1>\n          <p className=\"text-muted-foreground\">\n            Overview of cluster operations and performance metrics\n          </p>\n        </div>\n        <div className=\"flex gap-2\">\n          <Button variant=\"outline\" size=\"sm\">\n            <Calendar className=\"w-4 h-4 mr-2\" />\n            Filter\n          </Button>\n          <Button size=\"sm\">\n            <ArrowUpRight className=\"w-4 h-4 mr-2\" />\n            Export\n          </Button>\n        </div>\n      </div>\n\n      {/* KPI Overview */}\n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n        <KPICard\n          title=\"Total Production\"\n          value={`${overviewData.totalProduction} m³`}\n          change=\"+12% from last month\"\n          trend=\"up\"\n          icon={<Droplets className=\"h-4 w-4 text-blue-600\" />}\n        />\n        <KPICard\n          title=\"Average Efficiency\"\n          value={`${overviewData.averageEfficiency}%`}\n          change=\"+2.1% from last week\"\n          trend=\"up\"\n          icon={<Zap className=\"h-4 w-4 text-yellow-600\" />}\n        />\n        <KPICard\n          title=\"Active Digesters\"\n          value={`${overviewData.activeDigesters}/${overviewData.totalDigesters}`}\n          change=\"1 in maintenance\"\n          trend=\"neutral\"\n          icon={<Factory className=\"h-4 w-4 text-green-600\" />}\n        />\n        <KPICard\n          title=\"Critical Alerts\"\n          value={overviewData.criticalAlerts.toString()}\n          change={`${overviewData.warningAlerts} warnings`}\n          trend=\"neutral\"\n          icon={<AlertTriangle className=\"h-4 w-4 text-orange-600\" />}\n        />\n      </div>\n\n      {/* 3 Digester Cards Section */}\n      <div>\n        <h2 className=\"text-2xl font-bold tracking-tight mb-4\">Live Digester Status</h2>\n        <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-3\">\n          {digestersData.map((digester) => (\n            <DigesterCard key={digester.id} digester={digester} />\n          ))}\n        </div>\n      </div>\n\n      {/* Main Content Grid */}\n      <div className=\"grid gap-6 lg:grid-cols-7\">\n        {/* Production Trends - Takes up 4 columns */}\n        <Card className=\"lg:col-span-4\">\n          <CardHeader>\n            <CardTitle>Production Trends</CardTitle>\n            <CardDescription>\n              Monthly biogas production and efficiency over time\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <LineChart data={productionTrend}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"month\" />\n                <YAxis yAxisId=\"left\" />\n                <YAxis yAxisId=\"right\" orientation=\"right\" />\n                <Tooltip />\n                <Legend />\n                <Line\n                  yAxisId=\"left\"\n                  type=\"monotone\"\n                  dataKey=\"production\"\n                  stroke=\"#3b82f6\"\n                  strokeWidth={3}\n                  name=\"Production (m³)\"\n                />\n                <Line\n                  yAxisId=\"right\"\n                  type=\"monotone\"\n                  dataKey=\"efficiency\"\n                  stroke=\"#22c55e\"\n                  strokeWidth={3}\n                  name=\"Efficiency (%)\"\n                />\n              </LineChart>\n            </ResponsiveContainer>\n          </CardContent>\n        </Card>\n\n        {/* Status Overview - Takes up 3 columns */}\n        <Card className=\"lg:col-span-3\">\n          <CardHeader>\n            <CardTitle>Digester Status</CardTitle>\n            <CardDescription>\n              Current operational status distribution\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <ResponsiveContainer width=\"100%\" height={200}>\n              <PieChart>\n                <Pie\n                  data={statusDistribution}\n                  cx=\"50%\"\n                  cy=\"50%\"\n                  innerRadius={60}\n                  outerRadius={80}\n                  dataKey=\"value\"\n                  stroke=\"#fff\"\n                  strokeWidth={2}\n                >\n                  {statusDistribution.map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={entry.color} />\n                  ))}\n                </Pie>\n                <Tooltip />\n              </PieChart>\n            </ResponsiveContainer>\n            <div className=\"flex flex-wrap gap-2 mt-4\">\n              {statusDistribution.map((status) => (\n                <StatusBadge\n                  key={status.name}\n                  status={status.name}\n                  count={status.value}\n                />\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Quick Actions & Summaries */}\n      <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-4\">\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Total Batches</CardTitle>\n            <BarChart3 className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{overviewData.totalBatches}</div>\n            <Progress value={75} className=\"mt-2\" />\n            <p className=\"text-xs text-muted-foreground mt-2\">\n              +23 from last month\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Pending Payments</CardTitle>\n            <Clock className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{overviewData.pendingPayments}</div>\n            <Progress value={30} className=\"mt-2\" />\n            <p className=\"text-xs text-muted-foreground mt-2\">\n              2 overdue items\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Scheduled Pickups</CardTitle>\n            <Users className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{overviewData.scheduledPickups}</div>\n            <Progress value={60} className=\"mt-2\" />\n            <p className=\"text-xs text-muted-foreground mt-2\">\n              Next pickup: Today 2:00 PM\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">System Status</CardTitle>\n            <CheckCircle2 className=\"h-4 w-4 text-green-600\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-green-600\">Healthy</div>\n            <Progress value={95} className=\"mt-2\" />\n            <p className=\"text-xs text-muted-foreground mt-2\">\n              All systems operational\n            </p>\n          </CardContent>\n        </Card>\n      </div>\n\n      <Separator />\n\n      {/* Recent Activity */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Recent Activity</CardTitle>\n          <CardDescription>\n            Latest updates and notifications from the cluster\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center gap-4\">\n              <div className=\"w-2 h-2 bg-green-500 rounded-full\"></div>\n              <div className=\"flex-1\">\n                <p className=\"text-sm font-medium\">Digester Alpha-2 efficiency increased to 88%</p>\n                <p className=\"text-xs text-muted-foreground\">2 hours ago</p>\n              </div>\n            </div>\n            <div className=\"flex items-center gap-4\">\n              <div className=\"w-2 h-2 bg-yellow-500 rounded-full\"></div>\n              <div className=\"flex-1\">\n                <p className=\"text-sm font-medium\">Batch #156 scheduled for pickup</p>\n                <p className=\"text-xs text-muted-foreground\">4 hours ago</p>\n              </div>\n            </div>\n            <div className=\"flex items-center gap-4\">\n              <div className=\"w-2 h-2 bg-blue-500 rounded-full\"></div>\n              <div className=\"flex-1\">\n                <p className=\"text-sm font-medium\">Payment reconciliation completed</p>\n                <p className=\"text-xs text-muted-foreground\">6 hours ago</p>\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default EnhancedBiogasDashboard;","import * as React from \"react\"\r\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\r\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Select = SelectPrimitive.Root\r\n\r\nconst SelectGroup = SelectPrimitive.Group\r\n\r\nconst SelectValue = SelectPrimitive.Value\r\n\r\nconst SelectTrigger = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\r\n>(({ className, children, ...props }, ref) => (\r\n  <SelectPrimitive.Trigger\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    {children}\r\n    <SelectPrimitive.Icon asChild>\r\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\r\n    </SelectPrimitive.Icon>\r\n  </SelectPrimitive.Trigger>\r\n))\r\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\r\n\r\nconst SelectScrollUpButton = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.ScrollUpButton\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex cursor-default items-center justify-center py-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ChevronUp className=\"h-4 w-4\" />\r\n  </SelectPrimitive.ScrollUpButton>\r\n))\r\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\r\n\r\nconst SelectScrollDownButton = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.ScrollDownButton\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex cursor-default items-center justify-center py-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ChevronDown className=\"h-4 w-4\" />\r\n  </SelectPrimitive.ScrollDownButton>\r\n))\r\nSelectScrollDownButton.displayName =\r\n  SelectPrimitive.ScrollDownButton.displayName\r\n\r\nconst SelectContent = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\r\n>(({ className, children, position = \"popper\", ...props }, ref) => (\r\n  <SelectPrimitive.Portal>\r\n    <SelectPrimitive.Content\r\n      ref={ref}\r\n      className={cn(\r\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n        position === \"popper\" &&\r\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\r\n        className\r\n      )}\r\n      position={position}\r\n      {...props}\r\n    >\r\n      <SelectScrollUpButton />\r\n      <SelectPrimitive.Viewport\r\n        className={cn(\r\n          \"p-1\",\r\n          position === \"popper\" &&\r\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\r\n        )}\r\n      >\r\n        {children}\r\n      </SelectPrimitive.Viewport>\r\n      <SelectScrollDownButton />\r\n    </SelectPrimitive.Content>\r\n  </SelectPrimitive.Portal>\r\n))\r\nSelectContent.displayName = SelectPrimitive.Content.displayName\r\n\r\nconst SelectLabel = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Label>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.Label\r\n    ref={ref}\r\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\r\n    {...props}\r\n  />\r\n))\r\nSelectLabel.displayName = SelectPrimitive.Label.displayName\r\n\r\nconst SelectItem = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Item>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\r\n>(({ className, children, ...props }, ref) => (\r\n  <SelectPrimitive.Item\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n      <SelectPrimitive.ItemIndicator>\r\n        <Check className=\"h-4 w-4\" />\r\n      </SelectPrimitive.ItemIndicator>\r\n    </span>\r\n\r\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\r\n  </SelectPrimitive.Item>\r\n))\r\nSelectItem.displayName = SelectPrimitive.Item.displayName\r\n\r\nconst SelectSeparator = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Separator>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.Separator\r\n    ref={ref}\r\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\r\n    {...props}\r\n  />\r\n))\r\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\r\n\r\nexport {\r\n  Select,\r\n  SelectGroup,\r\n  SelectValue,\r\n  SelectTrigger,\r\n  SelectContent,\r\n  SelectLabel,\r\n  SelectItem,\r\n  SelectSeparator,\r\n  SelectScrollUpButton,\r\n  SelectScrollDownButton,\r\n}","import React, { useState, useEffect, useCallback } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '../../components/ui/card';\nimport { Badge } from '../../components/ui/badge';\nimport { Button } from '../../components/ui/button';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '../../components/ui/select';\nimport { Separator } from '../../components/ui/separator';\nimport {\n  Activity,\n  Thermometer,\n  Gauge,\n  AlertTriangle,\n  CheckCircle,\n  RefreshCw,\n  TrendingUp,\n  TrendingDown,\n  Zap,\n  Droplets,\n  Wind,\n  Beaker,\n  Settings,\n  Wifi,\n  WifiOff,\n  Radio,\n  Cpu,\n  Monitor,\n  Play,\n  Pause\n} from 'lucide-react';\nimport {\n  LineChart, Line, AreaChart, Area,\n  XAxis, YAxis, CartesianGrid, ResponsiveContainer, Legend, Tooltip\n} from 'recharts';\n\n// Type definitions\ninterface DigesterData {\n  id: string;\n  name: string;\n  status: string;\n  temperature: number;\n  pressure: number;\n  methaneLevel: number;\n  dailyProduction: number;\n  efficiency: number;\n  lastUpdated: string;\n  detailedSensors: {\n    ph: number;\n    humidity: number;\n    co2Level: number;\n    h2sLevel: number;\n    gasFlow: number;\n    liquidLevel: number;\n    stirringSpeed: number;\n    powerConsumption: number;\n  };\n  trends: {\n    methane: number;\n    production: number;\n    temperature: number;\n    pressure: number;\n  };\n}\n\n// Base digester configurations\nconst baseDigesters: DigesterData[] = [\n  {\n    id: 'D001',\n    name: 'Digester Alpha-1',\n    status: 'active',\n    temperature: 35.5,\n    pressure: 1.2,\n    methaneLevel: 65,\n    dailyProduction: 150.5,\n    efficiency: 85,\n    lastUpdated: new Date().toISOString(),\n    detailedSensors: {\n      ph: 7.2,\n      humidity: 82,\n      co2Level: 28,\n      h2sLevel: 0.15,\n      gasFlow: 45.2,\n      liquidLevel: 78,\n      stirringSpeed: 120,\n      powerConsumption: 2.4\n    },\n    trends: { methane: 2, production: 5, temperature: 1, pressure: 0.5 }\n  },\n  {\n    id: 'D002',\n    name: 'Digester Alpha-2',\n    status: 'active',\n    temperature: 37.2,\n    pressure: 1.5,\n    methaneLevel: 68,\n    dailyProduction: 175.0,\n    efficiency: 88,\n    lastUpdated: new Date().toISOString(),\n    detailedSensors: {\n      ph: 7.5,\n      humidity: 85,\n      co2Level: 25,\n      h2sLevel: 0.12,\n      gasFlow: 52.8,\n      liquidLevel: 82,\n      stirringSpeed: 115,\n      powerConsumption: 2.6\n    },\n    trends: { methane: 1, production: 3, temperature: 0.5, pressure: 0.2 }\n  },\n  {\n    id: 'D003',\n    name: 'Digester Alpha-3',\n    status: 'maintenance',\n    temperature: 32.1,\n    pressure: 0.8,\n    methaneLevel: 58,\n    dailyProduction: 120.0,\n    efficiency: 78,\n    lastUpdated: new Date().toISOString(),\n    detailedSensors: {\n      ph: 6.8,\n      humidity: 75,\n      co2Level: 35,\n      h2sLevel: 0.22,\n      gasFlow: 32.1,\n      liquidLevel: 65,\n      stirringSpeed: 0,\n      powerConsumption: 0.8\n    },\n    trends: { methane: -1, production: -2, temperature: -0.5, pressure: -0.1 }\n  }\n];\n\n// Real-time data simulation hook\nconst useRealTimeDigesterData = () => {\n  const [digesters, setDigesters] = useState<DigesterData[]>(baseDigesters);\n  const [isConnected, setIsConnected] = useState(true);\n  const [isRealTimeActive, setIsRealTimeActive] = useState(true);\n  const [lastUpdateTime, setLastUpdateTime] = useState(new Date());\n\n  const generateSensorVariation = useCallback((baseValue: number, variation: number, min?: number, max?: number) => {\n    const change = (Math.random() - 0.5) * variation;\n    const newValue = baseValue + change;\n    if (min !== undefined && max !== undefined) {\n      return Math.max(min, Math.min(max, newValue));\n    }\n    return newValue;\n  }, []);\n\n  const updateDigesterData = useCallback(() => {\n    if (!isRealTimeActive) return;\n\n    setDigesters(prevDigesters =>\n      prevDigesters.map(digester => {\n        if (digester.status === 'maintenance') {\n          return { ...digester, lastUpdated: new Date().toISOString() };\n        }\n\n        const updatedDigester: DigesterData = {\n          ...digester,\n          temperature: Math.round(generateSensorVariation(digester.temperature, 0.5, 30, 42) * 10) / 10,\n          pressure: Math.round(generateSensorVariation(digester.pressure, 0.1, 0.5, 2.0) * 10) / 10,\n          methaneLevel: Math.round(generateSensorVariation(digester.methaneLevel, 2, 50, 80)),\n          efficiency: Math.round(generateSensorVariation(digester.efficiency, 1, 70, 95)),\n          detailedSensors: {\n            ph: Math.round(generateSensorVariation(digester.detailedSensors.ph, 0.1, 6.0, 8.5) * 10) / 10,\n            humidity: Math.round(generateSensorVariation(digester.detailedSensors.humidity, 2, 70, 95)),\n            co2Level: Math.round(generateSensorVariation(digester.detailedSensors.co2Level, 1, 20, 40)),\n            h2sLevel: Math.round(generateSensorVariation(digester.detailedSensors.h2sLevel, 0.02, 0.05, 0.3) * 100) / 100,\n            gasFlow: Math.round(generateSensorVariation(digester.detailedSensors.gasFlow, 2, 30, 70) * 10) / 10,\n            liquidLevel: Math.round(generateSensorVariation(digester.detailedSensors.liquidLevel, 1, 60, 90)),\n            stirringSpeed: digester.status === 'active' ? Math.round(generateSensorVariation(digester.detailedSensors.stirringSpeed, 5, 100, 140)) : 0,\n            powerConsumption: Math.round(generateSensorVariation(digester.detailedSensors.powerConsumption, 0.1, 1.5, 3.5) * 10) / 10\n          },\n          lastUpdated: new Date().toISOString()\n        };\n        return updatedDigester;\n      })\n    );\n    setLastUpdateTime(new Date());\n  }, [generateSensorVariation, isRealTimeActive]);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (Math.random() < 0.05) {\n        setIsConnected(false);\n        setTimeout(() => setIsConnected(true), 2000);\n        return;\n      }\n      updateDigesterData();\n    }, 3000);\n\n    return () => clearInterval(interval);\n  }, [updateDigesterData]);\n\n  const toggleRealTime = () => setIsRealTimeActive(!isRealTimeActive);\n  const refreshData = useCallback(() => updateDigesterData(), [updateDigesterData]);\n\n  return {\n    digesters,\n    refreshData,\n    isLoading: false,\n    isConnected,\n    isRealTimeActive,\n    toggleRealTime,\n    lastUpdateTime\n  };\n};\n\n// Sensor Card matching SAUBHAGYA theme exactly\nconst SensorCard: React.FC<{\n  title: string;\n  value: string | number;\n  unit?: string;\n  icon: React.ReactNode;\n  trend?: number;\n  color: string;\n  status?: 'normal' | 'warning' | 'critical';\n  isUpdating?: boolean;\n}> = ({ title, value, unit = '', icon, trend, color, status = 'normal', isUpdating = false }) => {\n  const getCardStyles = () => {\n    switch (status) {\n      case 'warning': return 'hover:shadow-lg transition-all duration-300 border-0 bg-gradient-to-br from-amber-50 to-orange-50';\n      case 'critical': return 'hover:shadow-lg transition-all duration-300 border-0 bg-gradient-to-br from-red-50 to-pink-50';\n      default: return 'hover:shadow-lg transition-all duration-300 border-0 bg-gradient-to-br from-white to-slate-50';\n    }\n  };\n\n  return (\n    <Card className={`\n      ${getCardStyles()}\n      ${isUpdating ? 'ring-2 ring-blue-400/50' : ''}\n    `}>\n      <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n        <CardTitle className=\"text-sm font-medium text-muted-foreground\">\n          {title}\n        </CardTitle>\n        <div className=\"relative\">\n          <div className={`\n            h-8 w-8 rounded-lg bg-primary/10 flex items-center justify-center\n            ${isUpdating ? 'animate-pulse' : ''}\n          `}>\n            {icon}\n          </div>\n          {isUpdating && (\n            <div className=\"absolute -top-1 -right-1 w-3 h-3 bg-blue-500 rounded-full flex items-center justify-center\">\n              <div className=\"w-2 h-2 bg-white rounded-full animate-pulse\" />\n            </div>\n          )}\n        </div>\n      </CardHeader>\n\n      <CardContent>\n        <div className=\"flex items-center justify-between\">\n          <div className=\"text-2xl font-bold\">\n            {value}{unit}\n          </div>\n          {trend !== undefined && (\n            <div className={`\n              flex items-center justify-center w-6 h-6 rounded-full\n              ${trend > 0 ? 'bg-green-100 text-green-600' : 'bg-red-100 text-red-600'}\n            `}>\n              {trend > 0 ? <TrendingUp className=\"w-3 h-3\" /> : <TrendingDown className=\"w-3 h-3\" />}\n            </div>\n          )}\n        </div>\n\n        {isUpdating && (\n          <div className=\"w-full bg-muted rounded-full h-1 mt-2\">\n            <div className=\"h-full bg-primary rounded-full transition-all duration-1000\" style={{width: '100%'}} />\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\n// Connection Status Component\nconst ConnectionStatus: React.FC<{\n  isConnected: boolean;\n  lastUpdate: Date;\n  isRealTimeActive: boolean;\n  onToggleRealTime: () => void;\n}> = ({ isConnected, lastUpdate, isRealTimeActive, onToggleRealTime }) => {\n  return (\n    <Card>\n      <CardContent className=\"p-4\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center gap-4\">\n            {isConnected ? (\n              <div className=\"flex items-center gap-2 text-green-600\">\n                <div className=\"relative\">\n                  <Wifi className=\"w-4 h-4\" />\n                  <div className=\"absolute -top-1 -right-1 w-2 h-2 bg-green-500 rounded-full animate-pulse\" />\n                </div>\n                <span className=\"text-sm font-medium\">CONNECTED</span>\n              </div>\n            ) : (\n              <div className=\"flex items-center gap-2 text-red-500\">\n                <WifiOff className=\"w-4 h-4\" />\n                <span className=\"text-sm font-medium\">RECONNECTING</span>\n              </div>\n            )}\n            <Separator orientation=\"vertical\" className=\"h-4\" />\n            <span className=\"text-sm text-muted-foreground\">\n              Last Update: {lastUpdate.toLocaleTimeString()}\n            </span>\n          </div>\n\n          <Button\n            onClick={onToggleRealTime}\n            variant={isRealTimeActive ? \"default\" : \"outline\"}\n            size=\"sm\"\n            className=\"gap-2\"\n          >\n            {isRealTimeActive ? (\n              <>\n                <Pause className=\"w-4 h-4\" />\n                Pause Updates\n              </>\n            ) : (\n              <>\n                <Play className=\"w-4 h-4\" />\n                Resume Updates\n              </>\n            )}\n          </Button>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\n// Chart Component\nconst ChartCard: React.FC<{\n  title: string;\n  subtitle: string;\n  children: React.ReactNode;\n  isLive?: boolean;\n}> = ({ title, subtitle, children, isLive = false }) => {\n  return (\n    <Card>\n      <CardHeader>\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <CardTitle className=\"flex items-center gap-3\">\n              {title}\n              {isLive && (\n                <div className=\"flex items-center gap-2\">\n                  <div className=\"w-2 h-2 bg-green-500 rounded-full animate-pulse\" />\n                  <span className=\"text-xs font-medium text-green-600 uppercase tracking-wide\">LIVE</span>\n                </div>\n              )}\n            </CardTitle>\n            <CardDescription>\n              {subtitle}\n            </CardDescription>\n          </div>\n          <div className=\"h-8 w-8 rounded-lg bg-primary/10 flex items-center justify-center\">\n            <Monitor className=\"h-4 w-4 text-muted-foreground\" />\n          </div>\n        </div>\n      </CardHeader>\n\n      <CardContent>\n        {children}\n      </CardContent>\n    </Card>\n  );\n};\n\n// Generate chart data\nconst getDetailedChartData = (digester: DigesterData) => {\n  const hours = Array.from({ length: 24 }, (_, i) => {\n    const hour = i;\n    const timeLabel = `${hour.toString().padStart(2, '0')}:00`;\n    const variation = Math.sin(i * 0.5) * 5;\n\n    return {\n      time: timeLabel,\n      temperature: Math.round((digester.temperature + variation + Math.random() * 2) * 10) / 10,\n      pressure: Math.round((digester.pressure + variation * 0.1 + Math.random() * 0.2) * 10) / 10,\n      methane: Math.round(digester.methaneLevel + variation + Math.random() * 3),\n      ph: Math.round((digester.detailedSensors.ph + variation * 0.1 + Math.random() * 0.2) * 10) / 10,\n      gasFlow: Math.round(digester.detailedSensors.gasFlow + variation + Math.random() * 5),\n      efficiency: Math.round(digester.efficiency + variation * 0.5 + Math.random() * 2)\n    };\n  });\n\n  return hours;\n};\n\n// Main Component\nconst ModernDigesterMonitoring: React.FC = () => {\n  const [selectedDigesterId, setSelectedDigesterId] = useState<string>('D001');\n\n  const {\n    digesters,\n    refreshData,\n    isLoading,\n    isConnected,\n    isRealTimeActive,\n    toggleRealTime,\n    lastUpdateTime\n  } = useRealTimeDigesterData();\n\n  const selectedDigester = digesters.find(d => d.id === selectedDigesterId) || digesters[0];\n  const [isUpdating, setIsUpdating] = useState(false);\n  const chartData = getDetailedChartData(selectedDigester);\n\n  useEffect(() => {\n    if (isConnected && isRealTimeActive) {\n      setIsUpdating(true);\n      const timer = setTimeout(() => setIsUpdating(false), 1000);\n      return () => clearTimeout(timer);\n    }\n  }, [selectedDigester.lastUpdated, isConnected, isRealTimeActive]);\n\n  const statusIcon = selectedDigester.status === 'active' ? CheckCircle : AlertTriangle;\n  const StatusIcon = statusIcon;\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between -mt-6\">\n        <div>\n          <h1 className=\"text-3xl font-bold tracking-tight\">Real-Time Digester Monitoring</h1>\n          <p className=\"text-muted-foreground\">\n            Live sensor data, advanced analytics, continuous monitoring\n          </p>\n        </div>\n        <div className=\"flex items-center gap-4\">\n          <div className=\"flex items-center gap-3\">\n            <label className=\"text-sm font-medium\">Select Digester:</label>\n            <Select value={selectedDigesterId} onValueChange={setSelectedDigesterId}>\n              <SelectTrigger className=\"w-48\">\n                <SelectValue placeholder=\"Choose a digester\" />\n              </SelectTrigger>\n              <SelectContent>\n                {digesters.map((digester) => (\n                  <SelectItem key={digester.id} value={digester.id}>\n                    <div className=\"flex items-center gap-2\">\n                      <div className={`w-2 h-2 rounded-full ${\n                        digester.status === 'active' ? 'bg-green-500' : 'bg-yellow-500'\n                      }`} />\n                      {digester.name}\n                    </div>\n                  </SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n          </div>\n          <Button\n            onClick={refreshData}\n            disabled={isLoading}\n            variant=\"outline\"\n            size=\"sm\"\n            className=\"gap-2\"\n          >\n            <RefreshCw className={`w-4 h-4 ${isLoading ? 'animate-spin' : ''}`} />\n            Refresh\n          </Button>\n        </div>\n      </div>\n\n      {/* Digester Header Card */}\n      <Card>\n        <CardHeader>\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <CardTitle className=\"text-xl font-bold\">\n                {selectedDigester.name}\n              </CardTitle>\n              <CardDescription>\n                Last Updated: {new Date(selectedDigester.lastUpdated).toLocaleString()}\n              </CardDescription>\n            </div>\n            <div className=\"flex items-center gap-4\">\n              <Badge className={`${\n                selectedDigester.status === 'active'\n                  ? 'bg-green-100 text-green-800'\n                  : 'bg-yellow-100 text-yellow-800'\n              } border font-semibold capitalize flex items-center gap-1`}>\n                <StatusIcon className=\"w-3 h-3\" />\n                {selectedDigester.status.toUpperCase()}\n              </Badge>\n            </div>\n          </div>\n        </CardHeader>\n      </Card>\n\n      {/* Connection Status */}\n      <ConnectionStatus\n        isConnected={isConnected}\n        lastUpdate={lastUpdateTime}\n        isRealTimeActive={isRealTimeActive}\n        onToggleRealTime={toggleRealTime}\n      />\n\n      {/* Primary Sensors */}\n      <div>\n        <h2 className=\"text-2xl font-bold tracking-tight mb-4 flex items-center gap-3\">\n          <Cpu className=\"h-4 w-4 text-blue-600\" />\n          Primary Sensors\n        </h2>\n        <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n          <SensorCard\n            title=\"Temperature\"\n            value={selectedDigester.temperature}\n            unit=\"°C\"\n            icon={<Thermometer className=\"h-4 w-4 text-orange-600\" />}\n            trend={selectedDigester.trends?.temperature}\n            color=\"orange\"\n            status={selectedDigester.temperature > 40 ? 'warning' : 'normal'}\n            isUpdating={isUpdating && isConnected && isRealTimeActive}\n          />\n          <SensorCard\n            title=\"Pressure\"\n            value={selectedDigester.pressure}\n            unit=\" kPa\"\n            icon={<Gauge className=\"h-4 w-4 text-blue-600\" />}\n            trend={selectedDigester.trends?.pressure}\n            color=\"blue\"\n            isUpdating={isUpdating && isConnected && isRealTimeActive}\n          />\n          <SensorCard\n            title=\"Methane Level\"\n            value={selectedDigester.methaneLevel}\n            unit=\"%\"\n            icon={<Zap className=\"h-4 w-4 text-yellow-600\" />}\n            trend={selectedDigester.trends?.methane}\n            color=\"yellow\"\n            status={selectedDigester.methaneLevel < 60 ? 'warning' : 'normal'}\n            isUpdating={isUpdating && isConnected && isRealTimeActive}\n          />\n          <SensorCard\n            title=\"Efficiency\"\n            value={selectedDigester.efficiency}\n            unit=\"%\"\n            icon={<Activity className=\"h-4 w-4 text-green-600\" />}\n            trend={selectedDigester.trends?.production}\n            color=\"green\"\n            isUpdating={isUpdating && isConnected && isRealTimeActive}\n          />\n        </div>\n      </div>\n\n      {/* Secondary Sensors */}\n      <div>\n        <h2 className=\"text-2xl font-bold tracking-tight mb-4 flex items-center gap-3\">\n          <Radio className=\"h-4 w-4 text-purple-600\" />\n          Secondary Sensors\n        </h2>\n        <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n          <SensorCard\n            title=\"pH Level\"\n            value={selectedDigester.detailedSensors?.ph}\n            icon={<Beaker className=\"h-4 w-4 text-purple-600\" />}\n            color=\"purple\"\n            status={selectedDigester.detailedSensors?.ph! < 6.5 || selectedDigester.detailedSensors?.ph! > 8 ? 'warning' : 'normal'}\n            isUpdating={isUpdating && isConnected && isRealTimeActive}\n          />\n          <SensorCard\n            title=\"Humidity\"\n            value={selectedDigester.detailedSensors?.humidity}\n            unit=\"%\"\n            icon={<Droplets className=\"h-4 w-4 text-cyan-600\" />}\n            color=\"cyan\"\n            isUpdating={isUpdating && isConnected && isRealTimeActive}\n          />\n          <SensorCard\n            title=\"CO₂ Level\"\n            value={selectedDigester.detailedSensors?.co2Level}\n            unit=\"%\"\n            icon={<Wind className=\"h-4 w-4 text-gray-600\" />}\n            color=\"gray\"\n            isUpdating={isUpdating && isConnected && isRealTimeActive}\n          />\n          <SensorCard\n            title=\"H₂S Level\"\n            value={selectedDigester.detailedSensors?.h2sLevel}\n            unit=\" ppm\"\n            icon={<AlertTriangle className=\"h-4 w-4 text-red-600\" />}\n            color=\"red\"\n            status={selectedDigester.detailedSensors?.h2sLevel! > 0.2 ? 'warning' : 'normal'}\n            isUpdating={isUpdating && isConnected && isRealTimeActive}\n          />\n        </div>\n      </div>\n\n      {/* Operational Metrics */}\n      <div>\n        <h2 className=\"text-2xl font-bold tracking-tight mb-4 flex items-center gap-3\">\n          <Settings className=\"h-4 w-4 text-indigo-600\" />\n          Operational Metrics\n        </h2>\n        <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n          <SensorCard\n            title=\"Gas Flow Rate\"\n            value={selectedDigester.detailedSensors?.gasFlow}\n            unit=\" L/min\"\n            icon={<Wind className=\"h-4 w-4 text-blue-600\" />}\n            color=\"blue\"\n            isUpdating={isUpdating && isConnected && isRealTimeActive}\n          />\n          <SensorCard\n            title=\"Liquid Level\"\n            value={selectedDigester.detailedSensors?.liquidLevel}\n            unit=\"%\"\n            icon={<Gauge className=\"h-4 w-4 text-teal-600\" />}\n            color=\"teal\"\n            status={selectedDigester.detailedSensors?.liquidLevel! < 70 ? 'warning' : 'normal'}\n            isUpdating={isUpdating && isConnected && isRealTimeActive}\n          />\n          <SensorCard\n            title=\"Stirring Speed\"\n            value={selectedDigester.detailedSensors?.stirringSpeed}\n            unit=\" RPM\"\n            icon={<Settings className=\"h-4 w-4 text-indigo-600\" />}\n            color=\"indigo\"\n            status={selectedDigester.status === 'maintenance' && selectedDigester.detailedSensors?.stirringSpeed === 0 ? 'warning' : 'normal'}\n            isUpdating={isUpdating && isConnected && isRealTimeActive}\n          />\n          <SensorCard\n            title=\"Power Consumption\"\n            value={selectedDigester.detailedSensors?.powerConsumption}\n            unit=\" kW\"\n            icon={<Zap className=\"h-4 w-4 text-yellow-600\" />}\n            color=\"yellow\"\n            isUpdating={isUpdating && isConnected && isRealTimeActive}\n          />\n        </div>\n      </div>\n\n      {/* Charts */}\n      <div className=\"grid gap-6 lg:grid-cols-2\">\n        <ChartCard\n          title=\"Live Efficiency Analytics\"\n          subtitle=\"Real-time efficiency and gas flow correlation\"\n          isLive={isConnected && isRealTimeActive}\n        >\n          <ResponsiveContainer width=\"100%\" height={300}>\n            <LineChart data={chartData}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"time\" />\n              <YAxis />\n              <Tooltip />\n              <Legend />\n              <Line\n                type=\"monotone\"\n                dataKey=\"efficiency\"\n                stroke=\"#10b981\"\n                strokeWidth={2}\n                name=\"Efficiency (%)\"\n              />\n              <Line\n                type=\"monotone\"\n                dataKey=\"gasFlow\"\n                stroke=\"#3b82f6\"\n                strokeWidth={2}\n                name=\"Gas Flow (L/min)\"\n              />\n            </LineChart>\n          </ResponsiveContainer>\n        </ChartCard>\n\n        <ChartCard\n          title=\"Environmental Conditions\"\n          subtitle=\"Temperature, pressure, and pH monitoring\"\n          isLive={isConnected && isRealTimeActive}\n        >\n          <ResponsiveContainer width=\"100%\" height={300}>\n            <LineChart data={chartData}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"time\" />\n              <YAxis />\n              <Tooltip />\n              <Legend />\n              <Line\n                type=\"monotone\"\n                dataKey=\"temperature\"\n                stroke=\"#f59e0b\"\n                strokeWidth={2}\n                name=\"Temperature (°C)\"\n              />\n              <Line\n                type=\"monotone\"\n                dataKey=\"pressure\"\n                stroke=\"#8b5cf6\"\n                strokeWidth={2}\n                name=\"Pressure (kPa)\"\n              />\n              <Line\n                type=\"monotone\"\n                dataKey=\"ph\"\n                stroke=\"#ec4899\"\n                strokeWidth={2}\n                name=\"pH Level\"\n              />\n            </LineChart>\n          </ResponsiveContainer>\n        </ChartCard>\n      </div>\n\n      {/* Live Methane Production Stream */}\n      <ChartCard\n        title=\"Live Methane Production Stream\"\n        subtitle=\"Real-time methane concentration monitoring\"\n        isLive={isConnected && isRealTimeActive}\n      >\n        <ResponsiveContainer width=\"100%\" height={300}>\n          <AreaChart data={chartData}>\n            <defs>\n              <linearGradient id=\"methaneGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                <stop offset=\"5%\" stopColor=\"#fbbf24\" stopOpacity={0.3}/>\n                <stop offset=\"95%\" stopColor=\"#fbbf24\" stopOpacity={0.1}/>\n              </linearGradient>\n            </defs>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"time\" />\n            <YAxis />\n            <Tooltip />\n            <Legend />\n            <Area\n              type=\"monotone\"\n              dataKey=\"methane\"\n              stroke=\"#fbbf24\"\n              strokeWidth={2}\n              fillOpacity={1}\n              fill=\"url(#methaneGradient)\"\n              name=\"Methane Level (%)\"\n            />\n          </AreaChart>\n        </ResponsiveContainer>\n      </ChartCard>\n    </div>\n  );\n};\n\nexport default ModernDigesterMonitoring;","import * as React from \"react\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nexport interface LabelProps\r\n  extends React.LabelHTMLAttributes<HTMLLabelElement> {}\r\n\r\nconst Label = React.forwardRef<HTMLLabelElement, LabelProps>(\r\n  ({ className, ...props }, ref) => (\r\n    <label\r\n      ref={ref}\r\n      className={cn(\r\n        \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n)\r\nLabel.displayName = \"Label\"\r\n\r\nexport { Label }","import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nexport interface TextareaProps\r\n  extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {}\r\n\r\nconst Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(\r\n  ({ className, ...props }, ref) => {\r\n    return (\r\n      <textarea\r\n        className={cn(\r\n          \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nTextarea.displayName = \"Textarea\"\r\n\r\nexport { Textarea }","import * as React from \"react\"\r\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\r\nimport { X } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Dialog = DialogPrimitive.Root\r\n\r\nconst DialogTrigger = DialogPrimitive.Trigger\r\n\r\nconst DialogPortal = DialogPrimitive.Portal\r\n\r\nconst DialogClose = DialogPrimitive.Close\r\n\r\nconst DialogOverlay = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\r\n>(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Overlay\r\n    ref={ref}\r\n    className={cn(\r\n      \"fixed inset-0 z-50 bg-background/80 backdrop-blur-sm data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\r\n\r\nconst DialogContent = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\r\n>(({ className, children, ...props }, ref) => (\r\n  <DialogPortal>\r\n    <DialogOverlay />\r\n    <DialogPrimitive.Content\r\n      ref={ref}\r\n      className={cn(\r\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      {children}\r\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\r\n        <X className=\"h-4 w-4\" />\r\n        <span className=\"sr-only\">Close</span>\r\n      </DialogPrimitive.Close>\r\n    </DialogPrimitive.Content>\r\n  </DialogPortal>\r\n))\r\nDialogContent.displayName = DialogPrimitive.Content.displayName\r\n\r\nconst DialogHeader = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div\r\n    className={cn(\r\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n)\r\nDialogHeader.displayName = \"DialogHeader\"\r\n\r\nconst DialogFooter = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div\r\n    className={cn(\r\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n)\r\nDialogFooter.displayName = \"DialogFooter\"\r\n\r\nconst DialogTitle = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Title>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\r\n>(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Title\r\n    ref={ref}\r\n    className={cn(\r\n      \"text-lg font-semibold leading-none tracking-tight\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nDialogTitle.displayName = DialogPrimitive.Title.displayName\r\n\r\nconst DialogDescription = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Description>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\r\n>(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Description\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nDialogDescription.displayName = DialogPrimitive.Description.displayName\r\n\r\nexport {\r\n  Dialog,\r\n  DialogPortal,\r\n  DialogOverlay,\r\n  DialogClose,\r\n  DialogTrigger,\r\n  DialogContent,\r\n  DialogHeader,\r\n  DialogFooter,\r\n  DialogTitle,\r\n  DialogDescription,\r\n}","import * as React from \"react\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Table = React.forwardRef<\r\n  HTMLTableElement,\r\n  React.HTMLAttributes<HTMLTableElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div className=\"relative w-full overflow-auto\">\r\n    <table\r\n      ref={ref}\r\n      className={cn(\"w-full caption-bottom text-sm\", className)}\r\n      {...props}\r\n    />\r\n  </div>\r\n))\r\nTable.displayName = \"Table\"\r\n\r\nconst TableHeader = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\r\n))\r\nTableHeader.displayName = \"TableHeader\"\r\n\r\nconst TableBody = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tbody\r\n    ref={ref}\r\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nTableBody.displayName = \"TableBody\"\r\n\r\nconst TableFooter = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tfoot\r\n    ref={ref}\r\n    className={cn(\r\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableFooter.displayName = \"TableFooter\"\r\n\r\nconst TableRow = React.forwardRef<\r\n  HTMLTableRowElement,\r\n  React.HTMLAttributes<HTMLTableRowElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tr\r\n    ref={ref}\r\n    className={cn(\r\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableRow.displayName = \"TableRow\"\r\n\r\nconst TableHead = React.forwardRef<\r\n  HTMLTableCellElement,\r\n  React.ThHTMLAttributes<HTMLTableCellElement>\r\n>(({ className, ...props }, ref) => (\r\n  <th\r\n    ref={ref}\r\n    className={cn(\r\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableHead.displayName = \"TableHead\"\r\n\r\nconst TableCell = React.forwardRef<\r\n  HTMLTableCellElement,\r\n  React.TdHTMLAttributes<HTMLTableCellElement>\r\n>(({ className, ...props }, ref) => (\r\n  <td\r\n    ref={ref}\r\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nTableCell.displayName = \"TableCell\"\r\n\r\nconst TableCaption = React.forwardRef<\r\n  HTMLTableCaptionElement,\r\n  React.HTMLAttributes<HTMLTableCaptionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <caption\r\n    ref={ref}\r\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nTableCaption.displayName = \"TableCaption\"\r\n\r\nexport {\r\n  Table,\r\n  TableHeader,\r\n  TableBody,\r\n  TableFooter,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableCaption,\r\n}","import React, { useState, useEffect } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '../../components/ui/card';\nimport { Badge } from '../../components/ui/badge';\nimport { Button } from '../../components/ui/button';\nimport { Input } from '../../components/ui/input';\nimport { Label } from '../../components/ui/label';\nimport { Textarea } from '../../components/ui/textarea';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '../../components/ui/select';\nimport { Dialog, DialogContent, DialogDescription, DialogFooter, DialogHeader, DialogTitle, DialogTrigger } from '../../components/ui/dialog';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '../../components/ui/table';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '../../components/ui/tabs';\nimport {\n  Plus,\n  Edit,\n  Trash2,\n  Search,\n  Filter,\n  Package,\n  Clock,\n  CheckCircle,\n  AlertCircle,\n  Truck,\n  FileText,\n  Eye,\n  Download\n} from 'lucide-react';\n\n// Mock types for BatchManagement\ntype BatchStatus = 'processing' | 'ready' | 'transferred' | 'rejected' | 'testing';\n\ninterface BatchData {\n  id: string;\n  digesterId: string;\n  volume: number;\n  methaneContent: number;\n  status: BatchStatus;\n  createdDate: string;\n  transferDate?: string;\n  qualityScore?: number;\n  notes: string;\n  farmerName?: string;\n  source?: string;\n}\n\ninterface QualityCertificate {\n  id: string;\n  batchId: string;\n  issuedDate: string;\n  qualityScore: number;\n  certifiedBy?: string;\n  validUntil?: string;\n}\n\n// Enhanced Mock data with realistic Indian biogas operations\nconst batches: BatchData[] = [\n  {\n    id: 'BATCH-001',\n    digesterId: 'DIG-001',\n    volume: 45.2,\n    methaneContent: 65.8,\n    status: 'ready',\n    createdDate: new Date().toISOString(),\n    transferDate: new Date(Date.now() + 7200000).toISOString(),\n    qualityScore: 92,\n    farmerName: 'राजेश कुमार',\n    source: 'Gokul Gaushala, Mathura',\n    notes: 'Premium quality cow dung batch from Rajesh Kumar. Optimal fermentation achieved with excellent gas composition. Ready for immediate transfer to distribution network. Source: 15 indigenous cows, organic feed only.'\n  },\n  {\n    id: 'BATCH-002',\n    digesterId: 'DIG-002',\n    volume: 38.7,\n    methaneContent: 62.3,\n    status: 'processing',\n    createdDate: new Date(Date.now() - 86400000).toISOString(),\n    qualityScore: 78,\n    farmerName: 'सुनीता देवी',\n    source: 'Vrindavan Organic Farm',\n    notes: 'Mixed dung batch in active fermentation phase. Temperature maintained at 37°C. Expected completion in 48 hours with good quality prospects. Contains cow and buffalo dung mixture from certified organic farm.'\n  },\n  {\n    id: 'BATCH-003',\n    digesterId: 'DIG-003',\n    volume: 52.8,\n    methaneContent: 68.2,\n    status: 'ready',\n    createdDate: new Date(Date.now() - 172800000).toISOString(),\n    transferDate: new Date().toISOString(),\n    qualityScore: 95,\n    farmerName: 'श्याम यादव',\n    source: 'Yamuna Riverside Gaushala',\n    notes: 'Exceptional buffalo dung batch from Shyam Yadav. Highest methane content achieved this quarter. Certified Grade A premium quality. Source: 25 Murrah buffaloes with optimal nutrition and care.'\n  },\n  {\n    id: 'BATCH-004',\n    digesterId: 'DIG-001',\n    volume: 41.3,\n    methaneContent: 58.9,\n    status: 'testing',\n    createdDate: new Date(Date.now() - 259200000).toISOString(),\n    qualityScore: 72,\n    farmerName: 'अमित शर्मा',\n    source: 'Govind Dairy Farm',\n    notes: 'Standard cow dung batch undergoing final quality assessment. Moderate methane levels detected. Awaiting lab confirmation for Grade B classification. Processing time extended due to lower initial moisture content.'\n  },\n  {\n    id: 'BATCH-005',\n    digesterId: 'DIG-004',\n    volume: 29.6,\n    methaneContent: 55.4,\n    status: 'rejected',\n    createdDate: new Date(Date.now() - 345600000).toISOString(),\n    qualityScore: 48,\n    farmerName: 'प्रेम सिंह',\n    source: 'Village Cooperative',\n    notes: 'Batch from contaminated feedstock. Low methane content due to improper storage conditions. Rejected for commercial use, diverted to compost production. Root cause: contamination from non-organic sources and poor collection hygiene.'\n  },\n  {\n    id: 'BATCH-006',\n    digesterId: 'DIG-002',\n    volume: 47.9,\n    methaneContent: 63.7,\n    status: 'transferred',\n    createdDate: new Date(Date.now() - 432000000).toISOString(),\n    transferDate: new Date(Date.now() - 86400000).toISOString(),\n    qualityScore: 86,\n    farmerName: 'गीता देवी',\n    source: 'Krishna Valley Farm',\n    notes: 'High-quality mixed dung batch successfully transferred to Mathura distribution center. Excellent fermentation results with consistent gas output. Customer feedback: exceptional performance in commercial biogas units.'\n  },\n  {\n    id: 'BATCH-007',\n    digesterId: 'DIG-003',\n    volume: 35.1,\n    methaneContent: 71.2,\n    status: 'ready',\n    createdDate: new Date(Date.now() - 518400000).toISOString(),\n    qualityScore: 97,\n    farmerName: 'राम प्रसाद',\n    source: 'Organic Gaushala Trust',\n    notes: 'Premium buffalo dung batch with exceptional methane purity. Sourced from Organic Gaushala cooperative. Meets all export quality standards. Tested for international markets - approved for European biogas facilities.'\n  },\n  {\n    id: 'BATCH-008',\n    digesterId: 'DIG-005',\n    volume: 33.4,\n    methaneContent: 59.8,\n    status: 'processing',\n    createdDate: new Date(Date.now() - 604800000).toISOString(),\n    qualityScore: 74,\n    farmerName: 'लक्ष्मी यादव',\n    source: 'Braj Bhumi Gaushala',\n    notes: 'Cow dung batch from Gita Devi\\'s farm. Processing delayed due to monsoon humidity. Temperature regulation implemented, expecting improvement. Additional heating systems deployed to counter seasonal moisture challenges.'\n  },\n  {\n    id: 'BATCH-009',\n    digesterId: 'DIG-001',\n    volume: 44.7,\n    methaneContent: 66.4,\n    status: 'testing',\n    createdDate: new Date(Date.now() - 691200000).toISOString(),\n    qualityScore: 88,\n    farmerName: 'विकास कुमार',\n    source: 'Vrindavan Heritage Gaushala',\n    notes: 'Large volume cow dung batch from Vrindavan Gaushala. Final quality checks in progress. Preliminary results show excellent commercial viability. Volume sufficient for pilot testing in urban biogas distribution network.'\n  },\n  {\n    id: 'BATCH-010',\n    digesterId: 'DIG-004',\n    volume: 39.8,\n    methaneContent: 64.1,\n    status: 'transferred',\n    createdDate: new Date(Date.now() - 777600000).toISOString(),\n    transferDate: new Date(Date.now() - 259200000).toISOString(),\n    qualityScore: 83,\n    farmerName: 'सुरेश चंद्र',\n    source: 'Radha Krishna Dairy',\n    notes: 'Standard quality mixed dung batch successfully delivered to regional distribution network. Good consistency maintained throughout fermentation cycle. Successfully integrated into 5 commercial biogas plants in the region.'\n  }\n];\n\nconst certificates: QualityCertificate[] = [\n  {\n    id: 'CERT-001',\n    batchId: 'BATCH-001',\n    issuedDate: new Date().toISOString(),\n    qualityScore: 92,\n    certifiedBy: 'Dr. Ravi Sharma, Quality Assurance',\n    validUntil: new Date(Date.now() + 15552000000).toISOString() // 6 months validity\n  },\n  {\n    id: 'CERT-002',\n    batchId: 'BATCH-003',\n    issuedDate: new Date(Date.now() - 86400000).toISOString(),\n    qualityScore: 95,\n    certifiedBy: 'Dr. Priya Gupta, Chief Quality Officer',\n    validUntil: new Date(Date.now() + 15465600000).toISOString()\n  },\n  {\n    id: 'CERT-003',\n    batchId: 'BATCH-006',\n    issuedDate: new Date(Date.now() - 172800000).toISOString(),\n    qualityScore: 86,\n    certifiedBy: 'Dr. Anil Kumar, Senior Analyst',\n    validUntil: new Date(Date.now() + 15379200000).toISOString()\n  },\n  {\n    id: 'CERT-004',\n    batchId: 'BATCH-007',\n    issuedDate: new Date(Date.now() - 259200000).toISOString(),\n    qualityScore: 97,\n    certifiedBy: 'Dr. Sunita Singh, Export Certification',\n    validUntil: new Date(Date.now() + 15292800000).toISOString()\n  },\n  {\n    id: 'CERT-005',\n    batchId: 'BATCH-009',\n    issuedDate: new Date(Date.now() - 345600000).toISOString(),\n    qualityScore: 88,\n    certifiedBy: 'Dr. Manoj Verma, Quality Assurance',\n    validUntil: new Date(Date.now() + 15206400000).toISOString()\n  },\n  {\n    id: 'CERT-006',\n    batchId: 'BATCH-010',\n    issuedDate: new Date(Date.now() - 432000000).toISOString(),\n    qualityScore: 83,\n    certifiedBy: 'Dr. Deepak Mishra, Regional Quality Head',\n    validUntil: new Date(Date.now() + 15120000000).toISOString()\n  }\n];\n\n// Mock functions\nconst createBatch = async (data: Partial<BatchData>) => {\n  console.log('Creating batch:', data);\n  return Promise.resolve();\n};\n\nconst updateBatch = async (id: string, data: Partial<BatchData>) => {\n  console.log('Updating batch:', id, data);\n  return Promise.resolve();\n};\n\nconst deleteBatch = async (id: string) => {\n  console.log('Deleting batch:', id);\n  return Promise.resolve();\n};\n\ninterface BatchManagementProps {\n  languageContext?: {\n    language: 'hi' | 'en';\n    t: (key: string) => string;\n  };\n}\n\nconst translations = {\n  en: {\n    title: 'Batch Management',\n    subtitle: 'Manage biogas batches from production to transfer',\n    createBatch: 'Create New Batch',\n    editBatch: 'Edit Batch',\n    deleteBatch: 'Delete Batch',\n    batchList: 'Batch List',\n    activeQualities: 'Active Quality Tests',\n    certificates: 'Quality Certificates',\n    search: 'Search batches...',\n    filter: 'Filter',\n    batchId: 'Batch ID',\n    digesterId: 'Digester ID',\n    volume: 'Volume (m³)',\n    methaneContent: 'Methane Content (%)',\n    status: 'Status',\n    createdDate: 'Created Date',\n    transferDate: 'Transfer Date',\n    qualityScore: 'Quality Score',\n    notes: 'Notes',\n    actions: 'Actions',\n    create: 'Create',\n    update: 'Update',\n    cancel: 'Cancel',\n    delete: 'Delete',\n    confirm: 'Confirm',\n    processing: 'Processing',\n    ready: 'Ready',\n    transferred: 'Transferred',\n    rejected: 'Rejected',\n    testing: 'Testing',\n    viewDetails: 'View Details',\n    downloadCert: 'Download Certificate',\n    transferBatch: 'Transfer Batch',\n    qualityTest: 'Quality Test',\n    batchDetails: 'Batch Details',\n    transferHistory: 'Transfer History',\n    qualityReports: 'Quality Reports',\n    farmerName: 'Farmer Name',\n    source: 'Source',\n    certifiedBy: 'Certified By',\n    validUntil: 'Valid Until'\n  },\n  hi: {\n    title: 'बैच प्रबंधन',\n    subtitle: 'उत्पादन से स्थानांतरण तक बायोगैस बैचों का प्रबंधन',\n    createBatch: 'नया बैच बनाएं',\n    editBatch: 'बैच संपादित करें',\n    deleteBatch: 'बैच हटाएं',\n    batchList: 'बैच सूची',\n    activeQualities: 'सक्रिय गुणवत्ता परीक्षण',\n    certificates: 'गुणवत्ता प्रमाणपत्र',\n    search: 'बैच खोजें...',\n    filter: 'फिल्टर',\n    batchId: 'बैच आईडी',\n    digesterId: 'डाइजेस्टर आईडी',\n    volume: 'आयतन (m³)',\n    methaneContent: 'मीथेन सामग्री (%)',\n    status: 'स्थिति',\n    createdDate: 'निर्मित दिनांक',\n    transferDate: 'स्थानांतरण दिनांक',\n    qualityScore: 'गुणवत्ता स्कोर',\n    notes: 'टिप्पणियां',\n    actions: 'कार्य',\n    create: 'बनाएं',\n    update: 'अपडेट करें',\n    cancel: 'रद्द करें',\n    delete: 'हटाएं',\n    confirm: 'पुष्टि करें',\n    processing: 'प्रसंस्करण',\n    ready: 'तैयार',\n    transferred: 'स्थानांतरित',\n    rejected: 'अस्वीकृत',\n    testing: 'परीक्षण',\n    viewDetails: 'विवरण देखें',\n    downloadCert: 'प्रमाणपत्र डाउनलोड करें',\n    transferBatch: 'बैच स्थानांतरित करें',\n    qualityTest: 'गुणवत्ता परीक्षण',\n    batchDetails: 'बैच विवरण',\n    transferHistory: 'स्थानांतरण इतिहास',\n    qualityReports: 'गुणवत्ता रिपोर्ट',\n    farmerName: 'किसान का नाम',\n    source: 'स्रोत',\n    certifiedBy: 'प्रमाणित करने वाला',\n    validUntil: 'तक वैध'\n  }\n};\n\nconst getStatusColor = (status: BatchStatus): string => {\n  switch (status) {\n    case 'processing':\n      return 'bg-blue-100 text-blue-800';\n    case 'ready':\n      return 'bg-green-100 text-green-800';\n    case 'transferred':\n      return 'bg-gray-100 text-gray-800';\n    case 'rejected':\n      return 'bg-red-100 text-red-800';\n    case 'testing':\n      return 'bg-yellow-100 text-yellow-800';\n    default:\n      return 'bg-gray-100 text-gray-800';\n  }\n};\n\nconst getStatusIcon = (status: BatchStatus) => {\n  switch (status) {\n    case 'processing':\n      return <Clock className=\"w-4 h-4\" />;\n    case 'ready':\n      return <CheckCircle className=\"w-4 h-4\" />;\n    case 'transferred':\n      return <Truck className=\"w-4 h-4\" />;\n    case 'rejected':\n      return <AlertCircle className=\"w-4 h-4\" />;\n    case 'testing':\n      return <Package className=\"w-4 h-4\" />;\n    default:\n      return <Package className=\"w-4 h-4\" />;\n  }\n};\n\nconst BatchForm: React.FC<{\n  batch?: BatchData;\n  onSubmit: (data: Partial<BatchData>) => void;\n  onCancel: () => void;\n  t: (key: string) => string;\n}> = ({ batch, onSubmit, onCancel, t }) => {\n  const [formData, setFormData] = useState({\n    digesterId: batch?.digesterId || '',\n    volume: batch?.volume?.toString() || '',\n    methaneContent: batch?.methaneContent?.toString() || '',\n    notes: batch?.notes || '',\n    farmerName: batch?.farmerName || '',\n    source: batch?.source || ''\n  });\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    onSubmit({\n      ...formData,\n      volume: parseFloat(formData.volume),\n      methaneContent: parseFloat(formData.methaneContent)\n    });\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"space-y-4\">\n      <div className=\"space-y-2\">\n        <Label htmlFor=\"digesterId\">{t('digesterId')}</Label>\n        <Select value={formData.digesterId} onValueChange={(value) => setFormData(prev => ({ ...prev, digesterId: value }))}>\n          <SelectTrigger>\n            <SelectValue placeholder=\"Select digester\" />\n          </SelectTrigger>\n          <SelectContent>\n            <SelectItem value=\"DIG-001\">Digester 001 - Main Unit</SelectItem>\n            <SelectItem value=\"DIG-002\">Digester 002 - Secondary Unit</SelectItem>\n            <SelectItem value=\"DIG-003\">Digester 003 - Buffalo Unit</SelectItem>\n            <SelectItem value=\"DIG-004\">Digester 004 - Mixed Feed</SelectItem>\n            <SelectItem value=\"DIG-005\">Digester 005 - Experimental</SelectItem>\n          </SelectContent>\n        </Select>\n      </div>\n\n      <div className=\"grid grid-cols-2 gap-4\">\n        <div className=\"space-y-2\">\n          <Label htmlFor=\"farmerName\">{t('farmerName')}</Label>\n          <Input\n            id=\"farmerName\"\n            value={formData.farmerName}\n            onChange={(e) => setFormData(prev => ({ ...prev, farmerName: e.target.value }))}\n            placeholder=\"राजेश कुमार\"\n          />\n        </div>\n        <div className=\"space-y-2\">\n          <Label htmlFor=\"source\">{t('source')}</Label>\n          <Input\n            id=\"source\"\n            value={formData.source}\n            onChange={(e) => setFormData(prev => ({ ...prev, source: e.target.value }))}\n            placeholder=\"Gokul Gaushala, Mathura\"\n          />\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-2 gap-4\">\n        <div className=\"space-y-2\">\n          <Label htmlFor=\"volume\">{t('volume')}</Label>\n          <Input\n            id=\"volume\"\n            type=\"number\"\n            step=\"0.1\"\n            value={formData.volume}\n            onChange={(e) => setFormData(prev => ({ ...prev, volume: e.target.value }))}\n            placeholder=\"0.0\"\n            required\n          />\n        </div>\n        <div className=\"space-y-2\">\n          <Label htmlFor=\"methaneContent\">{t('methaneContent')}</Label>\n          <Input\n            id=\"methaneContent\"\n            type=\"number\"\n            step=\"0.1\"\n            value={formData.methaneContent}\n            onChange={(e) => setFormData(prev => ({ ...prev, methaneContent: e.target.value }))}\n            placeholder=\"0.0\"\n            required\n          />\n        </div>\n      </div>\n\n      <div className=\"space-y-2\">\n        <Label htmlFor=\"notes\">{t('notes')}</Label>\n        <Textarea\n          id=\"notes\"\n          value={formData.notes}\n          onChange={(e) => setFormData(prev => ({ ...prev, notes: e.target.value }))}\n          placeholder=\"Detailed batch information including source details, quality parameters, and special notes...\"\n          rows={4}\n        />\n      </div>\n\n      <DialogFooter>\n        <Button type=\"button\" variant=\"outline\" onClick={onCancel}>\n          {t('cancel')}\n        </Button>\n        <Button type=\"submit\">\n          {batch ? t('update') : t('create')}\n        </Button>\n      </DialogFooter>\n    </form>\n  );\n};\n\nexport const BatchManagement: React.FC<BatchManagementProps> = ({ languageContext }) => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [statusFilter, setStatusFilter] = useState<BatchStatus | 'all'>('all');\n  const [isCreateDialogOpen, setIsCreateDialogOpen] = useState(false);\n  const [editingBatch, setEditingBatch] = useState<BatchData | null>(null);\n  const [deletingBatch, setDeletingBatch] = useState<BatchData | null>(null);\n\n  const lang = languageContext?.language || 'en';\n  const t = (key: string): string => {\n    return languageContext?.t(key) || translations[lang][key as keyof typeof translations[typeof lang]] || key;\n  };\n\n  const filteredBatches = batches.filter(batch => {\n    const matchesSearch = batch.id.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         batch.digesterId.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         batch.farmerName?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         batch.source?.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesStatus = statusFilter === 'all' || batch.status === statusFilter;\n    return matchesSearch && matchesStatus;\n  });\n\n  const handleCreateBatch = async (data: Partial<BatchData>) => {\n    await createBatch(data);\n    setIsCreateDialogOpen(false);\n  };\n\n  const handleUpdateBatch = async (data: Partial<BatchData>) => {\n    if (editingBatch) {\n      await updateBatch(editingBatch.id, data);\n      setEditingBatch(null);\n    }\n  };\n\n  const handleDeleteBatch = async () => {\n    if (deletingBatch) {\n      await deleteBatch(deletingBatch.id);\n      setDeletingBatch(null);\n    }\n  };\n\n  const activeBatches = batches.filter(b => b.status === 'processing' || b.status === 'testing');\n  const readyBatches = batches.filter(b => b.status === 'ready');\n  const transferredBatches = batches.filter(b => b.status === 'transferred');\n  const totalVolume = batches.reduce((sum, b) => sum + b.volume, 0);\n  const averageQuality = batches.filter(b => b.qualityScore).reduce((sum, b) => sum + (b.qualityScore || 0), 0) / batches.filter(b => b.qualityScore).length;\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between -mt-6\">\n        <div>\n          <h1 className=\"text-3xl font-bold tracking-tight\">{t('title')}</h1>\n          <p className=\"text-muted-foreground\">{t('subtitle')}</p>\n        </div>\n        <Dialog open={isCreateDialogOpen} onOpenChange={setIsCreateDialogOpen}>\n          <DialogTrigger asChild>\n            <Button className=\"gap-2\">\n              <Plus className=\"w-4 h-4\" />\n              {t('createBatch')}\n            </Button>\n          </DialogTrigger>\n          <DialogContent className=\"sm:max-w-[525px]\">\n            <DialogHeader>\n              <DialogTitle>{t('createBatch')}</DialogTitle>\n              <DialogDescription>\n                Create a new biogas batch from digester output with detailed source information\n              </DialogDescription>\n            </DialogHeader>\n            <BatchForm\n              onSubmit={handleCreateBatch}\n              onCancel={() => setIsCreateDialogOpen(false)}\n              t={t}\n            />\n          </DialogContent>\n        </Dialog>\n      </div>\n\n      {/* Enhanced Statistics Cards */}\n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-5\">\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Active Batches</CardTitle>\n            <Package className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{activeBatches.length}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              Currently processing\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Ready for Transfer</CardTitle>\n            <CheckCircle className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{readyBatches.length}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              Quality approved\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Total Volume</CardTitle>\n            <Truck className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{totalVolume.toFixed(1)} m³</div>\n            <p className=\"text-xs text-muted-foreground\">\n              All batches combined\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Average Quality</CardTitle>\n            <FileText className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{averageQuality.toFixed(1)}/100</div>\n            <p className=\"text-xs text-muted-foreground\">\n              Quality score average\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Certificates</CardTitle>\n            <FileText className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{certificates.length}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              Available for download\n            </p>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Main Content */}\n      <Tabs defaultValue=\"batches\" className=\"space-y-6\">\n        <TabsList>\n          <TabsTrigger value=\"batches\">{t('batchList')}</TabsTrigger>\n          <TabsTrigger value=\"quality\">{t('activeQualities')}</TabsTrigger>\n          <TabsTrigger value=\"certificates\">{t('certificates')}</TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"batches\">\n          <Card>\n            <CardHeader>\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <CardTitle>{t('batchList')}</CardTitle>\n                  <CardDescription>\n                    Manage all biogas batches and their lifecycle with detailed source tracking\n                  </CardDescription>\n                </div>\n                <div className=\"flex gap-2\">\n                  <div className=\"relative\">\n                    <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-muted-foreground\" />\n                    <Input\n                      placeholder={t('search')}\n                      value={searchTerm}\n                      onChange={(e) => setSearchTerm(e.target.value)}\n                      className=\"pl-10 w-64\"\n                    />\n                  </div>\n                  <Select value={statusFilter} onValueChange={(value) => setStatusFilter(value as BatchStatus | 'all')}>\n                    <SelectTrigger className=\"w-32\">\n                      <SelectValue />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"all\">All Status</SelectItem>\n                      <SelectItem value=\"processing\">Processing</SelectItem>\n                      <SelectItem value=\"testing\">Testing</SelectItem>\n                      <SelectItem value=\"ready\">Ready</SelectItem>\n                      <SelectItem value=\"transferred\">Transferred</SelectItem>\n                      <SelectItem value=\"rejected\">Rejected</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n              </div>\n            </CardHeader>\n            <CardContent>\n              <Table>\n                <TableHeader>\n                  <TableRow>\n                    <TableHead>{t('batchId')}</TableHead>\n                    <TableHead>{t('farmerName')}</TableHead>\n                    <TableHead>{t('source')}</TableHead>\n                    <TableHead>{t('volume')}</TableHead>\n                    <TableHead>{t('methaneContent')}</TableHead>\n                    <TableHead>{t('status')}</TableHead>\n                    <TableHead>{t('qualityScore')}</TableHead>\n                    <TableHead>{t('createdDate')}</TableHead>\n                    <TableHead>{t('actions')}</TableHead>\n                  </TableRow>\n                </TableHeader>\n                <TableBody>\n                  {filteredBatches.map((batch) => (\n                    <TableRow key={batch.id}>\n                      <TableCell className=\"font-medium\">{batch.id}</TableCell>\n                      <TableCell>{batch.farmerName || 'N/A'}</TableCell>\n                      <TableCell className=\"max-w-32 truncate\" title={batch.source}>\n                        {batch.source || 'N/A'}\n                      </TableCell>\n                      <TableCell>{batch.volume.toFixed(1)} m³</TableCell>\n                      <TableCell>{batch.methaneContent.toFixed(1)}%</TableCell>\n                      <TableCell>\n                        <Badge className={getStatusColor(batch.status)}>\n                          <div className=\"flex items-center gap-1\">\n                            {getStatusIcon(batch.status)}\n                            {t(batch.status)}\n                          </div>\n                        </Badge>\n                      </TableCell>\n                      <TableCell>\n                        {batch.qualityScore ? (\n                          <span className={`font-medium ${\n                            batch.qualityScore >= 90 ? 'text-green-600' :\n                            batch.qualityScore >= 70 ? 'text-yellow-600' :\n                            'text-red-600'\n                          }`}>\n                            {batch.qualityScore}/100\n                          </span>\n                        ) : (\n                          <span className=\"text-muted-foreground\">Pending</span>\n                        )}\n                      </TableCell>\n                      <TableCell>{new Date(batch.createdDate).toLocaleDateString()}</TableCell>\n                      <TableCell>\n                        <div className=\"flex gap-2\">\n                          <Button\n                            size=\"sm\"\n                            variant=\"outline\"\n                            onClick={() => setEditingBatch(batch)}\n                          >\n                            <Edit className=\"w-4 h-4\" />\n                          </Button>\n                          <Button\n                            size=\"sm\"\n                            variant=\"outline\"\n                            onClick={() => setDeletingBatch(batch)}\n                          >\n                            <Trash2 className=\"w-4 h-4\" />\n                          </Button>\n                          <Button\n                            size=\"sm\"\n                            variant=\"outline\"\n                            title={batch.notes}\n                          >\n                            <Eye className=\"w-4 h-4\" />\n                          </Button>\n                        </div>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"quality\">\n          <Card>\n            <CardHeader>\n              <CardTitle>{t('activeQualities')}</CardTitle>\n              <CardDescription>\n                Monitor ongoing quality testing processes with detailed progress tracking\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-4\">\n                {batches.filter(b => b.status === 'testing').map((batch) => (\n                  <div key={batch.id} className=\"flex items-center justify-between p-4 border rounded-lg\">\n                    <div className=\"space-y-1\">\n                      <h4 className=\"font-semibold\">{batch.id}</h4>\n                      <p className=\"text-sm text-muted-foreground\">\n                        Farmer: {batch.farmerName} | Volume: {batch.volume.toFixed(1)} m³\n                      </p>\n                      <p className=\"text-sm text-muted-foreground\">\n                        Source: {batch.source}\n                      </p>\n                    </div>\n                    <div className=\"flex items-center gap-4\">\n                      <Badge className={getStatusColor(batch.status)}>\n                        {t('testing')}\n                      </Badge>\n                      <Button size=\"sm\" variant=\"outline\">\n                        View Progress\n                      </Button>\n                    </div>\n                  </div>\n                ))}\n                {batches.filter(b => b.status === 'testing').length === 0 && (\n                  <div className=\"text-center py-8 text-muted-foreground\">\n                    <Package className=\"w-12 h-12 mx-auto mb-2\" />\n                    <p>No active quality tests</p>\n                  </div>\n                )}\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"certificates\">\n          <Card>\n            <CardHeader>\n              <CardTitle>{t('certificates')}</CardTitle>\n              <CardDescription>\n                Download and manage quality certificates with detailed certification information\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-4\">\n                {certificates.map((cert) => {\n                  const batch = batches.find(b => b.id === cert.batchId);\n                  return (\n                    <div key={cert.id} className=\"flex items-center justify-between p-4 border rounded-lg\">\n                      <div className=\"space-y-1\">\n                        <h4 className=\"font-semibold\">{cert.batchId}</h4>\n                        <p className=\"text-sm text-muted-foreground\">\n                          Farmer: {batch?.farmerName} | Score: {cert.qualityScore}/100\n                        </p>\n                        <p className=\"text-sm text-muted-foreground\">\n                          Certified by: {cert.certifiedBy}\n                        </p>\n                        <p className=\"text-sm text-muted-foreground\">\n                          Issued: {new Date(cert.issuedDate).toLocaleDateString()} |\n                          Valid until: {cert.validUntil ? new Date(cert.validUntil).toLocaleDateString() : 'N/A'}\n                        </p>\n                      </div>\n                      <div className=\"flex items-center gap-4\">\n                        <Badge className=\"bg-green-100 text-green-800\">\n                          Certified\n                        </Badge>\n                        <Button size=\"sm\" variant=\"outline\">\n                          <Download className=\"w-4 h-4 mr-2\" />\n                          Download\n                        </Button>\n                      </div>\n                    </div>\n                  );\n                })}\n                {certificates.length === 0 && (\n                  <div className=\"text-center py-8 text-muted-foreground\">\n                    <FileText className=\"w-12 h-12 mx-auto mb-2\" />\n                    <p>No certificates available</p>\n                  </div>\n                )}\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n\n      {/* Edit Dialog */}\n      <Dialog open={!!editingBatch} onOpenChange={() => setEditingBatch(null)}>\n        <DialogContent className=\"sm:max-w-[525px]\">\n          <DialogHeader>\n            <DialogTitle>{t('editBatch')}</DialogTitle>\n            <DialogDescription>\n              Update batch information and status with detailed source tracking\n            </DialogDescription>\n          </DialogHeader>\n          {editingBatch && (\n            <BatchForm\n              batch={editingBatch}\n              onSubmit={handleUpdateBatch}\n              onCancel={() => setEditingBatch(null)}\n              t={t}\n            />\n          )}\n        </DialogContent>\n      </Dialog>\n\n      {/* Delete Dialog */}\n      <Dialog open={!!deletingBatch} onOpenChange={() => setDeletingBatch(null)}>\n        <DialogContent>\n          <DialogHeader>\n            <DialogTitle>{t('deleteBatch')}</DialogTitle>\n            <DialogDescription>\n              Are you sure you want to delete batch {deletingBatch?.id}? This action cannot be undone.\n            </DialogDescription>\n          </DialogHeader>\n          <DialogFooter>\n            <Button variant=\"outline\" onClick={() => setDeletingBatch(null)}>\n              {t('cancel')}\n            </Button>\n            <Button variant=\"destructive\" onClick={handleDeleteBatch}>\n              {t('delete')}\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default BatchManagement;","import React, { useState, useEffect } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '../../components/ui/card';\nimport { Button } from '../../components/ui/button';\nimport { Badge } from '../../components/ui/badge';\nimport { AlertTriangle, Camera, Scale, Clock, CheckCircle, XCircle, Eye } from 'lucide-react';\n\n// Mock types for DisputeResolution\ntype DisputeStatus = 'OPEN' | 'INVESTIGATING' | 'RESOLVED' | 'ESCALATED';\ntype DisputeType = 'WEIGHT_MISMATCH' | 'QUALITY_ISSUE' | 'PAYMENT_DELAY' | 'COLLECTION_MISSED';\n\ninterface DisputeClaim {\n  weight: number;\n  quality: string;\n  timestamp: string;\n  photoproof?: string;\n}\n\ninterface IoTReading {\n  weight: number;\n  quality: string;\n  deviceId: string;\n  confidence: number;\n  timestamp: string;\n}\n\ninterface Dispute {\n  id: string;\n  type: DisputeType;\n  status: DisputeStatus;\n  farmerClaim: DisputeClaim;\n  iotReading: IoTReading;\n  createdAt: string;\n  resolution?: string;\n  resolvedAt?: string;\n}\n\n// Mock data\nconst disputes: Dispute[] = [\n  {\n    id: 'DISP-001',\n    type: 'WEIGHT_MISMATCH',\n    status: 'OPEN',\n    farmerClaim: {\n      weight: 45.2,\n      quality: 'A',\n      timestamp: new Date(Date.now() - 3600000).toISOString(),\n      photoproof: 'photo_001.jpg'\n    },\n    iotReading: {\n      weight: 42.8,\n      quality: 'A',\n      deviceId: 'SCALE-001',\n      confidence: 0.95,\n      timestamp: new Date(Date.now() - 3600000).toISOString()\n    },\n    createdAt: new Date(Date.now() - 3600000).toISOString()\n  },\n  {\n    id: 'DISP-002',\n    type: 'QUALITY_ISSUE',\n    status: 'INVESTIGATING',\n    farmerClaim: {\n      weight: 38.5,\n      quality: 'A',\n      timestamp: new Date(Date.now() - 7200000).toISOString()\n    },\n    iotReading: {\n      weight: 38.7,\n      quality: 'B',\n      deviceId: 'SENSOR-002',\n      confidence: 0.88,\n      timestamp: new Date(Date.now() - 7200000).toISOString()\n    },\n    createdAt: new Date(Date.now() - 7200000).toISOString()\n  },\n  {\n    id: 'DISP-003',\n    type: 'PAYMENT_DELAY',\n    status: 'RESOLVED',\n    farmerClaim: {\n      weight: 52.0,\n      quality: 'A',\n      timestamp: new Date(Date.now() - 86400000).toISOString()\n    },\n    iotReading: {\n      weight: 51.8,\n      quality: 'A',\n      deviceId: 'SCALE-003',\n      confidence: 0.97,\n      timestamp: new Date(Date.now() - 86400000).toISOString()\n    },\n    createdAt: new Date(Date.now() - 86400000).toISOString(),\n    resolution: 'Payment processed after verification. Minor weight difference within acceptable tolerance.',\n    resolvedAt: new Date(Date.now() - 43200000).toISOString()\n  }\n];\n\nconst loading = {\n  disputes: false\n};\n\n// Mock functions\nconst resolveDispute = async (disputeId: string, resolutionData: any) => {\n  console.log(`Resolving dispute ${disputeId}:`, resolutionData);\n  // Mock API call\n  return new Promise(resolve => setTimeout(resolve, 1000));\n};\n\nconst escalateDispute = async (disputeId: string, reason: string) => {\n  console.log(`Escalating dispute ${disputeId}:`, reason);\n  // Mock API call\n  return new Promise(resolve => setTimeout(resolve, 1000));\n};\n\nconst DisputeResolution: React.FC = () => {\n  const [selectedDispute, setSelectedDispute] = useState<Dispute | null>(null);\n  const [filter, setFilter] = useState<'ALL' | 'OPEN' | 'INVESTIGATING' | 'RESOLVED'>('ALL');\n\n  const filteredDisputes = disputes.filter(dispute =>\n    filter === 'ALL' || dispute.status === filter\n  );\n\n  const handleResolveDispute = async (disputeId: string, resolution: string, favorFarmer: boolean) => {\n    try {\n      await resolveDispute(disputeId, {\n        resolution,\n        favorFarmer,\n        resolvedBy: 'CLUSTER_MANAGER',\n        timestamp: new Date().toISOString()\n      });\n      setSelectedDispute(null);\n    } catch (error) {\n      console.error('Error resolving dispute:', error);\n    }\n  };\n\n  const getDisputeTypeLabel = (type: string) => {\n    const labels = {\n      'WEIGHT_MISMATCH': 'Weight Mismatch',\n      'QUALITY_ISSUE': 'Quality Issue',\n      'PAYMENT_DELAY': 'Payment Delay',\n      'COLLECTION_MISSED': 'Collection Missed'\n    };\n    return labels[type as keyof typeof labels] || type;\n  };\n\n  const getStatusColor = (status: string) => {\n    const colors = {\n      'OPEN': 'destructive',\n      'INVESTIGATING': 'secondary',\n      'RESOLVED': 'default',\n      'ESCALATED': 'outline'\n    };\n    return colors[status as keyof typeof colors] || 'outline';\n  };\n\n  if (loading.disputes) {\n    return (\n      <div className=\"flex items-center justify-center min-h-64\">\n        <div className=\"text-center\">\n          <AlertTriangle className=\"h-8 w-8 animate-spin mx-auto mb-4\" />\n          <p>Loading disputes...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex justify-between items-center -mt-6\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-gray-900\">Dispute Resolution</h1>\n          <p className=\"text-gray-600 mt-2\">\n            Resolve farmer disputes with side-by-side evidence comparison\n          </p>\n        </div>\n        <div className=\"flex space-x-2\">\n          {['ALL', 'OPEN', 'INVESTIGATING', 'RESOLVED'].map((status) => (\n            <Button\n              key={status}\n              variant={filter === status ? \"default\" : \"outline\"}\n              size=\"sm\"\n              onClick={() => setFilter(status as any)}\n            >\n              {status}\n            </Button>\n          ))}\n        </div>\n      </div>\n\n      {/* Disputes List */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center space-x-2\">\n              <AlertTriangle className=\"h-5 w-5\" />\n              <span>Active Disputes ({filteredDisputes.length})</span>\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-3\">\n              {filteredDisputes.map((dispute) => (\n                <div\n                  key={dispute.id}\n                  className={`border rounded-lg p-4 cursor-pointer transition-colors ${\n                    selectedDispute?.id === dispute.id ? 'border-blue-500 bg-blue-50' : 'hover:bg-gray-50'\n                  }`}\n                  onClick={() => setSelectedDispute(dispute)}\n                >\n                  <div className=\"flex justify-between items-start mb-2\">\n                    <div>\n                      <h3 className=\"font-semibold\">{getDisputeTypeLabel(dispute.type)}</h3>\n                      <p className=\"text-sm text-gray-600\">Dispute #{dispute.id}</p>\n                    </div>\n                    <Badge variant={getStatusColor(dispute.status) as any}>\n                      {dispute.status}\n                    </Badge>\n                  </div>\n\n                  <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                    <div>\n                      <p className=\"font-medium text-green-700\">Farmer Claim:</p>\n                      <p>Weight: {dispute.farmerClaim.weight} kg</p>\n                      <p>Quality: Grade {dispute.farmerClaim.quality}</p>\n                    </div>\n                    <div>\n                      <p className=\"font-medium text-blue-700\">IoT Reading:</p>\n                      <p>Weight: {dispute.iotReading.weight} kg</p>\n                      <p>Quality: Grade {dispute.iotReading.quality}</p>\n                      <p>Confidence: {(dispute.iotReading.confidence * 100).toFixed(1)}%</p>\n                    </div>\n                  </div>\n\n                  <div className=\"mt-3 flex items-center justify-between\">\n                    <div className=\"text-xs text-gray-500 flex items-center space-x-1\">\n                      <Clock className=\"h-3 w-3\" />\n                      <span>Created: {new Date(dispute.createdAt).toLocaleDateString()}</span>\n                    </div>\n                    <Button variant=\"ghost\" size=\"sm\">\n                      <Eye className=\"h-4 w-4\" />\n                    </Button>\n                  </div>\n                </div>\n              ))}\n\n              {filteredDisputes.length === 0 && (\n                <div className=\"text-center py-8 text-gray-500\">\n                  <AlertTriangle className=\"h-12 w-12 mx-auto mb-4 opacity-50\" />\n                  <p>No disputes found for selected filter</p>\n                </div>\n              )}\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Dispute Details & Resolution */}\n        <Card>\n          <CardHeader>\n            <CardTitle>Dispute Resolution</CardTitle>\n          </CardHeader>\n          <CardContent>\n            {selectedDispute ? (\n              <div className=\"space-y-6\">\n                {/* Side-by-side Evidence Comparison */}\n                <div className=\"grid grid-cols-2 gap-4\">\n                  {/* Farmer Evidence */}\n                  <div className=\"border rounded-lg p-4 bg-green-50\">\n                    <h3 className=\"font-semibold text-green-800 mb-3 flex items-center space-x-2\">\n                      <Scale className=\"h-4 w-4\" />\n                      <span>Farmer Evidence</span>\n                    </h3>\n                    <div className=\"space-y-2 text-sm\">\n                      <div className=\"flex justify-between\">\n                        <span>Weight:</span>\n                        <span className=\"font-medium\">{selectedDispute.farmerClaim.weight} kg</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span>Quality:</span>\n                        <span className=\"font-medium\">Grade {selectedDispute.farmerClaim.quality}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span>Time:</span>\n                        <span className=\"font-medium\">\n                          {new Date(selectedDispute.farmerClaim.timestamp).toLocaleTimeString()}\n                        </span>\n                      </div>\n                      {selectedDispute.farmerClaim.photoproof && (\n                        <div className=\"mt-3\">\n                          <p className=\"text-xs text-gray-600 mb-2\">Photo Proof:</p>\n                          <div className=\"w-full h-24 bg-gray-200 rounded flex items-center justify-center\">\n                            <Camera className=\"h-8 w-8 text-gray-400\" />\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n\n                  {/* IoT Evidence */}\n                  <div className=\"border rounded-lg p-4 bg-blue-50\">\n                    <h3 className=\"font-semibold text-blue-800 mb-3 flex items-center space-x-2\">\n                      <AlertTriangle className=\"h-4 w-4\" />\n                      <span>IoT Evidence</span>\n                    </h3>\n                    <div className=\"space-y-2 text-sm\">\n                      <div className=\"flex justify-between\">\n                        <span>Weight:</span>\n                        <span className=\"font-medium\">{selectedDispute.iotReading.weight} kg</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span>Quality:</span>\n                        <span className=\"font-medium\">Grade {selectedDispute.iotReading.quality}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span>Device:</span>\n                        <span className=\"font-medium\">{selectedDispute.iotReading.deviceId}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span>Confidence:</span>\n                        <span className=\"font-medium\">\n                          {(selectedDispute.iotReading.confidence * 100).toFixed(1)}%\n                        </span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span>Time:</span>\n                        <span className=\"font-medium\">\n                          {new Date(selectedDispute.iotReading.timestamp).toLocaleTimeString()}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Variance Analysis */}\n                <div className=\"border rounded-lg p-4 bg-yellow-50\">\n                  <h3 className=\"font-semibold text-yellow-800 mb-3\">Variance Analysis</h3>\n                  <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                    <div className=\"flex justify-between\">\n                      <span>Weight Difference:</span>\n                      <span className=\"font-medium\">\n                        {Math.abs(selectedDispute.farmerClaim.weight - selectedDispute.iotReading.weight).toFixed(1)} kg\n                      </span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span>Quality Match:</span>\n                      <span className=\"font-medium\">\n                        {selectedDispute.farmerClaim.quality === selectedDispute.iotReading.quality ? '✓ Match' : '✗ Mismatch'}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Resolution Actions */}\n                {selectedDispute.status === 'OPEN' && (\n                  <div className=\"space-y-3\">\n                    <h3 className=\"font-semibold\">Resolution Actions</h3>\n                    <div className=\"grid grid-cols-2 gap-3\">\n                      <Button\n                        className=\"flex items-center space-x-2\"\n                        onClick={() => handleResolveDispute(\n                          selectedDispute.id,\n                          'Resolved in favor of farmer based on evidence review',\n                          true\n                        )}\n                      >\n                        <CheckCircle className=\"h-4 w-4\" />\n                        <span>Favor Farmer</span>\n                      </Button>\n                      <Button\n                        variant=\"outline\"\n                        className=\"flex items-center space-x-2\"\n                        onClick={() => handleResolveDispute(\n                          selectedDispute.id,\n                          'Resolved in favor of IoT reading based on device confidence',\n                          false\n                        )}\n                      >\n                        <XCircle className=\"h-4 w-4\" />\n                        <span>Favor IoT</span>\n                      </Button>\n                    </div>\n                    <Button\n                      variant=\"destructive\"\n                      className=\"w-full\"\n                      onClick={() => escalateDispute(selectedDispute.id, 'Escalated for manual investigation')}\n                    >\n                      Escalate to Higher Authority\n                    </Button>\n                  </div>\n                )}\n\n                {/* Resolution History */}\n                {selectedDispute.resolution && (\n                  <div className=\"border rounded-lg p-4 bg-gray-50\">\n                    <h3 className=\"font-semibold mb-2\">Resolution</h3>\n                    <p className=\"text-sm text-gray-700\">{selectedDispute.resolution}</p>\n                    {selectedDispute.resolvedAt && (\n                      <p className=\"text-xs text-gray-500 mt-2\">\n                        Resolved on: {new Date(selectedDispute.resolvedAt).toLocaleString()}\n                      </p>\n                    )}\n                  </div>\n                )}\n              </div>\n            ) : (\n              <div className=\"text-center py-12 text-gray-500\">\n                <AlertTriangle className=\"h-12 w-12 mx-auto mb-4 opacity-50\" />\n                <p>Select a dispute to view details and resolution options</p>\n              </div>\n            )}\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n};\n\nexport default DisputeResolution;","import React, { useState } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '../../components/ui/card';\nimport { Button } from '../../components/ui/button';\nimport { Badge } from '../../components/ui/badge';\nimport { DollarSign, Receipt, Shield, Hash, CheckCircle, AlertCircle } from 'lucide-react';\n\n// Mock types for PaymentReconciliation\ninterface Payment {\n  id: string;\n  farmerId: string;\n  amount: number;\n  type: string;\n  status: string;\n  createdAt: string;\n  transactionId?: string;\n  auditHash: string;\n  batchIds: string[];\n}\n\ninterface Farmer {\n  id: string;\n  name: string;\n}\n\n// Mock data\nconst payments: Payment[] = [\n  {\n    id: 'PAY-001',\n    farmerId: 'FARM-001',\n    amount: 412.25,\n    type: 'CASH',\n    status: 'COMPLETED',\n    createdAt: new Date().toISOString(),\n    transactionId: 'TXN-001',\n    auditHash: 'sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456',\n    batchIds: ['BATCH-001']\n  },\n  {\n    id: 'PAY-002',\n    farmerId: 'FARM-002',\n    amount: 325.80,\n    type: 'UPI',\n    status: 'PENDING',\n    createdAt: new Date(Date.now() - 86400000).toISOString(),\n    auditHash: 'sha256:b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef1234567',\n    batchIds: ['BATCH-002']\n  }\n];\n\nconst farmers: Farmer[] = [\n  { id: 'FARM-001', name: 'राम कुमार' },\n  { id: 'FARM-002', name: 'श्याम यादव' }\n];\n\nconst loading = {\n  payments: false\n};\n\nconst PaymentReconciliation: React.FC = () => {\n  const [selectedPayment, setSelectedPayment] = useState<Payment | null>(null);\n\n  const getStatusColor = (status: string) => {\n    const colors = {\n      'PENDING': 'secondary',\n      'PROCESSING': 'outline',\n      'COMPLETED': 'default',\n      'FAILED': 'destructive'\n    };\n    return colors[status as keyof typeof colors] || 'outline';\n  };\n\n  const getPaymentTypeIcon = (type: string) => {\n    switch (type) {\n      case 'CASH': return '💵';\n      case 'UPI': return '📱';\n      case 'BANK_TRANSFER': return '🏦';\n      case 'CHEQUE': return '📝';\n      default: return '💳';\n    }\n  };\n\n  const getFarmerName = (farmerId: string) => {\n    const farmer = farmers.find(f => f.id === farmerId);\n    return farmer?.name || `Farmer ${farmerId}`;\n  };\n\n  if (loading.payments) {\n    return (\n      <div className=\"flex items-center justify-center min-h-64\">\n        <div className=\"text-center\">\n          <DollarSign className=\"h-8 w-8 animate-spin mx-auto mb-4\" />\n          <p>Loading payments...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"-mt-6\">\n        <h1 className=\"text-2xl font-bold text-gray-900\">Payment Reconciliation</h1>\n        <p className=\"text-gray-600 mt-1\">\n          Track and reconcile farmer payments with immutable audit log\n        </p>\n      </div>\n\n      {/* Payment Summary */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center space-x-2\">\n              <Receipt className=\"h-5 w-5 text-green-600\" />\n              <div>\n                <p className=\"text-sm text-gray-600\">Total Payments</p>\n                <p className=\"text-xl font-bold\">{payments.length}</p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center space-x-2\">\n              <CheckCircle className=\"h-5 w-5 text-green-600\" />\n              <div>\n                <p className=\"text-sm text-gray-600\">Completed</p>\n                <p className=\"text-xl font-bold\">\n                  {payments.filter(p => p.status === 'COMPLETED').length}\n                </p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center space-x-2\">\n              <AlertCircle className=\"h-5 w-5 text-orange-600\" />\n              <div>\n                <p className=\"text-sm text-gray-600\">Pending</p>\n                <p className=\"text-xl font-bold\">\n                  {payments.filter(p => p.status === 'PENDING').length}\n                </p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center space-x-2\">\n              <DollarSign className=\"h-5 w-5 text-blue-600\" />\n              <div>\n                <p className=\"text-sm text-gray-600\">Total Amount</p>\n                <p className=\"text-xl font-bold\">\n                  ₹{payments.reduce((sum, p) => sum + p.amount, 0).toLocaleString()}\n                </p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Payments List & Details */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\n        {/* Payments List */}\n        <Card>\n          <CardHeader>\n            <CardTitle>Payment Records</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-3 max-h-96 overflow-y-auto\">\n              {payments.map((payment) => (\n                <div\n                  key={payment.id}\n                  className={`border rounded-lg p-4 cursor-pointer transition-colors ${\n                    selectedPayment?.id === payment.id ? 'border-blue-500 bg-blue-50' : 'hover:bg-gray-50'\n                  }`}\n                  onClick={() => setSelectedPayment(payment)}\n                >\n                  <div className=\"flex justify-between items-start mb-2\">\n                    <div>\n                      <h3 className=\"font-semibold\">{getFarmerName(payment.farmerId)}</h3>\n                      <p className=\"text-sm text-gray-600\">₹{payment.amount.toLocaleString()}</p>\n                    </div>\n                    <div className=\"text-right\">\n                      <Badge variant={getStatusColor(payment.status) as any}>\n                        {payment.status}\n                      </Badge>\n                      <p className=\"text-xs text-gray-500 mt-1\">\n                        {getPaymentTypeIcon(payment.type)} {payment.type}\n                      </p>\n                    </div>\n                  </div>\n\n                  <div className=\"flex justify-between items-center text-xs text-gray-500\">\n                    <span>#{payment.id}</span>\n                    <span>{new Date(payment.createdAt).toLocaleDateString()}</span>\n                  </div>\n\n                  {payment.transactionId && (\n                    <div className=\"mt-2 text-xs font-mono bg-gray-100 p-1 rounded\">\n                      TXN: {payment.transactionId}\n                    </div>\n                  )}\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Payment Details & Audit */}\n        <Card>\n          <CardHeader>\n            <CardTitle>Payment Details & Audit Trail</CardTitle>\n          </CardHeader>\n          <CardContent>\n            {selectedPayment ? (\n              <div className=\"space-y-4\">\n                {/* Payment Information */}\n                <div className=\"border rounded-lg p-4 bg-gray-50\">\n                  <h3 className=\"font-semibold mb-3\">Payment Information</h3>\n                  <div className=\"grid grid-cols-2 gap-3 text-sm\">\n                    <div>\n                      <span className=\"text-gray-600\">Payment ID:</span>\n                      <p className=\"font-medium\">{selectedPayment.id}</p>\n                    </div>\n                    <div>\n                      <span className=\"text-gray-600\">Amount:</span>\n                      <p className=\"font-medium\">₹{selectedPayment.amount.toLocaleString()}</p>\n                    </div>\n                    <div>\n                      <span className=\"text-gray-600\">Farmer:</span>\n                      <p className=\"font-medium\">{getFarmerName(selectedPayment.farmerId)}</p>\n                    </div>\n                    <div>\n                      <span className=\"text-gray-600\">Type:</span>\n                      <p className=\"font-medium\">\n                        {getPaymentTypeIcon(selectedPayment.type)} {selectedPayment.type}\n                      </p>\n                    </div>\n                    <div>\n                      <span className=\"text-gray-600\">Status:</span>\n                      <Badge variant={getStatusColor(selectedPayment.status) as any}>\n                        {selectedPayment.status}\n                      </Badge>\n                    </div>\n                    <div>\n                      <span className=\"text-gray-600\">Created:</span>\n                      <p className=\"font-medium\">\n                        {new Date(selectedPayment.createdAt).toLocaleString()}\n                      </p>\n                    </div>\n                  </div>\n\n                  {selectedPayment.transactionId && (\n                    <div className=\"mt-3\">\n                      <span className=\"text-gray-600\">Transaction ID:</span>\n                      <p className=\"font-mono text-sm bg-white p-2 rounded border\">\n                        {selectedPayment.transactionId}\n                      </p>\n                    </div>\n                  )}\n                </div>\n\n                {/* Audit Hash */}\n                <div className=\"border rounded-lg p-4 bg-green-50\">\n                  <h3 className=\"font-semibold mb-3 flex items-center space-x-2\">\n                    <Shield className=\"h-4 w-4\" />\n                    <span>Audit Hash (Immutable)</span>\n                  </h3>\n                  <div className=\"flex items-center space-x-2\">\n                    <Hash className=\"h-4 w-4 text-gray-500\" />\n                    <p className=\"font-mono text-xs bg-white p-2 rounded border flex-1\">\n                      {selectedPayment.auditHash}\n                    </p>\n                  </div>\n                  <p className=\"text-xs text-gray-600 mt-2\">\n                    This cryptographic hash ensures payment record integrity and prevents tampering.\n                  </p>\n                </div>\n\n                {/* Related Batches */}\n                <div className=\"border rounded-lg p-4\">\n                  <h3 className=\"font-semibold mb-3\">Related Batches</h3>\n                  <div className=\"space-y-2\">\n                    {selectedPayment.batchIds.map((batchId) => (\n                      <div key={batchId} className=\"flex items-center justify-between text-sm\">\n                        <span>Batch {batchId}</span>\n                        <Badge variant=\"outline\">Linked</Badge>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n\n                {/* Actions */}\n                {selectedPayment.status === 'PENDING' && (\n                  <div className=\"space-y-2\">\n                    <Button className=\"w-full\">\n                      <CheckCircle className=\"h-4 w-4 mr-2\" />\n                      Mark as Completed\n                    </Button>\n                    <Button variant=\"outline\" className=\"w-full\">\n                      Process Payment\n                    </Button>\n                  </div>\n                )}\n\n                {selectedPayment.status === 'FAILED' && (\n                  <Button variant=\"outline\" className=\"w-full\">\n                    Retry Payment\n                  </Button>\n                )}\n              </div>\n            ) : (\n              <div className=\"text-center py-12 text-gray-500\">\n                <DollarSign className=\"h-12 w-12 mx-auto mb-4 opacity-50\" />\n                <p>Select a payment to view details and audit trail</p>\n              </div>\n            )}\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n};\n\nexport default PaymentReconciliation;","/**\n * Time zone name format.\n */\n\n/**\n * The function returns the time zone name for the given date in the specified\n * time zone.\n *\n * It uses the `Intl.DateTimeFormat` API and by default outputs the time zone\n * name in a long format, e.g. \"Pacific Standard Time\" or\n * \"Singapore Standard Time\".\n *\n * It is possible to specify the format as the third argument using one of the following options\n *\n * - \"short\": e.g. \"EDT\" or \"GMT+8\".\n * - \"long\": e.g. \"Eastern Daylight Time\".\n * - \"shortGeneric\": e.g. \"ET\" or \"Singapore Time\".\n * - \"longGeneric\": e.g. \"Eastern Time\" or \"Singapore Standard Time\".\n *\n * These options correspond to TR35 tokens `z..zzz`, `zzzz`, `v`, and `vvvv` respectively: https://www.unicode.org/reports/tr35/tr35-dates.html#dfst-zone\n *\n * @param timeZone - Time zone name (IANA or UTC offset)\n * @param date - Date object to get the time zone name for\n * @param format - Optional format of the time zone name. Defaults to \"long\". Can be \"short\", \"long\", \"shortGeneric\", or \"longGeneric\".\n *\n * @returns Time zone name (e.g. \"Singapore Standard Time\")\n */\nexport function tzName(timeZone, date, format = \"long\") {\n  return new Intl.DateTimeFormat(\"en-US\", {\n    // Enforces engine to render the time. Without the option JavaScriptCore omits it.\n    hour: \"numeric\",\n    timeZone: timeZone,\n    timeZoneName: format\n  }).format(date).split(/\\s/g) // Format.JS uses non-breaking spaces\n  .slice(2) // Skip the hour and AM/PM parts\n  .join(\" \");\n}","const offsetFormatCache = {};\nconst offsetCache = {};\n\n/**\n * The function extracts UTC offset in minutes from the given date in specified\n * time zone.\n *\n * Unlike `Date.prototype.getTimezoneOffset`, this function returns the value\n * mirrored to the sign of the offset in the time zone. For Asia/Singapore\n * (UTC+8), `tzOffset` returns 480, while `getTimezoneOffset` returns -480.\n *\n * @param timeZone - Time zone name (IANA or UTC offset)\n * @param date - Date to check the offset for\n *\n * @returns UTC offset in minutes\n */\nexport function tzOffset(timeZone, date) {\n  try {\n    const format = offsetFormatCache[timeZone] ||= new Intl.DateTimeFormat(\"en-US\", {\n      timeZone,\n      timeZoneName: \"longOffset\"\n    }).format;\n    const offsetStr = format(date).split(\"GMT\")[1];\n    if (offsetStr in offsetCache) return offsetCache[offsetStr];\n    return calcOffset(offsetStr, offsetStr.split(\":\"));\n  } catch {\n    // Fallback to manual parsing if the runtime doesn't support ±HH:MM/±HHMM/±HH\n    // See: https://github.com/nodejs/node/issues/53419\n    if (timeZone in offsetCache) return offsetCache[timeZone];\n    const captures = timeZone?.match(offsetRe);\n    if (captures) return calcOffset(timeZone, captures.slice(1));\n    return NaN;\n  }\n}\nconst offsetRe = /([+-]\\d\\d):?(\\d\\d)?/;\nfunction calcOffset(cacheStr, values) {\n  const hours = +(values[0] || 0);\n  const minutes = +(values[1] || 0);\n  // Convert seconds to minutes by dividing by 60 to keep the function return in minutes.\n  const seconds = +(values[2] || 0) / 60;\n  return offsetCache[cacheStr] = hours * 60 + minutes > 0 ? hours * 60 + minutes + seconds : hours * 60 - minutes - seconds;\n}","import { tzOffset } from \"../tzOffset/index.js\";\nexport class TZDateMini extends Date {\n  //#region static\n\n  constructor(...args) {\n    super();\n    if (args.length > 1 && typeof args[args.length - 1] === \"string\") {\n      this.timeZone = args.pop();\n    }\n    this.internal = new Date();\n    if (isNaN(tzOffset(this.timeZone, this))) {\n      this.setTime(NaN);\n    } else {\n      if (!args.length) {\n        this.setTime(Date.now());\n      } else if (typeof args[0] === \"number\" && (args.length === 1 || args.length === 2 && typeof args[1] !== \"number\")) {\n        this.setTime(args[0]);\n      } else if (typeof args[0] === \"string\") {\n        this.setTime(+new Date(args[0]));\n      } else if (args[0] instanceof Date) {\n        this.setTime(+args[0]);\n      } else {\n        this.setTime(+new Date(...args));\n        adjustToSystemTZ(this, NaN);\n        syncToInternal(this);\n      }\n    }\n  }\n  static tz(tz, ...args) {\n    return args.length ? new TZDateMini(...args, tz) : new TZDateMini(Date.now(), tz);\n  }\n\n  //#endregion\n\n  //#region time zone\n\n  withTimeZone(timeZone) {\n    return new TZDateMini(+this, timeZone);\n  }\n  getTimezoneOffset() {\n    const offset = -tzOffset(this.timeZone, this);\n    // Remove the seconds offset\n    // use Math.floor for negative GMT timezones and Math.ceil for positive GMT timezones.\n    return offset > 0 ? Math.floor(offset) : Math.ceil(offset);\n  }\n\n  //#endregion\n\n  //#region time\n\n  setTime(time) {\n    Date.prototype.setTime.apply(this, arguments);\n    syncToInternal(this);\n    return +this;\n  }\n\n  //#endregion\n\n  //#region date-fns integration\n\n  [Symbol.for(\"constructDateFrom\")](date) {\n    return new TZDateMini(+new Date(date), this.timeZone);\n  }\n\n  //#endregion\n}\n\n// Assign getters and setters\nconst re = /^(get|set)(?!UTC)/;\nObject.getOwnPropertyNames(Date.prototype).forEach(method => {\n  if (!re.test(method)) return;\n  const utcMethod = method.replace(re, \"$1UTC\");\n  // Filter out methods without UTC counterparts\n  if (!TZDateMini.prototype[utcMethod]) return;\n  if (method.startsWith(\"get\")) {\n    // Delegate to internal date's UTC method\n    TZDateMini.prototype[method] = function () {\n      return this.internal[utcMethod]();\n    };\n  } else {\n    // Assign regular setter\n    TZDateMini.prototype[method] = function () {\n      Date.prototype[utcMethod].apply(this.internal, arguments);\n      syncFromInternal(this);\n      return +this;\n    };\n\n    // Assign UTC setter\n    TZDateMini.prototype[utcMethod] = function () {\n      Date.prototype[utcMethod].apply(this, arguments);\n      syncToInternal(this);\n      return +this;\n    };\n  }\n});\n\n/**\n * Function syncs time to internal date, applying the time zone offset.\n *\n * @param {Date} date - Date to sync\n */\nfunction syncToInternal(date) {\n  date.internal.setTime(+date);\n  date.internal.setUTCSeconds(date.internal.getUTCSeconds() - Math.round(-tzOffset(date.timeZone, date) * 60));\n}\n\n/**\n * Function syncs the internal date UTC values to the date. It allows to get\n * accurate timestamp value.\n *\n * @param {Date} date - The date to sync\n */\nfunction syncFromInternal(date) {\n  // First we transpose the internal values\n  Date.prototype.setFullYear.call(date, date.internal.getUTCFullYear(), date.internal.getUTCMonth(), date.internal.getUTCDate());\n  Date.prototype.setHours.call(date, date.internal.getUTCHours(), date.internal.getUTCMinutes(), date.internal.getUTCSeconds(), date.internal.getUTCMilliseconds());\n\n  // Now we have to adjust the date to the system time zone\n  adjustToSystemTZ(date);\n}\n\n/**\n * Function adjusts the date to the system time zone. It uses the time zone\n * differences to calculate the offset and adjust the date.\n *\n * @param {Date} date - Date to adjust\n */\nfunction adjustToSystemTZ(date) {\n  // Save the time zone offset before all the adjustments\n  const baseOffset = tzOffset(date.timeZone, date);\n  // Remove the seconds offset\n  // use Math.floor for negative GMT timezones and Math.ceil for positive GMT timezones.\n  const offset = baseOffset > 0 ? Math.floor(baseOffset) : Math.ceil(baseOffset);\n  //#region System DST adjustment\n\n  // The biggest problem with using the system time zone is that when we create\n  // a date from internal values stored in UTC, the system time zone might end\n  // up on the DST hour:\n  //\n  //   $ TZ=America/New_York node\n  //   > new Date(2020, 2, 8, 1).toString()\n  //   'Sun Mar 08 2020 01:00:00 GMT-0500 (Eastern Standard Time)'\n  //   > new Date(2020, 2, 8, 2).toString()\n  //   'Sun Mar 08 2020 03:00:00 GMT-0400 (Eastern Daylight Time)'\n  //   > new Date(2020, 2, 8, 3).toString()\n  //   'Sun Mar 08 2020 03:00:00 GMT-0400 (Eastern Daylight Time)'\n  //   > new Date(2020, 2, 8, 4).toString()\n  //   'Sun Mar 08 2020 04:00:00 GMT-0400 (Eastern Daylight Time)'\n  //\n  // Here we get the same hour for both 2 and 3, because the system time zone\n  // has DST beginning at 8 March 2020, 2 a.m. and jumps to 3 a.m. So we have\n  // to adjust the internal date to reflect that.\n  //\n  // However we want to adjust only if that's the DST hour the change happenes,\n  // not the hour where DST moves to.\n\n  // We calculate the previous hour to see if the time zone offset has changed\n  // and we have landed on the DST hour.\n  const prevHour = new Date(+date);\n  // We use UTC methods here as we don't want to land on the same hour again\n  // in case of DST.\n  prevHour.setUTCHours(prevHour.getUTCHours() - 1);\n\n  // Calculate if we are on the system DST hour.\n  const systemOffset = -new Date(+date).getTimezoneOffset();\n  const prevHourSystemOffset = -new Date(+prevHour).getTimezoneOffset();\n  const systemDSTChange = systemOffset - prevHourSystemOffset;\n  // Detect the DST shift. System DST change will occur both on\n  const dstShift = Date.prototype.getHours.apply(date) !== date.internal.getUTCHours();\n\n  // Move the internal date when we are on the system DST hour.\n  if (systemDSTChange && dstShift) date.internal.setUTCMinutes(date.internal.getUTCMinutes() + systemDSTChange);\n\n  //#endregion\n\n  //#region System diff adjustment\n\n  // Now we need to adjust the date, since we just applied internal values.\n  // We need to calculate the difference between the system and date time zones\n  // and apply it to the date.\n\n  const offsetDiff = systemOffset - offset;\n  if (offsetDiff) Date.prototype.setUTCMinutes.call(date, Date.prototype.getUTCMinutes.call(date) + offsetDiff);\n\n  //#endregion\n\n  //#region Seconds System diff adjustment\n\n  const systemDate = new Date(+date);\n  // Set the UTC seconds to 0 to isolate the timezone offset in seconds.\n  systemDate.setUTCSeconds(0);\n  // For negative systemOffset, invert the seconds.\n  const systemSecondsOffset = systemOffset > 0 ? systemDate.getSeconds() : (systemDate.getSeconds() - 60) % 60;\n\n  // Calculate the seconds offset based on the timezone offset.\n  const secondsOffset = Math.round(-(tzOffset(date.timeZone, date) * 60)) % 60;\n  if (secondsOffset || systemSecondsOffset) {\n    date.internal.setUTCSeconds(date.internal.getUTCSeconds() + secondsOffset);\n    Date.prototype.setUTCSeconds.call(date, Date.prototype.getUTCSeconds.call(date) + secondsOffset + systemSecondsOffset);\n  }\n\n  //#endregion\n\n  //#region Post-adjustment DST fix\n\n  const postBaseOffset = tzOffset(date.timeZone, date);\n  // Remove the seconds offset\n  // use Math.floor for negative GMT timezones and Math.ceil for positive GMT timezones.\n  const postOffset = postBaseOffset > 0 ? Math.floor(postBaseOffset) : Math.ceil(postBaseOffset);\n  const postSystemOffset = -new Date(+date).getTimezoneOffset();\n  const postOffsetDiff = postSystemOffset - postOffset;\n  const offsetChanged = postOffset !== offset;\n  const postDiff = postOffsetDiff - offsetDiff;\n  if (offsetChanged && postDiff) {\n    Date.prototype.setUTCMinutes.call(date, Date.prototype.getUTCMinutes.call(date) + postDiff);\n\n    // Now we need to check if got offset change during the post-adjustment.\n    // If so, we also need both dates to reflect that.\n\n    const newBaseOffset = tzOffset(date.timeZone, date);\n    // Remove the seconds offset\n    // use Math.floor for negative GMT timezones and Math.ceil for positive GMT timezones.\n    const newOffset = newBaseOffset > 0 ? Math.floor(newBaseOffset) : Math.ceil(newBaseOffset);\n    const offsetChange = postOffset - newOffset;\n    if (offsetChange) {\n      date.internal.setUTCMinutes(date.internal.getUTCMinutes() + offsetChange);\n      Date.prototype.setUTCMinutes.call(date, Date.prototype.getUTCMinutes.call(date) + offsetChange);\n    }\n  }\n\n  //#endregion\n}","import { tzName } from \"../tzName/index.js\";\nimport { TZDateMini } from \"./mini.js\";\nexport class TZDate extends TZDateMini {\n  //#region static\n\n  static tz(tz, ...args) {\n    return args.length ? new TZDate(...args, tz) : new TZDate(Date.now(), tz);\n  }\n\n  //#endregion\n\n  //#region representation\n\n  toISOString() {\n    const [sign, hours, minutes] = this.tzComponents();\n    const tz = `${sign}${hours}:${minutes}`;\n    return this.internal.toISOString().slice(0, -1) + tz;\n  }\n  toString() {\n    // \"Tue Aug 13 2024 07:50:19 GMT+0800 (Singapore Standard Time)\";\n    return `${this.toDateString()} ${this.toTimeString()}`;\n  }\n  toDateString() {\n    // toUTCString returns RFC 7231 (\"Mon, 12 Aug 2024 23:36:08 GMT\")\n    const [day, date, month, year] = this.internal.toUTCString().split(\" \");\n    // \"Tue Aug 13 2024\"\n    return `${day?.slice(0, -1) /* Remove \",\" */} ${month} ${date} ${year}`;\n  }\n  toTimeString() {\n    // toUTCString returns RFC 7231 (\"Mon, 12 Aug 2024 23:36:08 GMT\")\n    const time = this.internal.toUTCString().split(\" \")[4];\n    const [sign, hours, minutes] = this.tzComponents();\n    // \"07:42:23 GMT+0800 (Singapore Standard Time)\"\n    return `${time} GMT${sign}${hours}${minutes} (${tzName(this.timeZone, this)})`;\n  }\n  toLocaleString(locales, options) {\n    return Date.prototype.toLocaleString.call(this, locales, {\n      ...options,\n      timeZone: options?.timeZone || this.timeZone\n    });\n  }\n  toLocaleDateString(locales, options) {\n    return Date.prototype.toLocaleDateString.call(this, locales, {\n      ...options,\n      timeZone: options?.timeZone || this.timeZone\n    });\n  }\n  toLocaleTimeString(locales, options) {\n    return Date.prototype.toLocaleTimeString.call(this, locales, {\n      ...options,\n      timeZone: options?.timeZone || this.timeZone\n    });\n  }\n\n  //#endregion\n\n  //#region private\n\n  tzComponents() {\n    const offset = this.getTimezoneOffset();\n    const sign = offset > 0 ? \"-\" : \"+\";\n    const hours = String(Math.floor(Math.abs(offset) / 60)).padStart(2, \"0\");\n    const minutes = String(Math.abs(offset) % 60).padStart(2, \"0\");\n    return [sign, hours, minutes];\n  }\n\n  //#endregion\n\n  withTimeZone(timeZone) {\n    return new TZDate(+this, timeZone);\n  }\n\n  //#region date-fns integration\n\n  [Symbol.for(\"constructDateFrom\")](date) {\n    return new TZDate(+new Date(date), this.timeZone);\n  }\n\n  //#endregion\n}","/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nexport const daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occurs every 4 years, except for years that are divisible by 100 and not divisible by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nexport const daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nexport const maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nexport const minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nexport const millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nexport const millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nexport const millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nexport const millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nexport const millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nexport const minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nexport const minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nexport const minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nexport const minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nexport const monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nexport const monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nexport const quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nexport const secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nexport const secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nexport const secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nexport const secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nexport const secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nexport const secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nexport const secondsInQuarter = secondsInMonth * 3;\n\n/**\n * @constant\n * @name constructFromSymbol\n * @summary Symbol enabling Date extensions to inherit properties from the reference date.\n *\n * The symbol is used to enable the `constructFrom` function to construct a date\n * using a reference date and a value. It allows to transfer extra properties\n * from the reference date to the new date. It's useful for extensions like\n * [`TZDate`](https://github.com/date-fns/tz) that accept a time zone as\n * a constructor argument.\n */\nexport const constructFromSymbol = Symbol.for(\"constructDateFrom\");\n","import { constructFromSymbol } from \"./constants.js\";\n\n/**\n * @name constructFrom\n * @category Generic Helpers\n * @summary Constructs a date using the reference date and the value\n *\n * @description\n * The function constructs a new date using the constructor from the reference\n * date and the given value. It helps to build generic functions that accept\n * date extensions.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * Starting from v3.7.0, it allows to construct a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n * @param value - The value to create the date\n *\n * @returns Date initialized using the given date and value\n *\n * @example\n * import { constructFrom } from \"./constructFrom/date-fns\";\n *\n * // A function that clones a date preserving the original type\n * function cloneDate<DateType extends Date>(date: DateType): DateType {\n *   return constructFrom(\n *     date, // Use constructor from the given date\n *     date.getTime() // Use the date value to create a new date\n *   );\n * }\n */\nexport function constructFrom(date, value) {\n  if (typeof date === \"function\") return date(value);\n\n  if (date && typeof date === \"object\" && constructFromSymbol in date)\n    return date[constructFromSymbol](value);\n\n  if (date instanceof Date) return new date.constructor(value);\n\n  return new Date(value);\n}\n\n// Fallback for modularized imports:\nexport default constructFrom;\n","import { constructFrom } from \"./constructFrom.js\";\n\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * Starting from v3.7.0, it clones a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument, context) {\n  // [TODO] Get rid of `toDate` or `constructFrom`?\n  return constructFrom(context || argument, argument);\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link addDays} function options.\n */\n\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param amount - The amount of days to be added.\n * @param options - An object with options\n *\n * @returns The new date with the days added\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\nexport function addDays(date, amount, options) {\n  const _date = toDate(date, options?.in);\n  if (isNaN(amount)) return constructFrom(options?.in || date, NaN);\n\n  // If 0 days, no-op to avoid changing times in the hour before end of DST\n  if (!amount) return _date;\n\n  _date.setDate(_date.getDate() + amount);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default addDays;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link addMonths} function options.\n */\n\n/**\n * @name addMonths\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param amount - The amount of months to be added.\n * @param options - The options object\n *\n * @returns The new date with the months added\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * const result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n *\n * // Add one month to 30 January 2023:\n * const result = addMonths(new Date(2023, 0, 30), 1)\n * //=> Tue Feb 28 2023 00:00:00\n */\nexport function addMonths(date, amount, options) {\n  const _date = toDate(date, options?.in);\n  if (isNaN(amount)) return constructFrom(options?.in || date, NaN);\n  if (!amount) {\n    // If 0 months, no-op to avoid changing times in the hour before end of DST\n    return _date;\n  }\n  const dayOfMonth = _date.getDate();\n\n  // The JS Date object supports date math by accepting out-of-bounds values for\n  // month, day, etc. For example, new Date(2020, 0, 0) returns 31 Dec 2019 and\n  // new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we\n  // want except that dates will wrap around the end of a month, meaning that\n  // new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So\n  // we'll default to the end of the desired month by adding 1 to the desired\n  // month and using a date of 0 to back up one day to the end of the desired\n  // month.\n  const endOfDesiredMonth = constructFrom(options?.in || date, _date.getTime());\n  endOfDesiredMonth.setMonth(_date.getMonth() + amount + 1, 0);\n  const daysInMonth = endOfDesiredMonth.getDate();\n  if (dayOfMonth >= daysInMonth) {\n    // If we're already at the end of the month, then this is the correct date\n    // and we're done.\n    return endOfDesiredMonth;\n  } else {\n    // Otherwise, we now know that setting the original day-of-month value won't\n    // cause an overflow, so set the desired day-of-month. Note that we can't\n    // just set the date of `endOfDesiredMonth` because that object may have had\n    // its time changed in the unusual case where where a DST transition was on\n    // the last day of the month and its local time was in the hour skipped or\n    // repeated next to a DST transition.  So we use `date` instead which is\n    // guaranteed to still have the original time.\n    _date.setFullYear(\n      endOfDesiredMonth.getFullYear(),\n      endOfDesiredMonth.getMonth(),\n      dayOfMonth,\n    );\n    return _date;\n  }\n}\n\n// Fallback for modularized imports:\nexport default addMonths;\n","let defaultOptions = {};\n\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\n\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfWeek} function options.\n */\n\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date, options?.in);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n\n  _date.setDate(_date.getDate() - diff);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeek;\n","import { startOfWeek } from \"./startOfWeek.js\";\n\n/**\n * The {@link startOfISOWeek} function options.\n */\n\n/**\n * @name startOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of an ISO week\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * const result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfISOWeek(date, options) {\n  return startOfWeek(date, { ...options, weekStartsOn: 1 });\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeek;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getISOWeekYear} function options.\n */\n\n/**\n * @name getISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n *\n * @returns The ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * const result = getISOWeekYear(new Date(2005, 0, 2))\n * //=> 2004\n */\nexport function getISOWeekYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n\n  const fourthOfJanuaryOfNextYear = constructFrom(_date, 0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n\n  const fourthOfJanuaryOfThisYear = constructFrom(_date, 0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getISOWeekYear;\n","import { toDate } from \"../toDate.js\";\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport function getTimezoneOffsetInMilliseconds(date) {\n  const _date = toDate(date);\n  const utcDate = new Date(\n    Date.UTC(\n      _date.getFullYear(),\n      _date.getMonth(),\n      _date.getDate(),\n      _date.getHours(),\n      _date.getMinutes(),\n      _date.getSeconds(),\n      _date.getMilliseconds(),\n    ),\n  );\n  utcDate.setUTCFullYear(_date.getFullYear());\n  return +date - +utcDate;\n}\n","import { constructFrom } from \"../constructFrom.js\";\n\nexport function normalizeDates(context, ...dates) {\n  const normalize = constructFrom.bind(\n    null,\n    context || dates.find((date) => typeof date === \"object\"),\n  );\n  return dates.map(normalize);\n}\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfDay} function options.\n */\n\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nexport function startOfDay(date, options) {\n  const _date = toDate(date, options?.in);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfDay;\n","import { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.js\";\nimport { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { millisecondsInDay } from \"./constants.js\";\nimport { startOfDay } from \"./startOfDay.js\";\n\n/**\n * The {@link differenceInCalendarDays} function options.\n */\n\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - The options object\n *\n * @returns The number of calendar days\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\nexport function differenceInCalendarDays(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n\n  const laterStartOfDay = startOfDay(laterDate_);\n  const earlierStartOfDay = startOfDay(earlierDate_);\n\n  const laterTimestamp =\n    +laterStartOfDay - getTimezoneOffsetInMilliseconds(laterStartOfDay);\n  const earlierTimestamp =\n    +earlierStartOfDay - getTimezoneOffsetInMilliseconds(earlierStartOfDay);\n\n  // Round the number of days to the nearest integer because the number of\n  // milliseconds in a day is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round((laterTimestamp - earlierTimestamp) / millisecondsInDay);\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarDays;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { getISOWeekYear } from \"./getISOWeekYear.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\n\n/**\n * The {@link startOfISOWeekYear} function options.\n */\n\n/**\n * @name startOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of an ISO week-numbering year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * const result = startOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfISOWeekYear(date, options) {\n  const year = getISOWeekYear(date, options);\n  const fourthOfJanuary = constructFrom(options?.in || date, 0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  return startOfISOWeek(fourthOfJanuary);\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeekYear;\n","import { addDays } from \"./addDays.js\";\n\n/**\n * The {@link addWeeks} function options.\n */\n\n/**\n * @name addWeeks\n * @category Week Helpers\n * @summary Add the specified number of weeks to the given date.\n *\n * @description\n * Add the specified number of weeks to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param amount - The amount of weeks to be added.\n * @param options - An object with options\n *\n * @returns The new date with the weeks added\n *\n * @example\n * // Add 4 weeks to 1 September 2014:\n * const result = addWeeks(new Date(2014, 8, 1), 4)\n * //=> Mon Sep 29 2014 00:00:00\n */\nexport function addWeeks(date, amount, options) {\n  return addDays(date, amount * 7, options);\n}\n\n// Fallback for modularized imports:\nexport default addWeeks;\n","import { addMonths } from \"./addMonths.js\";\n\n/**\n * The {@link addYears} function options.\n */\n\n/**\n * @name addYears\n * @category Year Helpers\n * @summary Add the specified number of years to the given date.\n *\n * @description\n * Add the specified number of years to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type.\n *\n * @param date - The date to be changed\n * @param amount - The amount of years to be added.\n * @param options - The options\n *\n * @returns The new date with the years added\n *\n * @example\n * // Add 5 years to 1 September 2014:\n * const result = addYears(new Date(2014, 8, 1), 5)\n * //=> Sun Sep 01 2019 00:00:00\n */\nexport function addYears(date, amount, options) {\n  return addMonths(date, amount * 12, options);\n}\n\n// Fallback for modularized imports:\nexport default addYears;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link max} function options.\n */\n\n/**\n * @name max\n * @category Common Helpers\n * @summary Return the latest of the given dates.\n *\n * @description\n * Return the latest of the given dates.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param dates - The dates to compare\n *\n * @returns The latest of the dates\n *\n * @example\n * // Which of these dates is the latest?\n * const result = max([\n *   new Date(1989, 6, 10),\n *   new Date(1987, 1, 11),\n *   new Date(1995, 6, 2),\n *   new Date(1990, 0, 1)\n * ])\n * //=> Sun Jul 02 1995 00:00:00\n */\nexport function max(dates, options) {\n  let result;\n  let context = options?.in;\n\n  dates.forEach((date) => {\n    // Use the first date object as the context function\n    if (!context && typeof date === \"object\")\n      context = constructFrom.bind(null, date);\n\n    const date_ = toDate(date, context);\n    if (!result || result < date_ || isNaN(+date_)) result = date_;\n  });\n\n  return constructFrom(context, result || NaN);\n}\n\n// Fallback for modularized imports:\nexport default max;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link min} function options.\n */\n\n/**\n * @name min\n * @category Common Helpers\n * @summary Returns the earliest of the given dates.\n *\n * @description\n * Returns the earliest of the given dates.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param dates - The dates to compare\n *\n * @returns The earliest of the dates\n *\n * @example\n * // Which of these dates is the earliest?\n * const result = min([\n *   new Date(1989, 6, 10),\n *   new Date(1987, 1, 11),\n *   new Date(1995, 6, 2),\n *   new Date(1990, 0, 1)\n * ])\n * //=> Wed Feb 11 1987 00:00:00\n */\nexport function min(dates, options) {\n  let result;\n  let context = options?.in;\n\n  dates.forEach((date) => {\n    // Use the first date object as the context function\n    if (!context && typeof date === \"object\")\n      context = constructFrom.bind(null, date);\n\n    const date_ = toDate(date, context);\n    if (!result || result > date_ || isNaN(+date_)) result = date_;\n  });\n\n  return constructFrom(context, result || NaN);\n}\n\n// Fallback for modularized imports:\nexport default min;\n","import { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { startOfDay } from \"./startOfDay.js\";\n\n/**\n * The {@link isSameDay} function options.\n */\n\n/**\n * @name isSameDay\n * @category Day Helpers\n * @summary Are the given dates in the same day (and year and month)?\n *\n * @description\n * Are the given dates in the same day (and year and month)?\n *\n * @param laterDate - The first date to check\n * @param earlierDate - The second date to check\n * @param options - An object with options\n *\n * @returns The dates are in the same day (and year and month)\n *\n * @example\n * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?\n * const result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))\n * //=> true\n *\n * @example\n * // Are 4 September and 4 October in the same day?\n * const result = isSameDay(new Date(2014, 8, 4), new Date(2014, 9, 4))\n * //=> false\n *\n * @example\n * // Are 4 September, 2014 and 4 September, 2015 in the same day?\n * const result = isSameDay(new Date(2014, 8, 4), new Date(2015, 8, 4))\n * //=> false\n */\nexport function isSameDay(laterDate, earlierDate, options) {\n  const [dateLeft_, dateRight_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n  return +startOfDay(dateLeft_) === +startOfDay(dateRight_);\n}\n\n// Fallback for modularized imports:\nexport default isSameDay;\n","/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * @param value - The value to check\n *\n * @returns True if the given value is a date\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\nexport function isDate(value) {\n  return (\n    value instanceof Date ||\n    (typeof value === \"object\" &&\n      Object.prototype.toString.call(value) === \"[object Date]\")\n  );\n}\n\n// Fallback for modularized imports:\nexport default isDate;\n","import { isDate } from \"./isDate.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate](https://date-fns.org/docs/toDate)\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @param date - The date to check\n *\n * @returns The date is valid\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertible into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\nexport function isValid(date) {\n  return !((!isDate(date) && typeof date !== \"number\") || isNaN(+toDate(date)));\n}\n\n// Fallback for modularized imports:\nexport default isValid;\n","import { normalizeDates } from \"./_lib/normalizeDates.js\";\n\n/**\n * The {@link differenceInCalendarMonths} function options.\n */\n\n/**\n * @name differenceInCalendarMonths\n * @category Month Helpers\n * @summary Get the number of calendar months between the given dates.\n *\n * @description\n * Get the number of calendar months between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - An object with options\n *\n * @returns The number of calendar months\n *\n * @example\n * // How many calendar months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInCalendarMonths(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 0, 31)\n * )\n * //=> 8\n */\nexport function differenceInCalendarMonths(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n\n  const yearsDiff = laterDate_.getFullYear() - earlierDate_.getFullYear();\n  const monthsDiff = laterDate_.getMonth() - earlierDate_.getMonth();\n\n  return yearsDiff * 12 + monthsDiff;\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarMonths;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link endOfMonth} function options.\n */\n\n/**\n * @name endOfMonth\n * @category Month Helpers\n * @summary Return the end of a month for the given date.\n *\n * @description\n * Return the end of a month for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The end of a month\n *\n * @example\n * // The end of a month for 2 September 2014 11:55:00:\n * const result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\nexport function endOfMonth(date, options) {\n  const _date = toDate(date, options?.in);\n  const month = _date.getMonth();\n  _date.setFullYear(_date.getFullYear(), month + 1, 0);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfMonth;\n","import { normalizeDates } from \"./normalizeDates.js\";\n\nexport function normalizeInterval(context, interval) {\n  const [start, end] = normalizeDates(context, interval.start, interval.end);\n  return { start, end };\n}\n","import { normalizeInterval } from \"./_lib/normalizeInterval.js\";\nimport { constructFrom } from \"./constructFrom.js\";\n\n/**\n * The {@link eachMonthOfInterval} function options.\n */\n\n/**\n * The {@link eachMonthOfInterval} function result type. It resolves the proper data type.\n */\n\n/**\n * @name eachMonthOfInterval\n * @category Interval Helpers\n * @summary Return the array of months within the specified time interval.\n *\n * @description\n * Return the array of months within the specified time interval.\n *\n * @typeParam IntervalType - Interval type.\n * @typeParam Options - Options type.\n *\n * @param interval - The interval.\n * @param options - An object with options.\n *\n * @returns The array with starts of months from the month of the interval start to the month of the interval end\n *\n * @example\n * // Each month between 6 February 2014 and 10 August 2014:\n * const result = eachMonthOfInterval({\n *   start: new Date(2014, 1, 6),\n *   end: new Date(2014, 7, 10)\n * })\n * //=> [\n * //   Sat Feb 01 2014 00:00:00,\n * //   Sat Mar 01 2014 00:00:00,\n * //   Tue Apr 01 2014 00:00:00,\n * //   Thu May 01 2014 00:00:00,\n * //   Sun Jun 01 2014 00:00:00,\n * //   Tue Jul 01 2014 00:00:00,\n * //   Fri Aug 01 2014 00:00:00\n * // ]\n */\nexport function eachMonthOfInterval(interval, options) {\n  const { start, end } = normalizeInterval(options?.in, interval);\n\n  let reversed = +start > +end;\n  const endTime = reversed ? +start : +end;\n  const date = reversed ? end : start;\n  date.setHours(0, 0, 0, 0);\n  date.setDate(1);\n\n  let step = options?.step ?? 1;\n  if (!step) return [];\n  if (step < 0) {\n    step = -step;\n    reversed = !reversed;\n  }\n\n  const dates = [];\n\n  while (+date <= endTime) {\n    dates.push(constructFrom(start, date));\n    date.setMonth(date.getMonth() + step);\n  }\n\n  return reversed ? dates.reverse() : dates;\n}\n\n// Fallback for modularized imports:\nexport default eachMonthOfInterval;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfMonth} function options.\n */\n\n/**\n * @name startOfMonth\n * @category Month Helpers\n * @summary Return the start of a month for the given date.\n *\n * @description\n * Return the start of a month for the given date. The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments.\n * Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed,\n * or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a month\n *\n * @example\n * // The start of a month for 2 September 2014 11:55:00:\n * const result = startOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfMonth(date, options) {\n  const _date = toDate(date, options?.in);\n  _date.setDate(1);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfMonth;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link endOfYear} function options.\n */\n\n/**\n * @name endOfYear\n * @category Year Helpers\n * @summary Return the end of a year for the given date.\n *\n * @description\n * Return the end of a year for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The end of a year\n *\n * @example\n * // The end of a year for 2 September 2014 11:55:00:\n * const result = endOfYear(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Wed Dec 31 2014 23:59:59.999\n */\nexport function endOfYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n  _date.setFullYear(year + 1, 0, 0);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfYear;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfYear} function options.\n */\n\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\nexport function startOfYear(date, options) {\n  const date_ = toDate(date, options?.in);\n  date_.setFullYear(date_.getFullYear(), 0, 1);\n  date_.setHours(0, 0, 0, 0);\n  return date_;\n}\n\n// Fallback for modularized imports:\nexport default startOfYear;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link endOfWeek} function options.\n */\n\n/**\n * @name endOfWeek\n * @category Week Helpers\n * @summary Return the end of a week for the given date.\n *\n * @description\n * Return the end of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The end of a week\n *\n * @example\n * // The end of a week for 2 September 2014 11:55:00:\n * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sat Sep 06 2014 23:59:59.999\n *\n * @example\n * // If the week starts on Monday, the end of the week for 2 September 2014 11:55:00:\n * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 23:59:59.999\n */\nexport function endOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date, options?.in);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);\n\n  _date.setDate(_date.getDate() + diff);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfWeek;\n","import { endOfWeek } from \"./endOfWeek.js\";\n\n/**\n * The {@link endOfISOWeek} function options.\n */\n\n/**\n * @name endOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the end of an ISO week for the given date.\n *\n * @description\n * Return the end of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The end of an ISO week\n *\n * @example\n * // The end of an ISO week for 2 September 2014 11:55:00:\n * const result = endOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Sep 07 2014 23:59:59.999\n */\nexport function endOfISOWeek(date, options) {\n  return endOfWeek(date, { ...options, weekStartsOn: 1 });\n}\n\n// Fallback for modularized imports:\nexport default endOfISOWeek;\n","const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\",\n  },\n\n  xSeconds: {\n    one: \"1 second\",\n    other: \"{{count}} seconds\",\n  },\n\n  halfAMinute: \"half a minute\",\n\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\",\n  },\n\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\",\n  },\n\n  aboutXHours: {\n    one: \"about 1 hour\",\n    other: \"about {{count}} hours\",\n  },\n\n  xHours: {\n    one: \"1 hour\",\n    other: \"{{count}} hours\",\n  },\n\n  xDays: {\n    one: \"1 day\",\n    other: \"{{count}} days\",\n  },\n\n  aboutXWeeks: {\n    one: \"about 1 week\",\n    other: \"about {{count}} weeks\",\n  },\n\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weeks\",\n  },\n\n  aboutXMonths: {\n    one: \"about 1 month\",\n    other: \"about {{count}} months\",\n  },\n\n  xMonths: {\n    one: \"1 month\",\n    other: \"{{count}} months\",\n  },\n\n  aboutXYears: {\n    one: \"about 1 year\",\n    other: \"about {{count}} years\",\n  },\n\n  xYears: {\n    one: \"1 year\",\n    other: \"{{count}} years\",\n  },\n\n  overXYears: {\n    one: \"over 1 year\",\n    other: \"over {{count}} years\",\n  },\n\n  almostXYears: {\n    one: \"almost 1 year\",\n    other: \"almost {{count}} years\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n\n  return result;\n};\n","export function buildFormatLongFn(args) {\n  return (options = {}) => {\n    // TODO: Remove String()\n    const width = options.width ? String(options.width) : args.defaultWidth;\n    const format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}\n","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n","const formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n","/**\n * The localize function argument callback which allows to convert raw value to\n * the actual type.\n *\n * @param value - The value to convert\n *\n * @returns The converted value\n */\n\n/**\n * The map of localized values for each width.\n */\n\n/**\n * The index type of the locale unit value. It types conversion of units of\n * values that don't start at 0 (i.e. quarters).\n */\n\n/**\n * Converts the unit value to the tuple of values.\n */\n\n/**\n * The tuple of localized era values. The first element represents BC,\n * the second element represents AD.\n */\n\n/**\n * The tuple of localized quarter values. The first element represents Q1.\n */\n\n/**\n * The tuple of localized day values. The first element represents Sunday.\n */\n\n/**\n * The tuple of localized month values. The first element represents January.\n */\n\nexport function buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = options?.context ? String(options.context) : \"standalone\";\n\n    let valuesArray;\n    if (context === \"formatting\" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = options?.width ? String(options.width) : defaultWidth;\n\n      valuesArray =\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = options?.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\n\n    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"B\", \"A\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"Before Christ\", \"Anno Domini\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ],\n\n  wide: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n  short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  wide: [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n    }\n  }\n  return number + \"th\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n","export function buildMatchFn(args) {\n  return (string, options = {}) => {\n    const width = options.width;\n\n    const matchPattern =\n      (width && args.matchPatterns[width]) ||\n      args.matchPatterns[args.defaultMatchWidth];\n    const matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n    const matchedString = matchResult[0];\n\n    const parsePatterns =\n      (width && args.parsePatterns[width]) ||\n      args.parsePatterns[args.defaultParseWidth];\n\n    const key = Array.isArray(parsePatterns)\n      ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString))\n      : // [TODO] -- I challenge you to fix the type\n        findKey(parsePatterns, (pattern) => pattern.test(matchedString));\n\n    let value;\n\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback\n      ? // [TODO] -- I challenge you to fix the type\n        options.valueCallback(value)\n      : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (const key in object) {\n    if (\n      Object.prototype.hasOwnProperty.call(object, key) &&\n      predicate(object[key])\n    ) {\n      return key;\n    }\n  }\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (let key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\n","export function buildMatchPatternFn(args) {\n  return (string, options = {}) => {\n    const matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    const matchedString = matchResult[0];\n\n    const parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    let value = args.valueCallback\n      ? args.valueCallback(parseResult[0])\n      : parseResult[0];\n\n    // [TODO] I challenge you to fix the type\n    value = options.valueCallback ? options.valueCallback(value) : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n","import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i,\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","import { formatDistance } from \"./en-US/_lib/formatDistance.js\";\nimport { formatLong } from \"./en-US/_lib/formatLong.js\";\nimport { formatRelative } from \"./en-US/_lib/formatRelative.js\";\nimport { localize } from \"./en-US/_lib/localize.js\";\nimport { match } from \"./en-US/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)\n * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)\n */\nexport const enUS = {\n  code: \"en-US\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default enUS;\n","import { differenceInCalendarDays } from \"./differenceInCalendarDays.js\";\nimport { startOfYear } from \"./startOfYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getDayOfYear} function options.\n */\n\n/**\n * @name getDayOfYear\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * @param date - The given date\n * @param options - The options\n *\n * @returns The day of year\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * const result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\nexport function getDayOfYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = differenceInCalendarDays(_date, startOfYear(_date));\n  const dayOfYear = diff + 1;\n  return dayOfYear;\n}\n\n// Fallback for modularized imports:\nexport default getDayOfYear;\n","import { millisecondsInWeek } from \"./constants.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\nimport { startOfISOWeekYear } from \"./startOfISOWeekYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getISOWeek} function options.\n */\n\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n * @param options - The options\n *\n * @returns The ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * const result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\nexport function getISOWeek(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = +startOfISOWeek(_date) - +startOfISOWeekYear(_date);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getISOWeek;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getWeekYear} function options.\n */\n\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @param date - The given date\n * @param options - An object with options.\n *\n * @returns The local week-numbering year\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * const result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\nexport function getWeekYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const firstWeekOfNextYear = constructFrom(options?.in || date, 0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfWeek(firstWeekOfNextYear, options);\n\n  const firstWeekOfThisYear = constructFrom(options?.in || date, 0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfWeek(firstWeekOfThisYear, options);\n\n  if (+_date >= +startOfNextYear) {\n    return year + 1;\n  } else if (+_date >= +startOfThisYear) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getWeekYear;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { getWeekYear } from \"./getWeekYear.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\n\n/**\n * The {@link startOfWeekYear} function options.\n */\n\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week-numbering year\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * const result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * const result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfWeekYear(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const year = getWeekYear(date, options);\n  const firstWeek = constructFrom(options?.in || date, 0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  const _date = startOfWeek(firstWeek, options);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeekYear;\n","import { millisecondsInWeek } from \"./constants.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\nimport { startOfWeekYear } from \"./startOfWeekYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getWeek} function options.\n */\n\n/**\n * @name getWeek\n * @category Week Helpers\n * @summary Get the local week index of the given date.\n *\n * @description\n * Get the local week index of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The week\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005 with default options?\n * const result = getWeek(new Date(2005, 0, 2))\n * //=> 2\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January?\n * const result = getWeek(new Date(2005, 0, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> 53\n */\nexport function getWeek(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = +startOfWeek(_date, options) - +startOfWeekYear(_date, options);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getWeek;\n","export function addLeadingZeros(number, targetLength) {\n  const sign = number < 0 ? \"-\" : \"\";\n  const output = Math.abs(number).toString().padStart(targetLength, \"0\");\n  return sign + output;\n}\n","import { addLeadingZeros } from \"../addLeadingZeros.js\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nexport const lightFormatters = {\n  // Year\n  y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    const signedYear = date.getFullYear();\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === \"yy\" ? year % 100 : year, token.length);\n  },\n\n  // Month\n  M(date, token) {\n    const month = date.getMonth();\n    return token === \"M\" ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n\n  // Day of the month\n  d(date, token) {\n    return addLeadingZeros(date.getDate(), token.length);\n  },\n\n  // AM or PM\n  a(date, token) {\n    const dayPeriodEnumValue = date.getHours() / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return dayPeriodEnumValue.toUpperCase();\n      case \"aaa\":\n        return dayPeriodEnumValue;\n      case \"aaaaa\":\n        return dayPeriodEnumValue[0];\n      case \"aaaa\":\n      default:\n        return dayPeriodEnumValue === \"am\" ? \"a.m.\" : \"p.m.\";\n    }\n  },\n\n  // Hour [1-12]\n  h(date, token) {\n    return addLeadingZeros(date.getHours() % 12 || 12, token.length);\n  },\n\n  // Hour [0-23]\n  H(date, token) {\n    return addLeadingZeros(date.getHours(), token.length);\n  },\n\n  // Minute\n  m(date, token) {\n    return addLeadingZeros(date.getMinutes(), token.length);\n  },\n\n  // Second\n  s(date, token) {\n    return addLeadingZeros(date.getSeconds(), token.length);\n  },\n\n  // Fraction of second\n  S(date, token) {\n    const numberOfDigits = token.length;\n    const milliseconds = date.getMilliseconds();\n    const fractionalSeconds = Math.trunc(\n      milliseconds * Math.pow(10, numberOfDigits - 3),\n    );\n    return addLeadingZeros(fractionalSeconds, token.length);\n  },\n};\n","import { getDayOfYear } from \"../../getDayOfYear.js\";\nimport { getISOWeek } from \"../../getISOWeek.js\";\nimport { getISOWeekYear } from \"../../getISOWeekYear.js\";\nimport { getWeek } from \"../../getWeek.js\";\nimport { getWeekYear } from \"../../getWeekYear.js\";\n\nimport { addLeadingZeros } from \"../addLeadingZeros.js\";\nimport { lightFormatters } from \"./lightFormatters.js\";\n\nconst dayPeriodEnum = {\n  am: \"am\",\n  pm: \"pm\",\n  midnight: \"midnight\",\n  noon: \"noon\",\n  morning: \"morning\",\n  afternoon: \"afternoon\",\n  evening: \"evening\",\n  night: \"night\",\n};\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nexport const formatters = {\n  // Era\n  G: function (date, token, localize) {\n    const era = date.getFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return localize.era(era, { width: \"abbreviated\" });\n      // A, B\n      case \"GGGGG\":\n        return localize.era(era, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return localize.era(era, { width: \"wide\" });\n    }\n  },\n\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === \"yo\") {\n      const signedYear = date.getFullYear();\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\n      const year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, { unit: \"year\" });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    const signedWeekYear = getWeekYear(date, options);\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n\n    // Two digit year\n    if (token === \"YY\") {\n      const twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    }\n\n    // Ordinal number\n    if (token === \"Yo\") {\n      return localize.ordinalNumber(weekYear, { unit: \"year\" });\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length);\n  },\n\n  // ISO week-numbering year\n  R: function (date, token) {\n    const isoWeekYear = getISOWeekYear(date);\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    const year = date.getFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n\n  // Quarter\n  Q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"QQ\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"qq\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // Month\n  M: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      case \"M\":\n      case \"MM\":\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // J, F, ..., D\n      case \"MMMMM\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"formatting\" });\n    }\n  },\n\n  // Stand-alone month\n  L: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case \"LL\":\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // J, F, ..., D\n      case \"LLLLL\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"standalone\" });\n    }\n  },\n\n  // Local week of year\n  w: function (date, token, localize, options) {\n    const week = getWeek(date, options);\n\n    if (token === \"wo\") {\n      return localize.ordinalNumber(week, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n\n  // ISO week of year\n  I: function (date, token, localize) {\n    const isoWeek = getISOWeek(date);\n\n    if (token === \"Io\") {\n      return localize.ordinalNumber(isoWeek, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === \"do\") {\n      return localize.ordinalNumber(date.getDate(), { unit: \"date\" });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n\n  // Day of year\n  D: function (date, token, localize) {\n    const dayOfYear = getDayOfYear(date);\n\n    if (token === \"Do\") {\n      return localize.ordinalNumber(dayOfYear, { unit: \"dayOfYear\" });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n\n  // Day of week\n  E: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"EEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"EEEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Local day of week\n  e: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case \"e\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"ee\":\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n      case \"eo\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"eee\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"eeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"eeeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"eeee\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case \"c\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"cc\":\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n      case \"co\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"ccc\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // T\n      case \"ccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"standalone\",\n        });\n      // Tuesday\n      case \"cccc\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // ISO day of week\n  i: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    const isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case \"i\":\n        return String(isoDayOfWeek);\n      // 02\n      case \"ii\":\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n      case \"io\":\n        return localize.ordinalNumber(isoDayOfWeek, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"iiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"iiiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"iiii\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM or PM\n  a: function (date, token, localize) {\n    const hours = date.getHours();\n    const dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"aaa\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"aaaaa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"aaaa\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n    }\n\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"bbb\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"bbbbb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"BBBBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === \"ho\") {\n      let hours = date.getHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === \"Ho\") {\n      return localize.ordinalNumber(date.getHours(), { unit: \"hour\" });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    const hours = date.getHours() % 12;\n\n    if (token === \"Ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    let hours = date.getHours();\n    if (hours === 0) hours = 24;\n\n    if (token === \"ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Minute\n  m: function (date, token, localize) {\n    if (token === \"mo\") {\n      return localize.ordinalNumber(date.getMinutes(), { unit: \"minute\" });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n\n  // Second\n  s: function (date, token, localize) {\n    if (token === \"so\") {\n      return localize.ordinalNumber(date.getSeconds(), { unit: \"second\" });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return \"Z\";\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"X\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case \"XXXX\":\n      case \"XX\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case \"XXXXX\":\n      case \"XXX\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"x\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case \"xxxx\":\n      case \"xx\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case \"xxxxx\":\n      case \"xxx\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (GMT)\n  O: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"O\":\n      case \"OO\":\n      case \"OOO\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"OOOO\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (specific non-location)\n  z: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"z\":\n      case \"zz\":\n      case \"zzz\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"zzzz\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Seconds timestamp\n  t: function (date, token, _localize) {\n    const timestamp = Math.trunc(+date / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n\n  // Milliseconds timestamp\n  T: function (date, token, _localize) {\n    return addLeadingZeros(+date, token.length);\n  },\n};\n\nfunction formatTimezoneShort(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = Math.trunc(absOffset / 60);\n  const minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, delimiter) {\n  if (offset % 60 === 0) {\n    const sign = offset > 0 ? \"-\" : \"+\";\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, delimiter);\n}\n\nfunction formatTimezone(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = addLeadingZeros(Math.trunc(absOffset / 60), 2);\n  const minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n","const dateLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"P\":\n      return formatLong.date({ width: \"short\" });\n    case \"PP\":\n      return formatLong.date({ width: \"medium\" });\n    case \"PPP\":\n      return formatLong.date({ width: \"long\" });\n    case \"PPPP\":\n    default:\n      return formatLong.date({ width: \"full\" });\n  }\n};\n\nconst timeLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"p\":\n      return formatLong.time({ width: \"short\" });\n    case \"pp\":\n      return formatLong.time({ width: \"medium\" });\n    case \"ppp\":\n      return formatLong.time({ width: \"long\" });\n    case \"pppp\":\n    default:\n      return formatLong.time({ width: \"full\" });\n  }\n};\n\nconst dateTimeLongFormatter = (pattern, formatLong) => {\n  const matchResult = pattern.match(/(P+)(p+)?/) || [];\n  const datePattern = matchResult[1];\n  const timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  let dateTimeFormat;\n\n  switch (datePattern) {\n    case \"P\":\n      dateTimeFormat = formatLong.dateTime({ width: \"short\" });\n      break;\n    case \"PP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"medium\" });\n      break;\n    case \"PPP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"long\" });\n      break;\n    case \"PPPP\":\n    default:\n      dateTimeFormat = formatLong.dateTime({ width: \"full\" });\n      break;\n  }\n\n  return dateTimeFormat\n    .replace(\"{{date}}\", dateLongFormatter(datePattern, formatLong))\n    .replace(\"{{time}}\", timeLongFormatter(timePattern, formatLong));\n};\n\nexport const longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter,\n};\n","const dayOfYearTokenRE = /^D+$/;\nconst weekYearTokenRE = /^Y+$/;\n\nconst throwTokens = [\"D\", \"DD\", \"YY\", \"YYYY\"];\n\nexport function isProtectedDayOfYearToken(token) {\n  return dayOfYearTokenRE.test(token);\n}\n\nexport function isProtectedWeekYearToken(token) {\n  return weekYearTokenRE.test(token);\n}\n\nexport function warnOrThrowProtectedError(token, format, input) {\n  const _message = message(token, format, input);\n  console.warn(_message);\n  if (throwTokens.includes(token)) throw new RangeError(_message);\n}\n\nfunction message(token, format, input) {\n  const subject = token[0] === \"Y\" ? \"years\" : \"days of the month\";\n  return `Use \\`${token.toLowerCase()}\\` instead of \\`${token}\\` (in \\`${format}\\`) for formatting ${subject} to the input \\`${input}\\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`;\n}\n","import { defaultLocale } from \"./_lib/defaultLocale.js\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { formatters } from \"./_lib/format/formatters.js\";\nimport { longFormatters } from \"./_lib/format/longFormatters.js\";\nimport {\n  isProtectedDayOfYearToken,\n  isProtectedWeekYearToken,\n  warnOrThrowProtectedError,\n} from \"./_lib/protectedTokens.js\";\nimport { isValid } from \"./isValid.js\";\nimport { toDate } from \"./toDate.js\";\n\n// Rexports of internal for libraries to use.\n// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874\nexport { formatters, longFormatters };\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp =\n  /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nconst longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\nexport { format as formatDate };\n\n/**\n * The {@link format} function options.\n */\n\n/**\n * @name format\n * @alias formatDate\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear](https://date-fns.org/docs/getISOWeekYear)\n *    and [getWeekYear](https://date-fns.org/docs/getWeekYear)).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @param date - The original date\n * @param format - The string of tokens\n * @param options - An object with options\n *\n * @returns The formatted date string\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `localize` property\n * @throws `options.locale` must contain `formatLong` property\n * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * const result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\nexport function format(date, formatStr, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const originalDate = toDate(date, options?.in);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n\n  let parts = formatStr\n    .match(longFormattingTokensRegExp)\n    .map((substring) => {\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"p\" || firstCharacter === \"P\") {\n        const longFormatter = longFormatters[firstCharacter];\n        return longFormatter(substring, locale.formatLong);\n      }\n      return substring;\n    })\n    .join(\"\")\n    .match(formattingTokensRegExp)\n    .map((substring) => {\n      // Replace two single quote characters with one single quote character\n      if (substring === \"''\") {\n        return { isToken: false, value: \"'\" };\n      }\n\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"'\") {\n        return { isToken: false, value: cleanEscapedString(substring) };\n      }\n\n      if (formatters[firstCharacter]) {\n        return { isToken: true, value: substring };\n      }\n\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          \"Format string contains an unescaped latin alphabet character `\" +\n            firstCharacter +\n            \"`\",\n        );\n      }\n\n      return { isToken: false, value: substring };\n    });\n\n  // invoke localize preprocessor (only for french locales at the moment)\n  if (locale.localize.preprocessor) {\n    parts = locale.localize.preprocessor(originalDate, parts);\n  }\n\n  const formatterOptions = {\n    firstWeekContainsDate,\n    weekStartsOn,\n    locale,\n  };\n\n  return parts\n    .map((part) => {\n      if (!part.isToken) return part.value;\n\n      const token = part.value;\n\n      if (\n        (!options?.useAdditionalWeekYearTokens &&\n          isProtectedWeekYearToken(token)) ||\n        (!options?.useAdditionalDayOfYearTokens &&\n          isProtectedDayOfYearToken(token))\n      ) {\n        warnOrThrowProtectedError(token, formatStr, String(date));\n      }\n\n      const formatter = formatters[token[0]];\n      return formatter(originalDate, token, locale.localize, formatterOptions);\n    })\n    .join(\"\");\n}\n\nfunction cleanEscapedString(input) {\n  const matched = input.match(escapedStringRegExp);\n\n  if (!matched) {\n    return input;\n  }\n\n  return matched[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default format;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getDaysInMonth} function options.\n */\n\n/**\n * @name getDaysInMonth\n * @category Month Helpers\n * @summary Get the number of days in a month of the given date.\n *\n * @description\n * Get the number of days in a month of the given date, considering the context if provided.\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The number of days in a month\n *\n * @example\n * // How many days are in February 2000?\n * const result = getDaysInMonth(new Date(2000, 1))\n * //=> 29\n */\nexport function getDaysInMonth(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n  const monthIndex = _date.getMonth();\n  const lastDayOfMonth = constructFrom(_date, 0);\n  lastDayOfMonth.setFullYear(year, monthIndex + 1, 0);\n  lastDayOfMonth.setHours(0, 0, 0, 0);\n  return lastDayOfMonth.getDate();\n}\n\n// Fallback for modularized imports:\nexport default getDaysInMonth;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getMonth} function options.\n */\n\n/**\n * @name getMonth\n * @category Month Helpers\n * @summary Get the month of the given date.\n *\n * @description\n * Get the month of the given date.\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The month index (0-11)\n *\n * @example\n * // Which month is 29 February 2012?\n * const result = getMonth(new Date(2012, 1, 29))\n * //=> 1\n */\nexport function getMonth(date, options) {\n  return toDate(date, options?.in).getMonth();\n}\n\n// Fallback for modularized imports:\nexport default getMonth;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getYear} function options.\n */\n\n/**\n * @name getYear\n * @category Year Helpers\n * @summary Get the year of the given date.\n *\n * @description\n * Get the year of the given date.\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The year\n *\n * @example\n * // Which year is 2 July 2014?\n * const result = getYear(new Date(2014, 6, 2))\n * //=> 2014\n */\nexport function getYear(date, options) {\n  return toDate(date, options?.in).getFullYear();\n}\n\n// Fallback for modularized imports:\nexport default getYear;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * @name isAfter\n * @category Common Helpers\n * @summary Is the first date after the second one?\n *\n * @description\n * Is the first date after the second one?\n *\n * @param date - The date that should be after the other one to return true\n * @param dateToCompare - The date to compare with\n *\n * @returns The first date is after the second date\n *\n * @example\n * // Is 10 July 1989 after 11 February 1987?\n * const result = isAfter(new Date(1989, 6, 10), new Date(1987, 1, 11))\n * //=> true\n */\nexport function isAfter(date, dateToCompare) {\n  return +toDate(date) > +toDate(dateToCompare);\n}\n\n// Fallback for modularized imports:\nexport default isAfter;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * @name isBefore\n * @category Common Helpers\n * @summary Is the first date before the second one?\n *\n * @description\n * Is the first date before the second one?\n *\n * @param date - The date that should be before the other one to return true\n * @param dateToCompare - The date to compare with\n *\n * @returns The first date is before the second date\n *\n * @example\n * // Is 10 July 1989 before 11 February 1987?\n * const result = isBefore(new Date(1989, 6, 10), new Date(1987, 1, 11))\n * //=> false\n */\nexport function isBefore(date, dateToCompare) {\n  return +toDate(date) < +toDate(dateToCompare);\n}\n\n// Fallback for modularized imports:\nexport default isBefore;\n","import { normalizeDates } from \"./_lib/normalizeDates.js\";\n\n/**\n * The {@link isSameMonth} function options.\n */\n\n/**\n * @name isSameMonth\n * @category Month Helpers\n * @summary Are the given dates in the same month (and year)?\n *\n * @description\n * Are the given dates in the same month (and year)?\n *\n * @param laterDate - The first date to check\n * @param earlierDate - The second date to check\n * @param options - An object with options\n *\n * @returns The dates are in the same month (and year)\n *\n * @example\n * // Are 2 September 2014 and 25 September 2014 in the same month?\n * const result = isSameMonth(new Date(2014, 8, 2), new Date(2014, 8, 25))\n * //=> true\n *\n * @example\n * // Are 2 September 2014 and 25 September 2015 in the same month?\n * const result = isSameMonth(new Date(2014, 8, 2), new Date(2015, 8, 25))\n * //=> false\n */\nexport function isSameMonth(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n  return (\n    laterDate_.getFullYear() === earlierDate_.getFullYear() &&\n    laterDate_.getMonth() === earlierDate_.getMonth()\n  );\n}\n\n// Fallback for modularized imports:\nexport default isSameMonth;\n","import { normalizeDates } from \"./_lib/normalizeDates.js\";\n\n/**\n * The {@link isSameYear} function options.\n */\n\n/**\n * @name isSameYear\n * @category Year Helpers\n * @summary Are the given dates in the same year?\n *\n * @description\n * Are the given dates in the same year?\n *\n * @param laterDate - The first date to check\n * @param earlierDate - The second date to check\n * @param options - An object with options\n *\n * @returns The dates are in the same year\n *\n * @example\n * // Are 2 September 2014 and 25 September 2014 in the same year?\n * const result = isSameYear(new Date(2014, 8, 2), new Date(2014, 8, 25))\n * //=> true\n */\nexport function isSameYear(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n  return laterDate_.getFullYear() === earlierDate_.getFullYear();\n}\n\n// Fallback for modularized imports:\nexport default isSameYear;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { getDaysInMonth } from \"./getDaysInMonth.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link setMonth} function options.\n */\n\n/**\n * @name setMonth\n * @category Month Helpers\n * @summary Set the month to the given date.\n *\n * @description\n * Set the month to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param month - The month index to set (0-11)\n * @param options - The options\n *\n * @returns The new date with the month set\n *\n * @example\n * // Set February to 1 September 2014:\n * const result = setMonth(new Date(2014, 8, 1), 1)\n * //=> Sat Feb 01 2014 00:00:00\n */\nexport function setMonth(date, month, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n  const day = _date.getDate();\n\n  const midMonth = constructFrom(options?.in || date, 0);\n  midMonth.setFullYear(year, month, 15);\n  midMonth.setHours(0, 0, 0, 0);\n  const daysInMonth = getDaysInMonth(midMonth);\n\n  // Set the earlier date, allows to wrap Jan 31 to Feb 28\n  _date.setMonth(month, Math.min(day, daysInMonth));\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default setMonth;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link setYear} function options.\n */\n\n/**\n * @name setYear\n * @category Year Helpers\n * @summary Set the year to the given date.\n *\n * @description\n * Set the year to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param year - The year of the new date\n * @param options - An object with options.\n *\n * @returns The new date with the year set\n *\n * @example\n * // Set year 2013 to 1 September 2014:\n * const result = setYear(new Date(2014, 8, 1), 2013)\n * //=> Sun Sep 01 2013 00:00:00\n */\nexport function setYear(date, year, options) {\n  const date_ = toDate(date, options?.in);\n\n  // Check if date is Invalid Date because Date.prototype.setFullYear ignores the value of Invalid Date\n  if (isNaN(+date_)) return constructFrom(options?.in || date, NaN);\n\n  date_.setFullYear(year);\n  return date_;\n}\n\n// Fallback for modularized imports:\nexport default setYear;\n","const FIVE_WEEKS = 5;\nconst FOUR_WEEKS = 4;\n/**\n * Returns the number of weeks to display in the broadcast calendar for a given\n * month.\n *\n * The broadcast calendar may have either 4 or 5 weeks in a month, depending on\n * the start and end dates of the broadcast weeks.\n *\n * @since 9.4.0\n * @param month The month for which to calculate the number of weeks.\n * @param dateLib The date library to use for date manipulation.\n * @returns The number of weeks in the broadcast calendar (4 or 5).\n */\nexport function getBroadcastWeeksInMonth(month, dateLib) {\n    // Get the first day of the month\n    const firstDayOfMonth = dateLib.startOfMonth(month);\n    // Get the day of the week for the first day of the month (1-7, where 1 is Monday)\n    const firstDayOfWeek = firstDayOfMonth.getDay() > 0 ? firstDayOfMonth.getDay() : 7;\n    const broadcastStartDate = dateLib.addDays(month, -firstDayOfWeek + 1);\n    const lastDateOfLastWeek = dateLib.addDays(broadcastStartDate, FIVE_WEEKS * 7 - 1);\n    const numberOfWeeks = dateLib.getMonth(month) === dateLib.getMonth(lastDateOfLastWeek)\n        ? FIVE_WEEKS\n        : FOUR_WEEKS;\n    return numberOfWeeks;\n}\n","/**\n * Returns the start date of the week in the broadcast calendar.\n *\n * The broadcast week starts on Monday. If the first day of the month is not a\n * Monday, this function calculates the previous Monday as the start of the\n * broadcast week.\n *\n * @since 9.4.0\n * @param date The date for which to calculate the start of the broadcast week.\n * @param dateLib The date library to use for date manipulation.\n * @returns The start date of the broadcast week.\n */\nexport function startOfBroadcastWeek(date, dateLib) {\n    const firstOfMonth = dateLib.startOfMonth(date);\n    const dayOfWeek = firstOfMonth.getDay();\n    if (dayOfWeek === 1) {\n        return firstOfMonth;\n    }\n    else if (dayOfWeek === 0) {\n        return dateLib.addDays(firstOfMonth, -1 * 6);\n    }\n    else {\n        return dateLib.addDays(firstOfMonth, -1 * (dayOfWeek - 1));\n    }\n}\n","import { getBroadcastWeeksInMonth } from \"./getBroadcastWeeksInMonth.js\";\nimport { startOfBroadcastWeek } from \"./startOfBroadcastWeek.js\";\n/**\n * Returns the end date of the week in the broadcast calendar.\n *\n * The broadcast week ends on the last day of the last broadcast week for the\n * given date.\n *\n * @since 9.4.0\n * @param date The date for which to calculate the end of the broadcast week.\n * @param dateLib The date library to use for date manipulation.\n * @returns The end date of the broadcast week.\n */\nexport function endOfBroadcastWeek(date, dateLib) {\n    const startDate = startOfBroadcastWeek(date, dateLib);\n    const numberOfWeeks = getBroadcastWeeksInMonth(date, dateLib);\n    const endDate = dateLib.addDays(startDate, numberOfWeeks * 7 - 1);\n    return endDate;\n}\n","import { TZDate } from \"@date-fns/tz\";\nimport { addDays, addMonths, addWeeks, addYears, differenceInCalendarDays, differenceInCalendarMonths, eachMonthOfInterval, endOfISOWeek, endOfMonth, endOfWeek, endOfYear, format, getISOWeek, getMonth, getWeek, getYear, isAfter, isBefore, isDate, isSameDay, isSameMonth, isSameYear, max, min, setMonth, setYear, startOfDay, startOfISOWeek, startOfMonth, startOfWeek, startOfYear, } from \"date-fns\";\nimport { enUS } from \"date-fns/locale/en-US\";\nimport { endOfBroadcastWeek } from \"../helpers/endOfBroadcastWeek.js\";\nimport { startOfBroadcastWeek } from \"../helpers/startOfBroadcastWeek.js\";\n/**\n * A wrapper class around [date-fns](http://date-fns.org) that provides utility\n * methods for date manipulation and formatting.\n *\n * @since 9.2.0\n * @example\n *   const dateLib = new DateLib({ locale: es });\n *   const newDate = dateLib.addDays(new Date(), 5);\n */\nexport class DateLib {\n    /**\n     * Creates an instance of `DateLib`.\n     *\n     * @param options Configuration options for the date library.\n     * @param overrides Custom overrides for the date library functions.\n     */\n    constructor(options, overrides) {\n        /**\n         * Reference to the built-in Date constructor.\n         *\n         * @deprecated Use `newDate()` or `today()`.\n         */\n        this.Date = Date;\n        /**\n         * Creates a new `Date` object representing today's date.\n         *\n         * @since 9.5.0\n         * @returns A `Date` object for today's date.\n         */\n        this.today = () => {\n            if (this.overrides?.today) {\n                return this.overrides.today();\n            }\n            if (this.options.timeZone) {\n                return TZDate.tz(this.options.timeZone);\n            }\n            return new this.Date();\n        };\n        /**\n         * Creates a new `Date` object with the specified year, month, and day.\n         *\n         * @since 9.5.0\n         * @param year The year.\n         * @param monthIndex The month (0-11).\n         * @param date The day of the month.\n         * @returns A new `Date` object.\n         */\n        this.newDate = (year, monthIndex, date) => {\n            if (this.overrides?.newDate) {\n                return this.overrides.newDate(year, monthIndex, date);\n            }\n            if (this.options.timeZone) {\n                return new TZDate(year, monthIndex, date, this.options.timeZone);\n            }\n            return new Date(year, monthIndex, date);\n        };\n        /**\n         * Adds the specified number of days to the given date.\n         *\n         * @param date The date to add days to.\n         * @param amount The number of days to add.\n         * @returns The new date with the days added.\n         */\n        this.addDays = (date, amount) => {\n            return this.overrides?.addDays\n                ? this.overrides.addDays(date, amount)\n                : addDays(date, amount);\n        };\n        /**\n         * Adds the specified number of months to the given date.\n         *\n         * @param date The date to add months to.\n         * @param amount The number of months to add.\n         * @returns The new date with the months added.\n         */\n        this.addMonths = (date, amount) => {\n            return this.overrides?.addMonths\n                ? this.overrides.addMonths(date, amount)\n                : addMonths(date, amount);\n        };\n        /**\n         * Adds the specified number of weeks to the given date.\n         *\n         * @param date The date to add weeks to.\n         * @param amount The number of weeks to add.\n         * @returns The new date with the weeks added.\n         */\n        this.addWeeks = (date, amount) => {\n            return this.overrides?.addWeeks\n                ? this.overrides.addWeeks(date, amount)\n                : addWeeks(date, amount);\n        };\n        /**\n         * Adds the specified number of years to the given date.\n         *\n         * @param date The date to add years to.\n         * @param amount The number of years to add.\n         * @returns The new date with the years added.\n         */\n        this.addYears = (date, amount) => {\n            return this.overrides?.addYears\n                ? this.overrides.addYears(date, amount)\n                : addYears(date, amount);\n        };\n        /**\n         * Returns the number of calendar days between the given dates.\n         *\n         * @param dateLeft The later date.\n         * @param dateRight The earlier date.\n         * @returns The number of calendar days between the dates.\n         */\n        this.differenceInCalendarDays = (dateLeft, dateRight) => {\n            return this.overrides?.differenceInCalendarDays\n                ? this.overrides.differenceInCalendarDays(dateLeft, dateRight)\n                : differenceInCalendarDays(dateLeft, dateRight);\n        };\n        /**\n         * Returns the number of calendar months between the given dates.\n         *\n         * @param dateLeft The later date.\n         * @param dateRight The earlier date.\n         * @returns The number of calendar months between the dates.\n         */\n        this.differenceInCalendarMonths = (dateLeft, dateRight) => {\n            return this.overrides?.differenceInCalendarMonths\n                ? this.overrides.differenceInCalendarMonths(dateLeft, dateRight)\n                : differenceInCalendarMonths(dateLeft, dateRight);\n        };\n        /**\n         * Returns the months between the given dates.\n         *\n         * @param interval The interval to get the months for.\n         */\n        this.eachMonthOfInterval = (interval) => {\n            return this.overrides?.eachMonthOfInterval\n                ? this.overrides.eachMonthOfInterval(interval)\n                : eachMonthOfInterval(interval);\n        };\n        /**\n         * Returns the end of the broadcast week for the given date.\n         *\n         * @param date The original date.\n         * @returns The end of the broadcast week.\n         */\n        this.endOfBroadcastWeek = (date) => {\n            return this.overrides?.endOfBroadcastWeek\n                ? this.overrides.endOfBroadcastWeek(date)\n                : endOfBroadcastWeek(date, this);\n        };\n        /**\n         * Returns the end of the ISO week for the given date.\n         *\n         * @param date The original date.\n         * @returns The end of the ISO week.\n         */\n        this.endOfISOWeek = (date) => {\n            return this.overrides?.endOfISOWeek\n                ? this.overrides.endOfISOWeek(date)\n                : endOfISOWeek(date);\n        };\n        /**\n         * Returns the end of the month for the given date.\n         *\n         * @param date The original date.\n         * @returns The end of the month.\n         */\n        this.endOfMonth = (date) => {\n            return this.overrides?.endOfMonth\n                ? this.overrides.endOfMonth(date)\n                : endOfMonth(date);\n        };\n        /**\n         * Returns the end of the week for the given date.\n         *\n         * @param date The original date.\n         * @returns The end of the week.\n         */\n        this.endOfWeek = (date, options) => {\n            return this.overrides?.endOfWeek\n                ? this.overrides.endOfWeek(date, options)\n                : endOfWeek(date, this.options);\n        };\n        /**\n         * Returns the end of the year for the given date.\n         *\n         * @param date The original date.\n         * @returns The end of the year.\n         */\n        this.endOfYear = (date) => {\n            return this.overrides?.endOfYear\n                ? this.overrides.endOfYear(date)\n                : endOfYear(date);\n        };\n        /**\n         * Formats the given date using the specified format string.\n         *\n         * @param date The date to format.\n         * @param formatStr The format string.\n         * @returns The formatted date string.\n         */\n        this.format = (date, formatStr, _options) => {\n            const formatted = this.overrides?.format\n                ? this.overrides.format(date, formatStr, this.options)\n                : format(date, formatStr, this.options);\n            if (this.options.numerals && this.options.numerals !== \"latn\") {\n                return this.replaceDigits(formatted);\n            }\n            return formatted;\n        };\n        /**\n         * Returns the ISO week number for the given date.\n         *\n         * @param date The date to get the ISO week number for.\n         * @returns The ISO week number.\n         */\n        this.getISOWeek = (date) => {\n            return this.overrides?.getISOWeek\n                ? this.overrides.getISOWeek(date)\n                : getISOWeek(date);\n        };\n        /**\n         * Returns the month of the given date.\n         *\n         * @param date The date to get the month for.\n         * @returns The month.\n         */\n        this.getMonth = (date, _options) => {\n            return this.overrides?.getMonth\n                ? this.overrides.getMonth(date, this.options)\n                : getMonth(date, this.options);\n        };\n        /**\n         * Returns the year of the given date.\n         *\n         * @param date The date to get the year for.\n         * @returns The year.\n         */\n        this.getYear = (date, _options) => {\n            return this.overrides?.getYear\n                ? this.overrides.getYear(date, this.options)\n                : getYear(date, this.options);\n        };\n        /**\n         * Returns the local week number for the given date.\n         *\n         * @param date The date to get the week number for.\n         * @returns The week number.\n         */\n        this.getWeek = (date, _options) => {\n            return this.overrides?.getWeek\n                ? this.overrides.getWeek(date, this.options)\n                : getWeek(date, this.options);\n        };\n        /**\n         * Checks if the first date is after the second date.\n         *\n         * @param date The date to compare.\n         * @param dateToCompare The date to compare with.\n         * @returns True if the first date is after the second date.\n         */\n        this.isAfter = (date, dateToCompare) => {\n            return this.overrides?.isAfter\n                ? this.overrides.isAfter(date, dateToCompare)\n                : isAfter(date, dateToCompare);\n        };\n        /**\n         * Checks if the first date is before the second date.\n         *\n         * @param date The date to compare.\n         * @param dateToCompare The date to compare with.\n         * @returns True if the first date is before the second date.\n         */\n        this.isBefore = (date, dateToCompare) => {\n            return this.overrides?.isBefore\n                ? this.overrides.isBefore(date, dateToCompare)\n                : isBefore(date, dateToCompare);\n        };\n        /**\n         * Checks if the given value is a Date object.\n         *\n         * @param value The value to check.\n         * @returns True if the value is a Date object.\n         */\n        this.isDate = (value) => {\n            return this.overrides?.isDate\n                ? this.overrides.isDate(value)\n                : isDate(value);\n        };\n        /**\n         * Checks if the given dates are on the same day.\n         *\n         * @param dateLeft The first date to compare.\n         * @param dateRight The second date to compare.\n         * @returns True if the dates are on the same day.\n         */\n        this.isSameDay = (dateLeft, dateRight) => {\n            return this.overrides?.isSameDay\n                ? this.overrides.isSameDay(dateLeft, dateRight)\n                : isSameDay(dateLeft, dateRight);\n        };\n        /**\n         * Checks if the given dates are in the same month.\n         *\n         * @param dateLeft The first date to compare.\n         * @param dateRight The second date to compare.\n         * @returns True if the dates are in the same month.\n         */\n        this.isSameMonth = (dateLeft, dateRight) => {\n            return this.overrides?.isSameMonth\n                ? this.overrides.isSameMonth(dateLeft, dateRight)\n                : isSameMonth(dateLeft, dateRight);\n        };\n        /**\n         * Checks if the given dates are in the same year.\n         *\n         * @param dateLeft The first date to compare.\n         * @param dateRight The second date to compare.\n         * @returns True if the dates are in the same year.\n         */\n        this.isSameYear = (dateLeft, dateRight) => {\n            return this.overrides?.isSameYear\n                ? this.overrides.isSameYear(dateLeft, dateRight)\n                : isSameYear(dateLeft, dateRight);\n        };\n        /**\n         * Returns the latest date in the given array of dates.\n         *\n         * @param dates The array of dates to compare.\n         * @returns The latest date.\n         */\n        this.max = (dates) => {\n            return this.overrides?.max ? this.overrides.max(dates) : max(dates);\n        };\n        /**\n         * Returns the earliest date in the given array of dates.\n         *\n         * @param dates The array of dates to compare.\n         * @returns The earliest date.\n         */\n        this.min = (dates) => {\n            return this.overrides?.min ? this.overrides.min(dates) : min(dates);\n        };\n        /**\n         * Sets the month of the given date.\n         *\n         * @param date The date to set the month on.\n         * @param month The month to set (0-11).\n         * @returns The new date with the month set.\n         */\n        this.setMonth = (date, month) => {\n            return this.overrides?.setMonth\n                ? this.overrides.setMonth(date, month)\n                : setMonth(date, month);\n        };\n        /**\n         * Sets the year of the given date.\n         *\n         * @param date The date to set the year on.\n         * @param year The year to set.\n         * @returns The new date with the year set.\n         */\n        this.setYear = (date, year) => {\n            return this.overrides?.setYear\n                ? this.overrides.setYear(date, year)\n                : setYear(date, year);\n        };\n        /**\n         * Returns the start of the broadcast week for the given date.\n         *\n         * @param date The original date.\n         * @returns The start of the broadcast week.\n         */\n        this.startOfBroadcastWeek = (date, _dateLib) => {\n            return this.overrides?.startOfBroadcastWeek\n                ? this.overrides.startOfBroadcastWeek(date, this)\n                : startOfBroadcastWeek(date, this);\n        };\n        /**\n         * Returns the start of the day for the given date.\n         *\n         * @param date The original date.\n         * @returns The start of the day.\n         */\n        this.startOfDay = (date) => {\n            return this.overrides?.startOfDay\n                ? this.overrides.startOfDay(date)\n                : startOfDay(date);\n        };\n        /**\n         * Returns the start of the ISO week for the given date.\n         *\n         * @param date The original date.\n         * @returns The start of the ISO week.\n         */\n        this.startOfISOWeek = (date) => {\n            return this.overrides?.startOfISOWeek\n                ? this.overrides.startOfISOWeek(date)\n                : startOfISOWeek(date);\n        };\n        /**\n         * Returns the start of the month for the given date.\n         *\n         * @param date The original date.\n         * @returns The start of the month.\n         */\n        this.startOfMonth = (date) => {\n            return this.overrides?.startOfMonth\n                ? this.overrides.startOfMonth(date)\n                : startOfMonth(date);\n        };\n        /**\n         * Returns the start of the week for the given date.\n         *\n         * @param date The original date.\n         * @returns The start of the week.\n         */\n        this.startOfWeek = (date, _options) => {\n            return this.overrides?.startOfWeek\n                ? this.overrides.startOfWeek(date, this.options)\n                : startOfWeek(date, this.options);\n        };\n        /**\n         * Returns the start of the year for the given date.\n         *\n         * @param date The original date.\n         * @returns The start of the year.\n         */\n        this.startOfYear = (date) => {\n            return this.overrides?.startOfYear\n                ? this.overrides.startOfYear(date)\n                : startOfYear(date);\n        };\n        this.options = { locale: enUS, ...options };\n        this.overrides = overrides;\n    }\n    /**\n     * Generates a mapping of Arabic digits (0-9) to the target numbering system\n     * digits.\n     *\n     * @since 9.5.0\n     * @returns A record mapping Arabic digits to the target numerals.\n     */\n    getDigitMap() {\n        const { numerals = \"latn\" } = this.options;\n        // Use Intl.NumberFormat to create a formatter with the specified numbering system\n        const formatter = new Intl.NumberFormat(\"en-US\", {\n            numberingSystem: numerals,\n        });\n        // Map Arabic digits (0-9) to the target numerals\n        const digitMap = {};\n        for (let i = 0; i < 10; i++) {\n            digitMap[i.toString()] = formatter.format(i);\n        }\n        return digitMap;\n    }\n    /**\n     * Replaces Arabic digits in a string with the target numbering system digits.\n     *\n     * @since 9.5.0\n     * @param input The string containing Arabic digits.\n     * @returns The string with digits replaced.\n     */\n    replaceDigits(input) {\n        const digitMap = this.getDigitMap();\n        return input.replace(/\\d/g, (digit) => digitMap[digit] || digit);\n    }\n    /**\n     * Formats a number using the configured numbering system.\n     *\n     * @since 9.5.0\n     * @param value The number to format.\n     * @returns The formatted number as a string.\n     */\n    formatNumber(value) {\n        return this.replaceDigits(value.toString());\n    }\n    /**\n     * Returns the preferred ordering for month and year labels for the current\n     * locale.\n     */\n    getMonthYearOrder() {\n        const code = this.options.locale?.code;\n        if (!code) {\n            return \"month-first\";\n        }\n        return DateLib.yearFirstLocales.has(code) ? \"year-first\" : \"month-first\";\n    }\n    /**\n     * Formats the month/year pair respecting locale conventions.\n     *\n     * @since 9.11.0\n     */\n    formatMonthYear(date) {\n        const { locale, timeZone, numerals } = this.options;\n        const localeCode = locale?.code;\n        if (localeCode && DateLib.yearFirstLocales.has(localeCode)) {\n            try {\n                const intl = new Intl.DateTimeFormat(localeCode, {\n                    month: \"long\",\n                    year: \"numeric\",\n                    timeZone,\n                    numberingSystem: numerals,\n                });\n                const formatted = intl.format(date);\n                return formatted;\n            }\n            catch {\n                // Fallback to date-fns formatting below.\n            }\n        }\n        const pattern = this.getMonthYearOrder() === \"year-first\" ? \"y LLLL\" : \"LLLL y\";\n        return this.format(date, pattern);\n    }\n}\nDateLib.yearFirstLocales = new Set([\n    \"eu\",\n    \"hu\",\n    \"ja\",\n    \"ja-Hira\",\n    \"ja-JP\",\n    \"ko\",\n    \"ko-KR\",\n    \"lt\",\n    \"lt-LT\",\n    \"lv\",\n    \"lv-LV\",\n    \"mn\",\n    \"mn-MN\",\n    \"zh\",\n    \"zh-CN\",\n    \"zh-HK\",\n    \"zh-TW\",\n]);\n/** The default locale (English). */\nexport { enUS as defaultLocale } from \"date-fns/locale/en-US\";\n/**\n * The default date library with English locale.\n *\n * @since 9.2.0\n */\nexport const defaultDateLib = new DateLib();\n/**\n * @ignore\n * @deprecated Use `defaultDateLib`.\n */\nexport const dateLib = defaultDateLib;\n","import { defaultDateLib } from \"./DateLib.js\";\n/**\n * Represents a day displayed in the calendar.\n *\n * In DayPicker, a `CalendarDay` is a wrapper around a `Date` object that\n * provides additional information about the day, such as whether it belongs to\n * the displayed month.\n */\nexport class CalendarDay {\n    constructor(date, displayMonth, dateLib = defaultDateLib) {\n        this.date = date;\n        this.displayMonth = displayMonth;\n        this.outside = Boolean(displayMonth && !dateLib.isSameMonth(date, displayMonth));\n        this.dateLib = dateLib;\n    }\n    /**\n     * Checks if this day is equal to another `CalendarDay`, considering both the\n     * date and the displayed month.\n     *\n     * @param day The `CalendarDay` to compare with.\n     * @returns `true` if the days are equal, otherwise `false`.\n     */\n    isEqualTo(day) {\n        return (this.dateLib.isSameDay(day.date, this.date) &&\n            this.dateLib.isSameMonth(day.displayMonth, this.displayMonth));\n    }\n}\n","/**\n * Represents a month in a calendar year.\n *\n * A `CalendarMonth` contains the weeks within the month and the date of the\n * month.\n */\nexport class CalendarMonth {\n    constructor(month, weeks) {\n        this.date = month;\n        this.weeks = weeks;\n    }\n}\n","/**\n * Represents a week in a calendar month.\n *\n * A `CalendarWeek` contains the days within the week and the week number.\n */\nexport class CalendarWeek {\n    constructor(weekNumber, days) {\n        this.days = days;\n        this.weekNumber = weekNumber;\n    }\n}\n","import React from \"react\";\n/**\n * Render the button elements in the calendar.\n *\n * @private\n * @deprecated Use `PreviousMonthButton` or `@link NextMonthButton` instead.\n */\nexport function Button(props) {\n    return React.createElement(\"button\", { ...props });\n}\n","import React from \"react\";\n/**\n * Render the label in the month caption.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function CaptionLabel(props) {\n    return React.createElement(\"span\", { ...props });\n}\n","import React from \"react\";\n/**\n * Render the chevron icon used in the navigation buttons and dropdowns.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function Chevron(props) {\n    const { size = 24, orientation = \"left\", className } = props;\n    return (\n    // biome-ignore lint/a11y/noSvgWithoutTitle: handled by the parent component\n    React.createElement(\"svg\", { className: className, width: size, height: size, viewBox: \"0 0 24 24\" },\n        orientation === \"up\" && (React.createElement(\"polygon\", { points: \"6.77 17 12.5 11.43 18.24 17 20 15.28 12.5 8 5 15.28\" })),\n        orientation === \"down\" && (React.createElement(\"polygon\", { points: \"6.77 8 12.5 13.57 18.24 8 20 9.72 12.5 17 5 9.72\" })),\n        orientation === \"left\" && (React.createElement(\"polygon\", { points: \"16 18.112 9.81111111 12 16 5.87733333 14.0888889 4 6 12 14.0888889 20\" })),\n        orientation === \"right\" && (React.createElement(\"polygon\", { points: \"8 18.112 14.18888889 12 8 5.87733333 9.91111111 4 18 12 9.91111111 20\" }))));\n}\n","import React from \"react\";\n/**\n * Render a grid cell for a specific day in the calendar.\n *\n * Handles interaction and focus for the day. If you only need to change the\n * content of the day cell, consider swapping the `DayButton` component\n * instead.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function Day(props) {\n    const { day, modifiers, ...tdProps } = props;\n    return React.createElement(\"td\", { ...tdProps });\n}\n","import React from \"react\";\n/**\n * Render a button for a specific day in the calendar.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function DayButton(props) {\n    const { day, modifiers, ...buttonProps } = props;\n    const ref = React.useRef(null);\n    React.useEffect(() => {\n        if (modifiers.focused)\n            ref.current?.focus();\n    }, [modifiers.focused]);\n    return React.createElement(\"button\", { ref: ref, ...buttonProps });\n}\n","/**\n * Enum representing the UI elements composing DayPicker. These elements are\n * mapped to {@link CustomComponents}, {@link ClassNames}, and {@link Styles}.\n *\n * Some elements are extended by flags and modifiers.\n */\nexport var UI;\n(function (UI) {\n    /** The root component displaying the months and the navigation bar. */\n    UI[\"Root\"] = \"root\";\n    /** The Chevron SVG element used by navigation buttons and dropdowns. */\n    UI[\"Chevron\"] = \"chevron\";\n    /**\n     * The grid cell with the day's date. Extended by {@link DayFlag} and\n     * {@link SelectionState}.\n     */\n    UI[\"Day\"] = \"day\";\n    /** The button containing the formatted day's date, inside the grid cell. */\n    UI[\"DayButton\"] = \"day_button\";\n    /** The caption label of the month (when not showing the dropdown navigation). */\n    UI[\"CaptionLabel\"] = \"caption_label\";\n    /** The container of the dropdown navigation (when enabled). */\n    UI[\"Dropdowns\"] = \"dropdowns\";\n    /** The dropdown element to select for years and months. */\n    UI[\"Dropdown\"] = \"dropdown\";\n    /** The container element of the dropdown. */\n    UI[\"DropdownRoot\"] = \"dropdown_root\";\n    /** The root element of the footer. */\n    UI[\"Footer\"] = \"footer\";\n    /** The month grid. */\n    UI[\"MonthGrid\"] = \"month_grid\";\n    /** Contains the dropdown navigation or the caption label. */\n    UI[\"MonthCaption\"] = \"month_caption\";\n    /** The dropdown with the months. */\n    UI[\"MonthsDropdown\"] = \"months_dropdown\";\n    /** Wrapper of the month grid. */\n    UI[\"Month\"] = \"month\";\n    /** The container of the displayed months. */\n    UI[\"Months\"] = \"months\";\n    /** The navigation bar with the previous and next buttons. */\n    UI[\"Nav\"] = \"nav\";\n    /**\n     * The next month button in the navigation. *\n     *\n     * @since 9.1.0\n     */\n    UI[\"NextMonthButton\"] = \"button_next\";\n    /**\n     * The previous month button in the navigation.\n     *\n     * @since 9.1.0\n     */\n    UI[\"PreviousMonthButton\"] = \"button_previous\";\n    /** The row containing the week. */\n    UI[\"Week\"] = \"week\";\n    /** The group of row weeks in a month (`tbody`). */\n    UI[\"Weeks\"] = \"weeks\";\n    /** The column header with the weekday. */\n    UI[\"Weekday\"] = \"weekday\";\n    /** The row grouping the weekdays in the column headers. */\n    UI[\"Weekdays\"] = \"weekdays\";\n    /** The cell containing the week number. */\n    UI[\"WeekNumber\"] = \"week_number\";\n    /** The cell header of the week numbers column. */\n    UI[\"WeekNumberHeader\"] = \"week_number_header\";\n    /** The dropdown with the years. */\n    UI[\"YearsDropdown\"] = \"years_dropdown\";\n})(UI || (UI = {}));\n/** Enum representing flags for the {@link UI.Day} element. */\nexport var DayFlag;\n(function (DayFlag) {\n    /** The day is disabled. */\n    DayFlag[\"disabled\"] = \"disabled\";\n    /** The day is hidden. */\n    DayFlag[\"hidden\"] = \"hidden\";\n    /** The day is outside the current month. */\n    DayFlag[\"outside\"] = \"outside\";\n    /** The day is focused. */\n    DayFlag[\"focused\"] = \"focused\";\n    /** The day is today. */\n    DayFlag[\"today\"] = \"today\";\n})(DayFlag || (DayFlag = {}));\n/**\n * Enum representing selection states that can be applied to the {@link UI.Day}\n * element in selection mode.\n */\nexport var SelectionState;\n(function (SelectionState) {\n    /** The day is at the end of a selected range. */\n    SelectionState[\"range_end\"] = \"range_end\";\n    /** The day is at the middle of a selected range. */\n    SelectionState[\"range_middle\"] = \"range_middle\";\n    /** The day is at the start of a selected range. */\n    SelectionState[\"range_start\"] = \"range_start\";\n    /** The day is selected. */\n    SelectionState[\"selected\"] = \"selected\";\n})(SelectionState || (SelectionState = {}));\n/**\n * Enum representing different animation states for transitioning between\n * months.\n */\nexport var Animation;\n(function (Animation) {\n    /** The entering weeks when they appear before the exiting month. */\n    Animation[\"weeks_before_enter\"] = \"weeks_before_enter\";\n    /** The exiting weeks when they disappear before the entering month. */\n    Animation[\"weeks_before_exit\"] = \"weeks_before_exit\";\n    /** The entering weeks when they appear after the exiting month. */\n    Animation[\"weeks_after_enter\"] = \"weeks_after_enter\";\n    /** The exiting weeks when they disappear after the entering month. */\n    Animation[\"weeks_after_exit\"] = \"weeks_after_exit\";\n    /** The entering caption when it appears after the exiting month. */\n    Animation[\"caption_after_enter\"] = \"caption_after_enter\";\n    /** The exiting caption when it disappears after the entering month. */\n    Animation[\"caption_after_exit\"] = \"caption_after_exit\";\n    /** The entering caption when it appears before the exiting month. */\n    Animation[\"caption_before_enter\"] = \"caption_before_enter\";\n    /** The exiting caption when it disappears before the entering month. */\n    Animation[\"caption_before_exit\"] = \"caption_before_exit\";\n})(Animation || (Animation = {}));\n","import React from \"react\";\nimport { UI } from \"../UI.js\";\n/**\n * Render a dropdown component for navigation in the calendar.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function Dropdown(props) {\n    const { options, className, components, classNames, ...selectProps } = props;\n    const cssClassSelect = [classNames[UI.Dropdown], className].join(\" \");\n    const selectedOption = options?.find(({ value }) => value === selectProps.value);\n    return (React.createElement(\"span\", { \"data-disabled\": selectProps.disabled, className: classNames[UI.DropdownRoot] },\n        React.createElement(components.Select, { className: cssClassSelect, ...selectProps }, options?.map(({ value, label, disabled }) => (React.createElement(components.Option, { key: value, value: value, disabled: disabled }, label)))),\n        React.createElement(\"span\", { className: classNames[UI.CaptionLabel], \"aria-hidden\": true },\n            selectedOption?.label,\n            React.createElement(components.Chevron, { orientation: \"down\", size: 18, className: classNames[UI.Chevron] }))));\n}\n","import React from \"react\";\n/**\n * Render the navigation dropdowns for the calendar.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function DropdownNav(props) {\n    return React.createElement(\"div\", { ...props });\n}\n","import React from \"react\";\n/**\n * Render the footer of the calendar.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function Footer(props) {\n    return React.createElement(\"div\", { ...props });\n}\n","import React from \"react\";\n/**\n * Render the grid with the weekday header row and the weeks for a specific\n * month.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function Month(props) {\n    const { calendarMonth, displayIndex, ...divProps } = props;\n    return React.createElement(\"div\", { ...divProps }, props.children);\n}\n","import React from \"react\";\n/**\n * Render the caption for a month in the calendar.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function MonthCaption(props) {\n    const { calendarMonth, displayIndex, ...divProps } = props;\n    return React.createElement(\"div\", { ...divProps });\n}\n","import React from \"react\";\n/**\n * Render the grid of days for a specific month.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function MonthGrid(props) {\n    return React.createElement(\"table\", { ...props });\n}\n","import React from \"react\";\n/**\n * Render a container wrapping the month grids.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function Months(props) {\n    return React.createElement(\"div\", { ...props });\n}\n","import { createContext, useContext } from \"react\";\n/** @ignore */\nexport const dayPickerContext = createContext(undefined);\n/**\n * Provides access to the DayPicker context, which includes properties and\n * methods to interact with the DayPicker component. This hook must be used\n * within a custom component.\n *\n * @template T - Use this type to refine the returned context type with a\n *   specific selection mode.\n * @returns The context to work with DayPicker.\n * @throws {Error} If the hook is used outside of a DayPicker provider.\n * @group Hooks\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function useDayPicker() {\n    const context = useContext(dayPickerContext);\n    if (context === undefined) {\n        throw new Error(\"useDayPicker() must be used within a custom component.\");\n    }\n    return context;\n}\n","import React from \"react\";\nimport { useDayPicker } from \"../useDayPicker.js\";\n/**\n * Render a dropdown to navigate between months in the calendar.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function MonthsDropdown(props) {\n    const { components } = useDayPicker();\n    return React.createElement(components.Dropdown, { ...props });\n}\n","import React, { useCallback, } from \"react\";\nimport { UI } from \"../UI.js\";\nimport { useDayPicker } from \"../useDayPicker.js\";\n/**\n * Render the navigation toolbar with buttons to navigate between months.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function Nav(props) {\n    const { onPreviousClick, onNextClick, previousMonth, nextMonth, ...navProps } = props;\n    const { components, classNames, labels: { labelPrevious, labelNext }, } = useDayPicker();\n    const handleNextClick = useCallback((e) => {\n        if (nextMonth) {\n            onNextClick?.(e);\n        }\n    }, [nextMonth, onNextClick]);\n    const handlePreviousClick = useCallback((e) => {\n        if (previousMonth) {\n            onPreviousClick?.(e);\n        }\n    }, [previousMonth, onPreviousClick]);\n    return (React.createElement(\"nav\", { ...navProps },\n        React.createElement(components.PreviousMonthButton, { type: \"button\", className: classNames[UI.PreviousMonthButton], tabIndex: previousMonth ? undefined : -1, \"aria-disabled\": previousMonth ? undefined : true, \"aria-label\": labelPrevious(previousMonth), onClick: handlePreviousClick },\n            React.createElement(components.Chevron, { disabled: previousMonth ? undefined : true, className: classNames[UI.Chevron], orientation: \"left\" })),\n        React.createElement(components.NextMonthButton, { type: \"button\", className: classNames[UI.NextMonthButton], tabIndex: nextMonth ? undefined : -1, \"aria-disabled\": nextMonth ? undefined : true, \"aria-label\": labelNext(nextMonth), onClick: handleNextClick },\n            React.createElement(components.Chevron, { disabled: nextMonth ? undefined : true, orientation: \"right\", className: classNames[UI.Chevron] }))));\n}\n","import React from \"react\";\nimport { useDayPicker } from \"../useDayPicker.js\";\n/**\n * Render the button to navigate to the next month in the calendar.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function NextMonthButton(props) {\n    const { components } = useDayPicker();\n    return React.createElement(components.Button, { ...props });\n}\n","import React from \"react\";\n/**\n * Render an `option` element.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function Option(props) {\n    return React.createElement(\"option\", { ...props });\n}\n","import React from \"react\";\nimport { useDayPicker } from \"../useDayPicker.js\";\n/**\n * Render the button to navigate to the previous month in the calendar.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function PreviousMonthButton(props) {\n    const { components } = useDayPicker();\n    return React.createElement(components.Button, { ...props });\n}\n","import React from \"react\";\n/**\n * Render the root element of the calendar.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function Root(props) {\n    const { rootRef, ...rest } = props;\n    return React.createElement(\"div\", { ...rest, ref: rootRef });\n}\n","import React from \"react\";\n/**\n * Render a `select` element.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function Select(props) {\n    return React.createElement(\"select\", { ...props });\n}\n","import React from \"react\";\n/**\n * Render a table row representing a week in the calendar.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function Week(props) {\n    const { week, ...trProps } = props;\n    return React.createElement(\"tr\", { ...trProps });\n}\n","import React from \"react\";\n/**\n * Render a table header cell with the name of a weekday (e.g., \"Mo\", \"Tu\").\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function Weekday(props) {\n    return React.createElement(\"th\", { ...props });\n}\n","import React from \"react\";\n/**\n * Render the table row containing the weekday names.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function Weekdays(props) {\n    return (React.createElement(\"thead\", { \"aria-hidden\": true },\n        React.createElement(\"tr\", { ...props })));\n}\n","import React from \"react\";\n/**\n * Render a table cell displaying the number of the week.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function WeekNumber(props) {\n    const { week, ...thProps } = props;\n    return React.createElement(\"th\", { ...thProps });\n}\n","import React from \"react\";\n/**\n * Render the header cell for the week numbers column.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function WeekNumberHeader(props) {\n    return React.createElement(\"th\", { ...props });\n}\n","import React from \"react\";\n/**\n * Render the container for the weeks in the month grid.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function Weeks(props) {\n    return React.createElement(\"tbody\", { ...props });\n}\n","import React from \"react\";\nimport { useDayPicker } from \"../useDayPicker.js\";\n/**\n * Render a dropdown to navigate between years in the calendar.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function YearsDropdown(props) {\n    const { components } = useDayPicker();\n    return React.createElement(components.Dropdown, { ...props });\n}\n","import { defaultDateLib } from \"../classes/index.js\";\n/**\n * Checks if a given date is within a specified date range.\n *\n * @since 9.0.0\n * @param range - The date range to check against.\n * @param date - The date to check.\n * @param excludeEnds - If `true`, the range's start and end dates are excluded.\n * @param dateLib - The date utility library instance.\n * @returns `true` if the date is within the range, otherwise `false`.\n * @group Utilities\n */\nexport function rangeIncludesDate(range, date, excludeEnds = false, dateLib = defaultDateLib) {\n    let { from, to } = range;\n    const { differenceInCalendarDays, isSameDay } = dateLib;\n    if (from && to) {\n        const isRangeInverted = differenceInCalendarDays(to, from) < 0;\n        if (isRangeInverted) {\n            [from, to] = [to, from];\n        }\n        const isInRange = differenceInCalendarDays(date, from) >= (excludeEnds ? 1 : 0) &&\n            differenceInCalendarDays(to, date) >= (excludeEnds ? 1 : 0);\n        return isInRange;\n    }\n    if (!excludeEnds && to) {\n        return isSameDay(to, date);\n    }\n    if (!excludeEnds && from) {\n        return isSameDay(from, date);\n    }\n    return false;\n}\n/**\n * @private\n * @deprecated Use {@link rangeIncludesDate} instead.\n */\nexport const isDateInRange = (range, date) => rangeIncludesDate(range, date, false, defaultDateLib);\n","/**\n * Checks if the given value is of type {@link DateInterval}.\n *\n * @param matcher - The value to check.\n * @returns `true` if the value is a {@link DateInterval}, otherwise `false`.\n * @group Utilities\n */\nexport function isDateInterval(matcher) {\n    return Boolean(matcher &&\n        typeof matcher === \"object\" &&\n        \"before\" in matcher &&\n        \"after\" in matcher);\n}\n/**\n * Checks if the given value is of type {@link DateRange}.\n *\n * @param value - The value to check.\n * @returns `true` if the value is a {@link DateRange}, otherwise `false`.\n * @group Utilities\n */\nexport function isDateRange(value) {\n    return Boolean(value && typeof value === \"object\" && \"from\" in value);\n}\n/**\n * Checks if the given value is of type {@link DateAfter}.\n *\n * @param value - The value to check.\n * @returns `true` if the value is a {@link DateAfter}, otherwise `false`.\n * @group Utilities\n */\nexport function isDateAfterType(value) {\n    return Boolean(value && typeof value === \"object\" && \"after\" in value);\n}\n/**\n * Checks if the given value is of type {@link DateBefore}.\n *\n * @param value - The value to check.\n * @returns `true` if the value is a {@link DateBefore}, otherwise `false`.\n * @group Utilities\n */\nexport function isDateBeforeType(value) {\n    return Boolean(value && typeof value === \"object\" && \"before\" in value);\n}\n/**\n * Checks if the given value is of type {@link DayOfWeek}.\n *\n * @param value - The value to check.\n * @returns `true` if the value is a {@link DayOfWeek}, otherwise `false`.\n * @group Utilities\n */\nexport function isDayOfWeekType(value) {\n    return Boolean(value && typeof value === \"object\" && \"dayOfWeek\" in value);\n}\n/**\n * Checks if the given value is an array of valid dates.\n *\n * @private\n * @param value - The value to check.\n * @param dateLib - The date utility library instance.\n * @returns `true` if the value is an array of valid dates, otherwise `false`.\n */\nexport function isDatesArray(value, dateLib) {\n    return Array.isArray(value) && value.every(dateLib.isDate);\n}\n","import { defaultDateLib } from \"../classes/DateLib.js\";\nimport { rangeIncludesDate } from \"./rangeIncludesDate.js\";\nimport { isDateAfterType, isDateBeforeType, isDateInterval, isDateRange, isDatesArray, isDayOfWeekType, } from \"./typeguards.js\";\n/**\n * Checks if a given date matches at least one of the specified {@link Matcher}.\n *\n * @param date - The date to check.\n * @param matchers - The matchers to check against.\n * @param dateLib - The date utility library instance.\n * @returns `true` if the date matches any of the matchers, otherwise `false`.\n * @group Utilities\n */\nexport function dateMatchModifiers(date, matchers, dateLib = defaultDateLib) {\n    const matchersArr = !Array.isArray(matchers) ? [matchers] : matchers;\n    const { isSameDay, differenceInCalendarDays, isAfter } = dateLib;\n    return matchersArr.some((matcher) => {\n        if (typeof matcher === \"boolean\") {\n            return matcher;\n        }\n        if (dateLib.isDate(matcher)) {\n            return isSameDay(date, matcher);\n        }\n        if (isDatesArray(matcher, dateLib)) {\n            return matcher.includes(date);\n        }\n        if (isDateRange(matcher)) {\n            return rangeIncludesDate(matcher, date, false, dateLib);\n        }\n        if (isDayOfWeekType(matcher)) {\n            if (!Array.isArray(matcher.dayOfWeek)) {\n                return matcher.dayOfWeek === date.getDay();\n            }\n            return matcher.dayOfWeek.includes(date.getDay());\n        }\n        if (isDateInterval(matcher)) {\n            const diffBefore = differenceInCalendarDays(matcher.before, date);\n            const diffAfter = differenceInCalendarDays(matcher.after, date);\n            const isDayBefore = diffBefore > 0;\n            const isDayAfter = diffAfter < 0;\n            const isClosedInterval = isAfter(matcher.before, matcher.after);\n            if (isClosedInterval) {\n                return isDayAfter && isDayBefore;\n            }\n            else {\n                return isDayBefore || isDayAfter;\n            }\n        }\n        if (isDateAfterType(matcher)) {\n            return differenceInCalendarDays(date, matcher.after) > 0;\n        }\n        if (isDateBeforeType(matcher)) {\n            return differenceInCalendarDays(matcher.before, date) > 0;\n        }\n        if (typeof matcher === \"function\") {\n            return matcher(date);\n        }\n        return false;\n    });\n}\n/**\n * @private\n * @deprecated Use {@link dateMatchModifiers} instead.\n */\nexport const isMatch = dateMatchModifiers;\n","import { DayFlag } from \"../UI.js\";\nimport { dateMatchModifiers } from \"../utils/dateMatchModifiers.js\";\n/**\n * Creates a function to retrieve the modifiers for a given day.\n *\n * This function calculates both internal and custom modifiers for each day\n * based on the provided calendar days and DayPicker props.\n *\n * @private\n * @param days The array of `CalendarDay` objects to process.\n * @param props The DayPicker props, including modifiers and configuration\n *   options.\n * @param dateLib The date library to use for date manipulation.\n * @returns A function that retrieves the modifiers for a given `CalendarDay`.\n */\nexport function createGetModifiers(days, props, navStart, navEnd, dateLib) {\n    const { disabled, hidden, modifiers, showOutsideDays, broadcastCalendar, today, } = props;\n    const { isSameDay, isSameMonth, startOfMonth, isBefore, endOfMonth, isAfter, } = dateLib;\n    const computedNavStart = navStart && startOfMonth(navStart);\n    const computedNavEnd = navEnd && endOfMonth(navEnd);\n    const internalModifiersMap = {\n        [DayFlag.focused]: [],\n        [DayFlag.outside]: [],\n        [DayFlag.disabled]: [],\n        [DayFlag.hidden]: [],\n        [DayFlag.today]: [],\n    };\n    const customModifiersMap = {};\n    for (const day of days) {\n        const { date, displayMonth } = day;\n        const isOutside = Boolean(displayMonth && !isSameMonth(date, displayMonth));\n        const isBeforeNavStart = Boolean(computedNavStart && isBefore(date, computedNavStart));\n        const isAfterNavEnd = Boolean(computedNavEnd && isAfter(date, computedNavEnd));\n        const isDisabled = Boolean(disabled && dateMatchModifiers(date, disabled, dateLib));\n        const isHidden = Boolean(hidden && dateMatchModifiers(date, hidden, dateLib)) ||\n            isBeforeNavStart ||\n            isAfterNavEnd ||\n            // Broadcast calendar will show outside days as default\n            (!broadcastCalendar && !showOutsideDays && isOutside) ||\n            (broadcastCalendar && showOutsideDays === false && isOutside);\n        const isToday = isSameDay(date, today ?? dateLib.today());\n        if (isOutside)\n            internalModifiersMap.outside.push(day);\n        if (isDisabled)\n            internalModifiersMap.disabled.push(day);\n        if (isHidden)\n            internalModifiersMap.hidden.push(day);\n        if (isToday)\n            internalModifiersMap.today.push(day);\n        // Add custom modifiers\n        if (modifiers) {\n            Object.keys(modifiers).forEach((name) => {\n                const modifierValue = modifiers?.[name];\n                const isMatch = modifierValue\n                    ? dateMatchModifiers(date, modifierValue, dateLib)\n                    : false;\n                if (!isMatch)\n                    return;\n                if (customModifiersMap[name]) {\n                    customModifiersMap[name].push(day);\n                }\n                else {\n                    customModifiersMap[name] = [day];\n                }\n            });\n        }\n    }\n    return (day) => {\n        // Initialize all the modifiers to false\n        const dayFlags = {\n            [DayFlag.focused]: false,\n            [DayFlag.disabled]: false,\n            [DayFlag.hidden]: false,\n            [DayFlag.outside]: false,\n            [DayFlag.today]: false,\n        };\n        const customModifiers = {};\n        // Find the modifiers for the given day\n        for (const name in internalModifiersMap) {\n            const days = internalModifiersMap[name];\n            dayFlags[name] = days.some((d) => d === day);\n        }\n        for (const name in customModifiersMap) {\n            customModifiers[name] = customModifiersMap[name].some((d) => d === day);\n        }\n        return {\n            ...dayFlags,\n            // custom modifiers should override all the previous ones\n            ...customModifiers,\n        };\n    };\n}\n","import { DayFlag, SelectionState, UI } from \"../UI.js\";\n/**\n * Returns the class names for a day based on its modifiers.\n *\n * This function combines the base class name for the day with any class names\n * associated with active modifiers.\n *\n * @param modifiers The modifiers applied to the day.\n * @param classNames The base class names for the calendar elements.\n * @param modifiersClassNames The class names associated with specific\n *   modifiers.\n * @returns An array of class names for the day.\n */\nexport function getClassNamesForModifiers(modifiers, classNames, modifiersClassNames = {}) {\n    const modifierClassNames = Object.entries(modifiers)\n        .filter(([, active]) => active === true)\n        .reduce((previousValue, [key]) => {\n        if (modifiersClassNames[key]) {\n            previousValue.push(modifiersClassNames[key]);\n        }\n        else if (classNames[DayFlag[key]]) {\n            previousValue.push(classNames[DayFlag[key]]);\n        }\n        else if (classNames[SelectionState[key]]) {\n            previousValue.push(classNames[SelectionState[key]]);\n        }\n        return previousValue;\n    }, [classNames[UI.Day]]);\n    return modifierClassNames;\n}\n","import * as components from \"../components/custom-components.js\";\n/**\n * Merges custom components from the props with the default components.\n *\n * This function ensures that any custom components provided in the props\n * override the default components.\n *\n * @param customComponents The custom components provided in the DayPicker\n *   props.\n * @returns An object containing the merged components.\n */\nexport function getComponents(customComponents) {\n    return {\n        ...components,\n        ...customComponents,\n    };\n}\n","/**\n * Extracts `data-` attributes from the DayPicker props.\n *\n * This function collects all `data-` attributes from the props and adds\n * additional attributes based on the DayPicker configuration.\n *\n * @param props The DayPicker props.\n * @returns An object containing the `data-` attributes.\n */\nexport function getDataAttributes(props) {\n    const dataAttributes = {\n        \"data-mode\": props.mode ?? undefined,\n        \"data-required\": \"required\" in props ? props.required : undefined,\n        \"data-multiple-months\": (props.numberOfMonths && props.numberOfMonths > 1) || undefined,\n        \"data-week-numbers\": props.showWeekNumber || undefined,\n        \"data-broadcast-calendar\": props.broadcastCalendar || undefined,\n        \"data-nav-layout\": props.navLayout || undefined,\n    };\n    Object.entries(props).forEach(([key, val]) => {\n        if (key.startsWith(\"data-\")) {\n            dataAttributes[key] = val;\n        }\n    });\n    return dataAttributes;\n}\n","import { Animation, DayFlag, SelectionState, UI } from \"../UI.js\";\n/**\n * Returns the default class names for the UI elements.\n *\n * This function generates a mapping of default class names for various UI\n * elements, day flags, selection states, and animations.\n *\n * @returns An object containing the default class names.\n * @group Utilities\n */\nexport function getDefaultClassNames() {\n    const classNames = {};\n    for (const key in UI) {\n        classNames[UI[key]] =\n            `rdp-${UI[key]}`;\n    }\n    for (const key in DayFlag) {\n        classNames[DayFlag[key]] =\n            `rdp-${DayFlag[key]}`;\n    }\n    for (const key in SelectionState) {\n        classNames[SelectionState[key]] =\n            `rdp-${SelectionState[key]}`;\n    }\n    for (const key in Animation) {\n        classNames[Animation[key]] =\n            `rdp-${Animation[key]}`;\n    }\n    return classNames;\n}\n","import { DateLib } from \"../classes/DateLib.js\";\n/**\n * Formats the caption of the month.\n *\n * @defaultValue Locale-specific month/year order (e.g., \"November 2022\").\n * @param month The date representing the month.\n * @param options Configuration options for the date library.\n * @param dateLib The date library to use for formatting. If not provided, a new\n *   instance is created.\n * @returns The formatted caption as a string.\n * @group Formatters\n * @see https://daypicker.dev/docs/translation#custom-formatters\n */\nexport function formatCaption(month, options, dateLib) {\n    const lib = dateLib ?? new DateLib(options);\n    return lib.formatMonthYear(month);\n}\n/**\n * @private\n * @deprecated Use {@link formatCaption} instead.\n * @group Formatters\n */\nexport const formatMonthCaption = formatCaption;\n","import { DateLib } from \"../classes/DateLib.js\";\n/**\n * Formats the day date shown in the day cell.\n *\n * @defaultValue `d` (e.g., \"1\").\n * @param date The date to format.\n * @param options Configuration options for the date library.\n * @param dateLib The date library to use for formatting. If not provided, a new\n *   instance is created.\n * @returns The formatted day as a string.\n * @group Formatters\n * @see https://daypicker.dev/docs/translation#custom-formatters\n */\nexport function formatDay(date, options, dateLib) {\n    return (dateLib ?? new DateLib(options)).format(date, \"d\");\n}\n","import { defaultDateLib } from \"../classes/DateLib.js\";\n/**\n * Formats the month for the dropdown option label.\n *\n * @defaultValue The localized full month name.\n * @param month The date representing the month.\n * @param dateLib The date library to use for formatting. Defaults to\n *   `defaultDateLib`.\n * @returns The formatted month name as a string.\n * @group Formatters\n * @see https://daypicker.dev/docs/translation#custom-formatters\n */\nexport function formatMonthDropdown(month, dateLib = defaultDateLib) {\n    return dateLib.format(month, \"LLLL\");\n}\n","import { DateLib } from \"../classes/DateLib.js\";\n/**\n * Formats the name of a weekday to be displayed in the weekdays header.\n *\n * @defaultValue `cccccc` (e.g., \"Mo\" for Monday).\n * @param weekday The date representing the weekday.\n * @param options Configuration options for the date library.\n * @param dateLib The date library to use for formatting. If not provided, a new\n *   instance is created.\n * @returns The formatted weekday name as a string.\n * @group Formatters\n * @see https://daypicker.dev/docs/translation#custom-formatters\n */\nexport function formatWeekdayName(weekday, options, dateLib) {\n    return (dateLib ?? new DateLib(options)).format(weekday, \"cccccc\");\n}\n","import { defaultDateLib } from \"../classes/DateLib.js\";\n/**\n * Formats the week number.\n *\n * @defaultValue The week number as a string, with a leading zero for single-digit numbers.\n * @param weekNumber The week number to format.\n * @param dateLib The date library to use for formatting. Defaults to\n *   `defaultDateLib`.\n * @returns The formatted week number as a string.\n * @group Formatters\n * @see https://daypicker.dev/docs/translation#custom-formatters\n */\nexport function formatWeekNumber(weekNumber, dateLib = defaultDateLib) {\n    if (weekNumber < 10) {\n        return dateLib.formatNumber(`0${weekNumber.toLocaleString()}`);\n    }\n    return dateLib.formatNumber(`${weekNumber.toLocaleString()}`);\n}\n","/**\n * Formats the header for the week number column.\n *\n * @defaultValue An empty string `\"\"`.\n * @returns The formatted week number header as a string.\n * @group Formatters\n * @see https://daypicker.dev/docs/translation#custom-formatters\n */\nexport function formatWeekNumberHeader() {\n    return ``;\n}\n","import { defaultDateLib } from \"../classes/DateLib.js\";\n/**\n * Formats the year for the dropdown option label.\n *\n * @param year The year to format.\n * @param dateLib The date library to use for formatting. Defaults to\n *   `defaultDateLib`.\n * @returns The formatted year as a string.\n * @group Formatters\n * @see https://daypicker.dev/docs/translation#custom-formatters\n */\nexport function formatYearDropdown(year, dateLib = defaultDateLib) {\n    return dateLib.format(year, \"yyyy\");\n}\n/**\n * @private\n * @deprecated Use `formatYearDropdown` instead.\n * @group Formatters\n */\nexport const formatYearCaption = formatYearDropdown;\n","import * as defaultFormatters from \"../formatters/index.js\";\n/**\n * Merges custom formatters from the props with the default formatters.\n *\n * @param customFormatters The custom formatters provided in the DayPicker\n *   props.\n * @returns The merged formatters object.\n */\nexport function getFormatters(customFormatters) {\n    if (customFormatters?.formatMonthCaption && !customFormatters.formatCaption) {\n        customFormatters.formatCaption = customFormatters.formatMonthCaption;\n    }\n    if (customFormatters?.formatYearCaption &&\n        !customFormatters.formatYearDropdown) {\n        customFormatters.formatYearDropdown = customFormatters.formatYearCaption;\n    }\n    return {\n        ...defaultFormatters,\n        ...customFormatters,\n    };\n}\n","/**\n * Returns the months to show in the dropdown.\n *\n * This function generates a list of months for the current year, formatted\n * using the provided formatter, and determines whether each month should be\n * disabled based on the navigation range.\n *\n * @param displayMonth The currently displayed month.\n * @param navStart The start date for navigation.\n * @param navEnd The end date for navigation.\n * @param formatters The formatters to use for formatting the month labels.\n * @param dateLib The date library to use for date manipulation.\n * @returns An array of dropdown options representing the months, or `undefined`\n *   if no months are available.\n */\nexport function getMonthOptions(displayMonth, navStart, navEnd, formatters, dateLib) {\n    const { startOfMonth, startOfYear, endOfYear, eachMonthOfInterval, getMonth, } = dateLib;\n    const months = eachMonthOfInterval({\n        start: startOfYear(displayMonth),\n        end: endOfYear(displayMonth),\n    });\n    const options = months.map((month) => {\n        const label = formatters.formatMonthDropdown(month, dateLib);\n        const value = getMonth(month);\n        const disabled = (navStart && month < startOfMonth(navStart)) ||\n            (navEnd && month > startOfMonth(navEnd)) ||\n            false;\n        return { value, label, disabled };\n    });\n    return options;\n}\n","import { UI } from \"../UI.js\";\n/**\n * Returns the computed style for a day based on its modifiers.\n *\n * This function merges the base styles for the day with any styles associated\n * with active modifiers.\n *\n * @param dayModifiers The modifiers applied to the day.\n * @param styles The base styles for the calendar elements.\n * @param modifiersStyles The styles associated with specific modifiers.\n * @returns The computed style for the day.\n */\nexport function getStyleForModifiers(dayModifiers, styles = {}, modifiersStyles = {}) {\n    let style = { ...styles?.[UI.Day] };\n    Object.entries(dayModifiers)\n        .filter(([, active]) => active === true)\n        .forEach(([modifier]) => {\n        style = {\n            ...style,\n            ...modifiersStyles?.[modifier],\n        };\n    });\n    return style;\n}\n","/**\n * Generates a series of 7 days, starting from the beginning of the week, to use\n * for formatting weekday names (e.g., Monday, Tuesday, etc.).\n *\n * @param dateLib The date library to use for date manipulation.\n * @param ISOWeek Whether to use ISO week numbering (weeks start on Monday).\n * @param broadcastCalendar Whether to use the broadcast calendar (weeks start\n *   on Monday, but may include adjustments for broadcast-specific rules).\n * @returns An array of 7 dates representing the weekdays.\n */\nexport function getWeekdays(dateLib, ISOWeek, broadcastCalendar) {\n    const today = dateLib.today();\n    const start = broadcastCalendar\n        ? dateLib.startOfBroadcastWeek(today, dateLib)\n        : ISOWeek\n            ? dateLib.startOfISOWeek(today)\n            : dateLib.startOfWeek(today);\n    const days = [];\n    for (let i = 0; i < 7; i++) {\n        const day = dateLib.addDays(start, i);\n        days.push(day);\n    }\n    return days;\n}\n","/**\n * Returns the years to display in the dropdown.\n *\n * This function generates a list of years between the navigation start and end\n * dates, formatted using the provided formatter.\n *\n * @param navStart The start date for navigation.\n * @param navEnd The end date for navigation.\n * @param formatters The formatters to use for formatting the year labels.\n * @param dateLib The date library to use for date manipulation.\n * @param reverse If true, reverses the order of the years (descending).\n * @returns An array of dropdown options representing the years, or `undefined`\n *   if `navStart` or `navEnd` is not provided.\n */\nexport function getYearOptions(navStart, navEnd, formatters, dateLib, reverse = false) {\n    if (!navStart)\n        return undefined;\n    if (!navEnd)\n        return undefined;\n    const { startOfYear, endOfYear, addYears, getYear, isBefore, isSameYear } = dateLib;\n    const firstNavYear = startOfYear(navStart);\n    const lastNavYear = endOfYear(navEnd);\n    const years = [];\n    let year = firstNavYear;\n    while (isBefore(year, lastNavYear) || isSameYear(year, lastNavYear)) {\n        years.push(year);\n        year = addYears(year, 1);\n    }\n    if (reverse)\n        years.reverse();\n    return years.map((year) => {\n        const label = formatters.formatYearDropdown(year, dateLib);\n        return {\n            value: getYear(year),\n            label,\n            disabled: false,\n        };\n    });\n}\n","import { DateLib } from \"../classes/DateLib.js\";\n/**\n * Generates the ARIA label for a day button.\n *\n * Use the `modifiers` argument to provide additional context for the label,\n * such as indicating if the day is \"today\" or \"selected.\"\n *\n * @defaultValue The formatted date.\n * @param date - The date to format.\n * @param modifiers - The modifiers providing context for the day.\n * @param options - Optional configuration for the date formatting library.\n * @param dateLib - An optional instance of the date formatting library.\n * @returns The ARIA label for the day button.\n * @group Labels\n * @see https://daypicker.dev/docs/translation#aria-labels\n */\nexport function labelDayButton(date, modifiers, options, dateLib) {\n    let label = (dateLib ?? new DateLib(options)).format(date, \"PPPP\");\n    if (modifiers.today)\n        label = `Today, ${label}`;\n    if (modifiers.selected)\n        label = `${label}, selected`;\n    return label;\n}\n/**\n * @ignore\n * @deprecated Use `labelDayButton` instead.\n */\nexport const labelDay = labelDayButton;\n","import { DateLib } from \"../classes/DateLib.js\";\n/**\n * Generates the ARIA label for the month grid, which is announced when entering\n * the grid.\n *\n * @defaultValue Locale-specific month/year order (e.g., \"November 2022\").\n * @param date - The date representing the month.\n * @param options - Optional configuration for the date formatting library.\n * @param dateLib - An optional instance of the date formatting library.\n * @returns The ARIA label for the month grid.\n * @group Labels\n * @see https://daypicker.dev/docs/translation#aria-labels\n */\nexport function labelGrid(date, options, dateLib) {\n    const lib = dateLib ?? new DateLib(options);\n    return lib.formatMonthYear(date);\n}\n/**\n * @ignore\n * @deprecated Use {@link labelGrid} instead.\n */\nexport const labelCaption = labelGrid;\n","import { DateLib } from \"../classes/DateLib.js\";\n/**\n * Generates the label for a day grid cell when the calendar is not interactive.\n *\n * @param date - The date to format.\n * @param modifiers - Optional modifiers providing context for the day.\n * @param options - Optional configuration for the date formatting library.\n * @param dateLib - An optional instance of the date formatting library.\n * @returns The label for the day grid cell.\n * @group Labels\n * @see https://daypicker.dev/docs/translation#aria-labels\n */\nexport function labelGridcell(date, modifiers, options, dateLib) {\n    let label = (dateLib ?? new DateLib(options)).format(date, \"PPPP\");\n    if (modifiers?.today) {\n        label = `Today, ${label}`;\n    }\n    return label;\n}\n","/**\n * Generates the ARIA label for the months dropdown.\n *\n * @defaultValue `\"Choose the Month\"`\n * @param options - Optional configuration for the date formatting library.\n * @returns The ARIA label for the months dropdown.\n * @group Labels\n * @see https://daypicker.dev/docs/translation#aria-labels\n */\nexport function labelMonthDropdown(_options) {\n    return \"Choose the Month\";\n}\n","/**\n * Generates the ARIA label for the navigation toolbar.\n *\n * @defaultValue `\"\"`\n * @returns The ARIA label for the navigation toolbar.\n * @group Labels\n * @see https://daypicker.dev/docs/translation#aria-labels\n */\nexport function labelNav() {\n    return \"\";\n}\n","/**\n * Generates the ARIA label for the \"next month\" button.\n *\n * @defaultValue `\"Go to the Next Month\"`\n * @param month - The date representing the next month, or `undefined` if there\n *   is no next month.\n * @returns The ARIA label for the \"next month\" button.\n * @group Labels\n * @see https://daypicker.dev/docs/translation#aria-labels\n */\nexport function labelNext(_month) {\n    return \"Go to the Next Month\";\n}\n","/**\n * Generates the ARIA label for the \"previous month\" button.\n *\n * @defaultValue `\"Go to the Previous Month\"`\n * @param month - The date representing the previous month, or `undefined` if\n *   there is no previous month.\n * @returns The ARIA label for the \"previous month\" button.\n * @group Labels\n * @see https://daypicker.dev/docs/translation#aria-labels\n */\nexport function labelPrevious(_month) {\n    return \"Go to the Previous Month\";\n}\n","import { DateLib } from \"../classes/DateLib.js\";\n/**\n * Generates the ARIA label for a weekday column header.\n *\n * @defaultValue `\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"`\n * @param date - The date representing the weekday.\n * @param options - Optional configuration for the date formatting library.\n * @param dateLib - An optional instance of the date formatting library.\n * @returns The ARIA label for the weekday column header.\n * @group Labels\n * @see https://daypicker.dev/docs/translation#aria-labels\n */\nexport function labelWeekday(date, options, dateLib) {\n    return (dateLib ?? new DateLib(options)).format(date, \"cccc\");\n}\n","/**\n * Generates the ARIA label for the week number cell (the first cell in a row).\n *\n * @defaultValue `Week ${weekNumber}`\n * @param weekNumber - The number of the week.\n * @param options - Optional configuration for the date formatting library.\n * @returns The ARIA label for the week number cell.\n * @group Labels\n * @see https://daypicker.dev/docs/translation#aria-labels\n */\nexport function labelWeekNumber(weekNumber, _options) {\n    return `Week ${weekNumber}`;\n}\n","/**\n * Generates the ARIA label for the week number header element.\n *\n * @defaultValue `\"Week Number\"`\n * @param options - Optional configuration for the date formatting library.\n * @returns The ARIA label for the week number header.\n * @group Labels\n * @see https://daypicker.dev/docs/translation#aria-labels\n */\nexport function labelWeekNumberHeader(_options) {\n    return \"Week Number\";\n}\n","/**\n * Generates the ARIA label for the years dropdown.\n *\n * @defaultValue `\"Choose the Year\"`\n * @param options - Optional configuration for the date formatting library.\n * @returns The ARIA label for the years dropdown.\n * @group Labels\n * @see https://daypicker.dev/docs/translation#aria-labels\n */\nexport function labelYearDropdown(_options) {\n    return \"Choose the Year\";\n}\n","import { useLayoutEffect, useRef } from \"react\";\nimport { Animation } from \"./UI.js\";\nconst asHtmlElement = (element) => {\n    if (element instanceof HTMLElement)\n        return element;\n    return null;\n};\nconst queryMonthEls = (element) => [\n    ...(element.querySelectorAll(\"[data-animated-month]\") ?? []),\n];\nconst queryMonthEl = (element) => asHtmlElement(element.querySelector(\"[data-animated-month]\"));\nconst queryCaptionEl = (element) => asHtmlElement(element.querySelector(\"[data-animated-caption]\"));\nconst queryWeeksEl = (element) => asHtmlElement(element.querySelector(\"[data-animated-weeks]\"));\nconst queryNavEl = (element) => asHtmlElement(element.querySelector(\"[data-animated-nav]\"));\nconst queryWeekdaysEl = (element) => asHtmlElement(element.querySelector(\"[data-animated-weekdays]\"));\n/**\n * Handles animations for transitioning between months in the DayPicker\n * component.\n *\n * @private\n * @param rootElRef - A reference to the root element of the DayPicker\n *   component.\n * @param enabled - Whether animations are enabled.\n * @param options - Configuration options for the animation, including class\n *   names, months, focused day, and the date utility library.\n */\nexport function useAnimation(rootElRef, enabled, { classNames, months, focused, dateLib, }) {\n    const previousRootElSnapshotRef = useRef(null);\n    const previousMonthsRef = useRef(months);\n    const animatingRef = useRef(false);\n    useLayoutEffect(() => {\n        // get previous months before updating the previous months ref\n        const previousMonths = previousMonthsRef.current;\n        // update previous months ref for next effect trigger\n        previousMonthsRef.current = months;\n        if (!enabled ||\n            !rootElRef.current ||\n            // safety check because the ref can be set to anything by consumers\n            !(rootElRef.current instanceof HTMLElement) ||\n            // validation required for the animation to work as expected\n            months.length === 0 ||\n            previousMonths.length === 0 ||\n            months.length !== previousMonths.length) {\n            return;\n        }\n        const isSameMonth = dateLib.isSameMonth(months[0].date, previousMonths[0].date);\n        const isAfterPreviousMonth = dateLib.isAfter(months[0].date, previousMonths[0].date);\n        const captionAnimationClass = isAfterPreviousMonth\n            ? classNames[Animation.caption_after_enter]\n            : classNames[Animation.caption_before_enter];\n        const weeksAnimationClass = isAfterPreviousMonth\n            ? classNames[Animation.weeks_after_enter]\n            : classNames[Animation.weeks_before_enter];\n        // get previous root element snapshot before updating the snapshot ref\n        const previousRootElSnapshot = previousRootElSnapshotRef.current;\n        // update snapshot for next effect trigger\n        const rootElSnapshot = rootElRef.current.cloneNode(true);\n        if (rootElSnapshot instanceof HTMLElement) {\n            // if this effect is triggered while animating, we need to clean up the new root snapshot\n            // to put it in the same state as when not animating, to correctly animate the next month change\n            const currentMonthElsSnapshot = queryMonthEls(rootElSnapshot);\n            currentMonthElsSnapshot.forEach((currentMonthElSnapshot) => {\n                if (!(currentMonthElSnapshot instanceof HTMLElement))\n                    return;\n                // remove the old month snapshots from the new root snapshot\n                const previousMonthElSnapshot = queryMonthEl(currentMonthElSnapshot);\n                if (previousMonthElSnapshot &&\n                    currentMonthElSnapshot.contains(previousMonthElSnapshot)) {\n                    currentMonthElSnapshot.removeChild(previousMonthElSnapshot);\n                }\n                // remove animation classes from the new month snapshots\n                const captionEl = queryCaptionEl(currentMonthElSnapshot);\n                if (captionEl) {\n                    captionEl.classList.remove(captionAnimationClass);\n                }\n                const weeksEl = queryWeeksEl(currentMonthElSnapshot);\n                if (weeksEl) {\n                    weeksEl.classList.remove(weeksAnimationClass);\n                }\n            });\n            previousRootElSnapshotRef.current = rootElSnapshot;\n        }\n        else {\n            previousRootElSnapshotRef.current = null;\n        }\n        if (animatingRef.current ||\n            isSameMonth ||\n            // skip animation if a day is focused because it can cause issues to the animation and is better for a11y\n            focused) {\n            return;\n        }\n        const previousMonthEls = previousRootElSnapshot instanceof HTMLElement\n            ? queryMonthEls(previousRootElSnapshot)\n            : [];\n        const currentMonthEls = queryMonthEls(rootElRef.current);\n        if (currentMonthEls?.every((el) => el instanceof HTMLElement) &&\n            previousMonthEls &&\n            previousMonthEls.every((el) => el instanceof HTMLElement)) {\n            animatingRef.current = true;\n            const cleanUpFunctions = [];\n            // set isolation to isolate to isolate the stacking context during animation\n            rootElRef.current.style.isolation = \"isolate\";\n            // set z-index to 1 to ensure the nav is clickable over the other elements being animated\n            const navEl = queryNavEl(rootElRef.current);\n            if (navEl) {\n                navEl.style.zIndex = \"1\";\n            }\n            currentMonthEls.forEach((currentMonthEl, index) => {\n                const previousMonthEl = previousMonthEls[index];\n                if (!previousMonthEl) {\n                    return;\n                }\n                // animate new displayed month\n                currentMonthEl.style.position = \"relative\";\n                currentMonthEl.style.overflow = \"hidden\";\n                const captionEl = queryCaptionEl(currentMonthEl);\n                if (captionEl) {\n                    captionEl.classList.add(captionAnimationClass);\n                }\n                const weeksEl = queryWeeksEl(currentMonthEl);\n                if (weeksEl) {\n                    weeksEl.classList.add(weeksAnimationClass);\n                }\n                // animate new displayed month end\n                const cleanUp = () => {\n                    animatingRef.current = false;\n                    if (rootElRef.current) {\n                        rootElRef.current.style.isolation = \"\";\n                    }\n                    if (navEl) {\n                        navEl.style.zIndex = \"\";\n                    }\n                    if (captionEl) {\n                        captionEl.classList.remove(captionAnimationClass);\n                    }\n                    if (weeksEl) {\n                        weeksEl.classList.remove(weeksAnimationClass);\n                    }\n                    currentMonthEl.style.position = \"\";\n                    currentMonthEl.style.overflow = \"\";\n                    if (currentMonthEl.contains(previousMonthEl)) {\n                        currentMonthEl.removeChild(previousMonthEl);\n                    }\n                };\n                cleanUpFunctions.push(cleanUp);\n                // animate old displayed month\n                previousMonthEl.style.pointerEvents = \"none\";\n                previousMonthEl.style.position = \"absolute\";\n                previousMonthEl.style.overflow = \"hidden\";\n                previousMonthEl.setAttribute(\"aria-hidden\", \"true\");\n                // hide the weekdays container of the old month and only the new one\n                const previousWeekdaysEl = queryWeekdaysEl(previousMonthEl);\n                if (previousWeekdaysEl) {\n                    previousWeekdaysEl.style.opacity = \"0\";\n                }\n                const previousCaptionEl = queryCaptionEl(previousMonthEl);\n                if (previousCaptionEl) {\n                    previousCaptionEl.classList.add(isAfterPreviousMonth\n                        ? classNames[Animation.caption_before_exit]\n                        : classNames[Animation.caption_after_exit]);\n                    previousCaptionEl.addEventListener(\"animationend\", cleanUp);\n                }\n                const previousWeeksEl = queryWeeksEl(previousMonthEl);\n                if (previousWeeksEl) {\n                    previousWeeksEl.classList.add(isAfterPreviousMonth\n                        ? classNames[Animation.weeks_before_exit]\n                        : classNames[Animation.weeks_after_exit]);\n                }\n                currentMonthEl.insertBefore(previousMonthEl, currentMonthEl.firstChild);\n            });\n        }\n    });\n}\n","/**\n * Returns all the dates to display in the calendar.\n *\n * This function calculates the range of dates to display based on the provided\n * display months, constraints, and calendar configuration.\n *\n * @param displayMonths The months to display in the calendar.\n * @param maxDate The maximum date to include in the range.\n * @param props The DayPicker props, including calendar configuration options.\n * @param dateLib The date library to use for date manipulation.\n * @returns An array of dates to display in the calendar.\n */\nexport function getDates(displayMonths, maxDate, props, dateLib) {\n    const firstMonth = displayMonths[0];\n    const lastMonth = displayMonths[displayMonths.length - 1];\n    const { ISOWeek, fixedWeeks, broadcastCalendar } = props ?? {};\n    const { addDays, differenceInCalendarDays, differenceInCalendarMonths, endOfBroadcastWeek, endOfISOWeek, endOfMonth, endOfWeek, isAfter, startOfBroadcastWeek, startOfISOWeek, startOfWeek, } = dateLib;\n    const startWeekFirstDate = broadcastCalendar\n        ? startOfBroadcastWeek(firstMonth, dateLib)\n        : ISOWeek\n            ? startOfISOWeek(firstMonth)\n            : startOfWeek(firstMonth);\n    const endWeekLastDate = broadcastCalendar\n        ? endOfBroadcastWeek(lastMonth)\n        : ISOWeek\n            ? endOfISOWeek(endOfMonth(lastMonth))\n            : endOfWeek(endOfMonth(lastMonth));\n    const nOfDays = differenceInCalendarDays(endWeekLastDate, startWeekFirstDate);\n    const nOfMonths = differenceInCalendarMonths(lastMonth, firstMonth) + 1;\n    const dates = [];\n    for (let i = 0; i <= nOfDays; i++) {\n        const date = addDays(startWeekFirstDate, i);\n        if (maxDate && isAfter(date, maxDate)) {\n            break;\n        }\n        dates.push(date);\n    }\n    // If fixed weeks is enabled, add the extra dates to the array\n    const nrOfDaysWithFixedWeeks = broadcastCalendar ? 35 : 42;\n    const extraDates = nrOfDaysWithFixedWeeks * nOfMonths;\n    if (fixedWeeks && dates.length < extraDates) {\n        const daysToAdd = extraDates - dates.length;\n        for (let i = 0; i < daysToAdd; i++) {\n            const date = addDays(dates[dates.length - 1], 1);\n            dates.push(date);\n        }\n    }\n    return dates;\n}\n","/**\n * Returns all the days belonging to the calendar by merging the days in the\n * weeks for each month.\n *\n * @param calendarMonths The array of calendar months.\n * @returns An array of `CalendarDay` objects representing all the days in the\n *   calendar.\n */\nexport function getDays(calendarMonths) {\n    const initialDays = [];\n    return calendarMonths.reduce((days, month) => {\n        const weekDays = month.weeks.reduce((weekDays, week) => {\n            return weekDays.concat(week.days.slice());\n        }, initialDays.slice());\n        return days.concat(weekDays.slice());\n    }, initialDays.slice());\n}\n","/**\n * Returns the months to display in the calendar.\n *\n * @param firstDisplayedMonth The first month currently displayed in the\n *   calendar.\n * @param calendarEndMonth The latest month the user can navigate to.\n * @param props The DayPicker props, including `numberOfMonths`.\n * @param dateLib The date library to use for date manipulation.\n * @returns An array of dates representing the months to display.\n */\nexport function getDisplayMonths(firstDisplayedMonth, calendarEndMonth, props, dateLib) {\n    const { numberOfMonths = 1 } = props;\n    const months = [];\n    for (let i = 0; i < numberOfMonths; i++) {\n        const month = dateLib.addMonths(firstDisplayedMonth, i);\n        if (calendarEndMonth && month > calendarEndMonth) {\n            break;\n        }\n        months.push(month);\n    }\n    return months;\n}\n","/**\n * Determines the initial month to display in the calendar based on the provided\n * props.\n *\n * This function calculates the starting month, considering constraints such as\n * `startMonth`, `endMonth`, and the number of months to display.\n *\n * @param props The DayPicker props, including navigation and date constraints.\n * @param dateLib The date library to use for date manipulation.\n * @returns The initial month to display.\n */\nexport function getInitialMonth(props, navStart, navEnd, dateLib) {\n    const { month, defaultMonth, today = dateLib.today(), numberOfMonths = 1, } = props;\n    let initialMonth = month || defaultMonth || today;\n    const { differenceInCalendarMonths, addMonths, startOfMonth } = dateLib;\n    if (navEnd &&\n        differenceInCalendarMonths(navEnd, initialMonth) < numberOfMonths - 1) {\n        const offset = -1 * (numberOfMonths - 1);\n        initialMonth = addMonths(navEnd, offset);\n    }\n    if (navStart && differenceInCalendarMonths(initialMonth, navStart) < 0) {\n        initialMonth = navStart;\n    }\n    return startOfMonth(initialMonth);\n}\n","import { CalendarDay, CalendarMonth, CalendarWeek } from \"../classes/index.js\";\n/**\n * Returns the months to display in the calendar.\n *\n * This function generates `CalendarMonth` objects for each month to be\n * displayed, including their weeks and days, based on the provided display\n * months and dates.\n *\n * @param displayMonths The months (as dates) to display in the calendar.\n * @param dates The dates to display in the calendar.\n * @param props Options from the DayPicker props context.\n * @param dateLib The date library to use for date manipulation.\n * @returns An array of `CalendarMonth` objects representing the months to\n *   display.\n */\nexport function getMonths(displayMonths, dates, props, dateLib) {\n    const { addDays, endOfBroadcastWeek, endOfISOWeek, endOfMonth, endOfWeek, getISOWeek, getWeek, startOfBroadcastWeek, startOfISOWeek, startOfWeek, } = dateLib;\n    const dayPickerMonths = displayMonths.reduce((months, month) => {\n        const firstDateOfFirstWeek = props.broadcastCalendar\n            ? startOfBroadcastWeek(month, dateLib)\n            : props.ISOWeek\n                ? startOfISOWeek(month)\n                : startOfWeek(month);\n        const lastDateOfLastWeek = props.broadcastCalendar\n            ? endOfBroadcastWeek(month)\n            : props.ISOWeek\n                ? endOfISOWeek(endOfMonth(month))\n                : endOfWeek(endOfMonth(month));\n        /** The dates to display in the month. */\n        const monthDates = dates.filter((date) => {\n            return date >= firstDateOfFirstWeek && date <= lastDateOfLastWeek;\n        });\n        const nrOfDaysWithFixedWeeks = props.broadcastCalendar ? 35 : 42;\n        if (props.fixedWeeks && monthDates.length < nrOfDaysWithFixedWeeks) {\n            const extraDates = dates.filter((date) => {\n                const daysToAdd = nrOfDaysWithFixedWeeks - monthDates.length;\n                return (date > lastDateOfLastWeek &&\n                    date <= addDays(lastDateOfLastWeek, daysToAdd));\n            });\n            monthDates.push(...extraDates);\n        }\n        const weeks = monthDates.reduce((weeks, date) => {\n            const weekNumber = props.ISOWeek ? getISOWeek(date) : getWeek(date);\n            const week = weeks.find((week) => week.weekNumber === weekNumber);\n            const day = new CalendarDay(date, month, dateLib);\n            if (!week) {\n                weeks.push(new CalendarWeek(weekNumber, [day]));\n            }\n            else {\n                week.days.push(day);\n            }\n            return weeks;\n        }, []);\n        const dayPickerMonth = new CalendarMonth(month, weeks);\n        months.push(dayPickerMonth);\n        return months;\n    }, []);\n    if (!props.reverseMonths) {\n        return dayPickerMonths;\n    }\n    else {\n        return dayPickerMonths.reverse();\n    }\n}\n","/**\n * Returns the start and end months for calendar navigation.\n *\n * @param props The DayPicker props, including navigation and layout options.\n * @param dateLib The date library to use for date manipulation.\n * @returns A tuple containing the start and end months for navigation.\n */\nexport function getNavMonths(props, dateLib) {\n    let { startMonth, endMonth } = props;\n    const { startOfYear, startOfDay, startOfMonth, endOfMonth, addYears, endOfYear, newDate, today, } = dateLib;\n    // Handle deprecated code\n    const { fromYear, toYear, fromMonth, toMonth } = props;\n    if (!startMonth && fromMonth) {\n        startMonth = fromMonth;\n    }\n    if (!startMonth && fromYear) {\n        startMonth = dateLib.newDate(fromYear, 0, 1);\n    }\n    if (!endMonth && toMonth) {\n        endMonth = toMonth;\n    }\n    if (!endMonth && toYear) {\n        endMonth = newDate(toYear, 11, 31);\n    }\n    const hasYearDropdown = props.captionLayout === \"dropdown\" ||\n        props.captionLayout === \"dropdown-years\";\n    if (startMonth) {\n        startMonth = startOfMonth(startMonth);\n    }\n    else if (fromYear) {\n        startMonth = newDate(fromYear, 0, 1);\n    }\n    else if (!startMonth && hasYearDropdown) {\n        startMonth = startOfYear(addYears(props.today ?? today(), -100));\n    }\n    if (endMonth) {\n        endMonth = endOfMonth(endMonth);\n    }\n    else if (toYear) {\n        endMonth = newDate(toYear, 11, 31);\n    }\n    else if (!endMonth && hasYearDropdown) {\n        endMonth = endOfYear(props.today ?? today());\n    }\n    return [\n        startMonth ? startOfDay(startMonth) : startMonth,\n        endMonth ? startOfDay(endMonth) : endMonth,\n    ];\n}\n","/**\n * Returns the next month the user can navigate to, based on the given options.\n *\n * The next month is not always the next calendar month:\n *\n * - If it is after the `calendarEndMonth`, it returns `undefined`.\n * - If paged navigation is enabled, it skips forward by the number of displayed\n *   months.\n *\n * @param firstDisplayedMonth The first month currently displayed in the\n *   calendar.\n * @param calendarEndMonth The latest month the user can navigate to.\n * @param options Navigation options, including `numberOfMonths` and\n *   `pagedNavigation`.\n * @param dateLib The date library to use for date manipulation.\n * @returns The next month, or `undefined` if navigation is not possible.\n */\nexport function getNextMonth(firstDisplayedMonth, calendarEndMonth, options, dateLib) {\n    if (options.disableNavigation) {\n        return undefined;\n    }\n    const { pagedNavigation, numberOfMonths = 1 } = options;\n    const { startOfMonth, addMonths, differenceInCalendarMonths } = dateLib;\n    const offset = pagedNavigation ? numberOfMonths : 1;\n    const month = startOfMonth(firstDisplayedMonth);\n    if (!calendarEndMonth) {\n        return addMonths(month, offset);\n    }\n    const monthsDiff = differenceInCalendarMonths(calendarEndMonth, firstDisplayedMonth);\n    if (monthsDiff < numberOfMonths) {\n        return undefined;\n    }\n    return addMonths(month, offset);\n}\n","/**\n * Returns the previous month the user can navigate to, based on the given\n * options.\n *\n * The previous month is not always the previous calendar month:\n *\n * - If it is before the `calendarStartMonth`, it returns `undefined`.\n * - If paged navigation is enabled, it skips back by the number of displayed\n *   months.\n *\n * @param firstDisplayedMonth The first month currently displayed in the\n *   calendar.\n * @param calendarStartMonth The earliest month the user can navigate to.\n * @param options Navigation options, including `numberOfMonths` and\n *   `pagedNavigation`.\n * @param dateLib The date library to use for date manipulation.\n * @returns The previous month, or `undefined` if navigation is not possible.\n */\nexport function getPreviousMonth(firstDisplayedMonth, calendarStartMonth, options, dateLib) {\n    if (options.disableNavigation) {\n        return undefined;\n    }\n    const { pagedNavigation, numberOfMonths } = options;\n    const { startOfMonth, addMonths, differenceInCalendarMonths } = dateLib;\n    const offset = pagedNavigation ? (numberOfMonths ?? 1) : 1;\n    const month = startOfMonth(firstDisplayedMonth);\n    if (!calendarStartMonth) {\n        return addMonths(month, -offset);\n    }\n    const monthsDiff = differenceInCalendarMonths(month, calendarStartMonth);\n    if (monthsDiff <= 0) {\n        return undefined;\n    }\n    return addMonths(month, -offset);\n}\n","/**\n * Returns an array of calendar weeks from an array of calendar months.\n *\n * @param months The array of calendar months.\n * @returns An array of calendar weeks.\n */\nexport function getWeeks(months) {\n    const initialWeeks = [];\n    return months.reduce((weeks, month) => {\n        return weeks.concat(month.weeks.slice());\n    }, initialWeeks.slice());\n}\n","import { useState } from \"react\";\n/**\n * A custom hook for managing both controlled and uncontrolled component states.\n *\n * This hook allows a component to support both controlled and uncontrolled\n * states by determining whether the `controlledValue` is provided. If it is\n * undefined, the hook falls back to using the internal state.\n *\n * @example\n *   // Uncontrolled usage\n *   const [value, setValue] = useControlledValue(0, undefined);\n *\n *   // Controlled usage\n *   const [value, setValue] = useControlledValue(0, props.value);\n *\n * @template T - The type of the value.\n * @param defaultValue The initial value for the uncontrolled state.\n * @param controlledValue The value for the controlled state. If undefined, the\n *   component will use the uncontrolled state.\n * @returns A tuple where the first element is the current value (either\n *   controlled or uncontrolled) and the second element is a setter function to\n *   update the value.\n */\nexport function useControlledValue(defaultValue, controlledValue) {\n    const [uncontrolledValue, setValue] = useState(defaultValue);\n    const value = controlledValue === undefined ? uncontrolledValue : controlledValue;\n    return [value, setValue];\n}\n","import { useEffect } from \"react\";\nimport { getDates } from \"./helpers/getDates.js\";\nimport { getDays } from \"./helpers/getDays.js\";\nimport { getDisplayMonths } from \"./helpers/getDisplayMonths.js\";\nimport { getInitialMonth } from \"./helpers/getInitialMonth.js\";\nimport { getMonths } from \"./helpers/getMonths.js\";\nimport { getNavMonths } from \"./helpers/getNavMonth.js\";\nimport { getNextMonth } from \"./helpers/getNextMonth.js\";\nimport { getPreviousMonth } from \"./helpers/getPreviousMonth.js\";\nimport { getWeeks } from \"./helpers/getWeeks.js\";\nimport { useControlledValue } from \"./helpers/useControlledValue.js\";\n/**\n * Provides the calendar object to work with the calendar in custom components.\n *\n * @private\n * @param props - The DayPicker props related to calendar configuration.\n * @param dateLib - The date utility library instance.\n * @returns The calendar object containing displayed days, weeks, months, and\n *   navigation methods.\n */\nexport function useCalendar(props, dateLib) {\n    const [navStart, navEnd] = getNavMonths(props, dateLib);\n    const { startOfMonth, endOfMonth } = dateLib;\n    const initialMonth = getInitialMonth(props, navStart, navEnd, dateLib);\n    const [firstMonth, setFirstMonth] = useControlledValue(initialMonth, \n    // initialMonth is always computed from props.month if provided\n    props.month ? initialMonth : undefined);\n    // biome-ignore lint/correctness/useExhaustiveDependencies: change the initial month when the time zone changes.\n    useEffect(() => {\n        const newInitialMonth = getInitialMonth(props, navStart, navEnd, dateLib);\n        setFirstMonth(newInitialMonth);\n    }, [props.timeZone]);\n    /** The months displayed in the calendar. */\n    const displayMonths = getDisplayMonths(firstMonth, navEnd, props, dateLib);\n    /** The dates displayed in the calendar. */\n    const dates = getDates(displayMonths, props.endMonth ? endOfMonth(props.endMonth) : undefined, props, dateLib);\n    /** The Months displayed in the calendar. */\n    const months = getMonths(displayMonths, dates, props, dateLib);\n    /** The Weeks displayed in the calendar. */\n    const weeks = getWeeks(months);\n    /** The Days displayed in the calendar. */\n    const days = getDays(months);\n    const previousMonth = getPreviousMonth(firstMonth, navStart, props, dateLib);\n    const nextMonth = getNextMonth(firstMonth, navEnd, props, dateLib);\n    const { disableNavigation, onMonthChange } = props;\n    const isDayInCalendar = (day) => weeks.some((week) => week.days.some((d) => d.isEqualTo(day)));\n    const goToMonth = (date) => {\n        if (disableNavigation) {\n            return;\n        }\n        let newMonth = startOfMonth(date);\n        // if month is before start, use the first month instead\n        if (navStart && newMonth < startOfMonth(navStart)) {\n            newMonth = startOfMonth(navStart);\n        }\n        // if month is after endMonth, use the last month instead\n        if (navEnd && newMonth > startOfMonth(navEnd)) {\n            newMonth = startOfMonth(navEnd);\n        }\n        setFirstMonth(newMonth);\n        onMonthChange?.(newMonth);\n    };\n    const goToDay = (day) => {\n        // is this check necessary?\n        if (isDayInCalendar(day)) {\n            return;\n        }\n        goToMonth(day.date);\n    };\n    const calendar = {\n        months,\n        weeks,\n        days,\n        navStart,\n        navEnd,\n        previousMonth,\n        nextMonth,\n        goToMonth,\n        goToDay,\n    };\n    return calendar;\n}\n","import { DayFlag } from \"../UI.js\";\nvar FocusTargetPriority;\n(function (FocusTargetPriority) {\n    FocusTargetPriority[FocusTargetPriority[\"Today\"] = 0] = \"Today\";\n    FocusTargetPriority[FocusTargetPriority[\"Selected\"] = 1] = \"Selected\";\n    FocusTargetPriority[FocusTargetPriority[\"LastFocused\"] = 2] = \"LastFocused\";\n    FocusTargetPriority[FocusTargetPriority[\"FocusedModifier\"] = 3] = \"FocusedModifier\";\n})(FocusTargetPriority || (FocusTargetPriority = {}));\n/**\n * Determines if a day is focusable based on its modifiers.\n *\n * A day is considered focusable if it is not disabled, hidden, or outside the\n * displayed month.\n *\n * @param modifiers The modifiers applied to the day.\n * @returns `true` if the day is focusable, otherwise `false`.\n */\nfunction isFocusableDay(modifiers) {\n    return (!modifiers[DayFlag.disabled] &&\n        !modifiers[DayFlag.hidden] &&\n        !modifiers[DayFlag.outside]);\n}\n/**\n * Calculates the focus target day based on priority.\n *\n * This function determines the day that should receive focus in the calendar,\n * prioritizing days with specific modifiers (e.g., \"focused\", \"today\") or\n * selection states.\n *\n * @param days The array of `CalendarDay` objects to evaluate.\n * @param getModifiers A function to retrieve the modifiers for a given day.\n * @param isSelected A function to determine if a day is selected.\n * @param lastFocused The last focused day, if any.\n * @returns The `CalendarDay` that should receive focus, or `undefined` if no\n *   focusable day is found.\n */\nexport function calculateFocusTarget(days, getModifiers, isSelected, lastFocused) {\n    let focusTarget;\n    let foundFocusTargetPriority = -1;\n    for (const day of days) {\n        const modifiers = getModifiers(day);\n        if (isFocusableDay(modifiers)) {\n            if (modifiers[DayFlag.focused] &&\n                foundFocusTargetPriority < FocusTargetPriority.FocusedModifier) {\n                focusTarget = day;\n                foundFocusTargetPriority = FocusTargetPriority.FocusedModifier;\n            }\n            else if (lastFocused?.isEqualTo(day) &&\n                foundFocusTargetPriority < FocusTargetPriority.LastFocused) {\n                focusTarget = day;\n                foundFocusTargetPriority = FocusTargetPriority.LastFocused;\n            }\n            else if (isSelected(day.date) &&\n                foundFocusTargetPriority < FocusTargetPriority.Selected) {\n                focusTarget = day;\n                foundFocusTargetPriority = FocusTargetPriority.Selected;\n            }\n            else if (modifiers[DayFlag.today] &&\n                foundFocusTargetPriority < FocusTargetPriority.Today) {\n                focusTarget = day;\n                foundFocusTargetPriority = FocusTargetPriority.Today;\n            }\n        }\n    }\n    if (!focusTarget) {\n        // Return the first day that is focusable\n        focusTarget = days.find((day) => isFocusableDay(getModifiers(day)));\n    }\n    return focusTarget;\n}\n","/**\n * Calculates the next date that should be focused in the calendar.\n *\n * This function determines the next focusable date based on the movement\n * direction, constraints, and calendar configuration.\n *\n * @param moveBy The unit of movement (e.g., \"day\", \"week\").\n * @param moveDir The direction of movement (\"before\" or \"after\").\n * @param refDate The reference date from which to calculate the next focusable\n *   date.\n * @param navStart The earliest date the user can navigate to.\n * @param navEnd The latest date the user can navigate to.\n * @param props The DayPicker props, including calendar configuration options.\n * @param dateLib The date library to use for date manipulation.\n * @returns The next focusable date.\n */\nexport function getFocusableDate(moveBy, moveDir, refDate, navStart, navEnd, props, dateLib) {\n    const { ISOWeek, broadcastCalendar } = props;\n    const { addDays, addMonths, addWeeks, addYears, endOfBroadcastWeek, endOfISOWeek, endOfWeek, max, min, startOfBroadcastWeek, startOfISOWeek, startOfWeek, } = dateLib;\n    const moveFns = {\n        day: addDays,\n        week: addWeeks,\n        month: addMonths,\n        year: addYears,\n        startOfWeek: (date) => broadcastCalendar\n            ? startOfBroadcastWeek(date, dateLib)\n            : ISOWeek\n                ? startOfISOWeek(date)\n                : startOfWeek(date),\n        endOfWeek: (date) => broadcastCalendar\n            ? endOfBroadcastWeek(date)\n            : ISOWeek\n                ? endOfISOWeek(date)\n                : endOfWeek(date),\n    };\n    let focusableDate = moveFns[moveBy](refDate, moveDir === \"after\" ? 1 : -1);\n    if (moveDir === \"before\" && navStart) {\n        focusableDate = max([navStart, focusableDate]);\n    }\n    else if (moveDir === \"after\" && navEnd) {\n        focusableDate = min([navEnd, focusableDate]);\n    }\n    return focusableDate;\n}\n","import { CalendarDay } from \"../classes/index.js\";\nimport { dateMatchModifiers } from \"../utils/dateMatchModifiers.js\";\nimport { getFocusableDate } from \"./getFocusableDate.js\";\n/**\n * Determines the next focusable day in the calendar.\n *\n * This function recursively calculates the next focusable day based on the\n * movement direction and modifiers applied to the days.\n *\n * @param moveBy The unit of movement (e.g., \"day\", \"week\").\n * @param moveDir The direction of movement (\"before\" or \"after\").\n * @param refDay The currently focused day.\n * @param calendarStartMonth The earliest month the user can navigate to.\n * @param calendarEndMonth The latest month the user can navigate to.\n * @param props The DayPicker props, including modifiers and configuration\n *   options.\n * @param dateLib The date library to use for date manipulation.\n * @param attempt The current recursion attempt (used to limit recursion depth).\n * @returns The next focusable day, or `undefined` if no focusable day is found.\n */\nexport function getNextFocus(moveBy, moveDir, refDay, calendarStartMonth, calendarEndMonth, props, dateLib, attempt = 0) {\n    if (attempt > 365) {\n        // Limit the recursion to 365 attempts\n        return undefined;\n    }\n    const focusableDate = getFocusableDate(moveBy, moveDir, refDay.date, calendarStartMonth, calendarEndMonth, props, dateLib);\n    const isDisabled = Boolean(props.disabled &&\n        dateMatchModifiers(focusableDate, props.disabled, dateLib));\n    const isHidden = Boolean(props.hidden && dateMatchModifiers(focusableDate, props.hidden, dateLib));\n    const targetMonth = focusableDate;\n    const focusDay = new CalendarDay(focusableDate, targetMonth, dateLib);\n    if (!isDisabled && !isHidden) {\n        return focusDay;\n    }\n    // Recursively attempt to find the next focusable date\n    return getNextFocus(moveBy, moveDir, focusDay, calendarStartMonth, calendarEndMonth, props, dateLib, attempt + 1);\n}\n","import { useState } from \"react\";\nimport { calculateFocusTarget } from \"./helpers/calculateFocusTarget.js\";\nimport { getNextFocus } from \"./helpers/getNextFocus.js\";\n/**\n * Manages focus behavior for the DayPicker component, including setting,\n * moving, and blurring focus on calendar days.\n *\n * @template T - The type of DayPicker props.\n * @param props - The DayPicker props.\n * @param calendar - The calendar object containing the displayed days and\n *   months.\n * @param getModifiers - A function to retrieve modifiers for a given day.\n * @param isSelected - A function to check if a date is selected.\n * @param dateLib - The date utility library instance.\n * @returns An object containing focus-related methods and the currently focused\n *   day.\n */\nexport function useFocus(props, calendar, getModifiers, isSelected, dateLib) {\n    const { autoFocus } = props;\n    const [lastFocused, setLastFocused] = useState();\n    const focusTarget = calculateFocusTarget(calendar.days, getModifiers, isSelected || (() => false), lastFocused);\n    const [focusedDay, setFocused] = useState(autoFocus ? focusTarget : undefined);\n    const blur = () => {\n        setLastFocused(focusedDay);\n        setFocused(undefined);\n    };\n    const moveFocus = (moveBy, moveDir) => {\n        if (!focusedDay)\n            return;\n        const nextFocus = getNextFocus(moveBy, moveDir, focusedDay, calendar.navStart, calendar.navEnd, props, dateLib);\n        if (!nextFocus)\n            return;\n        calendar.goToDay(nextFocus);\n        setFocused(nextFocus);\n    };\n    const isFocusTarget = (day) => {\n        return Boolean(focusTarget?.isEqualTo(day));\n    };\n    const useFocus = {\n        isFocusTarget,\n        setFocused,\n        focused: focusedDay,\n        blur,\n        moveFocus,\n    };\n    return useFocus;\n}\n","import { useControlledValue } from \"../helpers/useControlledValue.js\";\n/**\n * Hook to manage multiple-date selection in the DayPicker component.\n *\n * @template T - The type of DayPicker props.\n * @param props - The DayPicker props.\n * @param dateLib - The date utility library instance.\n * @returns An object containing the selected dates, a function to select dates,\n *   and a function to check if a date is selected.\n */\nexport function useMulti(props, dateLib) {\n    const { selected: initiallySelected, required, onSelect, } = props;\n    const [internallySelected, setSelected] = useControlledValue(initiallySelected, onSelect ? initiallySelected : undefined);\n    const selected = !onSelect ? internallySelected : initiallySelected;\n    const { isSameDay } = dateLib;\n    const isSelected = (date) => {\n        return selected?.some((d) => isSameDay(d, date)) ?? false;\n    };\n    const { min, max } = props;\n    const select = (triggerDate, modifiers, e) => {\n        let newDates = [...(selected ?? [])];\n        if (isSelected(triggerDate)) {\n            if (selected?.length === min) {\n                // Min value reached, do nothing\n                return;\n            }\n            if (required && selected?.length === 1) {\n                // Required value already selected do nothing\n                return;\n            }\n            newDates = selected?.filter((d) => !isSameDay(d, triggerDate));\n        }\n        else {\n            if (selected?.length === max) {\n                // Max value reached, reset the selection to date\n                newDates = [triggerDate];\n            }\n            else {\n                // Add the date to the selection\n                newDates = [...newDates, triggerDate];\n            }\n        }\n        if (!onSelect) {\n            setSelected(newDates);\n        }\n        onSelect?.(newDates, triggerDate, modifiers, e);\n        return newDates;\n    };\n    return {\n        selected,\n        select,\n        isSelected,\n    };\n}\n","import { defaultDateLib } from \"../classes/DateLib.js\";\n/**\n * Adds a date to an existing range, considering constraints like minimum and\n * maximum range size.\n *\n * @param date - The date to add to the range.\n * @param initialRange - The initial range to which the date will be added.\n * @param min - The minimum number of days in the range.\n * @param max - The maximum number of days in the range.\n * @param required - Whether the range must always include at least one date.\n * @param dateLib - The date utility library instance.\n * @returns The updated date range, or `undefined` if the range is cleared.\n * @group Utilities\n */\nexport function addToRange(date, initialRange, min = 0, max = 0, required = false, dateLib = defaultDateLib) {\n    const { from, to } = initialRange || {};\n    const { isSameDay, isAfter, isBefore } = dateLib;\n    let range;\n    if (!from && !to) {\n        // the range is empty, add the date\n        range = { from: date, to: min > 0 ? undefined : date };\n    }\n    else if (from && !to) {\n        // adding date to an incomplete range\n        if (isSameDay(from, date)) {\n            // adding a date equal to the start of the range\n            if (min === 0) {\n                range = { from, to: date };\n            }\n            else if (required) {\n                range = { from, to: undefined };\n            }\n            else {\n                range = undefined;\n            }\n        }\n        else if (isBefore(date, from)) {\n            // adding a date before the start of the range\n            range = { from: date, to: from };\n        }\n        else {\n            // adding a date after the start of the range\n            range = { from, to: date };\n        }\n    }\n    else if (from && to) {\n        // adding date to a complete range\n        if (isSameDay(from, date) && isSameDay(to, date)) {\n            // adding a date that is equal to both start and end of the range\n            if (required) {\n                range = { from, to };\n            }\n            else {\n                range = undefined;\n            }\n        }\n        else if (isSameDay(from, date)) {\n            // adding a date equal to the the start of the range\n            range = { from, to: min > 0 ? undefined : date };\n        }\n        else if (isSameDay(to, date)) {\n            // adding a dare equal to the end of the range\n            range = { from: date, to: min > 0 ? undefined : date };\n        }\n        else if (isBefore(date, from)) {\n            // adding a date before the start of the range\n            range = { from: date, to: to };\n        }\n        else if (isAfter(date, from)) {\n            // adding a date after the start of the range\n            range = { from, to: date };\n        }\n        else if (isAfter(date, to)) {\n            // adding a date after the end of the range\n            range = { from, to: date };\n        }\n        else {\n            throw new Error(\"Invalid range\");\n        }\n    }\n    // check for min / max\n    if (range?.from && range?.to) {\n        const diff = dateLib.differenceInCalendarDays(range.to, range.from);\n        if (max > 0 && diff > max) {\n            range = { from: date, to: undefined };\n        }\n        else if (min > 1 && diff < min) {\n            range = { from: date, to: undefined };\n        }\n    }\n    return range;\n}\n","import { defaultDateLib } from \"../classes/DateLib.js\";\n/**\n * Checks if a date range contains one or more specified days of the week.\n *\n * @since 9.2.2\n * @param range - The date range to check.\n * @param dayOfWeek - The day(s) of the week to check for (`0-6`, where `0` is\n *   Sunday).\n * @param dateLib - The date utility library instance.\n * @returns `true` if the range contains the specified day(s) of the week,\n *   otherwise `false`.\n * @group Utilities\n */\nexport function rangeContainsDayOfWeek(range, dayOfWeek, dateLib = defaultDateLib) {\n    const dayOfWeekArr = !Array.isArray(dayOfWeek) ? [dayOfWeek] : dayOfWeek;\n    let date = range.from;\n    const totalDays = dateLib.differenceInCalendarDays(range.to, range.from);\n    // iterate at maximum one week or the total days if the range is shorter than one week\n    const totalDaysLimit = Math.min(totalDays, 6);\n    for (let i = 0; i <= totalDaysLimit; i++) {\n        if (dayOfWeekArr.includes(date.getDay())) {\n            return true;\n        }\n        date = dateLib.addDays(date, 1);\n    }\n    return false;\n}\n","import { defaultDateLib } from \"../classes/index.js\";\nimport { rangeIncludesDate } from \"./rangeIncludesDate.js\";\n/**\n * Determines if two date ranges overlap.\n *\n * @since 9.2.2\n * @param rangeLeft - The first date range.\n * @param rangeRight - The second date range.\n * @param dateLib - The date utility library instance.\n * @returns `true` if the ranges overlap, otherwise `false`.\n * @group Utilities\n */\nexport function rangeOverlaps(rangeLeft, rangeRight, dateLib = defaultDateLib) {\n    return (rangeIncludesDate(rangeLeft, rangeRight.from, false, dateLib) ||\n        rangeIncludesDate(rangeLeft, rangeRight.to, false, dateLib) ||\n        rangeIncludesDate(rangeRight, rangeLeft.from, false, dateLib) ||\n        rangeIncludesDate(rangeRight, rangeLeft.to, false, dateLib));\n}\n","import { defaultDateLib } from \"../classes/DateLib.js\";\nimport { dateMatchModifiers } from \"./dateMatchModifiers.js\";\nimport { rangeContainsDayOfWeek } from \"./rangeContainsDayOfWeek.js\";\nimport { rangeIncludesDate } from \"./rangeIncludesDate.js\";\nimport { rangeOverlaps } from \"./rangeOverlaps.js\";\nimport { isDateAfterType, isDateBeforeType, isDateInterval, isDateRange, isDatesArray, isDayOfWeekType, } from \"./typeguards.js\";\n/**\n * Checks if a date range contains dates that match the given modifiers.\n *\n * @since 9.2.2\n * @param range - The date range to check.\n * @param modifiers - The modifiers to match against.\n * @param dateLib - The date utility library instance.\n * @returns `true` if the range contains matching dates, otherwise `false`.\n * @group Utilities\n */\nexport function rangeContainsModifiers(range, modifiers, dateLib = defaultDateLib) {\n    const matchers = Array.isArray(modifiers) ? modifiers : [modifiers];\n    // Defer function matchers evaluation as they are the least performant.\n    const nonFunctionMatchers = matchers.filter((matcher) => typeof matcher !== \"function\");\n    const nonFunctionMatchersResult = nonFunctionMatchers.some((matcher) => {\n        if (typeof matcher === \"boolean\")\n            return matcher;\n        if (dateLib.isDate(matcher)) {\n            return rangeIncludesDate(range, matcher, false, dateLib);\n        }\n        if (isDatesArray(matcher, dateLib)) {\n            return matcher.some((date) => rangeIncludesDate(range, date, false, dateLib));\n        }\n        if (isDateRange(matcher)) {\n            if (matcher.from && matcher.to) {\n                return rangeOverlaps(range, { from: matcher.from, to: matcher.to }, dateLib);\n            }\n            return false;\n        }\n        if (isDayOfWeekType(matcher)) {\n            return rangeContainsDayOfWeek(range, matcher.dayOfWeek, dateLib);\n        }\n        if (isDateInterval(matcher)) {\n            const isClosedInterval = dateLib.isAfter(matcher.before, matcher.after);\n            if (isClosedInterval) {\n                return rangeOverlaps(range, {\n                    from: dateLib.addDays(matcher.after, 1),\n                    to: dateLib.addDays(matcher.before, -1),\n                }, dateLib);\n            }\n            return (dateMatchModifiers(range.from, matcher, dateLib) ||\n                dateMatchModifiers(range.to, matcher, dateLib));\n        }\n        if (isDateAfterType(matcher) || isDateBeforeType(matcher)) {\n            return (dateMatchModifiers(range.from, matcher, dateLib) ||\n                dateMatchModifiers(range.to, matcher, dateLib));\n        }\n        return false;\n    });\n    if (nonFunctionMatchersResult) {\n        return true;\n    }\n    const functionMatchers = matchers.filter((matcher) => typeof matcher === \"function\");\n    if (functionMatchers.length) {\n        let date = range.from;\n        const totalDays = dateLib.differenceInCalendarDays(range.to, range.from);\n        for (let i = 0; i <= totalDays; i++) {\n            if (functionMatchers.some((matcher) => matcher(date))) {\n                return true;\n            }\n            date = dateLib.addDays(date, 1);\n        }\n    }\n    return false;\n}\n","import { useControlledValue } from \"../helpers/useControlledValue.js\";\nimport { addToRange, rangeContainsModifiers } from \"../utils/index.js\";\nimport { rangeIncludesDate } from \"../utils/rangeIncludesDate.js\";\n/**\n * Hook to manage range selection in the DayPicker component.\n *\n * @template T - The type of DayPicker props.\n * @param props - The DayPicker props.\n * @param dateLib - The date utility library instance.\n * @returns An object containing the selected range, a function to select a\n *   range, and a function to check if a date is within the range.\n */\nexport function useRange(props, dateLib) {\n    const { disabled, excludeDisabled, selected: initiallySelected, required, onSelect, } = props;\n    const [internallySelected, setSelected] = useControlledValue(initiallySelected, onSelect ? initiallySelected : undefined);\n    const selected = !onSelect ? internallySelected : initiallySelected;\n    const isSelected = (date) => selected && rangeIncludesDate(selected, date, false, dateLib);\n    const select = (triggerDate, modifiers, e) => {\n        const { min, max } = props;\n        const newRange = triggerDate\n            ? addToRange(triggerDate, selected, min, max, required, dateLib)\n            : undefined;\n        if (excludeDisabled && disabled && newRange?.from && newRange.to) {\n            if (rangeContainsModifiers({ from: newRange.from, to: newRange.to }, disabled, dateLib)) {\n                // if a disabled days is found, the range is reset\n                newRange.from = triggerDate;\n                newRange.to = undefined;\n            }\n        }\n        if (!onSelect) {\n            setSelected(newRange);\n        }\n        onSelect?.(newRange, triggerDate, modifiers, e);\n        return newRange;\n    };\n    return {\n        selected,\n        select,\n        isSelected,\n    };\n}\n","import { useControlledValue } from \"../helpers/useControlledValue.js\";\n/**\n * Hook to manage single-date selection in the DayPicker component.\n *\n * @template T - The type of DayPicker props.\n * @param props - The DayPicker props.\n * @param dateLib - The date utility library instance.\n * @returns An object containing the selected date, a function to select a date,\n *   and a function to check if a date is selected.\n */\nexport function useSingle(props, dateLib) {\n    const { selected: initiallySelected, required, onSelect, } = props;\n    const [internallySelected, setSelected] = useControlledValue(initiallySelected, onSelect ? initiallySelected : undefined);\n    const selected = !onSelect ? internallySelected : initiallySelected;\n    const { isSameDay } = dateLib;\n    const isSelected = (compareDate) => {\n        return selected ? isSameDay(selected, compareDate) : false;\n    };\n    const select = (triggerDate, modifiers, e) => {\n        let newDate = triggerDate;\n        if (!required && selected && selected && isSameDay(triggerDate, selected)) {\n            // If the date is the same, clear the selection.\n            newDate = undefined;\n        }\n        if (!onSelect) {\n            setSelected(newDate);\n        }\n        if (required) {\n            onSelect?.(newDate, triggerDate, modifiers, e);\n        }\n        else {\n            onSelect?.(newDate, triggerDate, modifiers, e);\n        }\n        return newDate;\n    };\n    return {\n        selected,\n        select,\n        isSelected,\n    };\n}\n","import { useMulti } from \"./selection/useMulti.js\";\nimport { useRange } from \"./selection/useRange.js\";\nimport { useSingle } from \"./selection/useSingle.js\";\n/**\n * Determines the appropriate selection hook to use based on the selection mode\n * and returns the corresponding selection object.\n *\n * @template T - The type of DayPicker props.\n * @param props - The DayPicker props.\n * @param dateLib - The date utility library instance.\n * @returns The selection object for the specified mode, or `undefined` if no\n *   mode is set.\n */\nexport function useSelection(props, dateLib) {\n    const single = useSingle(props, dateLib);\n    const multi = useMulti(props, dateLib);\n    const range = useRange(props, dateLib);\n    switch (props.mode) {\n        case \"single\":\n            return single;\n        case \"multiple\":\n            return multi;\n        case \"range\":\n            return range;\n        default:\n            return undefined;\n    }\n}\n","import { TZDate } from \"@date-fns/tz\";\nimport React, { useCallback, useMemo, useRef } from \"react\";\nimport { DateLib, defaultLocale } from \"./classes/DateLib.js\";\nimport { createGetModifiers } from \"./helpers/createGetModifiers.js\";\nimport { getClassNamesForModifiers } from \"./helpers/getClassNamesForModifiers.js\";\nimport { getComponents } from \"./helpers/getComponents.js\";\nimport { getDataAttributes } from \"./helpers/getDataAttributes.js\";\nimport { getDefaultClassNames } from \"./helpers/getDefaultClassNames.js\";\nimport { getFormatters } from \"./helpers/getFormatters.js\";\nimport { getMonthOptions } from \"./helpers/getMonthOptions.js\";\nimport { getStyleForModifiers } from \"./helpers/getStyleForModifiers.js\";\nimport { getWeekdays } from \"./helpers/getWeekdays.js\";\nimport { getYearOptions } from \"./helpers/getYearOptions.js\";\nimport * as defaultLabels from \"./labels/index.js\";\nimport { DayFlag, SelectionState, UI } from \"./UI.js\";\nimport { useAnimation } from \"./useAnimation.js\";\nimport { useCalendar } from \"./useCalendar.js\";\nimport { dayPickerContext } from \"./useDayPicker.js\";\nimport { useFocus } from \"./useFocus.js\";\nimport { useSelection } from \"./useSelection.js\";\nimport { rangeIncludesDate } from \"./utils/rangeIncludesDate.js\";\nimport { isDateRange } from \"./utils/typeguards.js\";\n/**\n * Renders the DayPicker calendar component.\n *\n * @param initialProps - The props for the DayPicker component.\n * @returns The rendered DayPicker component.\n * @group DayPicker\n * @see https://daypicker.dev\n */\nexport function DayPicker(initialProps) {\n    let props = initialProps;\n    if (props.timeZone) {\n        props = {\n            ...initialProps,\n        };\n        if (props.today) {\n            props.today = new TZDate(props.today, props.timeZone);\n        }\n        if (props.month) {\n            props.month = new TZDate(props.month, props.timeZone);\n        }\n        if (props.defaultMonth) {\n            props.defaultMonth = new TZDate(props.defaultMonth, props.timeZone);\n        }\n        if (props.startMonth) {\n            props.startMonth = new TZDate(props.startMonth, props.timeZone);\n        }\n        if (props.endMonth) {\n            props.endMonth = new TZDate(props.endMonth, props.timeZone);\n        }\n        if (props.mode === \"single\" && props.selected) {\n            props.selected = new TZDate(props.selected, props.timeZone);\n        }\n        else if (props.mode === \"multiple\" && props.selected) {\n            props.selected = props.selected?.map((date) => new TZDate(date, props.timeZone));\n        }\n        else if (props.mode === \"range\" && props.selected) {\n            props.selected = {\n                from: props.selected.from\n                    ? new TZDate(props.selected.from, props.timeZone)\n                    : undefined,\n                to: props.selected.to\n                    ? new TZDate(props.selected.to, props.timeZone)\n                    : undefined,\n            };\n        }\n    }\n    const { components, formatters, labels, dateLib, locale, classNames } = useMemo(() => {\n        const locale = { ...defaultLocale, ...props.locale };\n        const dateLib = new DateLib({\n            locale,\n            weekStartsOn: props.broadcastCalendar ? 1 : props.weekStartsOn,\n            firstWeekContainsDate: props.firstWeekContainsDate,\n            useAdditionalWeekYearTokens: props.useAdditionalWeekYearTokens,\n            useAdditionalDayOfYearTokens: props.useAdditionalDayOfYearTokens,\n            timeZone: props.timeZone,\n            numerals: props.numerals,\n        }, props.dateLib);\n        return {\n            dateLib,\n            components: getComponents(props.components),\n            formatters: getFormatters(props.formatters),\n            labels: { ...defaultLabels, ...props.labels },\n            locale,\n            classNames: { ...getDefaultClassNames(), ...props.classNames },\n        };\n    }, [\n        props.locale,\n        props.broadcastCalendar,\n        props.weekStartsOn,\n        props.firstWeekContainsDate,\n        props.useAdditionalWeekYearTokens,\n        props.useAdditionalDayOfYearTokens,\n        props.timeZone,\n        props.numerals,\n        props.dateLib,\n        props.components,\n        props.formatters,\n        props.labels,\n        props.classNames,\n    ]);\n    const { captionLayout, mode, navLayout, numberOfMonths = 1, onDayBlur, onDayClick, onDayFocus, onDayKeyDown, onDayMouseEnter, onDayMouseLeave, onNextClick, onPrevClick, showWeekNumber, styles, } = props;\n    const { formatCaption, formatDay, formatMonthDropdown, formatWeekNumber, formatWeekNumberHeader, formatWeekdayName, formatYearDropdown, } = formatters;\n    const calendar = useCalendar(props, dateLib);\n    const { days, months, navStart, navEnd, previousMonth, nextMonth, goToMonth, } = calendar;\n    const getModifiers = createGetModifiers(days, props, navStart, navEnd, dateLib);\n    const { isSelected, select, selected: selectedValue, } = useSelection(props, dateLib) ?? {};\n    const { blur, focused, isFocusTarget, moveFocus, setFocused } = useFocus(props, calendar, getModifiers, isSelected ?? (() => false), dateLib);\n    const { labelDayButton, labelGridcell, labelGrid, labelMonthDropdown, labelNav, labelPrevious, labelNext, labelWeekday, labelWeekNumber, labelWeekNumberHeader, labelYearDropdown, } = labels;\n    const weekdays = useMemo(() => getWeekdays(dateLib, props.ISOWeek), [dateLib, props.ISOWeek]);\n    const isInteractive = mode !== undefined || onDayClick !== undefined;\n    const handlePreviousClick = useCallback(() => {\n        if (!previousMonth)\n            return;\n        goToMonth(previousMonth);\n        onPrevClick?.(previousMonth);\n    }, [previousMonth, goToMonth, onPrevClick]);\n    const handleNextClick = useCallback(() => {\n        if (!nextMonth)\n            return;\n        goToMonth(nextMonth);\n        onNextClick?.(nextMonth);\n    }, [goToMonth, nextMonth, onNextClick]);\n    const handleDayClick = useCallback((day, m) => (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        setFocused(day);\n        select?.(day.date, m, e);\n        onDayClick?.(day.date, m, e);\n    }, [select, onDayClick, setFocused]);\n    const handleDayFocus = useCallback((day, m) => (e) => {\n        setFocused(day);\n        onDayFocus?.(day.date, m, e);\n    }, [onDayFocus, setFocused]);\n    const handleDayBlur = useCallback((day, m) => (e) => {\n        blur();\n        onDayBlur?.(day.date, m, e);\n    }, [blur, onDayBlur]);\n    const handleDayKeyDown = useCallback((day, modifiers) => (e) => {\n        const keyMap = {\n            ArrowLeft: [\n                e.shiftKey ? \"month\" : \"day\",\n                props.dir === \"rtl\" ? \"after\" : \"before\",\n            ],\n            ArrowRight: [\n                e.shiftKey ? \"month\" : \"day\",\n                props.dir === \"rtl\" ? \"before\" : \"after\",\n            ],\n            ArrowDown: [e.shiftKey ? \"year\" : \"week\", \"after\"],\n            ArrowUp: [e.shiftKey ? \"year\" : \"week\", \"before\"],\n            PageUp: [e.shiftKey ? \"year\" : \"month\", \"before\"],\n            PageDown: [e.shiftKey ? \"year\" : \"month\", \"after\"],\n            Home: [\"startOfWeek\", \"before\"],\n            End: [\"endOfWeek\", \"after\"],\n        };\n        if (keyMap[e.key]) {\n            e.preventDefault();\n            e.stopPropagation();\n            const [moveBy, moveDir] = keyMap[e.key];\n            moveFocus(moveBy, moveDir);\n        }\n        onDayKeyDown?.(day.date, modifiers, e);\n    }, [moveFocus, onDayKeyDown, props.dir]);\n    const handleDayMouseEnter = useCallback((day, modifiers) => (e) => {\n        onDayMouseEnter?.(day.date, modifiers, e);\n    }, [onDayMouseEnter]);\n    const handleDayMouseLeave = useCallback((day, modifiers) => (e) => {\n        onDayMouseLeave?.(day.date, modifiers, e);\n    }, [onDayMouseLeave]);\n    const handleMonthChange = useCallback((date) => (e) => {\n        const selectedMonth = Number(e.target.value);\n        const month = dateLib.setMonth(dateLib.startOfMonth(date), selectedMonth);\n        goToMonth(month);\n    }, [dateLib, goToMonth]);\n    const handleYearChange = useCallback((date) => (e) => {\n        const selectedYear = Number(e.target.value);\n        const month = dateLib.setYear(dateLib.startOfMonth(date), selectedYear);\n        goToMonth(month);\n    }, [dateLib, goToMonth]);\n    const { className, style } = useMemo(() => ({\n        className: [classNames[UI.Root], props.className]\n            .filter(Boolean)\n            .join(\" \"),\n        style: { ...styles?.[UI.Root], ...props.style },\n    }), [classNames, props.className, props.style, styles]);\n    const dataAttributes = getDataAttributes(props);\n    const rootElRef = useRef(null);\n    useAnimation(rootElRef, Boolean(props.animate), {\n        classNames,\n        months,\n        focused,\n        dateLib,\n    });\n    const contextValue = {\n        dayPickerProps: props,\n        selected: selectedValue,\n        select: select,\n        isSelected,\n        months,\n        nextMonth,\n        previousMonth,\n        goToMonth,\n        getModifiers,\n        components,\n        classNames,\n        styles,\n        labels,\n        formatters,\n    };\n    return (React.createElement(dayPickerContext.Provider, { value: contextValue },\n        React.createElement(components.Root, { rootRef: props.animate ? rootElRef : undefined, className: className, style: style, dir: props.dir, id: props.id, lang: props.lang, nonce: props.nonce, title: props.title, role: props.role, \"aria-label\": props[\"aria-label\"], \"aria-labelledby\": props[\"aria-labelledby\"], ...dataAttributes },\n            React.createElement(components.Months, { className: classNames[UI.Months], style: styles?.[UI.Months] },\n                !props.hideNavigation && !navLayout && (React.createElement(components.Nav, { \"data-animated-nav\": props.animate ? \"true\" : undefined, className: classNames[UI.Nav], style: styles?.[UI.Nav], \"aria-label\": labelNav(), onPreviousClick: handlePreviousClick, onNextClick: handleNextClick, previousMonth: previousMonth, nextMonth: nextMonth })),\n                months.map((calendarMonth, displayIndex) => {\n                    return (React.createElement(components.Month, { \"data-animated-month\": props.animate ? \"true\" : undefined, className: classNames[UI.Month], style: styles?.[UI.Month], \n                        // biome-ignore lint/suspicious/noArrayIndexKey: breaks animation\n                        key: displayIndex, displayIndex: displayIndex, calendarMonth: calendarMonth },\n                        navLayout === \"around\" &&\n                            !props.hideNavigation &&\n                            displayIndex === 0 && (React.createElement(components.PreviousMonthButton, { type: \"button\", className: classNames[UI.PreviousMonthButton], tabIndex: previousMonth ? undefined : -1, \"aria-disabled\": previousMonth ? undefined : true, \"aria-label\": labelPrevious(previousMonth), onClick: handlePreviousClick, \"data-animated-button\": props.animate ? \"true\" : undefined },\n                            React.createElement(components.Chevron, { disabled: previousMonth ? undefined : true, className: classNames[UI.Chevron], orientation: props.dir === \"rtl\" ? \"right\" : \"left\" }))),\n                        React.createElement(components.MonthCaption, { \"data-animated-caption\": props.animate ? \"true\" : undefined, className: classNames[UI.MonthCaption], style: styles?.[UI.MonthCaption], calendarMonth: calendarMonth, displayIndex: displayIndex }, captionLayout?.startsWith(\"dropdown\") ? (React.createElement(components.DropdownNav, { className: classNames[UI.Dropdowns], style: styles?.[UI.Dropdowns] },\n                            (() => {\n                                const monthControl = captionLayout === \"dropdown\" ||\n                                    captionLayout === \"dropdown-months\" ? (React.createElement(components.MonthsDropdown, { key: \"month\", className: classNames[UI.MonthsDropdown], \"aria-label\": labelMonthDropdown(), classNames: classNames, components: components, disabled: Boolean(props.disableNavigation), onChange: handleMonthChange(calendarMonth.date), options: getMonthOptions(calendarMonth.date, navStart, navEnd, formatters, dateLib), style: styles?.[UI.Dropdown], value: dateLib.getMonth(calendarMonth.date) })) : (React.createElement(\"span\", { key: \"month\" }, formatMonthDropdown(calendarMonth.date, dateLib)));\n                                const yearControl = captionLayout === \"dropdown\" ||\n                                    captionLayout === \"dropdown-years\" ? (React.createElement(components.YearsDropdown, { key: \"year\", className: classNames[UI.YearsDropdown], \"aria-label\": labelYearDropdown(dateLib.options), classNames: classNames, components: components, disabled: Boolean(props.disableNavigation), onChange: handleYearChange(calendarMonth.date), options: getYearOptions(navStart, navEnd, formatters, dateLib, Boolean(props.reverseYears)), style: styles?.[UI.Dropdown], value: dateLib.getYear(calendarMonth.date) })) : (React.createElement(\"span\", { key: \"year\" }, formatYearDropdown(calendarMonth.date, dateLib)));\n                                const controls = dateLib.getMonthYearOrder() === \"year-first\"\n                                    ? [yearControl, monthControl]\n                                    : [monthControl, yearControl];\n                                return controls;\n                            })(),\n                            React.createElement(\"span\", { role: \"status\", \"aria-live\": \"polite\", style: {\n                                    border: 0,\n                                    clip: \"rect(0 0 0 0)\",\n                                    height: \"1px\",\n                                    margin: \"-1px\",\n                                    overflow: \"hidden\",\n                                    padding: 0,\n                                    position: \"absolute\",\n                                    width: \"1px\",\n                                    whiteSpace: \"nowrap\",\n                                    wordWrap: \"normal\",\n                                } }, formatCaption(calendarMonth.date, dateLib.options, dateLib)))) : (\n                        // biome-ignore lint/a11y/useSemanticElements: breaking change\n                        React.createElement(components.CaptionLabel, { className: classNames[UI.CaptionLabel], role: \"status\", \"aria-live\": \"polite\" }, formatCaption(calendarMonth.date, dateLib.options, dateLib)))),\n                        navLayout === \"around\" &&\n                            !props.hideNavigation &&\n                            displayIndex === numberOfMonths - 1 && (React.createElement(components.NextMonthButton, { type: \"button\", className: classNames[UI.NextMonthButton], tabIndex: nextMonth ? undefined : -1, \"aria-disabled\": nextMonth ? undefined : true, \"aria-label\": labelNext(nextMonth), onClick: handleNextClick, \"data-animated-button\": props.animate ? \"true\" : undefined },\n                            React.createElement(components.Chevron, { disabled: nextMonth ? undefined : true, className: classNames[UI.Chevron], orientation: props.dir === \"rtl\" ? \"left\" : \"right\" }))),\n                        displayIndex === numberOfMonths - 1 &&\n                            navLayout === \"after\" &&\n                            !props.hideNavigation && (React.createElement(components.Nav, { \"data-animated-nav\": props.animate ? \"true\" : undefined, className: classNames[UI.Nav], style: styles?.[UI.Nav], \"aria-label\": labelNav(), onPreviousClick: handlePreviousClick, onNextClick: handleNextClick, previousMonth: previousMonth, nextMonth: nextMonth })),\n                        React.createElement(components.MonthGrid, { role: \"grid\", \"aria-multiselectable\": mode === \"multiple\" || mode === \"range\", \"aria-label\": labelGrid(calendarMonth.date, dateLib.options, dateLib) ||\n                                undefined, className: classNames[UI.MonthGrid], style: styles?.[UI.MonthGrid] },\n                            !props.hideWeekdays && (React.createElement(components.Weekdays, { \"data-animated-weekdays\": props.animate ? \"true\" : undefined, className: classNames[UI.Weekdays], style: styles?.[UI.Weekdays] },\n                                showWeekNumber && (React.createElement(components.WeekNumberHeader, { \"aria-label\": labelWeekNumberHeader(dateLib.options), className: classNames[UI.WeekNumberHeader], style: styles?.[UI.WeekNumberHeader], scope: \"col\" }, formatWeekNumberHeader())),\n                                weekdays.map((weekday) => (React.createElement(components.Weekday, { \"aria-label\": labelWeekday(weekday, dateLib.options, dateLib), className: classNames[UI.Weekday], key: String(weekday), style: styles?.[UI.Weekday], scope: \"col\" }, formatWeekdayName(weekday, dateLib.options, dateLib)))))),\n                            React.createElement(components.Weeks, { \"data-animated-weeks\": props.animate ? \"true\" : undefined, className: classNames[UI.Weeks], style: styles?.[UI.Weeks] }, calendarMonth.weeks.map((week) => {\n                                return (React.createElement(components.Week, { className: classNames[UI.Week], key: week.weekNumber, style: styles?.[UI.Week], week: week },\n                                    showWeekNumber && (\n                                    // biome-ignore lint/a11y/useSemanticElements: react component\n                                    React.createElement(components.WeekNumber, { week: week, style: styles?.[UI.WeekNumber], \"aria-label\": labelWeekNumber(week.weekNumber, {\n                                            locale,\n                                        }), className: classNames[UI.WeekNumber], scope: \"row\", role: \"rowheader\" }, formatWeekNumber(week.weekNumber, dateLib))),\n                                    week.days.map((day) => {\n                                        const { date } = day;\n                                        const modifiers = getModifiers(day);\n                                        modifiers[DayFlag.focused] =\n                                            !modifiers.hidden &&\n                                                Boolean(focused?.isEqualTo(day));\n                                        modifiers[SelectionState.selected] =\n                                            isSelected?.(date) || modifiers.selected;\n                                        if (isDateRange(selectedValue)) {\n                                            // add range modifiers\n                                            const { from, to } = selectedValue;\n                                            modifiers[SelectionState.range_start] = Boolean(from && to && dateLib.isSameDay(date, from));\n                                            modifiers[SelectionState.range_end] = Boolean(from && to && dateLib.isSameDay(date, to));\n                                            modifiers[SelectionState.range_middle] =\n                                                rangeIncludesDate(selectedValue, date, true, dateLib);\n                                        }\n                                        const style = getStyleForModifiers(modifiers, styles, props.modifiersStyles);\n                                        const className = getClassNamesForModifiers(modifiers, classNames, props.modifiersClassNames);\n                                        const ariaLabel = !isInteractive && !modifiers.hidden\n                                            ? labelGridcell(date, modifiers, dateLib.options, dateLib)\n                                            : undefined;\n                                        return (\n                                        // biome-ignore lint/a11y/useSemanticElements: react component\n                                        React.createElement(components.Day, { key: `${dateLib.format(date, \"yyyy-MM-dd\")}_${dateLib.format(day.displayMonth, \"yyyy-MM\")}`, day: day, modifiers: modifiers, className: className.join(\" \"), style: style, role: \"gridcell\", \"aria-selected\": modifiers.selected || undefined, \"aria-label\": ariaLabel, \"data-day\": dateLib.format(date, \"yyyy-MM-dd\"), \"data-month\": day.outside\n                                                ? dateLib.format(date, \"yyyy-MM\")\n                                                : undefined, \"data-selected\": modifiers.selected || undefined, \"data-disabled\": modifiers.disabled || undefined, \"data-hidden\": modifiers.hidden || undefined, \"data-outside\": day.outside || undefined, \"data-focused\": modifiers.focused || undefined, \"data-today\": modifiers.today || undefined }, !modifiers.hidden && isInteractive ? (React.createElement(components.DayButton, { className: classNames[UI.DayButton], style: styles?.[UI.DayButton], type: \"button\", day: day, modifiers: modifiers, disabled: modifiers.disabled || undefined, tabIndex: isFocusTarget(day) ? 0 : -1, \"aria-label\": labelDayButton(date, modifiers, dateLib.options, dateLib), onClick: handleDayClick(day, modifiers), onBlur: handleDayBlur(day, modifiers), onFocus: handleDayFocus(day, modifiers), onKeyDown: handleDayKeyDown(day, modifiers), onMouseEnter: handleDayMouseEnter(day, modifiers), onMouseLeave: handleDayMouseLeave(day, modifiers) }, formatDay(date, dateLib.options, dateLib))) : (!modifiers.hidden &&\n                                            formatDay(day.date, dateLib.options, dateLib))));\n                                    })));\n                            })))));\n                })),\n            props.footer && (\n            // biome-ignore lint/a11y/useSemanticElements: react component\n            React.createElement(components.Footer, { className: classNames[UI.Footer], style: styles?.[UI.Footer], role: \"status\", \"aria-live\": \"polite\" }, props.footer)))));\n}\n","import * as React from \"react\"\nimport {\n  ChevronDownIcon,\n  ChevronLeftIcon,\n  ChevronRightIcon,\n} from \"lucide-react\"\nimport { DayButton, DayPicker, getDefaultClassNames } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button, buttonVariants } from \"@/components/ui/button\"\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  captionLayout = \"label\",\n  buttonVariant = \"ghost\",\n  formatters,\n  components,\n  ...props\n}: React.ComponentProps<typeof DayPicker> & {\n  buttonVariant?: React.ComponentProps<typeof Button>[\"variant\"]\n}) {\n  const defaultClassNames = getDefaultClassNames()\n\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\n        \"bg-background group/calendar p-3 [--cell-size:2rem] [[data-slot=card-content]_&]:bg-transparent [[data-slot=popover-content]_&]:bg-transparent\",\n        String.raw`rtl:**:[.rdp-button\\_next>svg]:rotate-180`,\n        String.raw`rtl:**:[.rdp-button\\_previous>svg]:rotate-180`,\n        className\n      )}\n      captionLayout={captionLayout}\n      formatters={{\n        formatMonthDropdown: (date) =>\n          date.toLocaleString(\"default\", { month: \"short\" }),\n        ...formatters,\n      }}\n      classNames={{\n        root: cn(\"w-fit\", defaultClassNames.root),\n        months: cn(\n          \"relative flex flex-col gap-4 md:flex-row\",\n          defaultClassNames.months\n        ),\n        month: cn(\"flex w-full flex-col gap-4\", defaultClassNames.month),\n        nav: cn(\n          \"absolute inset-x-0 top-0 flex w-full items-center justify-between gap-1\",\n          defaultClassNames.nav\n        ),\n        button_previous: cn(\n          buttonVariants({ variant: buttonVariant }),\n          \"h-[--cell-size] w-[--cell-size] select-none p-0 aria-disabled:opacity-50\",\n          defaultClassNames.button_previous\n        ),\n        button_next: cn(\n          buttonVariants({ variant: buttonVariant }),\n          \"h-[--cell-size] w-[--cell-size] select-none p-0 aria-disabled:opacity-50\",\n          defaultClassNames.button_next\n        ),\n        month_caption: cn(\n          \"flex h-[--cell-size] w-full items-center justify-center px-[--cell-size]\",\n          defaultClassNames.month_caption\n        ),\n        dropdowns: cn(\n          \"flex h-[--cell-size] w-full items-center justify-center gap-1.5 text-sm font-medium\",\n          defaultClassNames.dropdowns\n        ),\n        dropdown_root: cn(\n          \"has-focus:border-ring border-input shadow-xs has-focus:ring-ring/50 has-focus:ring-[3px] relative rounded-md border\",\n          defaultClassNames.dropdown_root\n        ),\n        dropdown: cn(\n          \"bg-popover absolute inset-0 opacity-0\",\n          defaultClassNames.dropdown\n        ),\n        caption_label: cn(\n          \"select-none font-medium\",\n          captionLayout === \"label\"\n            ? \"text-sm\"\n            : \"[&>svg]:text-muted-foreground flex h-8 items-center gap-1 rounded-md pl-2 pr-1 text-sm [&>svg]:size-3.5\",\n          defaultClassNames.caption_label\n        ),\n        table: \"w-full border-collapse\",\n        weekdays: cn(\"flex\", defaultClassNames.weekdays),\n        weekday: cn(\n          \"text-muted-foreground flex-1 select-none rounded-md text-[0.8rem] font-normal\",\n          defaultClassNames.weekday\n        ),\n        week: cn(\"mt-2 flex w-full\", defaultClassNames.week),\n        week_number_header: cn(\n          \"w-[--cell-size] select-none\",\n          defaultClassNames.week_number_header\n        ),\n        week_number: cn(\n          \"text-muted-foreground select-none text-[0.8rem]\",\n          defaultClassNames.week_number\n        ),\n        day: cn(\n          \"group/day relative aspect-square h-full w-full select-none p-0 text-center [&:first-child[data-selected=true]_button]:rounded-l-md [&:last-child[data-selected=true]_button]:rounded-r-md\",\n          defaultClassNames.day\n        ),\n        range_start: cn(\n          \"bg-accent rounded-l-md\",\n          defaultClassNames.range_start\n        ),\n        range_middle: cn(\"rounded-none\", defaultClassNames.range_middle),\n        range_end: cn(\"bg-accent rounded-r-md\", defaultClassNames.range_end),\n        today: cn(\n          \"bg-accent text-accent-foreground rounded-md data-[selected=true]:rounded-none\",\n          defaultClassNames.today\n        ),\n        outside: cn(\n          \"text-muted-foreground aria-selected:text-muted-foreground\",\n          defaultClassNames.outside\n        ),\n        disabled: cn(\n          \"text-muted-foreground opacity-50\",\n          defaultClassNames.disabled\n        ),\n        hidden: cn(\"invisible\", defaultClassNames.hidden),\n        ...classNames,\n      }}\n      components={{\n        Root: ({ className, rootRef, ...props }) => {\n          return (\n            <div\n              data-slot=\"calendar\"\n              ref={rootRef}\n              className={cn(className)}\n              {...props}\n            />\n          )\n        },\n        Chevron: ({ className, orientation, ...props }) => {\n          if (orientation === \"left\") {\n            return (\n              <ChevronLeftIcon className={cn(\"size-4\", className)} {...props} />\n            )\n          }\n\n          if (orientation === \"right\") {\n            return (\n              <ChevronRightIcon\n                className={cn(\"size-4\", className)}\n                {...props}\n              />\n            )\n          }\n\n          return (\n            <ChevronDownIcon className={cn(\"size-4\", className)} {...props} />\n          )\n        },\n        DayButton: CalendarDayButton,\n        WeekNumber: ({ children, ...props }) => {\n          return (\n            <td {...props}>\n              <div className=\"flex size-[--cell-size] items-center justify-center text-center\">\n                {children}\n              </div>\n            </td>\n          )\n        },\n        ...components,\n      }}\n      {...props}\n    />\n  )\n}\n\nfunction CalendarDayButton({\n  className,\n  day,\n  modifiers,\n  ...props\n}: React.ComponentProps<typeof DayButton>) {\n  const defaultClassNames = getDefaultClassNames()\n\n  const ref = React.useRef<HTMLButtonElement>(null)\n  React.useEffect(() => {\n    if (modifiers.focused) ref.current?.focus()\n  }, [modifiers.focused])\n\n  return (\n    <Button\n      ref={ref}\n      variant=\"ghost\"\n      size=\"icon\"\n      data-day={day.date.toLocaleDateString()}\n      data-selected-single={\n        modifiers.selected &&\n        !modifiers.range_start &&\n        !modifiers.range_end &&\n        !modifiers.range_middle\n      }\n      data-range-start={modifiers.range_start}\n      data-range-end={modifiers.range_end}\n      data-range-middle={modifiers.range_middle}\n      className={cn(\n        \"data-[selected-single=true]:bg-primary data-[selected-single=true]:text-primary-foreground data-[range-middle=true]:bg-accent data-[range-middle=true]:text-accent-foreground data-[range-start=true]:bg-primary data-[range-start=true]:text-primary-foreground data-[range-end=true]:bg-primary data-[range-end=true]:text-primary-foreground group-data-[focused=true]/day:border-ring group-data-[focused=true]/day:ring-ring/50 flex aspect-square h-auto w-full min-w-[--cell-size] flex-col gap-1 font-normal leading-none data-[range-end=true]:rounded-md data-[range-middle=true]:rounded-none data-[range-start=true]:rounded-md group-data-[focused=true]/day:relative group-data-[focused=true]/day:z-10 group-data-[focused=true]/day:ring-[3px] [&>span]:text-xs [&>span]:opacity-70\",\n        defaultClassNames.day,\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Calendar, CalendarDayButton }\n","import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","import React, { useState, useEffect } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '../../components/ui/card';\nimport { Badge } from '../../components/ui/badge';\nimport { Button } from '../../components/ui/button';\nimport { Input } from '../../components/ui/input';\nimport { Label } from '../../components/ui/label';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '../../components/ui/select';\nimport { Dialog, DialogContent, DialogDescription, DialogFooter, DialogHeader, DialogTitle, DialogTrigger } from '../../components/ui/dialog';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '../../components/ui/table';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '../../components/ui/tabs';\nimport { Calendar } from '../../components/ui/calendar';\nimport { Popover, PopoverContent, PopoverTrigger } from '../../components/ui/popover';\nimport {\n  Calendar as CalendarIcon,\n  Clock,\n  MapPin,\n  Truck,\n  User,\n  Route,\n  Plus,\n  Edit,\n  Trash2,\n  Navigation,\n  AlertCircle,\n  CheckCircle,\n  Timer,\n  Users,\n  Phone,\n  Map\n} from 'lucide-react';\n// Removed date-fns dependency - using native Date methods\n\n// Define PickupStatus type locally since the interface uses a different format\ntype PickupStatus = 'SCHEDULED' | 'IN_TRANSIT' | 'COLLECTED' | 'CANCELLED';\ninterface PickupSchedule {\n  id: string;\n  farmerId: string;\n  farmerName: string;\n  location: string;\n  scheduledDate: string;\n  scheduledTime: string;\n  assignedWorker: string;\n  vehicleId: string;\n  priority: string;\n  notes: string;\n  status: 'scheduled' | 'inProgress' | 'completed' | 'delayed' | 'cancelled';\n  estimatedDuration?: number;\n  estimatedDistance?: number;\n}\n\n// Mock data\nconst schedules: PickupSchedule[] = [\n  {\n    id: 'SCH-001',\n    farmerId: 'FARM-001',\n    farmerName: 'राम कुमार',\n    location: 'Village A, District B',\n    scheduledDate: new Date().toISOString(),\n    scheduledTime: '09:00',\n    assignedWorker: 'W001',\n    vehicleId: 'V001',\n    priority: 'high',\n    notes: 'Regular pickup',\n    status: 'scheduled',\n    estimatedDuration: 45,\n    estimatedDistance: 12.5\n  },\n  {\n    id: 'SCH-002',\n    farmerId: 'FARM-002',\n    farmerName: 'श्याम यादव',\n    location: 'Village C, District B',\n    scheduledDate: new Date(Date.now() + 86400000).toISOString(),\n    scheduledTime: '10:30',\n    assignedWorker: 'W002',\n    vehicleId: 'V002',\n    priority: 'medium',\n    notes: 'Buffalo dung collection',\n    status: 'scheduled',\n    estimatedDuration: 30,\n    estimatedDistance: 8.2\n  }\n];\n\n// Mock functions\nconst createSchedule = async (data: Partial<PickupSchedule>) => {\n  console.log('Creating schedule:', data);\n  return Promise.resolve();\n};\n\nconst updateSchedule = async (id: string, data: Partial<PickupSchedule>) => {\n  console.log('Updating schedule:', id, data);\n  return Promise.resolve();\n};\n\nconst deleteSchedule = async (id: string) => {\n  console.log('Deleting schedule:', id);\n  return Promise.resolve();\n};\n\n\ninterface PickupSchedulerProps {\n  languageContext?: {\n    language: 'hi' | 'en';\n    t: (key: string) => string;\n  };\n}\n\nconst translations = {\n  en: {\n    title: 'Pickup Scheduler',\n    subtitle: 'Route planning and farmer assignment management',\n    createSchedule: 'Create Schedule',\n    editSchedule: 'Edit Schedule',\n    deleteSchedule: 'Delete Schedule',\n    scheduleList: 'Schedule List',\n    routeOptimization: 'Route Optimization',\n    farmerAssignments: 'Farmer Assignments',\n    todaysPickups: 'Today\\'s Pickups',\n    upcomingSchedules: 'Upcoming Schedules',\n    routeHistory: 'Route History',\n    farmerId: 'Farmer ID',\n    farmerName: 'Farmer Name',\n    location: 'Location',\n    scheduledTime: 'Scheduled Time',\n    estimatedDuration: 'Est. Duration',\n    status: 'Status',\n    assignedWorker: 'Assigned Worker',\n    vehicleId: 'Vehicle ID',\n    priority: 'Priority',\n    notes: 'Notes',\n    actions: 'Actions',\n    create: 'Create',\n    update: 'Update',\n    cancel: 'Cancel',\n    delete: 'Delete',\n    scheduled: 'Scheduled',\n    inProgress: 'In Progress',\n    completed: 'Completed',\n    delayed: 'Delayed',\n    cancelled: 'Cancelled',\n    high: 'High',\n    medium: 'Medium',\n    low: 'Low',\n    selectDate: 'Select date',\n    selectTime: 'Select time',\n    selectWorker: 'Select worker',\n    selectVehicle: 'Select vehicle',\n    optimizeRoute: 'Optimize Route',\n    viewMap: 'View Map',\n    contactFarmer: 'Contact Farmer',\n    estimatedTime: 'ETA',\n    distance: 'Distance',\n    totalDistance: 'Total Distance',\n    totalDuration: 'Total Duration',\n    numberOfStops: 'Number of Stops',\n    efficiency: 'Route Efficiency'\n  },\n  hi: {\n    title: 'पिकअप शेड्यूलर',\n    subtitle: 'रूट प्लानिंग और किसान असाइनमेंट प्रबंधन',\n    createSchedule: 'शेड्यूल बनाएं',\n    editSchedule: 'शेड्यूल संपादित करें',\n    deleteSchedule: 'शेड्यूल हटाएं',\n    scheduleList: 'शेड्यूल सूची',\n    routeOptimization: 'रूट ऑप्टिमाइज़ेशन',\n    farmerAssignments: 'किसान असाइनमेंट',\n    todaysPickups: 'आज के पिकअप',\n    upcomingSchedules: 'आने वाले शेड्यूल',\n    routeHistory: 'रूट इतिहास',\n    farmerId: 'किसान आईडी',\n    farmerName: 'किसान का नाम',\n    location: 'स्थान',\n    scheduledTime: 'निर्धारित समय',\n    estimatedDuration: 'अनुमानित अवधि',\n    status: 'स्थिति',\n    assignedWorker: 'असाइन किया गया कार्यकर्ता',\n    vehicleId: 'वाहन आईडी',\n    priority: 'प्राथमिकता',\n    notes: 'टिप्पणियां',\n    actions: 'कार्य',\n    create: 'बनाएं',\n    update: 'अपडेट करें',\n    cancel: 'रद्द करें',\n    delete: 'हटाएं',\n    scheduled: 'निर्धारित',\n    inProgress: 'प्रगति में',\n    completed: 'पूर्ण',\n    delayed: 'विलंबित',\n    cancelled: 'रद्द',\n    high: 'उच्च',\n    medium: 'मध्यम',\n    low: 'निम्न',\n    selectDate: 'दिनांक चुनें',\n    selectTime: 'समय चुनें',\n    selectWorker: 'कार्यकर्ता चुनें',\n    selectVehicle: 'वाहन चुनें',\n    optimizeRoute: 'रूट ऑप्टिमाइज़ करें',\n    viewMap: 'मैप देखें',\n    contactFarmer: 'किसान से संपर्क करें',\n    estimatedTime: 'अनुमानित पहुंच समय',\n    distance: 'दूरी',\n    totalDistance: 'कुल दूरी',\n    totalDuration: 'कुल अवधि',\n    numberOfStops: 'स्टॉप की संख्या',\n    efficiency: 'रूट दक्षता'\n  }\n};\n\nconst getStatusColor = (status: PickupStatus): string => {\n  switch (status) {\n    case 'scheduled':\n      return 'bg-blue-100 text-blue-800';\n    case 'inProgress':\n      return 'bg-yellow-100 text-yellow-800';\n    case 'completed':\n      return 'bg-green-100 text-green-800';\n    case 'delayed':\n      return 'bg-orange-100 text-orange-800';\n    case 'cancelled':\n      return 'bg-red-100 text-red-800';\n    default:\n      return 'bg-gray-100 text-gray-800';\n  }\n};\n\nconst getPriorityColor = (priority: string): string => {\n  switch (priority) {\n    case 'high':\n      return 'bg-red-100 text-red-800';\n    case 'medium':\n      return 'bg-yellow-100 text-yellow-800';\n    case 'low':\n      return 'bg-green-100 text-green-800';\n    default:\n      return 'bg-gray-100 text-gray-800';\n  }\n};\n\nconst getStatusIcon = (status: PickupStatus) => {\n  switch (status) {\n    case 'scheduled':\n      return <Clock className=\"w-4 h-4\" />;\n    case 'inProgress':\n      return <Truck className=\"w-4 h-4\" />;\n    case 'completed':\n      return <CheckCircle className=\"w-4 h-4\" />;\n    case 'delayed':\n      return <AlertCircle className=\"w-4 h-4\" />;\n    case 'cancelled':\n      return <AlertCircle className=\"w-4 h-4\" />;\n    default:\n      return <Clock className=\"w-4 h-4\" />;\n  }\n};\n\nconst ScheduleForm: React.FC<{\n  schedule?: PickupSchedule;\n  onSubmit: (data: Partial<PickupSchedule>) => void;\n  onCancel: () => void;\n  t: (key: string) => string;\n}> = ({ schedule, onSubmit, onCancel, t }) => {\n  const [formData, setFormData] = useState({\n    farmerId: schedule?.farmerId || '',\n    farmerName: schedule?.farmerName || '',\n    location: schedule?.location || '',\n    scheduledDate: schedule?.scheduledDate ? new Date(schedule.scheduledDate) : new Date(),\n    scheduledTime: schedule?.scheduledTime || '',\n    assignedWorker: schedule?.assignedWorker || '',\n    vehicleId: schedule?.vehicleId || '',\n    priority: schedule?.priority || 'medium',\n    notes: schedule?.notes || ''\n  });\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    onSubmit({\n      ...formData,\n      scheduledDate: formData.scheduledDate.toISOString()\n    });\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"space-y-4\">\n      <div className=\"grid grid-cols-2 gap-4\">\n        <div className=\"space-y-2\">\n          <Label htmlFor=\"farmerId\">{t('farmerId')}</Label>\n          <Input\n            id=\"farmerId\"\n            value={formData.farmerId}\n            onChange={(e) => setFormData(prev => ({ ...prev, farmerId: e.target.value }))}\n            placeholder=\"FARM-001\"\n            required\n          />\n        </div>\n        <div className=\"space-y-2\">\n          <Label htmlFor=\"farmerName\">{t('farmerName')}</Label>\n          <Input\n            id=\"farmerName\"\n            value={formData.farmerName}\n            onChange={(e) => setFormData(prev => ({ ...prev, farmerName: e.target.value }))}\n            placeholder=\"Farmer name\"\n            required\n          />\n        </div>\n      </div>\n\n      <div className=\"space-y-2\">\n        <Label htmlFor=\"location\">{t('location')}</Label>\n        <Input\n          id=\"location\"\n          value={formData.location}\n          onChange={(e) => setFormData(prev => ({ ...prev, location: e.target.value }))}\n          placeholder=\"Village, District\"\n          required\n        />\n      </div>\n\n      <div className=\"grid grid-cols-2 gap-4\">\n        <div className=\"space-y-2\">\n          <Label>{t('selectDate')}</Label>\n          <Popover>\n            <PopoverTrigger asChild>\n              <Button variant=\"outline\" className=\"w-full justify-start text-left font-normal\">\n                <CalendarIcon className=\"mr-2 h-4 w-4\" />\n                {formData.scheduledDate.toLocaleDateString()}\n              </Button>\n            </PopoverTrigger>\n            <PopoverContent className=\"w-auto p-0\">\n              <Calendar\n                mode=\"single\"\n                selected={formData.scheduledDate}\n                onSelect={(date) => date && setFormData(prev => ({ ...prev, scheduledDate: date }))}\n                initialFocus\n              />\n            </PopoverContent>\n          </Popover>\n        </div>\n        <div className=\"space-y-2\">\n          <Label htmlFor=\"scheduledTime\">{t('selectTime')}</Label>\n          <Input\n            id=\"scheduledTime\"\n            type=\"time\"\n            value={formData.scheduledTime}\n            onChange={(e) => setFormData(prev => ({ ...prev, scheduledTime: e.target.value }))}\n            required\n          />\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-2 gap-4\">\n        <div className=\"space-y-2\">\n          <Label htmlFor=\"assignedWorker\">{t('selectWorker')}</Label>\n          <Select value={formData.assignedWorker} onValueChange={(value) => setFormData(prev => ({ ...prev, assignedWorker: value }))}>\n            <SelectTrigger>\n              <SelectValue placeholder=\"Select worker\" />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"W001\">राजेश कुमार</SelectItem>\n              <SelectItem value=\"W002\">सुनील यादव</SelectItem>\n              <SelectItem value=\"W003\">अमित शर्मा</SelectItem>\n            </SelectContent>\n          </Select>\n        </div>\n        <div className=\"space-y-2\">\n          <Label htmlFor=\"vehicleId\">{t('selectVehicle')}</Label>\n          <Select value={formData.vehicleId} onValueChange={(value) => setFormData(prev => ({ ...prev, vehicleId: value }))}>\n            <SelectTrigger>\n              <SelectValue placeholder=\"Select vehicle\" />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"V001\">Truck - RJ14-AB-1234</SelectItem>\n              <SelectItem value=\"V002\">Van - RJ14-CD-5678</SelectItem>\n              <SelectItem value=\"V003\">Pickup - RJ14-EF-9012</SelectItem>\n            </SelectContent>\n          </Select>\n        </div>\n      </div>\n\n      <div className=\"space-y-2\">\n        <Label htmlFor=\"priority\">{t('priority')}</Label>\n        <Select value={formData.priority} onValueChange={(value) => setFormData(prev => ({ ...prev, priority: value }))}>\n          <SelectTrigger>\n            <SelectValue />\n          </SelectTrigger>\n          <SelectContent>\n            <SelectItem value=\"high\">{t('high')}</SelectItem>\n            <SelectItem value=\"medium\">{t('medium')}</SelectItem>\n            <SelectItem value=\"low\">{t('low')}</SelectItem>\n          </SelectContent>\n        </Select>\n      </div>\n\n      <div className=\"space-y-2\">\n        <Label htmlFor=\"notes\">{t('notes')}</Label>\n        <Input\n          id=\"notes\"\n          value={formData.notes}\n          onChange={(e) => setFormData(prev => ({ ...prev, notes: e.target.value }))}\n          placeholder=\"Additional notes...\"\n        />\n      </div>\n\n      <DialogFooter>\n        <Button type=\"button\" variant=\"outline\" onClick={onCancel}>\n          {t('cancel')}\n        </Button>\n        <Button type=\"submit\">\n          {schedule ? t('update') : t('create')}\n        </Button>\n      </DialogFooter>\n    </form>\n  );\n};\n\nexport const PickupScheduler: React.FC<PickupSchedulerProps> = ({ languageContext }) => {\n  const [isCreateDialogOpen, setIsCreateDialogOpen] = useState(false);\n  const [editingSchedule, setEditingSchedule] = useState<PickupSchedule | null>(null);\n  const [deletingSchedule, setDeletingSchedule] = useState<PickupSchedule | null>(null);\n\n  const lang = languageContext?.language || 'en';\n  const t = (key: string): string => {\n    return languageContext?.t(key) || translations[lang][key as keyof typeof translations[typeof lang]] || key;\n  };\n\n  const handleCreateSchedule = async (data: Partial<PickupSchedule>) => {\n    await createSchedule(data);\n    setIsCreateDialogOpen(false);\n  };\n\n  const handleUpdateSchedule = async (data: Partial<PickupSchedule>) => {\n    if (editingSchedule) {\n      await updateSchedule(editingSchedule.id, data);\n      setEditingSchedule(null);\n    }\n  };\n\n  const handleDeleteSchedule = async () => {\n    if (deletingSchedule) {\n      await deleteSchedule(deletingSchedule.id);\n      setDeletingSchedule(null);\n    }\n  };\n\n  const todaysSchedules = schedules.filter(s =>\n    new Date(s.scheduledDate).toDateString() === new Date().toDateString()\n  );\n  const upcomingSchedules = schedules.filter(s =>\n    new Date(s.scheduledDate) > new Date() &&\n    new Date(s.scheduledDate).toDateString() !== new Date().toDateString()\n  );\n  const inProgressSchedules = schedules.filter(s => s.status === 'inProgress');\n  const completedSchedules = schedules.filter(s => s.status === 'completed');\n\n  const totalDistance = schedules.reduce((sum, s) => sum + (s.estimatedDistance || 0), 0);\n  const averageEfficiency = schedules.length > 0 ?\n    (completedSchedules.length / schedules.length) * 100 : 0;\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between -mt-6\">\n        <div>\n          <h1 className=\"text-3xl font-bold tracking-tight\">{t('title')}</h1>\n          <p className=\"text-muted-foreground\">{t('subtitle')}</p>\n        </div>\n        <div className=\"flex gap-2\">\n          <Button variant=\"outline\" className=\"gap-2\">\n            <Route className=\"w-4 h-4\" />\n            {t('optimizeRoute')}\n          </Button>\n          <Dialog open={isCreateDialogOpen} onOpenChange={setIsCreateDialogOpen}>\n            <DialogTrigger asChild>\n              <Button className=\"gap-2\">\n                <Plus className=\"w-4 h-4\" />\n                {t('createSchedule')}\n              </Button>\n            </DialogTrigger>\n            <DialogContent className=\"sm:max-w-[500px]\">\n              <DialogHeader>\n                <DialogTitle>{t('createSchedule')}</DialogTitle>\n                <DialogDescription>\n                  Create a new pickup schedule for farmer dung collection\n                </DialogDescription>\n              </DialogHeader>\n              <ScheduleForm\n                onSubmit={handleCreateSchedule}\n                onCancel={() => setIsCreateDialogOpen(false)}\n                t={t}\n              />\n            </DialogContent>\n          </Dialog>\n        </div>\n      </div>\n\n      {/* Statistics Cards */}\n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">{t('todaysPickups')}</CardTitle>\n            <Clock className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{todaysSchedules.length}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              {inProgressSchedules.length} in progress\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Active Routes</CardTitle>\n            <Truck className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{inProgressSchedules.length}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              Workers on field\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">{t('totalDistance')}</CardTitle>\n            <Navigation className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{totalDistance.toFixed(1)} km</div>\n            <p className=\"text-xs text-muted-foreground\">\n              Total planned distance\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">{t('efficiency')}</CardTitle>\n            <CheckCircle className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{averageEfficiency.toFixed(1)}%</div>\n            <p className=\"text-xs text-muted-foreground\">\n              Completion rate\n            </p>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Main Content */}\n      <Tabs defaultValue=\"today\" className=\"space-y-6\">\n        <TabsList className=\"grid w-full grid-cols-4\">\n          <TabsTrigger value=\"today\">{t('todaysPickups')}</TabsTrigger>\n          <TabsTrigger value=\"upcoming\">{t('upcomingSchedules')}</TabsTrigger>\n          <TabsTrigger value=\"routes\">{t('routeOptimization')}</TabsTrigger>\n          <TabsTrigger value=\"assignments\">{t('farmerAssignments')}</TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"today\">\n          <Card>\n            <CardHeader>\n              <CardTitle>{t('todaysPickups')}</CardTitle>\n              <CardDescription>\n                Today's scheduled pickups and their current status\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <Table>\n                <TableHeader>\n                  <TableRow>\n                    <TableHead>{t('farmerName')}</TableHead>\n                    <TableHead>{t('location')}</TableHead>\n                    <TableHead>{t('scheduledTime')}</TableHead>\n                    <TableHead>{t('status')}</TableHead>\n                    <TableHead>{t('assignedWorker')}</TableHead>\n                    <TableHead>{t('estimatedTime')}</TableHead>\n                    <TableHead>{t('actions')}</TableHead>\n                  </TableRow>\n                </TableHeader>\n                <TableBody>\n                  {todaysSchedules.map((schedule) => (\n                    <TableRow key={schedule.id}>\n                      <TableCell className=\"font-medium\">\n                        <div className=\"flex items-center gap-2\">\n                          <User className=\"w-4 h-4\" />\n                          {schedule.farmerName}\n                        </div>\n                      </TableCell>\n                      <TableCell>\n                        <div className=\"flex items-center gap-2\">\n                          <MapPin className=\"w-4 h-4\" />\n                          {schedule.location}\n                        </div>\n                      </TableCell>\n                      <TableCell>{schedule.scheduledTime}</TableCell>\n                      <TableCell>\n                        <Badge className={getStatusColor(schedule.status)}>\n                          <div className=\"flex items-center gap-1\">\n                            {getStatusIcon(schedule.status)}\n                            {t(schedule.status)}\n                          </div>\n                        </Badge>\n                      </TableCell>\n                      <TableCell>{schedule.assignedWorker}</TableCell>\n                      <TableCell>\n                        {schedule.estimatedDuration ? `${schedule.estimatedDuration} min` : 'N/A'}\n                      </TableCell>\n                      <TableCell>\n                        <div className=\"flex gap-2\">\n                          <Button size=\"sm\" variant=\"outline\">\n                            <Map className=\"w-4 h-4\" />\n                          </Button>\n                          <Button size=\"sm\" variant=\"outline\">\n                            <Phone className=\"w-4 h-4\" />\n                          </Button>\n                          <Button\n                            size=\"sm\"\n                            variant=\"outline\"\n                            onClick={() => setEditingSchedule(schedule)}\n                          >\n                            <Edit className=\"w-4 h-4\" />\n                          </Button>\n                        </div>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n              {todaysSchedules.length === 0 && (\n                <div className=\"text-center py-8 text-muted-foreground\">\n                  <Clock className=\"w-12 h-12 mx-auto mb-2\" />\n                  <p>No pickups scheduled for today</p>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"upcoming\">\n          <Card>\n            <CardHeader>\n              <CardTitle>{t('upcomingSchedules')}</CardTitle>\n              <CardDescription>\n                Scheduled pickups for the coming days\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-4\">\n                {upcomingSchedules.map((schedule) => (\n                  <div key={schedule.id} className=\"flex items-center justify-between p-4 border rounded-lg\">\n                    <div className=\"space-y-1\">\n                      <div className=\"flex items-center gap-4\">\n                        <h4 className=\"font-semibold\">{schedule.farmerName}</h4>\n                        <Badge className={getPriorityColor(schedule.priority)}>\n                          {t(schedule.priority)}\n                        </Badge>\n                      </div>\n                      <div className=\"flex items-center gap-4 text-sm text-muted-foreground\">\n                        <span className=\"flex items-center gap-1\">\n                          <MapPin className=\"w-3 h-3\" />\n                          {schedule.location}\n                        </span>\n                        <span className=\"flex items-center gap-1\">\n                          <CalendarIcon className=\"w-3 h-3\" />\n                          {new Date(schedule.scheduledDate).toLocaleDateString()}\n                        </span>\n                        <span className=\"flex items-center gap-1\">\n                          <Clock className=\"w-3 h-3\" />\n                          {schedule.scheduledTime}\n                        </span>\n                      </div>\n                    </div>\n                    <div className=\"flex items-center gap-2\">\n                      <Badge className={getStatusColor(schedule.status)}>\n                        {t(schedule.status)}\n                      </Badge>\n                      <Button size=\"sm\" variant=\"outline\" onClick={() => setEditingSchedule(schedule)}>\n                        <Edit className=\"w-4 h-4\" />\n                      </Button>\n                      <Button size=\"sm\" variant=\"outline\" onClick={() => setDeletingSchedule(schedule)}>\n                        <Trash2 className=\"w-4 h-4\" />\n                      </Button>\n                    </div>\n                  </div>\n                ))}\n                {upcomingSchedules.length === 0 && (\n                  <div className=\"text-center py-8 text-muted-foreground\">\n                    <CalendarIcon className=\"w-12 h-12 mx-auto mb-2\" />\n                    <p>No upcoming schedules</p>\n                  </div>\n                )}\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"routes\">\n          <div className=\"grid gap-6 lg:grid-cols-2\">\n            <Card>\n              <CardHeader>\n                <CardTitle>{t('routeOptimization')}</CardTitle>\n                <CardDescription>\n                  Optimize pickup routes for maximum efficiency\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-4\">\n                  <div className=\"grid grid-cols-2 gap-4\">\n                    <div className=\"text-center p-4 border rounded-lg\">\n                      <div className=\"text-2xl font-bold text-blue-600\">{schedules.length}</div>\n                      <div className=\"text-sm text-muted-foreground\">{t('numberOfStops')}</div>\n                    </div>\n                    <div className=\"text-center p-4 border rounded-lg\">\n                      <div className=\"text-2xl font-bold text-green-600\">{totalDistance.toFixed(1)} km</div>\n                      <div className=\"text-sm text-muted-foreground\">{t('totalDistance')}</div>\n                    </div>\n                  </div>\n                  <Button className=\"w-full gap-2\">\n                    <Route className=\"w-4 h-4\" />\n                    {t('optimizeRoute')}\n                  </Button>\n                </div>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader>\n                <CardTitle>Route Efficiency</CardTitle>\n                <CardDescription>\n                  Current route performance metrics\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-4\">\n                  <div className=\"space-y-2\">\n                    <div className=\"flex justify-between text-sm\">\n                      <span>Completion Rate</span>\n                      <span>{averageEfficiency.toFixed(1)}%</span>\n                    </div>\n                    <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                      <div\n                        className=\"bg-green-600 h-2 rounded-full\"\n                        style={{ width: `${averageEfficiency}%` }}\n                      ></div>\n                    </div>\n                  </div>\n                  <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                    <div>\n                      <span className=\"text-muted-foreground\">Avg. Duration:</span>\n                      <span className=\"ml-2 font-medium\">45 min</span>\n                    </div>\n                    <div>\n                      <span className=\"text-muted-foreground\">Fuel Efficiency:</span>\n                      <span className=\"ml-2 font-medium\">12 km/L</span>\n                    </div>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"assignments\">\n          <Card>\n            <CardHeader>\n              <CardTitle>{t('farmerAssignments')}</CardTitle>\n              <CardDescription>\n                Manage farmer-worker assignments and contact information\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-4\">\n                {schedules.slice(0, 10).map((schedule) => (\n                  <div key={schedule.id} className=\"flex items-center justify-between p-4 border rounded-lg\">\n                    <div className=\"space-y-1\">\n                      <div className=\"flex items-center gap-4\">\n                        <div className=\"flex items-center gap-2\">\n                          <User className=\"w-4 h-4\" />\n                          <span className=\"font-semibold\">{schedule.farmerName}</span>\n                        </div>\n                        <span className=\"text-sm text-muted-foreground\">({schedule.farmerId})</span>\n                      </div>\n                      <div className=\"flex items-center gap-4 text-sm text-muted-foreground\">\n                        <span className=\"flex items-center gap-1\">\n                          <MapPin className=\"w-3 h-3\" />\n                          {schedule.location}\n                        </span>\n                        <span className=\"flex items-center gap-1\">\n                          <Users className=\"w-3 h-3\" />\n                          {schedule.assignedWorker}\n                        </span>\n                      </div>\n                    </div>\n                    <div className=\"flex items-center gap-2\">\n                      <Button size=\"sm\" variant=\"outline\">\n                        <Phone className=\"w-4 h-4\" />\n                      </Button>\n                      <Button size=\"sm\" variant=\"outline\">\n                        <MapPin className=\"w-4 h-4\" />\n                      </Button>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n\n      {/* Edit Dialog */}\n      <Dialog open={!!editingSchedule} onOpenChange={() => setEditingSchedule(null)}>\n        <DialogContent className=\"sm:max-w-[500px]\">\n          <DialogHeader>\n            <DialogTitle>{t('editSchedule')}</DialogTitle>\n            <DialogDescription>\n              Update schedule information and assignments\n            </DialogDescription>\n          </DialogHeader>\n          {editingSchedule && (\n            <ScheduleForm\n              schedule={editingSchedule}\n              onSubmit={handleUpdateSchedule}\n              onCancel={() => setEditingSchedule(null)}\n              t={t}\n            />\n          )}\n        </DialogContent>\n      </Dialog>\n\n      {/* Delete Dialog */}\n      <Dialog open={!!deletingSchedule} onOpenChange={() => setDeletingSchedule(null)}>\n        <DialogContent>\n          <DialogHeader>\n            <DialogTitle>{t('deleteSchedule')}</DialogTitle>\n            <DialogDescription>\n              Are you sure you want to delete this pickup schedule? This action cannot be undone.\n            </DialogDescription>\n          </DialogHeader>\n          <DialogFooter>\n            <Button variant=\"outline\" onClick={() => setDeletingSchedule(null)}>\n              {t('cancel')}\n            </Button>\n            <Button variant=\"destructive\" onClick={handleDeleteSchedule}>\n              {t('delete')}\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default PickupScheduler;","import React, { useState, useRef, useCallback } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '../../components/ui/card';\nimport { Badge } from '../../components/ui/badge';\nimport { Button } from '../../components/ui/button';\nimport { Input } from '../../components/ui/input';\nimport { Label } from '../../components/ui/label';\nimport { Textarea } from '../../components/ui/textarea';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '../../components/ui/select';\nimport { Alert, AlertDescription } from '../../components/ui/alert';\nimport { Progress } from '../../components/ui/progress';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '../../components/ui/tabs';\nimport {\n  Camera,\n  Scale,\n  Upload,\n  CheckCircle,\n  AlertCircle,\n  Clock,\n  User,\n  MapPin,\n  Truck,\n  Save,\n  RefreshCw,\n  FileImage,\n  Download,\n  Eye,\n  Calendar,\n  Weight,\n  QrCode,\n  Smartphone,\n  Shield,\n  TrendingUp,\n  CreditCard,\n  Receipt,\n  Verified\n} from 'lucide-react';\n\n// Enhanced types for TransactionEntry with IoT verification\ntype TransactionStatus = 'pending' | 'completed' | 'cancelled' | 'verified' | 'quality_check' | 'payment_pending';\ntype PaymentMethod = 'cash' | 'online' | 'bank_transfer' | 'upi';\ntype PaymentStatus = 'pending' | 'partial' | 'completed' | 'failed' | 'cancelled';\ntype QualityVerificationStatus = 'pending' | 'approved' | 'rejected' | 'requires_recheck';\n\ninterface IoTVerificationData {\n  deviceId: string;\n  deviceName: string;\n  timestamp: string;\n  temperature: number;\n  humidity: number;\n  ph_level: number;\n  gas_content: number;\n  rfid_tag: string;\n  gps_coordinates: string;\n  verification_score: number;\n  sensor_readings: {\n    weight_sensor: number;\n    quality_sensor: number;\n    moisture_sensor: number;\n  };\n}\n\ninterface BatchReference {\n  batchId: string;\n  digesterId: string;\n  expectedYield: number;\n  fermentationDays: number;\n  qualityPrediction: string;\n}\n\ninterface TransactionData {\n  id: string;\n  farmerId: string;\n  farmerName: string;\n  farmerAadhaar: string;\n  location: string;\n  phoneNumber: string;\n  dungType: string;\n  measuredWeight: number;\n  qualityGrade: string;\n  moistureContent: number;\n  paymentMethod: PaymentMethod;\n  paymentStatus: PaymentStatus;\n  ratePerKg: number;\n  totalAmount: number;\n  advanceAmount: number;\n  balanceAmount: number;\n  notes: string;\n  photos: string[];\n  measurementDate: string;\n  collectionDate: string;\n  status: TransactionStatus;\n  qualityVerificationStatus: QualityVerificationStatus;\n  iotVerification: IoTVerificationData;\n  batchReference: BatchReference;\n  transportDetails: {\n    vehicleNumber: string;\n    driverName: string;\n    routeId: string;\n    estimatedDelivery: string;\n  };\n  inspector: {\n    name: string;\n    id: string;\n    signature: boolean;\n  };\n  certificates: string[];\n  verificationPhotos: string[];\n  qrCode: string;\n  receiptNumber: string;\n  gstDetails: {\n    gstNumber: string;\n    taxAmount: number;\n    cgst: number;\n    sgst: number;\n  };\n}\n\n// Enhanced comprehensive demo data with realistic Indian biogas operation scenarios\nconst transactions: TransactionData[] = [\n  {\n    id: 'TXN-2024-001',\n    farmerId: 'FARM-MH-001',\n    farmerName: 'राजेश कुमार शर्मा',\n    farmerAadhaar: '****-****-2156',\n    location: 'गोकुल गौशाला, मथुरा, उत्तर प्रदेश',\n    phoneNumber: '+91 98765 43210',\n    dungType: 'cow',\n    measuredWeight: 52.8,\n    qualityGrade: 'gradeA',\n    moistureContent: 12,\n    paymentMethod: 'upi',\n    paymentStatus: 'completed',\n    ratePerKg: 9.5,\n    totalAmount: 501.60,\n    advanceAmount: 250.00,\n    balanceAmount: 251.60,\n    notes: 'प्रीमियम गुणवत्ता गाय का गोबर। जैविक खाद से पोषित 18 गायों से संग्रह। श्रेष्ठ किण्वन क्षमता के साथ उच्च मीथेन सामग्री की अपेक्षा।',\n    photos: ['photo1.jpg', 'photo2.jpg', 'photo3.jpg'],\n    measurementDate: '2024-01-15T08:30:00Z',\n    collectionDate: '2024-01-15T09:00:00Z',\n    status: 'verified',\n    qualityVerificationStatus: 'approved',\n    iotVerification: {\n      deviceId: 'IOT-SCALE-001',\n      deviceName: 'Smart Scale Alpha-1',\n      timestamp: '2024-01-15T08:32:15Z',\n      temperature: 28.5,\n      humidity: 65,\n      ph_level: 7.2,\n      gas_content: 68.5,\n      rfid_tag: 'RFID-001-ABC123',\n      gps_coordinates: '27.4924, 77.6737',\n      verification_score: 95.8,\n      sensor_readings: {\n        weight_sensor: 52.8,\n        quality_sensor: 94.2,\n        moisture_sensor: 12.1\n      }\n    },\n    batchReference: {\n      batchId: 'BATCH-2024-001',\n      digesterId: 'DIG-MAIN-001',\n      expectedYield: 42.5,\n      fermentationDays: 28,\n      qualityPrediction: 'excellent'\n    },\n    transportDetails: {\n      vehicleNumber: 'UP-80-AB-1234',\n      driverName: 'मोहन यादव',\n      routeId: 'ROUTE-MTH-001',\n      estimatedDelivery: '2024-01-15T11:00:00Z'\n    },\n    inspector: {\n      name: 'डॉ. सुरेश गुप्ता',\n      id: 'INS-001',\n      signature: true\n    },\n    certificates: ['ORGANIC-CERT-001', 'QUALITY-CERT-001'],\n    verificationPhotos: ['verify1.jpg', 'verify2.jpg'],\n    qrCode: 'QR-TXN-2024-001-ABC123',\n    receiptNumber: 'RCP-2024-000001',\n    gstDetails: {\n      gstNumber: 'GST09ABCDE1234F1Z5',\n      taxAmount: 25.08,\n      cgst: 12.54,\n      sgst: 12.54\n    }\n  },\n  {\n    id: 'TXN-2024-002',\n    farmerId: 'FARM-UP-002',\n    farmerName: 'श्याम लाल यादव',\n    farmerAadhaar: '****-****-3487',\n    location: 'वृंदावन डेयरी फार्म, मथुरा',\n    phoneNumber: '+91 87654 32109',\n    dungType: 'buffalo',\n    measuredWeight: 48.3,\n    qualityGrade: 'gradeB',\n    moistureContent: 15,\n    paymentMethod: 'cash',\n    paymentStatus: 'pending',\n    ratePerKg: 8.5,\n    totalAmount: 410.55,\n    advanceAmount: 200.00,\n    balanceAmount: 210.55,\n    notes: 'भैंस का गोबर - उच्च नाइट्रोजन सामग्री। 12 भैंसों से दैनिक संग्रह। अगली डिलीवरी के समय भुगतान शेष।',\n    photos: ['photo4.jpg', 'photo5.jpg'],\n    measurementDate: '2024-01-14T16:45:00Z',\n    collectionDate: '2024-01-14T17:15:00Z',\n    status: 'payment_pending',\n    qualityVerificationStatus: 'approved',\n    iotVerification: {\n      deviceId: 'IOT-SCALE-002',\n      deviceName: 'Smart Scale Beta-2',\n      timestamp: '2024-01-14T16:47:22Z',\n      temperature: 26.8,\n      humidity: 72,\n      ph_level: 6.9,\n      gas_content: 62.3,\n      rfid_tag: 'RFID-002-DEF456',\n      gps_coordinates: '27.5204, 77.6839',\n      verification_score: 87.5,\n      sensor_readings: {\n        weight_sensor: 48.3,\n        quality_sensor: 85.6,\n        moisture_sensor: 15.2\n      }\n    },\n    batchReference: {\n      batchId: 'BATCH-2024-002',\n      digesterId: 'DIG-SEC-002',\n      expectedYield: 38.2,\n      fermentationDays: 30,\n      qualityPrediction: 'good'\n    },\n    transportDetails: {\n      vehicleNumber: 'UP-80-CD-5678',\n      driverName: 'राम प्रसाद',\n      routeId: 'ROUTE-VRN-001',\n      estimatedDelivery: '2024-01-14T19:00:00Z'\n    },\n    inspector: {\n      name: 'इंजी. अमित सिंह',\n      id: 'INS-002',\n      signature: true\n    },\n    certificates: ['QUALITY-CERT-002'],\n    verificationPhotos: ['verify3.jpg'],\n    qrCode: 'QR-TXN-2024-002-DEF456',\n    receiptNumber: 'RCP-2024-000002',\n    gstDetails: {\n      gstNumber: 'GST09ABCDE1234F1Z5',\n      taxAmount: 20.53,\n      cgst: 10.26,\n      sgst: 10.27\n    }\n  },\n  {\n    id: 'TXN-2024-003',\n    farmerId: 'FARM-RJ-003',\n    farmerName: 'गीता देवी',\n    farmerAadhaar: '****-****-5692',\n    location: 'आदर्श गौशाला, अलवर, राजस्थान',\n    phoneNumber: '+91 96543 21087',\n    dungType: 'mixed',\n    measuredWeight: 65.7,\n    qualityGrade: 'gradeA',\n    moistureContent: 10,\n    paymentMethod: 'bank_transfer',\n    paymentStatus: 'completed',\n    ratePerKg: 10.0,\n    totalAmount: 657.00,\n    advanceAmount: 300.00,\n    balanceAmount: 357.00,\n    notes: 'मिश्रित गोबर - गाय और भैंस का संयोजन। उत्कृष्ट किण्वन गुणवत्ता। सबसे बड़ी दैनिक आपूर्ति। 25 पशुओं से एकत्रित।',\n    photos: ['photo6.jpg', 'photo7.jpg', 'photo8.jpg', 'photo9.jpg'],\n    measurementDate: '2024-01-13T07:15:00Z',\n    collectionDate: '2024-01-13T07:45:00Z',\n    status: 'verified',\n    qualityVerificationStatus: 'approved',\n    iotVerification: {\n      deviceId: 'IOT-SCALE-003',\n      deviceName: 'Smart Scale Gamma-3',\n      timestamp: '2024-01-13T07:17:45Z',\n      temperature: 29.2,\n      humidity: 58,\n      ph_level: 7.4,\n      gas_content: 71.2,\n      rfid_tag: 'RFID-003-GHI789',\n      gps_coordinates: '27.5525, 76.6346',\n      verification_score: 97.2,\n      sensor_readings: {\n        weight_sensor: 65.7,\n        quality_sensor: 96.8,\n        moisture_sensor: 10.3\n      }\n    },\n    batchReference: {\n      batchId: 'BATCH-2024-003',\n      digesterId: 'DIG-MAIN-001',\n      expectedYield: 52.8,\n      fermentationDays: 25,\n      qualityPrediction: 'excellent'\n    },\n    transportDetails: {\n      vehicleNumber: 'RJ-14-EF-9012',\n      driverName: 'लखन सिंह',\n      routeId: 'ROUTE-ALW-001',\n      estimatedDelivery: '2024-01-13T10:30:00Z'\n    },\n    inspector: {\n      name: 'डॉ. प्रिया शर्मा',\n      id: 'INS-003',\n      signature: true\n    },\n    certificates: ['ORGANIC-CERT-002', 'QUALITY-CERT-003', 'ISO-CERT-001'],\n    verificationPhotos: ['verify4.jpg', 'verify5.jpg'],\n    qrCode: 'QR-TXN-2024-003-GHI789',\n    receiptNumber: 'RCP-2024-000003',\n    gstDetails: {\n      gstNumber: 'GST08FGHIJ5678K2A6',\n      taxAmount: 32.85,\n      cgst: 16.42,\n      sgst: 16.43\n    }\n  },\n  {\n    id: 'TXN-2024-004',\n    farmerId: 'FARM-HR-004',\n    farmerName: 'विक्रम सिंह',\n    farmerAadhaar: '****-****-7834',\n    location: 'हरियाणा डेयरी कोऑपरेटिव, गुरुग्राम',\n    phoneNumber: '+91 85432 10976',\n    dungType: 'cow',\n    measuredWeight: 42.1,\n    qualityGrade: 'gradeB',\n    moistureContent: 14,\n    paymentMethod: 'upi',\n    paymentStatus: 'partial',\n    ratePerKg: 8.75,\n    totalAmount: 368.37,\n    advanceAmount: 150.00,\n    balanceAmount: 218.37,\n    notes: 'देसी गाय का गोबर। जैविक चारा उपयोग। मध्यम गुणवत्ता लेकिन स्थिर आपूर्ति। 14 देसी गायों से संग्रह।',\n    photos: ['photo10.jpg', 'photo11.jpg'],\n    measurementDate: '2024-01-12T14:20:00Z',\n    collectionDate: '2024-01-12T15:00:00Z',\n    status: 'quality_check',\n    qualityVerificationStatus: 'pending',\n    iotVerification: {\n      deviceId: 'IOT-SCALE-004',\n      deviceName: 'Smart Scale Delta-4',\n      timestamp: '2024-01-12T14:22:18Z',\n      temperature: 31.1,\n      humidity: 55,\n      ph_level: 6.8,\n      gas_content: 59.7,\n      rfid_tag: 'RFID-004-JKL012',\n      gps_coordinates: '28.4595, 77.0266',\n      verification_score: 82.3,\n      sensor_readings: {\n        weight_sensor: 42.1,\n        quality_sensor: 78.9,\n        moisture_sensor: 14.1\n      }\n    },\n    batchReference: {\n      batchId: 'BATCH-2024-004',\n      digesterId: 'DIG-SEC-003',\n      expectedYield: 32.8,\n      fermentationDays: 32,\n      qualityPrediction: 'average'\n    },\n    transportDetails: {\n      vehicleNumber: 'HR-26-GH-3456',\n      driverName: 'सुरेश कुमार',\n      routeId: 'ROUTE-GGN-001',\n      estimatedDelivery: '2024-01-12T17:30:00Z'\n    },\n    inspector: {\n      name: 'तकनीशियन राज कुमार',\n      id: 'INS-004',\n      signature: false\n    },\n    certificates: ['QUALITY-CERT-004'],\n    verificationPhotos: ['verify6.jpg'],\n    qrCode: 'QR-TXN-2024-004-JKL012',\n    receiptNumber: 'RCP-2024-000004',\n    gstDetails: {\n      gstNumber: 'GST06MNOPQ9012L3B7',\n      taxAmount: 18.42,\n      cgst: 9.21,\n      sgst: 9.21\n    }\n  },\n  {\n    id: 'TXN-2024-005',\n    farmerId: 'FARM-PB-005',\n    farmerName: 'जसप्रीत कौर',\n    farmerAadhaar: '****-****-9156',\n    location: 'पंजाब मिल्क फेडरेशन, लुधियाना',\n    phoneNumber: '+91 74321 09865',\n    dungType: 'buffalo',\n    measuredWeight: 58.9,\n    qualityGrade: 'gradeA',\n    moistureContent: 11,\n    paymentMethod: 'online',\n    paymentStatus: 'completed',\n    ratePerKg: 9.25,\n    totalAmount: 544.82,\n    advanceAmount: 0.00,\n    balanceAmount: 544.82,\n    notes: 'उच्च गुणवत्ता भैंस का गोबर। पंजाब की उन्नत नस्ल से। उत्कृष्ट कार्बन-नाइट्रोजन अनुपात। 20 मुर्रा भैंसों से दैनिक संग्रह।',\n    photos: ['photo12.jpg', 'photo13.jpg', 'photo14.jpg'],\n    measurementDate: '2024-01-11T09:30:00Z',\n    collectionDate: '2024-01-11T10:00:00Z',\n    status: 'verified',\n    qualityVerificationStatus: 'approved',\n    iotVerification: {\n      deviceId: 'IOT-SCALE-005',\n      deviceName: 'Smart Scale Epsilon-5',\n      timestamp: '2024-01-11T09:32:55Z',\n      temperature: 25.6,\n      humidity: 68,\n      ph_level: 7.1,\n      gas_content: 69.8,\n      rfid_tag: 'RFID-005-MNO345',\n      gps_coordinates: '30.9010, 75.8573',\n      verification_score: 93.7,\n      sensor_readings: {\n        weight_sensor: 58.9,\n        quality_sensor: 92.4,\n        moisture_sensor: 11.2\n      }\n    },\n    batchReference: {\n      batchId: 'BATCH-2024-005',\n      digesterId: 'DIG-MAIN-002',\n      expectedYield: 47.3,\n      fermentationDays: 26,\n      qualityPrediction: 'excellent'\n    },\n    transportDetails: {\n      vehicleNumber: 'PB-10-IJ-7890',\n      driverName: 'गुरदीप सिंह',\n      routeId: 'ROUTE-LDH-001',\n      estimatedDelivery: '2024-01-11T12:45:00Z'\n    },\n    inspector: {\n      name: 'डॉ. हरप्रीत कौर',\n      id: 'INS-005',\n      signature: true\n    },\n    certificates: ['ORGANIC-CERT-003', 'QUALITY-CERT-005'],\n    verificationPhotos: ['verify7.jpg', 'verify8.jpg'],\n    qrCode: 'QR-TXN-2024-005-MNO345',\n    receiptNumber: 'RCP-2024-000005',\n    gstDetails: {\n      gstNumber: 'GST03PQRST3456M4C8',\n      taxAmount: 27.24,\n      cgst: 13.62,\n      sgst: 13.62\n    }\n  },\n  {\n    id: 'TXN-2024-006',\n    farmerId: 'FARM-MP-006',\n    farmerName: 'रामेश्वर प्रसाद',\n    farmerAadhaar: '****-****-2479',\n    location: 'मध्यप्रदेश गौशाला, इंदौर',\n    phoneNumber: '+91 93210 87654',\n    dungType: 'cow',\n    measuredWeight: 35.6,\n    qualityGrade: 'gradeC',\n    moistureContent: 18,\n    paymentMethod: 'cash',\n    paymentStatus: 'pending',\n    ratePerKg: 7.50,\n    totalAmount: 267.00,\n    advanceAmount: 100.00,\n    balanceAmount: 167.00,\n    notes: 'मिश्रित नस्ल की गायों से गोबर। कुछ नमी अधिक होने के कारण Grade C। सुधार की संभावना। 10 गायों से संग्रह।',\n    photos: ['photo15.jpg'],\n    measurementDate: '2024-01-10T11:15:00Z',\n    collectionDate: '2024-01-10T11:45:00Z',\n    status: 'pending',\n    qualityVerificationStatus: 'requires_recheck',\n    iotVerification: {\n      deviceId: 'IOT-SCALE-006',\n      deviceName: 'Smart Scale Zeta-6',\n      timestamp: '2024-01-10T11:17:33Z',\n      temperature: 33.2,\n      humidity: 78,\n      ph_level: 6.5,\n      gas_content: 52.4,\n      rfid_tag: 'RFID-006-PQR678',\n      gps_coordinates: '22.7196, 75.8577',\n      verification_score: 68.9,\n      sensor_readings: {\n        weight_sensor: 35.6,\n        quality_sensor: 65.2,\n        moisture_sensor: 18.3\n      }\n    },\n    batchReference: {\n      batchId: 'BATCH-2024-006',\n      digesterId: 'DIG-SEC-004',\n      expectedYield: 26.2,\n      fermentationDays: 35,\n      qualityPrediction: 'below_average'\n    },\n    transportDetails: {\n      vehicleNumber: 'MP-09-KL-2345',\n      driverName: 'अशोक यादव',\n      routeId: 'ROUTE-IND-001',\n      estimatedDelivery: '2024-01-10T14:00:00Z'\n    },\n    inspector: {\n      name: 'तकनीशियन मनोज त्रिवेदी',\n      id: 'INS-006',\n      signature: false\n    },\n    certificates: [],\n    verificationPhotos: ['verify9.jpg'],\n    qrCode: 'QR-TXN-2024-006-PQR678',\n    receiptNumber: 'RCP-2024-000006',\n    gstDetails: {\n      gstNumber: 'GST23STUVW7890N5D9',\n      taxAmount: 13.35,\n      cgst: 6.67,\n      sgst: 6.68\n    }\n  },\n  {\n    id: 'TXN-2024-007',\n    farmerId: 'FARM-GJ-007',\n    farmerName: 'કિશોર ભાઈ પટેલ',\n    farmerAadhaar: '****-****-5813',\n    location: 'અમુલ ડેરી કોઓપરેટિવ, આણંદ, ગુજરાત',\n    phoneNumber: '+91 82109 76543',\n    dungType: 'mixed',\n    measuredWeight: 71.4,\n    qualityGrade: 'gradeA',\n    moistureContent: 9,\n    paymentMethod: 'bank_transfer',\n    paymentStatus: 'completed',\n    ratePerKg: 10.50,\n    totalAmount: 749.70,\n    advanceAmount: 400.00,\n    balanceAmount: 349.70,\n    notes: 'ગુજરાતની શ્રેષ્ઠ ગુણવત્તાનું મિશ્રિત ગોબર। અમુલ ડેરીના ઉચ્ચ ધોરણ પ્રમાણે. 30 પશુઓથી દૈનિક સંગ્રહ। સર્વોત્તમ કિણ્વન ક્ષમતા।',\n    photos: ['photo16.jpg', 'photo17.jpg', 'photo18.jpg', 'photo19.jpg'],\n    measurementDate: '2024-01-09T06:45:00Z',\n    collectionDate: '2024-01-09T07:15:00Z',\n    status: 'verified',\n    qualityVerificationStatus: 'approved',\n    iotVerification: {\n      deviceId: 'IOT-SCALE-007',\n      deviceName: 'Smart Scale Eta-7',\n      timestamp: '2024-01-09T06:47:42Z',\n      temperature: 27.8,\n      humidity: 62,\n      ph_level: 7.6,\n      gas_content: 74.1,\n      rfid_tag: 'RFID-007-STU901',\n      gps_coordinates: '22.5645, 72.9289',\n      verification_score: 98.5,\n      sensor_readings: {\n        weight_sensor: 71.4,\n        quality_sensor: 97.8,\n        moisture_sensor: 9.1\n      }\n    },\n    batchReference: {\n      batchId: 'BATCH-2024-007',\n      digesterId: 'DIG-MAIN-003',\n      expectedYield: 58.6,\n      fermentationDays: 24,\n      qualityPrediction: 'outstanding'\n    },\n    transportDetails: {\n      vehicleNumber: 'GJ-01-MN-4567',\n      driverName: 'રવિ ભાઈ શાહ',\n      routeId: 'ROUTE-AND-001',\n      estimatedDelivery: '2024-01-09T09:30:00Z'\n    },\n    inspector: {\n      name: 'ડૉ. જયશ્રી પટેલ',\n      id: 'INS-007',\n      signature: true\n    },\n    certificates: ['ORGANIC-CERT-004', 'QUALITY-CERT-006', 'ISO-CERT-002', 'AMUL-CERT-001'],\n    verificationPhotos: ['verify10.jpg', 'verify11.jpg'],\n    qrCode: 'QR-TXN-2024-007-STU901',\n    receiptNumber: 'RCP-2024-000007',\n    gstDetails: {\n      gstNumber: 'GST24VWXYZ1234O6E0',\n      taxAmount: 37.48,\n      cgst: 18.74,\n      sgst: 18.74\n    }\n  },\n  {\n    id: 'TXN-2024-008',\n    farmerId: 'FARM-TN-008',\n    farmerName: 'முருகன் செட்டியார்',\n    farmerAadhaar: '****-****-7926',\n    location: 'தமிழ்நாடு பால் கூட்டுறவு, கோயம்புத்தூர்',\n    phoneNumber: '+91 76543 21098',\n    dungType: 'buffalo',\n    measuredWeight: 46.8,\n    qualityGrade: 'gradeB',\n    moistureContent: 16,\n    paymentMethod: 'upi',\n    paymentStatus: 'completed',\n    ratePerKg: 8.25,\n    totalAmount: 386.10,\n    advanceAmount: 150.00,\n    balanceAmount: 236.10,\n    notes: 'தமிழ்நாட்டு எருமையின் சாணம். நல்ல தரம். தென்னிந்திய காலநிலைக்கு ஏற்ற கிளர்வித்தல் குணங்கள். 16 எருமைகளில் இருந்து சேகரிப்பு.',\n    photos: ['photo20.jpg', 'photo21.jpg'],\n    measurementDate: '2024-01-08T15:30:00Z',\n    collectionDate: '2024-01-08T16:00:00Z',\n    status: 'completed',\n    qualityVerificationStatus: 'approved',\n    iotVerification: {\n      deviceId: 'IOT-SCALE-008',\n      deviceName: 'Smart Scale Theta-8',\n      timestamp: '2024-01-08T15:32:28Z',\n      temperature: 32.4,\n      humidity: 75,\n      ph_level: 6.7,\n      gas_content: 61.9,\n      rfid_tag: 'RFID-008-VWX234',\n      gps_coordinates: '11.0168, 76.9558',\n      verification_score: 84.6,\n      sensor_readings: {\n        weight_sensor: 46.8,\n        quality_sensor: 82.3,\n        moisture_sensor: 16.1\n      }\n    },\n    batchReference: {\n      batchId: 'BATCH-2024-008',\n      digesterId: 'DIG-SOUTH-001',\n      expectedYield: 36.4,\n      fermentationDays: 29,\n      qualityPrediction: 'good'\n    },\n    transportDetails: {\n      vehicleNumber: 'TN-38-OP-6789',\n      driverName: 'குமார் ராஜு',\n      routeId: 'ROUTE-CBE-001',\n      estimatedDelivery: '2024-01-08T18:15:00Z'\n    },\n    inspector: {\n      name: 'இன்ஜி. வெங்கடேஷ்',\n      id: 'INS-008',\n      signature: true\n    },\n    certificates: ['QUALITY-CERT-007', 'SOUTH-CERT-001'],\n    verificationPhotos: ['verify12.jpg'],\n    qrCode: 'QR-TXN-2024-008-VWX234',\n    receiptNumber: 'RCP-2024-000008',\n    gstDetails: {\n      gstNumber: 'GST33ABCDE5678P7F1',\n      taxAmount: 19.30,\n      cgst: 9.65,\n      sgst: 9.65\n    }\n  },\n  {\n    id: 'TXN-2024-009',\n    farmerId: 'FARM-KA-009',\n    farmerName: 'ಶ್ರೀನಿವಾಸ ರೆಡ್ಡಿ',\n    farmerAadhaar: '****-****-4051',\n    location: 'ಕರ್ನಾಟಕ ಮಿಲ್ಕ್ ಫೆಡರೇಶನ್, ಬೆಂಗಳೂರು',\n    phoneNumber: '+91 65432 10987',\n    dungType: 'cow',\n    measuredWeight: 39.7,\n    qualityGrade: 'gradeA',\n    moistureContent: 13,\n    paymentMethod: 'online',\n    paymentStatus: 'partial',\n    ratePerKg: 9.00,\n    totalAmount: 357.30,\n    advanceAmount: 200.00,\n    balanceAmount: 157.30,\n    notes: 'ಕರ್ನಾಟಕದ ಸ್ಥಳೀಯ ಹಸುಗಳ ಸಗಣಿ। ಉತ್ತಮ ಗುಣಮಟ್ಟ ಮತ್ತು ಜೈವಿಕ ಸಂಯೋಜನೆ। 12 ಸ್ಥಳೀಯ ಹಸುಗಳಿಂದ ಸಂಗ್ರಹ।',\n    photos: ['photo22.jpg', 'photo23.jpg'],\n    measurementDate: '2024-01-07T10:00:00Z',\n    collectionDate: '2024-01-07T10:30:00Z',\n    status: 'payment_pending',\n    qualityVerificationStatus: 'approved',\n    iotVerification: {\n      deviceId: 'IOT-SCALE-009',\n      deviceName: 'Smart Scale Iota-9',\n      timestamp: '2024-01-07T10:02:15Z',\n      temperature: 24.9,\n      humidity: 69,\n      ph_level: 7.3,\n      gas_content: 66.7,\n      rfid_tag: 'RFID-009-YZA567',\n      gps_coordinates: '12.9716, 77.5946',\n      verification_score: 91.2,\n      sensor_readings: {\n        weight_sensor: 39.7,\n        quality_sensor: 89.8,\n        moisture_sensor: 13.2\n      }\n    },\n    batchReference: {\n      batchId: 'BATCH-2024-009',\n      digesterId: 'DIG-SOUTH-002',\n      expectedYield: 31.8,\n      fermentationDays: 27,\n      qualityPrediction: 'excellent'\n    },\n    transportDetails: {\n      vehicleNumber: 'KA-03-QR-8901',\n      driverName: 'ರಮೇಶ್ ಕುಮಾರ್',\n      routeId: 'ROUTE-BLR-001',\n      estimatedDelivery: '2024-01-07T13:00:00Z'\n    },\n    inspector: {\n      name: 'ಡಾ. ಪ್ರಮೋದ್ ಶೆಟ್ಟಿ',\n      id: 'INS-009',\n      signature: true\n    },\n    certificates: ['ORGANIC-CERT-005', 'QUALITY-CERT-008'],\n    verificationPhotos: ['verify13.jpg', 'verify14.jpg'],\n    qrCode: 'QR-TXN-2024-009-YZA567',\n    receiptNumber: 'RCP-2024-000009',\n    gstDetails: {\n      gstNumber: 'GST29FGHIJ9012Q8G2',\n      taxAmount: 17.86,\n      cgst: 8.93,\n      sgst: 8.93\n    }\n  },\n  {\n    id: 'TXN-2024-010',\n    farmerId: 'FARM-WB-010',\n    farmerName: 'অমিত চক্রবর্তী',\n    farmerAadhaar: '****-****-8394',\n    location: 'পশ্চিমবঙ্গ দুগ্ধ সমবায়, কলকাতা',\n    phoneNumber: '+91 54321 09876',\n    dungType: 'mixed',\n    measuredWeight: 55.2,\n    qualityGrade: 'gradeB',\n    moistureContent: 17,\n    paymentMethod: 'bank_transfer',\n    paymentStatus: 'completed',\n    ratePerKg: 8.00,\n    totalAmount: 441.60,\n    advanceAmount: 250.00,\n    balanceAmount: 191.60,\n    notes: 'পশ্চিমবঙ্গের মিশ্র গোবর। ভালো গুণমান এবং আর্দ্রতা কিছুটা বেশি। ১৮টি গরু ও মহিষ থেকে সংগ্রহ। বর্ষাকালের কারণে কিছুটা আর্দ্রতা।',\n    photos: ['photo24.jpg', 'photo25.jpg', 'photo26.jpg'],\n    measurementDate: '2024-01-06T13:45:00Z',\n    collectionDate: '2024-01-06T14:15:00Z',\n    status: 'completed',\n    qualityVerificationStatus: 'approved',\n    iotVerification: {\n      deviceId: 'IOT-SCALE-010',\n      deviceName: 'Smart Scale Kappa-10',\n      timestamp: '2024-01-06T13:47:51Z',\n      temperature: 30.5,\n      humidity: 82,\n      ph_level: 6.9,\n      gas_content: 58.3,\n      rfid_tag: 'RFID-010-BCD890',\n      gps_coordinates: '22.5726, 88.3639',\n      verification_score: 79.4,\n      sensor_readings: {\n        weight_sensor: 55.2,\n        quality_sensor: 76.8,\n        moisture_sensor: 17.3\n      }\n    },\n    batchReference: {\n      batchId: 'BATCH-2024-010',\n      digesterId: 'DIG-EAST-001',\n      expectedYield: 42.1,\n      fermentationDays: 31,\n      qualityPrediction: 'average'\n    },\n    transportDetails: {\n      vehicleNumber: 'WB-06-ST-2345',\n      driverName: 'সুভাষ দাস',\n      routeId: 'ROUTE-KOL-001',\n      estimatedDelivery: '2024-01-06T16:30:00Z'\n    },\n    inspector: {\n      name: 'ইঞ্জি. রাজীব ঘোষ',\n      id: 'INS-010',\n      signature: true\n    },\n    certificates: ['QUALITY-CERT-009'],\n    verificationPhotos: ['verify15.jpg'],\n    qrCode: 'QR-TXN-2024-010-BCD890',\n    receiptNumber: 'RCP-2024-000010',\n    gstDetails: {\n      gstNumber: 'GST19KLMNO3456R9H3',\n      taxAmount: 22.08,\n      cgst: 11.04,\n      sgst: 11.04\n    }\n  }\n];\n\n// Mock functions with enhanced logging\nconst createTransaction = async (data: Partial<TransactionData>) => {\n  console.log('Creating enhanced transaction with IoT verification:', data);\n  // Simulate API call with comprehensive transaction data\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      console.log('Transaction created with ID:', `TXN-${Date.now()}`);\n      resolve(data);\n    }, 1500);\n  });\n};\n\ninterface TransactionEntryProps {\n  languageContext?: {\n    language: 'hi' | 'en';\n    t: (key: string) => string;\n  };\n}\n\nconst translations = {\n  en: {\n    title: 'Transaction Entry',\n    subtitle: 'IoT weight capture and photo proof documentation',\n    newTransaction: 'New Transaction',\n    iotWeightCapture: 'IoT Weight Capture',\n    photoProof: 'Photo Proof',\n    transactionHistory: 'Transaction History',\n    farmerDetails: 'Farmer Details',\n    weightMeasurement: 'Weight Measurement',\n    paymentDetails: 'Payment Details',\n    farmerId: 'Farmer ID',\n    farmerName: 'Farmer Name',\n    farmerAadhaar: 'Aadhaar (Masked)',\n    location: 'Location',\n    phoneNumber: 'Phone Number',\n    dungType: 'Dung Type',\n    measurementDate: 'Measurement Date',\n    collectionDate: 'Collection Date',\n    measuredWeight: 'Measured Weight (kg)',\n    qualityGrade: 'Quality Grade',\n    moistureContent: 'Moisture Content (%)',\n    paymentMethod: 'Payment Method',\n    paymentStatus: 'Payment Status',\n    ratePerKg: 'Rate per kg (₹)',\n    totalAmount: 'Total Amount (₹)',\n    advanceAmount: 'Advance Amount (₹)',\n    balanceAmount: 'Balance Amount (₹)',\n    notes: 'Notes',\n    captureWeight: 'Capture Weight from IoT',\n    takePhoto: 'Take Photo',\n    uploadPhoto: 'Upload Photo',\n    saveTransaction: 'Save Transaction',\n    weighingInProgress: 'Weighing in Progress...',\n    weightCaptured: 'Weight Captured Successfully',\n    photoRequired: 'Photo proof is required',\n    transactionSaved: 'Transaction saved successfully',\n    cash: 'Cash',\n    online: 'Online',\n    bank_transfer: 'Bank Transfer',\n    upi: 'UPI',\n    pending: 'Pending',\n    partial: 'Partial',\n    completed: 'Completed',\n    failed: 'Failed',\n    cancelled: 'Cancelled',\n    verified: 'Verified',\n    quality_check: 'Quality Check',\n    payment_pending: 'Payment Pending',\n    gradeA: 'Grade A (Premium)',\n    gradeB: 'Grade B (Standard)',\n    gradeC: 'Grade C (Basic)',\n    cow: 'Cow Dung',\n    buffalo: 'Buffalo Dung',\n    mixed: 'Mixed Dung',\n    connecting: 'Connecting to IoT scale...',\n    connected: 'Connected to IoT scale',\n    connectionFailed: 'Failed to connect to IoT scale',\n    retryConnection: 'Retry Connection',\n    manualEntry: 'Manual Entry',\n    autoCapture: 'Auto Capture',\n    calibrateScale: 'Calibrate Scale',\n    viewDetails: 'View Details',\n    printReceipt: 'Print Receipt',\n    status: 'Status',\n    amount: 'Amount',\n    date: 'Date',\n    actions: 'Actions',\n    iotVerification: 'IoT Verification',\n    batchReference: 'Batch Reference',\n    transportDetails: 'Transport Details',\n    inspector: 'Inspector',\n    certificates: 'Certificates',\n    qrCode: 'QR Code',\n    receiptNumber: 'Receipt Number',\n    gstDetails: 'GST Details',\n    deviceId: 'Device ID',\n    temperature: 'Temperature (°C)',\n    humidity: 'Humidity (%)',\n    phLevel: 'pH Level',\n    gasContent: 'Gas Content (%)',\n    rfidTag: 'RFID Tag',\n    gpsCoordinates: 'GPS Coordinates',\n    verificationScore: 'Verification Score',\n    batchId: 'Batch ID',\n    digesterId: 'Digester ID',\n    expectedYield: 'Expected Yield (L)',\n    fermentationDays: 'Fermentation Days',\n    qualityPrediction: 'Quality Prediction',\n    vehicleNumber: 'Vehicle Number',\n    driverName: 'Driver Name',\n    routeId: 'Route ID',\n    estimatedDelivery: 'Estimated Delivery',\n    gstNumber: 'GST Number',\n    taxAmount: 'Tax Amount (₹)',\n    cgst: 'CGST (₹)',\n    sgst: 'SGST (₹)',\n    approved: 'Approved',\n    rejected: 'Rejected',\n    requires_recheck: 'Requires Recheck'\n  },\n  hi: {\n    title: 'लेन-देन प्रविष्टि',\n    subtitle: 'IoT वजन कैप्चर और फोटो प्रूफ दस्तावेजीकरण',\n    newTransaction: 'नया लेन-देन',\n    iotWeightCapture: 'IoT वजन कैप्चर',\n    photoProof: 'फोटो प्रूफ',\n    transactionHistory: 'लेन-देन इतिहास',\n    farmerDetails: 'किसान विवरण',\n    weightMeasurement: 'वजन माप',\n    paymentDetails: 'भुगतान विवरण',\n    farmerId: 'किसान आईडी',\n    farmerName: 'किसान का नाम',\n    farmerAadhaar: 'आधार (मास्क्ड)',\n    location: 'स्थान',\n    phoneNumber: 'फोन नंबर',\n    dungType: 'गोबर का प्रकार',\n    measurementDate: 'माप की तारीख',\n    collectionDate: 'संग्रह की तारीख',\n    measuredWeight: 'मापा गया वजन (किलो)',\n    qualityGrade: 'गुणवत्ता ग्रेड',\n    moistureContent: 'नमी की मात्रा (%)',\n    paymentMethod: 'भुगतान विधि',\n    paymentStatus: 'भुगतान स्थिति',\n    ratePerKg: 'प्रति किलो दर (₹)',\n    totalAmount: 'कुल राशि (₹)',\n    advanceAmount: 'अग्रिम राशि (₹)',\n    balanceAmount: 'शेष राशि (₹)',\n    notes: 'टिप्पणियां',\n    captureWeight: 'IoT से वजन कैप्चर करें',\n    takePhoto: 'फोटो लें',\n    uploadPhoto: 'फोटो अपलोड करें',\n    saveTransaction: 'लेन-देन सेव करें',\n    weighingInProgress: 'तौलना प्रगति में...',\n    weightCaptured: 'वजन सफलतापूर्वक कैप्चर किया गया',\n    photoRequired: 'फोटो प्रूफ आवश्यक है',\n    transactionSaved: 'लेन-देन सफलतापूर्वक सेव किया गया',\n    cash: 'नकद',\n    online: 'ऑनलाइन',\n    bank_transfer: 'बैंक ट्रांसफर',\n    upi: 'UPI',\n    pending: 'लंबित',\n    partial: 'आंशिक',\n    completed: 'पूर्ण',\n    failed: 'असफल',\n    cancelled: 'रद्द',\n    verified: 'सत्यापित',\n    quality_check: 'गुणवत्ता जांच',\n    payment_pending: 'भुगतान लंबित',\n    gradeA: 'ग्रेड A (प्रीमियम)',\n    gradeB: 'ग्रेड B (मानक)',\n    gradeC: 'ग्रेड C (बेसिक)',\n    cow: 'गाय का गोबर',\n    buffalo: 'भैंस का गोबर',\n    mixed: 'मिश्रित गोबर',\n    connecting: 'IoT स्केल से कनेक्ट हो रहा है...',\n    connected: 'IoT स्केल से कनेक्ट हो गया',\n    connectionFailed: 'IoT स्केल से कनेक्ट नहीं हो सका',\n    retryConnection: 'फिर से कोशिश करें',\n    manualEntry: 'मैन्युअल एंट्री',\n    autoCapture: 'ऑटो कैप्चर',\n    calibrateScale: 'स्केल कैलिब्रेट करें',\n    viewDetails: 'विवरण देखें',\n    printReceipt: 'रसीद प्रिंट करें',\n    status: 'स्थिति',\n    amount: 'राशि',\n    date: 'तारीख',\n    actions: 'कार्य',\n    iotVerification: 'IoT सत्यापन',\n    batchReference: 'बैच संदर्भ',\n    transportDetails: 'परिवहन विवरण',\n    inspector: 'निरीक्षक',\n    certificates: 'प्रमाणपत्र',\n    qrCode: 'QR कोड',\n    receiptNumber: 'रसीद संख्या',\n    gstDetails: 'GST विवरण',\n    deviceId: 'डिवाइस आईडी',\n    temperature: 'तापमान (°C)',\n    humidity: 'आर्द्रता (%)',\n    phLevel: 'pH स्तर',\n    gasContent: 'गैस सामग्री (%)',\n    rfidTag: 'RFID टैग',\n    gpsCoordinates: 'GPS निर्देशांक',\n    verificationScore: 'सत्यापन स्कोर',\n    batchId: 'बैच आईडी',\n    digesterId: 'डाइजेस्टर आईडी',\n    expectedYield: 'अपेक्षित उत्पादन (L)',\n    fermentationDays: 'किण्वन दिन',\n    qualityPrediction: 'गुणवत्ता भविष्यवाणी',\n    vehicleNumber: 'वाहन संख्या',\n    driverName: 'चालक का नाम',\n    routeId: 'मार्ग आईडी',\n    estimatedDelivery: 'अनुमानित डिलीवरी',\n    gstNumber: 'GST संख्या',\n    taxAmount: 'कर राशि (₹)',\n    cgst: 'CGST (₹)',\n    sgst: 'SGST (₹)',\n    approved: 'अनुमोदित',\n    rejected: 'अस्वीकृत',\n    requires_recheck: 'पुनः जांच आवश्यक'\n  }\n};\n\nconst getStatusColor = (status: TransactionStatus): string => {\n  switch (status) {\n    case 'pending':\n      return 'bg-yellow-100 text-yellow-800';\n    case 'completed':\n      return 'bg-green-100 text-green-800';\n    case 'cancelled':\n      return 'bg-red-100 text-red-800';\n    case 'verified':\n      return 'bg-blue-100 text-blue-800';\n    case 'quality_check':\n      return 'bg-orange-100 text-orange-800';\n    case 'payment_pending':\n      return 'bg-purple-100 text-purple-800';\n    default:\n      return 'bg-gray-100 text-gray-800';\n  }\n};\n\nconst getPaymentStatusColor = (status: PaymentStatus): string => {\n  switch (status) {\n    case 'completed':\n      return 'bg-green-100 text-green-800';\n    case 'partial':\n      return 'bg-yellow-100 text-yellow-800';\n    case 'pending':\n      return 'bg-orange-100 text-orange-800';\n    case 'failed':\n      return 'bg-red-100 text-red-800';\n    case 'cancelled':\n      return 'bg-gray-100 text-gray-800';\n    default:\n      return 'bg-gray-100 text-gray-800';\n  }\n};\n\nconst getQualityStatusColor = (status: QualityVerificationStatus): string => {\n  switch (status) {\n    case 'approved':\n      return 'bg-green-100 text-green-800';\n    case 'rejected':\n      return 'bg-red-100 text-red-800';\n    case 'pending':\n      return 'bg-yellow-100 text-yellow-800';\n    case 'requires_recheck':\n      return 'bg-orange-100 text-orange-800';\n    default:\n      return 'bg-gray-100 text-gray-800';\n  }\n};\n\n// Enhanced IoT Weight Capture Component\nconst IoTWeightCapture: React.FC<{\n  onWeightCaptured: (weight: number) => void;\n  t: (key: string) => string;\n}> = ({ onWeightCaptured, t }) => {\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [isConnected, setIsConnected] = useState(false);\n  const [isWeighing, setIsWeighing] = useState(false);\n  const [currentWeight, setCurrentWeight] = useState(0);\n  const [connectionError, setConnectionError] = useState(false);\n  const [iotData, setIotData] = useState<Partial<IoTVerificationData> | null>(null);\n\n  const simulateConnection = useCallback(() => {\n    setIsConnecting(true);\n    setConnectionError(false);\n\n    setTimeout(() => {\n      setIsConnecting(false);\n      const success = Math.random() > 0.2; // 80% success rate\n      if (success) {\n        setIsConnected(true);\n\n        // Simulate IoT device data\n        const mockIotData: Partial<IoTVerificationData> = {\n          deviceId: `IOT-SCALE-${Math.floor(Math.random() * 10) + 1}`.padStart(3, '0'),\n          deviceName: 'Smart Scale Alpha-Pro',\n          timestamp: new Date().toISOString(),\n          temperature: 25 + Math.random() * 10,\n          humidity: 55 + Math.random() * 25,\n          ph_level: 6.5 + Math.random() * 1.5,\n          gas_content: 55 + Math.random() * 20,\n          verification_score: 80 + Math.random() * 20\n        };\n        setIotData(mockIotData);\n\n        // Simulate real-time weight updates\n        const interval = setInterval(() => {\n          setCurrentWeight(prev => {\n            const newWeight = 45 + Math.random() * 10; // Simulate weight between 45-55 kg\n            return Math.round(newWeight * 10) / 10;\n          });\n        }, 500);\n\n        return () => clearInterval(interval);\n      } else {\n        setConnectionError(true);\n      }\n    }, 2000);\n  }, []);\n\n  const captureWeight = () => {\n    setIsWeighing(true);\n    setTimeout(() => {\n      setIsWeighing(false);\n      onWeightCaptured(currentWeight);\n    }, 1500);\n  };\n\n  const simulateManualWeight = () => {\n    const manualWeight = 48.5 + Math.random() * 5; // Random weight between 48.5-53.5\n    onWeightCaptured(Math.round(manualWeight * 10) / 10);\n  };\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          <Scale className=\"w-5 h-5\" />\n          {t('iotWeightCapture')}\n        </CardTitle>\n        <CardDescription>\n          Connect to IoT scale for automatic weight measurement with verification\n        </CardDescription>\n      </CardHeader>\n      <CardContent className=\"space-y-4\">\n        {!isConnected && !connectionError && (\n          <div className=\"text-center space-y-4\">\n            <div className=\"w-16 h-16 mx-auto bg-gray-100 rounded-full flex items-center justify-center\">\n              <Scale className=\"w-8 h-8 text-gray-400\" />\n            </div>\n            <Button\n              onClick={simulateConnection}\n              disabled={isConnecting}\n              className=\"w-full\"\n            >\n              {isConnecting ? (\n                <>\n                  <RefreshCw className=\"w-4 h-4 mr-2 animate-spin\" />\n                  {t('connecting')}\n                </>\n              ) : (\n                'Connect to IoT Scale'\n              )}\n            </Button>\n          </div>\n        )}\n\n        {connectionError && (\n          <div className=\"text-center space-y-4\">\n            <Alert>\n              <AlertCircle className=\"h-4 w-4\" />\n              <AlertDescription>\n                {t('connectionFailed')}\n              </AlertDescription>\n            </Alert>\n            <div className=\"space-y-2\">\n              <Button\n                onClick={simulateConnection}\n                variant=\"outline\"\n                className=\"w-full\"\n              >\n                {t('retryConnection')}\n              </Button>\n              <Button\n                onClick={simulateManualWeight}\n                variant=\"secondary\"\n                className=\"w-full\"\n              >\n                {t('manualEntry')}\n              </Button>\n            </div>\n          </div>\n        )}\n\n        {isConnected && (\n          <div className=\"space-y-4\">\n            <div className=\"text-center\">\n              <div className=\"text-sm text-green-600 mb-2\">\n                <CheckCircle className=\"w-4 h-4 inline mr-1\" />\n                {t('connected')}\n              </div>\n              <div className=\"text-4xl font-bold text-blue-600\">\n                {currentWeight.toFixed(1)} kg\n              </div>\n              <div className=\"text-sm text-muted-foreground\">\n                Real-time weight reading\n              </div>\n            </div>\n\n            {/* IoT Device Information */}\n            {iotData && (\n              <div className=\"grid grid-cols-2 gap-2 text-xs bg-blue-50 p-3 rounded\">\n                <div>Device: {iotData.deviceName}</div>\n                <div>Score: {iotData.verification_score?.toFixed(1)}%</div>\n                <div>Temp: {iotData.temperature?.toFixed(1)}°C</div>\n                <div>Humidity: {iotData.humidity?.toFixed(0)}%</div>\n                <div>pH: {iotData.ph_level?.toFixed(1)}</div>\n                <div>Gas: {iotData.gas_content?.toFixed(1)}%</div>\n              </div>\n            )}\n\n            {isWeighing && (\n              <div className=\"space-y-2\">\n                <Progress value={75} className=\"w-full\" />\n                <div className=\"text-center text-sm text-muted-foreground\">\n                  {t('weighingInProgress')}\n                </div>\n              </div>\n            )}\n\n            <div className=\"grid grid-cols-2 gap-2\">\n              <Button\n                onClick={captureWeight}\n                disabled={isWeighing}\n                className=\"w-full\"\n              >\n                {isWeighing ? (\n                  <>\n                    <Clock className=\"w-4 h-4 mr-2\" />\n                    Capturing...\n                  </>\n                ) : (\n                  <>\n                    <Weight className=\"w-4 h-4 mr-2\" />\n                    {t('captureWeight')}\n                  </>\n                )}\n              </Button>\n              <Button\n                onClick={() => {/* Calibrate scale */}}\n                variant=\"outline\"\n                className=\"w-full\"\n              >\n                {t('calibrateScale')}\n              </Button>\n            </div>\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\n// Enhanced Photo Capture Component\nconst PhotoCapture: React.FC<{\n  onPhotoAdded: (photo: string) => void;\n  photos: string[];\n  t: (key: string) => string;\n}> = ({ onPhotoAdded, photos, t }) => {\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  const handleFileUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        const result = e.target?.result as string;\n        onPhotoAdded(result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const simulatePhotoCapture = () => {\n    // Simulate camera photo with placeholder\n    const placeholderPhoto = `data:image/svg+xml;base64,${btoa(`\n      <svg width=\"300\" height=\"200\" xmlns=\"http://www.w3.org/2000/svg\">\n        <rect width=\"100%\" height=\"100%\" fill=\"#f3f4f6\"/>\n        <text x=\"50%\" y=\"40%\" text-anchor=\"middle\" dy=\".3em\" font-family=\"Arial\" font-size=\"14\" fill=\"#6b7280\">\n          Dung Sample Photo ${photos.length + 1}\n        </text>\n        <text x=\"50%\" y=\"60%\" text-anchor=\"middle\" dy=\".3em\" font-family=\"Arial\" font-size=\"10\" fill=\"#9ca3af\">\n          Timestamp: ${new Date().toLocaleString()}\n        </text>\n      </svg>\n    `)}`;\n    onPhotoAdded(placeholderPhoto);\n  };\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          <Camera className=\"w-5 h-5\" />\n          {t('photoProof')}\n        </CardTitle>\n        <CardDescription>\n          Capture photos of dung samples for quality verification and compliance\n        </CardDescription>\n      </CardHeader>\n      <CardContent className=\"space-y-4\">\n        <div className=\"grid grid-cols-2 gap-2\">\n          <Button\n            onClick={simulatePhotoCapture}\n            variant=\"outline\"\n            className=\"w-full\"\n          >\n            <Camera className=\"w-4 h-4 mr-2\" />\n            {t('takePhoto')}\n          </Button>\n          <Button\n            onClick={() => fileInputRef.current?.click()}\n            variant=\"outline\"\n            className=\"w-full\"\n          >\n            <Upload className=\"w-4 h-4 mr-2\" />\n            {t('uploadPhoto')}\n          </Button>\n        </div>\n\n        <input\n          ref={fileInputRef}\n          type=\"file\"\n          accept=\"image/*\"\n          onChange={handleFileUpload}\n          className=\"hidden\"\n        />\n\n        {photos.length > 0 && (\n          <div>\n            <div className=\"text-sm font-medium mb-2\">\n              Captured Photos ({photos.length})\n            </div>\n            <div className=\"grid grid-cols-2 gap-2\">\n              {photos.map((photo, index) => (\n                <div key={index} className=\"relative\">\n                  <img\n                    src={photo}\n                    alt={`Sample ${index + 1}`}\n                    className=\"w-full h-24 object-cover rounded border\"\n                  />\n                  <div className=\"absolute top-1 right-1\">\n                    <Badge variant=\"secondary\" className=\"text-xs\">\n                      {index + 1}\n                    </Badge>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {photos.length === 0 && (\n          <div className=\"text-center py-8 text-muted-foreground\">\n            <FileImage className=\"w-12 h-12 mx-auto mb-2\" />\n            <p className=\"text-sm\">No photos captured yet</p>\n            <p className=\"text-xs\">{t('photoRequired')}</p>\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport const TransactionEntry: React.FC<TransactionEntryProps> = ({ languageContext }) => {\n  const [activeTab, setActiveTab] = useState('new');\n\n  // Enhanced form state with additional fields\n  const [formData, setFormData] = useState({\n    farmerId: '',\n    farmerName: '',\n    farmerAadhaar: '',\n    location: '',\n    phoneNumber: '',\n    dungType: 'cow',\n    measuredWeight: 0,\n    qualityGrade: 'gradeB',\n    moistureContent: 15,\n    paymentMethod: 'cash' as PaymentMethod,\n    paymentStatus: 'pending' as PaymentStatus,\n    ratePerKg: 8.50,\n    advanceAmount: 0,\n    notes: ''\n  });\n\n  const [capturedPhotos, setCapturedPhotos] = useState<string[]>([]);\n  const [isSaving, setIsSaving] = useState(false);\n  const [saveSuccess, setSaveSuccess] = useState(false);\n\n  const lang = languageContext?.language || 'en';\n  const t = (key: string): string => {\n    return languageContext?.t(key) || translations[lang][key as keyof typeof translations[typeof lang]] || key;\n  };\n\n  const handleWeightCaptured = (weight: number) => {\n    setFormData(prev => ({ ...prev, measuredWeight: weight }));\n  };\n\n  const handlePhotoAdded = (photo: string) => {\n    setCapturedPhotos(prev => [...prev, photo]);\n  };\n\n  const calculateTotalAmount = () => {\n    return formData.measuredWeight * formData.ratePerKg;\n  };\n\n  const calculateBalanceAmount = () => {\n    return calculateTotalAmount() - formData.advanceAmount;\n  };\n\n  const handleSaveTransaction = async () => {\n    if (formData.measuredWeight === 0) {\n      alert('Please capture weight first');\n      return;\n    }\n\n    if (capturedPhotos.length === 0) {\n      alert(t('photoRequired'));\n      return;\n    }\n\n    setIsSaving(true);\n\n    try {\n      const transactionData: Partial<TransactionData> = {\n        ...formData,\n        totalAmount: calculateTotalAmount(),\n        balanceAmount: calculateBalanceAmount(),\n        photos: capturedPhotos,\n        measurementDate: new Date().toISOString(),\n        collectionDate: new Date().toISOString(),\n        status: 'pending' as TransactionStatus,\n        qualityVerificationStatus: 'pending' as QualityVerificationStatus\n      };\n\n      await createTransaction(transactionData);\n\n      setSaveSuccess(true);\n      setTimeout(() => {\n        setSaveSuccess(false);\n        // Reset form\n        setFormData({\n          farmerId: '',\n          farmerName: '',\n          farmerAadhaar: '',\n          location: '',\n          phoneNumber: '',\n          dungType: 'cow',\n          measuredWeight: 0,\n          qualityGrade: 'gradeB',\n          moistureContent: 15,\n          paymentMethod: 'cash' as PaymentMethod,\n          paymentStatus: 'pending' as PaymentStatus,\n          ratePerKg: 8.50,\n          advanceAmount: 0,\n          notes: ''\n        });\n        setCapturedPhotos([]);\n      }, 2000);\n\n    } catch (error) {\n      console.error('Failed to save transaction:', error);\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n  const recentTransactions = transactions.slice(0, 10);\n  const pendingTransactions = transactions.filter(t => t.status === 'pending' || t.status === 'payment_pending');\n  const todaysTransactions = transactions.filter(t =>\n    new Date(t.measurementDate).toDateString() === new Date().toDateString()\n  );\n  const verifiedTransactions = transactions.filter(t => t.status === 'verified');\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between -mt-6\">\n        <div>\n          <h1 className=\"text-3xl font-bold tracking-tight\">{t('title')}</h1>\n          <p className=\"text-muted-foreground\">{t('subtitle')}</p>\n        </div>\n        {saveSuccess && (\n          <Alert className=\"w-auto\">\n            <CheckCircle className=\"h-4 w-4\" />\n            <AlertDescription>\n              {t('transactionSaved')}\n            </AlertDescription>\n          </Alert>\n        )}\n      </div>\n\n      {/* Enhanced Statistics Cards */}\n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Today's Transactions</CardTitle>\n            <Calendar className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{todaysTransactions.length}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              {todaysTransactions.reduce((sum, t) => sum + t.measuredWeight, 0).toFixed(1)} kg total\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Pending Verification</CardTitle>\n            <Clock className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{pendingTransactions.length}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              Awaiting approval\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Verified Transactions</CardTitle>\n            <Verified className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{verifiedTransactions.length}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              IoT verified entries\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Total Value</CardTitle>\n            <TrendingUp className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">\n              ₹{transactions.reduce((sum, t) => sum + t.totalAmount, 0).toFixed(2)}\n            </div>\n            <p className=\"text-xs text-muted-foreground\">\n              All transactions\n            </p>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Main Content */}\n      <Tabs value={activeTab} onValueChange={setActiveTab}>\n        <TabsList className=\"grid w-full grid-cols-3\">\n          <TabsTrigger value=\"new\">{t('newTransaction')}</TabsTrigger>\n          <TabsTrigger value=\"iot\">{t('iotWeightCapture')}</TabsTrigger>\n          <TabsTrigger value=\"history\">{t('transactionHistory')}</TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"new\" className=\"space-y-6\">\n          <div className=\"grid gap-6 lg:grid-cols-2\">\n            {/* Enhanced Farmer Details */}\n            <Card>\n              <CardHeader>\n                <CardTitle>{t('farmerDetails')}</CardTitle>\n                <CardDescription>\n                  Basic farmer information and contact details\n                </CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"farmerId\">{t('farmerId')}</Label>\n                    <Input\n                      id=\"farmerId\"\n                      value={formData.farmerId}\n                      onChange={(e) => setFormData(prev => ({ ...prev, farmerId: e.target.value }))}\n                      placeholder=\"FARM-001\"\n                    />\n                  </div>\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"farmerName\">{t('farmerName')}</Label>\n                    <Input\n                      id=\"farmerName\"\n                      value={formData.farmerName}\n                      onChange={(e) => setFormData(prev => ({ ...prev, farmerName: e.target.value }))}\n                      placeholder=\"राम कुमार\"\n                    />\n                  </div>\n                </div>\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"farmerAadhaar\">{t('farmerAadhaar')}</Label>\n                  <Input\n                    id=\"farmerAadhaar\"\n                    value={formData.farmerAadhaar}\n                    onChange={(e) => setFormData(prev => ({ ...prev, farmerAadhaar: e.target.value }))}\n                    placeholder=\"****-****-1234\"\n                  />\n                </div>\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"location\">{t('location')}</Label>\n                  <Input\n                    id=\"location\"\n                    value={formData.location}\n                    onChange={(e) => setFormData(prev => ({ ...prev, location: e.target.value }))}\n                    placeholder=\"Village, District\"\n                  />\n                </div>\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"phoneNumber\">{t('phoneNumber')}</Label>\n                  <Input\n                    id=\"phoneNumber\"\n                    value={formData.phoneNumber}\n                    onChange={(e) => setFormData(prev => ({ ...prev, phoneNumber: e.target.value }))}\n                    placeholder=\"+91 98765 43210\"\n                  />\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Weight Measurement */}\n            <Card>\n              <CardHeader>\n                <CardTitle>{t('weightMeasurement')}</CardTitle>\n                <CardDescription>\n                  Dung quality and weight measurement details\n                </CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"dungType\">{t('dungType')}</Label>\n                    <Select value={formData.dungType} onValueChange={(value) => setFormData(prev => ({ ...prev, dungType: value }))}>\n                      <SelectTrigger>\n                        <SelectValue />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"cow\">{t('cow')}</SelectItem>\n                        <SelectItem value=\"buffalo\">{t('buffalo')}</SelectItem>\n                        <SelectItem value=\"mixed\">{t('mixed')}</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"qualityGrade\">{t('qualityGrade')}</Label>\n                    <Select value={formData.qualityGrade} onValueChange={(value) => setFormData(prev => ({ ...prev, qualityGrade: value }))}>\n                      <SelectTrigger>\n                        <SelectValue />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"gradeA\">{t('gradeA')}</SelectItem>\n                        <SelectItem value=\"gradeB\">{t('gradeB')}</SelectItem>\n                        <SelectItem value=\"gradeC\">{t('gradeC')}</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                </div>\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"measuredWeight\">{t('measuredWeight')}</Label>\n                    <Input\n                      id=\"measuredWeight\"\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={formData.measuredWeight}\n                      onChange={(e) => setFormData(prev => ({ ...prev, measuredWeight: parseFloat(e.target.value) || 0 }))}\n                      placeholder=\"0.0\"\n                    />\n                    {formData.measuredWeight > 0 && (\n                      <div className=\"text-sm text-green-600\">\n                        <CheckCircle className=\"w-4 h-4 inline mr-1\" />\n                        {t('weightCaptured')}\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"moistureContent\">{t('moistureContent')}</Label>\n                    <Input\n                      id=\"moistureContent\"\n                      type=\"number\"\n                      value={formData.moistureContent}\n                      onChange={(e) => setFormData(prev => ({ ...prev, moistureContent: parseInt(e.target.value) || 0 }))}\n                      placeholder=\"15\"\n                    />\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Enhanced Payment Details */}\n            <Card>\n              <CardHeader>\n                <CardTitle>{t('paymentDetails')}</CardTitle>\n                <CardDescription>\n                  Payment method and amount calculation\n                </CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"paymentMethod\">{t('paymentMethod')}</Label>\n                    <Select value={formData.paymentMethod} onValueChange={(value) => setFormData(prev => ({ ...prev, paymentMethod: value as PaymentMethod }))}>\n                      <SelectTrigger>\n                        <SelectValue />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"cash\">{t('cash')}</SelectItem>\n                        <SelectItem value=\"online\">{t('online')}</SelectItem>\n                        <SelectItem value=\"bank_transfer\">{t('bank_transfer')}</SelectItem>\n                        <SelectItem value=\"upi\">{t('upi')}</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"paymentStatus\">{t('paymentStatus')}</Label>\n                    <Select value={formData.paymentStatus} onValueChange={(value) => setFormData(prev => ({ ...prev, paymentStatus: value as PaymentStatus }))}>\n                      <SelectTrigger>\n                        <SelectValue />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"pending\">{t('pending')}</SelectItem>\n                        <SelectItem value=\"partial\">{t('partial')}</SelectItem>\n                        <SelectItem value=\"completed\">{t('completed')}</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                </div>\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"ratePerKg\">{t('ratePerKg')}</Label>\n                  <Input\n                    id=\"ratePerKg\"\n                    type=\"number\"\n                    step=\"0.50\"\n                    value={formData.ratePerKg}\n                    onChange={(e) => setFormData(prev => ({ ...prev, ratePerKg: parseFloat(e.target.value) || 0 }))}\n                  />\n                </div>\n                <div className=\"grid grid-cols-3 gap-4\">\n                  <div className=\"space-y-2\">\n                    <Label>{t('totalAmount')}</Label>\n                    <div className=\"text-lg font-bold text-green-600\">\n                      ₹{calculateTotalAmount().toFixed(2)}\n                    </div>\n                  </div>\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"advanceAmount\">{t('advanceAmount')}</Label>\n                    <Input\n                      id=\"advanceAmount\"\n                      type=\"number\"\n                      step=\"0.50\"\n                      value={formData.advanceAmount}\n                      onChange={(e) => setFormData(prev => ({ ...prev, advanceAmount: parseFloat(e.target.value) || 0 }))}\n                    />\n                  </div>\n                  <div className=\"space-y-2\">\n                    <Label>{t('balanceAmount')}</Label>\n                    <div className=\"text-lg font-bold text-blue-600\">\n                      ₹{calculateBalanceAmount().toFixed(2)}\n                    </div>\n                  </div>\n                </div>\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"notes\">{t('notes')}</Label>\n                  <Textarea\n                    id=\"notes\"\n                    value={formData.notes}\n                    onChange={(e) => setFormData(prev => ({ ...prev, notes: e.target.value }))}\n                    placeholder=\"Additional notes...\"\n                    rows={2}\n                  />\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Photo Capture */}\n            <PhotoCapture\n              onPhotoAdded={handlePhotoAdded}\n              photos={capturedPhotos}\n              t={t}\n            />\n          </div>\n\n          {/* Save Button */}\n          <div className=\"flex justify-end\">\n            <Button\n              onClick={handleSaveTransaction}\n              disabled={isSaving || formData.measuredWeight === 0 || capturedPhotos.length === 0}\n              className=\"w-48\"\n            >\n              {isSaving ? (\n                <>\n                  <RefreshCw className=\"w-4 h-4 mr-2 animate-spin\" />\n                  Saving...\n                </>\n              ) : (\n                <>\n                  <Save className=\"w-4 h-4 mr-2\" />\n                  {t('saveTransaction')}\n                </>\n              )}\n            </Button>\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"iot\">\n          <IoTWeightCapture\n            onWeightCaptured={handleWeightCaptured}\n            t={t}\n          />\n        </TabsContent>\n\n        <TabsContent value=\"history\">\n          <Card>\n            <CardHeader>\n              <CardTitle>{t('transactionHistory')}</CardTitle>\n              <CardDescription>\n                Comprehensive transaction records with IoT verification and batch tracking\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-4\">\n                {recentTransactions.map((transaction) => (\n                  <div key={transaction.id} className=\"border rounded-lg p-4 space-y-3\">\n                    {/* Transaction Header */}\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"space-y-1\">\n                        <div className=\"flex items-center gap-4\">\n                          <h4 className=\"font-semibold\">{transaction.farmerName}</h4>\n                          <Badge className={getStatusColor(transaction.status)}>\n                            {t(transaction.status)}\n                          </Badge>\n                          <Badge className={getPaymentStatusColor(transaction.paymentStatus)}>\n                            {t(transaction.paymentStatus)}\n                          </Badge>\n                          <Badge className={getQualityStatusColor(transaction.qualityVerificationStatus)}>\n                            {t(transaction.qualityVerificationStatus)}\n                          </Badge>\n                        </div>\n                        <div className=\"flex items-center gap-4 text-sm text-muted-foreground\">\n                          <span className=\"flex items-center gap-1\">\n                            <User className=\"w-3 h-3\" />\n                            {transaction.farmerId}\n                          </span>\n                          <span className=\"flex items-center gap-1\">\n                            <MapPin className=\"w-3 h-3\" />\n                            {transaction.location}\n                          </span>\n                          <span className=\"flex items-center gap-1\">\n                            <Weight className=\"w-3 h-3\" />\n                            {transaction.measuredWeight} kg\n                          </span>\n                          <span className=\"flex items-center gap-1\">\n                            <Calendar className=\"w-3 h-3\" />\n                            {new Date(transaction.measurementDate).toLocaleDateString()}\n                          </span>\n                        </div>\n                      </div>\n                      <div className=\"text-right\">\n                        <div className=\"text-lg font-bold\">₹{transaction.totalAmount.toFixed(2)}</div>\n                        <div className=\"text-sm text-muted-foreground\">\n                          {transaction.receiptNumber}\n                        </div>\n                      </div>\n                    </div>\n\n                    {/* IoT Verification Info */}\n                    <div className=\"grid grid-cols-2 lg:grid-cols-4 gap-4 bg-blue-50 p-3 rounded text-xs\">\n                      <div>\n                        <div className=\"font-medium flex items-center gap-1\">\n                          <Smartphone className=\"w-3 h-3\" />\n                          IoT Device\n                        </div>\n                        <div>{transaction.iotVerification.deviceName}</div>\n                        <div className=\"text-muted-foreground\">{transaction.iotVerification.deviceId}</div>\n                      </div>\n                      <div>\n                        <div className=\"font-medium flex items-center gap-1\">\n                          <Shield className=\"w-3 h-3\" />\n                          Verification Score\n                        </div>\n                        <div className=\"text-green-600 font-bold\">\n                          {transaction.iotVerification.verification_score.toFixed(1)}%\n                        </div>\n                      </div>\n                      <div>\n                        <div className=\"font-medium\">Batch Reference</div>\n                        <div>{transaction.batchReference.batchId}</div>\n                        <div className=\"text-muted-foreground\">\n                          Yield: {transaction.batchReference.expectedYield}L\n                        </div>\n                      </div>\n                      <div>\n                        <div className=\"font-medium flex items-center gap-1\">\n                          <QrCode className=\"w-3 h-3\" />\n                          QR Code\n                        </div>\n                        <div className=\"font-mono\">{transaction.qrCode}</div>\n                      </div>\n                    </div>\n\n                    {/* Additional Details */}\n                    <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-4 text-xs\">\n                      <div>\n                        <div className=\"font-medium mb-1\">Transport Details</div>\n                        <div>{transaction.transportDetails.vehicleNumber}</div>\n                        <div>{transaction.transportDetails.driverName}</div>\n                      </div>\n                      <div>\n                        <div className=\"font-medium mb-1\">Quality Inspector</div>\n                        <div>{transaction.inspector.name}</div>\n                        <div className=\"flex items-center gap-1\">\n                          {transaction.inspector.signature ? (\n                            <CheckCircle className=\"w-3 h-3 text-green-600\" />\n                          ) : (\n                            <Clock className=\"w-3 h-3 text-orange-600\" />\n                          )}\n                          {transaction.inspector.signature ? 'Signed' : 'Pending Signature'}\n                        </div>\n                      </div>\n                      <div>\n                        <div className=\"font-medium mb-1\">Certificates</div>\n                        <div className=\"flex flex-wrap gap-1\">\n                          {transaction.certificates.map((cert, index) => (\n                            <Badge key={index} variant=\"outline\" className=\"text-xs\">\n                              {cert}\n                            </Badge>\n                          ))}\n                        </div>\n                      </div>\n                    </div>\n\n                    {/* Action Buttons */}\n                    <div className=\"flex items-center gap-2 pt-2\">\n                      <Button size=\"sm\" variant=\"outline\">\n                        <Eye className=\"w-4 h-4 mr-1\" />\n                        {t('viewDetails')}\n                      </Button>\n                      <Button size=\"sm\" variant=\"outline\">\n                        <Receipt className=\"w-4 h-4 mr-1\" />\n                        {t('printReceipt')}\n                      </Button>\n                      <Button size=\"sm\" variant=\"outline\">\n                        <Download className=\"w-4 h-4 mr-1\" />\n                        Download\n                      </Button>\n                    </div>\n                  </div>\n                ))}\n                {recentTransactions.length === 0 && (\n                  <div className=\"text-center py-8 text-muted-foreground\">\n                    <FileImage className=\"w-12 h-12 mx-auto mb-2\" />\n                    <p>No transactions found</p>\n                  </div>\n                )}\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n};\n\nexport default TransactionEntry;","import * as React from \"react\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nexport interface SwitchProps\r\n  extends Omit<React.ButtonHTMLAttributes<HTMLButtonElement>, 'onChange'> {\r\n  checked?: boolean\r\n  onCheckedChange?: (checked: boolean) => void\r\n}\r\n\r\nconst Switch = React.forwardRef<HTMLButtonElement, SwitchProps>(\r\n  ({ className, checked, onCheckedChange, disabled, ...props }, ref) => {\r\n    const [internalChecked, setInternalChecked] = React.useState(false)\r\n    const isChecked = checked !== undefined ? checked : internalChecked\r\n    const handleChange = onCheckedChange || setInternalChecked\r\n\r\n    return (\r\n      <button\r\n        type=\"button\"\r\n        role=\"switch\"\r\n        aria-checked={isChecked}\r\n        ref={ref}\r\n        className={cn(\r\n          \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50\",\r\n          isChecked ? \"bg-primary\" : \"bg-input\",\r\n          className\r\n        )}\r\n        disabled={disabled}\r\n        onClick={() => handleChange(!isChecked)}\r\n        {...props}\r\n      >\r\n        <span\r\n          className={cn(\r\n            \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform\",\r\n            isChecked ? \"translate-x-5\" : \"translate-x-0\"\r\n          )}\r\n        />\r\n      </button>\r\n    )\r\n  }\r\n)\r\nSwitch.displayName = \"Switch\"\r\n\r\nexport { Switch }","import React, { useState, useEffect } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '../../components/ui/card';\nimport { Badge } from '../../components/ui/badge';\nimport { Button } from '../../components/ui/button';\nimport { Input } from '../../components/ui/input';\nimport { Label } from '../../components/ui/label';\nimport { Textarea } from '../../components/ui/textarea';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '../../components/ui/select';\nimport { Switch } from '../../components/ui/switch';\nimport { Dialog, DialogContent, DialogDescription, DialogFooter, DialogHeader, DialogTitle, DialogTrigger } from '../../components/ui/dialog';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '../../components/ui/tabs';\nimport { Alert, AlertDescription } from '../../components/ui/alert';\nimport {\n  Bell,\n  AlertTriangle,\n  CheckCircle,\n  Clock,\n  Settings,\n  Volume2,\n  VolumeX,\n  Thermometer,\n  Gauge,\n  Zap,\n  Trash2,\n  Eye,\n  Plus,\n  Filter,\n  RotateCcw,\n  BellRing,\n  Info,\n  AlertCircle,\n  XCircle,\n  Play,\n  Pause,\n  RefreshCw,\n  Shield,\n  Wrench,\n  Activity,\n  Wifi,\n  WifiOff\n} from 'lucide-react';\n\n// Mock types for AlertsManagement\ntype AlertLevel = 'critical' | 'warning' | 'info' | 'success';\ntype AlertType = 'temperature' | 'pressure' | 'methane' | 'gasProduction' | 'efficiency' | 'connectivity' | 'safety' | 'maintenance';\n\ninterface AlertData {\n  id: string;\n  level: AlertLevel;\n  type: AlertType;\n  title: string;\n  message: string;\n  digesterId: string;\n  timestamp: string;\n  status: 'active' | 'acknowledged' | 'resolved';\n  value?: string;\n  severity?: number;\n  location?: string;\n  assignedTo?: string;\n  estimatedResolution?: string;\n}\n\ninterface ThresholdConfig {\n  type: AlertType;\n  enabled: boolean;\n  minThreshold: number;\n  maxThreshold: number;\n  unit?: string;\n  description?: string;\n}\n\n// Enhanced Mock data with comprehensive Indian biogas operations alerts\nconst alerts: AlertData[] = [\n  {\n    id: 'A001',\n    level: 'warning',\n    type: 'temperature',\n    title: 'High Temperature Alert - Digester 001',\n    message: 'Temperature exceeds optimal range at 42°C. Recommended range: 35-40°C. Automatic cooling system activated.',\n    digesterId: 'DIG-001',\n    timestamp: new Date().toISOString(),\n    status: 'active',\n    value: '42.3°C',\n    severity: 3,\n    location: 'Gokul Gaushala Main Unit',\n    assignedTo: 'राजेश कुमार',\n    estimatedResolution: '2 hours'\n  },\n  {\n    id: 'A002',\n    level: 'critical',\n    type: 'pressure',\n    title: 'Critical Pressure Level - Buffalo Unit',\n    message: 'Pressure levels dangerously high at 2.1 kPa. Immediate attention required. Safety valve may trigger.',\n    digesterId: 'DIG-003',\n    timestamp: new Date(Date.now() - 3600000).toISOString(),\n    status: 'active',\n    value: '2.1 kPa',\n    severity: 5,\n    location: 'Yamuna Riverside Buffalo Unit',\n    assignedTo: 'सुनील यादव',\n    estimatedResolution: 'Immediate'\n  },\n  {\n    id: 'A003',\n    level: 'warning',\n    type: 'methane',\n    title: 'Low Methane Content - Secondary Unit',\n    message: 'Methane levels dropped to 58%. Expected range: 60-70%. Check feedstock quality and pH levels.',\n    digesterId: 'DIG-002',\n    timestamp: new Date(Date.now() - 7200000).toISOString(),\n    status: 'active',\n    value: '58.2%',\n    severity: 3,\n    location: 'Vrindavan Organic Farm',\n    assignedTo: 'अमित शर्मा',\n    estimatedResolution: '4 hours'\n  },\n  {\n    id: 'A004',\n    level: 'critical',\n    type: 'connectivity',\n    title: 'IoT Sensor Connection Lost',\n    message: 'Temperature and pressure sensors offline for Digester 005. Last reading 45 minutes ago. Manual monitoring required.',\n    digesterId: 'DIG-005',\n    timestamp: new Date(Date.now() - 2700000).toISOString(),\n    status: 'active',\n    value: 'Offline 45min',\n    severity: 4,\n    location: 'Experimental Unit',\n    assignedTo: 'तकनीकी टीम',\n    estimatedResolution: '1 hour'\n  },\n  {\n    id: 'A005',\n    level: 'warning',\n    type: 'gasProduction',\n    title: 'Reduced Gas Production - Main Unit',\n    message: 'Daily production down 15% from average. Current: 128 m³/day, Expected: 150 m³/day. Check feeding schedule.',\n    digesterId: 'DIG-001',\n    timestamp: new Date(Date.now() - 10800000).toISOString(),\n    status: 'active',\n    value: '128 m³/day',\n    severity: 2,\n    location: 'Gokul Gaushala Main Unit',\n    assignedTo: 'गीता देवी',\n    estimatedResolution: '6 hours'\n  },\n  {\n    id: 'A006',\n    level: 'info',\n    type: 'maintenance',\n    title: 'Scheduled Maintenance Due - Mixed Feed Unit',\n    message: 'Routine maintenance scheduled for Digester 004 tomorrow at 10:00 AM. Expected downtime: 4 hours.',\n    digesterId: 'DIG-004',\n    timestamp: new Date(Date.now() - 14400000).toISOString(),\n    status: 'active',\n    value: 'Tomorrow 10:00 AM',\n    severity: 1,\n    location: 'Mixed Feed Processing',\n    assignedTo: 'रखरखाव टीम',\n    estimatedResolution: '24 hours'\n  },\n  {\n    id: 'A007',\n    level: 'critical',\n    type: 'safety',\n    title: 'Gas Leak Detection - Safety Alert',\n    message: 'Potential gas leak detected near Digester 002. Area evacuated. Emergency response team notified. Safety protocols activated.',\n    digesterId: 'DIG-002',\n    timestamp: new Date(Date.now() - 18000000).toISOString(),\n    status: 'active',\n    value: 'Level 3 Alert',\n    severity: 5,\n    location: 'Vrindavan Organic Farm',\n    assignedTo: 'आपातकालीन टीम',\n    estimatedResolution: 'Immediate'\n  },\n  {\n    id: 'A008',\n    level: 'warning',\n    type: 'efficiency',\n    title: 'Efficiency Drop - Buffalo Unit',\n    message: 'Overall efficiency decreased to 78%. Normal range: 85-92%. Consider feedstock optimization and pH adjustment.',\n    digesterId: 'DIG-003',\n    timestamp: new Date(Date.now() - 21600000).toISOString(),\n    status: 'acknowledged',\n    value: '78%',\n    severity: 3,\n    location: 'Yamuna Riverside Buffalo Unit',\n    assignedTo: 'विकास कुमार',\n    estimatedResolution: '8 hours'\n  },\n  {\n    id: 'A009',\n    level: 'warning',\n    type: 'temperature',\n    title: 'Low Temperature - Experimental Unit',\n    message: 'Temperature dropped to 32°C due to ambient weather. Heating system activated. Monitoring bacterial activity.',\n    digesterId: 'DIG-005',\n    timestamp: new Date(Date.now() - 25200000).toISOString(),\n    status: 'resolved',\n    value: '32.1°C',\n    severity: 2,\n    location: 'Experimental Unit',\n    assignedTo: 'लक्ष्मी यादव',\n    estimatedResolution: 'Resolved'\n  },\n  {\n    id: 'A010',\n    level: 'info',\n    type: 'gasProduction',\n    title: 'Optimal Production - Main Unit',\n    message: 'Excellent gas production recorded. 165 m³/day achieved - 10% above target. Feeding schedule optimized.',\n    digesterId: 'DIG-001',\n    timestamp: new Date(Date.now() - 28800000).toISOString(),\n    status: 'resolved',\n    value: '165 m³/day',\n    severity: 1,\n    location: 'Gokul Gaushala Main Unit',\n    assignedTo: 'राजेश कुमार',\n    estimatedResolution: 'Resolved'\n  },\n  {\n    id: 'A011',\n    level: 'critical',\n    type: 'pressure',\n    title: 'Pressure Relief Valve Triggered',\n    message: 'Automatic pressure relief activated on Digester 004. System stabilized. Check for blockages in gas outlet lines.',\n    digesterId: 'DIG-004',\n    timestamp: new Date(Date.now() - 32400000).toISOString(),\n    status: 'acknowledged',\n    value: '2.3 kPa',\n    severity: 4,\n    location: 'Mixed Feed Processing',\n    assignedTo: 'सुरेश चंद्र',\n    estimatedResolution: '3 hours'\n  },\n  {\n    id: 'A012',\n    level: 'warning',\n    type: 'maintenance',\n    title: 'Cleaning Cycle Overdue - Secondary Unit',\n    message: 'Digester cleaning overdue by 3 days. Efficiency may be impacted. Schedule cleaning within 24 hours.',\n    digesterId: 'DIG-002',\n    timestamp: new Date(Date.now() - 36000000).toISOString(),\n    status: 'active',\n    value: '3 days overdue',\n    severity: 3,\n    location: 'Vrindavan Organic Farm',\n    assignedTo: 'रखरखाव टीम',\n    estimatedResolution: '12 hours'\n  },\n  {\n    id: 'A013',\n    level: 'info',\n    type: 'connectivity',\n    title: 'IoT System Upgrade Complete',\n    message: 'Sensor firmware updated successfully on all digesters. New features: enhanced accuracy and predictive maintenance alerts.',\n    digesterId: 'ALL',\n    timestamp: new Date(Date.now() - 43200000).toISOString(),\n    status: 'resolved',\n    value: 'v2.1.3',\n    severity: 1,\n    location: 'All Units',\n    assignedTo: 'तकनीकी टीम',\n    estimatedResolution: 'Completed'\n  },\n  {\n    id: 'A014',\n    level: 'warning',\n    type: 'methane',\n    title: 'Methane Purity Concern - Mixed Feed',\n    message: 'Methane purity at 61% with higher CO2 content. Check feedstock composition and pH balance. Consider additives.',\n    digesterId: 'DIG-004',\n    timestamp: new Date(Date.now() - 46800000).toISOString(),\n    status: 'acknowledged',\n    value: '61.3%',\n    severity: 3,\n    location: 'Mixed Feed Processing',\n    assignedTo: 'अमित शर्मा',\n    estimatedResolution: '6 hours'\n  },\n  {\n    id: 'A015',\n    level: 'critical',\n    type: 'safety',\n    title: 'Emergency Shutdown - Buffalo Unit',\n    message: 'Emergency shutdown triggered due to multiple sensor failures. Unit isolated. Technical team dispatched for inspection.',\n    digesterId: 'DIG-003',\n    timestamp: new Date(Date.now() - 50400000).toISOString(),\n    status: 'resolved',\n    value: 'System Isolated',\n    severity: 5,\n    location: 'Yamuna Riverside Buffalo Unit',\n    assignedTo: 'आपातकालीन टीम',\n    estimatedResolution: 'Resolved'\n  }\n];\n\nconst thresholds: ThresholdConfig[] = [\n  {\n    type: 'temperature',\n    enabled: true,\n    minThreshold: 35,\n    maxThreshold: 40,\n    unit: '°C',\n    description: 'Optimal temperature range for methanogenic bacteria activity'\n  },\n  {\n    type: 'pressure',\n    enabled: true,\n    minThreshold: 0.8,\n    maxThreshold: 1.8,\n    unit: 'kPa',\n    description: 'Safe operating pressure range for biogas digester'\n  },\n  {\n    type: 'methane',\n    enabled: true,\n    minThreshold: 60,\n    maxThreshold: 75,\n    unit: '%',\n    description: 'Methane content percentage in biogas output'\n  },\n  {\n    type: 'gasProduction',\n    enabled: true,\n    minThreshold: 100,\n    maxThreshold: 200,\n    unit: 'm³/day',\n    description: 'Daily biogas production volume'\n  },\n  {\n    type: 'efficiency',\n    enabled: true,\n    minThreshold: 80,\n    maxThreshold: 95,\n    unit: '%',\n    description: 'Overall digester efficiency percentage'\n  },\n  {\n    type: 'connectivity',\n    enabled: true,\n    minThreshold: 95,\n    maxThreshold: 100,\n    unit: '%',\n    description: 'IoT sensor connectivity and data availability'\n  },\n  {\n    type: 'safety',\n    enabled: true,\n    minThreshold: 0,\n    maxThreshold: 0,\n    unit: 'level',\n    description: 'Safety alert threshold (0 = no tolerance for safety issues)'\n  },\n  {\n    type: 'maintenance',\n    enabled: true,\n    minThreshold: 0,\n    maxThreshold: 7,\n    unit: 'days',\n    description: 'Maintenance schedule adherence (max 7 days overdue)'\n  }\n];\n\n// Mock functions\nconst resolveAlert = async (alertId: string) => {\n  console.log('Resolving alert:', alertId);\n  return Promise.resolve();\n};\n\nconst dismissAlert = async (alertId: string) => {\n  console.log('Dismissing alert:', alertId);\n  return Promise.resolve();\n};\n\nconst updateThreshold = async (config: ThresholdConfig) => {\n  console.log('Updating threshold:', config);\n  return Promise.resolve();\n};\n\ninterface AlertsManagementProps {\n  languageContext?: {\n    language: 'hi' | 'en';\n    t: (key: string) => string;\n  };\n}\n\nconst translations = {\n  en: {\n    title: 'Alerts Management',\n    subtitle: 'Real-time monitoring and threshold management',\n    activeAlerts: 'Active Alerts',\n    alertHistory: 'Alert History',\n    thresholdSettings: 'Threshold Settings',\n    notificationSettings: 'Notification Settings',\n    createAlert: 'Create Alert',\n    critical: 'Critical',\n    warning: 'Warning',\n    info: 'Info',\n    success: 'Success',\n    temperature: 'Temperature',\n    pressure: 'Pressure',\n    methane: 'Methane Level',\n    gasProduction: 'Gas Production',\n    efficiency: 'Efficiency',\n    connectivity: 'Connectivity',\n    safety: 'Safety',\n    maintenance: 'Maintenance',\n    digesterId: 'Digester ID',\n    alertType: 'Alert Type',\n    level: 'Level',\n    message: 'Message',\n    timestamp: 'Timestamp',\n    status: 'Status',\n    actions: 'Actions',\n    resolve: 'Resolve',\n    dismiss: 'Dismiss',\n    viewDetails: 'View Details',\n    soundAlerts: 'Sound Alerts',\n    emailNotifications: 'Email Notifications',\n    smsNotifications: 'SMS Notifications',\n    pushNotifications: 'Push Notifications',\n    acknowledgeAll: 'Acknowledge All',\n    clearHistory: 'Clear History',\n    exportAlerts: 'Export Alerts',\n    minThreshold: 'Minimum Threshold',\n    maxThreshold: 'Maximum Threshold',\n    enabled: 'Enabled',\n    disabled: 'Disabled',\n    acknowledged: 'Acknowledged',\n    resolved: 'Resolved',\n    active: 'Active',\n    temperatureThresholds: 'Temperature Thresholds',\n    pressureThresholds: 'Pressure Thresholds',\n    methaneThresholds: 'Methane Thresholds',\n    productionThresholds: 'Production Thresholds',\n    alertCount: 'Total Alerts',\n    criticalCount: 'Critical Alerts',\n    warningCount: 'Warning Alerts',\n    resolvedToday: 'Resolved Today',\n    alertFrequency: 'Alert Frequency',\n    responseTime: 'Avg Response Time',\n    systemStatus: 'System Status',\n    monitoringActive: 'Monitoring Active',\n    allSystems: 'All Systems Operational',\n    someIssues: 'Some Issues Detected',\n    criticalIssues: 'Critical Issues Present',\n    location: 'Location',\n    assignedTo: 'Assigned To',\n    estimatedResolution: 'Est. Resolution',\n    severity: 'Severity',\n    value: 'Current Value',\n    unit: 'Unit',\n    description: 'Description'\n  },\n  hi: {\n    title: 'अलर्ट प्रबंधन',\n    subtitle: 'रियल-टाइम निगरानी और थ्रेशोल्ड प्रबंधन',\n    activeAlerts: 'सक्रिय अलर्ट',\n    alertHistory: 'अलर्ट इतिहास',\n    thresholdSettings: 'थ्रेशोल्ड सेटिंग्स',\n    notificationSettings: 'नोटिफिकेशन सेटिंग्स',\n    createAlert: 'अलर्ट बनाएं',\n    critical: 'गंभीर',\n    warning: 'चेतावनी',\n    info: 'जानकारी',\n    success: 'सफलता',\n    temperature: 'तापमान',\n    pressure: 'दबाव',\n    methane: 'मीथेन स्तर',\n    gasProduction: 'गैस उत्पादन',\n    efficiency: 'दक्षता',\n    connectivity: 'कनेक्टिविटी',\n    safety: 'सुरक्षा',\n    maintenance: 'रखरखाव',\n    digesterId: 'डाइजेस्टर आईडी',\n    alertType: 'अलर्ट प्रकार',\n    level: 'स्तर',\n    message: 'संदेश',\n    timestamp: 'समयमुहर',\n    status: 'स्थिति',\n    actions: 'कार्य',\n    resolve: 'हल करें',\n    dismiss: 'खारिज करें',\n    viewDetails: 'विवरण देखें',\n    soundAlerts: 'ध्वनि अलर्ट',\n    emailNotifications: 'ईमेल नोटिफिकेशन',\n    smsNotifications: 'SMS नोटिफिकेशन',\n    pushNotifications: 'पुश नोटिफिकेशन',\n    acknowledgeAll: 'सभी स्वीकार करें',\n    clearHistory: 'इतिहास साफ करें',\n    exportAlerts: 'अलर्ट निर्यात करें',\n    minThreshold: 'न्यूनतम थ्रेशोल्ड',\n    maxThreshold: 'अधिकतम थ्रेशोल्ड',\n    enabled: 'सक्षम',\n    disabled: 'अक्षम',\n    acknowledged: 'स्वीकृत',\n    resolved: 'हल किया गया',\n    active: 'सक्रिय',\n    temperatureThresholds: 'तापमान थ्रेशोल्ड',\n    pressureThresholds: 'दबाव थ्रेशोल्ड',\n    methaneThresholds: 'मीथेन थ्रेशोल्ड',\n    productionThresholds: 'उत्पादन थ्रेशोल्ड',\n    alertCount: 'कुल अलर्ट',\n    criticalCount: 'गंभीर अलर्ट',\n    warningCount: 'चेतावनी अलर्ट',\n    resolvedToday: 'आज हल किए गए',\n    alertFrequency: 'अलर्ट आवृत्ति',\n    responseTime: 'औसत प्रतिक्रिया समय',\n    systemStatus: 'सिस्टम स्थिति',\n    monitoringActive: 'निगरानी सक्रिय',\n    allSystems: 'सभी सिस्टम चालू',\n    someIssues: 'कुछ समस्याएं मिलीं',\n    criticalIssues: 'गंभीर समस्याएं मौजूद',\n    location: 'स्थान',\n    assignedTo: 'सौंपा गया',\n    estimatedResolution: 'अनुमानित समाधान',\n    severity: 'गंभीरता',\n    value: 'वर्तमान मान',\n    unit: 'इकाई',\n    description: 'विवरण'\n  }\n};\n\nconst getAlertLevelColor = (level: AlertLevel): string => {\n  switch (level) {\n    case 'critical':\n      return 'bg-red-100 text-red-800';\n    case 'warning':\n      return 'bg-yellow-100 text-yellow-800';\n    case 'info':\n      return 'bg-blue-100 text-blue-800';\n    case 'success':\n      return 'bg-green-100 text-green-800';\n    default:\n      return 'bg-gray-100 text-gray-800';\n  }\n};\n\nconst getAlertIcon = (level: AlertLevel) => {\n  switch (level) {\n    case 'critical':\n      return <AlertTriangle className=\"w-4 h-4 text-red-500\" />;\n    case 'warning':\n      return <AlertCircle className=\"w-4 h-4 text-yellow-500\" />;\n    case 'info':\n      return <Info className=\"w-4 h-4 text-blue-500\" />;\n    case 'success':\n      return <CheckCircle className=\"w-4 h-4 text-green-500\" />;\n    default:\n      return <Bell className=\"w-4 h-4 text-gray-500\" />;\n  }\n};\n\nconst getTypeIcon = (type: AlertType) => {\n  switch (type) {\n    case 'temperature':\n      return <Thermometer className=\"w-4 h-4\" />;\n    case 'pressure':\n      return <Gauge className=\"w-4 h-4\" />;\n    case 'methane':\n      return <Zap className=\"w-4 h-4\" />;\n    case 'gasProduction':\n      return <Activity className=\"w-4 h-4\" />;\n    case 'efficiency':\n      return <CheckCircle className=\"w-4 h-4\" />;\n    case 'connectivity':\n      return <Wifi className=\"w-4 h-4\" />;\n    case 'safety':\n      return <Shield className=\"w-4 h-4\" />;\n    case 'maintenance':\n      return <Wrench className=\"w-4 h-4\" />;\n    default:\n      return <Bell className=\"w-4 h-4\" />;\n  }\n};\n\nconst getSeverityIcon = (severity: number) => {\n  if (severity >= 5) return <AlertTriangle className=\"w-4 h-4 text-red-500\" />;\n  if (severity >= 4) return <AlertCircle className=\"w-4 h-4 text-orange-500\" />;\n  if (severity >= 3) return <AlertCircle className=\"w-4 h-4 text-yellow-500\" />;\n  if (severity >= 2) return <Info className=\"w-4 h-4 text-blue-500\" />;\n  return <CheckCircle className=\"w-4 h-4 text-green-500\" />;\n};\n\nconst AlertCard: React.FC<{\n  alert: AlertData;\n  onResolve: (id: string) => void;\n  onDismiss: (id: string) => void;\n  t: (key: string) => string;\n}> = ({ alert, onResolve, onDismiss, t }) => {\n  return (\n    <Card className={`border-l-4 ${\n      alert.level === 'critical' ? 'border-l-red-500' :\n      alert.level === 'warning' ? 'border-l-yellow-500' :\n      alert.level === 'info' ? 'border-l-blue-500' :\n      'border-l-green-500'\n    }`}>\n      <CardContent className=\"p-4\">\n        <div className=\"flex items-start justify-between\">\n          <div className=\"space-y-2 flex-1\">\n            <div className=\"flex items-center gap-2\">\n              {getAlertIcon(alert.level)}\n              <Badge className={getAlertLevelColor(alert.level)}>\n                {t(alert.level)}\n              </Badge>\n              <Badge variant=\"outline\">\n                {getTypeIcon(alert.type)}\n                <span className=\"ml-1\">{t(alert.type)}</span>\n              </Badge>\n              {alert.severity && (\n                <div className=\"flex items-center gap-1\">\n                  {getSeverityIcon(alert.severity)}\n                  <span className=\"text-xs\">{alert.severity}/5</span>\n                </div>\n              )}\n            </div>\n            <h4 className=\"font-semibold\">{alert.title}</h4>\n            <p className=\"text-sm text-muted-foreground\">{alert.message}</p>\n            <div className=\"grid grid-cols-2 gap-4 text-xs text-muted-foreground\">\n              <div>\n                <span className=\"font-medium\">Location:</span> {alert.location}\n              </div>\n              <div>\n                <span className=\"font-medium\">Assigned:</span> {alert.assignedTo}\n              </div>\n              <div>\n                <span className=\"font-medium\">Digester:</span> {alert.digesterId}\n              </div>\n              <div>\n                <span className=\"font-medium\">ETA:</span> {alert.estimatedResolution}\n              </div>\n              <div className=\"col-span-2\">\n                <span className=\"font-medium\">Time:</span> {new Date(alert.timestamp).toLocaleString()}\n              </div>\n              {alert.value && (\n                <div className=\"col-span-2\">\n                  <span className=\"font-medium\">Value:</span> {alert.value}\n                </div>\n              )}\n            </div>\n          </div>\n          <div className=\"flex gap-2 ml-4\">\n            <Button\n              size=\"sm\"\n              variant=\"outline\"\n              onClick={() => onResolve(alert.id)}\n              disabled={alert.status === 'resolved'}\n            >\n              <CheckCircle className=\"w-4 h-4\" />\n            </Button>\n            <Button\n              size=\"sm\"\n              variant=\"outline\"\n              onClick={() => onDismiss(alert.id)}\n              disabled={alert.status === 'resolved'}\n            >\n              <XCircle className=\"w-4 h-4\" />\n            </Button>\n            <Button\n              size=\"sm\"\n              variant=\"outline\"\n            >\n              <Eye className=\"w-4 h-4\" />\n            </Button>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nconst ThresholdConfigCard: React.FC<{\n  config: ThresholdConfig;\n  onUpdate: (config: ThresholdConfig) => void;\n  t: (key: string) => string;\n}> = ({ config, onUpdate, t }) => {\n  const [localConfig, setLocalConfig] = useState(config);\n\n  const handleSave = () => {\n    onUpdate(localConfig);\n  };\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          {getTypeIcon(config.type)}\n          {t(config.type)} {t('thresholds')}\n        </CardTitle>\n        <CardDescription>\n          {config.description} ({config.unit})\n        </CardDescription>\n      </CardHeader>\n      <CardContent className=\"space-y-4\">\n        <div className=\"flex items-center justify-between\">\n          <Label htmlFor={`${config.type}-enabled`}>Enable Monitoring</Label>\n          <Switch\n            id={`${config.type}-enabled`}\n            checked={localConfig.enabled}\n            onCheckedChange={(checked) => setLocalConfig(prev => ({ ...prev, enabled: checked }))}\n          />\n        </div>\n\n        {localConfig.enabled && (\n          <>\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div className=\"space-y-2\">\n                <Label htmlFor={`${config.type}-min`}>{t('minThreshold')} ({config.unit})</Label>\n                <Input\n                  id={`${config.type}-min`}\n                  type=\"number\"\n                  value={localConfig.minThreshold}\n                  onChange={(e) => setLocalConfig(prev => ({\n                    ...prev,\n                    minThreshold: parseFloat(e.target.value) || 0\n                  }))}\n                />\n              </div>\n              <div className=\"space-y-2\">\n                <Label htmlFor={`${config.type}-max`}>{t('maxThreshold')} ({config.unit})</Label>\n                <Input\n                  id={`${config.type}-max`}\n                  type=\"number\"\n                  value={localConfig.maxThreshold}\n                  onChange={(e) => setLocalConfig(prev => ({\n                    ...prev,\n                    maxThreshold: parseFloat(e.target.value) || 0\n                  }))}\n                />\n              </div>\n            </div>\n            <Button onClick={handleSave} className=\"w-full\">\n              Save Configuration\n            </Button>\n          </>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport const AlertsManagement: React.FC<AlertsManagementProps> = ({ languageContext }) => {\n  const [alertFilter, setAlertFilter] = useState<'all' | AlertLevel>('all');\n  const [typeFilter, setTypeFilter] = useState<'all' | AlertType>('all');\n  const [statusFilter, setStatusFilter] = useState<'all' | 'active' | 'acknowledged' | 'resolved'>('all');\n  const [isMonitoringActive, setIsMonitoringActive] = useState(true);\n  const [notificationSettings, setNotificationSettings] = useState({\n    sound: true,\n    email: true,\n    sms: false,\n    push: true\n  });\n\n  const lang = languageContext?.language || 'en';\n  const t = (key: string): string => {\n    return languageContext?.t(key) || translations[lang][key as keyof typeof translations[typeof lang]] || key;\n  };\n\n  // Real-time simulation\n  useEffect(() => {\n    if (!isMonitoringActive) return;\n\n    const interval = setInterval(() => {\n      // Simulate real-time monitoring updates\n      console.log('Real-time monitoring active...');\n    }, 5000);\n\n    return () => clearInterval(interval);\n  }, [isMonitoringActive]);\n\n  const filteredAlerts = alerts.filter(alert => {\n    const matchesLevel = alertFilter === 'all' || alert.level === alertFilter;\n    const matchesType = typeFilter === 'all' || alert.type === typeFilter;\n    const matchesStatus = statusFilter === 'all' || alert.status === statusFilter;\n    return matchesLevel && matchesType && matchesStatus;\n  });\n\n  const activeAlerts = alerts.filter(alert => alert.status === 'active');\n  const criticalAlerts = activeAlerts.filter(alert => alert.level === 'critical');\n  const warningAlerts = activeAlerts.filter(alert => alert.level === 'warning');\n  const resolvedToday = alerts.filter(alert =>\n    alert.status === 'resolved' &&\n    new Date(alert.timestamp).toDateString() === new Date().toDateString()\n  );\n\n  const systemStatus = criticalAlerts.length > 0 ? 'critical' :\n                     warningAlerts.length > 0 ? 'warning' : 'normal';\n\n  const handleResolveAlert = async (alertId: string) => {\n    await resolveAlert(alertId);\n  };\n\n  const handleDismissAlert = async (alertId: string) => {\n    await dismissAlert(alertId);\n  };\n\n  const handleAcknowledgeAll = async () => {\n    for (const alert of activeAlerts) {\n      await resolveAlert(alert.id);\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between -mt-6\">\n        <div>\n          <h1 className=\"text-3xl font-bold tracking-tight\">{t('title')}</h1>\n          <p className=\"text-muted-foreground\">{t('subtitle')}</p>\n        </div>\n        <div className=\"flex items-center gap-4\">\n          <div className=\"flex items-center gap-2\">\n            <Label htmlFor=\"monitoring-toggle\">{t('monitoringActive')}</Label>\n            <Switch\n              id=\"monitoring-toggle\"\n              checked={isMonitoringActive}\n              onCheckedChange={setIsMonitoringActive}\n            />\n          </div>\n          <Button\n            onClick={handleAcknowledgeAll}\n            disabled={activeAlerts.length === 0}\n            variant=\"outline\"\n          >\n            <CheckCircle className=\"w-4 h-4 mr-2\" />\n            {t('acknowledgeAll')} ({activeAlerts.length})\n          </Button>\n        </div>\n      </div>\n\n      {/* System Status Alert */}\n      {systemStatus !== 'normal' && (\n        <Alert className={`${\n          systemStatus === 'critical' ? 'border-red-200 bg-red-50' : 'border-yellow-200 bg-yellow-50'\n        }`}>\n          <AlertTriangle className={`h-4 w-4 ${\n            systemStatus === 'critical' ? 'text-red-600' : 'text-yellow-600'\n          }`} />\n          <AlertDescription className={`${\n            systemStatus === 'critical' ? 'text-red-800' : 'text-yellow-800'\n          }`}>\n            {systemStatus === 'critical' ? t('criticalIssues') : t('someIssues')}\n            {systemStatus === 'critical' && ` - ${criticalAlerts.length} critical alerts require immediate attention.`}\n          </AlertDescription>\n        </Alert>\n      )}\n\n      {/* Enhanced Statistics Cards */}\n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-5\">\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">{t('alertCount')}</CardTitle>\n            <Bell className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{alerts.length}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              {activeAlerts.length} active\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">{t('criticalCount')}</CardTitle>\n            <AlertTriangle className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-red-600\">{criticalAlerts.length}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              Require immediate action\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">{t('warningCount')}</CardTitle>\n            <AlertCircle className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-yellow-600\">{warningAlerts.length}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              Need attention\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">{t('resolvedToday')}</CardTitle>\n            <CheckCircle className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-green-600\">{resolvedToday.length}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              Issues resolved\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">{t('responseTime')}</CardTitle>\n            <Clock className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">2.4h</div>\n            <p className=\"text-xs text-muted-foreground\">\n              Average resolution time\n            </p>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Main Content */}\n      <Tabs defaultValue=\"active\" className=\"space-y-6\">\n        <TabsList className=\"grid w-full grid-cols-4\">\n          <TabsTrigger value=\"active\">{t('activeAlerts')}</TabsTrigger>\n          <TabsTrigger value=\"history\">{t('alertHistory')}</TabsTrigger>\n          <TabsTrigger value=\"thresholds\">{t('thresholdSettings')}</TabsTrigger>\n          <TabsTrigger value=\"notifications\">{t('notificationSettings')}</TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"active\" className=\"space-y-6\">\n          {/* Enhanced Filter Controls */}\n          <div className=\"flex items-center gap-4 flex-wrap\">\n            <div className=\"flex items-center gap-2\">\n              <Filter className=\"w-4 h-4\" />\n              <Label>Filters:</Label>\n            </div>\n            <Select value={alertFilter} onValueChange={(value) => setAlertFilter(value as 'all' | AlertLevel)}>\n              <SelectTrigger className=\"w-40\">\n                <SelectValue placeholder=\"Level\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"all\">All Levels</SelectItem>\n                <SelectItem value=\"critical\">{t('critical')}</SelectItem>\n                <SelectItem value=\"warning\">{t('warning')}</SelectItem>\n                <SelectItem value=\"info\">{t('info')}</SelectItem>\n              </SelectContent>\n            </Select>\n            <Select value={typeFilter} onValueChange={(value) => setTypeFilter(value as 'all' | AlertType)}>\n              <SelectTrigger className=\"w-40\">\n                <SelectValue placeholder=\"Type\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"all\">All Types</SelectItem>\n                <SelectItem value=\"temperature\">{t('temperature')}</SelectItem>\n                <SelectItem value=\"pressure\">{t('pressure')}</SelectItem>\n                <SelectItem value=\"methane\">{t('methane')}</SelectItem>\n                <SelectItem value=\"gasProduction\">{t('gasProduction')}</SelectItem>\n                <SelectItem value=\"efficiency\">{t('efficiency')}</SelectItem>\n                <SelectItem value=\"connectivity\">{t('connectivity')}</SelectItem>\n                <SelectItem value=\"safety\">{t('safety')}</SelectItem>\n                <SelectItem value=\"maintenance\">{t('maintenance')}</SelectItem>\n              </SelectContent>\n            </Select>\n            <Select value={statusFilter} onValueChange={(value) => setStatusFilter(value as any)}>\n              <SelectTrigger className=\"w-40\">\n                <SelectValue placeholder=\"Status\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"all\">All Status</SelectItem>\n                <SelectItem value=\"active\">{t('active')}</SelectItem>\n                <SelectItem value=\"acknowledged\">{t('acknowledged')}</SelectItem>\n                <SelectItem value=\"resolved\">{t('resolved')}</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n\n          {/* Active Alerts */}\n          <div className=\"space-y-4\">\n            {filteredAlerts.length === 0 ? (\n              <Card>\n                <CardContent className=\"flex flex-col items-center justify-center py-16\">\n                  <CheckCircle className=\"w-16 h-16 text-green-500 mb-4\" />\n                  <h3 className=\"text-lg font-semibold text-green-600 mb-2\">\n                    {t('allSystems')}\n                  </h3>\n                  <p className=\"text-muted-foreground text-center\">\n                    No alerts match the current filter criteria. All monitored systems are operating within normal parameters.\n                  </p>\n                </CardContent>\n              </Card>\n            ) : (\n              filteredAlerts.map((alert) => (\n                <AlertCard\n                  key={alert.id}\n                  alert={alert}\n                  onResolve={handleResolveAlert}\n                  onDismiss={handleDismissAlert}\n                  t={t}\n                />\n              ))\n            )}\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"history\">\n          <Card>\n            <CardHeader>\n              <CardTitle>{t('alertHistory')}</CardTitle>\n              <CardDescription>\n                Historical alert data and resolution tracking with detailed analysis\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-4\">\n                {alerts.slice(0, 20).map((alert) => (\n                  <div key={alert.id} className=\"flex items-center justify-between p-4 border rounded-lg\">\n                    <div className=\"space-y-1\">\n                      <div className=\"flex items-center gap-2\">\n                        {getAlertIcon(alert.level)}\n                        <Badge className={getAlertLevelColor(alert.level)}>\n                          {t(alert.level)}\n                        </Badge>\n                        <Badge variant=\"outline\">\n                          {getTypeIcon(alert.type)}\n                          <span className=\"ml-1\">{t(alert.type)}</span>\n                        </Badge>\n                        <Badge variant={alert.status === 'resolved' ? 'default' : 'secondary'}>\n                          {t(alert.status)}\n                        </Badge>\n                      </div>\n                      <h4 className=\"font-semibold\">{alert.title}</h4>\n                      <div className=\"flex items-center gap-4 text-sm text-muted-foreground\">\n                        <span>Location: {alert.location}</span>\n                        <span>Assigned: {alert.assignedTo}</span>\n                        <span>{new Date(alert.timestamp).toLocaleString()}</span>\n                      </div>\n                    </div>\n                    <Button size=\"sm\" variant=\"outline\">\n                      <Eye className=\"w-4 h-4\" />\n                    </Button>\n                  </div>\n                ))}\n                {alerts.length === 0 && (\n                  <div className=\"text-center py-8 text-muted-foreground\">\n                    <Clock className=\"w-12 h-12 mx-auto mb-2\" />\n                    <p>No alert history available</p>\n                  </div>\n                )}\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"thresholds\">\n          <div className=\"grid gap-6 md:grid-cols-2\">\n            {thresholds.map((threshold) => (\n              <ThresholdConfigCard\n                key={threshold.type}\n                config={threshold}\n                onUpdate={updateThreshold}\n                t={t}\n              />\n            ))}\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"notifications\">\n          <div className=\"grid gap-6 md:grid-cols-2\">\n            <Card>\n              <CardHeader>\n                <CardTitle>{t('notificationSettings')}</CardTitle>\n                <CardDescription>\n                  Configure how you receive alert notifications\n                </CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-6\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"space-y-0.5\">\n                    <Label htmlFor=\"sound-alerts\" className=\"flex items-center gap-2\">\n                      {notificationSettings.sound ? <Volume2 className=\"w-4 h-4\" /> : <VolumeX className=\"w-4 h-4\" />}\n                      {t('soundAlerts')}\n                    </Label>\n                    <p className=\"text-sm text-muted-foreground\">\n                      Play sound when new alerts arrive\n                    </p>\n                  </div>\n                  <Switch\n                    id=\"sound-alerts\"\n                    checked={notificationSettings.sound}\n                    onCheckedChange={(checked) => setNotificationSettings(prev => ({ ...prev, sound: checked }))}\n                  />\n                </div>\n\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"space-y-0.5\">\n                    <Label htmlFor=\"email-notifications\">{t('emailNotifications')}</Label>\n                    <p className=\"text-sm text-muted-foreground\">\n                      Send alerts via email\n                    </p>\n                  </div>\n                  <Switch\n                    id=\"email-notifications\"\n                    checked={notificationSettings.email}\n                    onCheckedChange={(checked) => setNotificationSettings(prev => ({ ...prev, email: checked }))}\n                  />\n                </div>\n\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"space-y-0.5\">\n                    <Label htmlFor=\"sms-notifications\">{t('smsNotifications')}</Label>\n                    <p className=\"text-sm text-muted-foreground\">\n                      Send critical alerts via SMS\n                    </p>\n                  </div>\n                  <Switch\n                    id=\"sms-notifications\"\n                    checked={notificationSettings.sms}\n                    onCheckedChange={(checked) => setNotificationSettings(prev => ({ ...prev, sms: checked }))}\n                  />\n                </div>\n\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"space-y-0.5\">\n                    <Label htmlFor=\"push-notifications\">{t('pushNotifications')}</Label>\n                    <p className=\"text-sm text-muted-foreground\">\n                      Browser push notifications\n                    </p>\n                  </div>\n                  <Switch\n                    id=\"push-notifications\"\n                    checked={notificationSettings.push}\n                    onCheckedChange={(checked) => setNotificationSettings(prev => ({ ...prev, push: checked }))}\n                  />\n                </div>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader>\n                <CardTitle>Alert Management</CardTitle>\n                <CardDescription>\n                  Bulk actions and system controls\n                </CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <Button\n                  onClick={handleAcknowledgeAll}\n                  disabled={activeAlerts.length === 0}\n                  className=\"w-full\"\n                >\n                  <CheckCircle className=\"w-4 h-4 mr-2\" />\n                  {t('acknowledgeAll')} ({activeAlerts.length})\n                </Button>\n\n                <Button variant=\"outline\" className=\"w-full\">\n                  <RotateCcw className=\"w-4 h-4 mr-2\" />\n                  {t('clearHistory')}\n                </Button>\n\n                <Button variant=\"outline\" className=\"w-full\">\n                  <Settings className=\"w-4 h-4 mr-2\" />\n                  {t('exportAlerts')}\n                </Button>\n\n                <div className=\"pt-4 border-t\">\n                  <div className=\"flex items-center justify-between\">\n                    <Label>Real-time Monitoring</Label>\n                    <div className=\"flex items-center gap-2\">\n                      {isMonitoringActive ? (\n                        <Play className=\"w-4 h-4 text-green-500\" />\n                      ) : (\n                        <Pause className=\"w-4 h-4 text-gray-500\" />\n                      )}\n                      <Switch\n                        checked={isMonitoringActive}\n                        onCheckedChange={setIsMonitoringActive}\n                      />\n                    </div>\n                  </div>\n                  <p className=\"text-sm text-muted-foreground mt-1\">\n                    {isMonitoringActive ? 'Monitoring system is active' : 'Monitoring is paused'}\n                  </p>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n};\n\nexport default AlertsManagement;","import { useNavigate, useLocation } from 'react-router-dom'\r\nimport { BarChart3, Factory, Weight, Gavel, CreditCard, Clock, Receipt, Bell } from 'lucide-react'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport BaseLayout from '../components/layout/BaseLayout'\r\n\r\n// Import the actual page components\r\nimport EnhancedBiogasDashboard from '../pages/biogassangh/EnhancedBiogasDashboard'\r\nimport ModernDigesterMonitoring from '../pages/biogassangh/ModernDigesterMonitoring'\r\nimport BatchManagement from '../pages/biogassangh/BatchManagement'\r\nimport DisputeResolution from '../pages/biogassangh/DisputeResolution'\r\nimport PaymentReconciliation from '../pages/biogassangh/PaymentReconciliation'\r\nimport PickupScheduler from '../pages/biogassangh/PickupScheduler'\r\nimport TransactionEntry from '../pages/biogassangh/TransactionEntry'\r\nimport AlertsManagement from '../pages/biogassangh/AlertsManagement'\r\n\r\n\r\nconst BiogasSangh = () => {\r\n  const { user } = useAuth()\r\n  const navigate = useNavigate()\r\n  const location = useLocation()\r\n\r\n  // Navigation items for the BiogasSangh module\r\n  const navigationItems = [\r\n    {\r\n      id: 'dashboard',\r\n      label: 'Dashboard',\r\n      icon: <BarChart3 className=\"w-4 h-4\" />,\r\n      onClick: () => navigate('/cluster'),\r\n      isActive: location.pathname === '/cluster'\r\n    },\r\n    {\r\n      id: 'digesters',\r\n      label: 'Digester Monitoring',\r\n      icon: <Factory className=\"w-4 h-4\" />,\r\n      onClick: () => navigate('/cluster/digesters'),\r\n      isActive: location.pathname === '/cluster/digesters'\r\n    },\r\n    {\r\n      id: 'batches',\r\n      label: 'Batch Management',\r\n      icon: <Weight className=\"w-4 h-4\" />,\r\n      onClick: () => navigate('/cluster/batches'),\r\n      isActive: location.pathname === '/cluster/batches'\r\n    },\r\n    {\r\n      id: 'disputes',\r\n      label: 'Dispute Resolution',\r\n      icon: <Gavel className=\"w-4 h-4\" />,\r\n      onClick: () => navigate('/cluster/disputes'),\r\n      isActive: location.pathname === '/cluster/disputes'\r\n    },\r\n    {\r\n      id: 'payments',\r\n      label: 'Payment Reconciliation',\r\n      icon: <CreditCard className=\"w-4 h-4\" />,\r\n      onClick: () => navigate('/cluster/payments'),\r\n      isActive: location.pathname === '/cluster/payments'\r\n    },\r\n    {\r\n      id: 'scheduler',\r\n      label: 'Pickup Scheduler',\r\n      icon: <Clock className=\"w-4 h-4\" />,\r\n      onClick: () => navigate('/cluster/scheduler'),\r\n      isActive: location.pathname === '/cluster/scheduler'\r\n    },\r\n    {\r\n      id: 'transactions',\r\n      label: 'Transaction Entry',\r\n      icon: <Receipt className=\"w-4 h-4\" />,\r\n      onClick: () => navigate('/cluster/transactions'),\r\n      isActive: location.pathname === '/cluster/transactions'\r\n    },\r\n    {\r\n      id: 'alerts',\r\n      label: 'Alerts Management',\r\n      icon: <Bell className=\"w-4 h-4\" />,\r\n      onClick: () => navigate('/cluster/alerts'),\r\n      isActive: location.pathname === '/cluster/alerts'\r\n    }\r\n  ]\r\n\r\n  // Breadcrumbs\r\n  const breadcrumbs = [\r\n    { label: 'SAUBHAGYA', onClick: () => navigate('/') },\r\n    { label: 'BiogasSangh Cluster', onClick: () => navigate('/cluster') }\r\n  ]\r\n\r\n  // Page content based on current route\r\n  const renderPageContent = () => {\r\n    const currentPath = location.pathname\r\n\r\n    if (currentPath === '/cluster/digesters') {\r\n      return <ModernDigesterMonitoring />\r\n    }\r\n\r\n    if (currentPath === '/cluster/batches') {\r\n      return <BatchManagement />\r\n    }\r\n\r\n    if (currentPath === '/cluster/disputes') {\r\n      return <DisputeResolution />\r\n    }\r\n\r\n    if (currentPath === '/cluster/payments') {\r\n      return <PaymentReconciliation />\r\n    }\r\n\r\n    if (currentPath === '/cluster/scheduler') {\r\n      return <PickupScheduler />\r\n    }\r\n\r\n    if (currentPath === '/cluster/transactions') {\r\n      return <TransactionEntry />\r\n    }\r\n\r\n    if (currentPath === '/cluster/alerts') {\r\n      return <AlertsManagement />\r\n    }\r\n\r\n    // Default dashboard - use the enhanced dashboard\r\n    return <EnhancedBiogasDashboard />\r\n  }\r\n\r\n  return (\r\n    <BaseLayout\r\n      moduleName=\"BiogasSangh\"\r\n      moduleSubtitle=\"Cluster Management & Operations\"\r\n      navigationItems={navigationItems}\r\n      userInfo={{ name: user?.name || \"Cluster Manager\", role: \"CLUSTER_MANAGER\" }}\r\n      breadcrumbs={breadcrumbs}\r\n      contentClassName=\"!pt-16 !mt-2\"\r\n    >\r\n      {renderPageContent()}\r\n    </BaseLayout>\r\n  )\r\n}\r\n\r\nexport default BiogasSangh","import {\r\n  Customer,\r\n  Contract,\r\n  InventoryItem,\r\n  Order,\r\n  Invoice,\r\n  Payment,\r\n  Delivery,\r\n  PriceData,\r\n  ComplianceRecord,\r\n  SalesMetrics,\r\n  VoiceInvoiceData,\r\n  ApiResponse,\r\n  PaginatedResponse,\r\n  CustomerFilters,\r\n  OrderFilters,\r\n  InventoryFilters\r\n} from '../types';\r\n\r\n// Mock data generators\r\nconst generateMockCustomers = (): Customer[] => [\r\n  {\r\n    id: 'cust_001',\r\n    name: 'Green Energy Industries',\r\n    type: 'industrial',\r\n    contactPerson: 'Rajesh Kumar',\r\n    phone: '+91-9876543210',\r\n    email: 'rajesh@greenenergy.com',\r\n    address: {\r\n      street: '123 Industrial Area, Phase 2',\r\n      city: 'Noida',\r\n      state: 'Uttar Pradesh',\r\n      pincode: '201301',\r\n      coordinates: { lat: 28.5355, lng: 77.3910 }\r\n    },\r\n    creditLimit: 5000000,\r\n    creditUsed: 1250000,\r\n    paymentTerms: 30,\r\n    gstNumber: '09ABCDE1234F1Z5',\r\n    panNumber: 'ABCDE1234F',\r\n    status: 'active',\r\n    registrationDate: new Date('2023-01-15'),\r\n    lastOrderDate: new Date('2024-09-15'),\r\n    totalOrders: 45,\r\n    totalRevenue: 12500000,\r\n    riskCategory: 'low'\r\n  },\r\n  {\r\n    id: 'cust_002',\r\n    name: 'Sunrise Hotel Chain',\r\n    type: 'commercial',\r\n    contactPerson: 'Priya Sharma',\r\n    phone: '+91-9876543211',\r\n    email: 'priya@sunrisehotels.com',\r\n    address: {\r\n      street: '45 MG Road',\r\n      city: 'Bangalore',\r\n      state: 'Karnataka',\r\n      pincode: '560001',\r\n      coordinates: { lat: 12.9716, lng: 77.5946 }\r\n    },\r\n    creditLimit: 1000000,\r\n    creditUsed: 150000,\r\n    paymentTerms: 15,\r\n    gstNumber: '29FGHIJ5678K2L6',\r\n    panNumber: 'FGHIJ5678K',\r\n    status: 'active',\r\n    registrationDate: new Date('2023-03-20'),\r\n    lastOrderDate: new Date('2024-09-20'),\r\n    totalOrders: 32,\r\n    totalRevenue: 2800000,\r\n    riskCategory: 'low'\r\n  },\r\n  {\r\n    id: 'cust_003',\r\n    name: 'Residential Society - Emerald Heights',\r\n    type: 'residential',\r\n    contactPerson: 'Amit Verma',\r\n    phone: '+91-9876543212',\r\n    email: 'amit@emeraldheights.com',\r\n    address: {\r\n      street: 'Emerald Heights, Sector 65',\r\n      city: 'Gurgaon',\r\n      state: 'Haryana',\r\n      pincode: '122018',\r\n      coordinates: { lat: 28.4089, lng: 77.0507 }\r\n    },\r\n    creditLimit: 500000,\r\n    creditUsed: 75000,\r\n    paymentTerms: 7,\r\n    status: 'active',\r\n    registrationDate: new Date('2023-06-10'),\r\n    lastOrderDate: new Date('2024-09-18'),\r\n    totalOrders: 28,\r\n    totalRevenue: 850000,\r\n    riskCategory: 'medium'\r\n  }\r\n];\r\n\r\nconst generateMockContracts = (): Contract[] => [\r\n  {\r\n    id: 'cont_001',\r\n    customerId: 'cust_001',\r\n    contractNumber: 'SB-2024-001',\r\n    type: 'supply',\r\n    status: 'active',\r\n    startDate: new Date('2024-01-01'),\r\n    endDate: new Date('2024-12-31'),\r\n    gasType: 'biogas',\r\n    quantity: 10000,\r\n    pricePerUnit: 45,\r\n    totalValue: 5400000,\r\n    paymentTerms: {\r\n      advancePercentage: 20,\r\n      creditDays: 30,\r\n      penaltyRate: 2\r\n    },\r\n    deliveryTerms: {\r\n      location: 'Customer Site',\r\n      frequency: 'monthly',\r\n      transportMode: 'pipeline'\r\n    },\r\n    version: 1,\r\n    signedDate: new Date('2023-12-15'),\r\n    signedBy: {\r\n      customer: { name: 'Rajesh Kumar', designation: 'CEO', signature: 'digital_signature_1' },\r\n      company: { name: 'Saubhagya Representative', designation: 'Sales Manager', signature: 'digital_signature_2' }\r\n    },\r\n    documents: [\r\n      {\r\n        id: 'doc_001',\r\n        name: 'Supply Agreement.pdf',\r\n        type: 'contract',\r\n        url: '/documents/supply_agreement_001.pdf',\r\n        uploadDate: new Date('2023-12-15')\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\nconst generateMockInventory = (): InventoryItem[] => [\r\n  {\r\n    id: 'inv_001',\r\n    gasType: 'biogas',\r\n    batchNumber: 'BG-2024-001',\r\n    productionDate: new Date('2024-09-15'),\r\n    quantity: 5000,\r\n    availableQuantity: 3500,\r\n    unit: 'cubic_meters',\r\n    quality: {\r\n      methaneContent: 65,\r\n      purity: 98.5,\r\n      pressure: 15,\r\n      temperature: 25\r\n    },\r\n    location: {\r\n      plantId: 'plant_001',\r\n      tankId: 'tank_A1',\r\n      coordinates: { lat: 28.7041, lng: 77.1025 }\r\n    },\r\n    pesoCompliance: {\r\n      certificateNumber: 'PESO-2024-001',\r\n      issueDate: new Date('2024-01-15'),\r\n      expiryDate: new Date('2025-01-15'),\r\n      status: 'valid',\r\n      inspector: 'Dr. Rajesh Gupta'\r\n    },\r\n    pricePerUnit: 45,\r\n    reservedQuantity: 1500,\r\n    status: 'available'\r\n  },\r\n  {\r\n    id: 'inv_002',\r\n    gasType: 'compressed',\r\n    batchNumber: 'CG-2024-005',\r\n    productionDate: new Date('2024-09-20'),\r\n    quantity: 2000,\r\n    availableQuantity: 1800,\r\n    unit: 'kg',\r\n    quality: {\r\n      methaneContent: 95,\r\n      purity: 99.2,\r\n      pressure: 200,\r\n      temperature: 20\r\n    },\r\n    location: {\r\n      plantId: 'plant_002',\r\n      tankId: 'tank_B2',\r\n      coordinates: { lat: 28.6139, lng: 77.2090 }\r\n    },\r\n    pesoCompliance: {\r\n      certificateNumber: 'PESO-2024-002',\r\n      issueDate: new Date('2024-02-01'),\r\n      expiryDate: new Date('2025-02-01'),\r\n      status: 'valid',\r\n      inspector: 'Mr. Suresh Yadav'\r\n    },\r\n    pricePerUnit: 65,\r\n    reservedQuantity: 200,\r\n    status: 'available'\r\n  }\r\n];\r\n\r\nconst generateMockOrders = (): Order[] => [\r\n  {\r\n    id: 'ord_001',\r\n    orderNumber: 'ORD-2024-001',\r\n    customerId: 'cust_001',\r\n    contractId: 'cont_001',\r\n    orderDate: new Date('2024-09-15'),\r\n    requestedDeliveryDate: new Date('2024-09-25'),\r\n    status: 'confirmed',\r\n    items: [\r\n      {\r\n        inventoryId: 'inv_001',\r\n        gasType: 'biogas',\r\n        quantity: 1000,\r\n        pricePerUnit: 45,\r\n        totalAmount: 45000,\r\n        batchNumber: 'BG-2024-001'\r\n      }\r\n    ],\r\n    totalQuantity: 1000,\r\n    totalAmount: 45000,\r\n    discountPercentage: 5,\r\n    discountAmount: 2250,\r\n    taxAmount: 7695,\r\n    finalAmount: 50445,\r\n    deliveryAddress: {\r\n      street: '123 Industrial Area, Phase 2',\r\n      city: 'Noida',\r\n      state: 'Uttar Pradesh',\r\n      pincode: '201301',\r\n      coordinates: { lat: 28.5355, lng: 77.3910 }\r\n    },\r\n    deliveryInstructions: 'Delivery during business hours only',\r\n    invoiceGenerated: true,\r\n    invoiceNumber: 'INV-2024-001',\r\n    paymentStatus: 'pending',\r\n    createdBy: 'sales_user_001',\r\n    lastModifiedBy: 'sales_user_001',\r\n    lastModifiedDate: new Date('2024-09-15')\r\n  }\r\n];\r\n\r\nconst generateMockInvoices = (): Invoice[] => [\r\n  {\r\n    id: 'inv_001',\r\n    invoiceNumber: 'INV-2024-001',\r\n    orderId: 'ord_001',\r\n    customerId: 'cust_001',\r\n    invoiceDate: new Date('2024-09-15'),\r\n    dueDate: new Date('2024-10-15'),\r\n    status: 'sent',\r\n    items: [\r\n      {\r\n        description: 'Biogas Supply - BG-2024-001',\r\n        quantity: 1000,\r\n        unit: 'cubic meters',\r\n        pricePerUnit: 45,\r\n        totalAmount: 45000,\r\n        taxRate: 18,\r\n        taxAmount: 8100\r\n      }\r\n    ],\r\n    subtotal: 45000,\r\n    discountAmount: 2250,\r\n    taxAmount: 7695,\r\n    totalAmount: 50445,\r\n    paidAmount: 0,\r\n    balanceAmount: 50445,\r\n    paymentTerms: 'Net 30 days',\r\n    bankDetails: {\r\n      accountName: 'Saubhagya Energy Solutions',\r\n      accountNumber: '1234567890',\r\n      ifscCode: 'SBIN0001234',\r\n      bankName: 'State Bank of India'\r\n    },\r\n    notes: 'Payment due within 30 days of invoice date',\r\n    generatedBy: 'manual'\r\n  }\r\n];\r\n\r\n// Service functions\r\nexport const salesService = {\r\n  // Customer Management\r\n  async getCustomers(filters?: CustomerFilters): Promise<PaginatedResponse<Customer>> {\r\n    const customers = generateMockCustomers();\r\n    return {\r\n      success: true,\r\n      data: customers,\r\n      pagination: {\r\n        page: 1,\r\n        limit: 10,\r\n        total: customers.length,\r\n        totalPages: 1\r\n      }\r\n    };\r\n  },\r\n\r\n  async getCustomerById(id: string): Promise<ApiResponse<Customer>> {\r\n    const customers = generateMockCustomers();\r\n    const customer = customers.find(c => c.id === id);\r\n    return {\r\n      success: !!customer,\r\n      data: customer!,\r\n      message: customer ? 'Customer found' : 'Customer not found'\r\n    };\r\n  },\r\n\r\n  async createCustomer(customer: Omit<Customer, 'id'>): Promise<ApiResponse<Customer>> {\r\n    const newCustomer: Customer = {\r\n      ...customer,\r\n      id: `cust_${Date.now()}`\r\n    };\r\n    return {\r\n      success: true,\r\n      data: newCustomer,\r\n      message: 'Customer created successfully'\r\n    };\r\n  },\r\n\r\n  async updateCustomer(id: string, updates: Partial<Customer>): Promise<ApiResponse<Customer>> {\r\n    const customers = generateMockCustomers();\r\n    const customer = customers.find(c => c.id === id);\r\n    if (!customer) {\r\n      return { success: false, data: null as any, message: 'Customer not found' };\r\n    }\r\n    const updatedCustomer = { ...customer, ...updates };\r\n    return {\r\n      success: true,\r\n      data: updatedCustomer,\r\n      message: 'Customer updated successfully'\r\n    };\r\n  },\r\n\r\n  // Contract Management\r\n  async getContracts(): Promise<PaginatedResponse<Contract>> {\r\n    const contracts = generateMockContracts();\r\n    return {\r\n      success: true,\r\n      data: contracts,\r\n      pagination: {\r\n        page: 1,\r\n        limit: 10,\r\n        total: contracts.length,\r\n        totalPages: 1\r\n      }\r\n    };\r\n  },\r\n\r\n  async getContractById(id: string): Promise<ApiResponse<Contract>> {\r\n    const contracts = generateMockContracts();\r\n    const contract = contracts.find(c => c.id === id);\r\n    return {\r\n      success: !!contract,\r\n      data: contract!,\r\n      message: contract ? 'Contract found' : 'Contract not found'\r\n    };\r\n  },\r\n\r\n  async createContract(contract: Omit<Contract, 'id'>): Promise<ApiResponse<Contract>> {\r\n    const newContract: Contract = {\r\n      ...contract,\r\n      id: `cont_${Date.now()}`\r\n    };\r\n    return {\r\n      success: true,\r\n      data: newContract,\r\n      message: 'Contract created successfully'\r\n    };\r\n  },\r\n\r\n  // Inventory Management\r\n  async getInventory(filters?: InventoryFilters): Promise<PaginatedResponse<InventoryItem>> {\r\n    const inventory = generateMockInventory();\r\n    return {\r\n      success: true,\r\n      data: inventory,\r\n      pagination: {\r\n        page: 1,\r\n        limit: 10,\r\n        total: inventory.length,\r\n        totalPages: 1\r\n      }\r\n    };\r\n  },\r\n\r\n  async updateInventoryItem(id: string, updates: Partial<InventoryItem>): Promise<ApiResponse<InventoryItem>> {\r\n    const inventory = generateMockInventory();\r\n    const item = inventory.find(i => i.id === id);\r\n    if (!item) {\r\n      return { success: false, data: null as any, message: 'Inventory item not found' };\r\n    }\r\n    const updatedItem = { ...item, ...updates };\r\n    return {\r\n      success: true,\r\n      data: updatedItem,\r\n      message: 'Inventory item updated successfully'\r\n    };\r\n  },\r\n\r\n  // Order Management\r\n  async getOrders(filters?: OrderFilters): Promise<PaginatedResponse<Order>> {\r\n    const orders = generateMockOrders();\r\n    return {\r\n      success: true,\r\n      data: orders,\r\n      pagination: {\r\n        page: 1,\r\n        limit: 10,\r\n        total: orders.length,\r\n        totalPages: 1\r\n      }\r\n    };\r\n  },\r\n\r\n  async createOrder(order: Omit<Order, 'id' | 'orderNumber'>): Promise<ApiResponse<Order>> {\r\n    const newOrder: Order = {\r\n      ...order,\r\n      id: `ord_${Date.now()}`,\r\n      orderNumber: `ORD-${new Date().getFullYear()}-${Date.now().toString().slice(-6)}`\r\n    };\r\n    return {\r\n      success: true,\r\n      data: newOrder,\r\n      message: 'Order created successfully'\r\n    };\r\n  },\r\n\r\n  // Invoice Management\r\n  async getInvoices(): Promise<PaginatedResponse<Invoice>> {\r\n    const invoices = generateMockInvoices();\r\n    return {\r\n      success: true,\r\n      data: invoices,\r\n      pagination: {\r\n        page: 1,\r\n        limit: 10,\r\n        total: invoices.length,\r\n        totalPages: 1\r\n      }\r\n    };\r\n  },\r\n\r\n  async generateInvoice(orderId: string): Promise<ApiResponse<Invoice>> {\r\n    const invoice: Invoice = {\r\n      id: `inv_${Date.now()}`,\r\n      invoiceNumber: `INV-${new Date().getFullYear()}-${Date.now().toString().slice(-6)}`,\r\n      orderId,\r\n      customerId: 'cust_001',\r\n      invoiceDate: new Date(),\r\n      dueDate: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000),\r\n      status: 'draft',\r\n      items: [],\r\n      subtotal: 0,\r\n      discountAmount: 0,\r\n      taxAmount: 0,\r\n      totalAmount: 0,\r\n      paidAmount: 0,\r\n      balanceAmount: 0,\r\n      paymentTerms: 'Net 30 days',\r\n      bankDetails: {\r\n        accountName: 'Saubhagya Energy Solutions',\r\n        accountNumber: '1234567890',\r\n        ifscCode: 'SBIN0001234',\r\n        bankName: 'State Bank of India'\r\n      },\r\n      generatedBy: 'manual'\r\n    };\r\n    return {\r\n      success: true,\r\n      data: invoice,\r\n      message: 'Invoice generated successfully'\r\n    };\r\n  },\r\n\r\n  // Voice Invoicing\r\n  async startVoiceSession(language: 'hindi' | 'english'): Promise<ApiResponse<VoiceInvoiceData>> {\r\n    const session: VoiceInvoiceData = {\r\n      id: `voice_${Date.now()}`,\r\n      sessionId: `session_${Date.now()}`,\r\n      startTime: new Date(),\r\n      language,\r\n      transcription: '',\r\n      confidence: 0,\r\n      extractedData: { items: [] },\r\n      status: 'recording',\r\n      validationErrors: []\r\n    };\r\n    return {\r\n      success: true,\r\n      data: session,\r\n      message: 'Voice session started'\r\n    };\r\n  },\r\n\r\n  async processVoiceData(sessionId: string, audioData: string): Promise<ApiResponse<VoiceInvoiceData>> {\r\n    // Mock processing\r\n    const processedData: VoiceInvoiceData = {\r\n      id: sessionId,\r\n      sessionId,\r\n      startTime: new Date(Date.now() - 60000),\r\n      endTime: new Date(),\r\n      language: 'hindi',\r\n      transcription: 'ग्रीन एनर्जी इंडस्ट्रीज के लिए एक हजार क्यूबिक मीटर बायो गैस, पैंतालीस रुपए प्रति यूनिट',\r\n      confidence: 0.85,\r\n      extractedData: {\r\n        customerName: 'Green Energy Industries',\r\n        customerId: 'cust_001',\r\n        items: [\r\n          {\r\n            description: 'Biogas',\r\n            quantity: 1000,\r\n            unit: 'cubic meters',\r\n            pricePerUnit: 45\r\n          }\r\n        ],\r\n        totalAmount: 45000\r\n      },\r\n      status: 'completed',\r\n      validationErrors: []\r\n    };\r\n    return {\r\n      success: true,\r\n      data: processedData,\r\n      message: 'Voice data processed successfully'\r\n    };\r\n  },\r\n\r\n  // Payment Management\r\n  async getPayments(): Promise<PaginatedResponse<Payment>> {\r\n    const payments: Payment[] = [];\r\n    return {\r\n      success: true,\r\n      data: payments,\r\n      pagination: {\r\n        page: 1,\r\n        limit: 10,\r\n        total: 0,\r\n        totalPages: 0\r\n      }\r\n    };\r\n  },\r\n\r\n  // Delivery Management\r\n  async getDeliveries(): Promise<PaginatedResponse<Delivery>> {\r\n    const deliveries: Delivery[] = [];\r\n    return {\r\n      success: true,\r\n      data: deliveries,\r\n      pagination: {\r\n        page: 1,\r\n        limit: 10,\r\n        total: 0,\r\n        totalPages: 0\r\n      }\r\n    };\r\n  },\r\n\r\n  // Price Management\r\n  async getPriceData(): Promise<ApiResponse<PriceData[]>> {\r\n    const priceData: PriceData[] = [];\r\n    return {\r\n      success: true,\r\n      data: priceData,\r\n      message: 'Price data retrieved successfully'\r\n    };\r\n  },\r\n\r\n  // Compliance\r\n  async getComplianceRecords(): Promise<PaginatedResponse<ComplianceRecord>> {\r\n    const records: ComplianceRecord[] = [];\r\n    return {\r\n      success: true,\r\n      data: records,\r\n      pagination: {\r\n        page: 1,\r\n        limit: 10,\r\n        total: 0,\r\n        totalPages: 0\r\n      }\r\n    };\r\n  },\r\n\r\n  // Dashboard Metrics\r\n  async getSalesMetrics(): Promise<ApiResponse<SalesMetrics>> {\r\n    const metrics: SalesMetrics = {\r\n      totalRevenue: 15000000,\r\n      totalOrders: 105,\r\n      averageOrderValue: 142857,\r\n      totalCustomers: 25,\r\n      activeContracts: 8,\r\n      inventoryValue: 2500000,\r\n      pendingPayments: 750000,\r\n      deliverySuccess: 98.5,\r\n      customerSatisfaction: 4.6,\r\n      periodComparison: {\r\n        revenue: { current: 15000000, previous: 12000000, change: 25 },\r\n        orders: { current: 105, previous: 85, change: 23.5 },\r\n        customers: { current: 25, previous: 20, change: 25 }\r\n      }\r\n    };\r\n    return {\r\n      success: true,\r\n      data: metrics,\r\n      message: 'Metrics retrieved successfully'\r\n    };\r\n  }\r\n};\r\n\r\nexport default salesService;","import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Progress } from '@/components/ui/progress';\r\nimport {\r\n  TrendingUp,\r\n  TrendingDown,\r\n  Users,\r\n  FileText,\r\n  Package,\r\n  DollarSign,\r\n  AlertTriangle,\r\n  Calendar,\r\n  Truck,\r\n  RefreshCw,\r\n  BarChart3,\r\n  PieChart,\r\n  Activity\r\n} from 'lucide-react';\r\nimport { salesService } from '../services/salesService';\r\nimport { SalesMetrics, InventoryItem, Order, Customer } from '../types';\r\n\r\ninterface MetricCardProps {\r\n  title: string;\r\n  value: string | number;\r\n  change?: number;\r\n  icon: React.ReactNode;\r\n  description?: string;\r\n  status?: 'positive' | 'negative' | 'neutral';\r\n}\r\n\r\nconst MetricCard: React.FC<MetricCardProps> = ({ title, value, change, icon, description, status = 'neutral' }) => {\r\n  const getChangeColor = () => {\r\n    if (change === undefined) return 'text-gray-500';\r\n    return change >= 0 ? 'text-green-600' : 'text-red-600';\r\n  };\r\n\r\n  const getChangeIcon = () => {\r\n    if (change === undefined) return null;\r\n    return change >= 0 ? <TrendingUp className=\"w-4 h-4\" /> : <TrendingDown className=\"w-4 h-4\" />;\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n        <CardTitle className=\"text-sm font-medium\">{title}</CardTitle>\r\n        {icon}\r\n      </CardHeader>\r\n      <CardContent>\r\n        <div className=\"text-2xl font-bold\">{value}</div>\r\n        {change !== undefined && (\r\n          <div className={`flex items-center space-x-1 text-xs ${getChangeColor()}`}>\r\n            {getChangeIcon()}\r\n            <span>{Math.abs(change)}% from last month</span>\r\n          </div>\r\n        )}\r\n        {description && (\r\n          <p className=\"text-xs text-muted-foreground mt-1\">{description}</p>\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\ninterface RecentOrderProps {\r\n  order: Order;\r\n}\r\n\r\nconst RecentOrderItem: React.FC<RecentOrderProps> = ({ order }) => {\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'confirmed': return 'bg-green-100 text-green-800';\r\n      case 'pending': return 'bg-yellow-100 text-yellow-800';\r\n      case 'processing': return 'bg-blue-100 text-blue-800';\r\n      case 'delivered': return 'bg-green-100 text-green-800';\r\n      case 'cancelled': return 'bg-red-100 text-red-800';\r\n      default: return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex items-center justify-between p-3 border rounded-lg\">\r\n      <div className=\"space-y-1\">\r\n        <div className=\"flex items-center space-x-2\">\r\n          <span className=\"font-medium\">{order.orderNumber}</span>\r\n          <Badge className={getStatusColor(order.status)}>{order.status}</Badge>\r\n        </div>\r\n        <div className=\"text-sm text-gray-600\">\r\n          {order.items[0]?.gasType} • {order.totalQuantity.toLocaleString()} units\r\n        </div>\r\n        <div className=\"text-xs text-gray-500\">\r\n          {order.orderDate.toLocaleDateString()}\r\n        </div>\r\n      </div>\r\n      <div className=\"text-right\">\r\n        <div className=\"font-semibold\">₹{order.finalAmount.toLocaleString()}</div>\r\n        <div className=\"text-sm text-gray-600\">\r\n          Due: {order.requestedDeliveryDate.toLocaleDateString()}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface InventoryAlertProps {\r\n  item: InventoryItem;\r\n}\r\n\r\nconst InventoryAlert: React.FC<InventoryAlertProps> = ({ item }) => {\r\n  const getAlertType = () => {\r\n    const usagePercentage = ((item.quantity - item.availableQuantity) / item.quantity) * 100;\r\n    if (usagePercentage > 80) return { color: 'text-red-600', level: 'Critical' };\r\n    if (usagePercentage > 60) return { color: 'text-yellow-600', level: 'Warning' };\r\n    return { color: 'text-blue-600', level: 'Info' };\r\n  };\r\n\r\n  const alert = getAlertType();\r\n\r\n  return (\r\n    <div className=\"flex items-center justify-between p-3 border rounded-lg\">\r\n      <div className=\"flex items-center space-x-3\">\r\n        <AlertTriangle className={`w-5 h-5 ${alert.color}`} />\r\n        <div>\r\n          <div className=\"font-medium\">{item.batchNumber}</div>\r\n          <div className=\"text-sm text-gray-600\">\r\n            {item.gasType} • Available: {item.availableQuantity.toLocaleString()} {item.unit}\r\n          </div>\r\n          <div className=\"text-xs text-gray-500\">\r\n            PESO: {item.pesoCompliance.status}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"text-right\">\r\n        <Badge className={alert.color.includes('red') ? 'bg-red-100 text-red-800' :\r\n                          alert.color.includes('yellow') ? 'bg-yellow-100 text-yellow-800' :\r\n                          'bg-blue-100 text-blue-800'}>\r\n          {alert.level}\r\n        </Badge>\r\n        <div className=\"text-sm text-gray-600 mt-1\">\r\n          ₹{(item.availableQuantity * item.pricePerUnit).toLocaleString()}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Performance data with varied statuses for realistic dashboard\r\nconst performanceData = [\r\n  { metric: \"Delivery Success\", current: 98.5, target: 98 }, // Green - Target Achieved\r\n  { metric: \"Customer Satisfaction\", current: 87, target: 90 }, // Yellow - Near Target\r\n  { metric: \"Order Fulfillment\", current: 95.2, target: 95 }, // Green - Target Achieved\r\n  { metric: \"Payment Collection\", current: 82, target: 95 }, // Red - Below Target\r\n];\r\n\r\n// Sample data for simple charts - Realistic revenue figures in thousands\r\nconst revenueData = [\r\n  { month: \"Jan\", value: 1850 },\r\n  { month: \"Feb\", value: 2305 },\r\n  { month: \"Mar\", value: 1870 },\r\n  { month: \"Apr\", value: 2450 },\r\n  { month: \"May\", value: 2890 },\r\n  { month: \"Jun\", value: 3140 },\r\n];\r\n\r\nconst gasTypeData = [\r\n  { type: \"Biogas\", percentage: 45, color: \"bg-blue-500\" },\r\n  { type: \"CBG\", percentage: 30, color: \"bg-green-500\" },\r\n  { type: \"Methane\", percentage: 25, color: \"bg-purple-500\" },\r\n];\r\n\r\nconst customerGrowthData = [\r\n  { month: \"Jan\", customers: 12 },\r\n  { month: \"Feb\", customers: 18 },\r\n  { month: \"Mar\", customers: 15 },\r\n  { month: \"Apr\", customers: 22 },\r\n  { month: \"May\", customers: 25 },\r\n  { month: \"Jun\", customers: 28 },\r\n];\r\n\r\n// Simple Bar Chart Component\r\nconst SimpleBarChart: React.FC<{ data: any[], title: string }> = ({ data, title }) => {\r\n  const maxValue = Math.max(...data.map(d => d.value || d.customers));\r\n\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <div className=\"relative h-48 flex items-end justify-between space-x-1 bg-gray-50 p-4 rounded-lg\">\r\n        {data.map((item, index) => {\r\n          const value = item.value || item.customers;\r\n          const height = (value / maxValue) * 80; // Use 80% of container height\r\n          const isRevenue = item.value !== undefined;\r\n          const displayValue = isRevenue ? `₹${(value/1000).toFixed(1)}K` : value.toString();\r\n\r\n          return (\r\n            <div key={index} className=\"flex-1 flex flex-col items-center relative\">\r\n              {/* Value label above bar */}\r\n              <div className=\"text-xs font-semibold text-gray-700 mb-2 absolute -top-6\">\r\n                {displayValue}\r\n              </div>\r\n\r\n              {/* Bar container */}\r\n              <div className=\"w-full flex flex-col items-center\">\r\n                {/* Actual bar */}\r\n                <div\r\n                  className=\"w-8 bg-gradient-to-t from-blue-600 to-blue-400 rounded-t-md transition-all duration-300 hover:from-blue-700 hover:to-blue-500 shadow-md border border-blue-300\"\r\n                  style={{\r\n                    height: `${Math.max(height, 12)}px`,\r\n                    minHeight: '12px'\r\n                  }}\r\n                  title={`${item.month}: ${displayValue}`}\r\n                />\r\n\r\n                {/* Month label */}\r\n                <span className=\"text-xs text-gray-600 font-medium mt-2\">{item.month}</span>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      {/* Chart info */}\r\n      <div className=\"text-xs text-gray-500 text-center\">\r\n        Peak: {title.includes('Revenue') ? `₹${(maxValue/1000).toFixed(1)}K` : maxValue} •\r\n        Growth: {title.includes('Revenue') ? '+69.7%' : '+133%'} vs Jan\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Simple Pie Chart Component (using simple bars for reliability)\r\nconst SimplePieChart: React.FC<{ data: any[], title: string }> = ({ data, title }) => {\r\n  return (\r\n    <div className=\"space-y-3\">\r\n      <h4 className=\"text-sm font-medium text-gray-700\">{title}</h4>\r\n      <div className=\"space-y-3\">\r\n        {data.map((item, index) => (\r\n          <div key={index} className=\"space-y-1\">\r\n            <div className=\"flex items-center justify-between text-sm\">\r\n              <div className=\"flex items-center space-x-2\">\r\n                <div className={`w-3 h-3 rounded-full ${item.color}`} />\r\n                <span className=\"text-gray-600\">{item.type}</span>\r\n              </div>\r\n              <span className=\"font-medium\">{item.percentage}%</span>\r\n            </div>\r\n            <div className=\"w-full bg-gray-200 rounded-full h-2\">\r\n              <div\r\n                className={`h-2 rounded-full ${item.color} transition-all duration-300`}\r\n                style={{ width: `${item.percentage}%` }}\r\n              />\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SalesDashboard: React.FC = () => {\r\n  const [metrics, setMetrics] = useState<SalesMetrics | null>(null);\r\n  const [recentOrders, setRecentOrders] = useState<Order[]>([]);\r\n  const [inventoryAlerts, setInventoryAlerts] = useState<InventoryItem[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [lastUpdated, setLastUpdated] = useState<Date>(new Date());\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'confirmed': return 'bg-green-100 text-green-800';\r\n      case 'pending': return 'bg-yellow-100 text-yellow-800';\r\n      case 'processing': return 'bg-blue-100 text-blue-800';\r\n      case 'delivered': return 'bg-green-100 text-green-800';\r\n      case 'cancelled': return 'bg-red-100 text-red-800';\r\n      default: return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  const loadDashboardData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const [metricsResponse, ordersResponse, inventoryResponse] = await Promise.all([\r\n        salesService.getSalesMetrics(),\r\n        salesService.getOrders(),\r\n        salesService.getInventory()\r\n      ]);\r\n\r\n      if (metricsResponse.success) {\r\n        setMetrics(metricsResponse.data);\r\n      }\r\n\r\n      if (ordersResponse.success) {\r\n        setRecentOrders(ordersResponse.data.slice(0, 5));\r\n      }\r\n\r\n      if (inventoryResponse.success) {\r\n        // Filter for items that need attention\r\n        const alertItems = inventoryResponse.data.filter(item => {\r\n          const usagePercentage = ((item.quantity - item.availableQuantity) / item.quantity) * 100;\r\n          return usagePercentage > 60 || item.pesoCompliance.status !== 'valid';\r\n        });\r\n        setInventoryAlerts(alertItems.slice(0, 5));\r\n      }\r\n\r\n      setLastUpdated(new Date());\r\n    } catch (error) {\r\n      console.error('Error loading dashboard data:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadDashboardData();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center h-64\">\r\n        <RefreshCw className=\"w-8 h-8 animate-spin\" />\r\n        <span className=\"ml-2\">Loading dashboard...</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-6 space-y-6\">\r\n      {/* Simple Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold tracking-tight\">Sales Dashboard</h1>\r\n          <p className=\"text-muted-foreground\">\r\n            Overview of your biogas sales performance and operations\r\n          </p>\r\n        </div>\r\n        <div className=\"flex items-center space-x-3\">\r\n          <div className=\"text-right text-sm\">\r\n            <div className=\"text-muted-foreground\">Last updated</div>\r\n            <div className=\"font-semibold\">{lastUpdated.toLocaleTimeString()}</div>\r\n          </div>\r\n          <Button\r\n            variant=\"outline\"\r\n            size=\"sm\"\r\n            onClick={loadDashboardData}\r\n          >\r\n            <RefreshCw className=\"w-4 h-4 mr-2\" />\r\n            Refresh\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Key Metrics */}\r\n      {metrics && (\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n          <MetricCard\r\n            title=\"Total Revenue\"\r\n            value={`₹${(metrics.totalRevenue / 1000000).toFixed(1)}M`}\r\n            change={metrics.periodComparison.revenue.change}\r\n            icon={<DollarSign className=\"w-5 h-5 text-green-600\" />}\r\n            description=\"Monthly revenue growth\"\r\n          />\r\n          <MetricCard\r\n            title=\"Total Orders\"\r\n            value={metrics.totalOrders}\r\n            change={metrics.periodComparison.orders.change}\r\n            icon={<FileText className=\"w-5 h-5 text-blue-600\" />}\r\n            description=\"Orders processed\"\r\n          />\r\n          <MetricCard\r\n            title=\"Active Customers\"\r\n            value={metrics.totalCustomers}\r\n            change={metrics.periodComparison.customers.change}\r\n            icon={<Users className=\"w-5 h-5 text-purple-600\" />}\r\n            description=\"Customer base growth\"\r\n          />\r\n          <MetricCard\r\n            title=\"Avg Order Value\"\r\n            value={`₹${(metrics.averageOrderValue / 1000).toFixed(0)}K`}\r\n            icon={<Package className=\"w-5 h-5 text-orange-600\" />}\r\n            description=\"Per order average\"\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {/* Performance Metrics and Revenue Trend in Half Layout */}\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n        {/* Half-size Performance Metrics */}\r\n        <Card>\r\n          <CardHeader className=\"pb-3\">\r\n            <CardTitle className=\"flex items-center space-x-2 text-base\">\r\n              <Activity className=\"w-4 h-4 text-indigo-600\" />\r\n              <span>Performance Metrics</span>\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardContent className=\"space-y-3\">\r\n            {performanceData.map((item) => {\r\n              const percentage = (item.current / item.target) * 100;\r\n              const isOnTarget = item.current >= item.target;\r\n              const isNearTarget = item.current >= item.target * 0.9;\r\n\r\n              return (\r\n                <div key={item.metric} className=\"space-y-1\">\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <span className=\"text-xs font-medium text-gray-700\">{item.metric}</span>\r\n                    <div className=\"flex items-center space-x-1\">\r\n                      <span className=\"text-xs text-gray-500\">\r\n                        {item.current}% / {item.target}%\r\n                      </span>\r\n                      <div className={`w-3 h-3 rounded-full flex items-center justify-center text-xs ${\r\n                        isOnTarget\r\n                          ? 'bg-green-100 text-green-700'\r\n                          : isNearTarget\r\n                          ? 'bg-yellow-100 text-yellow-700'\r\n                          : 'bg-red-100 text-red-700'\r\n                      }`}>\r\n                        {isOnTarget ? '✓' : isNearTarget ? '!' : '⚠'}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Mini Progress bar */}\r\n                  <div className=\"relative w-full bg-gray-200 rounded-full h-1.5\">\r\n                    <div\r\n                      className={`h-1.5 rounded-full transition-all duration-300 ${\r\n                        isOnTarget\r\n                          ? 'bg-green-500'\r\n                          : isNearTarget\r\n                          ? 'bg-yellow-500'\r\n                          : 'bg-red-500'\r\n                      }`}\r\n                      style={{ width: `${Math.min(percentage, 100)}%` }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Revenue Trend Chart */}\r\n        <Card>\r\n          <CardHeader className=\"pb-3\">\r\n            <CardTitle className=\"flex items-center space-x-2 text-base\">\r\n              <BarChart3 className=\"w-4 h-4 text-blue-600\" />\r\n              <span>Revenue Trend</span>\r\n            </CardTitle>\r\n            <CardDescription className=\"text-xs\">6-month revenue performance</CardDescription>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <SimpleBarChart data={revenueData} title=\"Monthly Revenue\" />\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      {/* Other Charts Section */}\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n        {/* Gas Type Distribution */}\r\n        <Card>\r\n          <CardHeader className=\"pb-3\">\r\n            <CardTitle className=\"flex items-center space-x-2 text-base\">\r\n              <PieChart className=\"w-4 h-4 text-green-600\" />\r\n              <span>Gas Type Mix</span>\r\n            </CardTitle>\r\n            <CardDescription className=\"text-xs\">Distribution by gas type</CardDescription>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <SimplePieChart data={gasTypeData} title=\"Gas Types\" />\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Customer Growth */}\r\n        <Card>\r\n          <CardHeader className=\"pb-3\">\r\n            <CardTitle className=\"flex items-center space-x-2 text-base\">\r\n              <Activity className=\"w-4 h-4 text-purple-600\" />\r\n              <span>Customer Growth</span>\r\n            </CardTitle>\r\n            <CardDescription className=\"text-xs\">New customers per month</CardDescription>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <SimpleBarChart data={customerGrowthData} title=\"New Customers\" />\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      {/* Recent Orders and Inventory Alerts */}\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n        {/* Recent Orders */}\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle className=\"flex items-center space-x-2\">\r\n              <FileText className=\"w-5 h-5\" />\r\n              <span>Recent Orders</span>\r\n            </CardTitle>\r\n            <CardDescription>Latest order activity</CardDescription>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"space-y-4\">\r\n              {recentOrders.length > 0 ? (\r\n                recentOrders.map((order) => (\r\n                  <RecentOrderItem key={order.id} order={order} />\r\n                ))\r\n              ) : (\r\n                <p className=\"text-muted-foreground text-center py-4\">\r\n                  No recent orders available\r\n                </p>\r\n              )}\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Inventory Alerts */}\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle className=\"flex items-center space-x-2\">\r\n              <AlertTriangle className=\"w-5 h-5\" />\r\n              <span>Inventory Alerts</span>\r\n            </CardTitle>\r\n            <CardDescription>Items requiring attention</CardDescription>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"space-y-4\">\r\n              {inventoryAlerts.length > 0 ? (\r\n                inventoryAlerts.map((item) => (\r\n                  <InventoryAlert key={item.id} item={item} />\r\n                ))\r\n              ) : (\r\n                <p className=\"text-muted-foreground text-center py-4\">\r\n                  No inventory alerts at this time\r\n                </p>\r\n              )}\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SalesDashboard;","import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Textarea } from '@/components/ui/textarea';\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\r\nimport { Dialog, DialogContent, DialogDescription, DialogFooter, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog';\r\nimport { Progress } from '@/components/ui/progress';\r\nimport {\r\n  Users,\r\n  Search,\r\n  Filter,\r\n  Plus,\r\n  Edit,\r\n  MapPin,\r\n  Phone,\r\n  Mail,\r\n  Building,\r\n  CreditCard,\r\n  TrendingUp,\r\n  TrendingDown,\r\n  AlertTriangle,\r\n  Calendar,\r\n  FileText,\r\n  MoreHorizontal\r\n} from 'lucide-react';\r\nimport { salesService } from '../services/salesService';\r\nimport { Customer, CustomerFilters } from '../types';\r\n\r\ninterface CustomerCardProps {\r\n  customer: Customer;\r\n  onEdit: (customer: Customer) => void;\r\n  onViewDetails: (customer: Customer) => void;\r\n}\r\n\r\nconst CustomerCard: React.FC<CustomerCardProps> = ({ customer, onEdit, onViewDetails }) => {\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'active': return 'bg-green-100 text-green-800';\r\n      case 'inactive': return 'bg-gray-100 text-gray-800';\r\n      case 'suspended': return 'bg-red-100 text-red-800';\r\n      default: return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  const getTypeColor = (type: string) => {\r\n    switch (type) {\r\n      case 'commercial': return 'bg-blue-100 text-blue-800';\r\n      case 'industrial': return 'bg-purple-100 text-purple-800';\r\n      case 'residential': return 'bg-green-100 text-green-800';\r\n      default: return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  const getRiskColor = (risk: string) => {\r\n    switch (risk) {\r\n      case 'low': return 'text-green-600';\r\n      case 'medium': return 'text-yellow-600';\r\n      case 'high': return 'text-red-600';\r\n      default: return 'text-gray-600';\r\n    }\r\n  };\r\n\r\n  const creditUtilization = (customer.creditUsed / customer.creditLimit) * 100;\r\n\r\n  return (\r\n    <Card className=\"hover:shadow-md transition-shadow\">\r\n      <CardHeader className=\"pb-3\">\r\n        <div className=\"flex items-start justify-between\">\r\n          <div className=\"space-y-1\">\r\n            <CardTitle className=\"text-lg\">{customer.name}</CardTitle>\r\n            <div className=\"flex items-center space-x-2\">\r\n              <Badge className={getStatusColor(customer.status)}>{customer.status}</Badge>\r\n              <Badge className={getTypeColor(customer.type)}>{customer.type}</Badge>\r\n            </div>\r\n          </div>\r\n          <Button variant=\"ghost\" size=\"sm\">\r\n            <MoreHorizontal className=\"w-4 h-4\" />\r\n          </Button>\r\n        </div>\r\n      </CardHeader>\r\n      <CardContent className=\"space-y-4\">\r\n        {/* Contact Information */}\r\n        <div className=\"space-y-2\">\r\n          <div className=\"flex items-center text-sm text-gray-600\">\r\n            <Building className=\"w-4 h-4 mr-2\" />\r\n            {customer.contactPerson}\r\n          </div>\r\n          <div className=\"flex items-center text-sm text-gray-600\">\r\n            <Phone className=\"w-4 h-4 mr-2\" />\r\n            {customer.phone}\r\n          </div>\r\n          <div className=\"flex items-center text-sm text-gray-600\">\r\n            <Mail className=\"w-4 h-4 mr-2\" />\r\n            {customer.email}\r\n          </div>\r\n          <div className=\"flex items-center text-sm text-gray-600\">\r\n            <MapPin className=\"w-4 h-4 mr-2\" />\r\n            {customer.address.city}, {customer.address.state}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Credit Information */}\r\n        <div className=\"space-y-2\">\r\n          <div className=\"flex items-center justify-between text-sm\">\r\n            <span>Credit Utilization</span>\r\n            <span className={getRiskColor(customer.riskCategory)}>\r\n              {creditUtilization.toFixed(1)}%\r\n            </span>\r\n          </div>\r\n          <Progress value={creditUtilization} className=\"h-2\" />\r\n          <div className=\"flex justify-between text-xs text-gray-500\">\r\n            <span>Used: ₹{(customer.creditUsed / 1000).toFixed(0)}K</span>\r\n            <span>Limit: ₹{(customer.creditLimit / 1000).toFixed(0)}K</span>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Performance Metrics */}\r\n        <div className=\"grid grid-cols-2 gap-4 pt-2 border-t\">\r\n          <div className=\"text-center\">\r\n            <div className=\"text-lg font-semibold\">{customer.totalOrders}</div>\r\n            <div className=\"text-xs text-gray-500\">Total Orders</div>\r\n          </div>\r\n          <div className=\"text-center\">\r\n            <div className=\"text-lg font-semibold\">₹{(customer.totalRevenue / 1000).toFixed(0)}K</div>\r\n            <div className=\"text-xs text-gray-500\">Revenue</div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Action Buttons */}\r\n        <div className=\"flex space-x-2 pt-2\">\r\n          <Button variant=\"outline\" size=\"sm\" className=\"flex-1\" onClick={() => onViewDetails(customer)}>\r\n            View Details\r\n          </Button>\r\n          <Button variant=\"outline\" size=\"sm\" className=\"flex-1\" onClick={() => onEdit(customer)}>\r\n            <Edit className=\"w-4 h-4 mr-1\" />\r\n            Edit\r\n          </Button>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\ninterface CustomerFormProps {\r\n  customer?: Customer;\r\n  onSave: (customer: Customer) => void;\r\n  onCancel: () => void;\r\n}\r\n\r\nconst CustomerForm: React.FC<CustomerFormProps> = ({ customer, onSave, onCancel }) => {\r\n  const [formData, setFormData] = useState<Partial<Customer>>(\r\n    customer || {\r\n      name: '',\r\n      type: 'commercial',\r\n      contactPerson: '',\r\n      phone: '',\r\n      email: '',\r\n      address: {\r\n        street: '',\r\n        city: '',\r\n        state: '',\r\n        pincode: ''\r\n      },\r\n      creditLimit: 0,\r\n      paymentTerms: 30,\r\n      gstNumber: '',\r\n      panNumber: '',\r\n      status: 'active'\r\n    }\r\n  );\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    onSave(formData as Customer);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n      <div className=\"grid grid-cols-2 gap-4\">\r\n        <div className=\"space-y-2\">\r\n          <Label htmlFor=\"name\">Company/Customer Name</Label>\r\n          <Input\r\n            id=\"name\"\r\n            value={formData.name}\r\n            onChange={(e) => setFormData({ ...formData, name: e.target.value })}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"space-y-2\">\r\n          <Label htmlFor=\"type\">Customer Type</Label>\r\n          <Select value={formData.type} onValueChange={(value) => setFormData({ ...formData, type: value as any })}>\r\n            <SelectTrigger>\r\n              <SelectValue />\r\n            </SelectTrigger>\r\n            <SelectContent>\r\n              <SelectItem value=\"commercial\">Commercial</SelectItem>\r\n              <SelectItem value=\"industrial\">Industrial</SelectItem>\r\n              <SelectItem value=\"residential\">Residential</SelectItem>\r\n            </SelectContent>\r\n          </Select>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-2 gap-4\">\r\n        <div className=\"space-y-2\">\r\n          <Label htmlFor=\"contactPerson\">Contact Person</Label>\r\n          <Input\r\n            id=\"contactPerson\"\r\n            value={formData.contactPerson}\r\n            onChange={(e) => setFormData({ ...formData, contactPerson: e.target.value })}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"space-y-2\">\r\n          <Label htmlFor=\"phone\">Phone Number</Label>\r\n          <Input\r\n            id=\"phone\"\r\n            value={formData.phone}\r\n            onChange={(e) => setFormData({ ...formData, phone: e.target.value })}\r\n            required\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"space-y-2\">\r\n        <Label htmlFor=\"email\">Email Address</Label>\r\n        <Input\r\n          id=\"email\"\r\n          type=\"email\"\r\n          value={formData.email}\r\n          onChange={(e) => setFormData({ ...formData, email: e.target.value })}\r\n          required\r\n        />\r\n      </div>\r\n\r\n      <div className=\"space-y-2\">\r\n        <Label htmlFor=\"street\">Street Address</Label>\r\n        <Textarea\r\n          id=\"street\"\r\n          value={formData.address?.street}\r\n          onChange={(e) => setFormData({\r\n            ...formData,\r\n            address: { ...formData.address!, street: e.target.value }\r\n          })}\r\n          required\r\n        />\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-3 gap-4\">\r\n        <div className=\"space-y-2\">\r\n          <Label htmlFor=\"city\">City</Label>\r\n          <Input\r\n            id=\"city\"\r\n            value={formData.address?.city}\r\n            onChange={(e) => setFormData({\r\n              ...formData,\r\n              address: { ...formData.address!, city: e.target.value }\r\n            })}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"space-y-2\">\r\n          <Label htmlFor=\"state\">State</Label>\r\n          <Input\r\n            id=\"state\"\r\n            value={formData.address?.state}\r\n            onChange={(e) => setFormData({\r\n              ...formData,\r\n              address: { ...formData.address!, state: e.target.value }\r\n            })}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"space-y-2\">\r\n          <Label htmlFor=\"pincode\">PIN Code</Label>\r\n          <Input\r\n            id=\"pincode\"\r\n            value={formData.address?.pincode}\r\n            onChange={(e) => setFormData({\r\n              ...formData,\r\n              address: { ...formData.address!, pincode: e.target.value }\r\n            })}\r\n            required\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-2 gap-4\">\r\n        <div className=\"space-y-2\">\r\n          <Label htmlFor=\"creditLimit\">Credit Limit (₹)</Label>\r\n          <Input\r\n            id=\"creditLimit\"\r\n            type=\"number\"\r\n            value={formData.creditLimit}\r\n            onChange={(e) => setFormData({ ...formData, creditLimit: Number(e.target.value) })}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"space-y-2\">\r\n          <Label htmlFor=\"paymentTerms\">Payment Terms (Days)</Label>\r\n          <Input\r\n            id=\"paymentTerms\"\r\n            type=\"number\"\r\n            value={formData.paymentTerms}\r\n            onChange={(e) => setFormData({ ...formData, paymentTerms: Number(e.target.value) })}\r\n            required\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-2 gap-4\">\r\n        <div className=\"space-y-2\">\r\n          <Label htmlFor=\"gstNumber\">GST Number (Optional)</Label>\r\n          <Input\r\n            id=\"gstNumber\"\r\n            value={formData.gstNumber}\r\n            onChange={(e) => setFormData({ ...formData, gstNumber: e.target.value })}\r\n          />\r\n        </div>\r\n        <div className=\"space-y-2\">\r\n          <Label htmlFor=\"panNumber\">PAN Number (Optional)</Label>\r\n          <Input\r\n            id=\"panNumber\"\r\n            value={formData.panNumber}\r\n            onChange={(e) => setFormData({ ...formData, panNumber: e.target.value })}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <DialogFooter>\r\n        <Button type=\"button\" variant=\"outline\" onClick={onCancel}>\r\n          Cancel\r\n        </Button>\r\n        <Button type=\"submit\">\r\n          {customer ? 'Update Customer' : 'Create Customer'}\r\n        </Button>\r\n      </DialogFooter>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst CustomerManagement: React.FC = () => {\r\n  const [customers, setCustomers] = useState<Customer[]>([]);\r\n  const [filteredCustomers, setFilteredCustomers] = useState<Customer[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [filters, setFilters] = useState<CustomerFilters>({});\r\n  const [selectedCustomer, setSelectedCustomer] = useState<Customer | null>(null);\r\n  const [showCustomerForm, setShowCustomerForm] = useState(false);\r\n  const [showCustomerDetails, setShowCustomerDetails] = useState(false);\r\n\r\n  const loadCustomers = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await salesService.getCustomers(filters);\r\n      if (response.success) {\r\n        setCustomers(response.data);\r\n        setFilteredCustomers(response.data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading customers:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadCustomers();\r\n  }, [filters]);\r\n\r\n  useEffect(() => {\r\n    const filtered = customers.filter(customer =>\r\n      customer.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      customer.contactPerson.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      customer.email.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      customer.phone.includes(searchTerm)\r\n    );\r\n    setFilteredCustomers(filtered);\r\n  }, [customers, searchTerm]);\r\n\r\n  const handleCreateCustomer = () => {\r\n    setSelectedCustomer(null);\r\n    setShowCustomerForm(true);\r\n  };\r\n\r\n  const handleEditCustomer = (customer: Customer) => {\r\n    setSelectedCustomer(customer);\r\n    setShowCustomerForm(true);\r\n  };\r\n\r\n  const handleViewCustomerDetails = (customer: Customer) => {\r\n    setSelectedCustomer(customer);\r\n    setShowCustomerDetails(true);\r\n  };\r\n\r\n  const handleSaveCustomer = async (customerData: Customer) => {\r\n    try {\r\n      if (selectedCustomer) {\r\n        // Update existing customer\r\n        await salesService.updateCustomer(selectedCustomer.id, customerData);\r\n      } else {\r\n        // Create new customer\r\n        await salesService.createCustomer(customerData);\r\n      }\r\n      setShowCustomerForm(false);\r\n      loadCustomers();\r\n    } catch (error) {\r\n      console.error('Error saving customer:', error);\r\n    }\r\n  };\r\n\r\n  const getCustomerStats = () => {\r\n    const total = customers.length;\r\n    const active = customers.filter(c => c.status === 'active').length;\r\n    const highRisk = customers.filter(c => c.riskCategory === 'high').length;\r\n    const totalRevenue = customers.reduce((sum, c) => sum + c.totalRevenue, 0);\r\n\r\n    return { total, active, highRisk, totalRevenue };\r\n  };\r\n\r\n  const stats = getCustomerStats();\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold\">Customer Management</h1>\r\n          <p className=\"text-gray-600\">\r\n            Manage customer profiles, credit limits, and relationships\r\n          </p>\r\n        </div>\r\n        <Button onClick={handleCreateCustomer}>\r\n          <Plus className=\"w-4 h-4 mr-2\" />\r\n          Add Customer\r\n        </Button>\r\n      </div>\r\n\r\n      {/* Statistics Cards */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\r\n        <Card>\r\n          <CardContent className=\"p-6\">\r\n            <div className=\"flex items-center\">\r\n              <Users className=\"w-8 h-8 text-blue-600\" />\r\n              <div className=\"ml-4\">\r\n                <p className=\"text-sm font-medium text-gray-600\">Total Customers</p>\r\n                <p className=\"text-2xl font-bold\">{stats.total}</p>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n        <Card>\r\n          <CardContent className=\"p-6\">\r\n            <div className=\"flex items-center\">\r\n              <TrendingUp className=\"w-8 h-8 text-green-600\" />\r\n              <div className=\"ml-4\">\r\n                <p className=\"text-sm font-medium text-gray-600\">Active Customers</p>\r\n                <p className=\"text-2xl font-bold\">{stats.active}</p>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n        <Card>\r\n          <CardContent className=\"p-6\">\r\n            <div className=\"flex items-center\">\r\n              <AlertTriangle className=\"w-8 h-8 text-red-600\" />\r\n              <div className=\"ml-4\">\r\n                <p className=\"text-sm font-medium text-gray-600\">High Risk</p>\r\n                <p className=\"text-2xl font-bold\">{stats.highRisk}</p>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n        <Card>\r\n          <CardContent className=\"p-6\">\r\n            <div className=\"flex items-center\">\r\n              <CreditCard className=\"w-8 h-8 text-purple-600\" />\r\n              <div className=\"ml-4\">\r\n                <p className=\"text-sm font-medium text-gray-600\">Total Revenue</p>\r\n                <p className=\"text-2xl font-bold\">₹{(stats.totalRevenue / 1000000).toFixed(1)}M</p>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      {/* Search and Filters */}\r\n      <Card>\r\n        <CardContent className=\"p-6\">\r\n          <div className=\"flex flex-col md:flex-row gap-4\">\r\n            <div className=\"relative flex-1\">\r\n              <Search className=\"absolute left-3 top-3 h-4 w-4 text-gray-400\" />\r\n              <Input\r\n                placeholder=\"Search customers by name, contact, email, or phone...\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n                className=\"pl-10\"\r\n              />\r\n            </div>\r\n            <div className=\"flex gap-2\">\r\n              <Select value={filters.status?.[0] || 'all'} onValueChange={(value) =>\r\n                setFilters({ ...filters, status: value === 'all' ? undefined : [value] })\r\n              }>\r\n                <SelectTrigger className=\"w-40\">\r\n                  <SelectValue placeholder=\"Status\" />\r\n                </SelectTrigger>\r\n                <SelectContent>\r\n                  <SelectItem value=\"all\">All Status</SelectItem>\r\n                  <SelectItem value=\"active\">Active</SelectItem>\r\n                  <SelectItem value=\"inactive\">Inactive</SelectItem>\r\n                  <SelectItem value=\"suspended\">Suspended</SelectItem>\r\n                </SelectContent>\r\n              </Select>\r\n              <Select value={filters.type?.[0] || 'all'} onValueChange={(value) =>\r\n                setFilters({ ...filters, type: value === 'all' ? undefined : [value] })\r\n              }>\r\n                <SelectTrigger className=\"w-40\">\r\n                  <SelectValue placeholder=\"Type\" />\r\n                </SelectTrigger>\r\n                <SelectContent>\r\n                  <SelectItem value=\"all\">All Types</SelectItem>\r\n                  <SelectItem value=\"commercial\">Commercial</SelectItem>\r\n                  <SelectItem value=\"industrial\">Industrial</SelectItem>\r\n                  <SelectItem value=\"residential\">Residential</SelectItem>\r\n                </SelectContent>\r\n              </Select>\r\n              <Button variant=\"outline\">\r\n                <Filter className=\"w-4 h-4 mr-2\" />\r\n                More Filters\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Customer Grid */}\r\n      {loading ? (\r\n        <div className=\"text-center py-8\">Loading customers...</div>\r\n      ) : (\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n          {filteredCustomers.map((customer) => (\r\n            <CustomerCard\r\n              key={customer.id}\r\n              customer={customer}\r\n              onEdit={handleEditCustomer}\r\n              onViewDetails={handleViewCustomerDetails}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {/* Customer Form Dialog */}\r\n      <Dialog open={showCustomerForm} onOpenChange={setShowCustomerForm}>\r\n        <DialogContent className=\"max-w-2xl max-h-[80vh] overflow-y-auto\">\r\n          <DialogHeader>\r\n            <DialogTitle>\r\n              {selectedCustomer ? 'Edit Customer' : 'Add New Customer'}\r\n            </DialogTitle>\r\n            <DialogDescription>\r\n              {selectedCustomer ? 'Update customer information and settings.' : 'Create a new customer profile with contact and credit information.'}\r\n            </DialogDescription>\r\n          </DialogHeader>\r\n          <CustomerForm\r\n            customer={selectedCustomer || undefined}\r\n            onSave={handleSaveCustomer}\r\n            onCancel={() => setShowCustomerForm(false)}\r\n          />\r\n        </DialogContent>\r\n      </Dialog>\r\n\r\n      {/* Customer Details Dialog */}\r\n      <Dialog open={showCustomerDetails} onOpenChange={setShowCustomerDetails}>\r\n        <DialogContent className=\"max-w-4xl max-h-[80vh] overflow-y-auto\">\r\n          <DialogHeader>\r\n            <DialogTitle>{selectedCustomer?.name}</DialogTitle>\r\n            <DialogDescription>Complete customer profile and history</DialogDescription>\r\n          </DialogHeader>\r\n          {selectedCustomer && (\r\n            <Tabs defaultValue=\"profile\" className=\"w-full\">\r\n              <TabsList>\r\n                <TabsTrigger value=\"profile\">Profile</TabsTrigger>\r\n                <TabsTrigger value=\"orders\">Orders</TabsTrigger>\r\n                <TabsTrigger value=\"payments\">Payments</TabsTrigger>\r\n                <TabsTrigger value=\"analytics\">Analytics</TabsTrigger>\r\n              </TabsList>\r\n              <TabsContent value=\"profile\" className=\"space-y-4\">\r\n                <div className=\"grid grid-cols-2 gap-4\">\r\n                  <Card>\r\n                    <CardHeader>\r\n                      <CardTitle className=\"text-sm\">Contact Information</CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent className=\"space-y-2\">\r\n                      <div><strong>Contact Person:</strong> {selectedCustomer.contactPerson}</div>\r\n                      <div><strong>Phone:</strong> {selectedCustomer.phone}</div>\r\n                      <div><strong>Email:</strong> {selectedCustomer.email}</div>\r\n                      <div><strong>Address:</strong> {selectedCustomer.address.street}, {selectedCustomer.address.city}</div>\r\n                    </CardContent>\r\n                  </Card>\r\n                  <Card>\r\n                    <CardHeader>\r\n                      <CardTitle className=\"text-sm\">Business Information</CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent className=\"space-y-2\">\r\n                      <div><strong>Type:</strong> {selectedCustomer.type}</div>\r\n                      <div><strong>GST Number:</strong> {selectedCustomer.gstNumber || 'N/A'}</div>\r\n                      <div><strong>PAN Number:</strong> {selectedCustomer.panNumber || 'N/A'}</div>\r\n                      <div><strong>Registration Date:</strong> {selectedCustomer.registrationDate.toLocaleDateString()}</div>\r\n                    </CardContent>\r\n                  </Card>\r\n                </div>\r\n              </TabsContent>\r\n              <TabsContent value=\"orders\">\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle>Order History</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    <div className=\"text-center py-8 text-gray-500\">\r\n                      Order history will be displayed here\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              </TabsContent>\r\n              <TabsContent value=\"payments\">\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle>Payment History</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    <div className=\"text-center py-8 text-gray-500\">\r\n                      Payment history will be displayed here\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              </TabsContent>\r\n              <TabsContent value=\"analytics\">\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle>Customer Analytics</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    <div className=\"text-center py-8 text-gray-500\">\r\n                      Customer analytics will be displayed here\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              </TabsContent>\r\n            </Tabs>\r\n          )}\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomerManagement;","import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Textarea } from '@/components/ui/textarea';\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\r\nimport { Dialog, DialogContent, DialogDescription, DialogFooter, DialogHeader, DialogTitle } from '@/components/ui/dialog';\r\nimport { Progress } from '@/components/ui/progress';\r\nimport { Separator } from '@/components/ui/separator';\r\nimport {\r\n  FileText,\r\n  Plus,\r\n  Edit,\r\n  Eye,\r\n  Download,\r\n  Upload,\r\n  Calendar,\r\n  DollarSign,\r\n  Users,\r\n  Package,\r\n  Truck,\r\n  Clock,\r\n  CheckCircle,\r\n  AlertTriangle,\r\n  XCircle,\r\n  MoreHorizontal,\r\n  PenTool,\r\n  History,\r\n  Send\r\n} from 'lucide-react';\r\nimport { salesService } from '../services/salesService';\r\nimport { Contract, Customer } from '../types';\r\n\r\ninterface ContractCardProps {\r\n  contract: Contract;\r\n  customer?: Customer;\r\n  onEdit: (contract: Contract) => void;\r\n  onView: (contract: Contract) => void;\r\n  onSign: (contract: Contract) => void;\r\n}\r\n\r\nconst ContractCard: React.FC<ContractCardProps> = ({ contract, customer, onEdit, onView, onSign }) => {\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'active': return 'bg-green-100 text-green-800';\r\n      case 'draft': return 'bg-yellow-100 text-yellow-800';\r\n      case 'expired': return 'bg-red-100 text-red-800';\r\n      case 'terminated': return 'bg-gray-100 text-gray-800';\r\n      default: return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  const getTypeColor = (type: string) => {\r\n    switch (type) {\r\n      case 'supply': return 'bg-blue-100 text-blue-800';\r\n      case 'bulk': return 'bg-purple-100 text-purple-800';\r\n      case 'subscription': return 'bg-indigo-100 text-indigo-800';\r\n      default: return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  const getDaysRemaining = () => {\r\n    const today = new Date();\r\n    const endDate = new Date(contract.endDate);\r\n    const diffTime = endDate.getTime() - today.getTime();\r\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n    return diffDays;\r\n  };\r\n\r\n  const daysRemaining = getDaysRemaining();\r\n  const contractProgress = (() => {\r\n    const start = new Date(contract.startDate).getTime();\r\n    const end = new Date(contract.endDate).getTime();\r\n    const now = new Date().getTime();\r\n    const total = end - start;\r\n    const elapsed = now - start;\r\n    return Math.min(Math.max((elapsed / total) * 100, 0), 100);\r\n  })();\r\n\r\n  return (\r\n    <Card className=\"hover:shadow-md transition-shadow\">\r\n      <CardHeader className=\"pb-3\">\r\n        <div className=\"flex items-start justify-between\">\r\n          <div className=\"space-y-1\">\r\n            <CardTitle className=\"text-lg\">{contract.contractNumber}</CardTitle>\r\n            <div className=\"flex items-center space-x-2\">\r\n              <Badge className={getStatusColor(contract.status)}>{contract.status}</Badge>\r\n              <Badge className={getTypeColor(contract.type)}>{contract.type}</Badge>\r\n              {contract.version > 1 && (\r\n                <Badge variant=\"outline\">v{contract.version}</Badge>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <Button variant=\"ghost\" size=\"sm\">\r\n            <MoreHorizontal className=\"w-4 h-4\" />\r\n          </Button>\r\n        </div>\r\n      </CardHeader>\r\n      <CardContent className=\"space-y-4\">\r\n        {/* Customer Information */}\r\n        {customer && (\r\n          <div className=\"flex items-center text-sm text-gray-600\">\r\n            <Users className=\"w-4 h-4 mr-2\" />\r\n            {customer.name}\r\n          </div>\r\n        )}\r\n\r\n        {/* Contract Details */}\r\n        <div className=\"grid grid-cols-2 gap-4 text-sm\">\r\n          <div className=\"space-y-1\">\r\n            <div className=\"flex items-center text-gray-600\">\r\n              <Package className=\"w-4 h-4 mr-1\" />\r\n              {contract.gasType}\r\n            </div>\r\n            <div className=\"flex items-center text-gray-600\">\r\n              <DollarSign className=\"w-4 h-4 mr-1\" />\r\n              ₹{contract.pricePerUnit}/unit\r\n            </div>\r\n          </div>\r\n          <div className=\"space-y-1\">\r\n            <div className=\"flex items-center text-gray-600\">\r\n              <Truck className=\"w-4 h-4 mr-1\" />\r\n              {contract.deliveryTerms.frequency}\r\n            </div>\r\n            <div className=\"flex items-center text-gray-600\">\r\n              <Calendar className=\"w-4 h-4 mr-1\" />\r\n              {daysRemaining > 0 ? `${daysRemaining} days left` : 'Expired'}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Contract Progress */}\r\n        <div className=\"space-y-2\">\r\n          <div className=\"flex justify-between text-sm\">\r\n            <span>Contract Progress</span>\r\n            <span>{contractProgress.toFixed(0)}%</span>\r\n          </div>\r\n          <Progress value={contractProgress} className=\"h-2\" />\r\n          <div className=\"flex justify-between text-xs text-gray-500\">\r\n            <span>Start: {new Date(contract.startDate).toLocaleDateString()}</span>\r\n            <span>End: {new Date(contract.endDate).toLocaleDateString()}</span>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Financial Summary */}\r\n        <div className=\"grid grid-cols-2 gap-4 pt-2 border-t text-center\">\r\n          <div>\r\n            <div className=\"text-lg font-semibold\">₹{(contract.totalValue / 1000000).toFixed(1)}M</div>\r\n            <div className=\"text-xs text-gray-500\">Total Value</div>\r\n          </div>\r\n          <div>\r\n            <div className=\"text-lg font-semibold\">{contract.quantity.toLocaleString()}</div>\r\n            <div className=\"text-xs text-gray-500\">Quantity/Month</div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Action Buttons */}\r\n        <div className=\"flex space-x-2 pt-2\">\r\n          <Button variant=\"outline\" size=\"sm\" className=\"flex-1\" onClick={() => onView(contract)}>\r\n            <Eye className=\"w-4 h-4 mr-1\" />\r\n            View\r\n          </Button>\r\n          {contract.status === 'draft' && (\r\n            <Button variant=\"outline\" size=\"sm\" className=\"flex-1\" onClick={() => onSign(contract)}>\r\n              <PenTool className=\"w-4 h-4 mr-1\" />\r\n              Sign\r\n            </Button>\r\n          )}\r\n          <Button variant=\"outline\" size=\"sm\" className=\"flex-1\" onClick={() => onEdit(contract)}>\r\n            <Edit className=\"w-4 h-4 mr-1\" />\r\n            Edit\r\n          </Button>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\ninterface ContractFormProps {\r\n  contract?: Contract;\r\n  customers: Customer[];\r\n  onSave: (contract: Partial<Contract>) => void;\r\n  onCancel: () => void;\r\n}\r\n\r\nconst ContractForm: React.FC<ContractFormProps> = ({ contract, customers, onSave, onCancel }) => {\r\n  const [formData, setFormData] = useState<Partial<Contract>>(\r\n    contract || {\r\n      customerId: '',\r\n      contractNumber: `SB-${new Date().getFullYear()}-${Date.now().toString().slice(-6)}`,\r\n      type: 'supply',\r\n      status: 'draft',\r\n      startDate: new Date(),\r\n      endDate: new Date(Date.now() + 365 * 24 * 60 * 60 * 1000),\r\n      gasType: 'biogas',\r\n      quantity: 0,\r\n      pricePerUnit: 0,\r\n      paymentTerms: {\r\n        advancePercentage: 20,\r\n        creditDays: 30,\r\n        penaltyRate: 2\r\n      },\r\n      deliveryTerms: {\r\n        location: '',\r\n        frequency: 'monthly',\r\n        transportMode: 'pipeline'\r\n      },\r\n      version: 1,\r\n      documents: []\r\n    }\r\n  );\r\n\r\n  const calculateTotalValue = () => {\r\n    return (formData.quantity || 0) * (formData.pricePerUnit || 0) * 12; // Annual value\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    const contractData = {\r\n      ...formData,\r\n      totalValue: calculateTotalValue()\r\n    };\r\n    onSave(contractData);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n      {/* Basic Information */}\r\n      <div className=\"space-y-4\">\r\n        <h3 className=\"text-lg font-semibold\">Basic Information</h3>\r\n        <div className=\"grid grid-cols-2 gap-4\">\r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"contractNumber\">Contract Number</Label>\r\n            <Input\r\n              id=\"contractNumber\"\r\n              value={formData.contractNumber}\r\n              onChange={(e) => setFormData({ ...formData, contractNumber: e.target.value })}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"customerId\">Customer</Label>\r\n            <Select value={formData.customerId} onValueChange={(value) => setFormData({ ...formData, customerId: value })}>\r\n              <SelectTrigger>\r\n                <SelectValue placeholder=\"Select customer\" />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                {customers.map((customer) => (\r\n                  <SelectItem key={customer.id} value={customer.id}>\r\n                    {customer.name}\r\n                  </SelectItem>\r\n                ))}\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-2 gap-4\">\r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"type\">Contract Type</Label>\r\n            <Select value={formData.type} onValueChange={(value) => setFormData({ ...formData, type: value as any })}>\r\n              <SelectTrigger>\r\n                <SelectValue />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                <SelectItem value=\"supply\">Supply Agreement</SelectItem>\r\n                <SelectItem value=\"bulk\">Bulk Purchase</SelectItem>\r\n                <SelectItem value=\"subscription\">Subscription</SelectItem>\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"gasType\">Gas Type</Label>\r\n            <Select value={formData.gasType} onValueChange={(value) => setFormData({ ...formData, gasType: value as any })}>\r\n              <SelectTrigger>\r\n                <SelectValue />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                <SelectItem value=\"biogas\">Biogas</SelectItem>\r\n                <SelectItem value=\"compressed\">Compressed Gas</SelectItem>\r\n                <SelectItem value=\"liquefied\">Liquefied Gas</SelectItem>\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-2 gap-4\">\r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"startDate\">Start Date</Label>\r\n            <Input\r\n              id=\"startDate\"\r\n              type=\"date\"\r\n              value={formData.startDate?.toISOString().split('T')[0]}\r\n              onChange={(e) => setFormData({ ...formData, startDate: new Date(e.target.value) })}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"endDate\">End Date</Label>\r\n            <Input\r\n              id=\"endDate\"\r\n              type=\"date\"\r\n              value={formData.endDate?.toISOString().split('T')[0]}\r\n              onChange={(e) => setFormData({ ...formData, endDate: new Date(e.target.value) })}\r\n              required\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Separator />\r\n\r\n      {/* Commercial Terms */}\r\n      <div className=\"space-y-4\">\r\n        <h3 className=\"text-lg font-semibold\">Commercial Terms</h3>\r\n        <div className=\"grid grid-cols-2 gap-4\">\r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"quantity\">Monthly Quantity</Label>\r\n            <Input\r\n              id=\"quantity\"\r\n              type=\"number\"\r\n              value={formData.quantity}\r\n              onChange={(e) => setFormData({ ...formData, quantity: Number(e.target.value) })}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"pricePerUnit\">Price per Unit (₹)</Label>\r\n            <Input\r\n              id=\"pricePerUnit\"\r\n              type=\"number\"\r\n              step=\"0.01\"\r\n              value={formData.pricePerUnit}\r\n              onChange={(e) => setFormData({ ...formData, pricePerUnit: Number(e.target.value) })}\r\n              required\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"p-4 bg-gray-50 rounded-lg\">\r\n          <div className=\"text-sm text-gray-600\">Total Annual Value</div>\r\n          <div className=\"text-2xl font-bold\">₹{calculateTotalValue().toLocaleString()}</div>\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-3 gap-4\">\r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"advancePercentage\">Advance Percentage (%)</Label>\r\n            <Input\r\n              id=\"advancePercentage\"\r\n              type=\"number\"\r\n              value={formData.paymentTerms?.advancePercentage}\r\n              onChange={(e) => setFormData({\r\n                ...formData,\r\n                paymentTerms: { ...formData.paymentTerms!, advancePercentage: Number(e.target.value) }\r\n              })}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"creditDays\">Credit Days</Label>\r\n            <Input\r\n              id=\"creditDays\"\r\n              type=\"number\"\r\n              value={formData.paymentTerms?.creditDays}\r\n              onChange={(e) => setFormData({\r\n                ...formData,\r\n                paymentTerms: { ...formData.paymentTerms!, creditDays: Number(e.target.value) }\r\n              })}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"penaltyRate\">Penalty Rate (%)</Label>\r\n            <Input\r\n              id=\"penaltyRate\"\r\n              type=\"number\"\r\n              step=\"0.1\"\r\n              value={formData.paymentTerms?.penaltyRate}\r\n              onChange={(e) => setFormData({\r\n                ...formData,\r\n                paymentTerms: { ...formData.paymentTerms!, penaltyRate: Number(e.target.value) }\r\n              })}\r\n              required\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Separator />\r\n\r\n      {/* Delivery Terms */}\r\n      <div className=\"space-y-4\">\r\n        <h3 className=\"text-lg font-semibold\">Delivery Terms</h3>\r\n        <div className=\"space-y-2\">\r\n          <Label htmlFor=\"deliveryLocation\">Delivery Location</Label>\r\n          <Textarea\r\n            id=\"deliveryLocation\"\r\n            value={formData.deliveryTerms?.location}\r\n            onChange={(e) => setFormData({\r\n              ...formData,\r\n              deliveryTerms: { ...formData.deliveryTerms!, location: e.target.value }\r\n            })}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-2 gap-4\">\r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"frequency\">Delivery Frequency</Label>\r\n            <Select\r\n              value={formData.deliveryTerms?.frequency}\r\n              onValueChange={(value) => setFormData({\r\n                ...formData,\r\n                deliveryTerms: { ...formData.deliveryTerms!, frequency: value as any }\r\n              })}\r\n            >\r\n              <SelectTrigger>\r\n                <SelectValue />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                <SelectItem value=\"daily\">Daily</SelectItem>\r\n                <SelectItem value=\"weekly\">Weekly</SelectItem>\r\n                <SelectItem value=\"monthly\">Monthly</SelectItem>\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"transportMode\">Transport Mode</Label>\r\n            <Select\r\n              value={formData.deliveryTerms?.transportMode}\r\n              onValueChange={(value) => setFormData({\r\n                ...formData,\r\n                deliveryTerms: { ...formData.deliveryTerms!, transportMode: value as any }\r\n              })}\r\n            >\r\n              <SelectTrigger>\r\n                <SelectValue />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                <SelectItem value=\"pipeline\">Pipeline</SelectItem>\r\n                <SelectItem value=\"cylinder\">Cylinder</SelectItem>\r\n                <SelectItem value=\"tanker\">Tanker</SelectItem>\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <DialogFooter>\r\n        <Button type=\"button\" variant=\"outline\" onClick={onCancel}>\r\n          Cancel\r\n        </Button>\r\n        <Button type=\"submit\">\r\n          {contract ? 'Update Contract' : 'Create Contract'}\r\n        </Button>\r\n      </DialogFooter>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ContractManagement: React.FC = () => {\r\n  const [contracts, setContracts] = useState<Contract[]>([]);\r\n  const [customers, setCustomers] = useState<Customer[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedContract, setSelectedContract] = useState<Contract | null>(null);\r\n  const [showContractForm, setShowContractForm] = useState(false);\r\n  const [showContractDetails, setShowContractDetails] = useState(false);\r\n  const [showSigningInterface, setShowSigningInterface] = useState(false);\r\n\r\n  const loadData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const [contractsResponse, customersResponse] = await Promise.all([\r\n        salesService.getContracts(),\r\n        salesService.getCustomers()\r\n      ]);\r\n\r\n      if (contractsResponse.success) {\r\n        setContracts(contractsResponse.data);\r\n      }\r\n\r\n      if (customersResponse.success) {\r\n        setCustomers(customersResponse.data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading data:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, []);\r\n\r\n  const handleCreateContract = () => {\r\n    setSelectedContract(null);\r\n    setShowContractForm(true);\r\n  };\r\n\r\n  const handleEditContract = (contract: Contract) => {\r\n    setSelectedContract(contract);\r\n    setShowContractForm(true);\r\n  };\r\n\r\n  const handleViewContract = (contract: Contract) => {\r\n    setSelectedContract(contract);\r\n    setShowContractDetails(true);\r\n  };\r\n\r\n  const handleSignContract = (contract: Contract) => {\r\n    setSelectedContract(contract);\r\n    setShowSigningInterface(true);\r\n  };\r\n\r\n  const handleSaveContract = async (contractData: Partial<Contract>) => {\r\n    try {\r\n      if (selectedContract) {\r\n        // Update existing contract - create new version\r\n        const newVersion: Contract = {\r\n          ...selectedContract,\r\n          ...contractData,\r\n          version: selectedContract.version + 1,\r\n          parentContractId: selectedContract.id,\r\n          id: `cont_${Date.now()}`\r\n        };\r\n        await salesService.createContract(newVersion);\r\n      } else {\r\n        // Create new contract\r\n        await salesService.createContract(contractData as Omit<Contract, 'id'>);\r\n      }\r\n      setShowContractForm(false);\r\n      loadData();\r\n    } catch (error) {\r\n      console.error('Error saving contract:', error);\r\n    }\r\n  };\r\n\r\n  const getCustomerById = (id: string) => {\r\n    return customers.find(c => c.id === id);\r\n  };\r\n\r\n  const getContractStats = () => {\r\n    const total = contracts.length;\r\n    const active = contracts.filter(c => c.status === 'active').length;\r\n    const draft = contracts.filter(c => c.status === 'draft').length;\r\n    const expiringSoon = contracts.filter(c => {\r\n      const daysToExpiry = Math.ceil((new Date(c.endDate).getTime() - new Date().getTime()) / (1000 * 60 * 60 * 24));\r\n      return daysToExpiry <= 30 && daysToExpiry > 0;\r\n    }).length;\r\n    const totalValue = contracts\r\n      .filter(c => c.status === 'active')\r\n      .reduce((sum, c) => sum + c.totalValue, 0);\r\n\r\n    return { total, active, draft, expiringSoon, totalValue };\r\n  };\r\n\r\n  const stats = getContractStats();\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold\">Contract Management</h1>\r\n          <p className=\"text-gray-600\">\r\n            Manage supply contracts, agreements, and e-signatures\r\n          </p>\r\n        </div>\r\n        <Button onClick={handleCreateContract}>\r\n          <Plus className=\"w-4 h-4 mr-2\" />\r\n          New Contract\r\n        </Button>\r\n      </div>\r\n\r\n      {/* Statistics Cards */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-5 gap-6\">\r\n        <Card>\r\n          <CardContent className=\"p-6\">\r\n            <div className=\"flex items-center\">\r\n              <FileText className=\"w-8 h-8 text-blue-600\" />\r\n              <div className=\"ml-4\">\r\n                <p className=\"text-sm font-medium text-gray-600\">Total Contracts</p>\r\n                <p className=\"text-2xl font-bold\">{stats.total}</p>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n        <Card>\r\n          <CardContent className=\"p-6\">\r\n            <div className=\"flex items-center\">\r\n              <CheckCircle className=\"w-8 h-8 text-green-600\" />\r\n              <div className=\"ml-4\">\r\n                <p className=\"text-sm font-medium text-gray-600\">Active</p>\r\n                <p className=\"text-2xl font-bold\">{stats.active}</p>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n        <Card>\r\n          <CardContent className=\"p-6\">\r\n            <div className=\"flex items-center\">\r\n              <Edit className=\"w-8 h-8 text-yellow-600\" />\r\n              <div className=\"ml-4\">\r\n                <p className=\"text-sm font-medium text-gray-600\">Draft</p>\r\n                <p className=\"text-2xl font-bold\">{stats.draft}</p>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n        <Card>\r\n          <CardContent className=\"p-6\">\r\n            <div className=\"flex items-center\">\r\n              <AlertTriangle className=\"w-8 h-8 text-orange-600\" />\r\n              <div className=\"ml-4\">\r\n                <p className=\"text-sm font-medium text-gray-600\">Expiring Soon</p>\r\n                <p className=\"text-2xl font-bold\">{stats.expiringSoon}</p>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n        <Card>\r\n          <CardContent className=\"p-6\">\r\n            <div className=\"flex items-center\">\r\n              <DollarSign className=\"w-8 h-8 text-purple-600\" />\r\n              <div className=\"ml-4\">\r\n                <p className=\"text-sm font-medium text-gray-600\">Total Value</p>\r\n                <p className=\"text-2xl font-bold\">₹{(stats.totalValue / 1000000).toFixed(1)}M</p>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      {/* Contracts Grid */}\r\n      {loading ? (\r\n        <div className=\"text-center py-8\">Loading contracts...</div>\r\n      ) : (\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n          {contracts.map((contract) => (\r\n            <ContractCard\r\n              key={contract.id}\r\n              contract={contract}\r\n              customer={getCustomerById(contract.customerId)}\r\n              onEdit={handleEditContract}\r\n              onView={handleViewContract}\r\n              onSign={handleSignContract}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {/* Contract Form Dialog */}\r\n      <Dialog open={showContractForm} onOpenChange={setShowContractForm}>\r\n        <DialogContent className=\"max-w-4xl max-h-[90vh] overflow-y-auto\">\r\n          <DialogHeader>\r\n            <DialogTitle>\r\n              {selectedContract ? 'Edit Contract (New Version)' : 'Create New Contract'}\r\n            </DialogTitle>\r\n            <DialogDescription>\r\n              {selectedContract ? 'Creating a new version will preserve the original contract history.' : 'Create a new supply contract with detailed terms and conditions.'}\r\n            </DialogDescription>\r\n          </DialogHeader>\r\n          <ContractForm\r\n            contract={selectedContract || undefined}\r\n            customers={customers}\r\n            onSave={handleSaveContract}\r\n            onCancel={() => setShowContractForm(false)}\r\n          />\r\n        </DialogContent>\r\n      </Dialog>\r\n\r\n      {/* Contract Details Dialog */}\r\n      <Dialog open={showContractDetails} onOpenChange={setShowContractDetails}>\r\n        <DialogContent className=\"max-w-4xl max-h-[90vh] overflow-y-auto\">\r\n          <DialogHeader>\r\n            <DialogTitle>{selectedContract?.contractNumber}</DialogTitle>\r\n            <DialogDescription>Complete contract details and documentation</DialogDescription>\r\n          </DialogHeader>\r\n          {selectedContract && (\r\n            <Tabs defaultValue=\"details\" className=\"w-full\">\r\n              <TabsList>\r\n                <TabsTrigger value=\"details\">Details</TabsTrigger>\r\n                <TabsTrigger value=\"terms\">Terms</TabsTrigger>\r\n                <TabsTrigger value=\"documents\">Documents</TabsTrigger>\r\n                <TabsTrigger value=\"history\">History</TabsTrigger>\r\n              </TabsList>\r\n              <TabsContent value=\"details\" className=\"space-y-4\">\r\n                <div className=\"grid grid-cols-2 gap-4\">\r\n                  <Card>\r\n                    <CardHeader>\r\n                      <CardTitle className=\"text-sm\">Contract Information</CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent className=\"space-y-2\">\r\n                      <div><strong>Type:</strong> {selectedContract.type}</div>\r\n                      <div><strong>Status:</strong> {selectedContract.status}</div>\r\n                      <div><strong>Version:</strong> {selectedContract.version}</div>\r\n                      <div><strong>Gas Type:</strong> {selectedContract.gasType}</div>\r\n                    </CardContent>\r\n                  </Card>\r\n                  <Card>\r\n                    <CardHeader>\r\n                      <CardTitle className=\"text-sm\">Commercial Terms</CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent className=\"space-y-2\">\r\n                      <div><strong>Monthly Quantity:</strong> {selectedContract.quantity.toLocaleString()}</div>\r\n                      <div><strong>Price per Unit:</strong> ₹{selectedContract.pricePerUnit}</div>\r\n                      <div><strong>Total Value:</strong> ₹{selectedContract.totalValue.toLocaleString()}</div>\r\n                      <div><strong>Payment Terms:</strong> {selectedContract.paymentTerms.creditDays} days</div>\r\n                    </CardContent>\r\n                  </Card>\r\n                </div>\r\n              </TabsContent>\r\n              <TabsContent value=\"terms\">\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle>Terms and Conditions</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    <div className=\"space-y-4\">\r\n                      <div>\r\n                        <h4 className=\"font-semibold\">Payment Terms</h4>\r\n                        <p>Advance: {selectedContract.paymentTerms.advancePercentage}%</p>\r\n                        <p>Credit Period: {selectedContract.paymentTerms.creditDays} days</p>\r\n                        <p>Penalty Rate: {selectedContract.paymentTerms.penaltyRate}% per month</p>\r\n                      </div>\r\n                      <div>\r\n                        <h4 className=\"font-semibold\">Delivery Terms</h4>\r\n                        <p>Location: {selectedContract.deliveryTerms.location}</p>\r\n                        <p>Frequency: {selectedContract.deliveryTerms.frequency}</p>\r\n                        <p>Transport Mode: {selectedContract.deliveryTerms.transportMode}</p>\r\n                      </div>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              </TabsContent>\r\n              <TabsContent value=\"documents\">\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle>Contract Documents</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    <div className=\"space-y-3\">\r\n                      {selectedContract.documents.map((doc) => (\r\n                        <div key={doc.id} className=\"flex items-center justify-between p-3 border rounded\">\r\n                          <div>\r\n                            <div className=\"font-medium\">{doc.name}</div>\r\n                            <div className=\"text-sm text-gray-500\">Uploaded: {doc.uploadDate.toLocaleDateString()}</div>\r\n                          </div>\r\n                          <Button variant=\"outline\" size=\"sm\">\r\n                            <Download className=\"w-4 h-4 mr-1\" />\r\n                            Download\r\n                          </Button>\r\n                        </div>\r\n                      ))}\r\n                      <Button variant=\"outline\" className=\"w-full\">\r\n                        <Upload className=\"w-4 h-4 mr-2\" />\r\n                        Upload Document\r\n                      </Button>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              </TabsContent>\r\n              <TabsContent value=\"history\">\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle>Contract History</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    <div className=\"space-y-3\">\r\n                      <div className=\"flex items-center space-x-3 p-3 border-l-4 border-green-500 bg-green-50\">\r\n                        <CheckCircle className=\"w-5 h-5 text-green-600\" />\r\n                        <div>\r\n                          <div className=\"font-medium\">Contract Created</div>\r\n                          <div className=\"text-sm text-gray-500\">Version {selectedContract.version} • {selectedContract.startDate.toLocaleDateString()}</div>\r\n                        </div>\r\n                      </div>\r\n                      {selectedContract.signedDate && (\r\n                        <div className=\"flex items-center space-x-3 p-3 border-l-4 border-blue-500 bg-blue-50\">\r\n                          <PenTool className=\"w-5 h-5 text-blue-600\" />\r\n                          <div>\r\n                            <div className=\"font-medium\">Contract Signed</div>\r\n                            <div className=\"text-sm text-gray-500\">{selectedContract.signedDate.toLocaleDateString()}</div>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              </TabsContent>\r\n            </Tabs>\r\n          )}\r\n        </DialogContent>\r\n      </Dialog>\r\n\r\n      {/* E-Signature Dialog */}\r\n      <Dialog open={showSigningInterface} onOpenChange={setShowSigningInterface}>\r\n        <DialogContent className=\"max-w-2xl\">\r\n          <DialogHeader>\r\n            <DialogTitle>E-Signature Interface</DialogTitle>\r\n            <DialogDescription>\r\n              Sign the contract electronically to activate the agreement\r\n            </DialogDescription>\r\n          </DialogHeader>\r\n          <div className=\"space-y-4\">\r\n            <Card>\r\n              <CardContent className=\"p-6\">\r\n                <div className=\"text-center space-y-4\">\r\n                  <PenTool className=\"w-16 h-16 mx-auto text-blue-600\" />\r\n                  <h3 className=\"text-lg font-semibold\">Digital Signature Required</h3>\r\n                  <p className=\"text-gray-600\">\r\n                    This contract requires digital signatures from both parties to become active.\r\n                  </p>\r\n                  <div className=\"space-y-2\">\r\n                    <Button className=\"w-full\">\r\n                      <PenTool className=\"w-4 h-4 mr-2\" />\r\n                      Sign with Digital Certificate\r\n                    </Button>\r\n                    <Button variant=\"outline\" className=\"w-full\">\r\n                      <Send className=\"w-4 h-4 mr-2\" />\r\n                      Send for Customer Signature\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContractManagement;","import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Progress } from '@/components/ui/progress';\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\r\nimport {\r\n  Package, Search, Filter, Plus, Edit, MapPin, Calendar, AlertTriangle,\r\n  CheckCircle, Clock, BarChart3, TrendingUp, Shield\r\n} from 'lucide-react';\r\nimport { salesService } from '../services/salesService';\r\nimport { InventoryItem, InventoryFilters } from '../types';\r\n\r\nconst InventoryCard: React.FC<{ item: InventoryItem }> = ({ item }) => {\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'available': return 'bg-green-100 text-green-800';\r\n      case 'reserved': return 'bg-yellow-100 text-yellow-800';\r\n      case 'sold': return 'bg-blue-100 text-blue-800';\r\n      case 'expired': return 'bg-red-100 text-red-800';\r\n      default: return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  const availabilityPercentage = (item.availableQuantity / item.quantity) * 100;\r\n  const isLowStock = availabilityPercentage < 20;\r\n  const isPesoExpiring = new Date(item.pesoCompliance.expiryDate) < new Date(Date.now() + 30 * 24 * 60 * 60 * 1000);\r\n\r\n  return (\r\n    <Card className=\"hover:shadow-md transition-shadow\">\r\n      <CardHeader className=\"pb-3\">\r\n        <div className=\"flex items-start justify-between\">\r\n          <div className=\"space-y-1\">\r\n            <CardTitle className=\"text-lg\">{item.batchNumber}</CardTitle>\r\n            <div className=\"flex items-center space-x-2\">\r\n              <Badge className={getStatusColor(item.status)}>{item.status}</Badge>\r\n              <Badge variant=\"outline\">{item.gasType}</Badge>\r\n              {isPesoExpiring && <Badge className=\"bg-orange-100 text-orange-800\">PESO Expiring</Badge>}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </CardHeader>\r\n      <CardContent className=\"space-y-4\">\r\n        <div className=\"grid grid-cols-2 gap-4 text-sm\">\r\n          <div>\r\n            <div className=\"text-gray-600\">Available</div>\r\n            <div className=\"font-semibold\">{item.availableQuantity.toLocaleString()} {item.unit}</div>\r\n          </div>\r\n          <div>\r\n            <div className=\"text-gray-600\">Total</div>\r\n            <div className=\"font-semibold\">{item.quantity.toLocaleString()} {item.unit}</div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"space-y-2\">\r\n          <div className=\"flex justify-between text-sm\">\r\n            <span>Availability</span>\r\n            <span className={isLowStock ? 'text-red-600' : 'text-green-600'}>\r\n              {availabilityPercentage.toFixed(1)}%\r\n            </span>\r\n          </div>\r\n          <Progress value={availabilityPercentage} className=\"h-2\" />\r\n        </div>\r\n\r\n        <div className=\"space-y-2 text-sm\">\r\n          <div className=\"flex items-center text-gray-600\">\r\n            <Shield className=\"w-4 h-4 mr-2\" />\r\n            PESO: {item.pesoCompliance.status} (Exp: {new Date(item.pesoCompliance.expiryDate).toLocaleDateString()})\r\n          </div>\r\n          <div className=\"flex items-center text-gray-600\">\r\n            <MapPin className=\"w-4 h-4 mr-2\" />\r\n            {item.location.plantId} - {item.location.tankId}\r\n          </div>\r\n          <div className=\"flex items-center text-gray-600\">\r\n            <Calendar className=\"w-4 h-4 mr-2\" />\r\n            Produced: {new Date(item.productionDate).toLocaleDateString()}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"pt-2 border-t\">\r\n          <div className=\"flex justify-between items-center\">\r\n            <span className=\"text-sm text-gray-600\">Value</span>\r\n            <span className=\"font-semibold\">₹{(item.availableQuantity * item.pricePerUnit).toLocaleString()}</span>\r\n          </div>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst InventoryManagement: React.FC = () => {\r\n  const [inventory, setInventory] = useState<InventoryItem[]>([]);\r\n  const [filteredInventory, setFilteredInventory] = useState<InventoryItem[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [filters, setFilters] = useState<InventoryFilters>({});\r\n\r\n  useEffect(() => {\r\n    const loadInventory = async () => {\r\n      try {\r\n        const response = await salesService.getInventory(filters);\r\n        if (response.success) {\r\n          setInventory(response.data);\r\n          setFilteredInventory(response.data);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error loading inventory:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    loadInventory();\r\n  }, [filters]);\r\n\r\n  useEffect(() => {\r\n    const filtered = inventory.filter(item =>\r\n      item.batchNumber.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      item.gasType.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      item.location.plantId.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n    setFilteredInventory(filtered);\r\n  }, [inventory, searchTerm]);\r\n\r\n  const getInventoryStats = () => {\r\n    const totalItems = inventory.length;\r\n    const totalValue = inventory.reduce((sum, item) => sum + (item.availableQuantity * item.pricePerUnit), 0);\r\n    const lowStockItems = inventory.filter(item => (item.availableQuantity / item.quantity) < 0.2).length;\r\n    const pesoExpiringItems = inventory.filter(item =>\r\n      new Date(item.pesoCompliance.expiryDate) < new Date(Date.now() + 30 * 24 * 60 * 60 * 1000)\r\n    ).length;\r\n\r\n    return { totalItems, totalValue, lowStockItems, pesoExpiringItems };\r\n  };\r\n\r\n  const stats = getInventoryStats();\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold\">Inventory Management</h1>\r\n          <p className=\"text-gray-600\">Monitor gas inventory, batches, and PESO compliance</p>\r\n        </div>\r\n        <Button>\r\n          <Plus className=\"w-4 h-4 mr-2\" />\r\n          Add Batch\r\n        </Button>\r\n      </div>\r\n\r\n      {/* Statistics */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\r\n        <Card>\r\n          <CardContent className=\"p-6\">\r\n            <div className=\"flex items-center\">\r\n              <Package className=\"w-8 h-8 text-blue-600\" />\r\n              <div className=\"ml-4\">\r\n                <p className=\"text-sm font-medium text-gray-600\">Total Items</p>\r\n                <p className=\"text-2xl font-bold\">{stats.totalItems}</p>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n        <Card>\r\n          <CardContent className=\"p-6\">\r\n            <div className=\"flex items-center\">\r\n              <BarChart3 className=\"w-8 h-8 text-green-600\" />\r\n              <div className=\"ml-4\">\r\n                <p className=\"text-sm font-medium text-gray-600\">Inventory Value</p>\r\n                <p className=\"text-2xl font-bold\">₹{(stats.totalValue / 1000000).toFixed(1)}M</p>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n        <Card>\r\n          <CardContent className=\"p-6\">\r\n            <div className=\"flex items-center\">\r\n              <AlertTriangle className=\"w-8 h-8 text-red-600\" />\r\n              <div className=\"ml-4\">\r\n                <p className=\"text-sm font-medium text-gray-600\">Low Stock</p>\r\n                <p className=\"text-2xl font-bold\">{stats.lowStockItems}</p>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n        <Card>\r\n          <CardContent className=\"p-6\">\r\n            <div className=\"flex items-center\">\r\n              <Shield className=\"w-8 h-8 text-orange-600\" />\r\n              <div className=\"ml-4\">\r\n                <p className=\"text-sm font-medium text-gray-600\">PESO Expiring</p>\r\n                <p className=\"text-2xl font-bold\">{stats.pesoExpiringItems}</p>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      {/* Search and Filters */}\r\n      <Card>\r\n        <CardContent className=\"p-6\">\r\n          <div className=\"flex gap-4\">\r\n            <div className=\"relative flex-1\">\r\n              <Search className=\"absolute left-3 top-3 h-4 w-4 text-gray-400\" />\r\n              <Input\r\n                placeholder=\"Search by batch number, gas type, or location...\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n                className=\"pl-10\"\r\n              />\r\n            </div>\r\n            <Button variant=\"outline\">\r\n              <Filter className=\"w-4 h-4 mr-2\" />\r\n              Filters\r\n            </Button>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Inventory Grid */}\r\n      <Tabs defaultValue=\"grid\" className=\"w-full\">\r\n        <TabsList>\r\n          <TabsTrigger value=\"grid\">Grid View</TabsTrigger>\r\n          <TabsTrigger value=\"table\">Table View</TabsTrigger>\r\n          <TabsTrigger value=\"alerts\">Alerts</TabsTrigger>\r\n        </TabsList>\r\n\r\n        <TabsContent value=\"grid\" className=\"space-y-6\">\r\n          {loading ? (\r\n            <div className=\"text-center py-8\">Loading inventory...</div>\r\n          ) : (\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n              {filteredInventory.map((item) => (\r\n                <InventoryCard key={item.id} item={item} />\r\n              ))}\r\n            </div>\r\n          )}\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"table\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Inventory Table</CardTitle>\r\n              <CardDescription>Detailed inventory listing</CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"text-center py-8 text-gray-500\">\r\n                Table view will be implemented here\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"alerts\">\r\n          <div className=\"space-y-4\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center\">\r\n                  <AlertTriangle className=\"w-5 h-5 mr-2 text-red-600\" />\r\n                  Critical Alerts\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"space-y-3\">\r\n                  {inventory.filter(item => (item.availableQuantity / item.quantity) < 0.1).map(item => (\r\n                    <div key={item.id} className=\"flex items-center justify-between p-3 border rounded bg-red-50\">\r\n                      <div>\r\n                        <div className=\"font-medium\">{item.batchNumber}</div>\r\n                        <div className=\"text-sm text-gray-600\">Critical low stock: {item.availableQuantity} {item.unit} remaining</div>\r\n                      </div>\r\n                      <Badge className=\"bg-red-100 text-red-800\">Critical</Badge>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </TabsContent>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InventoryManagement;","import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\r\nimport { FileText, Plus, Search, Filter, Eye, Edit, Download, Calendar, DollarSign, Package, Users } from 'lucide-react';\r\nimport { salesService } from '../services/salesService';\r\nimport { Order, Invoice } from '../types';\r\n\r\nconst OrderCard: React.FC<{ order: Order }> = ({ order }) => {\r\n  const getStatusColor = (status: string) => {\r\n    const colors = {\r\n      pending: 'bg-yellow-100 text-yellow-800',\r\n      confirmed: 'bg-blue-100 text-blue-800',\r\n      processing: 'bg-purple-100 text-purple-800',\r\n      ready: 'bg-green-100 text-green-800',\r\n      dispatched: 'bg-indigo-100 text-indigo-800',\r\n      delivered: 'bg-green-100 text-green-800',\r\n      cancelled: 'bg-red-100 text-red-800'\r\n    };\r\n    return colors[status as keyof typeof colors] || 'bg-gray-100 text-gray-800';\r\n  };\r\n\r\n  return (\r\n    <Card className=\"hover:shadow-md transition-shadow\">\r\n      <CardHeader className=\"pb-3\">\r\n        <div className=\"flex items-start justify-between\">\r\n          <div className=\"space-y-1\">\r\n            <div className=\"flex items-center space-x-2\">\r\n              <span className=\"font-semibold\">{order.orderNumber}</span>\r\n              <Badge className={getStatusColor(order.status)}>{order.status}</Badge>\r\n            </div>\r\n            <div className=\"text-sm text-gray-600\">\r\n              Order Date: {order.orderDate.toLocaleDateString()}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </CardHeader>\r\n      <CardContent className=\"space-y-3\">\r\n        <div className=\"grid grid-cols-2 gap-4 text-sm\">\r\n          <div>\r\n            <div className=\"text-gray-600\">Quantity</div>\r\n            <div className=\"font-semibold\">{order.totalQuantity.toLocaleString()} units</div>\r\n          </div>\r\n          <div>\r\n            <div className=\"text-gray-600\">Amount</div>\r\n            <div className=\"font-semibold\">₹{order.finalAmount.toLocaleString()}</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex items-center text-sm text-gray-600\">\r\n          <Calendar className=\"w-4 h-4 mr-1\" />\r\n          Delivery: {order.requestedDeliveryDate.toLocaleDateString()}\r\n        </div>\r\n        <div className=\"flex space-x-2 pt-2\">\r\n          <Button variant=\"outline\" size=\"sm\" className=\"flex-1\">\r\n            <Eye className=\"w-4 h-4 mr-1\" />\r\n            View\r\n          </Button>\r\n          <Button variant=\"outline\" size=\"sm\" className=\"flex-1\">\r\n            <Edit className=\"w-4 h-4 mr-1\" />\r\n            Edit\r\n          </Button>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst OrderManagement: React.FC = () => {\r\n  const [orders, setOrders] = useState<Order[]>([]);\r\n  const [filteredOrders, setFilteredOrders] = useState<Order[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  useEffect(() => {\r\n    const loadOrders = async () => {\r\n      try {\r\n        const response = await salesService.getOrders();\r\n        if (response.success) {\r\n          setOrders(response.data);\r\n          setFilteredOrders(response.data);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error loading orders:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    loadOrders();\r\n  }, []);\r\n\r\n  const stats = {\r\n    total: orders.length,\r\n    pending: orders.filter(o => o.status === 'pending').length,\r\n    confirmed: orders.filter(o => o.status === 'confirmed').length,\r\n    totalValue: orders.reduce((sum, o) => sum + o.finalAmount, 0)\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold\">Order & Invoice Management</h1>\r\n          <p className=\"text-gray-600\">Manage orders and generate invoices</p>\r\n        </div>\r\n        <Button>\r\n          <Plus className=\"w-4 h-4 mr-2\" />\r\n          New Order\r\n        </Button>\r\n      </div>\r\n\r\n      {/* Statistics */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\r\n        <Card><CardContent className=\"p-6\">\r\n          <div className=\"flex items-center\">\r\n            <FileText className=\"w-8 h-8 text-blue-600\" />\r\n            <div className=\"ml-4\">\r\n              <p className=\"text-sm font-medium text-gray-600\">Total Orders</p>\r\n              <p className=\"text-2xl font-bold\">{stats.total}</p>\r\n            </div>\r\n          </div>\r\n        </CardContent></Card>\r\n        <Card><CardContent className=\"p-6\">\r\n          <div className=\"flex items-center\">\r\n            <Package className=\"w-8 h-8 text-yellow-600\" />\r\n            <div className=\"ml-4\">\r\n              <p className=\"text-sm font-medium text-gray-600\">Pending</p>\r\n              <p className=\"text-2xl font-bold\">{stats.pending}</p>\r\n            </div>\r\n          </div>\r\n        </CardContent></Card>\r\n        <Card><CardContent className=\"p-6\">\r\n          <div className=\"flex items-center\">\r\n            <FileText className=\"w-8 h-8 text-green-600\" />\r\n            <div className=\"ml-4\">\r\n              <p className=\"text-sm font-medium text-gray-600\">Confirmed</p>\r\n              <p className=\"text-2xl font-bold\">{stats.confirmed}</p>\r\n            </div>\r\n          </div>\r\n        </CardContent></Card>\r\n        <Card><CardContent className=\"p-6\">\r\n          <div className=\"flex items-center\">\r\n            <DollarSign className=\"w-8 h-8 text-purple-600\" />\r\n            <div className=\"ml-4\">\r\n              <p className=\"text-sm font-medium text-gray-600\">Total Value</p>\r\n              <p className=\"text-2xl font-bold\">₹{(stats.totalValue / 1000000).toFixed(1)}M</p>\r\n            </div>\r\n          </div>\r\n        </CardContent></Card>\r\n      </div>\r\n\r\n      {/* Search and Filters */}\r\n      <Card>\r\n        <CardContent className=\"p-6\">\r\n          <div className=\"flex gap-4\">\r\n            <div className=\"relative flex-1\">\r\n              <Search className=\"absolute left-3 top-3 h-4 w-4 text-gray-400\" />\r\n              <Input placeholder=\"Search orders...\" value={searchTerm} onChange={(e) => setSearchTerm(e.target.value)} className=\"pl-10\" />\r\n            </div>\r\n            <Select><SelectTrigger className=\"w-40\"><SelectValue placeholder=\"Status\" /></SelectTrigger>\r\n              <SelectContent>\r\n                <SelectItem value=\"all\">All Status</SelectItem>\r\n                <SelectItem value=\"pending\">Pending</SelectItem>\r\n                <SelectItem value=\"confirmed\">Confirmed</SelectItem>\r\n                <SelectItem value=\"delivered\">Delivered</SelectItem>\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Orders Grid */}\r\n      {loading ? (\r\n        <div className=\"text-center py-8\">Loading orders...</div>\r\n      ) : (\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n          {filteredOrders.map((order) => (\r\n            <OrderCard key={order.id} order={order} />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderManagement;","import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\r\nimport { Textarea } from '@/components/ui/textarea';\r\nimport { Progress } from '@/components/ui/progress';\r\nimport { Mic, MicOff, Play, Pause, Square, Languages, FileText, CheckCircle, AlertTriangle } from 'lucide-react';\r\nimport { salesService } from '../services/salesService';\r\nimport { VoiceInvoiceData } from '../types';\r\n\r\nconst VoiceInvoicing: React.FC = () => {\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [language, setLanguage] = useState<'hindi' | 'english'>('hindi');\r\n  const [currentSession, setCurrentSession] = useState<VoiceInvoiceData | null>(null);\r\n  const [transcription, setTranscription] = useState('');\r\n  const [confidence, setConfidence] = useState(0);\r\n\r\n  const startRecording = async () => {\r\n    try {\r\n      const response = await salesService.startVoiceSession(language);\r\n      if (response.success) {\r\n        setCurrentSession(response.data);\r\n        setIsRecording(true);\r\n        // Mock recording simulation\r\n        setTimeout(() => {\r\n          stopRecording();\r\n        }, 5000);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error starting voice session:', error);\r\n    }\r\n  };\r\n\r\n  const stopRecording = async () => {\r\n    setIsRecording(false);\r\n    if (currentSession) {\r\n      // Mock audio processing\r\n      const response = await salesService.processVoiceData(currentSession.sessionId, 'mock-audio-data');\r\n      if (response.success) {\r\n        setCurrentSession(response.data);\r\n        setTranscription(response.data.transcription);\r\n        setConfidence(response.data.confidence * 100);\r\n      }\r\n    }\r\n  };\r\n\r\n  const generateInvoice = async () => {\r\n    if (currentSession?.extractedData.customerId) {\r\n      // Create order and generate invoice\r\n      console.log('Generating invoice from voice data...');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold\">Voice Invoicing</h1>\r\n          <p className=\"text-gray-600\">Create invoices using voice commands in Hindi or English</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n        {/* Voice Recording Interface */}\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle className=\"flex items-center\">\r\n              <Mic className=\"w-5 h-5 mr-2\" />\r\n              Voice Input\r\n            </CardTitle>\r\n            <CardDescription>Record voice commands to create invoices</CardDescription>\r\n          </CardHeader>\r\n          <CardContent className=\"space-y-6\">\r\n            <div className=\"space-y-4\">\r\n              <div>\r\n                <label className=\"text-sm font-medium\">Language</label>\r\n                <Select value={language} onValueChange={(value) => setLanguage(value as 'hindi' | 'english')}>\r\n                  <SelectTrigger>\r\n                    <SelectValue />\r\n                  </SelectTrigger>\r\n                  <SelectContent>\r\n                    <SelectItem value=\"hindi\">हिंदी (Hindi)</SelectItem>\r\n                    <SelectItem value=\"english\">English</SelectItem>\r\n                  </SelectContent>\r\n                </Select>\r\n              </div>\r\n\r\n              <div className=\"text-center space-y-4\">\r\n                <div className={`w-32 h-32 mx-auto rounded-full flex items-center justify-center ${isRecording ? 'bg-red-100 animate-pulse' : 'bg-gray-100'}`}>\r\n                  {isRecording ? (\r\n                    <MicOff className=\"w-16 h-16 text-red-600\" />\r\n                  ) : (\r\n                    <Mic className=\"w-16 h-16 text-gray-600\" />\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"space-y-2\">\r\n                  {!isRecording ? (\r\n                    <Button onClick={startRecording} className=\"w-full\">\r\n                      <Mic className=\"w-4 h-4 mr-2\" />\r\n                      Start Recording\r\n                    </Button>\r\n                  ) : (\r\n                    <Button onClick={stopRecording} variant=\"destructive\" className=\"w-full\">\r\n                      <Square className=\"w-4 h-4 mr-2\" />\r\n                      Stop Recording\r\n                    </Button>\r\n                  )}\r\n                </div>\r\n\r\n                {isRecording && (\r\n                  <div className=\"space-y-2\">\r\n                    <div className=\"text-sm text-gray-600\">Recording in progress...</div>\r\n                    <Progress value={75} className=\"w-full\" />\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Sample Voice Commands */}\r\n            <div className=\"space-y-3\">\r\n              <h4 className=\"font-medium\">Sample Voice Commands:</h4>\r\n              <div className=\"space-y-2 text-sm\">\r\n                <div className=\"p-2 bg-blue-50 rounded\">\r\n                  <strong>Hindi:</strong> \"ग्रीन एनर्जी इंडस्ट्रीज के लिए एक हजार क्यूबिक मीटर बायो गैस, पैंतालीस रुपए प्रति यूनिट\"\r\n                </div>\r\n                <div className=\"p-2 bg-green-50 rounded\">\r\n                  <strong>English:</strong> \"Create invoice for Green Energy Industries, one thousand cubic meters biogas at forty-five rupees per unit\"\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Transcription and Processing */}\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle className=\"flex items-center\">\r\n              <Languages className=\"w-5 h-5 mr-2\" />\r\n              Transcription & Processing\r\n            </CardTitle>\r\n            <CardDescription>Voice-to-text conversion and data extraction</CardDescription>\r\n          </CardHeader>\r\n          <CardContent className=\"space-y-6\">\r\n            {transcription && (\r\n              <div className=\"space-y-4\">\r\n                <div>\r\n                  <label className=\"text-sm font-medium\">Transcription</label>\r\n                  <Textarea value={transcription} readOnly className=\"mt-1\" rows={3} />\r\n                  <div className=\"flex items-center mt-2 space-x-2\">\r\n                    <span className=\"text-sm text-gray-600\">Confidence:</span>\r\n                    <Progress value={confidence} className=\"flex-1 max-w-32\" />\r\n                    <span className=\"text-sm font-medium\">{confidence.toFixed(1)}%</span>\r\n                  </div>\r\n                </div>\r\n\r\n                {currentSession?.extractedData && (\r\n                  <div className=\"space-y-3\">\r\n                    <h4 className=\"font-medium\">Extracted Information:</h4>\r\n                    <div className=\"space-y-2 text-sm\">\r\n                      {currentSession.extractedData.customerName && (\r\n                        <div className=\"flex justify-between\">\r\n                          <span>Customer:</span>\r\n                          <span className=\"font-medium\">{currentSession.extractedData.customerName}</span>\r\n                        </div>\r\n                      )}\r\n                      {currentSession.extractedData.items.map((item, index) => (\r\n                        <div key={index} className=\"p-2 border rounded\">\r\n                          <div className=\"flex justify-between\">\r\n                            <span>Item:</span>\r\n                            <span className=\"font-medium\">{item.description}</span>\r\n                          </div>\r\n                          <div className=\"flex justify-between\">\r\n                            <span>Quantity:</span>\r\n                            <span className=\"font-medium\">{item.quantity} {item.unit}</span>\r\n                          </div>\r\n                          {item.pricePerUnit && (\r\n                            <div className=\"flex justify-between\">\r\n                              <span>Price:</span>\r\n                              <span className=\"font-medium\">₹{item.pricePerUnit}/{item.unit}</span>\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      ))}\r\n                      {currentSession.extractedData.totalAmount && (\r\n                        <div className=\"flex justify-between font-semibold\">\r\n                          <span>Total Amount:</span>\r\n                          <span>₹{currentSession.extractedData.totalAmount.toLocaleString()}</span>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n\r\n                    {currentSession.validationErrors.length === 0 ? (\r\n                      <div className=\"flex items-center space-x-2 text-green-600\">\r\n                        <CheckCircle className=\"w-4 h-4\" />\r\n                        <span className=\"text-sm\">Data validation successful</span>\r\n                      </div>\r\n                    ) : (\r\n                      <div className=\"space-y-2\">\r\n                        <div className=\"flex items-center space-x-2 text-red-600\">\r\n                          <AlertTriangle className=\"w-4 h-4\" />\r\n                          <span className=\"text-sm\">Validation errors found</span>\r\n                        </div>\r\n                        <ul className=\"text-sm text-red-600 space-y-1\">\r\n                          {currentSession.validationErrors.map((error, index) => (\r\n                            <li key={index}>• {error}</li>\r\n                          ))}\r\n                        </ul>\r\n                      </div>\r\n                    )}\r\n\r\n                    <Button onClick={generateInvoice} className=\"w-full\" disabled={currentSession.validationErrors.length > 0}>\r\n                      <FileText className=\"w-4 h-4 mr-2\" />\r\n                      Generate Invoice\r\n                    </Button>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n\r\n            {!transcription && (\r\n              <div className=\"text-center py-8 text-gray-500\">\r\n                Start recording to see transcription and extracted data\r\n              </div>\r\n            )}\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      {/* Recent Voice Sessions */}\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Recent Voice Sessions</CardTitle>\r\n          <CardDescription>History of voice invoicing sessions</CardDescription>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"space-y-3\">\r\n            <div className=\"flex items-center justify-between p-3 border rounded\">\r\n              <div>\r\n                <div className=\"font-medium\">Session #001</div>\r\n                <div className=\"text-sm text-gray-600\">Green Energy Industries • ₹45,000 • Hindi</div>\r\n                <div className=\"text-xs text-gray-500\">2 minutes ago</div>\r\n              </div>\r\n              <div className=\"flex items-center space-x-2\">\r\n                <Badge className=\"bg-green-100 text-green-800\">Completed</Badge>\r\n                <Button variant=\"outline\" size=\"sm\">\r\n                  <Play className=\"w-4 h-4 mr-1\" />\r\n                  Replay\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VoiceInvoicing;","import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Button } from '@/components/ui/button';\r\nimport { DollarSign, CreditCard, TrendingUp, AlertTriangle, CheckCircle, Clock } from 'lucide-react';\r\nimport { salesService } from '../services/salesService';\r\nimport { Payment } from '../types';\r\n\r\nconst PaymentTracking: React.FC = () => {\r\n  const [payments, setPayments] = useState<Payment[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const loadPayments = async () => {\r\n      try {\r\n        const response = await salesService.getPayments();\r\n        if (response.success) {\r\n          setPayments(response.data);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error loading payments:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    loadPayments();\r\n  }, []);\r\n\r\n  const mockPayments = [\r\n    { id: '1', amount: 50445, status: 'confirmed', method: 'bank_transfer', date: new Date(), customer: 'Green Energy Industries' },\r\n    { id: '2', amount: 25000, status: 'pending', method: 'cheque', date: new Date(), customer: 'Sunrise Hotels' },\r\n    { id: '3', amount: 75000, status: 'failed', method: 'upi', date: new Date(), customer: 'Emerald Heights' }\r\n  ];\r\n\r\n  const getStatusColor = (status: string) => {\r\n    const colors = {\r\n      confirmed: 'bg-green-100 text-green-800',\r\n      pending: 'bg-yellow-100 text-yellow-800',\r\n      failed: 'bg-red-100 text-red-800',\r\n      refunded: 'bg-blue-100 text-blue-800'\r\n    };\r\n    return colors[status as keyof typeof colors] || 'bg-gray-100 text-gray-800';\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold\">Payment Tracking</h1>\r\n          <p className=\"text-gray-600\">Monitor payments and reconciliation</p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Statistics */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\r\n        <Card><CardContent className=\"p-6\">\r\n          <div className=\"flex items-center\">\r\n            <DollarSign className=\"w-8 h-8 text-green-600\" />\r\n            <div className=\"ml-4\">\r\n              <p className=\"text-sm font-medium text-gray-600\">Total Received</p>\r\n              <p className=\"text-2xl font-bold\">₹2.4M</p>\r\n            </div>\r\n          </div>\r\n        </CardContent></Card>\r\n        <Card><CardContent className=\"p-6\">\r\n          <div className=\"flex items-center\">\r\n            <Clock className=\"w-8 h-8 text-yellow-600\" />\r\n            <div className=\"ml-4\">\r\n              <p className=\"text-sm font-medium text-gray-600\">Pending</p>\r\n              <p className=\"text-2xl font-bold\">₹150K</p>\r\n            </div>\r\n          </div>\r\n        </CardContent></Card>\r\n        <Card><CardContent className=\"p-6\">\r\n          <div className=\"flex items-center\">\r\n            <AlertTriangle className=\"w-8 h-8 text-red-600\" />\r\n            <div className=\"ml-4\">\r\n              <p className=\"text-sm font-medium text-gray-600\">Overdue</p>\r\n              <p className=\"text-2xl font-bold\">₹75K</p>\r\n            </div>\r\n          </div>\r\n        </CardContent></Card>\r\n        <Card><CardContent className=\"p-6\">\r\n          <div className=\"flex items-center\">\r\n            <TrendingUp className=\"w-8 h-8 text-blue-600\" />\r\n            <div className=\"ml-4\">\r\n              <p className=\"text-sm font-medium text-gray-600\">Collection Rate</p>\r\n              <p className=\"text-2xl font-bold\">94%</p>\r\n            </div>\r\n          </div>\r\n        </CardContent></Card>\r\n      </div>\r\n\r\n      {/* Recent Payments */}\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Recent Payments</CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"space-y-3\">\r\n            {mockPayments.map((payment) => (\r\n              <div key={payment.id} className=\"flex items-center justify-between p-4 border rounded\">\r\n                <div className=\"space-y-1\">\r\n                  <div className=\"font-medium\">{payment.customer}</div>\r\n                  <div className=\"text-sm text-gray-600\">\r\n                    {payment.method} • {payment.date.toLocaleDateString()}\r\n                  </div>\r\n                </div>\r\n                <div className=\"text-right space-y-1\">\r\n                  <div className=\"font-semibold\">₹{payment.amount.toLocaleString()}</div>\r\n                  <Badge className={getStatusColor(payment.status)}>{payment.status}</Badge>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Payment Reconciliation */}\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Bank Reconciliation</CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"text-center py-8 text-gray-500\">\r\n            Bank reconciliation interface will be displayed here\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentTracking;","import React, { useState } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Calendar, Truck, MapPin, Clock, Route, Package } from 'lucide-react';\r\n\r\nconst DeliveryScheduling: React.FC = () => {\r\n  const mockDeliveries = [\r\n    { id: '1', order: 'ORD-2024-001', customer: 'Green Energy Industries', date: '2024-09-25', status: 'scheduled', driver: 'Rajesh Kumar' },\r\n    { id: '2', order: 'ORD-2024-002', customer: 'Sunrise Hotels', date: '2024-09-26', status: 'in_transit', driver: 'Suresh Yadav' },\r\n    { id: '3', order: 'ORD-2024-003', customer: 'Emerald Heights', date: '2024-09-27', status: 'delivered', driver: 'Amit Sharma' }\r\n  ];\r\n\r\n  const getStatusColor = (status: string) => {\r\n    const colors = {\r\n      scheduled: 'bg-blue-100 text-blue-800',\r\n      in_transit: 'bg-yellow-100 text-yellow-800',\r\n      delivered: 'bg-green-100 text-green-800',\r\n      failed: 'bg-red-100 text-red-800'\r\n    };\r\n    return colors[status as keyof typeof colors] || 'bg-gray-100 text-gray-800';\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold\">Delivery Scheduling</h1>\r\n          <p className=\"text-gray-600\">Schedule and track deliveries with route optimization</p>\r\n        </div>\r\n        <Button>\r\n          <Truck className=\"w-4 h-4 mr-2\" />\r\n          Schedule Delivery\r\n        </Button>\r\n      </div>\r\n\r\n      {/* Statistics */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\r\n        <Card><CardContent className=\"p-6\">\r\n          <div className=\"flex items-center\">\r\n            <Package className=\"w-8 h-8 text-blue-600\" />\r\n            <div className=\"ml-4\">\r\n              <p className=\"text-sm font-medium text-gray-600\">Scheduled</p>\r\n              <p className=\"text-2xl font-bold\">12</p>\r\n            </div>\r\n          </div>\r\n        </CardContent></Card>\r\n        <Card><CardContent className=\"p-6\">\r\n          <div className=\"flex items-center\">\r\n            <Truck className=\"w-8 h-8 text-yellow-600\" />\r\n            <div className=\"ml-4\">\r\n              <p className=\"text-sm font-medium text-gray-600\">In Transit</p>\r\n              <p className=\"text-2xl font-bold\">5</p>\r\n            </div>\r\n          </div>\r\n        </CardContent></Card>\r\n        <Card><CardContent className=\"p-6\">\r\n          <div className=\"flex items-center\">\r\n            <Route className=\"w-8 h-8 text-green-600\" />\r\n            <div className=\"ml-4\">\r\n              <p className=\"text-sm font-medium text-gray-600\">Delivered</p>\r\n              <p className=\"text-2xl font-bold\">28</p>\r\n            </div>\r\n          </div>\r\n        </CardContent></Card>\r\n        <Card><CardContent className=\"p-6\">\r\n          <div className=\"flex items-center\">\r\n            <Clock className=\"w-8 h-8 text-purple-600\" />\r\n            <div className=\"ml-4\">\r\n              <p className=\"text-sm font-medium text-gray-600\">On Time %</p>\r\n              <p className=\"text-2xl font-bold\">96%</p>\r\n            </div>\r\n          </div>\r\n        </CardContent></Card>\r\n      </div>\r\n\r\n      {/* Delivery Calendar */}\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle className=\"flex items-center\">\r\n            <Calendar className=\"w-5 h-5 mr-2\" />\r\n            Delivery Calendar\r\n          </CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"text-center py-8 text-gray-500\">\r\n            Interactive delivery calendar will be displayed here\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Active Deliveries */}\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Active Deliveries</CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"space-y-3\">\r\n            {mockDeliveries.map((delivery) => (\r\n              <div key={delivery.id} className=\"flex items-center justify-between p-4 border rounded\">\r\n                <div className=\"space-y-1\">\r\n                  <div className=\"font-medium\">{delivery.order}</div>\r\n                  <div className=\"text-sm text-gray-600\">{delivery.customer}</div>\r\n                  <div className=\"flex items-center text-sm text-gray-500\">\r\n                    <Truck className=\"w-4 h-4 mr-1\" />\r\n                    {delivery.driver}\r\n                  </div>\r\n                </div>\r\n                <div className=\"text-right space-y-1\">\r\n                  <div className=\"text-sm\">{delivery.date}</div>\r\n                  <Badge className={getStatusColor(delivery.status)}>{delivery.status}</Badge>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Route Optimization */}\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle className=\"flex items-center\">\r\n            <Route className=\"w-5 h-5 mr-2\" />\r\n            Route Optimization\r\n          </CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"text-center py-8 text-gray-500\">\r\n            Route optimization and mapping interface will be displayed here\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeliveryScheduling;","import React, { useState } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Button } from '@/components/ui/button';\r\nimport { TrendingUp, TrendingDown, BarChart3, DollarSign, Target, Zap } from 'lucide-react';\r\n\r\nconst PriceBenchmarking: React.FC = () => {\r\n  const mockPriceData = [\r\n    { gasType: 'Biogas', ourPrice: 45, marketAvg: 48, change: -6.25, competitive: 'advantage' },\r\n    { gasType: 'Compressed', ourPrice: 65, marketAvg: 62, change: 4.84, competitive: 'premium' },\r\n    { gasType: 'Liquefied', ourPrice: 85, marketAvg: 83, change: 2.41, competitive: 'premium' }\r\n  ];\r\n\r\n  const getCompetitiveColor = (status: string) => {\r\n    const colors = {\r\n      advantage: 'bg-green-100 text-green-800',\r\n      premium: 'bg-blue-100 text-blue-800',\r\n      disadvantage: 'bg-red-100 text-red-800'\r\n    };\r\n    return colors[status as keyof typeof colors] || 'bg-gray-100 text-gray-800';\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold\">Price Benchmarking</h1>\r\n          <p className=\"text-gray-600\">Market price analysis and dynamic pricing engine</p>\r\n        </div>\r\n        <Button>\r\n          <Zap className=\"w-4 h-4 mr-2\" />\r\n          Update Prices\r\n        </Button>\r\n      </div>\r\n\r\n      {/* Price Comparison */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n        {mockPriceData.map((item) => (\r\n          <Card key={item.gasType}>\r\n            <CardHeader className=\"pb-3\">\r\n              <CardTitle className=\"text-lg\">{item.gasType}</CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-4\">\r\n              <div className=\"grid grid-cols-2 gap-4\">\r\n                <div>\r\n                  <div className=\"text-sm text-gray-600\">Our Price</div>\r\n                  <div className=\"text-xl font-bold\">₹{item.ourPrice}</div>\r\n                </div>\r\n                <div>\r\n                  <div className=\"text-sm text-gray-600\">Market Avg</div>\r\n                  <div className=\"text-xl font-bold\">₹{item.marketAvg}</div>\r\n                </div>\r\n              </div>\r\n              <div className=\"flex items-center justify-between\">\r\n                <div className=\"flex items-center space-x-1\">\r\n                  {item.change > 0 ? (\r\n                    <TrendingUp className=\"w-4 h-4 text-red-600\" />\r\n                  ) : (\r\n                    <TrendingDown className=\"w-4 h-4 text-green-600\" />\r\n                  )}\r\n                  <span className={`text-sm ${item.change > 0 ? 'text-red-600' : 'text-green-600'}`}>\r\n                    {Math.abs(item.change)}%\r\n                  </span>\r\n                </div>\r\n                <Badge className={getCompetitiveColor(item.competitive)}>\r\n                  {item.competitive}\r\n                </Badge>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Market Analysis */}\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle className=\"flex items-center\">\r\n            <BarChart3 className=\"w-5 h-5 mr-2\" />\r\n            Market Analysis\r\n          </CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"text-center py-8 text-gray-500\">\r\n            Market price trends and competitor analysis will be displayed here\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Dynamic Pricing Engine */}\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle className=\"flex items-center\">\r\n            <Target className=\"w-5 h-5 mr-2\" />\r\n            Dynamic Pricing Engine\r\n          </CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n            <div className=\"space-y-4\">\r\n              <h4 className=\"font-medium\">Pricing Factors</h4>\r\n              <div className=\"space-y-2\">\r\n                <div className=\"flex justify-between items-center\">\r\n                  <span className=\"text-sm\">Raw Material Cost</span>\r\n                  <span className=\"font-medium\">₹15/unit</span>\r\n                </div>\r\n                <div className=\"flex justify-between items-center\">\r\n                  <span className=\"text-sm\">Production Cost</span>\r\n                  <span className=\"font-medium\">₹8/unit</span>\r\n                </div>\r\n                <div className=\"flex justify-between items-center\">\r\n                  <span className=\"text-sm\">Transport Cost</span>\r\n                  <span className=\"font-medium\">₹5/unit</span>\r\n                </div>\r\n                <div className=\"flex justify-between items-center\">\r\n                  <span className=\"text-sm\">Margin (30%)</span>\r\n                  <span className=\"font-medium\">₹12/unit</span>\r\n                </div>\r\n                <div className=\"flex justify-between items-center\">\r\n                  <span className=\"text-sm\">Taxes</span>\r\n                  <span className=\"font-medium\">₹5/unit</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"space-y-4\">\r\n              <h4 className=\"font-medium\">Recommended Prices</h4>\r\n              <div className=\"space-y-2\">\r\n                <div className=\"p-3 border rounded\">\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <span className=\"font-medium\">Biogas</span>\r\n                    <span className=\"text-lg font-bold text-green-600\">₹45/unit</span>\r\n                  </div>\r\n                  <div className=\"text-sm text-gray-600\">Competitive advantage maintained</div>\r\n                </div>\r\n                <div className=\"p-3 border rounded\">\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <span className=\"font-medium\">Compressed</span>\r\n                    <span className=\"text-lg font-bold text-blue-600\">₹63/unit</span>\r\n                  </div>\r\n                  <div className=\"text-sm text-gray-600\">Slight price reduction recommended</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PriceBenchmarking;","import React, { useState } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\r\nimport { Shield, FileText, AlertTriangle, CheckCircle, Download, Calendar, BarChart3 } from 'lucide-react';\r\n\r\nconst ComplianceReports: React.FC = () => {\r\n  const mockComplianceData = [\r\n    { type: 'PESO', certificate: 'PESO-2024-001', status: 'valid', expiry: '2025-01-15', authority: 'PESO Delhi' },\r\n    { type: 'GST', certificate: 'GST-REG-001', status: 'valid', expiry: '2025-03-31', authority: 'GST Department' },\r\n    { type: 'Environmental', certificate: 'ENV-2024-001', status: 'pending_renewal', expiry: '2024-12-01', authority: 'Pollution Control Board' },\r\n    { type: 'Safety', certificate: 'SAFETY-001', status: 'valid', expiry: '2025-06-15', authority: 'Factory Inspector' }\r\n  ];\r\n\r\n  const getStatusColor = (status: string) => {\r\n    const colors = {\r\n      valid: 'bg-green-100 text-green-800',\r\n      pending_renewal: 'bg-yellow-100 text-yellow-800',\r\n      expired: 'bg-red-100 text-red-800',\r\n      suspended: 'bg-gray-100 text-gray-800'\r\n    };\r\n    return colors[status as keyof typeof colors] || 'bg-gray-100 text-gray-800';\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold\">Compliance & Reports</h1>\r\n          <p className=\"text-gray-600\">PESO compliance, GST reports, and regulatory management</p>\r\n        </div>\r\n        <Button>\r\n          <Download className=\"w-4 h-4 mr-2\" />\r\n          Generate Report\r\n        </Button>\r\n      </div>\r\n\r\n      {/* Compliance Overview */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\r\n        <Card><CardContent className=\"p-6\">\r\n          <div className=\"flex items-center\">\r\n            <Shield className=\"w-8 h-8 text-green-600\" />\r\n            <div className=\"ml-4\">\r\n              <p className=\"text-sm font-medium text-gray-600\">PESO Valid</p>\r\n              <p className=\"text-2xl font-bold\">3</p>\r\n            </div>\r\n          </div>\r\n        </CardContent></Card>\r\n        <Card><CardContent className=\"p-6\">\r\n          <div className=\"flex items-center\">\r\n            <AlertTriangle className=\"w-8 h-8 text-yellow-600\" />\r\n            <div className=\"ml-4\">\r\n              <p className=\"text-sm font-medium text-gray-600\">Expiring Soon</p>\r\n              <p className=\"text-2xl font-bold\">1</p>\r\n            </div>\r\n          </div>\r\n        </CardContent></Card>\r\n        <Card><CardContent className=\"p-6\">\r\n          <div className=\"flex items-center\">\r\n            <FileText className=\"w-8 h-8 text-blue-600\" />\r\n            <div className=\"ml-4\">\r\n              <p className=\"text-sm font-medium text-gray-600\">GST Returns</p>\r\n              <p className=\"text-2xl font-bold\">12</p>\r\n            </div>\r\n          </div>\r\n        </CardContent></Card>\r\n        <Card><CardContent className=\"p-6\">\r\n          <div className=\"flex items-center\">\r\n            <BarChart3 className=\"w-8 h-8 text-purple-600\" />\r\n            <div className=\"ml-4\">\r\n              <p className=\"text-sm font-medium text-gray-600\">Compliance %</p>\r\n              <p className=\"text-2xl font-bold\">98%</p>\r\n            </div>\r\n          </div>\r\n        </CardContent></Card>\r\n      </div>\r\n\r\n      <Tabs defaultValue=\"peso\" className=\"w-full\">\r\n        <TabsList>\r\n          <TabsTrigger value=\"peso\">PESO Compliance</TabsTrigger>\r\n          <TabsTrigger value=\"gst\">GST Reports</TabsTrigger>\r\n          <TabsTrigger value=\"environmental\">Environmental</TabsTrigger>\r\n          <TabsTrigger value=\"safety\">Safety</TabsTrigger>\r\n        </TabsList>\r\n\r\n        <TabsContent value=\"peso\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center\">\r\n                <Shield className=\"w-5 h-5 mr-2\" />\r\n                PESO Certificates\r\n              </CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-3\">\r\n                {mockComplianceData.filter(item => item.type === 'PESO').map((cert) => (\r\n                  <div key={cert.certificate} className=\"flex items-center justify-between p-4 border rounded\">\r\n                    <div className=\"space-y-1\">\r\n                      <div className=\"font-medium\">{cert.certificate}</div>\r\n                      <div className=\"text-sm text-gray-600\">Issued by: {cert.authority}</div>\r\n                      <div className=\"text-sm text-gray-500\">Expires: {cert.expiry}</div>\r\n                    </div>\r\n                    <div className=\"flex items-center space-x-3\">\r\n                      <Badge className={getStatusColor(cert.status)}>{cert.status}</Badge>\r\n                      <Button variant=\"outline\" size=\"sm\">\r\n                        <Download className=\"w-4 h-4 mr-1\" />\r\n                        Download\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>PESO Inspection Schedule</CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-3\">\r\n                <div className=\"flex items-center justify-between p-3 border rounded\">\r\n                  <div>\r\n                    <div className=\"font-medium\">Plant A - Tank Inspection</div>\r\n                    <div className=\"text-sm text-gray-600\">Next inspection due: 15 Nov 2024</div>\r\n                  </div>\r\n                  <Badge className=\"bg-blue-100 text-blue-800\">Scheduled</Badge>\r\n                </div>\r\n                <div className=\"flex items-center justify-between p-3 border rounded\">\r\n                  <div>\r\n                    <div className=\"font-medium\">Plant B - Safety Audit</div>\r\n                    <div className=\"text-sm text-gray-600\">Next inspection due: 30 Dec 2024</div>\r\n                  </div>\r\n                  <Badge className=\"bg-green-100 text-green-800\">Compliant</Badge>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"gst\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>GST Returns & Reports</CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-3\">\r\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                  <div className=\"p-4 border rounded\">\r\n                    <div className=\"text-center\">\r\n                      <div className=\"text-2xl font-bold\">₹2.4M</div>\r\n                      <div className=\"text-sm text-gray-600\">Total GST Collected</div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"p-4 border rounded\">\r\n                    <div className=\"text-center\">\r\n                      <div className=\"text-2xl font-bold\">₹450K</div>\r\n                      <div className=\"text-sm text-gray-600\">GST Paid</div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"p-4 border rounded\">\r\n                    <div className=\"text-center\">\r\n                      <div className=\"text-2xl font-bold\">12</div>\r\n                      <div className=\"text-sm text-gray-600\">Returns Filed</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <div className=\"flex items-center justify-between p-3 border rounded\">\r\n                    <div>\r\n                      <div className=\"font-medium\">GSTR-1 - September 2024</div>\r\n                      <div className=\"text-sm text-gray-600\">Filed on: 10 Oct 2024</div>\r\n                    </div>\r\n                    <Badge className=\"bg-green-100 text-green-800\">Filed</Badge>\r\n                  </div>\r\n                  <div className=\"flex items-center justify-between p-3 border rounded\">\r\n                    <div>\r\n                      <div className=\"font-medium\">GSTR-3B - September 2024</div>\r\n                      <div className=\"text-sm text-gray-600\">Due: 20 Oct 2024</div>\r\n                    </div>\r\n                    <Badge className=\"bg-yellow-100 text-yellow-800\">Pending</Badge>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"environmental\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Environmental Compliance</CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"text-center py-8 text-gray-500\">\r\n                Environmental compliance reports and certificates will be displayed here\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"safety\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Safety Compliance</CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"text-center py-8 text-gray-500\">\r\n                Safety compliance reports and training records will be displayed here\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ComplianceReports;","import React from 'react';\r\nimport { Routes, Route, useNavigate, useLocation } from 'react-router-dom';\r\nimport BaseLayout from '@/components/layout/BaseLayout';\r\nimport SalesDashboard from './pages/SalesDashboard';\r\nimport CustomerManagement from './pages/CustomerManagement';\r\nimport ContractManagement from './pages/ContractManagement';\r\nimport InventoryManagement from './pages/InventoryManagement';\r\nimport OrderManagement from './pages/OrderManagement';\r\nimport VoiceInvoicing from './pages/VoiceInvoicing';\r\nimport PaymentTracking from './pages/PaymentTracking';\r\nimport DeliveryScheduling from './pages/DeliveryScheduling';\r\nimport PriceBenchmarking from './pages/PriceBenchmarking';\r\nimport ComplianceReports from './pages/ComplianceReports';\r\nimport {\r\n  LayoutDashboard,\r\n  Users,\r\n  FileText,\r\n  Package,\r\n  ShoppingCart,\r\n  Mic,\r\n  CreditCard,\r\n  Truck,\r\n  TrendingUp,\r\n  Shield\r\n} from 'lucide-react';\r\n\r\nconst SalesModule: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  const navigationItems = [\r\n    {\r\n      id: 'dashboard',\r\n      label: 'Sales Dashboard',\r\n      icon: <LayoutDashboard className=\"w-5 h-5\" />,\r\n      onClick: () => navigate('/sales'),\r\n      isActive: location.pathname === '/sales'\r\n    },\r\n    {\r\n      id: 'customers',\r\n      label: 'Customer Management',\r\n      icon: <Users className=\"w-5 h-5\" />,\r\n      onClick: () => navigate('/sales/customers'),\r\n      isActive: location.pathname === '/sales/customers'\r\n    },\r\n    {\r\n      id: 'contracts',\r\n      label: 'Contract Management',\r\n      icon: <FileText className=\"w-5 h-5\" />,\r\n      onClick: () => navigate('/sales/contracts'),\r\n      isActive: location.pathname === '/sales/contracts'\r\n    },\r\n    {\r\n      id: 'inventory',\r\n      label: 'Inventory Management',\r\n      icon: <Package className=\"w-5 h-5\" />,\r\n      onClick: () => navigate('/sales/inventory'),\r\n      isActive: location.pathname === '/sales/inventory'\r\n    },\r\n    {\r\n      id: 'orders',\r\n      label: 'Order & Invoice',\r\n      icon: <ShoppingCart className=\"w-5 h-5\" />,\r\n      onClick: () => navigate('/sales/orders'),\r\n      isActive: location.pathname === '/sales/orders'\r\n    },\r\n    {\r\n      id: 'voice-invoice',\r\n      label: 'Voice Invoicing',\r\n      icon: <Mic className=\"w-5 h-5\" />,\r\n      onClick: () => navigate('/sales/voice-invoice'),\r\n      isActive: location.pathname === '/sales/voice-invoice'\r\n    },\r\n    {\r\n      id: 'payments',\r\n      label: 'Payment Tracking',\r\n      icon: <CreditCard className=\"w-5 h-5\" />,\r\n      onClick: () => navigate('/sales/payments'),\r\n      isActive: location.pathname === '/sales/payments'\r\n    },\r\n    {\r\n      id: 'delivery',\r\n      label: 'Delivery Scheduling',\r\n      icon: <Truck className=\"w-5 h-5\" />,\r\n      onClick: () => navigate('/sales/delivery'),\r\n      isActive: location.pathname === '/sales/delivery'\r\n    },\r\n    {\r\n      id: 'pricing',\r\n      label: 'Price Benchmarking',\r\n      icon: <TrendingUp className=\"w-5 h-5\" />,\r\n      onClick: () => navigate('/sales/pricing'),\r\n      isActive: location.pathname === '/sales/pricing'\r\n    },\r\n    {\r\n      id: 'compliance',\r\n      label: 'Compliance & Reports',\r\n      icon: <Shield className=\"w-5 h-5\" />,\r\n      onClick: () => navigate('/sales/compliance'),\r\n      isActive: location.pathname === '/sales/compliance'\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <BaseLayout\r\n      moduleName=\"UrjaVyapar Sales\"\r\n      moduleSubtitle=\"Comprehensive Sales Management System\"\r\n      navigationItems={navigationItems}\r\n      userInfo={{\r\n        name: \"Sales Manager\",\r\n        role: \"Sales Operations\"\r\n      }}\r\n    >\r\n      <Routes>\r\n        <Route path=\"/\" element={<SalesDashboard />} />\r\n        <Route path=\"/customers\" element={<CustomerManagement />} />\r\n        <Route path=\"/contracts\" element={<ContractManagement />} />\r\n        <Route path=\"/inventory\" element={<InventoryManagement />} />\r\n        <Route path=\"/orders\" element={<OrderManagement />} />\r\n        <Route path=\"/voice-invoice\" element={<VoiceInvoicing />} />\r\n        <Route path=\"/payments\" element={<PaymentTracking />} />\r\n        <Route path=\"/delivery\" element={<DeliveryScheduling />} />\r\n        <Route path=\"/pricing\" element={<PriceBenchmarking />} />\r\n        <Route path=\"/compliance\" element={<ComplianceReports />} />\r\n      </Routes>\r\n    </BaseLayout>\r\n  );\r\n};\r\n\r\nexport default SalesModule;","/**\r\n * ShuddhiDoot Purification Module Container\r\n * SAUB-FE-003: Complete Purification Enhancement with Modern UI\r\n */\r\n\r\nimport React, { Suspense } from 'react';\r\nimport { Routes, Route, useNavigate, useLocation } from 'react-router-dom';\r\nimport BaseLayout from '@/components/layout/BaseLayout';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Alert, AlertDescription } from '@/components/ui/alert';\r\nimport {\r\n  BarChart3,\r\n  RotateCcw,\r\n  CheckCircle,\r\n  Wrench,\r\n  Package,\r\n  Droplets,\r\n  Activity,\r\n  Gauge,\r\n  Factory,\r\n  AlertTriangle,\r\n  TrendingUp,\r\n  Users,\r\n  Settings\r\n} from 'lucide-react';\r\n\r\n// Lazy loaded page components for better performance\r\nconst Dashboard = React.lazy(() => import('./pages/Dashboard/Dashboard'));\r\n\r\nconst CycleManagement = React.lazy(() =>\r\n  import('./pages/CycleManagement/CycleManagement').then(module => ({\r\n    default: module.CycleManagement\r\n  }))\r\n);\r\n\r\nconst QualityControl = React.lazy(() =>\r\n  import('./pages/QualityControl/QualityControl').then(module => ({\r\n    default: module.QualityControl\r\n  }))\r\n);\r\n\r\nconst MaintenanceManagement = React.lazy(() =>\r\n  import('./pages/MaintenanceManagement/MaintenanceManagement').then(module => ({\r\n    default: module.MaintenanceManagement\r\n  }))\r\n);\r\n\r\nconst InventoryTransfer = React.lazy(() =>\r\n  import('./pages/InventoryTransfer/InventoryTransfer').then(module => ({\r\n    default: module.InventoryTransferPage\r\n  }))\r\n);\r\n\r\nconst SlurryManagement = React.lazy(() =>\r\n  import('./pages/SlurryManagement/SlurryManagement').then(module => ({\r\n    default: module.SlurryManagement\r\n  }))\r\n);\r\n\r\nconst RealTimeMonitoring = React.lazy(() =>\r\n  import('./pages/RealTimeMonitoring/RealTimeMonitoring').then(module => ({\r\n    default: module.RealTimeMonitoring\r\n  }))\r\n);\r\n\r\n// Enhanced loading component with modern design\r\nconst PageLoader: React.FC = () => (\r\n  <div className=\"flex items-center justify-center min-h-[400px]\">\r\n    <Card className=\"w-full max-w-md\">\r\n      <CardContent className=\"flex flex-col items-center justify-center p-8\">\r\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mb-4\"></div>\r\n        <CardTitle className=\"text-lg font-medium text-gray-600 mb-2\">\r\n          Loading ShuddhiDoot Module...\r\n        </CardTitle>\r\n        <CardDescription className=\"text-center text-gray-500\">\r\n          Initializing purification systems and real-time data feeds\r\n        </CardDescription>\r\n      </CardContent>\r\n    </Card>\r\n  </div>\r\n);\r\n\r\n// Quick metrics display for overview\r\nconst QuickMetrics: React.FC = () => (\r\n  <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\r\n    <Card>\r\n      <CardContent className=\"p-4\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <div>\r\n            <p className=\"text-sm font-medium text-gray-600\">CH₄ Purity</p>\r\n            <p className=\"text-2xl font-bold text-green-600\">96.5%</p>\r\n          </div>\r\n          <Gauge className=\"h-8 w-8 text-green-600\" />\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n\r\n    <Card>\r\n      <CardContent className=\"p-4\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <div>\r\n            <p className=\"text-sm font-medium text-gray-600\">Active Cycles</p>\r\n            <p className=\"text-2xl font-bold text-blue-600\">3</p>\r\n          </div>\r\n          <RotateCcw className=\"h-8 w-8 text-blue-600\" />\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n\r\n    <Card>\r\n      <CardContent className=\"p-4\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <div>\r\n            <p className=\"text-sm font-medium text-gray-600\">System Status</p>\r\n            <Badge variant=\"secondary\" className=\"bg-green-100 text-green-800\">\r\n              Operational\r\n            </Badge>\r\n          </div>\r\n          <CheckCircle className=\"h-8 w-8 text-green-600\" />\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n\r\n    <Card>\r\n      <CardContent className=\"p-4\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <div>\r\n            <p className=\"text-sm font-medium text-gray-600\">Efficiency</p>\r\n            <p className=\"text-2xl font-bold text-purple-600\">94.2%</p>\r\n          </div>\r\n          <TrendingUp className=\"h-8 w-8 text-purple-600\" />\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  </div>\r\n);\r\n\r\nconst PurificationModule: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  // Base path for the purification module\r\n  const basePath = '/purification';\r\n\r\n  const navigationItems = [\r\n    {\r\n      id: 'dashboard',\r\n      label: 'Dashboard',\r\n      icon: <BarChart3 className=\"w-5 h-5\" />,\r\n      onClick: () => navigate(`${basePath}`),\r\n      isActive: location.pathname === basePath || location.pathname === `${basePath}/`,\r\n      badge: undefined\r\n    },\r\n    {\r\n      id: 'cycles',\r\n      label: 'Cycle Management',\r\n      icon: <RotateCcw className=\"w-5 h-5\" />,\r\n      onClick: () => navigate(`${basePath}/cycles`),\r\n      isActive: location.pathname === `${basePath}/cycles`,\r\n      badge: '3' // Active cycles\r\n    },\r\n    {\r\n      id: 'quality',\r\n      label: 'Quality Control',\r\n      icon: <CheckCircle className=\"w-5 h-5\" />,\r\n      onClick: () => navigate(`${basePath}/quality`),\r\n      isActive: location.pathname === `${basePath}/quality`,\r\n      badge: undefined\r\n    },\r\n    {\r\n      id: 'maintenance',\r\n      label: 'Maintenance',\r\n      icon: <Wrench className=\"w-5 h-5\" />,\r\n      onClick: () => navigate(`${basePath}/maintenance`),\r\n      isActive: location.pathname === `${basePath}/maintenance`,\r\n      badge: '2' // Pending maintenance\r\n    },\r\n    {\r\n      id: 'inventory',\r\n      label: 'Inventory Transfer',\r\n      icon: <Package className=\"w-5 h-5\" />,\r\n      onClick: () => navigate(`${basePath}/inventory`),\r\n      isActive: location.pathname === `${basePath}/inventory`,\r\n      badge: '5' // Pending transfers\r\n    },\r\n    {\r\n      id: 'slurry',\r\n      label: 'Slurry Management',\r\n      icon: <Droplets className=\"w-5 h-5\" />,\r\n      onClick: () => navigate(`${basePath}/slurry`),\r\n      isActive: location.pathname === `${basePath}/slurry`,\r\n      badge: undefined\r\n    },\r\n    {\r\n      id: 'monitoring',\r\n      label: 'Real-time Monitoring',\r\n      icon: <Activity className=\"w-5 h-5\" />,\r\n      onClick: () => navigate(`${basePath}/monitoring`),\r\n      isActive: location.pathname === `${basePath}/monitoring`,\r\n      badge: undefined\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <BaseLayout\r\n      moduleName=\"ShuddhiDoot\"\r\n      moduleSubtitle=\"Biogas Purification & Quality Management\"\r\n      navigationItems={navigationItems}\r\n      userInfo={{\r\n        name: \"Purification Manager\",\r\n        role: \"Plant Operations Head\"\r\n      }}\r\n    >\r\n      <div className=\"space-y-6\">\r\n        {/* Main content area */}\r\n        <Suspense fallback={<PageLoader />}>\r\n          <Routes>\r\n            {/* Default route redirects to dashboard */}\r\n            <Route path=\"/\" element={<Dashboard />} />\r\n            <Route path=\"/cycles\" element={<CycleManagement />} />\r\n            <Route path=\"/quality\" element={<QualityControl />} />\r\n            <Route path=\"/maintenance\" element={<MaintenanceManagement />} />\r\n            <Route path=\"/inventory\" element={<InventoryTransfer />} />\r\n            <Route path=\"/slurry\" element={<SlurryManagement />} />\r\n            <Route path=\"/monitoring\" element={<RealTimeMonitoring />} />\r\n\r\n            {/* Fallback route */}\r\n            <Route path=\"*\" element={<Dashboard />} />\r\n          </Routes>\r\n        </Suspense>\r\n      </div>\r\n    </BaseLayout>\r\n  );\r\n};\r\n\r\nexport default PurificationModule;","import React from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Progress } from '@/components/ui/progress';\r\nimport { Alert, AlertDescription } from '@/components/ui/alert';\r\nimport {\r\n  TrendingUp,\r\n  TrendingDown,\r\n  DollarSign,\r\n  Target,\r\n  AlertTriangle,\r\n  CheckCircle,\r\n  Activity,\r\n  RefreshCw,\r\n  Volume2,\r\n  ArrowUpRight,\r\n  ArrowDownRight,\r\n  Minus\r\n} from 'lucide-react';\r\nimport { useExecutiveAnalytics } from '../../contexts/ExecutiveAnalyticsContext';\r\n\r\nconst ExecutiveSummary: React.FC = () => {\r\n  const {\r\n    kpis,\r\n    insights,\r\n    overallPerformanceScore,\r\n    criticalAlerts,\r\n    topOpportunities,\r\n    refreshing,\r\n    refreshData\r\n  } = useExecutiveAnalytics();\r\n\r\n  const getKPIIcon = (category: string) => {\r\n    switch (category) {\r\n      case 'financial':\r\n        return <DollarSign className=\"h-5 w-5\" />;\r\n      case 'operational':\r\n        return <Activity className=\"h-5 w-5\" />;\r\n      case 'environmental':\r\n        return <Target className=\"h-5 w-5\" />;\r\n      case 'strategic':\r\n        return <TrendingUp className=\"h-5 w-5\" />;\r\n      default:\r\n        return <Activity className=\"h-5 w-5\" />;\r\n    }\r\n  };\r\n\r\n  const getTrendIcon = (trend: string, change: number) => {\r\n    if (trend === 'up' || change > 0) {\r\n      return <ArrowUpRight className=\"h-4 w-4 text-green-600\" />;\r\n    } else if (trend === 'down' || change < 0) {\r\n      return <ArrowDownRight className=\"h-4 w-4 text-red-600\" />;\r\n    }\r\n    return <Minus className=\"h-4 w-4 text-gray-600\" />;\r\n  };\r\n\r\n  const getPerformanceColor = (score: number) => {\r\n    if (score >= 90) return 'text-green-600';\r\n    if (score >= 75) return 'text-yellow-600';\r\n    return 'text-red-600';\r\n  };\r\n\r\n  const getConfidenceColor = (confidence: number) => {\r\n    if (confidence >= 0.8) return 'bg-green-100 text-green-800';\r\n    if (confidence >= 0.6) return 'bg-yellow-100 text-yellow-800';\r\n    return 'bg-red-100 text-red-800';\r\n  };\r\n\r\n  const formatCurrency = (value: number): string => {\r\n    if (value >= 10000000) {\r\n      return `₹${(value / 10000000).toFixed(1)}Cr`;\r\n    } else if (value >= 100000) {\r\n      return `₹${(value / 100000).toFixed(1)}L`;\r\n    }\r\n    return `₹${value.toLocaleString()}`;\r\n  };\r\n\r\n  const formatValue = (value: number, unit: string): string => {\r\n    if (unit === '₹') {\r\n      return formatCurrency(value);\r\n    }\r\n    return `${value.toLocaleString()} ${unit}`;\r\n  };\r\n\r\n  const speakSummary = () => {\r\n    const summaryText = `Executive Summary: Overall performance score is ${overallPerformanceScore}%. Revenue is ${formatCurrency(kpis.find(k => k.id === 'revenue')?.value || 0)} with ${kpis.find(k => k.id === 'revenue')?.change || 0}% growth. ${criticalAlerts.length} critical alerts require immediate attention.`;\r\n\r\n    if ('speechSynthesis' in window) {\r\n      const utterance = new SpeechSynthesisUtterance(summaryText);\r\n      speechSynthesis.speak(utterance);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header with Overall Performance */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h2 className=\"text-2xl font-bold text-gray-900\">Executive Summary</h2>\r\n          <p className=\"text-gray-600\">Real-time business intelligence and key performance indicators</p>\r\n        </div>\r\n        <div className=\"flex items-center gap-4\">\r\n          <div className=\"text-center\">\r\n            <div className={`text-3xl font-bold ${getPerformanceColor(overallPerformanceScore)}`}>\r\n              {overallPerformanceScore}%\r\n            </div>\r\n            <div className=\"text-sm text-gray-500\">Overall Performance</div>\r\n          </div>\r\n          <Button\r\n            onClick={speakSummary}\r\n            variant=\"outline\"\r\n            size=\"sm\"\r\n            className=\"hidden sm:flex\"\r\n          >\r\n            <Volume2 className=\"h-4 w-4 mr-2\" />\r\n            Listen\r\n          </Button>\r\n          <Button\r\n            onClick={refreshData}\r\n            variant=\"outline\"\r\n            size=\"sm\"\r\n            disabled={refreshing}\r\n            className=\"flex items-center gap-2\"\r\n          >\r\n            <RefreshCw className={`h-4 w-4 ${refreshing ? 'animate-spin' : ''}`} />\r\n            Refresh\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Critical Alerts */}\r\n      {criticalAlerts.length > 0 && (\r\n        <Alert className=\"border-red-200 bg-red-50\">\r\n          <AlertTriangle className=\"h-4 w-4 text-red-600\" />\r\n          <AlertDescription className=\"text-red-800\">\r\n            <strong>{criticalAlerts.length} Critical Alert{criticalAlerts.length > 1 ? 's' : ''}</strong>\r\n            <div className=\"mt-2 space-y-1\">\r\n              {criticalAlerts.slice(0, 2).map((alert) => (\r\n                <div key={alert.id} className=\"text-sm\">\r\n                  • {alert.title}: {alert.description}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </AlertDescription>\r\n        </Alert>\r\n      )}\r\n\r\n      {/* Top Opportunities */}\r\n      {topOpportunities.length > 0 && (\r\n        <Alert className=\"border-green-200 bg-green-50\">\r\n          <CheckCircle className=\"h-4 w-4 text-green-600\" />\r\n          <AlertDescription className=\"text-green-800\">\r\n            <strong>Top Growth Opportunity</strong>\r\n            <div className=\"mt-2 text-sm\">\r\n              {topOpportunities[0].title}: {topOpportunities[0].description}\r\n              {topOpportunities[0].estimatedValue && (\r\n                <span className=\"font-semibold ml-2\">\r\n                  Potential Value: {formatCurrency(topOpportunities[0].estimatedValue)}\r\n                </span>\r\n              )}\r\n            </div>\r\n          </AlertDescription>\r\n        </Alert>\r\n      )}\r\n\r\n      {/* KPI Grid */}\r\n      <div className=\"grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-3\">\r\n        {kpis.map((kpi) => (\r\n          <Card key={kpi.id} className=\"hover:shadow-lg transition-shadow duration-200\">\r\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n              <CardTitle className=\"text-sm font-medium text-gray-600\">\r\n                {kpi.name}\r\n              </CardTitle>\r\n              <div className={`p-2 rounded-lg ${\r\n                kpi.category === 'financial' ? 'bg-blue-100 text-blue-600' :\r\n                kpi.category === 'operational' ? 'bg-green-100 text-green-600' :\r\n                kpi.category === 'environmental' ? 'bg-purple-100 text-purple-600' :\r\n                'bg-orange-100 text-orange-600'\r\n              }`}>\r\n                {getKPIIcon(kpi.category)}\r\n              </div>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"flex items-baseline justify-between\">\r\n                <div className=\"text-2xl font-bold text-gray-900\">\r\n                  {formatValue(kpi.value, kpi.unit)}\r\n                </div>\r\n                <div className=\"flex items-center gap-1\">\r\n                  {getTrendIcon(kpi.trend, kpi.change)}\r\n                  <span className={`text-sm font-medium ${\r\n                    kpi.change > 0 ? 'text-green-600' :\r\n                    kpi.change < 0 ? 'text-red-600' :\r\n                    'text-gray-600'\r\n                  }`}>\r\n                    {kpi.change > 0 ? '+' : ''}{kpi.change.toFixed(1)}%\r\n                  </span>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"mt-4 space-y-2\">\r\n                <div className=\"flex justify-between text-sm text-gray-600\">\r\n                  <span>Progress to Target</span>\r\n                  <span>{Math.round((kpi.value / kpi.target) * 100)}%</span>\r\n                </div>\r\n                <Progress\r\n                  value={(kpi.value / kpi.target) * 100}\r\n                  className=\"h-2\"\r\n                />\r\n                <div className=\"flex justify-between items-center\">\r\n                  <span className=\"text-xs text-gray-500\">\r\n                    Target: {formatValue(kpi.target, kpi.unit)}\r\n                  </span>\r\n                  <Badge\r\n                    variant=\"outline\"\r\n                    className={getConfidenceColor(kpi.confidence)}\r\n                  >\r\n                    {Math.round(kpi.confidence * 100)}% Confidence\r\n                  </Badge>\r\n                </div>\r\n              </div>\r\n\r\n              {kpi.priority === 'high' && (\r\n                <div className=\"mt-2\">\r\n                  <Badge variant=\"destructive\" className=\"text-xs\">\r\n                    High Priority\r\n                  </Badge>\r\n                </div>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Quick Insights */}\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle className=\"flex items-center gap-2\">\r\n            <TrendingUp className=\"h-5 w-5\" />\r\n            Quick Insights\r\n          </CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"grid grid-cols-1 gap-4 md:grid-cols-2 lg:grid-cols-3\">\r\n            {insights.slice(0, 3).map((insight) => (\r\n              <div\r\n                key={insight.id}\r\n                className={`p-4 rounded-lg border-l-4 ${\r\n                  insight.impact === 'positive' ? 'border-green-500 bg-green-50' :\r\n                  insight.impact === 'negative' ? 'border-red-500 bg-red-50' :\r\n                  'border-gray-500 bg-gray-50'\r\n                }`}\r\n              >\r\n                <div className=\"flex items-start justify-between\">\r\n                  <h4 className=\"font-medium text-gray-900\">{insight.title}</h4>\r\n                  <Badge\r\n                    variant=\"outline\"\r\n                    className={getConfidenceColor(insight.confidence)}\r\n                  >\r\n                    {Math.round(insight.confidence * 100)}%\r\n                  </Badge>\r\n                </div>\r\n                <p className=\"mt-2 text-sm text-gray-600\">{insight.description}</p>\r\n                <div className=\"mt-3 flex items-center justify-between\">\r\n                  <span className=\"text-xs text-gray-500\">{insight.timeline}</span>\r\n                  {insight.estimatedValue && (\r\n                    <span className={`text-sm font-medium ${\r\n                      insight.impact === 'positive' ? 'text-green-600' : 'text-red-600'\r\n                    }`}>\r\n                      {insight.impact === 'positive' ? '+' : ''}{formatCurrency(insight.estimatedValue)}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n                {insight.actionRequired && (\r\n                  <Badge variant=\"outline\" className=\"mt-2 text-xs bg-yellow-100 text-yellow-800\">\r\n                    Action Required\r\n                  </Badge>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Executive Actions */}\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Recommended Actions</CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"space-y-3\">\r\n            {insights\r\n              .filter(insight => insight.actionRequired)\r\n              .slice(0, 3)\r\n              .map((insight) => (\r\n                <div key={insight.id} className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\r\n                  <div className=\"flex-1\">\r\n                    <h4 className=\"font-medium text-gray-900\">{insight.title}</h4>\r\n                    <p className=\"text-sm text-gray-600 mt-1\">{insight.timeline}</p>\r\n                  </div>\r\n                  <div className=\"flex items-center gap-2\">\r\n                    {insight.estimatedValue && (\r\n                      <span className={`text-sm font-medium ${\r\n                        insight.impact === 'positive' ? 'text-green-600' : 'text-red-600'\r\n                      }`}>\r\n                        {insight.impact === 'positive' ? '+' : ''}{formatCurrency(insight.estimatedValue)}\r\n                      </span>\r\n                    )}\r\n                    <Button size=\"sm\" variant=\"outline\">\r\n                      Review\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExecutiveSummary;","import React, { useState, useEffect, useRef } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Alert, AlertDescription } from '@/components/ui/alert';\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\r\nimport {\r\n  Mic,\r\n  MicOff,\r\n  Volume2,\r\n  VolumeX,\r\n  Play,\r\n  Pause,\r\n  RotateCcw,\r\n  MessageSquare,\r\n  Brain,\r\n  Languages,\r\n  History,\r\n  TrendingUp,\r\n  DollarSign,\r\n  Leaf,\r\n  Users,\r\n  Shield,\r\n  Lock,\r\n  Eye,\r\n  EyeOff,\r\n  Clock,\r\n  AlertTriangle\r\n} from 'lucide-react';\r\nimport { useExecutiveAnalytics } from '../../contexts/ExecutiveAnalyticsContext';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\n\r\ninterface VoiceSession {\r\n  id: string;\r\n  startTime: Date;\r\n  endTime?: Date;\r\n  queries: number;\r\n  language: 'en' | 'hi';\r\n  accuracy: number;\r\n  userId: string;\r\n  consentGiven: boolean;\r\n  dataRetention: 'session' | 'encrypted' | 'permanent';\r\n  privacyLevel: 'high' | 'medium' | 'standard';\r\n  encryptionEnabled: boolean;\r\n}\r\n\r\ninterface VoicePrivacySettings {\r\n  consentRequired: boolean;\r\n  sessionTimeout: number; // in minutes\r\n  dataRetention: 'session' | 'encrypted' | 'permanent';\r\n  encryptionEnabled: boolean;\r\n  anonymizeTranscripts: boolean;\r\n  blockSensitiveData: boolean;\r\n}\r\n\r\ninterface VoiceCommand {\r\n  command: string;\r\n  description: string;\r\n  examples: string[];\r\n  category: 'kpi' | 'financial' | 'strategic' | 'environmental';\r\n}\r\n\r\nconst VoiceAnalytics: React.FC = () => {\r\n  const { addVoiceQuery, kpis, carbonMetrics, competitiveData } = useExecutiveAnalytics();\r\n  const { user, hasPermission, isExecutive, getAccessLevel } = useAuth();\r\n\r\n  // Voice states\r\n  const [isListening, setIsListening] = useState(false);\r\n  const [isSpeaking, setIsSpeaking] = useState(false);\r\n  const [transcript, setTranscript] = useState('');\r\n  const [language, setLanguage] = useState<'en' | 'hi'>('en');\r\n  const [confidence, setConfidence] = useState(0);\r\n  const [currentSession, setCurrentSession] = useState<VoiceSession | null>(null);\r\n  const [queryHistory, setQueryHistory] = useState<any[]>([]);\r\n\r\n  // Privacy and security states\r\n  const [consentGiven, setConsentGiven] = useState(false);\r\n  const [showConsentDialog, setShowConsentDialog] = useState(false);\r\n  const [privacySettings, setPrivacySettings] = useState<VoicePrivacySettings>({\r\n    consentRequired: true,\r\n    sessionTimeout: isExecutive() ? 30 : 60, // Shorter timeout for executives\r\n    dataRetention: isExecutive() ? 'encrypted' : 'session',\r\n    encryptionEnabled: true,\r\n    anonymizeTranscripts: !isExecutive(), // Don't anonymize for executives who need full context\r\n    blockSensitiveData: true\r\n  });\r\n  const [sessionTimeRemaining, setSessionTimeRemaining] = useState<number>(0);\r\n  const [encryptedData, setEncryptedData] = useState<string>('');\r\n  const [privacyMode, setPrivacyMode] = useState(false);\r\n\r\n  // Refs\r\n  const recognitionRef = useRef<SpeechRecognition | null>(null);\r\n  const synthRef = useRef<SpeechSynthesis | null>(null);\r\n  const sessionTimeoutRef = useRef<NodeJS.Timeout | null>(null);\r\n\r\n  // Privacy and encryption utilities\r\n  const simpleEncrypt = (text: string): string => {\r\n    // Simple encryption for demo - in production, use proper encryption\r\n    return btoa(text.split('').map(char => String.fromCharCode(char.charCodeAt(0) + 1)).join(''));\r\n  };\r\n\r\n  const simpleDecrypt = (encryptedText: string): string => {\r\n    try {\r\n      return atob(encryptedText).split('').map(char => String.fromCharCode(char.charCodeAt(0) - 1)).join('');\r\n    } catch {\r\n      return encryptedText;\r\n    }\r\n  };\r\n\r\n  const sanitizeSensitiveData = (text: string): string => {\r\n    if (!privacySettings.blockSensitiveData) return text;\r\n\r\n    // Remove potential sensitive information patterns\r\n    return text\r\n      .replace(/\\b\\d{12,16}\\b/g, '[CARD-REDACTED]') // Credit card numbers\r\n      .replace(/\\b\\d{10,15}\\b/g, '[PHONE-REDACTED]') // Phone numbers\r\n      .replace(/\\b[A-Z]{2}\\d{2}[A-Z0-9]{4}\\d{7}([A-Z0-9]?){0,16}\\b/g, '[IBAN-REDACTED]') // IBAN\r\n      .replace(/\\b\\d{4}-\\d{4}-\\d{4}-\\d{4}\\b/g, '[ACCOUNT-REDACTED]') // Account numbers\r\n      .replace(/password|pin|secret|confidential/gi, '[SENSITIVE-REDACTED]');\r\n  };\r\n\r\n  const anonymizeTranscript = (text: string): string => {\r\n    if (!privacySettings.anonymizeTranscripts) return text;\r\n\r\n    // Replace names and personal identifiers\r\n    return text\r\n      .replace(/\\b[A-Z][a-z]+\\s+[A-Z][a-z]+\\b/g, '[NAME-REDACTED]')\r\n      .replace(/\\b[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}\\b/g, '[EMAIL-REDACTED]');\r\n  };\r\n\r\n  // Voice command categories\r\n  const voiceCommands: VoiceCommand[] = [\r\n    {\r\n      command: 'Revenue Summary',\r\n      description: 'Get current revenue metrics and growth trends',\r\n      examples: [\r\n        'What is our monthly revenue?',\r\n        'मासिक आय कितनी है?',\r\n        'Show me revenue growth',\r\n        'Revenue trends this quarter'\r\n      ],\r\n      category: 'financial'\r\n    },\r\n    {\r\n      command: 'Production Analytics',\r\n      description: 'Biogas production and efficiency metrics',\r\n      examples: [\r\n        'How much biogas did we produce today?',\r\n        'आज कितना बायोगैस उत्पादन हुआ?',\r\n        'Show production efficiency',\r\n        'Which plants are performing best?'\r\n      ],\r\n      category: 'kpi'\r\n    },\r\n    {\r\n      command: 'Carbon Credits',\r\n      description: 'Environmental impact and carbon credit revenue',\r\n      examples: [\r\n        'How many carbon credits did we generate?',\r\n        'कार्बन क्रेडिट कितने जेनरेट हुए?',\r\n        'Carbon revenue projections',\r\n        'Environmental impact summary'\r\n      ],\r\n      category: 'environmental'\r\n    },\r\n    {\r\n      command: 'Strategic Planning',\r\n      description: 'Market position and strategic initiatives',\r\n      examples: [\r\n        'What is our market share?',\r\n        'बाजार में हमारी स्थिति क्या है?',\r\n        'Strategic initiative progress',\r\n        'Competitive analysis summary'\r\n      ],\r\n      category: 'strategic'\r\n    }\r\n  ];\r\n\r\n  // Executive query patterns\r\n  const executiveQueries = {\r\n    revenue: [\r\n      /(?:what|how much|tell me).*(?:revenue|sales|income|earnings)/i,\r\n      /(?:मासिक|कुल).*(?:आय|राजस्व|कमाई)/i,\r\n      /(?:show|display).*(?:financial|revenue).*(?:performance|metrics)/i\r\n    ],\r\n    production: [\r\n      /(?:what|how much).*(?:production|biogas|output)/i,\r\n      /(?:आज|कुल).*(?:उत्पादन|बायोगैस)/i,\r\n      /(?:efficiency|performance).*(?:plant|production)/i\r\n    ],\r\n    carbon: [\r\n      /(?:what|how many).*(?:carbon|credits|environmental)/i,\r\n      /(?:कार्बन|पर्यावरण).*(?:क्रेडिट|प्रभाव)/i,\r\n      /(?:sustainability|green|environmental).*(?:impact|metrics)/i\r\n    ],\r\n    strategic: [\r\n      /(?:what|how).*(?:market|position|share|competitive)/i,\r\n      /(?:बाजार|प्रतिस्पर्धा).*(?:स्थिति|विश्लेषण)/i,\r\n      /(?:strategic|planning|initiatives)/i\r\n    ],\r\n    forecast: [\r\n      /(?:what|show).*(?:forecast|prediction|projection)/i,\r\n      /(?:भविष्यवाणी|पूर्वानुमान|अनुमान)/i,\r\n      /(?:future|next).*(?:quarter|year|month)/i\r\n    ]\r\n  };\r\n\r\n  // Session management and consent handling\r\n  const requestVoiceConsent = () => {\r\n    if (!user) return false;\r\n\r\n    if (privacySettings.consentRequired && !consentGiven) {\r\n      setShowConsentDialog(true);\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const grantConsent = () => {\r\n    setConsentGiven(true);\r\n    setShowConsentDialog(false);\r\n    console.log(`Voice consent granted for ${user?.name} (${user?.role})`);\r\n\r\n    // Store consent with timestamp\r\n    const consentData = {\r\n      userId: user?.id,\r\n      granted: true,\r\n      timestamp: new Date().toISOString(),\r\n      privacyLevel: getAccessLevel()\r\n    };\r\n    localStorage.setItem('voiceConsent', JSON.stringify(consentData));\r\n  };\r\n\r\n  const startVoiceSession = () => {\r\n    if (!user || !requestVoiceConsent()) return;\r\n\r\n    const sessionId = `voice-session-${Date.now()}`;\r\n    const newSession: VoiceSession = {\r\n      id: sessionId,\r\n      startTime: new Date(),\r\n      queries: 0,\r\n      language,\r\n      accuracy: 0,\r\n      userId: user.id,\r\n      consentGiven: true,\r\n      dataRetention: privacySettings.dataRetention,\r\n      privacyLevel: getAccessLevel() === 'high' ? 'high' : 'standard',\r\n      encryptionEnabled: privacySettings.encryptionEnabled\r\n    };\r\n\r\n    setCurrentSession(newSession);\r\n    setSessionTimeRemaining(privacySettings.sessionTimeout * 60); // Convert to seconds\r\n\r\n    // Set session timeout\r\n    if (sessionTimeoutRef.current) {\r\n      clearTimeout(sessionTimeoutRef.current);\r\n    }\r\n\r\n    sessionTimeoutRef.current = setTimeout(() => {\r\n      endVoiceSession();\r\n    }, privacySettings.sessionTimeout * 60 * 1000);\r\n\r\n    console.log(`Voice session started for ${user.name} - Session ID: ${sessionId}`);\r\n  };\r\n\r\n  const endVoiceSession = () => {\r\n    if (currentSession) {\r\n      const updatedSession = {\r\n        ...currentSession,\r\n        endTime: new Date()\r\n      };\r\n\r\n      // Handle data based on retention policy\r\n      if (privacySettings.dataRetention === 'session') {\r\n        // Clear all session data\r\n        console.log('Clearing session data as per privacy policy');\r\n        localStorage.removeItem('voiceSessionData');\r\n      } else if (privacySettings.dataRetention === 'encrypted') {\r\n        // Encrypt and store\r\n        const encryptedSessionData = simpleEncrypt(JSON.stringify(updatedSession));\r\n        localStorage.setItem('voiceSessionData', encryptedSessionData);\r\n        console.log('Session data encrypted and stored');\r\n      }\r\n\r\n      setCurrentSession(null);\r\n      setSessionTimeRemaining(0);\r\n      setIsListening(false);\r\n\r\n      if (sessionTimeoutRef.current) {\r\n        clearTimeout(sessionTimeoutRef.current);\r\n      }\r\n\r\n      console.log(`Voice session ended - Duration: ${Math.round((Date.now() - currentSession.startTime.getTime()) / 1000)}s`);\r\n    }\r\n  };\r\n\r\n  const processVoiceInput = (input: string) => {\r\n    if (!currentSession || !user) return;\r\n\r\n    // Apply privacy filters\r\n    let processedInput = input;\r\n    processedInput = sanitizeSensitiveData(processedInput);\r\n    processedInput = anonymizeTranscript(processedInput);\r\n\r\n    // Encrypt if required\r\n    if (privacySettings.encryptionEnabled) {\r\n      const encryptedInput = simpleEncrypt(processedInput);\r\n      setEncryptedData(encryptedInput);\r\n    }\r\n\r\n    // Update session\r\n    const updatedSession = {\r\n      ...currentSession,\r\n      queries: currentSession.queries + 1\r\n    };\r\n    setCurrentSession(updatedSession);\r\n\r\n    console.log(`Processed voice input (Privacy Level: ${updatedSession.privacyLevel}):`,\r\n                privacyMode ? '[REDACTED]' : processedInput);\r\n  };\r\n\r\n  // Initialize speech recognition\r\n  useEffect(() => {\r\n    if ('webkitSpeechRecognition' in window || 'SpeechRecognition' in window) {\r\n      const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n      recognitionRef.current = new SpeechRecognition();\r\n\r\n      recognitionRef.current.continuous = true;\r\n      recognitionRef.current.interimResults = true;\r\n      recognitionRef.current.lang = language === 'hi' ? 'hi-IN' : 'en-US';\r\n\r\n      recognitionRef.current.onresult = (event) => {\r\n        let finalTranscript = '';\r\n        let interimTranscript = '';\r\n\r\n        for (let i = event.resultIndex; i < event.results.length; i++) {\r\n          const result = event.results[i];\r\n          if (result.isFinal) {\r\n            finalTranscript += result[0].transcript;\r\n            setConfidence(result[0].confidence);\r\n          } else {\r\n            interimTranscript += result[0].transcript;\r\n          }\r\n        }\r\n\r\n        setTranscript(finalTranscript || interimTranscript);\r\n\r\n        if (finalTranscript) {\r\n          // Process with privacy controls\r\n          processVoiceInput(finalTranscript);\r\n          processVoiceQuery(finalTranscript, result[0].confidence);\r\n        }\r\n      };\r\n\r\n      recognitionRef.current.onerror = (event) => {\r\n        console.error('Speech recognition error:', event.error);\r\n        setIsListening(false);\r\n      };\r\n\r\n      recognitionRef.current.onend = () => {\r\n        setIsListening(false);\r\n      };\r\n    }\r\n\r\n    synthRef.current = speechSynthesis;\r\n  }, [language]);\r\n\r\n  // Session timeout monitoring\r\n  useEffect(() => {\r\n    let interval: NodeJS.Timeout;\r\n\r\n    if (currentSession && sessionTimeRemaining > 0) {\r\n      interval = setInterval(() => {\r\n        setSessionTimeRemaining(prev => {\r\n          if (prev <= 1) {\r\n            endVoiceSession();\r\n            return 0;\r\n          }\r\n\r\n          // Warning at 5 minutes remaining\r\n          if (prev === 300) {\r\n            console.warn('Voice session will expire in 5 minutes');\r\n            if (isExecutive()) {\r\n              speakResponse(language === 'hi'\r\n                ? 'सेशन 5 मिनट में समाप्त हो जाएगा'\r\n                : 'Session will expire in 5 minutes');\r\n            }\r\n          }\r\n\r\n          return prev - 1;\r\n        });\r\n      }, 1000);\r\n    }\r\n\r\n    return () => {\r\n      if (interval) clearInterval(interval);\r\n    };\r\n  }, [currentSession, sessionTimeRemaining]);\r\n\r\n  // Check for existing consent on component mount\r\n  useEffect(() => {\r\n    if (user) {\r\n      const storedConsent = localStorage.getItem('voiceConsent');\r\n      if (storedConsent) {\r\n        try {\r\n          const consentData = JSON.parse(storedConsent);\r\n          if (consentData.userId === user.id && consentData.granted) {\r\n            // Check if consent is still valid (24 hours for executives, 7 days for others)\r\n            const consentAge = Date.now() - new Date(consentData.timestamp).getTime();\r\n            const maxConsentAge = isExecutive() ? 24 * 60 * 60 * 1000 : 7 * 24 * 60 * 60 * 1000;\r\n\r\n            if (consentAge < maxConsentAge) {\r\n              setConsentGiven(true);\r\n            } else {\r\n              localStorage.removeItem('voiceConsent');\r\n            }\r\n          }\r\n        } catch (error) {\r\n          console.error('Error parsing stored consent:', error);\r\n          localStorage.removeItem('voiceConsent');\r\n        }\r\n      }\r\n    }\r\n  }, [user]);\r\n\r\n  // Cleanup on unmount\r\n  useEffect(() => {\r\n    return () => {\r\n      if (sessionTimeoutRef.current) {\r\n        clearTimeout(sessionTimeoutRef.current);\r\n      }\r\n      if (currentSession) {\r\n        endVoiceSession();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // Process voice queries with advanced NLP\r\n  const processVoiceQuery = async (query: string, confidence: number) => {\r\n    const queryType = identifyQueryType(query);\r\n    const response = await generateResponse(queryType, query);\r\n\r\n    // Add to voice history\r\n    const voiceQuery = {\r\n      id: Date.now().toString(),\r\n      query,\r\n      timestamp: new Date(),\r\n      response: response.text,\r\n      confidence,\r\n      category: queryType,\r\n      language\r\n    };\r\n\r\n    addVoiceQuery(voiceQuery);\r\n    setQueryHistory(prev => [voiceQuery, ...prev.slice(0, 9)]);\r\n\r\n    // Speak response\r\n    if (response.spoken) {\r\n      speakResponse(response.spoken);\r\n    }\r\n\r\n    // Update session metrics\r\n    if (currentSession) {\r\n      setCurrentSession(prev => prev ? {\r\n        ...prev,\r\n        queries: prev.queries + 1,\r\n        accuracy: (prev.accuracy + confidence) / 2\r\n      } : null);\r\n    }\r\n  };\r\n\r\n  const identifyQueryType = (query: string): string => {\r\n    const lowerQuery = query.toLowerCase();\r\n\r\n    for (const [type, patterns] of Object.entries(executiveQueries)) {\r\n      if (patterns.some(pattern => pattern.test(lowerQuery))) {\r\n        return type;\r\n      }\r\n    }\r\n\r\n    return 'general';\r\n  };\r\n\r\n  const generateResponse = async (queryType: string, query: string) => {\r\n    const responses: Record<string, any> = {\r\n      revenue: {\r\n        text: `Current monthly revenue is ₹${(kpis.find(k => k.id === 'revenue')?.value || 0 / 10000000).toFixed(1)} crores, showing ${kpis.find(k => k.id === 'revenue')?.change || 0}% growth this month.`,\r\n        spoken: language === 'hi'\r\n          ? `वर्तमान मासिक आय ${(kpis.find(k => k.id === 'revenue')?.value || 0 / 10000000).toFixed(1)} करोड़ रुपए है, जो इस महीने ${kpis.find(k => k.id === 'revenue')?.change || 0}% की वृद्धि दिखा रहा है।`\r\n          : `Current monthly revenue is ${(kpis.find(k => k.id === 'revenue')?.value || 0 / 10000000).toFixed(1)} crores, showing ${kpis.find(k => k.id === 'revenue')?.change || 0}% growth this month.`\r\n      },\r\n      production: {\r\n        text: `Biogas production is ${kpis.find(k => k.id === 'production')?.value || 0} cubic meters per day with ${kpis.find(k => k.id === 'efficiency')?.value || 0}% efficiency.`,\r\n        spoken: language === 'hi'\r\n          ? `बायोगैस उत्पादन प्रतिदिन ${kpis.find(k => k.id === 'production')?.value || 0} क्यूबिक मीटर है, जिसकी दक्षता ${kpis.find(k => k.id === 'efficiency')?.value || 0}% है।`\r\n          : `Biogas production is ${kpis.find(k => k.id === 'production')?.value || 0} cubic meters per day with ${kpis.find(k => k.id === 'efficiency')?.value || 0}% efficiency.`\r\n      },\r\n      carbon: {\r\n        text: `We generated ${carbonMetrics.creditsGenerated} tons of carbon credits worth ₹${(carbonMetrics.marketValue / 100000).toFixed(1)} lakhs.`,\r\n        spoken: language === 'hi'\r\n          ? `हमने ${carbonMetrics.creditsGenerated} टन कार्बन क्रेडिट जेनरेट किए हैं जिनकी कीमत ${(carbonMetrics.marketValue / 100000).toFixed(1)} लाख रुपए है।`\r\n          : `We generated ${carbonMetrics.creditsGenerated} tons of carbon credits worth ${(carbonMetrics.marketValue / 100000).toFixed(1)} lakhs rupees.`\r\n      },\r\n      strategic: {\r\n        text: `Our market share is ${competitiveData.marketShare}% and we rank #${competitiveData.ranking} in the industry.`,\r\n        spoken: language === 'hi'\r\n          ? `हमारी बाजार हिस्सेदारी ${competitiveData.marketShare}% है और हम उद्योग में ${competitiveData.ranking} नंबर पर हैं।`\r\n          : `Our market share is ${competitiveData.marketShare}% and we rank number ${competitiveData.ranking} in the industry.`\r\n      }\r\n    };\r\n\r\n    return responses[queryType] || {\r\n      text: 'I can help you with revenue, production, carbon credits, or strategic planning metrics.',\r\n      spoken: language === 'hi'\r\n        ? 'मैं आपकी आय, उत्पादन, कार्बन क्रेडिट, या रणनीतिक योजना मेट्रिक्स में मदद कर सकता हूं।'\r\n        : 'I can help you with revenue, production, carbon credits, or strategic planning metrics.'\r\n    };\r\n  };\r\n\r\n  const speakResponse = (text: string) => {\r\n    if (synthRef.current) {\r\n      setIsSpeaking(true);\r\n      const utterance = new SpeechSynthesisUtterance(text);\r\n      utterance.lang = language === 'hi' ? 'hi-IN' : 'en-US';\r\n      utterance.onend = () => setIsSpeaking(false);\r\n      synthRef.current.speak(utterance);\r\n    }\r\n  };\r\n\r\n  const startListening = () => {\r\n    // Check permissions first\r\n    if (!user || !hasPermission('voice', 'query')) {\r\n      alert('You do not have permission to use voice analytics');\r\n      return;\r\n    }\r\n\r\n    if (!requestVoiceConsent()) {\r\n      return; // Consent dialog will be shown\r\n    }\r\n\r\n    if (recognitionRef.current) {\r\n      setIsListening(true);\r\n      recognitionRef.current.start();\r\n\r\n      // Start session if none exists\r\n      if (!currentSession) {\r\n        startVoiceSession();\r\n      }\r\n    }\r\n  };\r\n\r\n  const stopListening = () => {\r\n    if (recognitionRef.current) {\r\n      recognitionRef.current.stop();\r\n      setIsListening(false);\r\n    }\r\n  };\r\n\r\n  const stopSpeaking = () => {\r\n    if (synthRef.current) {\r\n      synthRef.current.cancel();\r\n      setIsSpeaking(false);\r\n    }\r\n  };\r\n\r\n  const toggleLanguage = () => {\r\n    setLanguage(prev => prev === 'en' ? 'hi' : 'en');\r\n    if (recognitionRef.current) {\r\n      recognitionRef.current.lang = language === 'en' ? 'hi-IN' : 'en-US';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h2 className=\"text-2xl font-bold text-gray-900\">Voice Analytics Assistant</h2>\r\n          <p className=\"text-gray-600\">Advanced voice-enabled business intelligence</p>\r\n        </div>\r\n        <div className=\"flex items-center gap-2\">\r\n          <Button\r\n            onClick={toggleLanguage}\r\n            variant=\"outline\"\r\n            size=\"sm\"\r\n            className=\"flex items-center gap-2\"\r\n          >\r\n            <Languages className=\"h-4 w-4\" />\r\n            {language === 'en' ? 'हिंदी' : 'English'}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Privacy Controls and Session Status */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n        {/* Privacy Status */}\r\n        <Card>\r\n          <CardHeader className=\"pb-3\">\r\n            <CardTitle className=\"flex items-center gap-2 text-sm\">\r\n              <Shield className=\"h-4 w-4\" />\r\n              Privacy Controls\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardContent className=\"space-y-2\">\r\n            <div className=\"flex items-center justify-between text-xs\">\r\n              <span>Data Encryption</span>\r\n              <Badge variant={privacySettings.encryptionEnabled ? \"default\" : \"secondary\"}>\r\n                {privacySettings.encryptionEnabled ? \"ON\" : \"OFF\"}\r\n              </Badge>\r\n            </div>\r\n            <div className=\"flex items-center justify-between text-xs\">\r\n              <span>Privacy Level</span>\r\n              <Badge variant=\"outline\">\r\n                {getAccessLevel().toUpperCase()}\r\n              </Badge>\r\n            </div>\r\n            <div className=\"flex items-center justify-between text-xs\">\r\n              <span>Data Retention</span>\r\n              <Badge variant=\"secondary\">\r\n                {privacySettings.dataRetention.toUpperCase()}\r\n              </Badge>\r\n            </div>\r\n            <Button\r\n              onClick={() => setPrivacyMode(!privacyMode)}\r\n              variant=\"outline\"\r\n              size=\"sm\"\r\n              className=\"w-full mt-2\"\r\n            >\r\n              {privacyMode ? <EyeOff className=\"h-3 w-3 mr-1\" /> : <Eye className=\"h-3 w-3 mr-1\" />}\r\n              {privacyMode ? 'Show Data' : 'Hide Data'}\r\n            </Button>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Session Timer */}\r\n        <Card>\r\n          <CardHeader className=\"pb-3\">\r\n            <CardTitle className=\"flex items-center gap-2 text-sm\">\r\n              <Clock className=\"h-4 w-4\" />\r\n              Session Timer\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            {currentSession ? (\r\n              <div className=\"space-y-2\">\r\n                <div className=\"text-2xl font-bold text-center\">\r\n                  {Math.floor(sessionTimeRemaining / 60)}:{(sessionTimeRemaining % 60).toString().padStart(2, '0')}\r\n                </div>\r\n                <div className=\"text-xs text-center text-gray-500\">Time Remaining</div>\r\n                {sessionTimeRemaining <= 300 && (\r\n                  <Alert className=\"p-2\">\r\n                    <AlertTriangle className=\"h-3 w-3\" />\r\n                    <AlertDescription className=\"text-xs\">\r\n                      Session expiring soon!\r\n                    </AlertDescription>\r\n                  </Alert>\r\n                )}\r\n                <Button\r\n                  onClick={endVoiceSession}\r\n                  variant=\"outline\"\r\n                  size=\"sm\"\r\n                  className=\"w-full\"\r\n                >\r\n                  End Session\r\n                </Button>\r\n              </div>\r\n            ) : (\r\n              <div className=\"text-center text-gray-500 text-sm\">\r\n                No active session\r\n              </div>\r\n            )}\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Consent Status */}\r\n        <Card>\r\n          <CardHeader className=\"pb-3\">\r\n            <CardTitle className=\"flex items-center gap-2 text-sm\">\r\n              <Lock className=\"h-4 w-4\" />\r\n              Consent Status\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"space-y-2\">\r\n              <div className=\"flex items-center justify-between text-xs\">\r\n                <span>Voice Recording</span>\r\n                <Badge variant={consentGiven ? \"default\" : \"destructive\"}>\r\n                  {consentGiven ? \"ALLOWED\" : \"DENIED\"}\r\n                </Badge>\r\n              </div>\r\n              <div className=\"text-xs text-gray-500\">\r\n                User: {user?.name}\r\n              </div>\r\n              <div className=\"text-xs text-gray-500\">\r\n                Role: {user?.role?.toUpperCase()}\r\n              </div>\r\n              {!consentGiven && (\r\n                <Button\r\n                  onClick={() => setShowConsentDialog(true)}\r\n                  variant=\"outline\"\r\n                  size=\"sm\"\r\n                  className=\"w-full\"\r\n                >\r\n                  Grant Consent\r\n                </Button>\r\n              )}\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      {/* Consent Dialog */}\r\n      {showConsentDialog && (\r\n        <Card className=\"border-orange-200 bg-orange-50\">\r\n          <CardHeader>\r\n            <CardTitle className=\"flex items-center gap-2 text-orange-800\">\r\n              <Shield className=\"h-5 w-5\" />\r\n              Voice Analytics Consent Required\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardContent className=\"space-y-4\">\r\n            <div className=\"text-sm text-orange-700\">\r\n              <p className=\"mb-2\">\r\n                <strong>SAUBHAGYA Voice Analytics</strong> requests permission to:\r\n              </p>\r\n              <ul className=\"list-disc list-inside space-y-1 ml-4\">\r\n                <li>Record and process your voice queries</li>\r\n                <li>Analyze speech patterns for business intelligence</li>\r\n                <li>Store session data according to privacy settings</li>\r\n                <li>Apply role-based access controls for data security</li>\r\n              </ul>\r\n\r\n              <div className=\"mt-4 p-3 bg-white rounded border\">\r\n                <h4 className=\"font-medium text-gray-900 mb-2\">Privacy Settings for {user?.name}:</h4>\r\n                <div className=\"grid grid-cols-2 gap-2 text-xs\">\r\n                  <div>Session Timeout: <span className=\"font-medium\">{privacySettings.sessionTimeout} minutes</span></div>\r\n                  <div>Data Retention: <span className=\"font-medium\">{privacySettings.dataRetention}</span></div>\r\n                  <div>Encryption: <span className=\"font-medium\">{privacySettings.encryptionEnabled ? 'Enabled' : 'Disabled'}</span></div>\r\n                  <div>Anonymization: <span className=\"font-medium\">{privacySettings.anonymizeTranscripts ? 'Enabled' : 'Disabled'}</span></div>\r\n                </div>\r\n              </div>\r\n\r\n              <p className=\"mt-3 text-xs text-gray-600\">\r\n                By clicking \"Grant Consent\", you agree to voice data processing under SAUBHAGYA privacy policy.\r\n                {isExecutive() && \" Executive sessions have enhanced security and shorter timeouts.\"}\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"flex gap-2\">\r\n              <Button\r\n                onClick={grantConsent}\r\n                className=\"flex-1\"\r\n              >\r\n                <Shield className=\"h-4 w-4 mr-2\" />\r\n                Grant Consent\r\n              </Button>\r\n              <Button\r\n                onClick={() => setShowConsentDialog(false)}\r\n                variant=\"outline\"\r\n                className=\"flex-1\"\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n\r\n      {/* Current Session */}\r\n      {currentSession && (\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle className=\"flex items-center gap-2\">\r\n              <MessageSquare className=\"h-5 w-5\" />\r\n              Current Voice Session\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"grid grid-cols-4 gap-4\">\r\n              <div className=\"text-center\">\r\n                <div className=\"text-2xl font-bold text-blue-600\">{currentSession.queries}</div>\r\n                <div className=\"text-sm text-gray-500\">Queries</div>\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <div className=\"text-2xl font-bold text-green-600\">\r\n                  {Math.round(currentSession.accuracy * 100)}%\r\n                </div>\r\n                <div className=\"text-sm text-gray-500\">Accuracy</div>\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <div className=\"text-2xl font-bold text-purple-600\">\r\n                  {Math.round((Date.now() - currentSession.startTime.getTime()) / 60000)}m\r\n                </div>\r\n                <div className=\"text-sm text-gray-500\">Duration</div>\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <Badge variant=\"outline\" className=\"text-sm\">\r\n                  {currentSession.language === 'hi' ? 'हिंदी' : 'English'}\r\n                </Badge>\r\n                <div className=\"text-sm text-gray-500\">Language</div>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n\r\n      {/* Voice Controls */}\r\n      <Card>\r\n        <CardContent className=\"pt-6\">\r\n          <div className=\"flex flex-col items-center space-y-4\">\r\n            {/* Main Voice Button */}\r\n            <Button\r\n              onClick={isListening ? stopListening : startListening}\r\n              size=\"lg\"\r\n              className={`h-20 w-20 rounded-full ${\r\n                isListening\r\n                  ? 'bg-red-600 hover:bg-red-700 animate-pulse'\r\n                  : 'bg-blue-600 hover:bg-blue-700'\r\n              }`}\r\n            >\r\n              {isListening ? <MicOff className=\"h-8 w-8\" /> : <Mic className=\"h-8 w-8\" />}\r\n            </Button>\r\n\r\n            {/* Status */}\r\n            <div className=\"text-center\">\r\n              <Badge\r\n                variant={isListening ? \"default\" : \"secondary\"}\r\n                className=\"mb-2\"\r\n              >\r\n                {isListening ? \"Listening...\" : \"Click to speak\"}\r\n              </Badge>\r\n              {confidence > 0 && (\r\n                <div className=\"text-sm text-gray-500\">\r\n                  Confidence: {Math.round(confidence * 100)}%\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* Controls */}\r\n            <div className=\"flex items-center gap-2\">\r\n              {isSpeaking && (\r\n                <Button onClick={stopSpeaking} variant=\"outline\" size=\"sm\">\r\n                  <VolumeX className=\"h-4 w-4 mr-2\" />\r\n                  Stop Speaking\r\n                </Button>\r\n              )}\r\n\r\n              <Button\r\n                onClick={() => setTranscript('')}\r\n                variant=\"outline\"\r\n                size=\"sm\"\r\n              >\r\n                <RotateCcw className=\"h-4 w-4 mr-2\" />\r\n                Clear\r\n              </Button>\r\n            </div>\r\n\r\n            {/* Current Transcript */}\r\n            {transcript && (\r\n              <Alert className=\"w-full max-w-2xl\">\r\n                <Brain className=\"h-4 w-4\" />\r\n                <AlertDescription>\r\n                  <strong>You said:</strong> \"{transcript}\"\r\n                </AlertDescription>\r\n              </Alert>\r\n            )}\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Voice Commands & History Tabs */}\r\n      <Tabs defaultValue=\"commands\" className=\"w-full\">\r\n        <TabsList className=\"grid w-full grid-cols-2\">\r\n          <TabsTrigger value=\"commands\">Voice Commands</TabsTrigger>\r\n          <TabsTrigger value=\"history\">Query History</TabsTrigger>\r\n        </TabsList>\r\n\r\n        <TabsContent value=\"commands\" className=\"space-y-4\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Available Voice Commands</CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"grid grid-cols-1 gap-4 md:grid-cols-2\">\r\n                {voiceCommands.map((command, index) => (\r\n                  <div\r\n                    key={index}\r\n                    className={`p-4 rounded-lg border-l-4 ${\r\n                      command.category === 'financial' ? 'border-blue-500 bg-blue-50' :\r\n                      command.category === 'kpi' ? 'border-green-500 bg-green-50' :\r\n                      command.category === 'environmental' ? 'border-purple-500 bg-purple-50' :\r\n                      'border-orange-500 bg-orange-50'\r\n                    }`}\r\n                  >\r\n                    <div className=\"flex items-center gap-2 mb-2\">\r\n                      {command.category === 'financial' && <DollarSign className=\"h-5 w-5 text-blue-600\" />}\r\n                      {command.category === 'kpi' && <TrendingUp className=\"h-5 w-5 text-green-600\" />}\r\n                      {command.category === 'environmental' && <Leaf className=\"h-5 w-5 text-purple-600\" />}\r\n                      {command.category === 'strategic' && <Users className=\"h-5 w-5 text-orange-600\" />}\r\n                      <h4 className=\"font-medium text-gray-900\">{command.command}</h4>\r\n                    </div>\r\n                    <p className=\"text-sm text-gray-600 mb-3\">{command.description}</p>\r\n                    <div className=\"space-y-1\">\r\n                      <div className=\"text-xs font-medium text-gray-500\">Examples:</div>\r\n                      {command.examples.slice(0, 2).map((example, idx) => (\r\n                        <div key={idx} className=\"text-xs text-gray-600\">\r\n                          • \"{example}\"\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"history\" className=\"space-y-4\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                <History className=\"h-5 w-5\" />\r\n                Recent Voice Queries\r\n              </CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              {queryHistory.length > 0 ? (\r\n                <div className=\"space-y-3\">\r\n                  {queryHistory.map((query) => (\r\n                    <div key={query.id} className=\"p-3 bg-gray-50 rounded-lg\">\r\n                      <div className=\"flex items-start justify-between mb-2\">\r\n                        <div className=\"text-sm font-medium text-gray-900\">\r\n                          \"{query.query}\"\r\n                        </div>\r\n                        <div className=\"flex items-center gap-2\">\r\n                          <Badge variant=\"outline\" className=\"text-xs\">\r\n                            {Math.round(query.confidence * 100)}%\r\n                          </Badge>\r\n                          <Badge variant=\"outline\" className=\"text-xs\">\r\n                            {query.language === 'hi' ? 'हिंदी' : 'English'}\r\n                          </Badge>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"text-sm text-gray-600 mb-2\">\r\n                        <strong>Response:</strong> {query.response}\r\n                      </div>\r\n                      <div className=\"text-xs text-gray-500\">\r\n                        {query.timestamp.toLocaleTimeString()} • Category: {query.category}\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              ) : (\r\n                <div className=\"text-center py-8 text-gray-500\">\r\n                  No voice queries yet. Start speaking to see your history here.\r\n                </div>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VoiceAnalytics;","import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Progress } from '@/components/ui/progress';\r\nimport { Alert, AlertDescription } from '@/components/ui/alert';\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\r\nimport { Input } from '@/components/ui/input';\r\nimport {\r\n  TrendingUp,\r\n  TrendingDown,\r\n  Target,\r\n  DollarSign,\r\n  Calendar,\r\n  AlertTriangle,\r\n  CheckCircle,\r\n  BarChart3,\r\n  PieChart,\r\n  Activity,\r\n  Zap,\r\n  Shield,\r\n  Users,\r\n  RefreshCw,\r\n  Volume2,\r\n  Download,\r\n  Filter,\r\n  Settings,\r\n  ArrowUpRight,\r\n  ArrowDownRight,\r\n  Minus,\r\n  PlayCircle,\r\n  PauseCircle,\r\n  StopCircle,\r\n  Clock\r\n} from 'lucide-react';\r\nimport { useExecutiveAnalytics, StrategicInitiative } from '../../contexts/ExecutiveAnalyticsContext';\r\n\r\ninterface ScenarioModel {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  assumptions: {\r\n    marketGrowth: number;\r\n    investmentLevel: number;\r\n    riskFactor: number;\r\n    timeframe: number;\r\n  };\r\n  projectedOutcomes: {\r\n    revenue: number;\r\n    profit: number;\r\n    marketShare: number;\r\n    roi: number;\r\n    confidence: number;\r\n  };\r\n  risks: Array<{\r\n    category: string;\r\n    probability: number;\r\n    impact: number;\r\n    mitigation: string;\r\n  }>;\r\n}\r\n\r\ninterface InvestmentOpportunity {\r\n  id: string;\r\n  title: string;\r\n  sector: string;\r\n  investmentRequired: number;\r\n  projectedRoi: number;\r\n  riskLevel: 'low' | 'medium' | 'high';\r\n  timeToBreakeven: number;\r\n  strategicAlignment: number;\r\n  competitiveAdvantage: string;\r\n  marketSize: number;\r\n  confidence: number;\r\n  npv: number;\r\n  irr: number;\r\n  paybackPeriod: number;\r\n  discountRate: number;\r\n}\r\n\r\ninterface GeographicOpportunity {\r\n  id: string;\r\n  region: string;\r\n  state: string;\r\n  marketSize: number;\r\n  penetrationRate: number;\r\n  competitionLevel: 'low' | 'medium' | 'high';\r\n  regulatorySupport: number;\r\n  infrastructureScore: number;\r\n  investmentRequired: number;\r\n  projectedRevenue: number;\r\n  riskScore: number;\r\n  opportunityScore: number;\r\n}\r\n\r\ninterface MonteCarloSimulation {\r\n  scenario: string;\r\n  iterations: number;\r\n  outcomes: {\r\n    revenue: { mean: number; stdDev: number; percentile95: number; percentile5: number };\r\n    profit: { mean: number; stdDev: number; percentile95: number; percentile5: number };\r\n    roi: { mean: number; stdDev: number; percentile95: number; percentile5: number };\r\n  };\r\n  confidenceLevel: number;\r\n  riskOfLoss: number;\r\n}\r\n\r\ninterface SensitivityAnalysis {\r\n  variable: string;\r\n  baseValue: number;\r\n  unit: string;\r\n  impact: {\r\n    low: { change: number; revenueImpact: number; roiImpact: number };\r\n    high: { change: number; revenueImpact: number; roiImpact: number };\r\n  };\r\n  elasticity: number;\r\n}\r\n\r\ninterface RiskAssessment {\r\n  id: string;\r\n  category: 'market' | 'operational' | 'financial' | 'regulatory' | 'technology';\r\n  title: string;\r\n  description: string;\r\n  probability: number;\r\n  impact: number;\r\n  severity: 'low' | 'medium' | 'high' | 'critical';\r\n  mitigationStrategy: string;\r\n  owner: string;\r\n  status: 'identified' | 'monitoring' | 'mitigating' | 'resolved';\r\n  estimatedCost: number;\r\n}\r\n\r\nconst StrategicPlanning: React.FC = () => {\r\n  const { initiatives, refreshData, refreshing, updateInitiative } = useExecutiveAnalytics();\r\n\r\n  const [selectedScenario, setSelectedScenario] = useState<string>('baseline');\r\n  const [selectedTimeframe, setSelectedTimeframe] = useState<string>('12m');\r\n  const [activeTab, setActiveTab] = useState<string>('initiatives');\r\n  const [showAdvancedMetrics, setShowAdvancedMetrics] = useState<boolean>(false);\r\n\r\n  // Mock data for strategic planning components\r\n  const [scenarioModels] = useState<ScenarioModel[]>([\r\n    {\r\n      id: 'baseline',\r\n      name: 'Baseline Growth',\r\n      description: 'Conservative growth with current market conditions',\r\n      assumptions: {\r\n        marketGrowth: 12,\r\n        investmentLevel: 80,\r\n        riskFactor: 20,\r\n        timeframe: 12\r\n      },\r\n      projectedOutcomes: {\r\n        revenue: 1500000000,\r\n        profit: 375000000,\r\n        marketShare: 22,\r\n        roi: 25,\r\n        confidence: 0.85\r\n      },\r\n      risks: [\r\n        { category: 'Market', probability: 0.3, impact: 0.4, mitigation: 'Diversify customer base' },\r\n        { category: 'Regulatory', probability: 0.2, impact: 0.6, mitigation: 'Government relations program' }\r\n      ]\r\n    },\r\n    {\r\n      id: 'aggressive',\r\n      name: 'Aggressive Expansion',\r\n      description: 'High-growth strategy with significant market expansion',\r\n      assumptions: {\r\n        marketGrowth: 25,\r\n        investmentLevel: 150,\r\n        riskFactor: 45,\r\n        timeframe: 18\r\n      },\r\n      projectedOutcomes: {\r\n        revenue: 2250000000,\r\n        profit: 450000000,\r\n        marketShare: 35,\r\n        roi: 42,\r\n        confidence: 0.68\r\n      },\r\n      risks: [\r\n        { category: 'Market', probability: 0.5, impact: 0.7, mitigation: 'Phased expansion approach' },\r\n        { category: 'Financial', probability: 0.4, impact: 0.8, mitigation: 'Strategic partnerships' }\r\n      ]\r\n    },\r\n    {\r\n      id: 'conservative',\r\n      name: 'Conservative Consolidation',\r\n      description: 'Focus on operational efficiency and market consolidation',\r\n      assumptions: {\r\n        marketGrowth: 8,\r\n        investmentLevel: 50,\r\n        riskFactor: 10,\r\n        timeframe: 24\r\n      },\r\n      projectedOutcomes: {\r\n        revenue: 1200000000,\r\n        profit: 360000000,\r\n        marketShare: 18,\r\n        roi: 18,\r\n        confidence: 0.92\r\n      },\r\n      risks: [\r\n        { category: 'Competition', probability: 0.4, impact: 0.3, mitigation: 'Innovation investment' },\r\n        { category: 'Technology', probability: 0.2, impact: 0.4, mitigation: 'R&D partnerships' }\r\n      ]\r\n    }\r\n  ]);\r\n\r\n  const [investmentOpportunities] = useState<InvestmentOpportunity[]>([\r\n    {\r\n      id: 'ai_optimization',\r\n      title: 'AI-Driven Production Optimization',\r\n      sector: 'Technology',\r\n      investmentRequired: 250000000,\r\n      projectedRoi: 320,\r\n      riskLevel: 'medium',\r\n      timeToBreakeven: 18,\r\n      strategicAlignment: 95,\r\n      competitiveAdvantage: 'First-mover advantage in biogas AI optimization',\r\n      marketSize: 1500000000,\r\n      confidence: 0.82,\r\n      npv: 485000000,\r\n      irr: 42.5,\r\n      paybackPeriod: 2.8,\r\n      discountRate: 12\r\n    },\r\n    {\r\n      id: 'carbon_trading',\r\n      title: 'Carbon Credit Trading Platform',\r\n      sector: 'Environmental',\r\n      investmentRequired: 150000000,\r\n      projectedRoi: 450,\r\n      riskLevel: 'low',\r\n      timeToBreakeven: 12,\r\n      strategicAlignment: 88,\r\n      competitiveAdvantage: 'Integrated production and trading ecosystem',\r\n      marketSize: 2800000000,\r\n      confidence: 0.91,\r\n      npv: 625000000,\r\n      irr: 58.3,\r\n      paybackPeriod: 2.1,\r\n      discountRate: 10\r\n    },\r\n    {\r\n      id: 'rural_expansion',\r\n      title: 'Rural Distribution Network Expansion',\r\n      sector: 'Infrastructure',\r\n      investmentRequired: 800000000,\r\n      projectedRoi: 180,\r\n      riskLevel: 'high',\r\n      timeToBreakeven: 36,\r\n      strategicAlignment: 92,\r\n      competitiveAdvantage: 'Last-mile connectivity advantage',\r\n      marketSize: 5000000000,\r\n      confidence: 0.76,\r\n      npv: 320000000,\r\n      irr: 28.7,\r\n      paybackPeriod: 4.2,\r\n      discountRate: 15\r\n    },\r\n    {\r\n      id: 'smart_grid_integration',\r\n      title: 'Smart Grid Integration Platform',\r\n      sector: 'Technology',\r\n      investmentRequired: 400000000,\r\n      projectedRoi: 280,\r\n      riskLevel: 'medium',\r\n      timeToBreakeven: 24,\r\n      strategicAlignment: 89,\r\n      competitiveAdvantage: 'Integrated energy distribution network',\r\n      marketSize: 3200000000,\r\n      confidence: 0.78,\r\n      npv: 420000000,\r\n      irr: 35.2,\r\n      paybackPeriod: 3.5,\r\n      discountRate: 13\r\n    }\r\n  ]);\r\n\r\n  const [geographicOpportunities] = useState<GeographicOpportunity[]>([\r\n    {\r\n      id: 'maharashtra_west',\r\n      region: 'Western Maharashtra',\r\n      state: 'Maharashtra',\r\n      marketSize: 850000000,\r\n      penetrationRate: 12,\r\n      competitionLevel: 'medium',\r\n      regulatorySupport: 85,\r\n      infrastructureScore: 78,\r\n      investmentRequired: 180000000,\r\n      projectedRevenue: 320000000,\r\n      riskScore: 25,\r\n      opportunityScore: 88\r\n    },\r\n    {\r\n      id: 'punjab_rural',\r\n      region: 'Rural Punjab',\r\n      state: 'Punjab',\r\n      marketSize: 620000000,\r\n      penetrationRate: 8,\r\n      competitionLevel: 'low',\r\n      regulatorySupport: 92,\r\n      infrastructureScore: 82,\r\n      investmentRequired: 140000000,\r\n      projectedRevenue: 280000000,\r\n      riskScore: 18,\r\n      opportunityScore: 94\r\n    },\r\n    {\r\n      id: 'gujarat_industrial',\r\n      region: 'Industrial Gujarat',\r\n      state: 'Gujarat',\r\n      marketSize: 950000000,\r\n      penetrationRate: 15,\r\n      competitionLevel: 'high',\r\n      regulatorySupport: 78,\r\n      infrastructureScore: 88,\r\n      investmentRequired: 220000000,\r\n      projectedRevenue: 380000000,\r\n      riskScore: 35,\r\n      opportunityScore: 82\r\n    },\r\n    {\r\n      id: 'up_eastern',\r\n      region: 'Eastern Uttar Pradesh',\r\n      state: 'Uttar Pradesh',\r\n      marketSize: 720000000,\r\n      penetrationRate: 6,\r\n      competitionLevel: 'low',\r\n      regulatorySupport: 75,\r\n      infrastructureScore: 65,\r\n      investmentRequired: 160000000,\r\n      projectedRevenue: 250000000,\r\n      riskScore: 28,\r\n      opportunityScore: 85\r\n    },\r\n    {\r\n      id: 'karnataka_tech',\r\n      region: 'Tech Corridor Karnataka',\r\n      state: 'Karnataka',\r\n      marketSize: 580000000,\r\n      penetrationRate: 10,\r\n      competitionLevel: 'medium',\r\n      regulatorySupport: 88,\r\n      infrastructureScore: 92,\r\n      investmentRequired: 125000000,\r\n      projectedRevenue: 210000000,\r\n      riskScore: 22,\r\n      opportunityScore: 90\r\n    }\r\n  ]);\r\n\r\n  const [monteCarloResults] = useState<MonteCarloSimulation[]>([\r\n    {\r\n      scenario: 'baseline',\r\n      iterations: 10000,\r\n      outcomes: {\r\n        revenue: { mean: 1500000000, stdDev: 180000000, percentile95: 1820000000, percentile5: 1210000000 },\r\n        profit: { mean: 375000000, stdDev: 65000000, percentile95: 485000000, percentile5: 285000000 },\r\n        roi: { mean: 25, stdDev: 4.2, percentile95: 32.5, percentile5: 18.8 }\r\n      },\r\n      confidenceLevel: 0.85,\r\n      riskOfLoss: 0.12\r\n    },\r\n    {\r\n      scenario: 'aggressive',\r\n      iterations: 10000,\r\n      outcomes: {\r\n        revenue: { mean: 2250000000, stdDev: 385000000, percentile95: 2885000000, percentile5: 1680000000 },\r\n        profit: { mean: 450000000, stdDev: 125000000, percentile95: 665000000, percentile5: 285000000 },\r\n        roi: { mean: 42, stdDev: 8.5, percentile95: 56.2, percentile5: 28.5 }\r\n      },\r\n      confidenceLevel: 0.68,\r\n      riskOfLoss: 0.28\r\n    },\r\n    {\r\n      scenario: 'conservative',\r\n      iterations: 10000,\r\n      outcomes: {\r\n        revenue: { mean: 1200000000, stdDev: 85000000, percentile95: 1345000000, percentile5: 1085000000 },\r\n        profit: { mean: 360000000, stdDev: 42000000, percentile95: 430000000, percentile5: 305000000 },\r\n        roi: { mean: 18, stdDev: 2.8, percentile95: 22.8, percentile5: 14.2 }\r\n      },\r\n      confidenceLevel: 0.92,\r\n      riskOfLoss: 0.05\r\n    }\r\n  ]);\r\n\r\n  const [sensitivityData] = useState<SensitivityAnalysis[]>([\r\n    {\r\n      variable: 'Market Growth Rate',\r\n      baseValue: 12,\r\n      unit: '%',\r\n      impact: {\r\n        low: { change: -20, revenueImpact: -180000000, roiImpact: -4.2 },\r\n        high: { change: 30, revenueImpact: 285000000, roiImpact: 6.8 }\r\n      },\r\n      elasticity: 1.45\r\n    },\r\n    {\r\n      variable: 'Raw Material Cost',\r\n      baseValue: 35,\r\n      unit: '₹/unit',\r\n      impact: {\r\n        low: { change: -15, revenueImpact: 125000000, roiImpact: 3.2 },\r\n        high: { change: 25, revenueImpact: -185000000, roiImpact: -5.8 }\r\n      },\r\n      elasticity: -0.85\r\n    },\r\n    {\r\n      variable: 'Carbon Credit Price',\r\n      baseValue: 150000,\r\n      unit: '₹/ton',\r\n      impact: {\r\n        low: { change: -30, revenueImpact: -95000000, roiImpact: -2.8 },\r\n        high: { change: 40, revenueImpact: 165000000, roiImpact: 4.5 }\r\n      },\r\n      elasticity: 1.12\r\n    },\r\n    {\r\n      variable: 'Regulatory Support',\r\n      baseValue: 80,\r\n      unit: 'score',\r\n      impact: {\r\n        low: { change: -25, revenueImpact: -220000000, roiImpact: -6.5 },\r\n        high: { change: 20, revenueImpact: 145000000, roiImpact: 3.8 }\r\n      },\r\n      elasticity: 0.95\r\n    },\r\n    {\r\n      variable: 'Technology Adoption Rate',\r\n      baseValue: 65,\r\n      unit: '%',\r\n      impact: {\r\n        low: { change: -30, revenueImpact: -155000000, roiImpact: -4.2 },\r\n        high: { change: 35, revenueImpact: 198000000, roiImpact: 5.5 }\r\n      },\r\n      elasticity: 1.28\r\n    }\r\n  ]);\r\n\r\n  const [riskAssessments] = useState<RiskAssessment[]>([\r\n    {\r\n      id: 'regulatory_changes',\r\n      category: 'regulatory',\r\n      title: 'Government Policy Changes',\r\n      description: 'Potential changes in renewable energy subsidies and regulations',\r\n      probability: 0.6,\r\n      impact: 0.7,\r\n      severity: 'high',\r\n      mitigationStrategy: 'Active government relations and policy advocacy',\r\n      owner: 'Government Affairs Team',\r\n      status: 'monitoring',\r\n      estimatedCost: 125000000\r\n    },\r\n    {\r\n      id: 'market_saturation',\r\n      category: 'market',\r\n      title: 'Market Saturation Risk',\r\n      description: 'Risk of market saturation in primary regions',\r\n      probability: 0.4,\r\n      impact: 0.8,\r\n      severity: 'high',\r\n      mitigationStrategy: 'Geographic diversification and new product development',\r\n      owner: 'Strategic Planning Team',\r\n      status: 'mitigating',\r\n      estimatedCost: 200000000\r\n    },\r\n    {\r\n      id: 'technology_disruption',\r\n      category: 'technology',\r\n      title: 'Disruptive Technology Threat',\r\n      description: 'Emergence of competing renewable energy technologies',\r\n      probability: 0.3,\r\n      impact: 0.9,\r\n      severity: 'critical',\r\n      mitigationStrategy: 'R&D investment and technology partnerships',\r\n      owner: 'Technology Innovation Team',\r\n      status: 'mitigating',\r\n      estimatedCost: 300000000\r\n    }\r\n  ]);\r\n\r\n  const formatCurrency = (value: number): string => {\r\n    if (value >= 10000000) {\r\n      return `₹${(value / 10000000).toFixed(1)}Cr`;\r\n    } else if (value >= 100000) {\r\n      return `₹${(value / 100000).toFixed(1)}L`;\r\n    }\r\n    return `₹${value.toLocaleString()}`;\r\n  };\r\n\r\n  const getStatusIcon = (status: string) => {\r\n    switch (status) {\r\n      case 'planning':\r\n        return <Clock className=\"h-4 w-4 text-blue-600\" />;\r\n      case 'in-progress':\r\n        return <PlayCircle className=\"h-4 w-4 text-green-600\" />;\r\n      case 'completed':\r\n        return <CheckCircle className=\"h-4 w-4 text-green-600\" />;\r\n      case 'on-hold':\r\n        return <PauseCircle className=\"h-4 w-4 text-yellow-600\" />;\r\n      default:\r\n        return <Clock className=\"h-4 w-4 text-gray-600\" />;\r\n    }\r\n  };\r\n\r\n  const getRiskColor = (level: string) => {\r\n    switch (level) {\r\n      case 'low':\r\n        return 'bg-green-100 text-green-800';\r\n      case 'medium':\r\n        return 'bg-yellow-100 text-yellow-800';\r\n      case 'high':\r\n        return 'bg-red-100 text-red-800';\r\n      case 'critical':\r\n        return 'bg-red-200 text-red-900';\r\n      default:\r\n        return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  const getSeverityScore = (probability: number, impact: number): number => {\r\n    return Math.round(probability * impact * 100);\r\n  };\r\n\r\n  const speakStrategicSummary = () => {\r\n    const activeInitiatives = initiatives.filter(i => i.status === 'in-progress').length;\r\n    const totalBudget = initiatives.reduce((sum, i) => sum + i.budget, 0);\r\n    const avgRoi = initiatives.reduce((sum, i) => sum + i.roi, 0) / initiatives.length;\r\n    const totalInvestmentOpps = investmentOpportunities.reduce((sum, o) => sum + o.investmentRequired, 0);\r\n    const avgNpv = investmentOpportunities.reduce((sum, o) => sum + o.npv, 0) / investmentOpportunities.length;\r\n    const topGeographicOpp = geographicOpportunities.sort((a, b) => b.opportunityScore - a.opportunityScore)[0];\r\n    const highRisks = riskAssessments.filter(r => r.severity === 'high' || r.severity === 'critical').length;\r\n\r\n    const summaryText = `Strategic Planning Executive Summary: ${activeInitiatives} strategic initiatives in progress with ${formatCurrency(totalBudget)} total budget and ${avgRoi.toFixed(1)}% average ROI. Investment portfolio includes ${investmentOpportunities.length} opportunities worth ${formatCurrency(totalInvestmentOpps)} with average NPV of ${formatCurrency(avgNpv)}. Top geographic opportunity is ${topGeographicOpp.region} with ${topGeographicOpp.opportunityScore} opportunity score. ${highRisks} high-priority risks require immediate attention. Monte Carlo analysis shows ${Math.round(monteCarloResults.find(r => r.scenario === selectedScenario)?.confidenceLevel * 100 || 0)}% confidence level for current scenario.`;\r\n\r\n    if ('speechSynthesis' in window) {\r\n      const utterance = new SpeechSynthesisUtterance(summaryText);\r\n      speechSynthesis.speak(utterance);\r\n    }\r\n  };\r\n\r\n  const exportReport = () => {\r\n    const reportData = {\r\n      timestamp: new Date().toISOString(),\r\n      scenario: selectedScenario,\r\n      timeframe: selectedTimeframe,\r\n      summary: {\r\n        activeInitiatives: initiatives.filter(i => i.status === 'in-progress').length,\r\n        totalBudget: initiatives.reduce((sum, i) => sum + i.budget, 0),\r\n        avgRoi: initiatives.reduce((sum, i) => sum + i.roi, 0) / initiatives.length,\r\n        highPriorityRisks: riskAssessments.filter(r => r.severity === 'high' || r.severity === 'critical').length,\r\n        totalInvestmentOpportunities: investmentOpportunities.length,\r\n        topGeographicOpportunity: geographicOpportunities.sort((a, b) => b.opportunityScore - a.opportunityScore)[0]?.region || 'N/A'\r\n      },\r\n      initiatives,\r\n      scenarios: scenarioModels,\r\n      investments: {\r\n        opportunities: investmentOpportunities,\r\n        portfolioMetrics: {\r\n          totalInvestment: investmentOpportunities.reduce((sum, o) => sum + o.investmentRequired, 0),\r\n          averageNPV: investmentOpportunities.reduce((sum, o) => sum + o.npv, 0) / investmentOpportunities.length,\r\n          averageIRR: investmentOpportunities.reduce((sum, o) => sum + o.irr, 0) / investmentOpportunities.length,\r\n          averagePayback: investmentOpportunities.reduce((sum, o) => sum + o.paybackPeriod, 0) / investmentOpportunities.length\r\n        }\r\n      },\r\n      geographic: {\r\n        opportunities: geographicOpportunities,\r\n        totalMarketSize: geographicOpportunities.reduce((sum, g) => sum + g.marketSize, 0),\r\n        totalInvestmentRequired: geographicOpportunities.reduce((sum, g) => sum + g.investmentRequired, 0),\r\n        averageOpportunityScore: geographicOpportunities.reduce((sum, g) => sum + g.opportunityScore, 0) / geographicOpportunities.length\r\n      },\r\n      simulation: {\r\n        monteCarloResults,\r\n        sensitivityAnalysis: sensitivityData,\r\n        selectedScenarioConfidence: monteCarloResults.find(r => r.scenario === selectedScenario)?.confidenceLevel || 0\r\n      },\r\n      risks: {\r\n        assessments: riskAssessments,\r\n        totalExposure: riskAssessments.reduce((sum, r) => sum + r.estimatedCost, 0),\r\n        activeMitigations: riskAssessments.filter(r => r.status === 'mitigating').length,\r\n        resolvedRisks: riskAssessments.filter(r => r.status === 'resolved').length\r\n      }\r\n    };\r\n\r\n    const blob = new Blob([JSON.stringify(reportData, null, 2)], { type: 'application/json' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = `strategic-planning-comprehensive-report-${new Date().toISOString().split('T')[0]}.json`;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  const selectedScenarioData = scenarioModels.find(s => s.id === selectedScenario);\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h2 className=\"text-2xl font-bold text-gray-900\">Strategic Planning & Analysis</h2>\r\n          <p className=\"text-gray-600\">Long-term business planning, scenario modeling, and strategic initiatives</p>\r\n        </div>\r\n        <div className=\"flex items-center gap-3\">\r\n          <Button\r\n            onClick={speakStrategicSummary}\r\n            variant=\"outline\"\r\n            size=\"sm\"\r\n            className=\"hidden sm:flex\"\r\n          >\r\n            <Volume2 className=\"h-4 w-4 mr-2\" />\r\n            Listen\r\n          </Button>\r\n          <Button\r\n            onClick={exportReport}\r\n            variant=\"outline\"\r\n            size=\"sm\"\r\n          >\r\n            <Download className=\"h-4 w-4 mr-2\" />\r\n            Export\r\n          </Button>\r\n          <Button\r\n            onClick={refreshData}\r\n            variant=\"outline\"\r\n            size=\"sm\"\r\n            disabled={refreshing}\r\n          >\r\n            <RefreshCw className={`h-4 w-4 ${refreshing ? 'animate-spin' : ''} mr-2`} />\r\n            Refresh\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Strategic Controls */}\r\n      <div className=\"flex flex-wrap gap-4 p-4 bg-gray-50 rounded-lg\">\r\n        <div className=\"flex items-center gap-2\">\r\n          <label className=\"text-sm font-medium text-gray-700\">Scenario:</label>\r\n          <Select value={selectedScenario} onValueChange={setSelectedScenario}>\r\n            <SelectTrigger className=\"w-48\">\r\n              <SelectValue />\r\n            </SelectTrigger>\r\n            <SelectContent>\r\n              {scenarioModels.map(scenario => (\r\n                <SelectItem key={scenario.id} value={scenario.id}>\r\n                  {scenario.name}\r\n                </SelectItem>\r\n              ))}\r\n            </SelectContent>\r\n          </Select>\r\n        </div>\r\n        <div className=\"flex items-center gap-2\">\r\n          <label className=\"text-sm font-medium text-gray-700\">Timeframe:</label>\r\n          <Select value={selectedTimeframe} onValueChange={setSelectedTimeframe}>\r\n            <SelectTrigger className=\"w-32\">\r\n              <SelectValue />\r\n            </SelectTrigger>\r\n            <SelectContent>\r\n              <SelectItem value=\"6m\">6 Months</SelectItem>\r\n              <SelectItem value=\"12m\">12 Months</SelectItem>\r\n              <SelectItem value=\"24m\">24 Months</SelectItem>\r\n              <SelectItem value=\"36m\">36 Months</SelectItem>\r\n            </SelectContent>\r\n          </Select>\r\n        </div>\r\n        <Button\r\n          variant=\"outline\"\r\n          size=\"sm\"\r\n          onClick={() => setShowAdvancedMetrics(!showAdvancedMetrics)}\r\n        >\r\n          <Settings className=\"h-4 w-4 mr-2\" />\r\n          Advanced\r\n        </Button>\r\n      </div>\r\n\r\n      <Tabs value={activeTab} onValueChange={setActiveTab} className=\"space-y-6\">\r\n        <TabsList className=\"grid w-full grid-cols-7\">\r\n          <TabsTrigger value=\"initiatives\">Initiatives</TabsTrigger>\r\n          <TabsTrigger value=\"scenarios\">Scenarios</TabsTrigger>\r\n          <TabsTrigger value=\"investments\">Investments</TabsTrigger>\r\n          <TabsTrigger value=\"geographic\">Geographic</TabsTrigger>\r\n          <TabsTrigger value=\"simulation\">Simulation</TabsTrigger>\r\n          <TabsTrigger value=\"risks\">Risks</TabsTrigger>\r\n          <TabsTrigger value=\"planning\">Planning</TabsTrigger>\r\n        </TabsList>\r\n\r\n        {/* Strategic Initiatives Tab */}\r\n        <TabsContent value=\"initiatives\" className=\"space-y-6\">\r\n          <div className=\"grid grid-cols-1 gap-6 lg:grid-cols-2\">\r\n            {/* Initiative Overview */}\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center gap-2\">\r\n                  <Target className=\"h-5 w-5\" />\r\n                  Initiative Portfolio Overview\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"grid grid-cols-2 gap-4\">\r\n                  <div className=\"text-center p-4 bg-blue-50 rounded-lg\">\r\n                    <div className=\"text-2xl font-bold text-blue-600\">\r\n                      {initiatives.filter(i => i.status === 'in-progress').length}\r\n                    </div>\r\n                    <div className=\"text-sm text-blue-700\">Active Initiatives</div>\r\n                  </div>\r\n                  <div className=\"text-center p-4 bg-green-50 rounded-lg\">\r\n                    <div className=\"text-2xl font-bold text-green-600\">\r\n                      {formatCurrency(initiatives.reduce((sum, i) => sum + i.budget, 0))}\r\n                    </div>\r\n                    <div className=\"text-sm text-green-700\">Total Investment</div>\r\n                  </div>\r\n                  <div className=\"text-center p-4 bg-purple-50 rounded-lg\">\r\n                    <div className=\"text-2xl font-bold text-purple-600\">\r\n                      {(initiatives.reduce((sum, i) => sum + i.roi, 0) / initiatives.length).toFixed(1)}%\r\n                    </div>\r\n                    <div className=\"text-sm text-purple-700\">Average ROI</div>\r\n                  </div>\r\n                  <div className=\"text-center p-4 bg-orange-50 rounded-lg\">\r\n                    <div className=\"text-2xl font-bold text-orange-600\">\r\n                      {Math.round(initiatives.reduce((sum, i) => sum + i.progress, 0) / initiatives.length)}%\r\n                    </div>\r\n                    <div className=\"text-sm text-orange-700\">Avg Progress</div>\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            {/* ROI Analysis */}\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center gap-2\">\r\n                  <TrendingUp className=\"h-5 w-5\" />\r\n                  ROI Performance Analysis\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"space-y-4\">\r\n                  {initiatives.map((initiative) => (\r\n                    <div key={initiative.id} className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\r\n                      <div className=\"flex-1\">\r\n                        <div className=\"flex items-center gap-2\">\r\n                          {getStatusIcon(initiative.status)}\r\n                          <span className=\"font-medium\">{initiative.name}</span>\r\n                        </div>\r\n                        <div className=\"text-sm text-gray-600 mt-1\">\r\n                          Budget: {formatCurrency(initiative.budget)} |\r\n                          Spent: {formatCurrency(initiative.spent)} |\r\n                          Progress: {initiative.progress}%\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"text-right\">\r\n                        <div className={`text-lg font-bold ${\r\n                          initiative.roi >= 300 ? 'text-green-600' :\r\n                          initiative.roi >= 200 ? 'text-blue-600' :\r\n                          'text-gray-600'\r\n                        }`}>\r\n                          {initiative.roi}% ROI\r\n                        </div>\r\n                        <Badge variant=\"outline\" className={getRiskColor(initiative.riskLevel)}>\r\n                          {initiative.riskLevel} risk\r\n                        </Badge>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          {/* Detailed Initiative Cards */}\r\n          <div className=\"grid grid-cols-1 gap-6 lg:grid-cols-2\">\r\n            {initiatives.map((initiative) => (\r\n              <Card key={initiative.id} className=\"hover:shadow-lg transition-shadow\">\r\n                <CardHeader>\r\n                  <div className=\"flex items-start justify-between\">\r\n                    <div>\r\n                      <CardTitle className=\"text-lg\">{initiative.name}</CardTitle>\r\n                      <p className=\"text-sm text-gray-600 mt-1\">{initiative.description}</p>\r\n                    </div>\r\n                    <Badge\r\n                      variant=\"outline\"\r\n                      className={\r\n                        initiative.status === 'completed' ? 'bg-green-100 text-green-800' :\r\n                        initiative.status === 'in-progress' ? 'bg-blue-100 text-blue-800' :\r\n                        initiative.status === 'planning' ? 'bg-yellow-100 text-yellow-800' :\r\n                        'bg-gray-100 text-gray-800'\r\n                      }\r\n                    >\r\n                      {initiative.status.replace('-', ' ')}\r\n                    </Badge>\r\n                  </div>\r\n                </CardHeader>\r\n                <CardContent className=\"space-y-4\">\r\n                  <div className=\"grid grid-cols-2 gap-4 text-sm\">\r\n                    <div>\r\n                      <span className=\"text-gray-600\">Budget Utilization</span>\r\n                      <div className=\"font-medium\">\r\n                        {formatCurrency(initiative.spent)} / {formatCurrency(initiative.budget)}\r\n                      </div>\r\n                    </div>\r\n                    <div>\r\n                      <span className=\"text-gray-600\">Expected ROI</span>\r\n                      <div className=\"font-medium text-green-600\">{initiative.roi}%</div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <div className=\"flex justify-between text-sm mb-2\">\r\n                      <span>Progress</span>\r\n                      <span>{initiative.progress}%</span>\r\n                    </div>\r\n                    <Progress value={initiative.progress} className=\"h-2\" />\r\n                  </div>\r\n\r\n                  <div className=\"text-sm\">\r\n                    <div className=\"text-gray-600\">Timeline</div>\r\n                    <div className=\"font-medium\">\r\n                      {new Date(initiative.timeline.start).toLocaleDateString()} - {new Date(initiative.timeline.end).toLocaleDateString()}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"text-sm\">\r\n                    <div className=\"text-gray-600\">Owner</div>\r\n                    <div className=\"font-medium\">{initiative.owner}</div>\r\n                  </div>\r\n\r\n                  {showAdvancedMetrics && (\r\n                    <div className=\"pt-3 border-t border-gray-200\">\r\n                      <div className=\"text-sm space-y-2\">\r\n                        <div className=\"flex justify-between\">\r\n                          <span className=\"text-gray-600\">Risk Level:</span>\r\n                          <Badge variant=\"outline\" className={getRiskColor(initiative.riskLevel)}>\r\n                            {initiative.riskLevel}\r\n                          </Badge>\r\n                        </div>\r\n                        <div className=\"flex justify-between\">\r\n                          <span className=\"text-gray-600\">Milestones:</span>\r\n                          <span>{initiative.timeline.milestones.length} planned</span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </CardContent>\r\n              </Card>\r\n            ))}\r\n          </div>\r\n        </TabsContent>\r\n\r\n        {/* Scenario Modeling Tab */}\r\n        <TabsContent value=\"scenarios\" className=\"space-y-6\">\r\n          {selectedScenarioData && (\r\n            <>\r\n              <Card>\r\n                <CardHeader>\r\n                  <CardTitle className=\"flex items-center gap-2\">\r\n                    <BarChart3 className=\"h-5 w-5\" />\r\n                    Scenario Analysis: {selectedScenarioData.name}\r\n                  </CardTitle>\r\n                  <p className=\"text-gray-600\">{selectedScenarioData.description}</p>\r\n                </CardHeader>\r\n                <CardContent>\r\n                  <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n                    {/* Assumptions */}\r\n                    <div className=\"space-y-4\">\r\n                      <h4 className=\"font-medium text-gray-900\">Key Assumptions</h4>\r\n                      <div className=\"space-y-3\">\r\n                        <div className=\"flex justify-between items-center\">\r\n                          <span className=\"text-gray-600\">Market Growth Rate</span>\r\n                          <span className=\"font-medium\">{selectedScenarioData.assumptions.marketGrowth}%</span>\r\n                        </div>\r\n                        <div className=\"flex justify-between items-center\">\r\n                          <span className=\"text-gray-600\">Investment Level</span>\r\n                          <span className=\"font-medium\">{selectedScenarioData.assumptions.investmentLevel}%</span>\r\n                        </div>\r\n                        <div className=\"flex justify-between items-center\">\r\n                          <span className=\"text-gray-600\">Risk Factor</span>\r\n                          <span className=\"font-medium\">{selectedScenarioData.assumptions.riskFactor}%</span>\r\n                        </div>\r\n                        <div className=\"flex justify-between items-center\">\r\n                          <span className=\"text-gray-600\">Timeframe</span>\r\n                          <span className=\"font-medium\">{selectedScenarioData.assumptions.timeframe} months</span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* Projected Outcomes */}\r\n                    <div className=\"space-y-4\">\r\n                      <h4 className=\"font-medium text-gray-900\">Projected Outcomes</h4>\r\n                      <div className=\"grid grid-cols-2 gap-3\">\r\n                        <div className=\"text-center p-3 bg-blue-50 rounded-lg\">\r\n                          <div className=\"text-lg font-bold text-blue-600\">\r\n                            {formatCurrency(selectedScenarioData.projectedOutcomes.revenue)}\r\n                          </div>\r\n                          <div className=\"text-xs text-blue-700\">Revenue</div>\r\n                        </div>\r\n                        <div className=\"text-center p-3 bg-green-50 rounded-lg\">\r\n                          <div className=\"text-lg font-bold text-green-600\">\r\n                            {formatCurrency(selectedScenarioData.projectedOutcomes.profit)}\r\n                          </div>\r\n                          <div className=\"text-xs text-green-700\">Profit</div>\r\n                        </div>\r\n                        <div className=\"text-center p-3 bg-purple-50 rounded-lg\">\r\n                          <div className=\"text-lg font-bold text-purple-600\">\r\n                            {selectedScenarioData.projectedOutcomes.marketShare}%\r\n                          </div>\r\n                          <div className=\"text-xs text-purple-700\">Market Share</div>\r\n                        </div>\r\n                        <div className=\"text-center p-3 bg-orange-50 rounded-lg\">\r\n                          <div className=\"text-lg font-bold text-orange-600\">\r\n                            {selectedScenarioData.projectedOutcomes.roi}%\r\n                          </div>\r\n                          <div className=\"text-xs text-orange-700\">ROI</div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"text-center mt-4\">\r\n                        <Badge\r\n                          variant=\"outline\"\r\n                          className={`${\r\n                            selectedScenarioData.projectedOutcomes.confidence >= 0.8 ? 'bg-green-100 text-green-800' :\r\n                            selectedScenarioData.projectedOutcomes.confidence >= 0.6 ? 'bg-yellow-100 text-yellow-800' :\r\n                            'bg-red-100 text-red-800'\r\n                          }`}\r\n                        >\r\n                          {Math.round(selectedScenarioData.projectedOutcomes.confidence * 100)}% Confidence\r\n                        </Badge>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n\r\n              {/* Scenario Comparison */}\r\n              <Card>\r\n                <CardHeader>\r\n                  <CardTitle className=\"flex items-center gap-2\">\r\n                    <PieChart className=\"h-5 w-5\" />\r\n                    Scenario Comparison Matrix\r\n                  </CardTitle>\r\n                </CardHeader>\r\n                <CardContent>\r\n                  <div className=\"overflow-x-auto\">\r\n                    <table className=\"w-full text-sm\">\r\n                      <thead>\r\n                        <tr className=\"border-b border-gray-200\">\r\n                          <th className=\"text-left py-3 px-4\">Scenario</th>\r\n                          <th className=\"text-center py-3 px-4\">Revenue</th>\r\n                          <th className=\"text-center py-3 px-4\">ROI</th>\r\n                          <th className=\"text-center py-3 px-4\">Market Share</th>\r\n                          <th className=\"text-center py-3 px-4\">Risk Level</th>\r\n                          <th className=\"text-center py-3 px-4\">Confidence</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {scenarioModels.map((scenario) => (\r\n                          <tr\r\n                            key={scenario.id}\r\n                            className={`border-b border-gray-100 ${scenario.id === selectedScenario ? 'bg-blue-50' : ''}`}\r\n                          >\r\n                            <td className=\"py-3 px-4 font-medium\">{scenario.name}</td>\r\n                            <td className=\"text-center py-3 px-4\">{formatCurrency(scenario.projectedOutcomes.revenue)}</td>\r\n                            <td className=\"text-center py-3 px-4\">{scenario.projectedOutcomes.roi}%</td>\r\n                            <td className=\"text-center py-3 px-4\">{scenario.projectedOutcomes.marketShare}%</td>\r\n                            <td className=\"text-center py-3 px-4\">{scenario.assumptions.riskFactor}%</td>\r\n                            <td className=\"text-center py-3 px-4\">\r\n                              <Badge\r\n                                variant=\"outline\"\r\n                                className={`${\r\n                                  scenario.projectedOutcomes.confidence >= 0.8 ? 'bg-green-100 text-green-800' :\r\n                                  scenario.projectedOutcomes.confidence >= 0.6 ? 'bg-yellow-100 text-yellow-800' :\r\n                                  'bg-red-100 text-red-800'\r\n                                }`}\r\n                              >\r\n                                {Math.round(scenario.projectedOutcomes.confidence * 100)}%\r\n                              </Badge>\r\n                            </td>\r\n                          </tr>\r\n                        ))}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n\r\n              {/* Risk Analysis for Selected Scenario */}\r\n              <Card>\r\n                <CardHeader>\r\n                  <CardTitle className=\"flex items-center gap-2\">\r\n                    <Shield className=\"h-5 w-5\" />\r\n                    Scenario Risk Analysis\r\n                  </CardTitle>\r\n                </CardHeader>\r\n                <CardContent>\r\n                  <div className=\"space-y-4\">\r\n                    {selectedScenarioData.risks.map((risk, index) => (\r\n                      <div key={index} className=\"flex items-center justify-between p-4 bg-gray-50 rounded-lg\">\r\n                        <div className=\"flex-1\">\r\n                          <div className=\"font-medium text-gray-900\">{risk.category} Risk</div>\r\n                          <div className=\"text-sm text-gray-600\">{risk.mitigation}</div>\r\n                        </div>\r\n                        <div className=\"text-right space-y-1\">\r\n                          <div className=\"text-sm\">\r\n                            <span className=\"text-gray-600\">Probability:</span> {Math.round(risk.probability * 100)}%\r\n                          </div>\r\n                          <div className=\"text-sm\">\r\n                            <span className=\"text-gray-600\">Impact:</span> {Math.round(risk.impact * 100)}%\r\n                          </div>\r\n                          <Badge\r\n                            variant=\"outline\"\r\n                            className={getSeverityScore(risk.probability, risk.impact) >= 50 ? 'bg-red-100 text-red-800' : 'bg-yellow-100 text-yellow-800'}\r\n                          >\r\n                            Score: {getSeverityScore(risk.probability, risk.impact)}\r\n                          </Badge>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n            </>\r\n          )}\r\n        </TabsContent>\r\n\r\n        {/* Investment Portfolio Tab */}\r\n        <TabsContent value=\"investments\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                <DollarSign className=\"h-5 w-5\" />\r\n                Investment Opportunity Portfolio\r\n              </CardTitle>\r\n              <p className=\"text-gray-600\">Prioritized investment opportunities with ROI analysis and strategic alignment</p>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"grid grid-cols-1 gap-6 lg:grid-cols-2\">\r\n                {investmentOpportunities\r\n                  .sort((a, b) => (b.projectedRoi * b.strategicAlignment) - (a.projectedRoi * a.strategicAlignment))\r\n                  .map((opportunity) => (\r\n                  <Card key={opportunity.id} className=\"hover:shadow-lg transition-shadow\">\r\n                    <CardHeader>\r\n                      <div className=\"flex items-start justify-between\">\r\n                        <div>\r\n                          <CardTitle className=\"text-lg\">{opportunity.title}</CardTitle>\r\n                          <Badge variant=\"outline\" className=\"mt-2\">\r\n                            {opportunity.sector}\r\n                          </Badge>\r\n                        </div>\r\n                        <Badge\r\n                          variant=\"outline\"\r\n                          className={getRiskColor(opportunity.riskLevel)}\r\n                        >\r\n                          {opportunity.riskLevel} risk\r\n                        </Badge>\r\n                      </div>\r\n                    </CardHeader>\r\n                    <CardContent className=\"space-y-4\">\r\n                      <div className=\"grid grid-cols-2 gap-4\">\r\n                        <div className=\"text-center p-3 bg-blue-50 rounded-lg\">\r\n                          <div className=\"text-lg font-bold text-blue-600\">\r\n                            {formatCurrency(opportunity.investmentRequired)}\r\n                          </div>\r\n                          <div className=\"text-xs text-blue-700\">Investment Required</div>\r\n                        </div>\r\n                        <div className=\"text-center p-3 bg-green-50 rounded-lg\">\r\n                          <div className=\"text-lg font-bold text-green-600\">\r\n                            {opportunity.projectedRoi}%\r\n                          </div>\r\n                          <div className=\"text-xs text-green-700\">Projected ROI</div>\r\n                        </div>\r\n                        <div className=\"text-center p-3 bg-purple-50 rounded-lg\">\r\n                          <div className=\"text-lg font-bold text-purple-600\">\r\n                            {formatCurrency(opportunity.npv)}\r\n                          </div>\r\n                          <div className=\"text-xs text-purple-700\">NPV</div>\r\n                        </div>\r\n                        <div className=\"text-center p-3 bg-orange-50 rounded-lg\">\r\n                          <div className=\"text-lg font-bold text-orange-600\">\r\n                            {opportunity.irr}%\r\n                          </div>\r\n                          <div className=\"text-xs text-orange-700\">IRR</div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"space-y-3\">\r\n                        <div className=\"flex justify-between items-center\">\r\n                          <span className=\"text-gray-600\">Time to Breakeven</span>\r\n                          <span className=\"font-medium\">{opportunity.timeToBreakeven} months</span>\r\n                        </div>\r\n                        <div className=\"flex justify-between items-center\">\r\n                          <span className=\"text-gray-600\">Strategic Alignment</span>\r\n                          <div className=\"flex items-center gap-2\">\r\n                            <Progress value={opportunity.strategicAlignment} className=\"h-2 w-16\" />\r\n                            <span className=\"font-medium\">{opportunity.strategicAlignment}%</span>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"flex justify-between items-center\">\r\n                          <span className=\"text-gray-600\">Market Size</span>\r\n                          <span className=\"font-medium\">{formatCurrency(opportunity.marketSize)}</span>\r\n                        </div>\r\n                        <div className=\"flex justify-between items-center\">\r\n                          <span className=\"text-gray-600\">Payback Period</span>\r\n                          <span className=\"font-medium\">{opportunity.paybackPeriod} years</span>\r\n                        </div>\r\n                        <div className=\"flex justify-between items-center\">\r\n                          <span className=\"text-gray-600\">Discount Rate</span>\r\n                          <span className=\"font-medium\">{opportunity.discountRate}%</span>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"pt-3 border-t border-gray-200\">\r\n                        <div className=\"text-sm text-gray-600 mb-2\">Competitive Advantage</div>\r\n                        <div className=\"text-sm font-medium\">{opportunity.competitiveAdvantage}</div>\r\n                      </div>\r\n\r\n                      <div className=\"flex items-center justify-between\">\r\n                        <Badge\r\n                          variant=\"outline\"\r\n                          className={`${\r\n                            opportunity.confidence >= 0.8 ? 'bg-green-100 text-green-800' :\r\n                            opportunity.confidence >= 0.6 ? 'bg-yellow-100 text-yellow-800' :\r\n                            'bg-red-100 text-red-800'\r\n                          }`}\r\n                        >\r\n                          {Math.round(opportunity.confidence * 100)}% Confidence\r\n                        </Badge>\r\n                        <Button size=\"sm\" variant=\"outline\">\r\n                          Detailed Analysis\r\n                        </Button>\r\n                      </div>\r\n                    </CardContent>\r\n                  </Card>\r\n                ))}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          {/* Investment Portfolio Summary */}\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                <Activity className=\"h-5 w-5\" />\r\n                Portfolio Optimization Analysis\r\n              </CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\r\n                <div className=\"space-y-4\">\r\n                  <h4 className=\"font-medium text-gray-900\">Risk-Return Profile</h4>\r\n                  <div className=\"space-y-3\">\r\n                    {['low', 'medium', 'high'].map(risk => {\r\n                      const opportunities = investmentOpportunities.filter(o => o.riskLevel === risk);\r\n                      const avgRoi = opportunities.reduce((sum, o) => sum + o.projectedRoi, 0) / opportunities.length || 0;\r\n                      const totalInvestment = opportunities.reduce((sum, o) => sum + o.investmentRequired, 0);\r\n\r\n                      return (\r\n                        <div key={risk} className=\"flex justify-between items-center p-3 bg-gray-50 rounded\">\r\n                          <div>\r\n                            <div className=\"font-medium capitalize\">{risk} Risk</div>\r\n                            <div className=\"text-sm text-gray-600\">{opportunities.length} opportunities</div>\r\n                          </div>\r\n                          <div className=\"text-right\">\r\n                            <div className=\"font-medium\">{avgRoi.toFixed(1)}% ROI</div>\r\n                            <div className=\"text-sm text-gray-600\">{formatCurrency(totalInvestment)}</div>\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"space-y-4\">\r\n                  <h4 className=\"font-medium text-gray-900\">Sector Distribution</h4>\r\n                  <div className=\"space-y-3\">\r\n                    {Array.from(new Set(investmentOpportunities.map(o => o.sector))).map(sector => {\r\n                      const sectorOpportunities = investmentOpportunities.filter(o => o.sector === sector);\r\n                      const totalInvestment = sectorOpportunities.reduce((sum, o) => sum + o.investmentRequired, 0);\r\n\r\n                      return (\r\n                        <div key={sector} className=\"flex justify-between items-center p-3 bg-gray-50 rounded\">\r\n                          <div>\r\n                            <div className=\"font-medium\">{sector}</div>\r\n                            <div className=\"text-sm text-gray-600\">{sectorOpportunities.length} opportunities</div>\r\n                          </div>\r\n                          <div className=\"font-medium\">{formatCurrency(totalInvestment)}</div>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"space-y-4\">\r\n                  <h4 className=\"font-medium text-gray-900\">Recommended Allocation</h4>\r\n                  <div className=\"space-y-3\">\r\n                    <div className=\"p-4 bg-green-50 rounded-lg border border-green-200\">\r\n                      <div className=\"font-medium text-green-800\">Optimal Portfolio</div>\r\n                      <div className=\"text-sm text-green-700 mt-1\">\r\n                        Balanced risk-return allocation\r\n                      </div>\r\n                      <div className=\"mt-3 space-y-2\">\r\n                        <div className=\"flex justify-between text-sm\">\r\n                          <span>Expected ROI:</span>\r\n                          <span className=\"font-medium\">285%</span>\r\n                        </div>\r\n                        <div className=\"flex justify-between text-sm\">\r\n                          <span>Total Investment:</span>\r\n                          <span className=\"font-medium\">{formatCurrency(\r\n                            investmentOpportunities.reduce((sum, o) => sum + o.investmentRequired, 0)\r\n                          )}</span>\r\n                        </div>\r\n                        <div className=\"flex justify-between text-sm\">\r\n                          <span>Payback Period:</span>\r\n                          <span className=\"font-medium\">22 months</span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        {/* Risk Assessment Tab */}\r\n        <TabsContent value=\"risks\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                <AlertTriangle className=\"h-5 w-5\" />\r\n                Strategic Risk Assessment & Mitigation\r\n              </CardTitle>\r\n              <p className=\"text-gray-600\">Comprehensive risk analysis with impact assessment and mitigation strategies</p>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-6\">\r\n                {/* Risk Overview */}\r\n                <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-4\">\r\n                  {['critical', 'high', 'medium', 'low'].map(severity => {\r\n                    const risks = riskAssessments.filter(r => r.severity === severity);\r\n                    return (\r\n                      <div key={severity} className={`text-center p-4 rounded-lg ${\r\n                        severity === 'critical' ? 'bg-red-100' :\r\n                        severity === 'high' ? 'bg-orange-100' :\r\n                        severity === 'medium' ? 'bg-yellow-100' :\r\n                        'bg-green-100'\r\n                      }`}>\r\n                        <div className={`text-2xl font-bold ${\r\n                          severity === 'critical' ? 'text-red-600' :\r\n                          severity === 'high' ? 'text-orange-600' :\r\n                          severity === 'medium' ? 'text-yellow-600' :\r\n                          'text-green-600'\r\n                        }`}>\r\n                          {risks.length}\r\n                        </div>\r\n                        <div className={`text-sm ${\r\n                          severity === 'critical' ? 'text-red-700' :\r\n                          severity === 'high' ? 'text-orange-700' :\r\n                          severity === 'medium' ? 'text-yellow-700' :\r\n                          'text-green-700'\r\n                        }`}>\r\n                          {severity.charAt(0).toUpperCase() + severity.slice(1)} Risk\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n\r\n                {/* Detailed Risk Cards */}\r\n                <div className=\"space-y-4\">\r\n                  {riskAssessments\r\n                    .sort((a, b) => getSeverityScore(b.probability, b.impact) - getSeverityScore(a.probability, a.impact))\r\n                    .map((risk) => (\r\n                    <Card key={risk.id} className=\"hover:shadow-lg transition-shadow\">\r\n                      <CardHeader>\r\n                        <div className=\"flex items-start justify-between\">\r\n                          <div className=\"flex-1\">\r\n                            <CardTitle className=\"text-lg\">{risk.title}</CardTitle>\r\n                            <p className=\"text-sm text-gray-600 mt-1\">{risk.description}</p>\r\n                            <div className=\"flex items-center gap-2 mt-2\">\r\n                              <Badge variant=\"outline\" className={\r\n                                risk.category === 'market' ? 'bg-blue-100 text-blue-800' :\r\n                                risk.category === 'operational' ? 'bg-green-100 text-green-800' :\r\n                                risk.category === 'financial' ? 'bg-purple-100 text-purple-800' :\r\n                                risk.category === 'regulatory' ? 'bg-orange-100 text-orange-800' :\r\n                                'bg-gray-100 text-gray-800'\r\n                              }>\r\n                                {risk.category}\r\n                              </Badge>\r\n                              <Badge variant=\"outline\" className={getRiskColor(risk.severity)}>\r\n                                {risk.severity}\r\n                              </Badge>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"text-right\">\r\n                            <div className=\"text-2xl font-bold text-red-600\">\r\n                              {getSeverityScore(risk.probability, risk.impact)}\r\n                            </div>\r\n                            <div className=\"text-sm text-gray-600\">Risk Score</div>\r\n                          </div>\r\n                        </div>\r\n                      </CardHeader>\r\n                      <CardContent className=\"space-y-4\">\r\n                        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-4\">\r\n                          <div>\r\n                            <div className=\"text-sm text-gray-600 mb-2\">Risk Metrics</div>\r\n                            <div className=\"space-y-2\">\r\n                              <div className=\"flex justify-between\">\r\n                                <span className=\"text-sm\">Probability:</span>\r\n                                <span className=\"font-medium\">{Math.round(risk.probability * 100)}%</span>\r\n                              </div>\r\n                              <div className=\"flex justify-between\">\r\n                                <span className=\"text-sm\">Impact:</span>\r\n                                <span className=\"font-medium\">{Math.round(risk.impact * 100)}%</span>\r\n                              </div>\r\n                              <div className=\"flex justify-between\">\r\n                                <span className=\"text-sm\">Est. Cost:</span>\r\n                                <span className=\"font-medium\">{formatCurrency(risk.estimatedCost)}</span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div>\r\n                            <div className=\"text-sm text-gray-600 mb-2\">Mitigation Strategy</div>\r\n                            <div className=\"text-sm\">{risk.mitigationStrategy}</div>\r\n                          </div>\r\n\r\n                          <div>\r\n                            <div className=\"text-sm text-gray-600 mb-2\">Management</div>\r\n                            <div className=\"space-y-2\">\r\n                              <div className=\"text-sm\">\r\n                                <span className=\"text-gray-600\">Owner:</span> {risk.owner}\r\n                              </div>\r\n                              <Badge\r\n                                variant=\"outline\"\r\n                                className={\r\n                                  risk.status === 'resolved' ? 'bg-green-100 text-green-800' :\r\n                                  risk.status === 'mitigating' ? 'bg-blue-100 text-blue-800' :\r\n                                  risk.status === 'monitoring' ? 'bg-yellow-100 text-yellow-800' :\r\n                                  'bg-gray-100 text-gray-800'\r\n                                }\r\n                              >\r\n                                {risk.status}\r\n                              </Badge>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </CardContent>\r\n                    </Card>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          {/* Risk Mitigation Summary */}\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                <Shield className=\"h-5 w-5\" />\r\n                Risk Mitigation Investment Summary\r\n              </CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\r\n                <div className=\"text-center p-6 bg-red-50 rounded-lg\">\r\n                  <div className=\"text-3xl font-bold text-red-600\">\r\n                    {formatCurrency(riskAssessments.reduce((sum, r) => sum + r.estimatedCost, 0))}\r\n                  </div>\r\n                  <div className=\"text-sm text-red-700 mt-2\">Total Risk Exposure</div>\r\n                </div>\r\n                <div className=\"text-center p-6 bg-blue-50 rounded-lg\">\r\n                  <div className=\"text-3xl font-bold text-blue-600\">\r\n                    {riskAssessments.filter(r => r.status === 'mitigating').length}\r\n                  </div>\r\n                  <div className=\"text-sm text-blue-700 mt-2\">Active Mitigations</div>\r\n                </div>\r\n                <div className=\"text-center p-6 bg-green-50 rounded-lg\">\r\n                  <div className=\"text-3xl font-bold text-green-600\">\r\n                    {Math.round((riskAssessments.filter(r => r.status === 'resolved').length / riskAssessments.length) * 100)}%\r\n                  </div>\r\n                  <div className=\"text-sm text-green-700 mt-2\">Risks Resolved</div>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        {/* Geographic Expansion Tab */}\r\n        <TabsContent value=\"geographic\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                <Target className=\"h-5 w-5\" />\r\n                Geographic Market Expansion Analysis\r\n              </CardTitle>\r\n              <p className=\"text-gray-600\">Regional opportunity assessment and market penetration strategy</p>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-6\">\r\n                {/* Market Opportunity Map */}\r\n                <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n                  {geographicOpportunities\r\n                    .sort((a, b) => b.opportunityScore - a.opportunityScore)\r\n                    .map((region) => (\r\n                    <Card key={region.id} className=\"hover:shadow-lg transition-shadow\">\r\n                      <CardHeader>\r\n                        <div className=\"flex items-start justify-between\">\r\n                          <div>\r\n                            <CardTitle className=\"text-lg\">{region.region}</CardTitle>\r\n                            <Badge variant=\"outline\" className=\"mt-2\">\r\n                              {region.state}\r\n                            </Badge>\r\n                          </div>\r\n                          <div className=\"text-right\">\r\n                            <div className=\"text-2xl font-bold text-green-600\">\r\n                              {region.opportunityScore}\r\n                            </div>\r\n                            <div className=\"text-sm text-gray-600\">Opportunity Score</div>\r\n                          </div>\r\n                        </div>\r\n                      </CardHeader>\r\n                      <CardContent className=\"space-y-4\">\r\n                        <div className=\"grid grid-cols-2 gap-4\">\r\n                          <div className=\"text-center p-3 bg-blue-50 rounded-lg\">\r\n                            <div className=\"text-lg font-bold text-blue-600\">\r\n                              {formatCurrency(region.marketSize)}\r\n                            </div>\r\n                            <div className=\"text-xs text-blue-700\">Market Size</div>\r\n                          </div>\r\n                          <div className=\"text-center p-3 bg-green-50 rounded-lg\">\r\n                            <div className=\"text-lg font-bold text-green-600\">\r\n                              {formatCurrency(region.projectedRevenue)}\r\n                            </div>\r\n                            <div className=\"text-xs text-green-700\">Projected Revenue</div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"space-y-3\">\r\n                          <div className=\"flex justify-between items-center\">\r\n                            <span className=\"text-gray-600\">Current Penetration</span>\r\n                            <div className=\"flex items-center gap-2\">\r\n                              <Progress value={region.penetrationRate} className=\"h-2 w-16\" />\r\n                              <span className=\"font-medium\">{region.penetrationRate}%</span>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"flex justify-between items-center\">\r\n                            <span className=\"text-gray-600\">Regulatory Support</span>\r\n                            <div className=\"flex items-center gap-2\">\r\n                              <Progress value={region.regulatorySupport} className=\"h-2 w-16\" />\r\n                              <span className=\"font-medium\">{region.regulatorySupport}%</span>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"flex justify-between items-center\">\r\n                            <span className=\"text-gray-600\">Infrastructure</span>\r\n                            <div className=\"flex items-center gap-2\">\r\n                              <Progress value={region.infrastructureScore} className=\"h-2 w-16\" />\r\n                              <span className=\"font-medium\">{region.infrastructureScore}%</span>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"pt-3 border-t border-gray-200\">\r\n                          <div className=\"flex justify-between items-center mb-2\">\r\n                            <span className=\"text-gray-600\">Investment Required</span>\r\n                            <span className=\"font-medium\">{formatCurrency(region.investmentRequired)}</span>\r\n                          </div>\r\n                          <div className=\"flex justify-between items-center mb-2\">\r\n                            <span className=\"text-gray-600\">Competition Level</span>\r\n                            <Badge\r\n                              variant=\"outline\"\r\n                              className={getRiskColor(region.competitionLevel)}\r\n                            >\r\n                              {region.competitionLevel}\r\n                            </Badge>\r\n                          </div>\r\n                          <div className=\"flex justify-between items-center\">\r\n                            <span className=\"text-gray-600\">Risk Score</span>\r\n                            <span className={`font-medium ${\r\n                              region.riskScore <= 20 ? 'text-green-600' :\r\n                              region.riskScore <= 30 ? 'text-yellow-600' :\r\n                              'text-red-600'\r\n                            }`}>\r\n                              {region.riskScore}/100\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <Button size=\"sm\" className=\"w-full\">\r\n                          View Detailed Analysis\r\n                        </Button>\r\n                      </CardContent>\r\n                    </Card>\r\n                  ))}\r\n                </div>\r\n\r\n                {/* Regional Summary */}\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle className=\"flex items-center gap-2\">\r\n                      <BarChart3 className=\"h-5 w-5\" />\r\n                      Regional Expansion Summary\r\n                    </CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-6\">\r\n                      <div className=\"text-center p-4 bg-blue-50 rounded-lg\">\r\n                        <div className=\"text-2xl font-bold text-blue-600\">\r\n                          {formatCurrency(geographicOpportunities.reduce((sum, r) => sum + r.marketSize, 0))}\r\n                        </div>\r\n                        <div className=\"text-sm text-blue-700 mt-2\">Total Addressable Market</div>\r\n                      </div>\r\n                      <div className=\"text-center p-4 bg-green-50 rounded-lg\">\r\n                        <div className=\"text-2xl font-bold text-green-600\">\r\n                          {formatCurrency(geographicOpportunities.reduce((sum, r) => sum + r.investmentRequired, 0))}\r\n                        </div>\r\n                        <div className=\"text-sm text-green-700 mt-2\">Total Investment Required</div>\r\n                      </div>\r\n                      <div className=\"text-center p-4 bg-purple-50 rounded-lg\">\r\n                        <div className=\"text-2xl font-bold text-purple-600\">\r\n                          {formatCurrency(geographicOpportunities.reduce((sum, r) => sum + r.projectedRevenue, 0))}\r\n                        </div>\r\n                        <div className=\"text-sm text-purple-700 mt-2\">Total Projected Revenue</div>\r\n                      </div>\r\n                      <div className=\"text-center p-4 bg-orange-50 rounded-lg\">\r\n                        <div className=\"text-2xl font-bold text-orange-600\">\r\n                          {Math.round(geographicOpportunities.reduce((sum, r) => sum + r.opportunityScore, 0) / geographicOpportunities.length)}\r\n                        </div>\r\n                        <div className=\"text-sm text-orange-700 mt-2\">Avg Opportunity Score</div>\r\n                      </div>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        {/* Monte Carlo Simulation Tab */}\r\n        <TabsContent value=\"simulation\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                <Activity className=\"h-5 w-5\" />\r\n                Monte Carlo Simulation & Sensitivity Analysis\r\n              </CardTitle>\r\n              <p className=\"text-gray-600\">Statistical modeling and risk assessment for strategic scenarios</p>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-6\">\r\n                {/* Monte Carlo Results */}\r\n                <div className=\"space-y-4\">\r\n                  <h4 className=\"font-medium text-gray-900\">Monte Carlo Simulation Results (10,000 iterations)</h4>\r\n                  <div className=\"grid grid-cols-1 gap-6\">\r\n                    {monteCarloResults.map((result) => (\r\n                      <Card key={result.scenario} className=\"hover:shadow-lg transition-shadow\">\r\n                        <CardHeader>\r\n                          <div className=\"flex items-center justify-between\">\r\n                            <CardTitle className=\"text-lg capitalize\">\r\n                              {result.scenario} Scenario\r\n                            </CardTitle>\r\n                            <div className=\"flex items-center gap-4\">\r\n                              <Badge\r\n                                variant=\"outline\"\r\n                                className={`${\r\n                                  result.confidenceLevel >= 0.8 ? 'bg-green-100 text-green-800' :\r\n                                  result.confidenceLevel >= 0.6 ? 'bg-yellow-100 text-yellow-800' :\r\n                                  'bg-red-100 text-red-800'\r\n                                }`}\r\n                              >\r\n                                {Math.round(result.confidenceLevel * 100)}% Confidence\r\n                              </Badge>\r\n                              <Badge\r\n                                variant=\"outline\"\r\n                                className={`${\r\n                                  result.riskOfLoss <= 0.1 ? 'bg-green-100 text-green-800' :\r\n                                  result.riskOfLoss <= 0.25 ? 'bg-yellow-100 text-yellow-800' :\r\n                                  'bg-red-100 text-red-800'\r\n                                }`}\r\n                              >\r\n                                {Math.round(result.riskOfLoss * 100)}% Risk of Loss\r\n                              </Badge>\r\n                            </div>\r\n                          </div>\r\n                        </CardHeader>\r\n                        <CardContent>\r\n                          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\r\n                            {/* Revenue Distribution */}\r\n                            <div className=\"space-y-3\">\r\n                              <h5 className=\"font-medium text-blue-600\">Revenue Distribution</h5>\r\n                              <div className=\"space-y-2\">\r\n                                <div className=\"flex justify-between text-sm\">\r\n                                  <span>Mean:</span>\r\n                                  <span className=\"font-medium\">{formatCurrency(result.outcomes.revenue.mean)}</span>\r\n                                </div>\r\n                                <div className=\"flex justify-between text-sm\">\r\n                                  <span>Std Dev:</span>\r\n                                  <span className=\"font-medium\">{formatCurrency(result.outcomes.revenue.stdDev)}</span>\r\n                                </div>\r\n                                <div className=\"flex justify-between text-sm\">\r\n                                  <span>95th %ile:</span>\r\n                                  <span className=\"font-medium text-green-600\">{formatCurrency(result.outcomes.revenue.percentile95)}</span>\r\n                                </div>\r\n                                <div className=\"flex justify-between text-sm\">\r\n                                  <span>5th %ile:</span>\r\n                                  <span className=\"font-medium text-red-600\">{formatCurrency(result.outcomes.revenue.percentile5)}</span>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n\r\n                            {/* Profit Distribution */}\r\n                            <div className=\"space-y-3\">\r\n                              <h5 className=\"font-medium text-green-600\">Profit Distribution</h5>\r\n                              <div className=\"space-y-2\">\r\n                                <div className=\"flex justify-between text-sm\">\r\n                                  <span>Mean:</span>\r\n                                  <span className=\"font-medium\">{formatCurrency(result.outcomes.profit.mean)}</span>\r\n                                </div>\r\n                                <div className=\"flex justify-between text-sm\">\r\n                                  <span>Std Dev:</span>\r\n                                  <span className=\"font-medium\">{formatCurrency(result.outcomes.profit.stdDev)}</span>\r\n                                </div>\r\n                                <div className=\"flex justify-between text-sm\">\r\n                                  <span>95th %ile:</span>\r\n                                  <span className=\"font-medium text-green-600\">{formatCurrency(result.outcomes.profit.percentile95)}</span>\r\n                                </div>\r\n                                <div className=\"flex justify-between text-sm\">\r\n                                  <span>5th %ile:</span>\r\n                                  <span className=\"font-medium text-red-600\">{formatCurrency(result.outcomes.profit.percentile5)}</span>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n\r\n                            {/* ROI Distribution */}\r\n                            <div className=\"space-y-3\">\r\n                              <h5 className=\"font-medium text-purple-600\">ROI Distribution</h5>\r\n                              <div className=\"space-y-2\">\r\n                                <div className=\"flex justify-between text-sm\">\r\n                                  <span>Mean:</span>\r\n                                  <span className=\"font-medium\">{result.outcomes.roi.mean.toFixed(1)}%</span>\r\n                                </div>\r\n                                <div className=\"flex justify-between text-sm\">\r\n                                  <span>Std Dev:</span>\r\n                                  <span className=\"font-medium\">{result.outcomes.roi.stdDev.toFixed(1)}%</span>\r\n                                </div>\r\n                                <div className=\"flex justify-between text-sm\">\r\n                                  <span>95th %ile:</span>\r\n                                  <span className=\"font-medium text-green-600\">{result.outcomes.roi.percentile95.toFixed(1)}%</span>\r\n                                </div>\r\n                                <div className=\"flex justify-between text-sm\">\r\n                                  <span>5th %ile:</span>\r\n                                  <span className=\"font-medium text-red-600\">{result.outcomes.roi.percentile5.toFixed(1)}%</span>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </CardContent>\r\n                      </Card>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Sensitivity Analysis */}\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle className=\"flex items-center gap-2\">\r\n                      <TrendingUp className=\"h-5 w-5\" />\r\n                      Sensitivity Analysis - Key Variables Impact\r\n                    </CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    <div className=\"space-y-4\">\r\n                      {sensitivityData.map((variable, index) => (\r\n                        <Card key={index} className=\"hover:shadow-lg transition-shadow\">\r\n                          <CardHeader>\r\n                            <div className=\"flex items-center justify-between\">\r\n                              <CardTitle className=\"text-lg\">{variable.variable}</CardTitle>\r\n                              <Badge\r\n                                variant=\"outline\"\r\n                                className={`${\r\n                                  Math.abs(variable.elasticity) >= 1.2 ? 'bg-red-100 text-red-800' :\r\n                                  Math.abs(variable.elasticity) >= 0.8 ? 'bg-yellow-100 text-yellow-800' :\r\n                                  'bg-green-100 text-green-800'\r\n                                }`}\r\n                              >\r\n                                Elasticity: {variable.elasticity.toFixed(2)}\r\n                              </Badge>\r\n                            </div>\r\n                          </CardHeader>\r\n                          <CardContent>\r\n                            <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\r\n                              <div className=\"text-center p-4 bg-gray-50 rounded-lg\">\r\n                                <div className=\"text-lg font-bold text-gray-800\">\r\n                                  {variable.baseValue} {variable.unit}\r\n                                </div>\r\n                                <div className=\"text-sm text-gray-600\">Base Value</div>\r\n                              </div>\r\n                              <div className=\"space-y-3\">\r\n                                <h5 className=\"font-medium text-red-600\">Downside Scenario ({variable.impact.low.change}%)</h5>\r\n                                <div className=\"space-y-2\">\r\n                                  <div className=\"flex justify-between text-sm\">\r\n                                    <span>Revenue Impact:</span>\r\n                                    <span className=\"font-medium text-red-600\">{formatCurrency(variable.impact.low.revenueImpact)}</span>\r\n                                  </div>\r\n                                  <div className=\"flex justify-between text-sm\">\r\n                                    <span>ROI Impact:</span>\r\n                                    <span className=\"font-medium text-red-600\">{variable.impact.low.roiImpact.toFixed(1)}%</span>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"space-y-3\">\r\n                                <h5 className=\"font-medium text-green-600\">Upside Scenario ({variable.impact.high.change}%)</h5>\r\n                                <div className=\"space-y-2\">\r\n                                  <div className=\"flex justify-between text-sm\">\r\n                                    <span>Revenue Impact:</span>\r\n                                    <span className=\"font-medium text-green-600\">{formatCurrency(variable.impact.high.revenueImpact)}</span>\r\n                                  </div>\r\n                                  <div className=\"flex justify-between text-sm\">\r\n                                    <span>ROI Impact:</span>\r\n                                    <span className=\"font-medium text-green-600\">+{variable.impact.high.roiImpact.toFixed(1)}%</span>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </CardContent>\r\n                        </Card>\r\n                      ))}\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        {/* Long-term Planning Tab */}\r\n        <TabsContent value=\"planning\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                <Calendar className=\"h-5 w-5\" />\r\n                Long-term Business Planning Framework\r\n              </CardTitle>\r\n              <p className=\"text-gray-600\">Strategic roadmap and long-term vision execution</p>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-6\">\r\n                {/* Strategic Vision Timeline */}\r\n                <div className=\"space-y-4\">\r\n                  <h4 className=\"font-medium text-gray-900\">Strategic Vision Timeline (2024-2027)</h4>\r\n                  <div className=\"space-y-4\">\r\n                    {[\r\n                      {\r\n                        year: '2024',\r\n                        focus: 'Market Consolidation & Technology Integration',\r\n                        goals: ['Achieve 25% market share', 'Complete AI optimization rollout', 'Launch carbon trading platform'],\r\n                        investment: 850000000,\r\n                        targetRoi: 280\r\n                      },\r\n                      {\r\n                        year: '2025',\r\n                        focus: 'Regional Expansion & Innovation',\r\n                        goals: ['Expand to 5 new regions', 'Launch next-gen biogas technology', 'Establish R&D centers'],\r\n                        investment: 1200000000,\r\n                        targetRoi: 320\r\n                      },\r\n                      {\r\n                        year: '2026',\r\n                        focus: 'International Markets & Sustainability Leadership',\r\n                        goals: ['Enter international markets', 'Achieve carbon neutrality', 'IPO preparation'],\r\n                        investment: 1800000000,\r\n                        targetRoi: 380\r\n                      },\r\n                      {\r\n                        year: '2027',\r\n                        focus: 'Global Leadership & Ecosystem Development',\r\n                        goals: ['Global market presence', 'Complete ecosystem integration', 'Industry leadership'],\r\n                        investment: 2500000000,\r\n                        targetRoi: 450\r\n                      }\r\n                    ].map((phase) => (\r\n                      <Card key={phase.year} className=\"hover:shadow-lg transition-shadow\">\r\n                        <CardHeader>\r\n                          <div className=\"flex items-center justify-between\">\r\n                            <CardTitle className=\"text-lg\">{phase.year}: {phase.focus}</CardTitle>\r\n                            <Badge variant=\"outline\" className=\"bg-blue-100 text-blue-800\">\r\n                              {phase.targetRoi}% ROI Target\r\n                            </Badge>\r\n                          </div>\r\n                        </CardHeader>\r\n                        <CardContent>\r\n                          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\r\n                            <div>\r\n                              <div className=\"text-sm text-gray-600 mb-2\">Strategic Goals</div>\r\n                              <ul className=\"space-y-1\">\r\n                                {phase.goals.map((goal, index) => (\r\n                                  <li key={index} className=\"text-sm flex items-center gap-2\">\r\n                                    <CheckCircle className=\"h-3 w-3 text-green-600\" />\r\n                                    {goal}\r\n                                  </li>\r\n                                ))}\r\n                              </ul>\r\n                            </div>\r\n                            <div className=\"text-right\">\r\n                              <div className=\"text-sm text-gray-600\">Planned Investment</div>\r\n                              <div className=\"text-2xl font-bold text-blue-600\">\r\n                                {formatCurrency(phase.investment)}\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </CardContent>\r\n                      </Card>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Key Performance Indicators Tracking */}\r\n                <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n                  <Card>\r\n                    <CardHeader>\r\n                      <CardTitle className=\"flex items-center gap-2\">\r\n                        <Target className=\"h-5 w-5\" />\r\n                        Long-term KPI Targets\r\n                      </CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent>\r\n                      <div className=\"space-y-4\">\r\n                        {[\r\n                          { metric: 'Annual Revenue', current: '₹125Cr', target: '₹500Cr', progress: 25 },\r\n                          { metric: 'Market Share', current: '18.5%', target: '40%', progress: 46 },\r\n                          { metric: 'Geographic Presence', current: '12 states', target: '28 states', progress: 43 },\r\n                          { metric: 'Carbon Credits', current: '450 tons', target: '2,000 tons', progress: 23 },\r\n                          { metric: 'Customer Base', current: '15,000', target: '100,000', progress: 15 }\r\n                        ].map((kpi, index) => (\r\n                          <div key={index} className=\"space-y-2\">\r\n                            <div className=\"flex justify-between text-sm\">\r\n                              <span className=\"font-medium\">{kpi.metric}</span>\r\n                              <span className=\"text-gray-600\">{kpi.current} → {kpi.target}</span>\r\n                            </div>\r\n                            <div className=\"flex items-center gap-2\">\r\n                              <Progress value={kpi.progress} className=\"h-2 flex-1\" />\r\n                              <span className=\"text-sm font-medium\">{kpi.progress}%</span>\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    </CardContent>\r\n                  </Card>\r\n\r\n                  <Card>\r\n                    <CardHeader>\r\n                      <CardTitle className=\"flex items-center gap-2\">\r\n                        <Zap className=\"h-5 w-5\" />\r\n                        Strategic Success Factors\r\n                      </CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent>\r\n                      <div className=\"space-y-4\">\r\n                        {[\r\n                          { factor: 'Technology Innovation', score: 85, trend: 'up' },\r\n                          { factor: 'Market Position', score: 78, trend: 'up' },\r\n                          { factor: 'Financial Health', score: 92, trend: 'stable' },\r\n                          { factor: 'Operational Excellence', score: 87, trend: 'up' },\r\n                          { factor: 'Sustainability Leadership', score: 74, trend: 'up' },\r\n                          { factor: 'Talent & Culture', score: 81, trend: 'stable' }\r\n                        ].map((factor, index) => (\r\n                          <div key={index} className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\r\n                            <div className=\"flex items-center gap-2\">\r\n                              <span className=\"font-medium text-sm\">{factor.factor}</span>\r\n                              {factor.trend === 'up' ?\r\n                                <ArrowUpRight className=\"h-4 w-4 text-green-600\" /> :\r\n                                factor.trend === 'down' ?\r\n                                <ArrowDownRight className=\"h-4 w-4 text-red-600\" /> :\r\n                                <Minus className=\"h-4 w-4 text-gray-600\" />\r\n                              }\r\n                            </div>\r\n                            <div className=\"flex items-center gap-2\">\r\n                              <Progress value={factor.score} className=\"h-2 w-16\" />\r\n                              <span className=\"text-sm font-medium\">{factor.score}%</span>\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    </CardContent>\r\n                  </Card>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StrategicPlanning;","import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Progress } from '@/components/ui/progress';\r\nimport { Alert, AlertDescription } from '@/components/ui/alert';\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\r\nimport {\r\n  TrendingUp,\r\n  TrendingDown,\r\n  Leaf,\r\n  Globe,\r\n  Award,\r\n  Target,\r\n  AlertTriangle,\r\n  CheckCircle,\r\n  BarChart3,\r\n  PieChart,\r\n  Activity,\r\n  Shield,\r\n  RefreshCw,\r\n  Volume2,\r\n  Download,\r\n  Calculator,\r\n  Zap,\r\n  Factory,\r\n  ArrowUpRight,\r\n  ArrowDownRight,\r\n  Minus,\r\n  DollarSign,\r\n  Calendar,\r\n  Users,\r\n  Building,\r\n  Wind,\r\n  Recycle\r\n} from 'lucide-react';\r\nimport { useExecutiveAnalytics } from '../../contexts/ExecutiveAnalyticsContext';\r\n\r\ninterface CarbonCreditData {\r\n  id: string;\r\n  projectName: string;\r\n  creditType: 'VCS' | 'CDM' | 'Gold Standard' | 'CAR' | 'VER';\r\n  creditsGenerated: number;\r\n  creditsIssued: number;\r\n  creditsSold: number;\r\n  pricePerCredit: number;\r\n  revenue: number;\r\n  vintage: number;\r\n  expiryDate: string;\r\n  co2Reduced: number;\r\n  verificationStatus: 'pending' | 'verified' | 'issued' | 'retired';\r\n  buyer?: string;\r\n  additionalityScore: number;\r\n}\r\n\r\ninterface ESGMetrics {\r\n  environmental: {\r\n    carbonReduction: number;\r\n    renewableEnergyGenerated: number;\r\n    wasteReduction: number;\r\n    waterConservation: number;\r\n    biodiversityImpact: number;\r\n    certifications: string[];\r\n    score: number;\r\n  };\r\n  social: {\r\n    jobsCreated: number;\r\n    communityImpact: number;\r\n    ruralFamiliesBenefited: number;\r\n    healthImprovements: number;\r\n    educationPrograms: number;\r\n    genderEquity: number;\r\n    score: number;\r\n  };\r\n  governance: {\r\n    boardDiversity: number;\r\n    transparencyIndex: number;\r\n    ethicsScore: number;\r\n    complianceRating: number;\r\n    stakeholderEngagement: number;\r\n    dataQuality: number;\r\n    score: number;\r\n  };\r\n  overallRating: 'A+' | 'A' | 'B+' | 'B' | 'C+' | 'C' | 'D';\r\n}\r\n\r\ninterface MarketTrend {\r\n  date: string;\r\n  vcsPrice: number;\r\n  cdmPrice: number;\r\n  goldStandardPrice: number;\r\n  volume: number;\r\n  volatility: number;\r\n  marketCap: number;\r\n}\r\n\r\ninterface ComplianceFramework {\r\n  id: string;\r\n  framework: string;\r\n  status: 'compliant' | 'non-compliant' | 'partial' | 'pending';\r\n  lastAssessment: string;\r\n  nextDue: string;\r\n  score: number;\r\n  requirements: Array<{\r\n    requirement: string;\r\n    status: 'met' | 'partial' | 'not-met';\r\n    evidence: string;\r\n  }>;\r\n  riskLevel: 'low' | 'medium' | 'high';\r\n}\r\n\r\nconst CarbonAnalytics: React.FC = () => {\r\n  const { carbonMetrics, refreshData, refreshing } = useExecutiveAnalytics();\r\n\r\n  const [selectedTimeframe, setSelectedTimeframe] = useState<string>('12m');\r\n  const [selectedMetric, setSelectedMetric] = useState<string>('revenue');\r\n  const [activeTab, setActiveTab] = useState<string>('credits');\r\n  const [showProjections, setShowProjections] = useState<boolean>(false);\r\n\r\n  // Mock data for carbon analytics\r\n  const [carbonCredits] = useState<CarbonCreditData[]>([\r\n    {\r\n      id: 'cc001',\r\n      projectName: 'Biogas Plant Maharashtra',\r\n      creditType: 'VCS',\r\n      creditsGenerated: 120,\r\n      creditsIssued: 115,\r\n      creditsSold: 98,\r\n      pricePerCredit: 185000,\r\n      revenue: 18130000,\r\n      vintage: 2024,\r\n      expiryDate: '2034-12-31',\r\n      co2Reduced: 600,\r\n      verificationStatus: 'issued',\r\n      buyer: 'Green Energy Corp',\r\n      additionalityScore: 92\r\n    },\r\n    {\r\n      id: 'cc002',\r\n      projectName: 'Rural Biogas Gujarat',\r\n      creditType: 'Gold Standard',\r\n      creditsGenerated: 85,\r\n      creditsIssued: 85,\r\n      creditsSold: 75,\r\n      pricePerCredit: 210000,\r\n      revenue: 15750000,\r\n      vintage: 2024,\r\n      expiryDate: '2034-06-30',\r\n      co2Reduced: 425,\r\n      verificationStatus: 'issued',\r\n      buyer: 'Climate Solutions Ltd',\r\n      additionalityScore: 89\r\n    },\r\n    {\r\n      id: 'cc003',\r\n      projectName: 'Community Biogas Punjab',\r\n      creditType: 'CDM',\r\n      creditsGenerated: 150,\r\n      creditsIssued: 0,\r\n      creditsSold: 0,\r\n      pricePerCredit: 165000,\r\n      revenue: 0,\r\n      vintage: 2024,\r\n      expiryDate: '2034-09-30',\r\n      co2Reduced: 750,\r\n      verificationStatus: 'pending',\r\n      additionalityScore: 87\r\n    },\r\n    {\r\n      id: 'cc004',\r\n      projectName: 'Integrated Waste Management',\r\n      creditType: 'VER',\r\n      creditsGenerated: 200,\r\n      creditsIssued: 180,\r\n      creditsSold: 160,\r\n      pricePerCredit: 155000,\r\n      revenue: 24800000,\r\n      vintage: 2024,\r\n      expiryDate: '2034-03-31',\r\n      co2Reduced: 1000,\r\n      verificationStatus: 'issued',\r\n      buyer: 'Carbon Offset International',\r\n      additionalityScore: 94\r\n    }\r\n  ]);\r\n\r\n  const [esgMetrics] = useState<ESGMetrics>({\r\n    environmental: {\r\n      carbonReduction: 2775,\r\n      renewableEnergyGenerated: 45000,\r\n      wasteReduction: 125000,\r\n      waterConservation: 85000,\r\n      biodiversityImpact: 78,\r\n      certifications: ['ISO 14001', 'Gold Standard', 'VCS', 'B Corp'],\r\n      score: 87\r\n    },\r\n    social: {\r\n      jobsCreated: 1250,\r\n      communityImpact: 85,\r\n      ruralFamiliesBenefited: 12500,\r\n      healthImprovements: 78,\r\n      educationPrograms: 45,\r\n      genderEquity: 72,\r\n      score: 82\r\n    },\r\n    governance: {\r\n      boardDiversity: 68,\r\n      transparencyIndex: 91,\r\n      ethicsScore: 89,\r\n      complianceRating: 94,\r\n      stakeholderEngagement: 86,\r\n      dataQuality: 92,\r\n      score: 88\r\n    },\r\n    overallRating: 'A'\r\n  });\r\n\r\n  const [marketTrends] = useState<MarketTrend[]>([\r\n    { date: '2024-01', vcsPrice: 142000, cdmPrice: 128000, goldStandardPrice: 195000, volume: 2500000, volatility: 0.15, marketCap: 45000000000 },\r\n    { date: '2024-02', vcsPrice: 148000, cdmPrice: 135000, goldStandardPrice: 201000, volume: 2750000, volatility: 0.12, marketCap: 47500000000 },\r\n    { date: '2024-03', vcsPrice: 155000, cdmPrice: 140000, goldStandardPrice: 205000, volume: 2900000, volatility: 0.18, marketCap: 50200000000 },\r\n    { date: '2024-04', vcsPrice: 162000, cdmPrice: 145000, goldStandardPrice: 210000, volume: 3100000, volatility: 0.14, marketCap: 52800000000 },\r\n    { date: '2024-05', vcsPrice: 175000, cdmPrice: 158000, goldStandardPrice: 218000, volume: 3350000, volatility: 0.16, marketCap: 55600000000 },\r\n    { date: '2024-06', vcsPrice: 185000, cdmPrice: 165000, goldStandardPrice: 225000, volume: 3500000, volatility: 0.11, marketCap: 58200000000 }\r\n  ]);\r\n\r\n  const [complianceFrameworks] = useState<ComplianceFramework[]>([\r\n    {\r\n      id: 'tcfd',\r\n      framework: 'TCFD (Task Force on Climate-related Financial Disclosures)',\r\n      status: 'compliant',\r\n      lastAssessment: '2024-03-15',\r\n      nextDue: '2025-03-15',\r\n      score: 92,\r\n      requirements: [\r\n        { requirement: 'Climate Risk Governance', status: 'met', evidence: 'Board climate committee established' },\r\n        { requirement: 'Strategy Disclosure', status: 'met', evidence: 'Climate strategy published' },\r\n        { requirement: 'Risk Management', status: 'met', evidence: 'Climate risk framework implemented' },\r\n        { requirement: 'Metrics & Targets', status: 'met', evidence: 'Net-zero targets set' }\r\n      ],\r\n      riskLevel: 'low'\r\n    },\r\n    {\r\n      id: 'ghg',\r\n      framework: 'GHG Protocol Corporate Standard',\r\n      status: 'compliant',\r\n      lastAssessment: '2024-02-28',\r\n      nextDue: '2025-02-28',\r\n      score: 89,\r\n      requirements: [\r\n        { requirement: 'Scope 1 Emissions', status: 'met', evidence: 'Direct emissions calculated' },\r\n        { requirement: 'Scope 2 Emissions', status: 'met', evidence: 'Indirect emissions reported' },\r\n        { requirement: 'Scope 3 Emissions', status: 'partial', evidence: 'Value chain assessment ongoing' },\r\n        { requirement: 'Verification', status: 'met', evidence: 'Third-party verified' }\r\n      ],\r\n      riskLevel: 'low'\r\n    },\r\n    {\r\n      id: 'science_targets',\r\n      framework: 'Science Based Targets initiative (SBTi)',\r\n      status: 'pending',\r\n      lastAssessment: '2024-01-15',\r\n      nextDue: '2024-07-15',\r\n      score: 75,\r\n      requirements: [\r\n        { requirement: 'Target Setting', status: 'met', evidence: 'Targets submitted for validation' },\r\n        { requirement: 'Coverage', status: 'partial', evidence: '85% scope 1&2 coverage achieved' },\r\n        { requirement: 'Timeline', status: 'met', evidence: 'Net-zero by 2050 committed' },\r\n        { requirement: 'Validation', status: 'not-met', evidence: 'Awaiting SBTi approval' }\r\n      ],\r\n      riskLevel: 'medium'\r\n    },\r\n    {\r\n      id: 'cdp',\r\n      framework: 'CDP Climate Change',\r\n      status: 'compliant',\r\n      lastAssessment: '2024-04-30',\r\n      nextDue: '2025-04-30',\r\n      score: 85,\r\n      requirements: [\r\n        { requirement: 'Climate Governance', status: 'met', evidence: 'A- rating achieved' },\r\n        { requirement: 'Risk & Opportunity', status: 'met', evidence: 'Comprehensive assessment' },\r\n        { requirement: 'Business Strategy', status: 'met', evidence: 'Climate integration documented' },\r\n        { requirement: 'Targets & Performance', status: 'met', evidence: 'Progress tracking implemented' }\r\n      ],\r\n      riskLevel: 'low'\r\n    }\r\n  ]);\r\n\r\n  const formatCurrency = (value: number): string => {\r\n    if (value >= 10000000) {\r\n      return `₹${(value / 10000000).toFixed(1)}Cr`;\r\n    } else if (value >= 100000) {\r\n      return `₹${(value / 100000).toFixed(1)}L`;\r\n    }\r\n    return `₹${value.toLocaleString()}`;\r\n  };\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'verified':\r\n      case 'issued':\r\n      case 'compliant':\r\n      case 'met':\r\n        return 'bg-green-100 text-green-800';\r\n      case 'pending':\r\n      case 'partial':\r\n        return 'bg-yellow-100 text-yellow-800';\r\n      case 'non-compliant':\r\n      case 'not-met':\r\n        return 'bg-red-100 text-red-800';\r\n      default:\r\n        return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  const getESGRatingColor = (rating: string) => {\r\n    switch (rating) {\r\n      case 'A+':\r\n      case 'A':\r\n        return 'bg-green-100 text-green-800 border-green-300';\r\n      case 'B+':\r\n      case 'B':\r\n        return 'bg-blue-100 text-blue-800 border-blue-300';\r\n      case 'C+':\r\n      case 'C':\r\n        return 'bg-yellow-100 text-yellow-800 border-yellow-300';\r\n      case 'D':\r\n        return 'bg-red-100 text-red-800 border-red-300';\r\n      default:\r\n        return 'bg-gray-100 text-gray-800 border-gray-300';\r\n    }\r\n  };\r\n\r\n  const getCreditTypeIcon = (type: string) => {\r\n    switch (type) {\r\n      case 'VCS':\r\n        return <Shield className=\"h-4 w-4\" />;\r\n      case 'Gold Standard':\r\n        return <Award className=\"h-4 w-4\" />;\r\n      case 'CDM':\r\n        return <Globe className=\"h-4 w-4\" />;\r\n      case 'CAR':\r\n        return <Factory className=\"h-4 w-4\" />;\r\n      case 'VER':\r\n        return <Recycle className=\"h-4 w-4\" />;\r\n      default:\r\n        return <Leaf className=\"h-4 w-4\" />;\r\n    }\r\n  };\r\n\r\n  const speakCarbonSummary = () => {\r\n    const totalCredits = carbonCredits.reduce((sum, cc) => sum + cc.creditsGenerated, 0);\r\n    const totalRevenue = carbonCredits.reduce((sum, cc) => sum + cc.revenue, 0);\r\n    const avgPrice = totalRevenue / carbonCredits.reduce((sum, cc) => sum + cc.creditsSold, 0);\r\n\r\n    const summaryText = `Carbon Analytics Summary: Generated ${totalCredits} carbon credits with total revenue of ${formatCurrency(totalRevenue)}. Average price per credit is ${formatCurrency(avgPrice)}. ESG rating is ${esgMetrics.overallRating}. Environmental score is ${esgMetrics.environmental.score}%, social score is ${esgMetrics.social.score}%, and governance score is ${esgMetrics.governance.score}%.`;\r\n\r\n    if ('speechSynthesis' in window) {\r\n      const utterance = new SpeechSynthesisUtterance(summaryText);\r\n      speechSynthesis.speak(utterance);\r\n    }\r\n  };\r\n\r\n  const exportCarbonReport = () => {\r\n    const reportData = {\r\n      timestamp: new Date().toISOString(),\r\n      carbonCredits,\r\n      esgMetrics,\r\n      marketTrends,\r\n      complianceFrameworks,\r\n      summary: {\r\n        totalCredits: carbonCredits.reduce((sum, cc) => sum + cc.creditsGenerated, 0),\r\n        totalRevenue: carbonCredits.reduce((sum, cc) => sum + cc.revenue, 0),\r\n        co2Reduced: carbonCredits.reduce((sum, cc) => sum + cc.co2Reduced, 0),\r\n        overallESGRating: esgMetrics.overallRating\r\n      }\r\n    };\r\n\r\n    const blob = new Blob([JSON.stringify(reportData, null, 2)], { type: 'application/json' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = `carbon-analytics-report-${new Date().toISOString().split('T')[0]}.json`;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h2 className=\"text-2xl font-bold text-gray-900\">Carbon Analytics & ESG Reporting</h2>\r\n          <p className=\"text-gray-600\">Comprehensive carbon credit tracking, environmental impact analysis, and ESG compliance</p>\r\n        </div>\r\n        <div className=\"flex items-center gap-3\">\r\n          <Button\r\n            onClick={speakCarbonSummary}\r\n            variant=\"outline\"\r\n            size=\"sm\"\r\n            className=\"hidden sm:flex\"\r\n          >\r\n            <Volume2 className=\"h-4 w-4 mr-2\" />\r\n            Listen\r\n          </Button>\r\n          <Button\r\n            onClick={exportCarbonReport}\r\n            variant=\"outline\"\r\n            size=\"sm\"\r\n          >\r\n            <Download className=\"h-4 w-4 mr-2\" />\r\n            Export\r\n          </Button>\r\n          <Button\r\n            onClick={refreshData}\r\n            variant=\"outline\"\r\n            size=\"sm\"\r\n            disabled={refreshing}\r\n          >\r\n            <RefreshCw className={`h-4 w-4 ${refreshing ? 'animate-spin' : ''} mr-2`} />\r\n            Refresh\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Carbon Overview Cards */}\r\n      <div className=\"grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-4\">\r\n        <Card className=\"hover:shadow-lg transition-shadow\">\r\n          <CardContent className=\"p-6\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm text-gray-600\">Total Credits Generated</p>\r\n                <p className=\"text-2xl font-bold text-green-600\">\r\n                  {carbonCredits.reduce((sum, cc) => sum + cc.creditsGenerated, 0)}\r\n                </p>\r\n                <p className=\"text-xs text-gray-500 mt-1\">\r\n                  {carbonCredits.reduce((sum, cc) => sum + cc.co2Reduced, 0)} tons CO₂\r\n                </p>\r\n              </div>\r\n              <div className=\"p-3 bg-green-100 rounded-lg\">\r\n                <Leaf className=\"h-6 w-6 text-green-600\" />\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card className=\"hover:shadow-lg transition-shadow\">\r\n          <CardContent className=\"p-6\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm text-gray-600\">Carbon Revenue</p>\r\n                <p className=\"text-2xl font-bold text-blue-600\">\r\n                  {formatCurrency(carbonCredits.reduce((sum, cc) => sum + cc.revenue, 0))}\r\n                </p>\r\n                <p className=\"text-xs text-gray-500 mt-1\">\r\n                  +22% from last quarter\r\n                </p>\r\n              </div>\r\n              <div className=\"p-3 bg-blue-100 rounded-lg\">\r\n                <DollarSign className=\"h-6 w-6 text-blue-600\" />\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card className=\"hover:shadow-lg transition-shadow\">\r\n          <CardContent className=\"p-6\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm text-gray-600\">ESG Rating</p>\r\n                <p className={`text-2xl font-bold border-2 px-3 py-1 rounded-lg inline-block ${getESGRatingColor(esgMetrics.overallRating)}`}>\r\n                  {esgMetrics.overallRating}\r\n                </p>\r\n                <p className=\"text-xs text-gray-500 mt-1\">\r\n                  Top 10% in industry\r\n                </p>\r\n              </div>\r\n              <div className=\"p-3 bg-purple-100 rounded-lg\">\r\n                <Award className=\"h-6 w-6 text-purple-600\" />\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card className=\"hover:shadow-lg transition-shadow\">\r\n          <CardContent className=\"p-6\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm text-gray-600\">Market Price Avg</p>\r\n                <p className=\"text-2xl font-bold text-orange-600\">\r\n                  {formatCurrency(marketTrends[marketTrends.length - 1]?.vcsPrice || 0)}\r\n                </p>\r\n                <p className=\"text-xs text-gray-500 mt-1 flex items-center\">\r\n                  <ArrowUpRight className=\"h-3 w-3 text-green-600 mr-1\" />\r\n                  +18% this month\r\n                </p>\r\n              </div>\r\n              <div className=\"p-3 bg-orange-100 rounded-lg\">\r\n                <TrendingUp className=\"h-6 w-6 text-orange-600\" />\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      <Tabs value={activeTab} onValueChange={setActiveTab} className=\"space-y-6\">\r\n        <TabsList className=\"grid w-full grid-cols-5\">\r\n          <TabsTrigger value=\"credits\">Carbon Credits</TabsTrigger>\r\n          <TabsTrigger value=\"esg\">ESG Metrics</TabsTrigger>\r\n          <TabsTrigger value=\"compliance\">Compliance</TabsTrigger>\r\n          <TabsTrigger value=\"market\">Market Analysis</TabsTrigger>\r\n          <TabsTrigger value=\"projections\">Projections</TabsTrigger>\r\n        </TabsList>\r\n\r\n        {/* Carbon Credits Tab */}\r\n        <TabsContent value=\"credits\" className=\"space-y-6\">\r\n          <div className=\"grid grid-cols-1 gap-6\">\r\n            {/* Credit Portfolio Overview */}\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center gap-2\">\r\n                  <Leaf className=\"h-5 w-5\" />\r\n                  Carbon Credit Portfolio Management\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"space-y-6\">\r\n                  {carbonCredits.map((credit) => (\r\n                    <Card key={credit.id} className=\"hover:shadow-lg transition-shadow\">\r\n                      <CardHeader>\r\n                        <div className=\"flex items-start justify-between\">\r\n                          <div>\r\n                            <CardTitle className=\"text-lg\">{credit.projectName}</CardTitle>\r\n                            <div className=\"flex items-center gap-2 mt-2\">\r\n                              <Badge\r\n                                variant=\"outline\"\r\n                                className=\"flex items-center gap-1\"\r\n                              >\r\n                                {getCreditTypeIcon(credit.creditType)}\r\n                                {credit.creditType}\r\n                              </Badge>\r\n                              <Badge\r\n                                variant=\"outline\"\r\n                                className={getStatusColor(credit.verificationStatus)}\r\n                              >\r\n                                {credit.verificationStatus}\r\n                              </Badge>\r\n                              <Badge variant=\"outline\">\r\n                                Vintage {credit.vintage}\r\n                              </Badge>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"text-right\">\r\n                            <div className=\"text-2xl font-bold text-green-600\">\r\n                              {credit.creditsGenerated}\r\n                            </div>\r\n                            <div className=\"text-sm text-gray-600\">Credits Generated</div>\r\n                          </div>\r\n                        </div>\r\n                      </CardHeader>\r\n                      <CardContent className=\"space-y-4\">\r\n                        <div className=\"grid grid-cols-2 lg:grid-cols-4 gap-4\">\r\n                          <div className=\"text-center p-3 bg-blue-50 rounded-lg\">\r\n                            <div className=\"text-lg font-bold text-blue-600\">{credit.creditsIssued}</div>\r\n                            <div className=\"text-xs text-blue-700\">Issued</div>\r\n                          </div>\r\n                          <div className=\"text-center p-3 bg-green-50 rounded-lg\">\r\n                            <div className=\"text-lg font-bold text-green-600\">{credit.creditsSold}</div>\r\n                            <div className=\"text-xs text-green-700\">Sold</div>\r\n                          </div>\r\n                          <div className=\"text-center p-3 bg-purple-50 rounded-lg\">\r\n                            <div className=\"text-lg font-bold text-purple-600\">{formatCurrency(credit.pricePerCredit)}</div>\r\n                            <div className=\"text-xs text-purple-700\">Price/Credit</div>\r\n                          </div>\r\n                          <div className=\"text-center p-3 bg-orange-50 rounded-lg\">\r\n                            <div className=\"text-lg font-bold text-orange-600\">{formatCurrency(credit.revenue)}</div>\r\n                            <div className=\"text-xs text-orange-700\">Revenue</div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-4 text-sm\">\r\n                          <div>\r\n                            <span className=\"text-gray-600\">CO₂ Reduction:</span>\r\n                            <div className=\"font-medium\">{credit.co2Reduced} tons</div>\r\n                          </div>\r\n                          <div>\r\n                            <span className=\"text-gray-600\">Additionality Score:</span>\r\n                            <div className=\"font-medium\">{credit.additionalityScore}%</div>\r\n                          </div>\r\n                          <div>\r\n                            <span className=\"text-gray-600\">Expires:</span>\r\n                            <div className=\"font-medium\">{new Date(credit.expiryDate).toLocaleDateString()}</div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        {credit.buyer && (\r\n                          <div className=\"text-sm\">\r\n                            <span className=\"text-gray-600\">Buyer:</span>\r\n                            <span className=\"font-medium ml-2\">{credit.buyer}</span>\r\n                          </div>\r\n                        )}\r\n\r\n                        <div className=\"flex items-center justify-between pt-3 border-t border-gray-200\">\r\n                          <div className=\"text-sm\">\r\n                            <span className=\"text-gray-600\">Utilization:</span>\r\n                            <span className=\"font-medium ml-2\">\r\n                              {Math.round((credit.creditsSold / credit.creditsGenerated) * 100)}%\r\n                            </span>\r\n                          </div>\r\n                          <Button size=\"sm\" variant=\"outline\">\r\n                            View Details\r\n                          </Button>\r\n                        </div>\r\n                      </CardContent>\r\n                    </Card>\r\n                  ))}\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            {/* Credit Type Analysis */}\r\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n              <Card>\r\n                <CardHeader>\r\n                  <CardTitle className=\"flex items-center gap-2\">\r\n                    <PieChart className=\"h-5 w-5\" />\r\n                    Credit Type Distribution\r\n                  </CardTitle>\r\n                </CardHeader>\r\n                <CardContent>\r\n                  <div className=\"space-y-4\">\r\n                    {Array.from(new Set(carbonCredits.map(cc => cc.creditType))).map(type => {\r\n                      const typeCredits = carbonCredits.filter(cc => cc.creditType === type);\r\n                      const totalCredits = typeCredits.reduce((sum, cc) => sum + cc.creditsGenerated, 0);\r\n                      const totalRevenue = typeCredits.reduce((sum, cc) => sum + cc.revenue, 0);\r\n                      const percentage = (totalCredits / carbonCredits.reduce((sum, cc) => sum + cc.creditsGenerated, 0)) * 100;\r\n\r\n                      return (\r\n                        <div key={type} className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\r\n                          <div className=\"flex items-center gap-3\">\r\n                            <div className=\"p-2 bg-blue-100 rounded\">\r\n                              {getCreditTypeIcon(type)}\r\n                            </div>\r\n                            <div>\r\n                              <div className=\"font-medium\">{type}</div>\r\n                              <div className=\"text-sm text-gray-600\">{typeCredits.length} projects</div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"text-right\">\r\n                            <div className=\"font-medium\">{totalCredits} credits</div>\r\n                            <div className=\"text-sm text-gray-600\">{formatCurrency(totalRevenue)}</div>\r\n                            <div className=\"text-xs text-blue-600\">{percentage.toFixed(1)}%</div>\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n\r\n              <Card>\r\n                <CardHeader>\r\n                  <CardTitle className=\"flex items-center gap-2\">\r\n                    <Activity className=\"h-5 w-5\" />\r\n                    Performance Metrics\r\n                  </CardTitle>\r\n                </CardHeader>\r\n                <CardContent>\r\n                  <div className=\"space-y-4\">\r\n                    <div className=\"space-y-2\">\r\n                      <div className=\"flex justify-between text-sm\">\r\n                        <span>Average Additionality Score</span>\r\n                        <span>{(carbonCredits.reduce((sum, cc) => sum + cc.additionalityScore, 0) / carbonCredits.length).toFixed(1)}%</span>\r\n                      </div>\r\n                      <Progress value={carbonCredits.reduce((sum, cc) => sum + cc.additionalityScore, 0) / carbonCredits.length} className=\"h-2\" />\r\n                    </div>\r\n\r\n                    <div className=\"space-y-2\">\r\n                      <div className=\"flex justify-between text-sm\">\r\n                        <span>Credit Issuance Rate</span>\r\n                        <span>{Math.round((carbonCredits.reduce((sum, cc) => sum + cc.creditsIssued, 0) / carbonCredits.reduce((sum, cc) => sum + cc.creditsGenerated, 0)) * 100)}%</span>\r\n                      </div>\r\n                      <Progress value={(carbonCredits.reduce((sum, cc) => sum + cc.creditsIssued, 0) / carbonCredits.reduce((sum, cc) => sum + cc.creditsGenerated, 0)) * 100} className=\"h-2\" />\r\n                    </div>\r\n\r\n                    <div className=\"space-y-2\">\r\n                      <div className=\"flex justify-between text-sm\">\r\n                        <span>Sales Conversion Rate</span>\r\n                        <span>{Math.round((carbonCredits.reduce((sum, cc) => sum + cc.creditsSold, 0) / carbonCredits.reduce((sum, cc) => sum + cc.creditsIssued, 0)) * 100)}%</span>\r\n                      </div>\r\n                      <Progress value={(carbonCredits.reduce((sum, cc) => sum + cc.creditsSold, 0) / carbonCredits.reduce((sum, cc) => sum + cc.creditsIssued, 0)) * 100} className=\"h-2\" />\r\n                    </div>\r\n\r\n                    <div className=\"pt-3 border-t border-gray-200\">\r\n                      <div className=\"grid grid-cols-2 gap-4 text-center\">\r\n                        <div className=\"p-3 bg-green-50 rounded\">\r\n                          <div className=\"text-lg font-bold text-green-600\">\r\n                            {formatCurrency(carbonCredits.reduce((sum, cc) => sum + cc.revenue, 0) / carbonCredits.reduce((sum, cc) => sum + cc.creditsSold, 0))}\r\n                          </div>\r\n                          <div className=\"text-xs text-green-700\">Avg Price/Credit</div>\r\n                        </div>\r\n                        <div className=\"p-3 bg-blue-50 rounded\">\r\n                          <div className=\"text-lg font-bold text-blue-600\">\r\n                            {carbonCredits.reduce((sum, cc) => sum + cc.co2Reduced, 0)}\r\n                          </div>\r\n                          <div className=\"text-xs text-blue-700\">Total CO₂ Reduced</div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n            </div>\r\n          </div>\r\n        </TabsContent>\r\n\r\n        {/* ESG Metrics Tab */}\r\n        <TabsContent value=\"esg\" className=\"space-y-6\">\r\n          <div className=\"grid grid-cols-1 gap-6\">\r\n            {/* ESG Overview */}\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center gap-2\">\r\n                  <Award className=\"h-5 w-5\" />\r\n                  ESG Performance Dashboard\r\n                </CardTitle>\r\n                <div className=\"flex items-center gap-4 mt-4\">\r\n                  <div className={`text-3xl font-bold border-2 px-4 py-2 rounded-lg ${getESGRatingColor(esgMetrics.overallRating)}`}>\r\n                    {esgMetrics.overallRating}\r\n                  </div>\r\n                  <div>\r\n                    <div className=\"text-sm text-gray-600\">Overall ESG Rating</div>\r\n                    <div className=\"text-sm text-gray-500\">Industry ranking: Top 10%</div>\r\n                  </div>\r\n                </div>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\r\n                  {/* Environmental */}\r\n                  <Card>\r\n                    <CardHeader>\r\n                      <CardTitle className=\"flex items-center gap-2 text-green-700\">\r\n                        <Leaf className=\"h-5 w-5\" />\r\n                        Environmental\r\n                      </CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent className=\"space-y-4\">\r\n                      <div className=\"text-center\">\r\n                        <div className=\"text-3xl font-bold text-green-600\">{esgMetrics.environmental.score}</div>\r\n                        <div className=\"text-sm text-gray-600\">Score</div>\r\n                      </div>\r\n\r\n                      <div className=\"space-y-3\">\r\n                        <div className=\"flex justify-between items-center\">\r\n                          <span className=\"text-sm text-gray-600\">Carbon Reduction</span>\r\n                          <span className=\"font-medium\">{esgMetrics.environmental.carbonReduction} tons</span>\r\n                        </div>\r\n                        <div className=\"flex justify-between items-center\">\r\n                          <span className=\"text-sm text-gray-600\">Renewable Energy</span>\r\n                          <span className=\"font-medium\">{esgMetrics.environmental.renewableEnergyGenerated.toLocaleString()} kWh</span>\r\n                        </div>\r\n                        <div className=\"flex justify-between items-center\">\r\n                          <span className=\"text-sm text-gray-600\">Waste Reduction</span>\r\n                          <span className=\"font-medium\">{esgMetrics.environmental.wasteReduction.toLocaleString()} kg</span>\r\n                        </div>\r\n                        <div className=\"flex justify-between items-center\">\r\n                          <span className=\"text-sm text-gray-600\">Water Conservation</span>\r\n                          <span className=\"font-medium\">{esgMetrics.environmental.waterConservation.toLocaleString()} L</span>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div>\r\n                        <div className=\"text-sm text-gray-600 mb-2\">Certifications</div>\r\n                        <div className=\"flex flex-wrap gap-1\">\r\n                          {esgMetrics.environmental.certifications.map((cert, index) => (\r\n                            <Badge key={index} variant=\"outline\" className=\"text-xs\">\r\n                              {cert}\r\n                            </Badge>\r\n                          ))}\r\n                        </div>\r\n                      </div>\r\n                    </CardContent>\r\n                  </Card>\r\n\r\n                  {/* Social */}\r\n                  <Card>\r\n                    <CardHeader>\r\n                      <CardTitle className=\"flex items-center gap-2 text-blue-700\">\r\n                        <Users className=\"h-5 w-5\" />\r\n                        Social\r\n                      </CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent className=\"space-y-4\">\r\n                      <div className=\"text-center\">\r\n                        <div className=\"text-3xl font-bold text-blue-600\">{esgMetrics.social.score}</div>\r\n                        <div className=\"text-sm text-gray-600\">Score</div>\r\n                      </div>\r\n\r\n                      <div className=\"space-y-3\">\r\n                        <div className=\"flex justify-between items-center\">\r\n                          <span className=\"text-sm text-gray-600\">Jobs Created</span>\r\n                          <span className=\"font-medium\">{esgMetrics.social.jobsCreated.toLocaleString()}</span>\r\n                        </div>\r\n                        <div className=\"flex justify-between items-center\">\r\n                          <span className=\"text-sm text-gray-600\">Families Benefited</span>\r\n                          <span className=\"font-medium\">{esgMetrics.social.ruralFamiliesBenefited.toLocaleString()}</span>\r\n                        </div>\r\n                        <div className=\"flex justify-between items-center\">\r\n                          <span className=\"text-sm text-gray-600\">Health Improvements</span>\r\n                          <span className=\"font-medium\">{esgMetrics.social.healthImprovements}%</span>\r\n                        </div>\r\n                        <div className=\"flex justify-between items-center\">\r\n                          <span className=\"text-sm text-gray-600\">Education Programs</span>\r\n                          <span className=\"font-medium\">{esgMetrics.social.educationPrograms}</span>\r\n                        </div>\r\n                        <div className=\"flex justify-between items-center\">\r\n                          <span className=\"text-sm text-gray-600\">Gender Equity</span>\r\n                          <span className=\"font-medium\">{esgMetrics.social.genderEquity}%</span>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"space-y-2\">\r\n                        <div className=\"flex justify-between text-sm\">\r\n                          <span>Community Impact</span>\r\n                          <span>{esgMetrics.social.communityImpact}%</span>\r\n                        </div>\r\n                        <Progress value={esgMetrics.social.communityImpact} className=\"h-2\" />\r\n                      </div>\r\n                    </CardContent>\r\n                  </Card>\r\n\r\n                  {/* Governance */}\r\n                  <Card>\r\n                    <CardHeader>\r\n                      <CardTitle className=\"flex items-center gap-2 text-purple-700\">\r\n                        <Building className=\"h-5 w-5\" />\r\n                        Governance\r\n                      </CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent className=\"space-y-4\">\r\n                      <div className=\"text-center\">\r\n                        <div className=\"text-3xl font-bold text-purple-600\">{esgMetrics.governance.score}</div>\r\n                        <div className=\"text-sm text-gray-600\">Score</div>\r\n                      </div>\r\n\r\n                      <div className=\"space-y-3\">\r\n                        <div className=\"space-y-2\">\r\n                          <div className=\"flex justify-between text-sm\">\r\n                            <span>Board Diversity</span>\r\n                            <span>{esgMetrics.governance.boardDiversity}%</span>\r\n                          </div>\r\n                          <Progress value={esgMetrics.governance.boardDiversity} className=\"h-1\" />\r\n                        </div>\r\n\r\n                        <div className=\"space-y-2\">\r\n                          <div className=\"flex justify-between text-sm\">\r\n                            <span>Transparency Index</span>\r\n                            <span>{esgMetrics.governance.transparencyIndex}%</span>\r\n                          </div>\r\n                          <Progress value={esgMetrics.governance.transparencyIndex} className=\"h-1\" />\r\n                        </div>\r\n\r\n                        <div className=\"space-y-2\">\r\n                          <div className=\"flex justify-between text-sm\">\r\n                            <span>Ethics Score</span>\r\n                            <span>{esgMetrics.governance.ethicsScore}%</span>\r\n                          </div>\r\n                          <Progress value={esgMetrics.governance.ethicsScore} className=\"h-1\" />\r\n                        </div>\r\n\r\n                        <div className=\"space-y-2\">\r\n                          <div className=\"flex justify-between text-sm\">\r\n                            <span>Compliance Rating</span>\r\n                            <span>{esgMetrics.governance.complianceRating}%</span>\r\n                          </div>\r\n                          <Progress value={esgMetrics.governance.complianceRating} className=\"h-1\" />\r\n                        </div>\r\n\r\n                        <div className=\"space-y-2\">\r\n                          <div className=\"flex justify-between text-sm\">\r\n                            <span>Data Quality</span>\r\n                            <span>{esgMetrics.governance.dataQuality}%</span>\r\n                          </div>\r\n                          <Progress value={esgMetrics.governance.dataQuality} className=\"h-1\" />\r\n                        </div>\r\n                      </div>\r\n                    </CardContent>\r\n                  </Card>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            {/* ESG Initiatives & Progress */}\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center gap-2\">\r\n                  <Target className=\"h-5 w-5\" />\r\n                  ESG Initiatives & Targets\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"space-y-6\">\r\n                  {[\r\n                    {\r\n                      category: 'Environmental',\r\n                      initiatives: [\r\n                        { name: 'Carbon Neutrality by 2030', progress: 68, target: '100% by 2030', status: 'on-track' },\r\n                        { name: 'Renewable Energy Adoption', progress: 85, target: '100% by 2026', status: 'ahead' },\r\n                        { name: 'Waste Reduction Program', progress: 72, target: '50% reduction by 2025', status: 'on-track' },\r\n                        { name: 'Water Conservation Initiative', progress: 58, target: '30% reduction by 2025', status: 'behind' }\r\n                      ]\r\n                    },\r\n                    {\r\n                      category: 'Social',\r\n                      initiatives: [\r\n                        { name: 'Rural Employment Generation', progress: 78, target: '2,000 jobs by 2025', status: 'on-track' },\r\n                        { name: 'Women Empowerment Program', progress: 65, target: '40% female workforce', status: 'on-track' },\r\n                        { name: 'Community Health Initiatives', progress: 82, target: '50 health centers', status: 'ahead' },\r\n                        { name: 'Educational Scholarships', progress: 45, target: '1,000 scholarships', status: 'behind' }\r\n                      ]\r\n                    },\r\n                    {\r\n                      category: 'Governance',\r\n                      initiatives: [\r\n                        { name: 'Board Independence', progress: 75, target: '80% independence', status: 'on-track' },\r\n                        { name: 'Transparency Reporting', progress: 90, target: 'Quarterly reports', status: 'ahead' },\r\n                        { name: 'Ethics Training Program', progress: 88, target: '100% completion', status: 'on-track' },\r\n                        { name: 'Stakeholder Engagement', progress: 70, target: 'Monthly sessions', status: 'on-track' }\r\n                      ]\r\n                    }\r\n                  ].map((category) => (\r\n                    <div key={category.category}>\r\n                      <h4 className=\"font-medium text-gray-900 mb-3\">{category.category} Initiatives</h4>\r\n                      <div className=\"space-y-3\">\r\n                        {category.initiatives.map((initiative, index) => (\r\n                          <div key={index} className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\r\n                            <div className=\"flex-1\">\r\n                              <div className=\"flex items-center gap-2\">\r\n                                <span className=\"font-medium text-sm\">{initiative.name}</span>\r\n                                <Badge\r\n                                  variant=\"outline\"\r\n                                  className={\r\n                                    initiative.status === 'ahead' ? 'bg-green-100 text-green-800' :\r\n                                    initiative.status === 'on-track' ? 'bg-blue-100 text-blue-800' :\r\n                                    'bg-yellow-100 text-yellow-800'\r\n                                  }\r\n                                >\r\n                                  {initiative.status}\r\n                                </Badge>\r\n                              </div>\r\n                              <div className=\"text-xs text-gray-600 mt-1\">{initiative.target}</div>\r\n                            </div>\r\n                            <div className=\"flex items-center gap-3\">\r\n                              <div className=\"w-24\">\r\n                                <Progress value={initiative.progress} className=\"h-2\" />\r\n                              </div>\r\n                              <span className=\"text-sm font-medium w-12 text-right\">{initiative.progress}%</span>\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </TabsContent>\r\n\r\n        {/* Compliance Tab */}\r\n        <TabsContent value=\"compliance\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                <Shield className=\"h-5 w-5\" />\r\n                Regulatory Compliance & Risk Assessment\r\n              </CardTitle>\r\n              <p className=\"text-gray-600\">Comprehensive compliance tracking across all relevant frameworks</p>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-6\">\r\n                {/* Compliance Overview */}\r\n                <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-4\">\r\n                  {['compliant', 'partial', 'pending', 'non-compliant'].map(status => {\r\n                    const frameworks = complianceFrameworks.filter(f => f.status === status);\r\n                    return (\r\n                      <div key={status} className={`text-center p-4 rounded-lg ${\r\n                        status === 'compliant' ? 'bg-green-100' :\r\n                        status === 'partial' ? 'bg-yellow-100' :\r\n                        status === 'pending' ? 'bg-blue-100' :\r\n                        'bg-red-100'\r\n                      }`}>\r\n                        <div className={`text-2xl font-bold ${\r\n                          status === 'compliant' ? 'text-green-600' :\r\n                          status === 'partial' ? 'text-yellow-600' :\r\n                          status === 'pending' ? 'text-blue-600' :\r\n                          'text-red-600'\r\n                        }`}>\r\n                          {frameworks.length}\r\n                        </div>\r\n                        <div className={`text-sm ${\r\n                          status === 'compliant' ? 'text-green-700' :\r\n                          status === 'partial' ? 'text-yellow-700' :\r\n                          status === 'pending' ? 'text-blue-700' :\r\n                          'text-red-700'\r\n                        }`}>\r\n                          {status.charAt(0).toUpperCase() + status.slice(1)}\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n\r\n                {/* Detailed Compliance Cards */}\r\n                <div className=\"space-y-4\">\r\n                  {complianceFrameworks.map((framework) => (\r\n                    <Card key={framework.id} className=\"hover:shadow-lg transition-shadow\">\r\n                      <CardHeader>\r\n                        <div className=\"flex items-start justify-between\">\r\n                          <div className=\"flex-1\">\r\n                            <CardTitle className=\"text-lg\">{framework.framework}</CardTitle>\r\n                            <div className=\"flex items-center gap-2 mt-2\">\r\n                              <Badge\r\n                                variant=\"outline\"\r\n                                className={getStatusColor(framework.status)}\r\n                              >\r\n                                {framework.status}\r\n                              </Badge>\r\n                              <Badge\r\n                                variant=\"outline\"\r\n                                className={getStatusColor(framework.riskLevel)}\r\n                              >\r\n                                {framework.riskLevel} risk\r\n                              </Badge>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"text-right\">\r\n                            <div className=\"text-2xl font-bold text-blue-600\">{framework.score}</div>\r\n                            <div className=\"text-sm text-gray-600\">Compliance Score</div>\r\n                          </div>\r\n                        </div>\r\n                      </CardHeader>\r\n                      <CardContent className=\"space-y-4\">\r\n                        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4 text-sm\">\r\n                          <div>\r\n                            <span className=\"text-gray-600\">Last Assessment:</span>\r\n                            <div className=\"font-medium\">{new Date(framework.lastAssessment).toLocaleDateString()}</div>\r\n                          </div>\r\n                          <div>\r\n                            <span className=\"text-gray-600\">Next Due:</span>\r\n                            <div className=\"font-medium\">{new Date(framework.nextDue).toLocaleDateString()}</div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div>\r\n                          <div className=\"text-sm font-medium text-gray-900 mb-3\">Requirements Status</div>\r\n                          <div className=\"space-y-2\">\r\n                            {framework.requirements.map((req, index) => (\r\n                              <div key={index} className=\"flex items-center justify-between p-2 bg-gray-50 rounded\">\r\n                                <div className=\"flex-1\">\r\n                                  <div className=\"text-sm font-medium\">{req.requirement}</div>\r\n                                  <div className=\"text-xs text-gray-600\">{req.evidence}</div>\r\n                                </div>\r\n                                <Badge\r\n                                  variant=\"outline\"\r\n                                  className={getStatusColor(req.status)}\r\n                                >\r\n                                  {req.status}\r\n                                </Badge>\r\n                              </div>\r\n                            ))}\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"flex items-center justify-between pt-3 border-t border-gray-200\">\r\n                          <div className=\"text-sm\">\r\n                            <span className=\"text-gray-600\">Overall Progress:</span>\r\n                            <span className=\"font-medium ml-2\">\r\n                              {Math.round((framework.requirements.filter(r => r.status === 'met').length / framework.requirements.length) * 100)}%\r\n                            </span>\r\n                          </div>\r\n                          <Button size=\"sm\" variant=\"outline\">\r\n                            View Report\r\n                          </Button>\r\n                        </div>\r\n                      </CardContent>\r\n                    </Card>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        {/* Market Analysis Tab */}\r\n        <TabsContent value=\"market\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                <BarChart3 className=\"h-5 w-5\" />\r\n                Carbon Market Trends & Analysis\r\n              </CardTitle>\r\n              <p className=\"text-gray-600\">Real-time market data and trend analysis for carbon credit pricing</p>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-6\">\r\n                {/* Market Overview */}\r\n                <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-4\">\r\n                  <div className=\"text-center p-4 bg-blue-50 rounded-lg\">\r\n                    <div className=\"text-2xl font-bold text-blue-600\">\r\n                      {formatCurrency(marketTrends[marketTrends.length - 1]?.vcsPrice || 0)}\r\n                    </div>\r\n                    <div className=\"text-sm text-blue-700\">VCS Price</div>\r\n                    <div className=\"text-xs text-gray-600 mt-1\">\r\n                      +{((marketTrends[marketTrends.length - 1]?.vcsPrice - marketTrends[0]?.vcsPrice) / marketTrends[0]?.vcsPrice * 100).toFixed(1)}% YTD\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"text-center p-4 bg-green-50 rounded-lg\">\r\n                    <div className=\"text-2xl font-bold text-green-600\">\r\n                      {formatCurrency(marketTrends[marketTrends.length - 1]?.goldStandardPrice || 0)}\r\n                    </div>\r\n                    <div className=\"text-sm text-green-700\">Gold Standard</div>\r\n                    <div className=\"text-xs text-gray-600 mt-1\">Premium Standard</div>\r\n                  </div>\r\n                  <div className=\"text-center p-4 bg-purple-50 rounded-lg\">\r\n                    <div className=\"text-2xl font-bold text-purple-600\">\r\n                      {((marketTrends[marketTrends.length - 1]?.volume || 0) / 1000000).toFixed(1)}M\r\n                    </div>\r\n                    <div className=\"text-sm text-purple-700\">Monthly Volume</div>\r\n                    <div className=\"text-xs text-gray-600 mt-1\">Credits Traded</div>\r\n                  </div>\r\n                  <div className=\"text-center p-4 bg-orange-50 rounded-lg\">\r\n                    <div className=\"text-2xl font-bold text-orange-600\">\r\n                      {((marketTrends[marketTrends.length - 1]?.volatility || 0) * 100).toFixed(1)}%\r\n                    </div>\r\n                    <div className=\"text-sm text-orange-700\">Volatility</div>\r\n                    <div className=\"text-xs text-gray-600 mt-1\">30-day average</div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Market Trend Analysis */}\r\n                <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n                  <Card>\r\n                    <CardHeader>\r\n                      <CardTitle>Price Trends by Credit Type</CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent>\r\n                      <div className=\"space-y-4\">\r\n                        {['VCS', 'Gold Standard', 'CDM'].map(type => {\r\n                          const currentPrice = type === 'VCS' ? marketTrends[marketTrends.length - 1]?.vcsPrice :\r\n                                             type === 'Gold Standard' ? marketTrends[marketTrends.length - 1]?.goldStandardPrice :\r\n                                             marketTrends[marketTrends.length - 1]?.cdmPrice;\r\n                          const pastPrice = type === 'VCS' ? marketTrends[0]?.vcsPrice :\r\n                                          type === 'Gold Standard' ? marketTrends[0]?.goldStandardPrice :\r\n                                          marketTrends[0]?.cdmPrice;\r\n                          const change = ((currentPrice - pastPrice) / pastPrice * 100);\r\n\r\n                          return (\r\n                            <div key={type} className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\r\n                              <div className=\"flex items-center gap-3\">\r\n                                <div className=\"p-2 bg-blue-100 rounded\">\r\n                                  {getCreditTypeIcon(type)}\r\n                                </div>\r\n                                <div>\r\n                                  <div className=\"font-medium\">{type}</div>\r\n                                  <div className=\"text-sm text-gray-600\">{formatCurrency(currentPrice)}</div>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"text-right\">\r\n                                <div className={`flex items-center gap-1 ${change >= 0 ? 'text-green-600' : 'text-red-600'}`}>\r\n                                  {change >= 0 ? <ArrowUpRight className=\"h-4 w-4\" /> : <ArrowDownRight className=\"h-4 w-4\" />}\r\n                                  <span className=\"font-medium\">{change >= 0 ? '+' : ''}{change.toFixed(1)}%</span>\r\n                                </div>\r\n                                <div className=\"text-xs text-gray-500\">6-month change</div>\r\n                              </div>\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    </CardContent>\r\n                  </Card>\r\n\r\n                  <Card>\r\n                    <CardHeader>\r\n                      <CardTitle>Market Opportunities</CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent>\r\n                      <div className=\"space-y-4\">\r\n                        {[\r\n                          {\r\n                            opportunity: 'International Markets',\r\n                            description: 'EU ETS pricing 35% higher than domestic',\r\n                            potential: '₹8.5Cr additional revenue',\r\n                            confidence: 78,\r\n                            timeframe: '6-9 months'\r\n                          },\r\n                          {\r\n                            opportunity: 'Article 6 Compliance',\r\n                            description: 'Paris Agreement implementation creating premium',\r\n                            potential: '₹12.2Cr market expansion',\r\n                            confidence: 65,\r\n                            timeframe: '12-18 months'\r\n                          },\r\n                          {\r\n                            opportunity: 'Corporate ESG Demand',\r\n                            description: 'Increased corporate carbon neutrality commitments',\r\n                            potential: '₹15.8Cr demand growth',\r\n                            confidence: 85,\r\n                            timeframe: '3-6 months'\r\n                          }\r\n                        ].map((opp, index) => (\r\n                          <div key={index} className=\"p-4 bg-green-50 rounded-lg border border-green-200\">\r\n                            <div className=\"flex items-start justify-between\">\r\n                              <div className=\"flex-1\">\r\n                                <div className=\"font-medium text-green-800\">{opp.opportunity}</div>\r\n                                <div className=\"text-sm text-green-700 mt-1\">{opp.description}</div>\r\n                                <div className=\"text-sm text-gray-600 mt-2\">\r\n                                  <span className=\"font-medium\">Timeframe:</span> {opp.timeframe}\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"text-right ml-4\">\r\n                                <div className=\"font-medium text-green-600\">{opp.potential}</div>\r\n                                <Badge variant=\"outline\" className=\"mt-1 bg-green-100 text-green-800\">\r\n                                  {opp.confidence}% confidence\r\n                                </Badge>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    </CardContent>\r\n                  </Card>\r\n                </div>\r\n\r\n                {/* Price Forecasting */}\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle className=\"flex items-center gap-2\">\r\n                      <Calculator className=\"h-5 w-5\" />\r\n                      Price Forecasting & Revenue Projections\r\n                    </CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\r\n                      {['Conservative', 'Baseline', 'Optimistic'].map((scenario, index) => {\r\n                        const multiplier = index === 0 ? 1.1 : index === 1 ? 1.25 : 1.45;\r\n                        const projectedPrice = marketTrends[marketTrends.length - 1]?.vcsPrice * multiplier;\r\n                        const projectedRevenue = carbonCredits.reduce((sum, cc) => sum + (cc.creditsGenerated * projectedPrice), 0);\r\n\r\n                        return (\r\n                          <div key={scenario} className={`p-4 rounded-lg ${\r\n                            scenario === 'Conservative' ? 'bg-yellow-50 border border-yellow-200' :\r\n                            scenario === 'Baseline' ? 'bg-blue-50 border border-blue-200' :\r\n                            'bg-green-50 border border-green-200'\r\n                          }`}>\r\n                            <div className=\"text-center\">\r\n                              <div className=\"font-medium text-gray-900\">{scenario} Scenario</div>\r\n                              <div className={`text-2xl font-bold mt-2 ${\r\n                                scenario === 'Conservative' ? 'text-yellow-600' :\r\n                                scenario === 'Baseline' ? 'text-blue-600' :\r\n                                'text-green-600'\r\n                              }`}>\r\n                                {formatCurrency(projectedPrice)}\r\n                              </div>\r\n                              <div className=\"text-sm text-gray-600\">Projected Price/Credit</div>\r\n                              <div className=\"text-lg font-medium text-gray-900 mt-3\">\r\n                                {formatCurrency(projectedRevenue)}\r\n                              </div>\r\n                              <div className=\"text-sm text-gray-600\">Total Revenue Potential</div>\r\n                              <div className=\"text-xs text-gray-500 mt-2\">\r\n                                {(((projectedRevenue - carbonCredits.reduce((sum, cc) => sum + cc.revenue, 0)) / carbonCredits.reduce((sum, cc) => sum + cc.revenue, 0)) * 100).toFixed(1)}% increase\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        {/* Projections Tab */}\r\n        <TabsContent value=\"projections\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                <TrendingUp className=\"h-5 w-5\" />\r\n                Carbon Revenue & Impact Projections\r\n              </CardTitle>\r\n              <p className=\"text-gray-600\">Long-term forecasting and strategic carbon planning</p>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-6\">\r\n                {/* Projection Controls */}\r\n                <div className=\"flex flex-wrap gap-4 p-4 bg-gray-50 rounded-lg\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <label className=\"text-sm font-medium text-gray-700\">Timeframe:</label>\r\n                    <Select value={selectedTimeframe} onValueChange={setSelectedTimeframe}>\r\n                      <SelectTrigger className=\"w-32\">\r\n                        <SelectValue />\r\n                      </SelectTrigger>\r\n                      <SelectContent>\r\n                        <SelectItem value=\"12m\">12 Months</SelectItem>\r\n                        <SelectItem value=\"24m\">24 Months</SelectItem>\r\n                        <SelectItem value=\"36m\">36 Months</SelectItem>\r\n                        <SelectItem value=\"60m\">60 Months</SelectItem>\r\n                      </SelectContent>\r\n                    </Select>\r\n                  </div>\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <label className=\"text-sm font-medium text-gray-700\">Growth Scenario:</label>\r\n                    <Select defaultValue=\"baseline\">\r\n                      <SelectTrigger className=\"w-40\">\r\n                        <SelectValue />\r\n                      </SelectTrigger>\r\n                      <SelectContent>\r\n                        <SelectItem value=\"conservative\">Conservative</SelectItem>\r\n                        <SelectItem value=\"baseline\">Baseline</SelectItem>\r\n                        <SelectItem value=\"aggressive\">Aggressive</SelectItem>\r\n                      </SelectContent>\r\n                    </Select>\r\n                  </div>\r\n                  <Button\r\n                    variant=\"outline\"\r\n                    size=\"sm\"\r\n                    onClick={() => setShowProjections(!showProjections)}\r\n                  >\r\n                    <Calculator className=\"h-4 w-4 mr-2\" />\r\n                    Advanced Modeling\r\n                  </Button>\r\n                </div>\r\n\r\n                {/* Revenue Projections */}\r\n                <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n                  <Card>\r\n                    <CardHeader>\r\n                      <CardTitle>Revenue Growth Projections</CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent>\r\n                      <div className=\"space-y-4\">\r\n                        {[\r\n                          { period: '2024 Q4', revenue: 78500000, growth: 15.2, confidence: 92 },\r\n                          { period: '2025 Q1', revenue: 95200000, growth: 21.3, confidence: 87 },\r\n                          { period: '2025 Q2', revenue: 118700000, growth: 24.7, confidence: 82 },\r\n                          { period: '2025 Q3', revenue: 145800000, growth: 22.8, confidence: 78 },\r\n                          { period: '2025 Q4', revenue: 175200000, growth: 25.1, confidence: 74 }\r\n                        ].map((projection, index) => (\r\n                          <div key={index} className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\r\n                            <div>\r\n                              <div className=\"font-medium\">{projection.period}</div>\r\n                              <div className=\"text-sm text-gray-600\">\r\n                                +{projection.growth}% growth\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"text-right\">\r\n                              <div className=\"font-medium text-green-600\">\r\n                                {formatCurrency(projection.revenue)}\r\n                              </div>\r\n                              <Badge variant=\"outline\" className=\"mt-1 text-xs\">\r\n                                {projection.confidence}% confidence\r\n                              </Badge>\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    </CardContent>\r\n                  </Card>\r\n\r\n                  <Card>\r\n                    <CardHeader>\r\n                      <CardTitle>Impact Projections</CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent>\r\n                      <div className=\"space-y-4\">\r\n                        {[\r\n                          { metric: 'CO₂ Reduction', current: 2775, projected: 8500, unit: 'tons', growth: 206 },\r\n                          { metric: 'Credits Generated', current: 555, projected: 1850, unit: 'credits', growth: 233 },\r\n                          { metric: 'Projects Active', current: 4, projected: 15, unit: 'projects', growth: 275 },\r\n                          { metric: 'Communities Impacted', current: 125, projected: 450, unit: 'communities', growth: 260 },\r\n                          { metric: 'Jobs Created', current: 1250, projected: 4200, unit: 'jobs', growth: 236 }\r\n                        ].map((impact, index) => (\r\n                          <div key={index} className=\"space-y-2\">\r\n                            <div className=\"flex justify-between items-center\">\r\n                              <span className=\"text-sm font-medium\">{impact.metric}</span>\r\n                              <span className=\"text-sm text-gray-600\">\r\n                                {impact.current.toLocaleString()} → {impact.projected.toLocaleString()} {impact.unit}\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"flex items-center gap-2\">\r\n                              <Progress value={75} className=\"h-2 flex-1\" />\r\n                              <span className=\"text-sm font-medium text-green-600\">+{impact.growth}%</span>\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    </CardContent>\r\n                  </Card>\r\n                </div>\r\n\r\n                {/* Strategic Targets */}\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle className=\"flex items-center gap-2\">\r\n                      <Target className=\"h-5 w-5\" />\r\n                      2025-2027 Strategic Carbon Targets\r\n                    </CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\r\n                      {[\r\n                        {\r\n                          year: '2025',\r\n                          targets: [\r\n                            'Generate 1,500 carbon credits',\r\n                            'Achieve ₹85Cr carbon revenue',\r\n                            'Expand to 8 new regions',\r\n                            'Launch carbon trading platform'\r\n                          ],\r\n                          investment: 180000000,\r\n                          expectedRoi: 285\r\n                        },\r\n                        {\r\n                          year: '2026',\r\n                          targets: [\r\n                            'Generate 2,500 carbon credits',\r\n                            'Achieve ₹145Cr carbon revenue',\r\n                            'International market entry',\r\n                            'Carbon neutrality certification'\r\n                          ],\r\n                          investment: 320000000,\r\n                          expectedRoi: 340\r\n                        },\r\n                        {\r\n                          year: '2027',\r\n                          targets: [\r\n                            'Generate 4,000 carbon credits',\r\n                            'Achieve ₹250Cr carbon revenue',\r\n                            'Industry leadership position',\r\n                            'Complete ESG integration'\r\n                          ],\r\n                          investment: 500000000,\r\n                          expectedRoi: 420\r\n                        }\r\n                      ].map((target) => (\r\n                        <Card key={target.year} className=\"hover:shadow-lg transition-shadow\">\r\n                          <CardHeader>\r\n                            <CardTitle className=\"text-lg\">{target.year} Targets</CardTitle>\r\n                            <Badge variant=\"outline\" className=\"w-fit bg-blue-100 text-blue-800\">\r\n                              {target.expectedRoi}% ROI\r\n                            </Badge>\r\n                          </CardHeader>\r\n                          <CardContent className=\"space-y-4\">\r\n                            <div>\r\n                              <div className=\"text-sm text-gray-600 mb-2\">Strategic Goals</div>\r\n                              <ul className=\"space-y-1\">\r\n                                {target.targets.map((goal, index) => (\r\n                                  <li key={index} className=\"text-sm flex items-start gap-2\">\r\n                                    <CheckCircle className=\"h-3 w-3 text-green-600 mt-0.5 flex-shrink-0\" />\r\n                                    {goal}\r\n                                  </li>\r\n                                ))}\r\n                              </ul>\r\n                            </div>\r\n                            <div className=\"pt-3 border-t border-gray-200\">\r\n                              <div className=\"text-sm text-gray-600\">Required Investment</div>\r\n                              <div className=\"text-lg font-bold text-blue-600\">\r\n                                {formatCurrency(target.investment)}\r\n                              </div>\r\n                            </div>\r\n                          </CardContent>\r\n                        </Card>\r\n                      ))}\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CarbonAnalytics;","import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Progress } from '@/components/ui/progress';\r\nimport { Alert, AlertDescription } from '@/components/ui/alert';\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\r\nimport {\r\n  TrendingUp,\r\n  TrendingDown,\r\n  Users,\r\n  Building,\r\n  Award,\r\n  Target,\r\n  AlertTriangle,\r\n  CheckCircle,\r\n  BarChart3,\r\n  PieChart,\r\n  Activity,\r\n  Shield,\r\n  RefreshCw,\r\n  Volume2,\r\n  Download,\r\n  Search,\r\n  Eye,\r\n  Zap,\r\n  Crown,\r\n  ArrowUpRight,\r\n  ArrowDownRight,\r\n  Minus,\r\n  DollarSign,\r\n  Calendar,\r\n  Globe,\r\n  Lightbulb,\r\n  Minus as TrendingFlat,\r\n  Star,\r\n  Brain,\r\n  Network,\r\n  MapPin\r\n} from 'lucide-react';\r\nimport { useExecutiveAnalytics } from '../../contexts/ExecutiveAnalyticsContext';\r\n\r\ninterface Competitor {\r\n  id: string;\r\n  name: string;\r\n  tier: 'direct' | 'indirect' | 'emerging';\r\n  marketShare: number;\r\n  revenue: number;\r\n  growth: number;\r\n  employees: number;\r\n  regions: string[];\r\n  strengths: string[];\r\n  weaknesses: string[];\r\n  recentMoves: string[];\r\n  threatLevel: 'low' | 'medium' | 'high' | 'critical';\r\n  innovationScore: number;\r\n  customerSatisfaction: number;\r\n  financialHealth: number;\r\n  operationalEfficiency: number;\r\n  logo?: string;\r\n}\r\n\r\ninterface MarketSegment {\r\n  id: string;\r\n  name: string;\r\n  size: number;\r\n  growth: number;\r\n  ourShare: number;\r\n  leader: string;\r\n  leaderShare: number;\r\n  opportunity: 'low' | 'medium' | 'high';\r\n  barriers: string[];\r\n  trends: string[];\r\n}\r\n\r\ninterface SWOTAnalysis {\r\n  strengths: Array<{\r\n    factor: string;\r\n    impact: 'high' | 'medium' | 'low';\r\n    description: string;\r\n    score: number;\r\n  }>;\r\n  weaknesses: Array<{\r\n    factor: string;\r\n    impact: 'high' | 'medium' | 'low';\r\n    description: string;\r\n    score: number;\r\n    actionPlan?: string;\r\n  }>;\r\n  opportunities: Array<{\r\n    factor: string;\r\n    potential: 'high' | 'medium' | 'low';\r\n    description: string;\r\n    timeframe: string;\r\n    investmentRequired: number;\r\n    expectedReturn: number;\r\n  }>;\r\n  threats: Array<{\r\n    factor: string;\r\n    severity: 'high' | 'medium' | 'low';\r\n    description: string;\r\n    probability: number;\r\n    mitigation: string;\r\n    timeline: string;\r\n  }>;\r\n}\r\n\r\ninterface BenchmarkMetric {\r\n  metric: string;\r\n  ourValue: number;\r\n  industryAverage: number;\r\n  topPerformer: number;\r\n  unit: string;\r\n  trend: 'up' | 'down' | 'stable';\r\n  ranking: number;\r\n  totalCompetitors: number;\r\n}\r\n\r\ninterface CompetitiveAdvantage {\r\n  id: string;\r\n  advantage: string;\r\n  category: 'technology' | 'operational' | 'financial' | 'market' | 'human';\r\n  sustainability: 'sustainable' | 'temporary' | 'at-risk';\r\n  strength: number;\r\n  description: string;\r\n  evidence: string[];\r\n  threats: string[];\r\n  reinforcementPlan: string;\r\n}\r\n\r\nconst CompetitiveIntelligence: React.FC = () => {\r\n  const { competitiveData, refreshData, refreshing } = useExecutiveAnalytics();\r\n\r\n  const [selectedTimeframe, setSelectedTimeframe] = useState<string>('12m');\r\n  const [selectedSegment, setSelectedSegment] = useState<string>('all');\r\n  const [activeTab, setActiveTab] = useState<string>('overview');\r\n  const [showAdvancedAnalysis, setShowAdvancedAnalysis] = useState<boolean>(false);\r\n\r\n  // Mock data for competitive intelligence\r\n  const [competitors] = useState<Competitor[]>([\r\n    {\r\n      id: 'comp001',\r\n      name: 'EcoGas Solutions',\r\n      tier: 'direct',\r\n      marketShare: 25.3,\r\n      revenue: 180000000000,\r\n      growth: 18.5,\r\n      employees: 3200,\r\n      regions: ['Maharashtra', 'Gujarat', 'Rajasthan', 'Punjab'],\r\n      strengths: ['Government Relations', 'Scale Operations', 'Financial Resources'],\r\n      weaknesses: ['Innovation Speed', 'Rural Penetration', 'Technology Adoption'],\r\n      recentMoves: ['Acquired tech startup for ₹45Cr', 'Launched mobile app platform', 'Expanded to 3 new states'],\r\n      threatLevel: 'high',\r\n      innovationScore: 72,\r\n      customerSatisfaction: 78,\r\n      financialHealth: 91,\r\n      operationalEfficiency: 85\r\n    },\r\n    {\r\n      id: 'comp002',\r\n      name: 'GreenTech Biogas',\r\n      tier: 'direct',\r\n      marketShare: 22.1,\r\n      revenue: 158000000000,\r\n      growth: 22.3,\r\n      employees: 2800,\r\n      regions: ['Tamil Nadu', 'Karnataka', 'Andhra Pradesh', 'Kerala'],\r\n      strengths: ['Technology Innovation', 'Customer Service', 'Digital Platform'],\r\n      weaknesses: ['Market Coverage', 'Capital Efficiency', 'Brand Recognition'],\r\n      recentMoves: ['IPO announced for Q2 2025', 'Partnership with IIT Chennai', 'AI optimization rollout'],\r\n      threatLevel: 'critical',\r\n      innovationScore: 89,\r\n      customerSatisfaction: 85,\r\n      financialHealth: 82,\r\n      operationalEfficiency: 78\r\n    },\r\n    {\r\n      id: 'comp003',\r\n      name: 'Rural Energy Corp',\r\n      tier: 'direct',\r\n      marketShare: 15.7,\r\n      revenue: 112000000000,\r\n      growth: 12.8,\r\n      employees: 1950,\r\n      regions: ['Uttar Pradesh', 'Bihar', 'Madhya Pradesh', 'Odisha'],\r\n      strengths: ['Rural Network', 'Cost Efficiency', 'Local Partnerships'],\r\n      weaknesses: ['Technology Infrastructure', 'Financial Resources', 'Scalability'],\r\n      recentMoves: ['Secured ₹200Cr funding', 'Rural expansion program', 'Community partnership model'],\r\n      threatLevel: 'medium',\r\n      innovationScore: 65,\r\n      customerSatisfaction: 82,\r\n      financialHealth: 75,\r\n      operationalEfficiency: 88\r\n    },\r\n    {\r\n      id: 'comp004',\r\n      name: 'CleanEnergy Dynamics',\r\n      tier: 'indirect',\r\n      marketShare: 8.2,\r\n      revenue: 89000000000,\r\n      growth: 35.1,\r\n      employees: 1200,\r\n      regions: ['West Bengal', 'Assam', 'Jharkhand'],\r\n      strengths: ['Innovation', 'Agility', 'Technology Stack'],\r\n      weaknesses: ['Market Presence', 'Scale', 'Financial Stability'],\r\n      recentMoves: ['Series B funding ₹125Cr', 'AI research lab setup', 'International expansion plan'],\r\n      threatLevel: 'medium',\r\n      innovationScore: 95,\r\n      customerSatisfaction: 87,\r\n      financialHealth: 68,\r\n      operationalEfficiency: 72\r\n    }\r\n  ]);\r\n\r\n  const [marketSegments] = useState<MarketSegment[]>([\r\n    {\r\n      id: 'rural_communities',\r\n      name: 'Rural Communities',\r\n      size: 45000000000,\r\n      growth: 15.2,\r\n      ourShare: 22.1,\r\n      leader: 'EcoGas Solutions',\r\n      leaderShare: 28.5,\r\n      opportunity: 'high',\r\n      barriers: ['Infrastructure Development', 'Financing Solutions', 'Technology Adoption'],\r\n      trends: ['Government push for clean energy', 'Rural digitization', 'Cooperative model adoption']\r\n    },\r\n    {\r\n      id: 'industrial_waste',\r\n      name: 'Industrial Waste Management',\r\n      size: 28000000000,\r\n      growth: 18.7,\r\n      ourShare: 18.3,\r\n      leader: 'GreenTech Biogas',\r\n      leaderShare: 32.1,\r\n      opportunity: 'medium',\r\n      barriers: ['Regulatory Compliance', 'Technical Expertise', 'Capital Investment'],\r\n      trends: ['Circular economy adoption', 'ESG compliance requirements', 'Zero waste initiatives']\r\n    },\r\n    {\r\n      id: 'urban_waste',\r\n      name: 'Urban Waste Processing',\r\n      size: 35000000000,\r\n      growth: 12.4,\r\n      ourShare: 15.8,\r\n      leader: 'EcoGas Solutions',\r\n      leaderShare: 24.3,\r\n      opportunity: 'medium',\r\n      barriers: ['Urban Infrastructure', 'Municipal Partnerships', 'Scale Requirements'],\r\n      trends: ['Smart city initiatives', 'Waste segregation mandates', 'Public-private partnerships']\r\n    },\r\n    {\r\n      id: 'agricultural',\r\n      name: 'Agricultural Biogas',\r\n      size: 22000000000,\r\n      growth: 20.8,\r\n      ourShare: 25.6,\r\n      leader: 'SAUBHAGYA',\r\n      leaderShare: 25.6,\r\n      opportunity: 'high',\r\n      barriers: ['Farmer Education', 'Seasonal Variations', 'Supply Chain'],\r\n      trends: ['Sustainable farming practices', 'Carbon credit awareness', 'Cooperative farming growth']\r\n    }\r\n  ]);\r\n\r\n  const [swotAnalysis] = useState<SWOTAnalysis>({\r\n    strengths: [\r\n      {\r\n        factor: 'Technology Innovation',\r\n        impact: 'high',\r\n        description: 'Advanced IoT integration and AI-driven optimization giving 15-20% efficiency advantage',\r\n        score: 92\r\n      },\r\n      {\r\n        factor: 'Rural Market Penetration',\r\n        impact: 'high',\r\n        description: 'Deep rural network with established community relationships across 12 states',\r\n        score: 88\r\n      },\r\n      {\r\n        factor: 'Operational Efficiency',\r\n        impact: 'high',\r\n        description: 'Lean operations model with 23% lower cost structure than industry average',\r\n        score: 87\r\n      },\r\n      {\r\n        factor: 'Financial Health',\r\n        impact: 'medium',\r\n        description: 'Strong balance sheet with low debt-to-equity ratio and positive cash flow',\r\n        score: 85\r\n      },\r\n      {\r\n        factor: 'Brand Trust',\r\n        impact: 'medium',\r\n        description: 'High customer satisfaction (4.6/5) and strong word-of-mouth referrals',\r\n        score: 82\r\n      }\r\n    ],\r\n    weaknesses: [\r\n      {\r\n        factor: 'Scale Limitations',\r\n        impact: 'high',\r\n        description: 'Smaller scale compared to top 2 competitors limiting economies of scale',\r\n        score: 65,\r\n        actionPlan: 'Aggressive expansion plan with ₹500Cr investment over 18 months'\r\n      },\r\n      {\r\n        factor: 'Brand Recognition',\r\n        impact: 'medium',\r\n        description: 'Lower brand awareness in urban markets compared to established players',\r\n        score: 58,\r\n        actionPlan: 'Comprehensive brand building campaign focusing on ESG leadership'\r\n      },\r\n      {\r\n        factor: 'Capital Resources',\r\n        impact: 'medium',\r\n        description: 'Limited access to large-scale funding compared to listed competitors',\r\n        score: 62,\r\n        actionPlan: 'IPO preparation and strategic investor partnerships'\r\n      },\r\n      {\r\n        factor: 'Geographic Coverage',\r\n        impact: 'medium',\r\n        description: 'Presence in 12 states vs. competitors covering 15-20 states',\r\n        score: 68,\r\n        actionPlan: 'Phased expansion to 8 new states by 2025'\r\n      }\r\n    ],\r\n    opportunities: [\r\n      {\r\n        factor: 'Government Policy Support',\r\n        potential: 'high',\r\n        description: 'New renewable energy policies creating ₹200Cr+ market opportunities',\r\n        timeframe: '6-12 months',\r\n        investmentRequired: 150000000,\r\n        expectedReturn: 380000000\r\n      },\r\n      {\r\n        factor: 'Carbon Credit Market',\r\n        potential: 'high',\r\n        description: 'International carbon market expansion with 40% price premium opportunities',\r\n        timeframe: '12-18 months',\r\n        investmentRequired: 200000000,\r\n        expectedReturn: 650000000\r\n      },\r\n      {\r\n        factor: 'Technology Integration',\r\n        potential: 'medium',\r\n        description: 'AI and IoT adoption creating competitive differentiation',\r\n        timeframe: '3-9 months',\r\n        investmentRequired: 120000000,\r\n        expectedReturn: 280000000\r\n      },\r\n      {\r\n        factor: 'Corporate ESG Demand',\r\n        potential: 'high',\r\n        description: 'Increasing corporate sustainability commitments driving B2B opportunities',\r\n        timeframe: '6-15 months',\r\n        investmentRequired: 80000000,\r\n        expectedReturn: 320000000\r\n      }\r\n    ],\r\n    threats: [\r\n      {\r\n        factor: 'New Market Entrants',\r\n        severity: 'high',\r\n        description: 'Well-funded startups with disruptive technology entering market',\r\n        probability: 0.75,\r\n        mitigation: 'Accelerate innovation and build switching costs through platform integration',\r\n        timeline: '6-12 months'\r\n      },\r\n      {\r\n        factor: 'Regulatory Changes',\r\n        severity: 'medium',\r\n        description: 'Potential changes in renewable energy subsidies affecting profitability',\r\n        probability: 0.45,\r\n        mitigation: 'Diversify revenue streams and reduce subsidy dependence',\r\n        timeline: '12-24 months'\r\n      },\r\n      {\r\n        factor: 'Economic Downturn',\r\n        severity: 'medium',\r\n        description: 'Economic slowdown affecting investment in renewable energy projects',\r\n        probability: 0.35,\r\n        mitigation: 'Focus on essential services and government contracts',\r\n        timeline: '6-18 months'\r\n      },\r\n      {\r\n        factor: 'Technology Disruption',\r\n        severity: 'high',\r\n        description: 'Breakthrough in alternative technologies making biogas less competitive',\r\n        probability: 0.25,\r\n        mitigation: 'Invest in R&D and maintain technology leadership',\r\n        timeline: '24-36 months'\r\n      }\r\n    ]\r\n  });\r\n\r\n  const [benchmarkMetrics] = useState<BenchmarkMetric[]>([\r\n    {\r\n      metric: 'Revenue per Employee',\r\n      ourValue: 10500000,\r\n      industryAverage: 8200000,\r\n      topPerformer: 12800000,\r\n      unit: '₹',\r\n      trend: 'up',\r\n      ranking: 3,\r\n      totalCompetitors: 15\r\n    },\r\n    {\r\n      metric: 'Customer Acquisition Cost',\r\n      ourValue: 25000,\r\n      industryAverage: 32000,\r\n      topPerformer: 18000,\r\n      unit: '₹',\r\n      trend: 'down',\r\n      ranking: 4,\r\n      totalCompetitors: 15\r\n    },\r\n    {\r\n      metric: 'Customer Retention Rate',\r\n      ourValue: 92,\r\n      industryAverage: 85,\r\n      topPerformer: 95,\r\n      unit: '%',\r\n      trend: 'up',\r\n      ranking: 2,\r\n      totalCompetitors: 15\r\n    },\r\n    {\r\n      metric: 'Time to Market',\r\n      ourValue: 8.5,\r\n      industryAverage: 12.2,\r\n      topPerformer: 6.8,\r\n      unit: 'months',\r\n      trend: 'down',\r\n      ranking: 2,\r\n      totalCompetitors: 15\r\n    },\r\n    {\r\n      metric: 'Operational Efficiency',\r\n      ourValue: 87.3,\r\n      industryAverage: 78.5,\r\n      topPerformer: 91.2,\r\n      unit: '%',\r\n      trend: 'up',\r\n      ranking: 3,\r\n      totalCompetitors: 15\r\n    },\r\n    {\r\n      metric: 'Innovation Index',\r\n      ourValue: 82,\r\n      industryAverage: 68,\r\n      topPerformer: 95,\r\n      unit: 'score',\r\n      trend: 'up',\r\n      ranking: 4,\r\n      totalCompetitors: 15\r\n    }\r\n  ]);\r\n\r\n  const [competitiveAdvantages] = useState<CompetitiveAdvantage[]>([\r\n    {\r\n      id: 'tech_integration',\r\n      advantage: 'IoT-AI Platform Integration',\r\n      category: 'technology',\r\n      sustainability: 'sustainable',\r\n      strength: 92,\r\n      description: 'Proprietary IoT platform with AI optimization providing 15-20% efficiency gains',\r\n      evidence: ['15% higher biogas yield', '20% reduction in operational costs', '95% system uptime'],\r\n      threats: ['Competitor technology catch-up', 'New disruptive technologies'],\r\n      reinforcementPlan: 'Continuous R&D investment, patent protection, talent acquisition'\r\n    },\r\n    {\r\n      id: 'rural_network',\r\n      advantage: 'Deep Rural Penetration',\r\n      category: 'market',\r\n      sustainability: 'sustainable',\r\n      strength: 88,\r\n      description: 'Established community relationships and distribution network in rural areas',\r\n      evidence: ['12 state presence', '85% rural customer base', 'Community partnership model'],\r\n      threats: ['Competitor rural expansion', 'Digital disruption'],\r\n      reinforcementPlan: 'Strengthen community partnerships, expand network, digital enhancement'\r\n    },\r\n    {\r\n      id: 'cost_efficiency',\r\n      advantage: 'Lean Operations Model',\r\n      category: 'operational',\r\n      sustainability: 'sustainable',\r\n      strength: 85,\r\n      description: 'Optimized operations delivering 23% cost advantage over industry average',\r\n      evidence: ['23% lower OPEX', '87% operational efficiency', 'Automated processes'],\r\n      threats: ['Scale disadvantages', 'Process replication by competitors'],\r\n      reinforcementPlan: 'Process automation, scale expansion, continuous improvement'\r\n    },\r\n    {\r\n      id: 'esg_leadership',\r\n      advantage: 'ESG Leadership Position',\r\n      category: 'market',\r\n      sustainability: 'sustainable',\r\n      strength: 89,\r\n      description: 'Industry-leading ESG practices and carbon credit generation capabilities',\r\n      evidence: ['A rating ESG score', '450 carbon credits generated', 'B Corp certification'],\r\n      threats: ['ESG commoditization', 'Regulatory changes'],\r\n      reinforcementPlan: 'ESG innovation, certification expansion, thought leadership'\r\n    }\r\n  ]);\r\n\r\n  const formatCurrency = (value: number): string => {\r\n    if (value >= 10000000) {\r\n      return `₹${(value / 10000000).toFixed(1)}Cr`;\r\n    } else if (value >= 100000) {\r\n      return `₹${(value / 100000).toFixed(1)}L`;\r\n    }\r\n    return `₹${value.toLocaleString()}`;\r\n  };\r\n\r\n  const getThreatColor = (level: string) => {\r\n    switch (level) {\r\n      case 'low':\r\n        return 'bg-green-100 text-green-800';\r\n      case 'medium':\r\n        return 'bg-yellow-100 text-yellow-800';\r\n      case 'high':\r\n        return 'bg-orange-100 text-orange-800';\r\n      case 'critical':\r\n        return 'bg-red-100 text-red-800';\r\n      default:\r\n        return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  const getImpactColor = (impact: string) => {\r\n    switch (impact) {\r\n      case 'high':\r\n        return 'bg-red-100 text-red-800';\r\n      case 'medium':\r\n        return 'bg-yellow-100 text-yellow-800';\r\n      case 'low':\r\n        return 'bg-green-100 text-green-800';\r\n      default:\r\n        return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  const getTrendIcon = (trend: string) => {\r\n    switch (trend) {\r\n      case 'up':\r\n        return <ArrowUpRight className=\"h-4 w-4 text-green-600\" />;\r\n      case 'down':\r\n        return <ArrowDownRight className=\"h-4 w-4 text-red-600\" />;\r\n      case 'stable':\r\n        return <TrendingFlat className=\"h-4 w-4 text-gray-600\" />;\r\n      default:\r\n        return <Minus className=\"h-4 w-4 text-gray-600\" />;\r\n    }\r\n  };\r\n\r\n  const getSustainabilityColor = (sustainability: string) => {\r\n    switch (sustainability) {\r\n      case 'sustainable':\r\n        return 'bg-green-100 text-green-800';\r\n      case 'temporary':\r\n        return 'bg-yellow-100 text-yellow-800';\r\n      case 'at-risk':\r\n        return 'bg-red-100 text-red-800';\r\n      default:\r\n        return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  const speakCompetitiveSummary = () => {\r\n    const marketShare = competitiveData.marketShare;\r\n    const ranking = competitiveData.ranking;\r\n    const strengthScore = competitiveData.strengthScore;\r\n\r\n    const summaryText = `Competitive Intelligence Summary: We hold ${marketShare}% market share, ranking ${ranking} in the industry. Overall competitive strength score is ${strengthScore}%. We have ${competitors.filter(c => c.threatLevel === 'high' || c.threatLevel === 'critical').length} high-threat competitors. Key opportunities include government policy support and carbon credit market expansion.`;\r\n\r\n    if ('speechSynthesis' in window) {\r\n      const utterance = new SpeechSynthesisUtterance(summaryText);\r\n      speechSynthesis.speak(utterance);\r\n    }\r\n  };\r\n\r\n  const exportCompetitiveReport = () => {\r\n    const reportData = {\r\n      timestamp: new Date().toISOString(),\r\n      executiveSummary: {\r\n        marketPosition: competitiveData,\r\n        keyThreats: competitors.filter(c => c.threatLevel === 'high' || c.threatLevel === 'critical').length,\r\n        topOpportunities: swotAnalysis.opportunities.slice(0, 3),\r\n        competitiveAdvantages: competitiveAdvantages.length\r\n      },\r\n      competitors,\r\n      marketSegments,\r\n      swotAnalysis,\r\n      benchmarkMetrics,\r\n      competitiveAdvantages\r\n    };\r\n\r\n    const blob = new Blob([JSON.stringify(reportData, null, 2)], { type: 'application/json' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = `competitive-intelligence-report-${new Date().toISOString().split('T')[0]}.json`;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h2 className=\"text-2xl font-bold text-gray-900\">Competitive Intelligence & Market Analysis</h2>\r\n          <p className=\"text-gray-600\">Comprehensive competitive positioning, market analysis, and strategic insights</p>\r\n        </div>\r\n        <div className=\"flex items-center gap-3\">\r\n          <Button\r\n            onClick={speakCompetitiveSummary}\r\n            variant=\"outline\"\r\n            size=\"sm\"\r\n            className=\"hidden sm:flex\"\r\n          >\r\n            <Volume2 className=\"h-4 w-4 mr-2\" />\r\n            Listen\r\n          </Button>\r\n          <Button\r\n            onClick={exportCompetitiveReport}\r\n            variant=\"outline\"\r\n            size=\"sm\"\r\n          >\r\n            <Download className=\"h-4 w-4 mr-2\" />\r\n            Export\r\n          </Button>\r\n          <Button\r\n            onClick={refreshData}\r\n            variant=\"outline\"\r\n            size=\"sm\"\r\n            disabled={refreshing}\r\n          >\r\n            <RefreshCw className={`h-4 w-4 ${refreshing ? 'animate-spin' : ''} mr-2`} />\r\n            Refresh\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Competitive Overview Cards */}\r\n      <div className=\"grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-4\">\r\n        <Card className=\"hover:shadow-lg transition-shadow\">\r\n          <CardContent className=\"p-6\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm text-gray-600\">Market Share</p>\r\n                <p className=\"text-2xl font-bold text-blue-600\">\r\n                  {competitiveData.marketShare}%\r\n                </p>\r\n                <p className=\"text-xs text-gray-500 mt-1\">\r\n                  Rank #{competitiveData.ranking} of {competitiveData.competitorCount}\r\n                </p>\r\n              </div>\r\n              <div className=\"p-3 bg-blue-100 rounded-lg\">\r\n                <PieChart className=\"h-6 w-6 text-blue-600\" />\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card className=\"hover:shadow-lg transition-shadow\">\r\n          <CardContent className=\"p-6\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm text-gray-600\">Competitive Strength</p>\r\n                <p className=\"text-2xl font-bold text-green-600\">\r\n                  {competitiveData.strengthScore}\r\n                </p>\r\n                <p className=\"text-xs text-gray-500 mt-1\">\r\n                  Above industry average\r\n                </p>\r\n              </div>\r\n              <div className=\"p-3 bg-green-100 rounded-lg\">\r\n                <Award className=\"h-6 w-6 text-green-600\" />\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card className=\"hover:shadow-lg transition-shadow\">\r\n          <CardContent className=\"p-6\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm text-gray-600\">High-Threat Competitors</p>\r\n                <p className=\"text-2xl font-bold text-orange-600\">\r\n                  {competitors.filter(c => c.threatLevel === 'high' || c.threatLevel === 'critical').length}\r\n                </p>\r\n                <p className=\"text-xs text-gray-500 mt-1\">\r\n                  Requiring immediate attention\r\n                </p>\r\n              </div>\r\n              <div className=\"p-3 bg-orange-100 rounded-lg\">\r\n                <AlertTriangle className=\"h-6 w-6 text-orange-600\" />\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card className=\"hover:shadow-lg transition-shadow\">\r\n          <CardContent className=\"p-6\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm text-gray-600\">Key Opportunities</p>\r\n                <p className=\"text-2xl font-bold text-purple-600\">\r\n                  {swotAnalysis.opportunities.filter(o => o.potential === 'high').length}\r\n                </p>\r\n                <p className=\"text-xs text-gray-500 mt-1\">\r\n                  High-potential opportunities\r\n                </p>\r\n              </div>\r\n              <div className=\"p-3 bg-purple-100 rounded-lg\">\r\n                <Lightbulb className=\"h-6 w-6 text-purple-600\" />\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      <Tabs value={activeTab} onValueChange={setActiveTab} className=\"space-y-6\">\r\n        <TabsList className=\"grid w-full grid-cols-5\">\r\n          <TabsTrigger value=\"overview\">Market Overview</TabsTrigger>\r\n          <TabsTrigger value=\"competitors\">Competitor Analysis</TabsTrigger>\r\n          <TabsTrigger value=\"swot\">SWOT Analysis</TabsTrigger>\r\n          <TabsTrigger value=\"benchmarks\">Benchmarking</TabsTrigger>\r\n          <TabsTrigger value=\"advantages\">Competitive Edge</TabsTrigger>\r\n        </TabsList>\r\n\r\n        {/* Market Overview Tab */}\r\n        <TabsContent value=\"overview\" className=\"space-y-6\">\r\n          <div className=\"grid grid-cols-1 gap-6\">\r\n            {/* Market Position Dashboard */}\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center gap-2\">\r\n                  <BarChart3 className=\"h-5 w-5\" />\r\n                  Market Position Analysis\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n                  {/* Market Share Visualization */}\r\n                  <div className=\"space-y-4\">\r\n                    <h4 className=\"font-medium text-gray-900\">Market Share Distribution</h4>\r\n                    <div className=\"space-y-3\">\r\n                      {[\r\n                        { name: 'EcoGas Solutions', share: 25.3, color: 'bg-red-500' },\r\n                        { name: 'GreenTech Biogas', share: 22.1, color: 'bg-orange-500' },\r\n                        { name: 'SAUBHAGYA', share: 18.5, color: 'bg-blue-500' },\r\n                        { name: 'Rural Energy Corp', share: 15.7, color: 'bg-green-500' },\r\n                        { name: 'CleanEnergy Dynamics', share: 8.2, color: 'bg-purple-500' },\r\n                        { name: 'Others', share: 10.2, color: 'bg-gray-400' }\r\n                      ].map((company, index) => (\r\n                        <div key={index} className=\"flex items-center justify-between\">\r\n                          <div className=\"flex items-center gap-3\">\r\n                            <div className={`w-4 h-4 rounded ${company.color}`}></div>\r\n                            <span className=\"font-medium\">{company.name}</span>\r\n                            {company.name === 'SAUBHAGYA' && (\r\n                              <Badge variant=\"outline\" className=\"bg-blue-100 text-blue-800\">\r\n                                Us\r\n                              </Badge>\r\n                            )}\r\n                          </div>\r\n                          <div className=\"text-right\">\r\n                            <div className=\"font-medium\">{company.share}%</div>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Competitive Positioning */}\r\n                  <div className=\"space-y-4\">\r\n                    <h4 className=\"font-medium text-gray-900\">Competitive Positioning</h4>\r\n                    <div className=\"grid grid-cols-2 gap-4\">\r\n                      <div className=\"text-center p-4 bg-blue-50 rounded-lg\">\r\n                        <div className=\"text-2xl font-bold text-blue-600\">3rd</div>\r\n                        <div className=\"text-sm text-blue-700\">Market Ranking</div>\r\n                      </div>\r\n                      <div className=\"text-center p-4 bg-green-50 rounded-lg\">\r\n                        <div className=\"text-2xl font-bold text-green-600\">+3.2%</div>\r\n                        <div className=\"text-sm text-green-700\">YoY Growth</div>\r\n                      </div>\r\n                      <div className=\"text-center p-4 bg-purple-50 rounded-lg\">\r\n                        <div className=\"text-2xl font-bold text-purple-600\">{formatCurrency(125000000000)}</div>\r\n                        <div className=\"text-sm text-purple-700\">Revenue</div>\r\n                      </div>\r\n                      <div className=\"text-center p-4 bg-orange-50 rounded-lg\">\r\n                        <div className=\"text-2xl font-bold text-orange-600\">12</div>\r\n                        <div className=\"text-sm text-orange-700\">States Present</div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            {/* Market Segments Analysis */}\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center gap-2\">\r\n                  <Target className=\"h-5 w-5\" />\r\n                  Market Segments Performance\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"space-y-4\">\r\n                  {marketSegments.map((segment) => (\r\n                    <Card key={segment.id} className=\"hover:shadow-lg transition-shadow\">\r\n                      <CardContent className=\"p-4\">\r\n                        <div className=\"flex items-start justify-between\">\r\n                          <div className=\"flex-1\">\r\n                            <div className=\"flex items-center gap-2\">\r\n                              <h4 className=\"font-medium text-gray-900\">{segment.name}</h4>\r\n                              <Badge\r\n                                variant=\"outline\"\r\n                                className={\r\n                                  segment.opportunity === 'high' ? 'bg-green-100 text-green-800' :\r\n                                  segment.opportunity === 'medium' ? 'bg-yellow-100 text-yellow-800' :\r\n                                  'bg-gray-100 text-gray-800'\r\n                                }\r\n                              >\r\n                                {segment.opportunity} opportunity\r\n                              </Badge>\r\n                              {segment.leader === 'SAUBHAGYA' && (\r\n                                <Badge variant=\"outline\" className=\"bg-blue-100 text-blue-800\">\r\n                                  <Crown className=\"h-3 w-3 mr-1\" />\r\n                                  Leader\r\n                                </Badge>\r\n                              )}\r\n                            </div>\r\n                            <div className=\"grid grid-cols-2 lg:grid-cols-4 gap-4 mt-3\">\r\n                              <div>\r\n                                <div className=\"text-sm text-gray-600\">Market Size</div>\r\n                                <div className=\"font-medium\">{formatCurrency(segment.size)}</div>\r\n                              </div>\r\n                              <div>\r\n                                <div className=\"text-sm text-gray-600\">Growth Rate</div>\r\n                                <div className=\"font-medium text-green-600\">+{segment.growth}%</div>\r\n                              </div>\r\n                              <div>\r\n                                <div className=\"text-sm text-gray-600\">Our Share</div>\r\n                                <div className=\"font-medium\">{segment.ourShare}%</div>\r\n                              </div>\r\n                              <div>\r\n                                <div className=\"text-sm text-gray-600\">Leader</div>\r\n                                <div className=\"font-medium\">{segment.leader} ({segment.leaderShare}%)</div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"mt-4 space-y-3\">\r\n                          <div>\r\n                            <div className=\"text-sm text-gray-600 mb-2\">Key Trends</div>\r\n                            <div className=\"flex flex-wrap gap-1\">\r\n                              {segment.trends.map((trend, index) => (\r\n                                <Badge key={index} variant=\"outline\" className=\"text-xs\">\r\n                                  {trend}\r\n                                </Badge>\r\n                              ))}\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div>\r\n                            <div className=\"text-sm text-gray-600 mb-2\">Market Barriers</div>\r\n                            <div className=\"flex flex-wrap gap-1\">\r\n                              {segment.barriers.map((barrier, index) => (\r\n                                <Badge key={index} variant=\"outline\" className=\"text-xs bg-red-50 text-red-700\">\r\n                                  {barrier}\r\n                                </Badge>\r\n                              ))}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </CardContent>\r\n                    </Card>\r\n                  ))}\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </TabsContent>\r\n\r\n        {/* Competitor Analysis Tab */}\r\n        <TabsContent value=\"competitors\" className=\"space-y-6\">\r\n          <div className=\"grid grid-cols-1 gap-6\">\r\n            {/* Competitive Landscape */}\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center gap-2\">\r\n                  <Users className=\"h-5 w-5\" />\r\n                  Competitive Landscape Analysis\r\n                </CardTitle>\r\n                <div className=\"flex items-center gap-4 mt-4\">\r\n                  <Select value={selectedTimeframe} onValueChange={setSelectedTimeframe}>\r\n                    <SelectTrigger className=\"w-40\">\r\n                      <SelectValue />\r\n                    </SelectTrigger>\r\n                    <SelectContent>\r\n                      <SelectItem value=\"6m\">6 Months</SelectItem>\r\n                      <SelectItem value=\"12m\">12 Months</SelectItem>\r\n                      <SelectItem value=\"24m\">24 Months</SelectItem>\r\n                    </SelectContent>\r\n                  </Select>\r\n                  <Button\r\n                    variant=\"outline\"\r\n                    size=\"sm\"\r\n                    onClick={() => setShowAdvancedAnalysis(!showAdvancedAnalysis)}\r\n                  >\r\n                    <Brain className=\"h-4 w-4 mr-2\" />\r\n                    Advanced Analysis\r\n                  </Button>\r\n                </div>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"space-y-6\">\r\n                  {competitors.map((competitor) => (\r\n                    <Card key={competitor.id} className=\"hover:shadow-lg transition-shadow\">\r\n                      <CardHeader>\r\n                        <div className=\"flex items-start justify-between\">\r\n                          <div>\r\n                            <div className=\"flex items-center gap-3\">\r\n                              <CardTitle className=\"text-lg\">{competitor.name}</CardTitle>\r\n                              <Badge\r\n                                variant=\"outline\"\r\n                                className={\r\n                                  competitor.tier === 'direct' ? 'bg-red-100 text-red-800' :\r\n                                  competitor.tier === 'indirect' ? 'bg-yellow-100 text-yellow-800' :\r\n                                  'bg-blue-100 text-blue-800'\r\n                                }\r\n                              >\r\n                                {competitor.tier} competitor\r\n                              </Badge>\r\n                              <Badge\r\n                                variant=\"outline\"\r\n                                className={getThreatColor(competitor.threatLevel)}\r\n                              >\r\n                                {competitor.threatLevel} threat\r\n                              </Badge>\r\n                            </div>\r\n                            <div className=\"flex items-center gap-4 mt-2 text-sm text-gray-600\">\r\n                              <span>Market Share: {competitor.marketShare}%</span>\r\n                              <span>Revenue: {formatCurrency(competitor.revenue)}</span>\r\n                              <span>Growth: {competitor.growth}%</span>\r\n                              <span>Employees: {competitor.employees.toLocaleString()}</span>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"text-right\">\r\n                            <div className=\"text-2xl font-bold text-gray-900\">\r\n                              {Math.round((competitor.innovationScore + competitor.customerSatisfaction + competitor.financialHealth + competitor.operationalEfficiency) / 4)}\r\n                            </div>\r\n                            <div className=\"text-sm text-gray-600\">Overall Score</div>\r\n                          </div>\r\n                        </div>\r\n                      </CardHeader>\r\n                      <CardContent className=\"space-y-4\">\r\n                        {/* Performance Metrics */}\r\n                        <div className=\"grid grid-cols-2 lg:grid-cols-4 gap-4\">\r\n                          <div className=\"text-center p-3 bg-blue-50 rounded-lg\">\r\n                            <div className=\"text-lg font-bold text-blue-600\">{competitor.innovationScore}</div>\r\n                            <div className=\"text-xs text-blue-700\">Innovation</div>\r\n                          </div>\r\n                          <div className=\"text-center p-3 bg-green-50 rounded-lg\">\r\n                            <div className=\"text-lg font-bold text-green-600\">{competitor.customerSatisfaction}</div>\r\n                            <div className=\"text-xs text-green-700\">Customer Sat</div>\r\n                          </div>\r\n                          <div className=\"text-center p-3 bg-purple-50 rounded-lg\">\r\n                            <div className=\"text-lg font-bold text-purple-600\">{competitor.financialHealth}</div>\r\n                            <div className=\"text-xs text-purple-700\">Financial</div>\r\n                          </div>\r\n                          <div className=\"text-center p-3 bg-orange-50 rounded-lg\">\r\n                            <div className=\"text-lg font-bold text-orange-600\">{competitor.operationalEfficiency}</div>\r\n                            <div className=\"text-xs text-orange-700\">Operations</div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        {/* Geographic Presence */}\r\n                        <div>\r\n                          <div className=\"text-sm text-gray-600 mb-2\">Geographic Presence</div>\r\n                          <div className=\"flex flex-wrap gap-1\">\r\n                            {competitor.regions.map((region, index) => (\r\n                              <Badge key={index} variant=\"outline\" className=\"text-xs\">\r\n                                <MapPin className=\"h-3 w-3 mr-1\" />\r\n                                {region}\r\n                              </Badge>\r\n                            ))}\r\n                          </div>\r\n                        </div>\r\n\r\n                        {/* Strengths and Weaknesses */}\r\n                        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\r\n                          <div>\r\n                            <div className=\"text-sm text-gray-600 mb-2\">Key Strengths</div>\r\n                            <div className=\"space-y-1\">\r\n                              {competitor.strengths.map((strength, index) => (\r\n                                <div key={index} className=\"flex items-center gap-2 text-sm\">\r\n                                  <CheckCircle className=\"h-3 w-3 text-green-600\" />\r\n                                  {strength}\r\n                                </div>\r\n                              ))}\r\n                            </div>\r\n                          </div>\r\n                          <div>\r\n                            <div className=\"text-sm text-gray-600 mb-2\">Key Weaknesses</div>\r\n                            <div className=\"space-y-1\">\r\n                              {competitor.weaknesses.map((weakness, index) => (\r\n                                <div key={index} className=\"flex items-center gap-2 text-sm\">\r\n                                  <AlertTriangle className=\"h-3 w-3 text-red-600\" />\r\n                                  {weakness}\r\n                                </div>\r\n                              ))}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        {/* Recent Strategic Moves */}\r\n                        <div>\r\n                          <div className=\"text-sm text-gray-600 mb-2\">Recent Strategic Moves</div>\r\n                          <div className=\"space-y-2\">\r\n                            {competitor.recentMoves.map((move, index) => (\r\n                              <div key={index} className=\"flex items-start gap-2 text-sm p-2 bg-gray-50 rounded\">\r\n                                <Activity className=\"h-3 w-3 text-blue-600 mt-0.5\" />\r\n                                {move}\r\n                              </div>\r\n                            ))}\r\n                          </div>\r\n                        </div>\r\n\r\n                        {showAdvancedAnalysis && (\r\n                          <div className=\"pt-3 border-t border-gray-200\">\r\n                            <div className=\"text-sm font-medium text-gray-900 mb-3\">Advanced Intelligence</div>\r\n                            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4 text-sm\">\r\n                              <div>\r\n                                <div className=\"text-gray-600\">Predicted Next Moves:</div>\r\n                                <ul className=\"mt-1 space-y-1\">\r\n                                  <li>• Market expansion to new states</li>\r\n                                  <li>• Technology acquisition or partnership</li>\r\n                                  <li>• Price competition in key segments</li>\r\n                                </ul>\r\n                              </div>\r\n                              <div>\r\n                                <div className=\"text-gray-600\">Vulnerability Assessment:</div>\r\n                                <ul className=\"mt-1 space-y-1\">\r\n                                  <li>• Capital constraints limiting expansion</li>\r\n                                  <li>• Technology gap in rural markets</li>\r\n                                  <li>• Regulatory dependency risks</li>\r\n                                </ul>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                      </CardContent>\r\n                    </Card>\r\n                  ))}\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </TabsContent>\r\n\r\n        {/* SWOT Analysis Tab */}\r\n        <TabsContent value=\"swot\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                <Shield className=\"h-5 w-5\" />\r\n                Strategic SWOT Analysis\r\n              </CardTitle>\r\n              <p className=\"text-gray-600\">Comprehensive analysis of Strengths, Weaknesses, Opportunities, and Threats</p>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n                {/* Strengths */}\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle className=\"flex items-center gap-2 text-green-700\">\r\n                      <CheckCircle className=\"h-5 w-5\" />\r\n                      Strengths\r\n                    </CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"space-y-4\">\r\n                    {swotAnalysis.strengths.map((strength, index) => (\r\n                      <div key={index} className=\"space-y-2\">\r\n                        <div className=\"flex items-center justify-between\">\r\n                          <span className=\"font-medium text-sm\">{strength.factor}</span>\r\n                          <div className=\"flex items-center gap-2\">\r\n                            <Badge variant=\"outline\" className={getImpactColor(strength.impact)}>\r\n                              {strength.impact} impact\r\n                            </Badge>\r\n                            <span className=\"text-sm font-medium\">{strength.score}/100</span>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"text-xs text-gray-600\">{strength.description}</div>\r\n                        <Progress value={strength.score} className=\"h-2\" />\r\n                      </div>\r\n                    ))}\r\n                  </CardContent>\r\n                </Card>\r\n\r\n                {/* Weaknesses */}\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle className=\"flex items-center gap-2 text-red-700\">\r\n                      <AlertTriangle className=\"h-5 w-5\" />\r\n                      Weaknesses\r\n                    </CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"space-y-4\">\r\n                    {swotAnalysis.weaknesses.map((weakness, index) => (\r\n                      <div key={index} className=\"space-y-2\">\r\n                        <div className=\"flex items-center justify-between\">\r\n                          <span className=\"font-medium text-sm\">{weakness.factor}</span>\r\n                          <div className=\"flex items-center gap-2\">\r\n                            <Badge variant=\"outline\" className={getImpactColor(weakness.impact)}>\r\n                              {weakness.impact} impact\r\n                            </Badge>\r\n                            <span className=\"text-sm font-medium\">{weakness.score}/100</span>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"text-xs text-gray-600\">{weakness.description}</div>\r\n                        <Progress value={weakness.score} className=\"h-2\" />\r\n                        {weakness.actionPlan && (\r\n                          <div className=\"text-xs text-blue-600 bg-blue-50 p-2 rounded\">\r\n                            <strong>Action Plan:</strong> {weakness.actionPlan}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    ))}\r\n                  </CardContent>\r\n                </Card>\r\n\r\n                {/* Opportunities */}\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle className=\"flex items-center gap-2 text-blue-700\">\r\n                      <Lightbulb className=\"h-5 w-5\" />\r\n                      Opportunities\r\n                    </CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"space-y-4\">\r\n                    {swotAnalysis.opportunities.map((opportunity, index) => (\r\n                      <div key={index} className=\"p-3 bg-blue-50 rounded-lg border border-blue-200\">\r\n                        <div className=\"flex items-start justify-between\">\r\n                          <div className=\"flex-1\">\r\n                            <div className=\"flex items-center gap-2\">\r\n                              <span className=\"font-medium text-blue-800\">{opportunity.factor}</span>\r\n                              <Badge\r\n                                variant=\"outline\"\r\n                                className={\r\n                                  opportunity.potential === 'high' ? 'bg-green-100 text-green-800' :\r\n                                  opportunity.potential === 'medium' ? 'bg-yellow-100 text-yellow-800' :\r\n                                  'bg-gray-100 text-gray-800'\r\n                                }\r\n                              >\r\n                                {opportunity.potential} potential\r\n                              </Badge>\r\n                            </div>\r\n                            <div className=\"text-sm text-blue-700 mt-1\">{opportunity.description}</div>\r\n                            <div className=\"grid grid-cols-2 gap-4 mt-3 text-sm\">\r\n                              <div>\r\n                                <span className=\"text-gray-600\">Timeframe:</span>\r\n                                <div className=\"font-medium\">{opportunity.timeframe}</div>\r\n                              </div>\r\n                              <div>\r\n                                <span className=\"text-gray-600\">Investment:</span>\r\n                                <div className=\"font-medium\">{formatCurrency(opportunity.investmentRequired)}</div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"text-right ml-4\">\r\n                            <div className=\"font-medium text-green-600\">\r\n                              {formatCurrency(opportunity.expectedReturn)}\r\n                            </div>\r\n                            <div className=\"text-sm text-gray-600\">Expected Return</div>\r\n                            <div className=\"text-xs text-green-600 mt-1\">\r\n                              {Math.round((opportunity.expectedReturn / opportunity.investmentRequired) * 100)}% ROI\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </CardContent>\r\n                </Card>\r\n\r\n                {/* Threats */}\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle className=\"flex items-center gap-2 text-orange-700\">\r\n                      <AlertTriangle className=\"h-5 w-5\" />\r\n                      Threats\r\n                    </CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"space-y-4\">\r\n                    {swotAnalysis.threats.map((threat, index) => (\r\n                      <div key={index} className=\"p-3 bg-orange-50 rounded-lg border border-orange-200\">\r\n                        <div className=\"flex items-start justify-between\">\r\n                          <div className=\"flex-1\">\r\n                            <div className=\"flex items-center gap-2\">\r\n                              <span className=\"font-medium text-orange-800\">{threat.factor}</span>\r\n                              <Badge\r\n                                variant=\"outline\"\r\n                                className={\r\n                                  threat.severity === 'high' ? 'bg-red-100 text-red-800' :\r\n                                  threat.severity === 'medium' ? 'bg-yellow-100 text-yellow-800' :\r\n                                  'bg-green-100 text-green-800'\r\n                                }\r\n                              >\r\n                                {threat.severity} severity\r\n                              </Badge>\r\n                            </div>\r\n                            <div className=\"text-sm text-orange-700 mt-1\">{threat.description}</div>\r\n                            <div className=\"grid grid-cols-2 gap-4 mt-3 text-sm\">\r\n                              <div>\r\n                                <span className=\"text-gray-600\">Timeline:</span>\r\n                                <div className=\"font-medium\">{threat.timeline}</div>\r\n                              </div>\r\n                              <div>\r\n                                <span className=\"text-gray-600\">Probability:</span>\r\n                                <div className=\"font-medium\">{Math.round(threat.probability * 100)}%</div>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"mt-3 p-2 bg-white rounded text-sm\">\r\n                              <span className=\"text-gray-600\">Mitigation:</span>\r\n                              <div className=\"font-medium\">{threat.mitigation}</div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </CardContent>\r\n                </Card>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        {/* Benchmarking Tab */}\r\n        <TabsContent value=\"benchmarks\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                <BarChart3 className=\"h-5 w-5\" />\r\n                Competitive Benchmarking Analysis\r\n              </CardTitle>\r\n              <p className=\"text-gray-600\">Performance comparison against industry standards and top performers</p>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-6\">\r\n                {benchmarkMetrics.map((metric, index) => (\r\n                  <Card key={index} className=\"hover:shadow-lg transition-shadow\">\r\n                    <CardContent className=\"p-4\">\r\n                      <div className=\"flex items-start justify-between\">\r\n                        <div className=\"flex-1\">\r\n                          <div className=\"flex items-center gap-3\">\r\n                            <h4 className=\"font-medium text-gray-900\">{metric.metric}</h4>\r\n                            {getTrendIcon(metric.trend)}\r\n                            <Badge variant=\"outline\" className=\"bg-blue-100 text-blue-800\">\r\n                              Rank #{metric.ranking} of {metric.totalCompetitors}\r\n                            </Badge>\r\n                          </div>\r\n\r\n                          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6 mt-4\">\r\n                            {/* Our Performance */}\r\n                            <div className=\"space-y-3\">\r\n                              <div className=\"text-sm text-gray-600\">Our Performance</div>\r\n                              <div className=\"text-2xl font-bold text-blue-600\">\r\n                                {metric.unit === '₹' ? formatCurrency(metric.ourValue) :\r\n                                 metric.unit === 'months' ? `${metric.ourValue}${metric.unit}` :\r\n                                 `${metric.ourValue}${metric.unit}`}\r\n                              </div>\r\n                              <div className=\"w-full bg-gray-200 rounded-full h-2\">\r\n                                <div\r\n                                  className=\"bg-blue-600 h-2 rounded-full\"\r\n                                  style={{\r\n                                    width: `${Math.min((metric.ourValue / metric.topPerformer) * 100, 100)}%`\r\n                                  }}\r\n                                ></div>\r\n                              </div>\r\n                            </div>\r\n\r\n                            {/* Industry Average */}\r\n                            <div className=\"space-y-3\">\r\n                              <div className=\"text-sm text-gray-600\">Industry Average</div>\r\n                              <div className=\"text-2xl font-bold text-gray-600\">\r\n                                {metric.unit === '₹' ? formatCurrency(metric.industryAverage) :\r\n                                 metric.unit === 'months' ? `${metric.industryAverage}${metric.unit}` :\r\n                                 `${metric.industryAverage}${metric.unit}`}\r\n                              </div>\r\n                              <div className=\"text-sm\">\r\n                                <span className={`font-medium ${\r\n                                  (metric.metric.includes('Cost') || metric.metric.includes('Time')) ?\r\n                                  (metric.ourValue < metric.industryAverage ? 'text-green-600' : 'text-red-600') :\r\n                                  (metric.ourValue > metric.industryAverage ? 'text-green-600' : 'text-red-600')\r\n                                }`}>\r\n                                  {(metric.metric.includes('Cost') || metric.metric.includes('Time')) ?\r\n                                    (metric.ourValue < metric.industryAverage ? 'Better' : 'Worse') :\r\n                                    (metric.ourValue > metric.industryAverage ? 'Above' : 'Below')\r\n                                  } by {\r\n                                    Math.abs(((metric.ourValue - metric.industryAverage) / metric.industryAverage) * 100).toFixed(1)\r\n                                  }%\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n\r\n                            {/* Top Performer */}\r\n                            <div className=\"space-y-3\">\r\n                              <div className=\"text-sm text-gray-600\">Best in Class</div>\r\n                              <div className=\"text-2xl font-bold text-green-600\">\r\n                                {metric.unit === '₹' ? formatCurrency(metric.topPerformer) :\r\n                                 metric.unit === 'months' ? `${metric.topPerformer}${metric.unit}` :\r\n                                 `${metric.topPerformer}${metric.unit}`}\r\n                              </div>\r\n                              <div className=\"text-sm\">\r\n                                <span className=\"text-orange-600 font-medium\">\r\n                                  Gap: {\r\n                                    Math.abs(((metric.topPerformer - metric.ourValue) / metric.topPerformer) * 100).toFixed(1)\r\n                                  }%\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </CardContent>\r\n                  </Card>\r\n                ))}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          {/* Performance Summary */}\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                <Star className=\"h-5 w-5\" />\r\n                Benchmarking Summary\r\n              </CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\r\n                <div className=\"text-center p-6 bg-green-50 rounded-lg\">\r\n                  <div className=\"text-3xl font-bold text-green-600\">\r\n                    {benchmarkMetrics.filter(m =>\r\n                      (m.metric.includes('Cost') || m.metric.includes('Time')) ?\r\n                      m.ourValue < m.industryAverage :\r\n                      m.ourValue > m.industryAverage\r\n                    ).length}\r\n                  </div>\r\n                  <div className=\"text-sm text-green-700 mt-2\">Above Industry Average</div>\r\n                </div>\r\n                <div className=\"text-center p-6 bg-blue-50 rounded-lg\">\r\n                  <div className=\"text-3xl font-bold text-blue-600\">\r\n                    {Math.round(benchmarkMetrics.reduce((sum, m) => sum + m.ranking, 0) / benchmarkMetrics.length)}\r\n                  </div>\r\n                  <div className=\"text-sm text-blue-700 mt-2\">Average Ranking</div>\r\n                </div>\r\n                <div className=\"text-center p-6 bg-purple-50 rounded-lg\">\r\n                  <div className=\"text-3xl font-bold text-purple-600\">\r\n                    {benchmarkMetrics.filter(m => m.ranking <= 3).length}\r\n                  </div>\r\n                  <div className=\"text-sm text-purple-700 mt-2\">Top 3 Rankings</div>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        {/* Competitive Advantages Tab */}\r\n        <TabsContent value=\"advantages\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                <Crown className=\"h-5 w-5\" />\r\n                Competitive Advantages & Differentiation\r\n              </CardTitle>\r\n              <p className=\"text-gray-600\">Analysis of sustainable competitive advantages and strategic differentiation</p>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-6\">\r\n                {competitiveAdvantages.map((advantage) => (\r\n                  <Card key={advantage.id} className=\"hover:shadow-lg transition-shadow\">\r\n                    <CardHeader>\r\n                      <div className=\"flex items-start justify-between\">\r\n                        <div>\r\n                          <div className=\"flex items-center gap-3\">\r\n                            <CardTitle className=\"text-lg\">{advantage.advantage}</CardTitle>\r\n                            <Badge\r\n                              variant=\"outline\"\r\n                              className={\r\n                                advantage.category === 'technology' ? 'bg-blue-100 text-blue-800' :\r\n                                advantage.category === 'operational' ? 'bg-green-100 text-green-800' :\r\n                                advantage.category === 'financial' ? 'bg-purple-100 text-purple-800' :\r\n                                advantage.category === 'market' ? 'bg-orange-100 text-orange-800' :\r\n                                'bg-gray-100 text-gray-800'\r\n                              }\r\n                            >\r\n                              {advantage.category}\r\n                            </Badge>\r\n                            <Badge\r\n                              variant=\"outline\"\r\n                              className={getSustainabilityColor(advantage.sustainability)}\r\n                            >\r\n                              {advantage.sustainability}\r\n                            </Badge>\r\n                          </div>\r\n                          <p className=\"text-sm text-gray-600 mt-2\">{advantage.description}</p>\r\n                        </div>\r\n                        <div className=\"text-right\">\r\n                          <div className=\"text-2xl font-bold text-green-600\">{advantage.strength}</div>\r\n                          <div className=\"text-sm text-gray-600\">Strength Score</div>\r\n                        </div>\r\n                      </div>\r\n                    </CardHeader>\r\n                    <CardContent className=\"space-y-4\">\r\n                      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n                        {/* Evidence */}\r\n                        <div>\r\n                          <div className=\"text-sm font-medium text-gray-900 mb-3\">Supporting Evidence</div>\r\n                          <div className=\"space-y-2\">\r\n                            {advantage.evidence.map((evidence, index) => (\r\n                              <div key={index} className=\"flex items-start gap-2 text-sm\">\r\n                                <CheckCircle className=\"h-3 w-3 text-green-600 mt-0.5\" />\r\n                                {evidence}\r\n                              </div>\r\n                            ))}\r\n                          </div>\r\n                        </div>\r\n\r\n                        {/* Threats */}\r\n                        <div>\r\n                          <div className=\"text-sm font-medium text-gray-900 mb-3\">Potential Threats</div>\r\n                          <div className=\"space-y-2\">\r\n                            {advantage.threats.map((threat, index) => (\r\n                              <div key={index} className=\"flex items-start gap-2 text-sm\">\r\n                                <AlertTriangle className=\"h-3 w-3 text-red-600 mt-0.5\" />\r\n                                {threat}\r\n                              </div>\r\n                            ))}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* Reinforcement Plan */}\r\n                      <div className=\"pt-3 border-t border-gray-200\">\r\n                        <div className=\"text-sm font-medium text-gray-900 mb-2\">Reinforcement Strategy</div>\r\n                        <div className=\"text-sm text-gray-700 p-3 bg-blue-50 rounded-lg\">\r\n                          {advantage.reinforcementPlan}\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* Strength Meter */}\r\n                      <div className=\"pt-3 border-t border-gray-200\">\r\n                        <div className=\"flex justify-between text-sm mb-2\">\r\n                          <span>Competitive Strength</span>\r\n                          <span>{advantage.strength}/100</span>\r\n                        </div>\r\n                        <Progress value={advantage.strength} className=\"h-3\" />\r\n                      </div>\r\n                    </CardContent>\r\n                  </Card>\r\n                ))}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          {/* Advantage Portfolio Summary */}\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                <Network className=\"h-5 w-5\" />\r\n                Competitive Advantage Portfolio\r\n              </CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n                {/* By Category */}\r\n                <div className=\"space-y-4\">\r\n                  <h4 className=\"font-medium text-gray-900\">Advantages by Category</h4>\r\n                  <div className=\"space-y-3\">\r\n                    {Array.from(new Set(competitiveAdvantages.map(a => a.category))).map(category => {\r\n                      const categoryAdvantages = competitiveAdvantages.filter(a => a.category === category);\r\n                      const avgStrength = categoryAdvantages.reduce((sum, a) => sum + a.strength, 0) / categoryAdvantages.length;\r\n\r\n                      return (\r\n                        <div key={category} className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\r\n                          <div className=\"flex items-center gap-3\">\r\n                            <div className={`p-2 rounded ${\r\n                              category === 'technology' ? 'bg-blue-100' :\r\n                              category === 'operational' ? 'bg-green-100' :\r\n                              category === 'financial' ? 'bg-purple-100' :\r\n                              category === 'market' ? 'bg-orange-100' :\r\n                              'bg-gray-100'\r\n                            }`}>\r\n                              <Brain className=\"h-4 w-4\" />\r\n                            </div>\r\n                            <div>\r\n                              <div className=\"font-medium capitalize\">{category}</div>\r\n                              <div className=\"text-sm text-gray-600\">{categoryAdvantages.length} advantages</div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"text-right\">\r\n                            <div className=\"font-medium\">{Math.round(avgStrength)}/100</div>\r\n                            <div className=\"text-sm text-gray-600\">Avg Strength</div>\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div>\r\n\r\n                {/* By Sustainability */}\r\n                <div className=\"space-y-4\">\r\n                  <h4 className=\"font-medium text-gray-900\">Sustainability Assessment</h4>\r\n                  <div className=\"space-y-3\">\r\n                    {['sustainable', 'temporary', 'at-risk'].map(sustainability => {\r\n                      const sustainabilityAdvantages = competitiveAdvantages.filter(a => a.sustainability === sustainability);\r\n                      const percentage = (sustainabilityAdvantages.length / competitiveAdvantages.length) * 100;\r\n\r\n                      return (\r\n                        <div key={sustainability} className=\"space-y-2\">\r\n                          <div className=\"flex justify-between text-sm\">\r\n                            <span className=\"font-medium capitalize\">{sustainability} Advantages</span>\r\n                            <span>{sustainabilityAdvantages.length} ({percentage.toFixed(0)}%)</span>\r\n                          </div>\r\n                          <Progress value={percentage} className=\"h-2\" />\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n\r\n                  <div className=\"mt-6 p-4 bg-green-50 rounded-lg border border-green-200\">\r\n                    <div className=\"font-medium text-green-800\">Strategic Recommendation</div>\r\n                    <div className=\"text-sm text-green-700 mt-1\">\r\n                      Focus on reinforcing sustainable advantages while developing mitigation strategies for at-risk advantages.\r\n                      Priority should be given to technology and market advantages as they provide the strongest differentiation.\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CompetitiveIntelligence;","import React, { useState, useEffect } from 'react'\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'\r\nimport { ExecutiveAnalyticsProvider } from '../contexts/ExecutiveAnalyticsContext'\r\nimport { usePlatform } from '../contexts/PlatformContext'\r\nimport ExecutiveSummary from '../components/executive/ExecutiveSummary'\r\nimport VoiceAnalytics from '../components/voice/VoiceAnalytics'\r\nimport StrategicPlanning from '../components/executive/StrategicPlanning'\r\nimport CarbonAnalytics from '../components/executive/CarbonAnalytics'\r\nimport CompetitiveIntelligence from '../components/executive/CompetitiveIntelligence'\r\nimport { TrendingUp, Mic, BarChart3, Leaf, Target, Brain, Globe } from 'lucide-react'\r\n\r\ninterface DashboardTab {\r\n  id: string;\r\n  label: string;\r\n  icon: React.ReactNode;\r\n  description: string;\r\n}\r\n\r\nconst UrjaNeta: React.FC = () => {\r\n  const { trackModuleUsage, updateBreadcrumbs } = usePlatform()\r\n  const [activeTab, setActiveTab] = useState('summary');\r\n\r\n  const dashboardTabs: DashboardTab[] = [\r\n    {\r\n      id: 'summary',\r\n      label: 'Executive Summary',\r\n      icon: <TrendingUp className=\"h-4 w-4\" />,\r\n      description: 'Real-time KPIs and business intelligence'\r\n    },\r\n    {\r\n      id: 'voice',\r\n      label: 'Voice Analytics',\r\n      icon: <Mic className=\"h-4 w-4\" />,\r\n      description: 'Voice-enabled business queries'\r\n    },\r\n    {\r\n      id: 'strategic',\r\n      label: 'Strategic Planning',\r\n      icon: <Target className=\"h-4 w-4\" />,\r\n      description: 'Strategic initiatives and planning'\r\n    },\r\n    {\r\n      id: 'carbon',\r\n      label: 'Carbon Analytics',\r\n      icon: <Leaf className=\"h-4 w-4\" />,\r\n      description: 'Environmental impact and carbon credits'\r\n    },\r\n    {\r\n      id: 'competitive',\r\n      label: 'Market Intelligence',\r\n      icon: <BarChart3 className=\"h-4 w-4\" />,\r\n      description: 'Competitive analysis and market insights'\r\n    }\r\n  ];\r\n\r\n  const translations = {\r\n    en: {\r\n      title: 'UrjaNeta Executive Analytics',\r\n      subtitle: 'Advanced voice-enabled business intelligence platform',\r\n    },\r\n    hi: {\r\n      title: 'उर्जा नेता कार्यकारी विश्लेषण',\r\n      subtitle: 'उन्नत वॉइस-सक्षम व्यापारिक बुद्धिमत्ता प्लेटफॉर्म',\r\n    }\r\n  };\r\n\r\n  const t = translations['en']; // Default to English for now\r\n\r\n  // Track module usage and update breadcrumbs for platform integration\r\n  useEffect(() => {\r\n    trackModuleUsage('urja-neta')\r\n    updateBreadcrumbs([\r\n      { label: 'UrjaNeta', url: '/urjaneta', module: 'urja-neta' },\r\n      { label: 'Executive Analytics', url: '/urjaneta', module: 'urja-neta' }\r\n    ])\r\n  }, [])\r\n\r\n  return (\r\n    <ExecutiveAnalyticsProvider>\r\n      <div className=\"space-y-6\">\r\n        {/* Header */}\r\n        <div className=\"flex items-center justify-between\">\r\n          <div className=\"flex items-center gap-4\">\r\n            <div className=\"p-3 rounded-lg bg-gradient-to-r from-blue-600 to-purple-600 text-white\">\r\n              <Brain className=\"h-8 w-8\" />\r\n            </div>\r\n            <div>\r\n              <h1 className=\"text-3xl font-bold text-gray-900\">{t.title}</h1>\r\n              <p className=\"text-gray-600 flex items-center gap-2\">\r\n                <Globe className=\"h-4 w-4\" />\r\n                {t.subtitle}\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div className=\"flex items-center gap-2\">\r\n            <div className=\"px-3 py-1 bg-green-100 text-green-800 rounded-full text-sm font-medium\">\r\n              • Live Data\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Executive Dashboard Tabs */}\r\n        <Tabs value={activeTab} onValueChange={setActiveTab} className=\"w-full\">\r\n          <TabsList className=\"grid w-full grid-cols-5 lg:grid-cols-5\">\r\n            {dashboardTabs.map((tab) => (\r\n              <TabsTrigger\r\n                key={tab.id}\r\n                value={tab.id}\r\n                className=\"flex flex-col gap-1 p-3 h-auto\"\r\n              >\r\n                <div className=\"flex items-center gap-2\">\r\n                  {tab.icon}\r\n                  <span className=\"text-xs font-medium hidden sm:inline\">{tab.label}</span>\r\n                </div>\r\n                <span className=\"text-xs text-gray-500 hidden lg:inline\">\r\n                  {tab.description}\r\n                </span>\r\n              </TabsTrigger>\r\n            ))}\r\n          </TabsList>\r\n\r\n          {/* Executive Summary Tab */}\r\n          <TabsContent value=\"summary\" className=\"space-y-6\">\r\n            <ExecutiveSummary />\r\n          </TabsContent>\r\n\r\n          {/* Voice Analytics Tab */}\r\n          <TabsContent value=\"voice\" className=\"space-y-6\">\r\n            <VoiceAnalytics />\r\n          </TabsContent>\r\n\r\n          {/* Strategic Planning Tab */}\r\n          <TabsContent value=\"strategic\" className=\"space-y-6\">\r\n            <StrategicPlanning />\r\n          </TabsContent>\r\n\r\n          {/* Carbon Analytics Tab */}\r\n          <TabsContent value=\"carbon\" className=\"space-y-6\">\r\n            <CarbonAnalytics />\r\n          </TabsContent>\r\n\r\n          {/* Competitive Intelligence Tab */}\r\n          <TabsContent value=\"competitive\" className=\"space-y-6\">\r\n            <CompetitiveIntelligence />\r\n          </TabsContent>\r\n        </Tabs>\r\n      </div>\r\n    </ExecutiveAnalyticsProvider>\r\n  );\r\n};\r\n\r\nexport default UrjaNeta;","import React, { Suspense } from 'react';\r\nimport { Routes, Route, useNavigate, useLocation } from 'react-router-dom';\r\nimport BaseLayout from '@/components/layout/BaseLayout';\r\nimport {\r\n  LayoutDashboard,\r\n  Calendar,\r\n  Route as RouteIcon,\r\n  Truck,\r\n  CheckCircle,\r\n  Settings,\r\n  History\r\n} from 'lucide-react';\r\n\r\n// Lazy loaded components for better performance\r\nconst Dashboard = React.lazy(() =>\r\n  import('./pages/Dashboard/Dashboard').then(module => ({\r\n    default: module.Dashboard\r\n  }))\r\n);\r\n\r\nconst ScheduleManager = React.lazy(() =>\r\n  import('./pages/ScheduleManager/ScheduleManager').then(module => ({\r\n    default: module.ScheduleManager\r\n  }))\r\n);\r\n\r\nconst RouteOptimization = React.lazy(() =>\r\n  import('./pages/RouteOptimization/RouteOptimization').then(module => ({\r\n    default: module.RouteOptimization\r\n  }))\r\n);\r\n\r\nconst ActiveDeliveries = React.lazy(() =>\r\n  import('./pages/ActiveDeliveries/ActiveDeliveries').then(module => ({\r\n    default: module.ActiveDeliveries\r\n  }))\r\n);\r\n\r\nconst DeliveryConfirmation = React.lazy(() =>\r\n  import('./pages/DeliveryConfirmation/DeliveryConfirmation').then(module => ({\r\n    default: module.DeliveryConfirmation\r\n  }))\r\n);\r\n\r\nconst VehicleManagement = React.lazy(() =>\r\n  import('./pages/VehicleManagement/VehicleManagement').then(module => ({\r\n    default: module.VehicleManagement\r\n  }))\r\n);\r\n\r\nconst DeliveryHistory = React.lazy(() =>\r\n  import('./pages/DeliveryHistory/DeliveryHistory').then(module => ({\r\n    default: module.DeliveryHistory\r\n  }))\r\n);\r\n\r\n// Loading component for Suspense\r\nconst PageLoader: React.FC = () => (\r\n  <div className=\"flex items-center justify-center min-h-[400px]\">\r\n    <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\r\n    <span className=\"ml-3 text-gray-600\">Loading...</span>\r\n  </div>\r\n);\r\n\r\nconst TransporterModule: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  // Base path for the transporter module\r\n  const basePath = '/transport';\r\n\r\n  const navigationItems = [\r\n    {\r\n      id: 'dashboard',\r\n      label: 'Dashboard',\r\n      icon: <LayoutDashboard className=\"w-5 h-5\" />,\r\n      onClick: () => navigate(`${basePath}/dashboard`),\r\n      isActive: location.pathname === `${basePath}/dashboard` || location.pathname === basePath\r\n    },\r\n    {\r\n      id: 'schedule',\r\n      label: 'Schedule Manager',\r\n      icon: <Calendar className=\"w-5 h-5\" />,\r\n      onClick: () => navigate(`${basePath}/schedule`),\r\n      isActive: location.pathname === `${basePath}/schedule`,\r\n      badge: '15' // Example badge for pending schedules\r\n    },\r\n    {\r\n      id: 'routes',\r\n      label: 'Route Optimization',\r\n      icon: <RouteIcon className=\"w-5 h-5\" />,\r\n      onClick: () => navigate(`${basePath}/routes`),\r\n      isActive: location.pathname === `${basePath}/routes`\r\n    },\r\n    {\r\n      id: 'deliveries',\r\n      label: 'Active Deliveries',\r\n      icon: <Truck className=\"w-5 h-5\" />,\r\n      onClick: () => navigate(`${basePath}/deliveries`),\r\n      isActive: location.pathname === `${basePath}/deliveries`,\r\n      badge: '8' // Example badge for active deliveries\r\n    },\r\n    {\r\n      id: 'confirmation',\r\n      label: 'Delivery Confirmation',\r\n      icon: <CheckCircle className=\"w-5 h-5\" />,\r\n      onClick: () => navigate(`${basePath}/confirmation`),\r\n      isActive: location.pathname === `${basePath}/confirmation`,\r\n      badge: '3' // Example badge for pending confirmations\r\n    },\r\n    {\r\n      id: 'vehicles',\r\n      label: 'Vehicle Management',\r\n      icon: <Settings className=\"w-5 h-5\" />,\r\n      onClick: () => navigate(`${basePath}/vehicles`),\r\n      isActive: location.pathname === `${basePath}/vehicles`\r\n    },\r\n    {\r\n      id: 'history',\r\n      label: 'Delivery History',\r\n      icon: <History className=\"w-5 h-5\" />,\r\n      onClick: () => navigate(`${basePath}/history`),\r\n      isActive: location.pathname === `${basePath}/history`\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <BaseLayout\r\n      moduleName=\"Transporter\"\r\n      moduleSubtitle=\"Biogas Delivery Management\"\r\n      navigationItems={navigationItems}\r\n      userInfo={{\r\n        name: \"Transport Manager\",\r\n        role: \"Operations Head\"\r\n      }}\r\n    >\r\n      <div className=\"p-6\">\r\n        <Suspense fallback={<PageLoader />}>\r\n          <Routes>\r\n            {/* Default route redirects to dashboard */}\r\n            <Route path=\"/\" element={<Dashboard />} />\r\n            <Route path=\"/dashboard\" element={<Dashboard />} />\r\n            <Route path=\"/schedule\" element={<ScheduleManager />} />\r\n            <Route path=\"/routes\" element={<RouteOptimization />} />\r\n            <Route path=\"/deliveries\" element={<ActiveDeliveries />} />\r\n            <Route path=\"/confirmation\" element={<DeliveryConfirmation />} />\r\n            <Route path=\"/vehicles\" element={<VehicleManagement />} />\r\n            <Route path=\"/history\" element={<DeliveryHistory />} />\r\n\r\n            {/* Fallback route */}\r\n            <Route path=\"*\" element={<Dashboard />} />\r\n          </Routes>\r\n        </Suspense>\r\n      </div>\r\n    </BaseLayout>\r\n  );\r\n};\r\n\r\nexport default TransporterModule;","import React, { useEffect } from 'react'\r\nimport { useNavigate, useLocation } from 'react-router-dom'\r\nimport { useAuth } from '../../contexts/AuthContext'\r\n\r\nconst RoleBasedRouter: React.FC = () => {\r\n  const { user, loading } = useAuth()\r\n  const navigate = useNavigate()\r\n  const location = useLocation()\r\n\r\n  useEffect(() => {\r\n    // Don't redirect if we're still loading or if user is not logged in\r\n    if (loading || !user) return\r\n\r\n    // Don't redirect if we're already on login page or other specific pages\r\n    if (location.pathname === '/login' ||\r\n        location.pathname === '/admin' ||\r\n        location.pathname === '/testing' ||\r\n        location.pathname === '/database-setup') {\r\n      return\r\n    }\r\n\r\n    // Role-based routing logic\r\n    const getDefaultRouteForUser = () => {\r\n      // For executives and senior leaders, prioritize executive dashboard\r\n      // But let admin appType users go to admin dashboard\r\n      if ((user.executiveLevel || user.role === 'senior_leader') && user.appType !== 'admin') {\r\n        return '/executive-dashboard'\r\n      }\r\n\r\n      // Route based on app type\r\n      switch (user.appType) {\r\n        case 'gausakhi':\r\n          // Field workers -> Gaushala Dashboard (cattle management)\r\n          if (user.role === 'field_worker') {\r\n            return '/gaushala'\r\n          }\r\n          return '/dashboard'\r\n\r\n        case 'biogassangh':\r\n          // Cluster managers -> BiogasSangh Dashboard\r\n          return '/cluster'\r\n\r\n        case 'urjavyapar':\r\n          // CBG sales -> Sales dashboard\r\n          return '/sales'\r\n\r\n        case 'urjasanyojak':\r\n          // Business development -> UrjaSanyojak Dashboard\r\n          return '/urjasanyojak'\r\n\r\n        case 'admin':\r\n          // System administrators -> Admin dashboard\r\n          return '/admin'\r\n\r\n        case 'urjaneta':\r\n          // Senior leaders/CEO -> UrjaNeta executive analytics\r\n          return '/urja-neta'\r\n\r\n        case 'shuddhidoot':\r\n          // Purification operators -> Purification dashboard\r\n          return '/purification'\r\n\r\n        default:\r\n          // Default fallback\r\n          return '/dashboard'\r\n      }\r\n    }\r\n\r\n    // Only redirect if we're on the root path or login redirect\r\n    if (location.pathname === '/' || location.pathname === '/dashboard') {\r\n      const defaultRoute = getDefaultRouteForUser()\r\n      console.log(`Routing ${user.name} (${user.role}/${user.appType}) to ${defaultRoute}`)\r\n      navigate(defaultRoute, { replace: true })\r\n    }\r\n  }, [user, loading, location, navigate])\r\n\r\n  // This component doesn't render anything, it just handles routing\r\n  return null\r\n}\r\n\r\nexport default RoleBasedRouter","import { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom'\nimport { AuthProvider, useAuth } from './contexts/AuthContext'\nimport { PlatformProvider } from './contexts/PlatformContext'\nimport Login from './pages/Login'\nimport AdminModule from './modules/admin/Admin.container'\nimport Admin from './pages/Admin'\nimport UrjaSanyojak from './pages/UrjaSanyojak'\nimport Dashboard from './pages/Dashboard'\nimport ExecutiveDashboard from './pages/ExecutiveDashboard'\nimport GauShala from './pages/GauShala'\nimport BiogasSangh from './pages/BiogasSangh'\nimport { SalesModule } from './modules/sales'\nimport { PurificationModule } from './modules/purification'\nimport UrjaNeta from './pages/UrjaNeta'\nimport TransporterModule from './modules/transporter'\nimport RoleBasedRouter from './components/routing/RoleBasedRouter'\n\nfunction PrivateRoute({ children }: { children: React.ReactNode }) {\n  const { user, loading } = useAuth()\n\n  if (loading) {\n    return <div className=\"flex items-center justify-center min-h-screen\">Loading...</div>\n  }\n\n  return user ? <>{children}</> : <Navigate to=\"/login\" />\n}\n\nfunction AppRoutes() {\n  return (\n    <Routes>\n      <Route path=\"/login\" element={<Login />} />\n      <Route path=\"/\" element={\n        <PrivateRoute>\n          <RoleBasedRouter />\n        </PrivateRoute>\n      } />\n      <Route path=\"/admin/*\" element={\n        <PrivateRoute>\n          <AdminModule />\n        </PrivateRoute>\n      } />\n      <Route path=\"/gaushala/*\" element={\n        <PrivateRoute>\n          <GauShala />\n        </PrivateRoute>\n      } />\n      <Route path=\"/cluster/*\" element={\n        <PrivateRoute>\n          <BiogasSangh />\n        </PrivateRoute>\n      } />\n      <Route path=\"/sales/*\" element={\n        <PrivateRoute>\n          <SalesModule />\n        </PrivateRoute>\n      } />\n      <Route path=\"/purification/*\" element={\n        <PrivateRoute>\n          <PurificationModule />\n        </PrivateRoute>\n      } />\n      <Route path=\"/urjaneta/*\" element={\n        <PrivateRoute>\n          <UrjaNeta />\n        </PrivateRoute>\n      } />\n      <Route path=\"/urjasanyojak/*\" element={\n        <PrivateRoute>\n          <UrjaSanyojak />\n        </PrivateRoute>\n      } />\n      <Route path=\"/admin-dashboard/*\" element={\n        <PrivateRoute>\n          <Admin />\n        </PrivateRoute>\n      } />\n      <Route path=\"/dashboard/*\" element={\n        <PrivateRoute>\n          <Dashboard />\n        </PrivateRoute>\n      } />\n      <Route path=\"/executive/*\" element={\n        <PrivateRoute>\n          <ExecutiveDashboard />\n        </PrivateRoute>\n      } />\n      <Route path=\"/transport/*\" element={\n        <PrivateRoute>\n          <TransporterModule />\n        </PrivateRoute>\n      } />\n    </Routes>\n  )\n}\n\nfunction App() {\n  return (\n    <AuthProvider>\n      <PlatformProvider>\n        <Router>\n          <AppRoutes />\n        </Router>\n      </PlatformProvider>\n    </AuthProvider>\n  )\n}\n\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom/client'\r\nimport App from './App.tsx'\r\nimport './index.css'\r\n\r\nReactDOM.createRoot(document.getElementById('root')!).render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n)\r\n"],"file":"assets/index-C8JM5vnN.js"}