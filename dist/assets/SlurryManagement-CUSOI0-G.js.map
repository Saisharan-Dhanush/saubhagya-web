{"version":3,"file":"SlurryManagement-CUSOI0-G.js","sources":["../../src/modules/purification/pages/SlurryManagement/SlurryManagement.tsx"],"sourcesContent":["/**\r\n * Slurry Management Page - SAUB-FE-003\r\n * Slurry output tracking, collection scheduling, and revenue management\r\n */\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Textarea } from '@/components/ui/textarea';\r\nimport { Alert, AlertDescription } from '@/components/ui/alert';\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\r\nimport { Progress } from '@/components/ui/progress';\r\nimport { Separator } from '@/components/ui/separator';\r\nimport {\r\n  Droplets,\r\n  Calendar,\r\n  Truck,\r\n  DollarSign,\r\n  User,\r\n  FileText,\r\n  CheckCircle,\r\n  Clock,\r\n  AlertTriangle,\r\n  BarChart3,\r\n  TrendingUp,\r\n  Leaf,\r\n  Beaker,\r\n  Plus,\r\n  Search,\r\n  Filter,\r\n  Download,\r\n  Eye,\r\n  Edit\r\n} from 'lucide-react';\r\nimport { SlurryOutput } from '../../Purification.types';\r\nimport { SLURRY_DESTINATIONS } from '../../Purification.config';\r\n\r\ninterface SlurryFormData {\r\n  cycleId: string;\r\n  volume: number;\r\n  qualityGrade: 'high' | 'medium' | 'low';\r\n  destination: 'fertilizer' | 'disposal' | 'treatment' | 'sale';\r\n  collectionScheduled: Date;\r\n  moistureContent: number;\r\n  npkContent: {\r\n    nitrogen: number;\r\n    phosphorus: number;\r\n    potassium: number;\r\n  };\r\n  notes?: string;\r\n}\r\n\r\nexport const SlurryManagement: React.FC = () => {\r\n  const [slurryOutputs, setSlurryOutputs] = useState<SlurryOutput[]>([]);\r\n  const [selectedSlurry, setSelectedSlurry] = useState<SlurryOutput | null>(null);\r\n  const [newSlurryForm, setNewSlurryForm] = useState<SlurryFormData>({\r\n    cycleId: '',\r\n    volume: 0,\r\n    qualityGrade: 'medium',\r\n    destination: 'fertilizer',\r\n    collectionScheduled: new Date(Date.now() + 24 * 60 * 60 * 1000), // Tomorrow\r\n    moistureContent: 0,\r\n    npkContent: {\r\n      nitrogen: 0,\r\n      phosphorus: 0,\r\n      potassium: 0\r\n    }\r\n  });\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [filterDestination, setFilterDestination] = useState<string>('all');\r\n\r\n  // Mock data\r\n  useEffect(() => {\r\n    const mockSlurryOutputs: SlurryOutput[] = [\r\n      {\r\n        id: 'slurry-001',\r\n        cycleId: 'cycle-001',\r\n        outputDate: new Date(Date.now() - 24 * 60 * 60 * 1000), // Yesterday\r\n        volume: 150,\r\n        qualityGrade: 'high',\r\n        destination: 'fertilizer',\r\n        collectionScheduled: new Date(Date.now() + 2 * 60 * 60 * 1000), // In 2 hours\r\n        collected: false,\r\n        revenue: 450,\r\n        environmentalCertification: 'ORGANIC-CERT-2024-001',\r\n        analysisReport: 'High nitrogen content, excellent for crop enhancement',\r\n        moistureContent: 65.5,\r\n        npkContent: {\r\n          nitrogen: 3.2,\r\n          phosphorus: 1.8,\r\n          potassium: 2.1\r\n        }\r\n      },\r\n      {\r\n        id: 'slurry-002',\r\n        cycleId: 'cycle-002',\r\n        outputDate: new Date(Date.now() - 48 * 60 * 60 * 1000), // 2 days ago\r\n        volume: 120,\r\n        qualityGrade: 'medium',\r\n        destination: 'sale',\r\n        collectionScheduled: new Date(Date.now() - 12 * 60 * 60 * 1000), // 12 hours ago\r\n        collected: true,\r\n        collectedBy: 'FarmCoop Kollective',\r\n        revenue: 360,\r\n        environmentalCertification: 'ORGANIC-CERT-2024-002',\r\n        moistureContent: 68.2,\r\n        npkContent: {\r\n          nitrogen: 2.8,\r\n          phosphorus: 1.5,\r\n          potassium: 1.9\r\n        }\r\n      },\r\n      {\r\n        id: 'slurry-003',\r\n        cycleId: 'cycle-003',\r\n        outputDate: new Date(Date.now() - 12 * 60 * 60 * 1000), // 12 hours ago\r\n        volume: 95,\r\n        qualityGrade: 'low',\r\n        destination: 'treatment',\r\n        collectionScheduled: new Date(Date.now() + 48 * 60 * 60 * 1000), // In 2 days\r\n        collected: false,\r\n        moistureContent: 72.1,\r\n        npkContent: {\r\n          nitrogen: 2.1,\r\n          phosphorus: 1.2,\r\n          potassium: 1.4\r\n        }\r\n      },\r\n      {\r\n        id: 'slurry-004',\r\n        cycleId: 'cycle-004',\r\n        outputDate: new Date(Date.now() - 6 * 60 * 60 * 1000), // 6 hours ago\r\n        volume: 180,\r\n        qualityGrade: 'high',\r\n        destination: 'fertilizer',\r\n        collectionScheduled: new Date(Date.now() + 24 * 60 * 60 * 1000), // Tomorrow\r\n        collected: false,\r\n        revenue: 540,\r\n        environmentalCertification: 'ORGANIC-CERT-2024-003',\r\n        analysisReport: 'Premium grade slurry, ideal for organic farming',\r\n        moistureContent: 64.8,\r\n        npkContent: {\r\n          nitrogen: 3.5,\r\n          phosphorus: 2.0,\r\n          potassium: 2.3\r\n        }\r\n      },\r\n      {\r\n        id: 'slurry-005',\r\n        cycleId: 'cycle-005',\r\n        outputDate: new Date(Date.now() - 3 * 60 * 60 * 1000), // 3 hours ago\r\n        volume: 85,\r\n        qualityGrade: 'medium',\r\n        destination: 'disposal',\r\n        collectionScheduled: new Date(Date.now() + 72 * 60 * 60 * 1000), // In 3 days\r\n        collected: false,\r\n        revenue: -85, // Cost for disposal\r\n        moistureContent: 75.3,\r\n        npkContent: {\r\n          nitrogen: 1.8,\r\n          phosphorus: 1.0,\r\n          potassium: 1.1\r\n        }\r\n      }\r\n    ];\r\n\r\n    setSlurryOutputs(mockSlurryOutputs);\r\n  }, []);\r\n\r\n  const getQualityColor = (grade: string) => {\r\n    switch (grade) {\r\n      case 'high': return 'bg-green-100 text-green-800';\r\n      case 'medium': return 'bg-yellow-100 text-yellow-800';\r\n      case 'low': return 'bg-red-100 text-red-800';\r\n      default: return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  const getDestinationColor = (destination: string) => {\r\n    switch (destination) {\r\n      case 'fertilizer': return 'bg-green-100 text-green-800';\r\n      case 'sale': return 'bg-blue-100 text-blue-800';\r\n      case 'treatment': return 'bg-yellow-100 text-yellow-800';\r\n      case 'disposal': return 'bg-red-100 text-red-800';\r\n      default: return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  const getDestinationPrice = (destination: string): number => {\r\n    const dest = SLURRY_DESTINATIONS.find(d => d.id === destination);\r\n    return dest?.price_per_liter || 0;\r\n  };\r\n\r\n  const filteredSlurry = slurryOutputs.filter(slurry => {\r\n    const matchesSearch = slurry.id.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                         slurry.cycleId.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                         (slurry.collectedBy && slurry.collectedBy.toLowerCase().includes(searchTerm.toLowerCase()));\r\n\r\n    const matchesDestination = filterDestination === 'all' || slurry.destination === filterDestination;\r\n\r\n    return matchesSearch && matchesDestination;\r\n  });\r\n\r\n  const handleCreateSlurry = () => {\r\n    const price = getDestinationPrice(newSlurryForm.destination);\r\n    const revenue = newSlurryForm.volume * price;\r\n\r\n    const newSlurry: SlurryOutput = {\r\n      id: `slurry-${Date.now()}`,\r\n      cycleId: newSlurryForm.cycleId,\r\n      outputDate: new Date(),\r\n      volume: newSlurryForm.volume,\r\n      qualityGrade: newSlurryForm.qualityGrade,\r\n      destination: newSlurryForm.destination,\r\n      collectionScheduled: newSlurryForm.collectionScheduled,\r\n      collected: false,\r\n      revenue: newSlurryForm.destination === 'disposal' ? -revenue : revenue,\r\n      moistureContent: newSlurryForm.moistureContent,\r\n      npkContent: newSlurryForm.npkContent,\r\n      analysisReport: newSlurryForm.notes\r\n    };\r\n\r\n    setSlurryOutputs(prev => [newSlurry, ...prev]);\r\n\r\n    // Reset form\r\n    setNewSlurryForm({\r\n      cycleId: '',\r\n      volume: 0,\r\n      qualityGrade: 'medium',\r\n      destination: 'fertilizer',\r\n      collectionScheduled: new Date(Date.now() + 24 * 60 * 60 * 1000),\r\n      moistureContent: 0,\r\n      npkContent: {\r\n        nitrogen: 0,\r\n        phosphorus: 0,\r\n        potassium: 0\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleMarkCollected = (slurryId: string, collectedBy: string) => {\r\n    setSlurryOutputs(prev => prev.map(slurry =>\r\n      slurry.id === slurryId ? { ...slurry, collected: true, collectedBy } : slurry\r\n    ));\r\n  };\r\n\r\n  const getSlurryStats = () => {\r\n    const total = slurryOutputs.length;\r\n    const pending = slurryOutputs.filter(s => !s.collected).length;\r\n    const collected = slurryOutputs.filter(s => s.collected).length;\r\n    const totalVolume = slurryOutputs.reduce((sum, s) => sum + s.volume, 0);\r\n    const totalRevenue = slurryOutputs.reduce((sum, s) => sum + (s.revenue || 0), 0);\r\n    const avgQuality = slurryOutputs.filter(s => s.qualityGrade === 'high').length / total * 100;\r\n\r\n    return { total, pending, collected, totalVolume, totalRevenue, avgQuality };\r\n  };\r\n\r\n  const stats = getSlurryStats();\r\n\r\n  const formatDate = (date: Date) => {\r\n    const now = new Date();\r\n    const diff = date.getTime() - now.getTime();\r\n    const hours = Math.ceil(diff / (1000 * 60 * 60));\r\n\r\n    if (hours === 0) return 'Now';\r\n    if (hours === 1) return 'In 1 hour';\r\n    if (hours === -1) return '1 hour ago';\r\n    if (hours > 0) return `In ${hours} hours`;\r\n    return `${Math.abs(hours)} hours ago`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold text-gray-900\">Slurry Management</h1>\r\n          <p className=\"text-gray-600 mt-1\">Track slurry output, collection, and revenue</p>\r\n        </div>\r\n        <div className=\"flex items-center space-x-3\">\r\n          <Button variant=\"outline\">\r\n            <Download className=\"w-4 h-4 mr-2\" />\r\n            Export Reports\r\n          </Button>\r\n          <Button className=\"bg-green-600 hover:bg-green-700\">\r\n            <Plus className=\"w-4 h-4 mr-2\" />\r\n            Record Output\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Stats Overview */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-6 gap-4\">\r\n        <Card>\r\n          <CardContent className=\"p-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-600\">Total Outputs</p>\r\n                <p className=\"text-2xl font-bold text-gray-900\">{stats.total}</p>\r\n              </div>\r\n              <Droplets className=\"h-8 w-8 text-gray-600\" />\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card>\r\n          <CardContent className=\"p-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-600\">Pending Collection</p>\r\n                <p className=\"text-2xl font-bold text-yellow-600\">{stats.pending}</p>\r\n              </div>\r\n              <Clock className=\"h-8 w-8 text-yellow-600\" />\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card>\r\n          <CardContent className=\"p-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-600\">Collected</p>\r\n                <p className=\"text-2xl font-bold text-green-600\">{stats.collected}</p>\r\n              </div>\r\n              <CheckCircle className=\"h-8 w-8 text-green-600\" />\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card>\r\n          <CardContent className=\"p-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-600\">Total Volume</p>\r\n                <p className=\"text-2xl font-bold text-blue-600\">{stats.totalVolume}L</p>\r\n              </div>\r\n              <BarChart3 className=\"h-8 w-8 text-blue-600\" />\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card>\r\n          <CardContent className=\"p-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-600\">Revenue</p>\r\n                <p className=\"text-2xl font-bold text-green-600\">₹{stats.totalRevenue.toLocaleString()}</p>\r\n              </div>\r\n              <DollarSign className=\"h-8 w-8 text-green-600\" />\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card>\r\n          <CardContent className=\"p-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-600\">High Quality</p>\r\n                <p className=\"text-2xl font-bold text-purple-600\">{stats.avgQuality.toFixed(0)}%</p>\r\n              </div>\r\n              <TrendingUp className=\"h-8 w-8 text-purple-600\" />\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      <Tabs defaultValue=\"outputs\" className=\"w-full\">\r\n        <TabsList className=\"grid w-full grid-cols-4\">\r\n          <TabsTrigger value=\"outputs\">Slurry Outputs ({slurryOutputs.length})</TabsTrigger>\r\n          <TabsTrigger value=\"collection\">Collection Schedule</TabsTrigger>\r\n          <TabsTrigger value=\"new\">Record Output</TabsTrigger>\r\n          <TabsTrigger value=\"analytics\">Analytics</TabsTrigger>\r\n        </TabsList>\r\n\r\n        <TabsContent value=\"outputs\" className=\"space-y-4\">\r\n          {/* Search and Filter */}\r\n          <div className=\"flex items-center space-x-4\">\r\n            <div className=\"relative flex-1\">\r\n              <Search className=\"absolute left-3 top-3 h-4 w-4 text-gray-400\" />\r\n              <Input\r\n                placeholder=\"Search by output ID, cycle, or collector...\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n                className=\"pl-9\"\r\n              />\r\n            </div>\r\n            <select\r\n              className=\"px-3 py-2 border border-gray-300 rounded-md\"\r\n              value={filterDestination}\r\n              onChange={(e) => setFilterDestination(e.target.value)}\r\n            >\r\n              <option value=\"all\">All Destinations</option>\r\n              <option value=\"fertilizer\">Fertilizer</option>\r\n              <option value=\"sale\">Direct Sale</option>\r\n              <option value=\"treatment\">Treatment</option>\r\n              <option value=\"disposal\">Disposal</option>\r\n            </select>\r\n          </div>\r\n\r\n          {/* Slurry Output List */}\r\n          <div className=\"space-y-4\">\r\n            {filteredSlurry.map((slurry) => (\r\n              <Card key={slurry.id} className=\"cursor-pointer hover:shadow-md transition-shadow\">\r\n                <CardContent className=\"p-6\">\r\n                  <div className=\"flex items-center justify-between mb-4\">\r\n                    <div>\r\n                      <h3 className=\"text-lg font-semibold\">{slurry.id}</h3>\r\n                      <p className=\"text-sm text-gray-600\">\r\n                        From cycle {slurry.cycleId} • Output on {slurry.outputDate.toLocaleDateString()}\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      {slurry.collected ? (\r\n                        <Badge className=\"bg-green-100 text-green-800\">\r\n                          Collected\r\n                        </Badge>\r\n                      ) : (\r\n                        <Badge className=\"bg-yellow-100 text-yellow-800\">\r\n                          Pending\r\n                        </Badge>\r\n                      )}\r\n                      <Badge className={getQualityColor(slurry.qualityGrade)}>\r\n                        {slurry.qualityGrade} quality\r\n                      </Badge>\r\n                      <Badge className={getDestinationColor(slurry.destination)}>\r\n                        {slurry.destination}\r\n                      </Badge>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"grid grid-cols-2 md:grid-cols-5 gap-4 mb-4\">\r\n                    <div>\r\n                      <span className=\"text-sm text-gray-600\">Volume</span>\r\n                      <p className=\"text-lg font-bold text-blue-600\">{slurry.volume} L</p>\r\n                    </div>\r\n                    <div>\r\n                      <span className=\"text-sm text-gray-600\">Collection</span>\r\n                      <p className=\"font-medium\">{formatDate(slurry.collectionScheduled)}</p>\r\n                      <p className=\"text-sm text-gray-500\">{slurry.collectionScheduled.toLocaleDateString()}</p>\r\n                    </div>\r\n                    <div>\r\n                      <span className=\"text-sm text-gray-600\">Moisture</span>\r\n                      <p className=\"font-medium\">{slurry.moistureContent}%</p>\r\n                    </div>\r\n                    <div>\r\n                      <span className=\"text-sm text-gray-600\">NPK</span>\r\n                      <p className=\"font-medium text-sm\">\r\n                        N:{slurry.npkContent.nitrogen}% P:{slurry.npkContent.phosphorus}% K:{slurry.npkContent.potassium}%\r\n                      </p>\r\n                    </div>\r\n                    <div>\r\n                      <span className=\"text-sm text-gray-600\">Revenue</span>\r\n                      <p className={`font-medium ${slurry.revenue && slurry.revenue > 0 ? 'text-green-600' : 'text-red-600'}`}>\r\n                        ₹{Math.abs(slurry.revenue || 0).toLocaleString()}\r\n                        {slurry.revenue && slurry.revenue < 0 && ' (cost)'}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {slurry.environmentalCertification && (\r\n                    <div className=\"bg-green-50 p-3 rounded-lg mb-4\">\r\n                      <div className=\"flex items-center justify-between\">\r\n                        <div className=\"flex items-center\">\r\n                          <Leaf className=\"w-5 h-5 text-green-600 mr-2\" />\r\n                          <span className=\"text-sm font-medium text-green-800\">\r\n                            Environmental Certification: {slurry.environmentalCertification}\r\n                          </span>\r\n                        </div>\r\n                        <Button size=\"sm\" variant=\"outline\">\r\n                          <Download className=\"w-3 h-3 mr-1\" />\r\n                          Download\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n\r\n                  {slurry.analysisReport && (\r\n                    <div className=\"mb-4\">\r\n                      <p className=\"text-sm text-gray-600 bg-gray-50 p-3 rounded\">\r\n                        <strong>Analysis:</strong> {slurry.analysisReport}\r\n                      </p>\r\n                    </div>\r\n                  )}\r\n\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <div className=\"flex items-center space-x-4\">\r\n                      {slurry.collected && slurry.collectedBy && (\r\n                        <div className=\"flex items-center\">\r\n                          <User className=\"w-4 h-4 text-gray-500 mr-1\" />\r\n                          <span className=\"text-sm text-gray-600\">\r\n                            Collected by {slurry.collectedBy}\r\n                          </span>\r\n                        </div>\r\n                      )}\r\n                      {!slurry.collected && (\r\n                        <span className=\"text-sm text-yellow-600\">\r\n                          Collection scheduled for {slurry.collectionScheduled.toLocaleDateString()}\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"flex space-x-2\">\r\n                      {!slurry.collected && (\r\n                        <Button\r\n                          size=\"sm\"\r\n                          variant=\"outline\"\r\n                          onClick={() => {\r\n                            const collector = prompt('Enter collector name:');\r\n                            if (collector) {\r\n                              handleMarkCollected(slurry.id, collector);\r\n                            }\r\n                          }}\r\n                        >\r\n                          Mark Collected\r\n                        </Button>\r\n                      )}\r\n                      <Button size=\"sm\" variant=\"outline\">\r\n                        <Eye className=\"w-3 h-3 mr-1\" />\r\n                        View Details\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n            ))}\r\n          </div>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"collection\" className=\"space-y-4\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center\">\r\n                <Calendar className=\"w-5 h-5 mr-2 text-blue-600\" />\r\n                Collection Schedule\r\n              </CardTitle>\r\n              <CardDescription>\r\n                Upcoming slurry collection appointments\r\n              </CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-4\">\r\n                {slurryOutputs\r\n                  .filter(s => !s.collected)\r\n                  .sort((a, b) => a.collectionScheduled.getTime() - b.collectionScheduled.getTime())\r\n                  .map((slurry) => (\r\n                    <div key={slurry.id} className=\"flex items-center justify-between border rounded-lg p-4\">\r\n                      <div className=\"flex items-center space-x-4\">\r\n                        <div className=\"bg-blue-100 p-2 rounded-lg\">\r\n                          <Truck className=\"w-5 h-5 text-blue-600\" />\r\n                        </div>\r\n                        <div>\r\n                          <h4 className=\"font-medium\">{slurry.id}</h4>\r\n                          <p className=\"text-sm text-gray-600\">\r\n                            {slurry.volume}L • {slurry.qualityGrade} quality • {slurry.destination}\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"text-right\">\r\n                        <p className=\"font-medium\">{formatDate(slurry.collectionScheduled)}</p>\r\n                        <p className=\"text-sm text-gray-600\">{slurry.collectionScheduled.toLocaleDateString()}</p>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"new\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center\">\r\n                <Plus className=\"w-5 h-5 mr-2 text-green-600\" />\r\n                Record New Slurry Output\r\n              </CardTitle>\r\n              <CardDescription>\r\n                Document slurry production from a purification cycle\r\n              </CardDescription>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-6\">\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                {/* Basic Information */}\r\n                <div className=\"space-y-4\">\r\n                  <h3 className=\"font-medium\">Basic Information</h3>\r\n                  <div className=\"space-y-3\">\r\n                    <div>\r\n                      <Label htmlFor=\"cycleId\">Source Cycle ID</Label>\r\n                      <Input\r\n                        id=\"cycleId\"\r\n                        value={newSlurryForm.cycleId}\r\n                        onChange={(e) => setNewSlurryForm(prev => ({\r\n                          ...prev,\r\n                          cycleId: e.target.value\r\n                        }))}\r\n                        placeholder=\"Enter cycle ID\"\r\n                      />\r\n                    </div>\r\n                    <div>\r\n                      <Label htmlFor=\"volume\">Volume (Liters)</Label>\r\n                      <Input\r\n                        id=\"volume\"\r\n                        type=\"number\"\r\n                        step=\"0.1\"\r\n                        min=\"0\"\r\n                        value={newSlurryForm.volume}\r\n                        onChange={(e) => setNewSlurryForm(prev => ({\r\n                          ...prev,\r\n                          volume: parseFloat(e.target.value) || 0\r\n                        }))}\r\n                        placeholder=\"Enter volume in liters\"\r\n                      />\r\n                    </div>\r\n                    <div>\r\n                      <Label htmlFor=\"qualityGrade\">Quality Grade</Label>\r\n                      <select\r\n                        id=\"qualityGrade\"\r\n                        className=\"w-full p-2 border border-gray-300 rounded-md\"\r\n                        value={newSlurryForm.qualityGrade}\r\n                        onChange={(e) => setNewSlurryForm(prev => ({\r\n                          ...prev,\r\n                          qualityGrade: e.target.value as any\r\n                        }))}\r\n                      >\r\n                        <option value=\"high\">High</option>\r\n                        <option value=\"medium\">Medium</option>\r\n                        <option value=\"low\">Low</option>\r\n                      </select>\r\n                    </div>\r\n                    <div>\r\n                      <Label htmlFor=\"destination\">Destination</Label>\r\n                      <select\r\n                        id=\"destination\"\r\n                        className=\"w-full p-2 border border-gray-300 rounded-md\"\r\n                        value={newSlurryForm.destination}\r\n                        onChange={(e) => setNewSlurryForm(prev => ({\r\n                          ...prev,\r\n                          destination: e.target.value as any\r\n                        }))}\r\n                      >\r\n                        {SLURRY_DESTINATIONS.map((dest) => (\r\n                          <option key={dest.id} value={dest.id}>\r\n                            {dest.name} (₹{dest.price_per_liter}/L)\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    </div>\r\n                    <div>\r\n                      <Label htmlFor=\"collectionDate\">Collection Scheduled</Label>\r\n                      <Input\r\n                        id=\"collectionDate\"\r\n                        type=\"datetime-local\"\r\n                        value={newSlurryForm.collectionScheduled.toISOString().slice(0, 16)}\r\n                        onChange={(e) => setNewSlurryForm(prev => ({\r\n                          ...prev,\r\n                          collectionScheduled: new Date(e.target.value)\r\n                        }))}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Quality Analysis */}\r\n                <div className=\"space-y-4\">\r\n                  <h3 className=\"font-medium\">Quality Analysis</h3>\r\n                  <div className=\"space-y-3\">\r\n                    <div>\r\n                      <Label htmlFor=\"moisture\">Moisture Content (%)</Label>\r\n                      <Input\r\n                        id=\"moisture\"\r\n                        type=\"number\"\r\n                        step=\"0.1\"\r\n                        min=\"0\"\r\n                        max=\"100\"\r\n                        value={newSlurryForm.moistureContent}\r\n                        onChange={(e) => setNewSlurryForm(prev => ({\r\n                          ...prev,\r\n                          moistureContent: parseFloat(e.target.value) || 0\r\n                        }))}\r\n                        placeholder=\"Enter moisture percentage\"\r\n                      />\r\n                    </div>\r\n                    <div>\r\n                      <Label htmlFor=\"nitrogen\">Nitrogen Content (%)</Label>\r\n                      <Input\r\n                        id=\"nitrogen\"\r\n                        type=\"number\"\r\n                        step=\"0.1\"\r\n                        min=\"0\"\r\n                        value={newSlurryForm.npkContent.nitrogen}\r\n                        onChange={(e) => setNewSlurryForm(prev => ({\r\n                          ...prev,\r\n                          npkContent: {\r\n                            ...prev.npkContent,\r\n                            nitrogen: parseFloat(e.target.value) || 0\r\n                          }\r\n                        }))}\r\n                        placeholder=\"Enter nitrogen percentage\"\r\n                      />\r\n                    </div>\r\n                    <div>\r\n                      <Label htmlFor=\"phosphorus\">Phosphorus Content (%)</Label>\r\n                      <Input\r\n                        id=\"phosphorus\"\r\n                        type=\"number\"\r\n                        step=\"0.1\"\r\n                        min=\"0\"\r\n                        value={newSlurryForm.npkContent.phosphorus}\r\n                        onChange={(e) => setNewSlurryForm(prev => ({\r\n                          ...prev,\r\n                          npkContent: {\r\n                            ...prev.npkContent,\r\n                            phosphorus: parseFloat(e.target.value) || 0\r\n                          }\r\n                        }))}\r\n                        placeholder=\"Enter phosphorus percentage\"\r\n                      />\r\n                    </div>\r\n                    <div>\r\n                      <Label htmlFor=\"potassium\">Potassium Content (%)</Label>\r\n                      <Input\r\n                        id=\"potassium\"\r\n                        type=\"number\"\r\n                        step=\"0.1\"\r\n                        min=\"0\"\r\n                        value={newSlurryForm.npkContent.potassium}\r\n                        onChange={(e) => setNewSlurryForm(prev => ({\r\n                          ...prev,\r\n                          npkContent: {\r\n                            ...prev.npkContent,\r\n                            potassium: parseFloat(e.target.value) || 0\r\n                          }\r\n                        }))}\r\n                        placeholder=\"Enter potassium percentage\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Revenue Calculation */}\r\n              {newSlurryForm.volume > 0 && (\r\n                <div className=\"bg-green-50 p-4 rounded-lg\">\r\n                  <h4 className=\"font-medium mb-2 flex items-center\">\r\n                    <DollarSign className=\"w-4 h-4 mr-2 text-green-600\" />\r\n                    Revenue Calculation\r\n                  </h4>\r\n                  <div className=\"grid grid-cols-2 gap-4 text-sm\">\r\n                    <div>\r\n                      <span className=\"text-gray-600\">Price per Liter:</span>\r\n                      <span className=\"ml-1 font-medium\">₹{getDestinationPrice(newSlurryForm.destination)}</span>\r\n                    </div>\r\n                    <div>\r\n                      <span className=\"text-gray-600\">Total Revenue:</span>\r\n                      <span className=\"ml-1 font-medium text-green-600\">\r\n                        ₹{(newSlurryForm.volume * getDestinationPrice(newSlurryForm.destination)).toLocaleString()}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              <div>\r\n                <Label htmlFor=\"notes\">Analysis Notes (Optional)</Label>\r\n                <Textarea\r\n                  id=\"notes\"\r\n                  placeholder=\"Enter analysis results, observations, or special notes...\"\r\n                  value={newSlurryForm.notes || ''}\r\n                  onChange={(e) => setNewSlurryForm(prev => ({\r\n                    ...prev,\r\n                    notes: e.target.value\r\n                  }))}\r\n                  rows={3}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"flex justify-end space-x-3\">\r\n                <Button variant=\"outline\">\r\n                  Save as Draft\r\n                </Button>\r\n                <Button\r\n                  onClick={handleCreateSlurry}\r\n                  disabled={!newSlurryForm.cycleId || !newSlurryForm.volume}\r\n                  className=\"bg-green-600 hover:bg-green-700\"\r\n                >\r\n                  <Droplets className=\"w-4 h-4 mr-2\" />\r\n                  Record Output\r\n                </Button>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"analytics\" className=\"space-y-4\">\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center\">\r\n                  <BarChart3 className=\"w-5 h-5 mr-2 text-blue-600\" />\r\n                  Production Analytics\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"space-y-4\">\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <span className=\"text-sm text-gray-600\">Average Output per Cycle</span>\r\n                    <span className=\"font-medium\">{(stats.totalVolume / stats.total).toFixed(1)}L</span>\r\n                  </div>\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <span className=\"text-sm text-gray-600\">Collection Efficiency</span>\r\n                    <span className=\"font-medium text-green-600\">{((stats.collected / stats.total) * 100).toFixed(1)}%</span>\r\n                  </div>\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <span className=\"text-sm text-gray-600\">High Quality Rate</span>\r\n                    <span className=\"font-medium\">{stats.avgQuality.toFixed(1)}%</span>\r\n                  </div>\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <span className=\"text-sm text-gray-600\">Revenue per Liter</span>\r\n                    <span className=\"font-medium\">₹{(stats.totalRevenue / stats.totalVolume).toFixed(2)}</span>\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center\">\r\n                  <Leaf className=\"w-5 h-5 mr-2 text-green-600\" />\r\n                  Environmental Impact\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"space-y-4\">\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <span className=\"text-sm text-gray-600\">Organic Fertilizer</span>\r\n                    <span className=\"font-medium\">{slurryOutputs.filter(s => s.destination === 'fertilizer').length} batches</span>\r\n                  </div>\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <span className=\"text-sm text-gray-600\">Waste Diverted</span>\r\n                    <span className=\"font-medium text-green-600\">{stats.totalVolume}L</span>\r\n                  </div>\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <span className=\"text-sm text-gray-600\">Carbon Credits</span>\r\n                    <span className=\"font-medium\">2.4 tons CO₂eq</span>\r\n                  </div>\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <span className=\"text-sm text-gray-600\">Soil Enhancement</span>\r\n                    <span className=\"font-medium\">{slurryOutputs.filter(s => s.destination === 'fertilizer').reduce((sum, s) => sum + s.volume, 0)}L applied</span>\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </TabsContent>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};"],"names":["SlurryManagement","slurryOutputs","setSlurryOutputs","useState","selectedSlurry","setSelectedSlurry","newSlurryForm","setNewSlurryForm","searchTerm","setSearchTerm","filterDestination","setFilterDestination","useEffect","mockSlurryOutputs","getQualityColor","grade","getDestinationColor","destination","getDestinationPrice","SLURRY_DESTINATIONS","d","filteredSlurry","slurry","matchesSearch","matchesDestination","handleCreateSlurry","price","revenue","newSlurry","prev","handleMarkCollected","slurryId","collectedBy","stats","total","pending","s","collected","totalVolume","sum","totalRevenue","avgQuality","formatDate","date","now","diff","hours","jsxs","jsx","Button","Download","Plus","Card","CardContent","Droplets","Clock","CheckCircle","BarChart3","DollarSign","TrendingUp","Tabs","TabsList","TabsTrigger","TabsContent","Search","Input","e","Badge","Leaf","User","collector","Eye","CardHeader","CardTitle","Calendar","CardDescription","a","b","Truck","Label","dest","Textarea"],"mappings":"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"}