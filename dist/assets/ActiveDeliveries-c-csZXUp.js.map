{"version":3,"file":"ActiveDeliveries-c-csZXUp.js","sources":["../../src/modules/transporter/pages/ActiveDeliveries/ActiveDeliveries.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Card, CardHeader, CardTitle, CardDescription, CardContent } from '@/components/ui/card';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Button } from '@/components/ui/button';\r\nimport {\r\n  Truck,\r\n  MapPin,\r\n  Clock,\r\n  User,\r\n  Phone,\r\n  Package,\r\n  Navigation,\r\n  AlertTriangle,\r\n  CheckCircle,\r\n  RefreshCw,\r\n  Eye,\r\n  Route as RouteIcon\r\n} from 'lucide-react';\r\nimport { transporterService } from '../../services/mockDataService';\r\nimport { Delivery } from '../../types';\r\n\r\nconst ActiveDeliveries: React.FC = () => {\r\n  const [deliveries, setDeliveries] = useState<Delivery[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n  const [selectedDelivery, setSelectedDelivery] = useState<Delivery | null>(null);\r\n\r\n  useEffect(() => {\r\n    loadActiveDeliveries();\r\n\r\n    // Set up auto-refresh every 30 seconds for live tracking\r\n    const interval = setInterval(loadActiveDeliveries, 30000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const loadActiveDeliveries = async () => {\r\n    try {\r\n      if (!loading) setRefreshing(true);\r\n\r\n      const response = await transporterService.getActiveDeliveries();\r\n\r\n      if (response.success) {\r\n        setDeliveries(response.data);\r\n      } else {\r\n        setError('Failed to load active deliveries');\r\n      }\r\n    } catch (err) {\r\n      setError('Failed to load active deliveries');\r\n      console.error('Active deliveries load error:', err);\r\n    } finally {\r\n      setLoading(false);\r\n      setRefreshing(false);\r\n    }\r\n  };\r\n\r\n  const getStatusBadge = (status: Delivery['status']) => {\r\n    const statusConfig = {\r\n      pending: { color: 'bg-gray-500', label: 'Pending' },\r\n      picked_up: { color: 'bg-blue-500', label: 'Picked Up' },\r\n      in_transit: { color: 'bg-yellow-500', label: 'In Transit' },\r\n      delivered: { color: 'bg-green-500', label: 'Delivered' },\r\n      failed: { color: 'bg-red-500', label: 'Failed' }\r\n    };\r\n\r\n    const config = statusConfig[status];\r\n    return (\r\n      <Badge className={`${config.color} text-white`}>\r\n        {config.label}\r\n      </Badge>\r\n    );\r\n  };\r\n\r\n  const getTimeStatus = (estimatedArrival: string) => {\r\n    const now = new Date();\r\n    const estimated = new Date(estimatedArrival);\r\n    const diffMinutes = (estimated.getTime() - now.getTime()) / (1000 * 60);\r\n\r\n    if (diffMinutes < -15) {\r\n      return { color: 'text-red-600', label: 'Late', icon: AlertTriangle };\r\n    } else if (diffMinutes < 0) {\r\n      return { color: 'text-yellow-600', label: 'Arriving Soon', icon: Clock };\r\n    } else if (diffMinutes <= 15) {\r\n      return { color: 'text-blue-600', label: 'On Time', icon: CheckCircle };\r\n    } else {\r\n      return { color: 'text-green-600', label: 'Early', icon: CheckCircle };\r\n    }\r\n  };\r\n\r\n  const formatTime = (dateString: string) => {\r\n    return new Date(dateString).toLocaleTimeString([], {\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  };\r\n\r\n  const formatDateTime = (dateString: string) => {\r\n    return new Date(dateString).toLocaleString('en-IN', {\r\n      month: 'short',\r\n      day: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  };\r\n\r\n  const getDeliveryStats = () => {\r\n    const total = deliveries.length;\r\n    const pending = deliveries.filter(d => d.status === 'pending').length;\r\n    const inTransit = deliveries.filter(d => d.status === 'in_transit').length;\r\n    const pickedUp = deliveries.filter(d => d.status === 'picked_up').length;\r\n\r\n    // Calculate estimated late deliveries\r\n    const now = new Date();\r\n    const lateCount = deliveries.filter(d => {\r\n      const estimated = new Date(d.estimatedArrival);\r\n      return estimated < now && !['delivered', 'failed'].includes(d.status);\r\n    }).length;\r\n\r\n    return { total, pending, inTransit, pickedUp, lateCount };\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"space-y-6\">\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold tracking-tight\">Active Deliveries</h1>\r\n          <p className=\"text-muted-foreground\">\r\n            Track live delivery status and locations\r\n          </p>\r\n        </div>\r\n        <div className=\"animate-pulse space-y-4\">\r\n          {Array.from({ length: 4 }).map((_, index) => (\r\n            <Card key={index}>\r\n              <CardContent className=\"pt-6\">\r\n                <div className=\"h-4 bg-gray-300 rounded w-3/4 mb-2\"></div>\r\n                <div className=\"h-4 bg-gray-300 rounded w-1/2\"></div>\r\n              </CardContent>\r\n            </Card>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"space-y-6\">\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold tracking-tight\">Active Deliveries</h1>\r\n          <p className=\"text-muted-foreground\">\r\n            Track live delivery status and locations\r\n          </p>\r\n        </div>\r\n        <Card className=\"border-red-200 bg-red-50\">\r\n          <CardContent className=\"pt-6\">\r\n            <div className=\"flex items-center space-x-2 text-red-800\">\r\n              <AlertTriangle className=\"h-5 w-5\" />\r\n              <span>{error}</span>\r\n            </div>\r\n            <Button\r\n              onClick={() => window.location.reload()}\r\n              className=\"mt-4\"\r\n              variant=\"outline\"\r\n            >\r\n              Retry\r\n            </Button>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const stats = getDeliveryStats();\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"flex justify-between items-center\">\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold tracking-tight\">Active Deliveries</h1>\r\n          <p className=\"text-muted-foreground\">\r\n            Track live delivery status and locations\r\n          </p>\r\n        </div>\r\n        <Button\r\n          onClick={loadActiveDeliveries}\r\n          disabled={refreshing}\r\n          variant=\"outline\"\r\n        >\r\n          {refreshing ? (\r\n            <RefreshCw className=\"w-4 h-4 mr-2 animate-spin\" />\r\n          ) : (\r\n            <RefreshCw className=\"w-4 h-4 mr-2\" />\r\n          )}\r\n          Refresh\r\n        </Button>\r\n      </div>\r\n\r\n      {/* Stats Cards */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-4\">\r\n        <Card>\r\n          <CardContent className=\"pt-6\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-600\">Total Active</p>\r\n                <p className=\"text-2xl font-bold\">{stats.total}</p>\r\n              </div>\r\n              <Truck className=\"h-8 w-8 text-blue-600\" />\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card>\r\n          <CardContent className=\"pt-6\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-600\">Pending</p>\r\n                <p className=\"text-2xl font-bold text-gray-600\">{stats.pending}</p>\r\n              </div>\r\n              <Clock className=\"h-8 w-8 text-gray-600\" />\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card>\r\n          <CardContent className=\"pt-6\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-600\">Picked Up</p>\r\n                <p className=\"text-2xl font-bold text-blue-600\">{stats.pickedUp}</p>\r\n              </div>\r\n              <Package className=\"h-8 w-8 text-blue-600\" />\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card>\r\n          <CardContent className=\"pt-6\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-600\">In Transit</p>\r\n                <p className=\"text-2xl font-bold text-yellow-600\">{stats.inTransit}</p>\r\n              </div>\r\n              <Navigation className=\"h-8 w-8 text-yellow-600\" />\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card>\r\n          <CardContent className=\"pt-6\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-600\">Running Late</p>\r\n                <p className=\"text-2xl font-bold text-red-600\">{stats.lateCount}</p>\r\n              </div>\r\n              <AlertTriangle className=\"h-8 w-8 text-red-600\" />\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      {/* Active Deliveries List */}\r\n      <div className=\"space-y-4\">\r\n        {deliveries.map((delivery) => {\r\n          const timeStatus = getTimeStatus(delivery.estimatedArrival);\r\n          const TimeIcon = timeStatus.icon;\r\n          const latestUpdate = delivery.trackingUpdates[delivery.trackingUpdates.length - 1];\r\n\r\n          return (\r\n            <Card key={delivery.id} className=\"hover:shadow-md transition-shadow\">\r\n              <CardContent className=\"pt-6\">\r\n                <div className=\"flex flex-col lg:flex-row justify-between space-y-4 lg:space-y-0\">\r\n                  {/* Delivery Info */}\r\n                  <div className=\"flex-1 space-y-4\">\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <div className=\"flex items-center space-x-3\">\r\n                        <h3 className=\"text-lg font-semibold\">{delivery.customerName}</h3>\r\n                        {getStatusBadge(delivery.status)}\r\n                        <div className={`flex items-center space-x-1 ${timeStatus.color}`}>\r\n                          <TimeIcon className=\"h-4 w-4\" />\r\n                          <span className=\"text-sm font-medium\">{timeStatus.label}</span>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"text-sm text-gray-500\">\r\n                        Delivery #{delivery.id}\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* Customer and Delivery Details */}\r\n                    <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 text-sm\">\r\n                      <div className=\"flex items-center space-x-2\">\r\n                        <MapPin className=\"h-4 w-4 text-gray-400\" />\r\n                        <span className=\"truncate\">{delivery.customerAddress}</span>\r\n                      </div>\r\n\r\n                      <div className=\"flex items-center space-x-2\">\r\n                        <Package className=\"h-4 w-4 text-gray-400\" />\r\n                        <span>{delivery.biogasQuantity}kg Biogas</span>\r\n                      </div>\r\n\r\n                      <div className=\"flex items-center space-x-2\">\r\n                        <Clock className=\"h-4 w-4 text-gray-400\" />\r\n                        <span>ETA: {formatTime(delivery.estimatedArrival)}</span>\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* Vehicle and Driver Info */}\r\n                    <div className=\"flex flex-wrap items-center gap-4 text-sm\">\r\n                      <div className=\"flex items-center space-x-2\">\r\n                        <Truck className=\"h-4 w-4 text-gray-400\" />\r\n                        <span>Vehicle:</span>\r\n                        <Badge variant=\"outline\">{delivery.vehicleId}</Badge>\r\n                      </div>\r\n\r\n                      <div className=\"flex items-center space-x-2\">\r\n                        <User className=\"h-4 w-4 text-gray-400\" />\r\n                        <span>Driver:</span>\r\n                        <Badge variant=\"outline\">{delivery.driverId}</Badge>\r\n                      </div>\r\n\r\n                      <div className=\"flex items-center space-x-2\">\r\n                        <RouteIcon className=\"h-4 w-4 text-gray-400\" />\r\n                        <span>Route:</span>\r\n                        <Badge variant=\"outline\">{delivery.routeId}</Badge>\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* Latest Tracking Update */}\r\n                    {latestUpdate && (\r\n                      <div className=\"p-3 bg-blue-50 border-l-4 border-blue-400 rounded-r-lg\">\r\n                        <div className=\"flex justify-between items-start\">\r\n                          <div>\r\n                            <p className=\"text-sm font-medium text-blue-800\">\r\n                              Latest Update: {latestUpdate.status}\r\n                            </p>\r\n                            {latestUpdate.notes && (\r\n                              <p className=\"text-sm text-blue-700 mt-1\">{latestUpdate.notes}</p>\r\n                            )}\r\n                          </div>\r\n                          <span className=\"text-xs text-blue-600\">\r\n                            {formatDateTime(latestUpdate.timestamp)}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n\r\n                    {/* Timing Information */}\r\n                    <div className=\"flex flex-wrap items-center gap-4 text-sm text-gray-600\">\r\n                      {delivery.startTime && (\r\n                        <div>\r\n                          <span className=\"font-medium\">Started:</span> {formatDateTime(delivery.startTime)}\r\n                        </div>\r\n                      )}\r\n                      <div>\r\n                        <span className=\"font-medium\">Estimated Arrival:</span> {formatDateTime(delivery.estimatedArrival)}\r\n                      </div>\r\n                      {delivery.actualArrival && (\r\n                        <div>\r\n                          <span className=\"font-medium\">Actual Arrival:</span> {formatDateTime(delivery.actualArrival)}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Actions */}\r\n                  <div className=\"flex flex-col space-y-2 min-w-[120px]\">\r\n                    <Button\r\n                      size=\"sm\"\r\n                      variant=\"outline\"\r\n                      onClick={() => setSelectedDelivery(delivery)}\r\n                    >\r\n                      <Eye className=\"w-4 h-4 mr-1\" />\r\n                      Track\r\n                    </Button>\r\n\r\n                    <Button\r\n                      size=\"sm\"\r\n                      variant=\"outline\"\r\n                    >\r\n                      <Phone className=\"w-4 h-4 mr-1\" />\r\n                      Call\r\n                    </Button>\r\n\r\n                    {delivery.status === 'in_transit' && (\r\n                      <Button\r\n                        size=\"sm\"\r\n                        className=\"bg-green-600 hover:bg-green-700\"\r\n                      >\r\n                        <CheckCircle className=\"w-4 h-4 mr-1\" />\r\n                        Confirm\r\n                      </Button>\r\n                    )}\r\n\r\n                    {delivery.status === 'pending' && (\r\n                      <Button\r\n                        size=\"sm\"\r\n                        className=\"bg-blue-600 hover:bg-blue-700\"\r\n                      >\r\n                        <Truck className=\"w-4 h-4 mr-1\" />\r\n                        Dispatch\r\n                      </Button>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Tracking Timeline (expandable) */}\r\n                {selectedDelivery?.id === delivery.id && (\r\n                  <div className=\"mt-6 pt-4 border-t border-gray-200\">\r\n                    <h4 className=\"text-sm font-medium mb-3\">Tracking Timeline</h4>\r\n                    <div className=\"space-y-3\">\r\n                      {delivery.trackingUpdates.map((update, index) => (\r\n                        <div key={index} className=\"flex items-start space-x-3\">\r\n                          <div className=\"w-2 h-2 bg-blue-500 rounded-full mt-2\"></div>\r\n                          <div className=\"flex-1\">\r\n                            <div className=\"flex justify-between items-start\">\r\n                              <div>\r\n                                <p className=\"text-sm font-medium\">{update.status}</p>\r\n                                {update.notes && (\r\n                                  <p className=\"text-sm text-gray-600 mt-1\">{update.notes}</p>\r\n                                )}\r\n                              </div>\r\n                              <span className=\"text-xs text-gray-500\">\r\n                                {formatDateTime(update.timestamp)}\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n\r\n                    <Button\r\n                      variant=\"ghost\"\r\n                      size=\"sm\"\r\n                      onClick={() => setSelectedDelivery(null)}\r\n                      className=\"mt-3\"\r\n                    >\r\n                      Hide Timeline\r\n                    </Button>\r\n                  </div>\r\n                )}\r\n              </CardContent>\r\n            </Card>\r\n          );\r\n        })}\r\n\r\n        {deliveries.length === 0 && (\r\n          <Card>\r\n            <CardContent className=\"pt-6\">\r\n              <div className=\"text-center py-8\">\r\n                <Truck className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\r\n                <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No active deliveries</h3>\r\n                <p className=\"text-gray-500\">All deliveries have been completed or none are scheduled.</p>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActiveDeliveries;\r\nexport { ActiveDeliveries };"],"names":["ActiveDeliveries","deliveries","setDeliveries","useState","loading","setLoading","error","setError","refreshing","setRefreshing","selectedDelivery","setSelectedDelivery","useEffect","loadActiveDeliveries","interval","response","transporterService","getStatusBadge","status","config","jsx","Badge","getTimeStatus","estimatedArrival","now","diffMinutes","AlertTriangle","Clock","CheckCircle","formatTime","dateString","formatDateTime","getDeliveryStats","total","pending","d","inTransit","pickedUp","lateCount","jsxs","_","index","Card","CardContent","Button","stats","RefreshCw","Truck","Package","Navigation","delivery","timeStatus","TimeIcon","latestUpdate","MapPin","User","RouteIcon","Eye","Phone","update"],"mappings":"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"}