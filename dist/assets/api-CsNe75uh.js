import{m as a}from"./index-C8JM5vnN.js";import"./ui-vendor-CcKJai5_.js";import"./react-vendor-C1G9MTLI.js";import"./utils-BEJD3qDL.js";import"./charts-C1Edd5FR.js";class i{token=null;setToken(e){this.token=e,e?localStorage.setItem("saubhagya_jwt_token",e):localStorage.removeItem("saubhagya_jwt_token")}getToken(){return this.token||(this.token=localStorage.getItem("saubhagya_jwt_token")),this.token}isAuthenticated(){return!!this.getToken()}clear(){this.token=null,localStorage.removeItem("saubhagya_jwt_token")}}const s=new i;class l{async login(e,r){try{const t=await fetch("http://localhost:8081/auth/oauth2/token",{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded",Authorization:"Basic "+btoa("saubhagya-web:web-app-secret-2024")},body:new URLSearchParams({grant_type:"client_credentials",scope:"iot-service commerce-service government-service reporting-service profile"})});if(!t.ok)throw new Error("OAuth2 authentication failed");const o=(await t.json()).access_token,n={id:"1",email:e,name:"Admin User",role:"admin",permissions:["cattle:read","cattle:write","transactions:read","dashboard:read"]};return s.setToken(o),{success:!0,data:{user:n,token:o},message:"Login successful"}}catch(t){return{success:!1,error:t instanceof Error?t.message:"Login failed"}}}async logout(){return s.clear(),{success:!0,data:null,message:"Logged out successfully"}}async getCurrentUser(){return s.isAuthenticated()?{success:!0,data:{id:"1",email:"admin@saubhagya.com",name:"Admin User",role:"admin",permissions:["cattle:read","cattle:write","transactions:read","dashboard:read"]}}:{success:!1,error:"Not authenticated"}}async getCattle(){try{const e=await a.callService("auth-service","/auth/api/v1/cattle/list"),r=await e.json();if(!e.ok)throw new Error(r.message||"Failed to fetch cattle");return r}catch(e){return{success:!1,error:e instanceof Error?e.message:"Failed to fetch cattle"}}}async addCattle(e){try{const r=await a.callService("auth-service","/auth/api/v1/cattle/store",{method:"POST",body:JSON.stringify(e)}),t=await r.json();if(!r.ok)throw new Error(t.message||"Failed to add cattle");return t}catch(r){return{success:!1,error:r instanceof Error?r.message:"Failed to add cattle"}}}async getDevices(){try{const e=await a.callService("iot-service","/iot/api/v1/devices"),r=await e.json();if(!e.ok)throw new Error(r.message||"Failed to fetch devices");return r}catch(e){return{success:!1,error:e instanceof Error?e.message:"Failed to fetch devices"}}}async getRFIDTags(){try{const e=await a.callService("iot-service","/iot/api/v1/rfid-tags"),r=await e.json();if(!e.ok)throw new Error(r.message||"Failed to fetch RFID tags");return r}catch(e){return{success:!1,error:e instanceof Error?e.message:"Failed to fetch RFID tags"}}}async getTransactions(){try{const e=await a.callService("transaction-service","/api/v1/transactions"),r=await e.json();if(!e.ok)throw new Error(r.message||"Failed to fetch transactions");return r}catch(e){return{success:!1,error:e instanceof Error?e.message:"Failed to fetch transactions"}}}async addTransaction(e){try{const r=await a.callService("transaction-service","/api/v1/transactions",{method:"POST",body:JSON.stringify(e)}),t=await r.json();if(!r.ok)throw new Error(t.message||"Failed to add transaction");return t}catch(r){return{success:!1,error:r instanceof Error?r.message:"Failed to add transaction"}}}async getSales(){try{const e=await a.callService("sales-service","/api/commerce/sales"),r=await e.json();if(!e.ok)throw new Error(r.message||"Failed to fetch sales");return r}catch(e){return{success:!1,error:e instanceof Error?e.message:"Failed to fetch sales"}}}async getOrders(){try{const e=await a.callService("sales-service","/api/commerce/orders"),r=await e.json();if(!e.ok)throw new Error(r.message||"Failed to fetch orders");return r}catch(e){return{success:!1,error:e instanceof Error?e.message:"Failed to fetch orders"}}}async getDashboardStats(){try{const e=await a.callService("reporting-service","/api/v1/dashboard"),r=await e.json();if(!e.ok)throw new Error(r.message||"Failed to fetch dashboard stats");return r}catch(e){return{success:!1,error:e instanceof Error?e.message:"Failed to fetch dashboard stats"}}}async getAnalytics(e){try{const r=await a.callService("reporting-service",`/api/v1/analytics/${e}`),t=await r.json();if(!r.ok)throw new Error(t.message||"Failed to fetch analytics");return t}catch(r){return{success:!1,error:r instanceof Error?r.message:"Failed to fetch analytics"}}}async getGovernmentDashboard(){try{const e=await a.callService("government-service","/government/api/v1/dashboard"),r=await e.json();if(!e.ok)throw new Error(r.message||"Failed to fetch government dashboard");return r}catch(e){return{success:!1,error:e instanceof Error?e.message:"Failed to fetch government dashboard"}}}async getSchemes(){try{const e=await a.callService("government-service","/government/api/v1/schemes"),r=await e.json();if(!e.ok)throw new Error(r.message||"Failed to fetch schemes");return r}catch(e){return{success:!1,error:e instanceof Error?e.message:"Failed to fetch schemes"}}}async healthCheck(){try{return{success:!0,data:await a.healthCheck(),message:"Health check completed"}}catch(e){return{success:!1,error:e instanceof Error?e.message:"Health check failed"}}}}const w=new l;export{w as apiService,s as authManager,w as default};
//# sourceMappingURL=api-CsNe75uh.js.map
