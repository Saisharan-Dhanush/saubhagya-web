{"version":3,"mappings":"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","names":["m","require$$0","client","ROLE_PERMISSIONS","AuthContext","createContext","useAuth","context","useContext","AuthProvider","children","user","setUser","useState","loading","setLoading","hasPermission","module","action","p","isExecutive","getAccessLevel","login","phone","password","apiService","__vitePreload","loginResponse","apiUser","token","backendRole","correctRole","getCorrectRoleForPhone","mapBackendRoleToUserRole","correctAppType","getCorrectAppTypeForPhone","getAppTypeFromRole","mappedUser","getCorrectNameForPhone","getDepartmentFromRole","mapApiPermissions","getExecutiveLevelFromRole","loginWithFallback","mockUser","logout","useEffect","savedUser","sessionStart","parsedUser","sessionAge","maxSessionAge","interval","value","jsx","apiPermissions","permissionMap","mappedPermissions","perm","PLATFORM_MODULES","PlatformContext","usePlatform","PlatformProvider","navigationState","setNavigationState","platformSettings","setPlatformSettings","sessionMetrics","setSessionMetrics","modules","navigateToModule","moduleId","preserveState","isModuleAccessible","prev","trackModuleUsage","updateBreadcrumbs","breadcrumbs","goBack","updatePlatformSettings","newSettings","updated","getAccessibleModules","getSessionSummary","saved","parsedSettings","currentPath","currentModule","__insertCSS","code","head","style","getAsset","type","SuccessIcon","InfoIcon","WarningIcon","ErrorIcon","bars","Loader","visible","className","React","_","i","CloseIcon","useIsDocumentHidden","isDocumentHidden","setIsDocumentHidden","callback","toastsCounter","Observer","subscriber","index","data","_data_id","message","rest","id","alreadyExists","toast","dismissible","promise","shouldDismiss","result","originalPromise","response","isHttpResponse","promiseData","description","toastSettings","error","unwrap","resolve","reject","ToastState","toastFunction","basicToast","getHistory","getToasts","isAction","VISIBLE_TOASTS_AMOUNT","VIEWPORT_OFFSET","MOBILE_VIEWPORT_OFFSET","TOAST_LIFETIME","TOAST_WIDTH","GAP","SWIPE_THRESHOLD","TIME_BEFORE_UNMOUNT","cn","classes","getDefaultSwipeDirections","position","y","x","directions","Toast","props","_toast_classNames","_toast_classNames1","_toast_classNames2","_toast_classNames3","_toast_classNames4","_toast_classNames5","_toast_classNames6","_toast_classNames7","_toast_classNames8","ToasterInvert","unstyled","interacting","setHeights","visibleToasts","heights","toasts","expanded","removeToast","defaultRichColors","closeButtonFromToaster","cancelButtonStyle","actionButtonStyle","descriptionClassName","durationFromToaster","gap","expandByDefault","classNames","icons","closeButtonAriaLabel","swipeDirection","setSwipeDirection","swipeOutDirection","setSwipeOutDirection","mounted","setMounted","removed","setRemoved","swiping","setSwiping","swipeOut","setSwipeOut","isSwiped","setIsSwiped","offsetBeforeRemove","setOffsetBeforeRemove","initialHeight","setInitialHeight","remainingTime","dragStartTime","toastRef","isFront","isVisible","toastType","toastClassname","toastDescriptionClassname","heightIndex","height","closeButton","_toast_closeButton","duration","closeTimerStartTimeRef","offset","lastCloseTimerStartTimeRef","pointerStartRef","toastsHeightBefore","curr","reducerIndex","invert","disabled","toastNode","h","originalHeight","newHeight","deleteToast","timeoutId","elapsedTime","getLoadingIcon","icon","_toast_richColors","_icons_close","event","_toastRef_current","_toastRef_current1","_dragStartTime_current","swipeAmountX","swipeAmountY","timeTaken","swipeAmount","velocity","_toastRef_current2","_toastRef_current3","_window_getSelection","yDelta","xDelta","_props_swipeDirections","swipeDirections","getDampening","delta","dampenedDelta","getDocumentDirection","dirAttribute","assignOffset","defaultOffset","mobileOffset","styles","isMobile","prefix","defaultValue","assignAll","key","Toaster","ref","hotkey","expand","theme","richColors","toastOptions","dir","containerAriaLabel","setToasts","filteredToasts","possiblePositions","setExpanded","setInteracting","actualTheme","setActualTheme","listRef","hotkeyLabel","lastFocusedElementRef","isFocusWithinRef","toastToRemove","_toasts_find","t","ReactDOM","indexOfExistingToast","darkMediaQuery","matches","handleKeyDown","_listRef_current","_listRef_current1","_heights_","_toastOptions_duration","_toastOptions_closeButton","Login","setPhone","setPassword","showPassword","setShowPassword","language","setLanguage","navigate","useNavigate","handleSubmit","e","jsxs","Mail","Lock","EyeOff","Eye","inputs","twMerge","clsx","buttonVariants","cva","Button","React.forwardRef","variant","size","Badge","Separator","orientation","decorative","Dialog","DialogPrimitive.Root","DialogTrigger","DialogPrimitive.Trigger","DialogPortal","DialogPrimitive.Portal","DialogOverlay","DialogPrimitive.Overlay","DialogContent","DialogPrimitive.Content","DialogPrimitive.Close","X","DialogHeader","DialogFooter","DialogTitle","DialogPrimitive.Title","DialogDescription","DialogPrimitive.Description","SERVICE_REGISTRY","MicroservicesClient","serviceName","redirectParam","index$1","endpoint","options","service","url","headers","results","name","microservicesClient","BiogasServiceClient","contributionData","page","farmerId","contributionId","paymentData","clusterId","fromDate","toDate","logger","args","ProfileService","errorText","profileService","BaseLayout","moduleName","navigationItems","moduleSubtitle","userInfo","contentClassName","isMobileMenuOpen","setIsMobileMenuOpen","showLogoutDialog","setShowLogoutDialog","isLoggingOut","setIsLoggingOut","handleLogoutClick","handleLogoutConfirm","errorMessage","handleLogoutCancel","Menu","item","Search","Bell","LogOut","Fragment","Loader2","Card","CardHeader","CardTitle","CardDescription","CardContent","CardFooter","EmptyState","Icon","title","missingEndpoints","Dashboard","BarChart3","UserManagementService","search","sortBy","sortDir","params","errorData","userManagementService","Input","UserManagement","users","setUsers","searchTerm","setSearchTerm","currentPage","setCurrentPage","totalPages","setTotalPages","totalElements","setTotalElements","pageSize","fetchUsers","handleToggleStatus","userId","handleDeleteUser","userName","handleSearch","Plus","Users","ToggleRight","u","Shield","role","ToggleLeft","Edit","Trash2","DeviceRegistry","Wifi","AuditLogs","Reports","FileText","Configuration","Settings","Label","Alert","AlertTitle","AlertDescription","ProfileEditForm","isEditing","editedName","editedLocale","saving","profileName","profileLocale","onNameChange","onLocaleChange","onSave","onCancel","User","Globe","Save","Profile","profile","setProfile","setError","setIsEditing","setSaving","setEditedName","setEditedLocale","fetchProfile","profileData","err","handleEditClick","handleCancelEdit","handleSaveProfile","updatedProfile","formatDate","dateString","getKycStatusColor","status","AlertCircle","Edit2","Phone","Calendar","permission","access","AdminModule","location","useLocation","LayoutDashboard","HardDrive","UserCircle","Routes","Route","Admin","auditLogs","setAuditLogs","systemHealth","setSystemHealth","alerts","setAlerts","searchQuery","setSearchQuery","filterRole","setFilterRole","filterStatus","setFilterStatus","activeTab","setActiveTab","mockUsers","mockLogs","updateSystemHealth","mockAlerts","getRoleColor","getStatusColor","getSeverityColor","severity","getAlertTypeIcon","Activity","Database","AlertTriangle","exportData","format","filteredUsers","formatUptime","uptime","days","hours","Download","Clock","alert","CheckCircle","log","API_BASE","AUTH_API","UrjaSanyojak","feasibilityProjects","setFeasibilityProjects","subsidyApplications","setSubsidyApplications","businessLeads","setBusinessLeads","selectedTab","setSelectedTab","loadBusinessData","loadFeasibilityProjects","loadSubsidyApplications","loadBusinessLeads","calculateFeasibility","cattleCount","submitSubsidyApplication","applicationData","updateLeadStatus","leadId","newStage","formatCurrency","amount","TrendingUp","Calculator","IndianRupee","Target","label","PlusCircle","project","MapPin","application","lead","IOT_API","BIOGAS_API","SALES_API","iotData","setIotData","pickupSchedules","setPickupSchedules","clusterMetrics","setClusterMetrics","isSpeaking","setIsSpeaking","isListening","setIsListening","transcript","setTranscript","voices","setVoices","selectedVoice","setSelectedVoice","fetchIoTData","devices","device","newData","fetchPickupSchedules","schedule","fetchClusterMetrics","metrics","latest","speakSummary","utterance","getStatusText","Volume2","Zap","Gauge","Thermometer","Truck","ExecutiveAnalyticsContext","useExecutiveAnalytics","ExecutiveAnalyticsProvider","kpis","setKpis","insights","setInsights","initiatives","setInitiatives","carbonMetrics","setCarbonMetrics","competitiveData","setCompetitiveData","voiceHistory","setVoiceHistory","refreshing","setRefreshing","prevKpis","kpi","refreshData","newInsights","addVoiceQuery","query","updateKPI","updates","updateInitiative","init","overallPerformanceScore","sum","criticalAlerts","insight","topOpportunities","a","b","TabsContext","React.createContext","Tabs","onValueChange","internalValue","setInternalValue","React.useState","currentValue","handleValueChange","TabsList","TabsTrigger","React.useContext","TabsContent","ExecutiveCommandCenter","crossModuleMetrics","setCrossModuleMetrics","executiveInsights","setExecutiveInsights","collaborationSessions","setCollaborationSessions","handleRefreshData","metric","handleModuleDeepDive","RefreshCw","Factory","Filter","Brain","Video","s","session","MessageSquare","Share2","Award","DollarSign","ExecutiveDashboard","API_BASE_URL","__vite_import_meta_env__","GAUSHALA_SERVICE_URL","masterDataCache","calculateDobFromAge","ageYears","today","birthYear","calculateAgeFromDob","dob","birthDate","age","monthDiff","apiCall","dashboardApi","limit","cattleApi","rfidTag","cattle","cattleId","health","notes","updateData","record","photoFile","formData","transactionApi","transaction","transactionId","paymentMethod","digestorId","workerId","medicineApi","threshold","medicine","foodHistoryApi","livestockId","shedId","foodHistory","masterDataApi","forceRefresh","now","inventoryApi","inventory","itemName","inventoryId","shedApi","shed","gaushalaId","milkProductionApi","cowId","startDate","endDate","healthRecordsApi","rfidApi","tagIdHex","gauShalaApi","translations","GauShalaHome","languageContext","globalT","stats","setStats","showTransactionModal","setShowTransactionModal","transactionForm","setTransactionForm","isSubmitting","setIsSubmitting","fetchDashboardData","statsResponse","formatTimeAgo","timestamp","diff","minutes","handleTransactionSubmit","transactionData","TrendingDown","Scale","collection","performer","TOKEN_STORAGE_KEY","parseJwtToken","parts","payload","decodedPayload","parsedPayload","getStoredToken","getCurrentUserContext","getLoggedInUserGaushalaId","qualityRates","CowDungTransaction","onClose","onSuccess","setFormData","errors","setErrors","locationStatus","setLocationStatus","weight","rate","total","newRate","handleInputChange","field","getCurrentLocation","validateForm","newErrors","getQualityColor","grade","Star","CreditCard","Coins","TransactionHistory","farmerName","contributions","setContributions","filteredContributions","setFilteredContributions","paymentFilter","setPaymentFilter","qualityFilter","setQualityFilter","selectedContribution","setSelectedContribution","showDetailsModal","setShowDetailsModal","loadContributions","applyFilters","filtered","c","calculateSummary","totalContributions","totalWeight","totalValue","qualityDistribution","acc","qualityKeys","avgQuality","getPaymentStatusColor","quality","handleViewDetails","contribution","handleExportData","csvData","csvContent","row","blob","summary","CattleManagement","userGaushalaId","setCattle","filteredCattle","setFilteredCattle","breeds","setBreeds","species","setSpecies","genders","setGenders","colors","setColors","locations","setLocations","showViewModal","setShowViewModal","showEditModal","setShowEditModal","showHistoryModal","setShowHistoryModal","showAttendanceModal","setShowAttendanceModal","showAttendanceLogsModal","setShowAttendanceLogsModal","selectedCattle","setSelectedCattle","attendanceHistory","setAttendanceHistory","selectedDate","setSelectedDate","attendanceLogs","setAttendanceLogs","logsCurrentPage","setLogsCurrentPage","logsSearchTerm","setLogsSearchTerm","logsPerPage","editFormData","setEditFormData","isUpdating","setIsUpdating","filter","setFilter","loadCattleData","loadMasterData","allCattle","ownedCattle","breedsRes","speciesRes","gendersRes","colorsRes","locationsRes","getBreedName","breedId","getGaushalaName","l","searchLower","getHealthColor","handleView","handleEdit","handleEditInputChange","locationField","handleEditSubmit","prevCattle","handleDelete","handleTransactionSuccess","generateMockAttendanceHistory","date","logs","firstInTime","lastOutTime","firstInLog","lastOutLog","numIntermediateLogs","j","randomTime","handleViewAttendance","historyData","handleDateChange","handleViewAttendanceLogs","dayData","day","getCurrentDayAttendance","getFilteredLogs","getPaginatedLogs","startIndex","endIndex","getTotalPages","handleScanRFID","cattleInfo","Scan","currentDay","LogIn","History","pageNum","InputField","onChange","placeholder","required","SelectField","option","TextAreaField","rows","FileUploadField","accept","Upload","AddCattle","masterDataLoading","setMasterDataLoading","isLoading","setIsLoading","isScanning","setIsScanning","setMessage","activeSection","setActiveSection","useCallback","handleScanRfid","convertToLocalDateTime","cattleData","uploadPromises","handleCancel","sections","Ruler","Baby","ArrowLeft","section","breed","gender","color","g","CattleDetail","useParams","isSaving","setIsSaving","editData","setEditData","showDeleteConfirm","setShowDeleteConfirm","newMedicalRecord","setNewMedicalRecord","showAddMedical","setShowAddMedical","loadCattleDetail","handleSave","handleAddMedicalRecord","recordData","getHealthStatusColor","Camera","AllTransactions","workerFilter","setWorkerFilter","entriesPerPage","setEntriesPerPage","loadAllContributions","totalEntries","currentData","totalTransactions","uniqueWorkers","getUniqueWorkers","workers","worker","FoodHistory","setFoodHistory","filteredData","setFilteredData","totalItems","setTotalItems","showFilters","setShowFilters","filterLivestockId","setFilterLivestockId","filterShedId","setFilterShedId","filterInventoryId","setFilterInventoryId","filterDuration","setFilterDuration","fetchFoodHistory","AddFoodHistory","sheds","setSheds","setInventory","foodHistoryData","ViewFoodHistory","setRecord","handleBack","formatFeedingDate","DetailField","EditFoodHistory","formattedDate","mockData","HealthHistory","healthHistory","setHealthHistory","filterBatchName","setFilterBatchName","filterType","setFilterType","filterDoctor","setFilterDoctor","filterIdentifyDate","setFilterIdentifyDate","filterNextFollowUpDate","setFilterNextFollowUpDate","AddMedicine","expiryDate","medicineData","Pill","ViewCattle","getSpeciesName","speciesId","getGenderName","genderId","getColorName","colorId","cattleRes","formatDateTime","isFemale","Home","Heart","Utensils","EditCattle","ViewMedicine","setMedicine","formatExpiryDate","isExpired","isExpiringSoon","thirtyDaysFromNow","expired","expiringSoon","Package","EditMedicine","MedicineList","medicines","setMedicines","filterName","setFilterName","filterManufacturer","setFilterManufacturer","filterUnit","setFilterUnit","filterExpiry","setFilterExpiry","fetchMedicines","lowStock","ShedList","loadSheds","getOccupancyPercentage","getOccupancyColor","percentage","occupancyPercent","AddShed","handleChange","EditShed","loadShed","ShedCapacityDashboard","capacityData","setCapacityData","loadCapacityData","shedsResponse","capacityResponse","getUtilizationPercentage","getUtilizationStatus","overcrowdedSheds","highUtilizationSheds","util","utilization","InventoryList","inventoryTypes","setInventoryTypes","loadInventory","loadInventoryTypes","getInventoryTypeName","typeId","isLowStock","ChevronLeft","ChevronRight","AddInventory","inventoryUnits","setInventoryUnits","loadGaushalaId","typesResponse","unitsResponse","unit","EditInventory","loadData","inventoryResponse","InventoryStockHistory","transactions","setTransactions","historyResponse","tx","MilkProductionList","records","setRecords","loadRecords","getQualityBadgeColor","Milk","RecordMilkProduction","loadingCattle","setLoadingCattle","loadCattle","calculateTotal","cow","MilkAnalytics","dateRange","setDateRange","loadStats","handleDateRangeChange","clearDateRange","Droplet","MedicalRecordsList","pendingVaccinations","setPendingVaccinations","loadPendingVaccinations","getRecordTypeBadge","vax","Syringe","AddMedicalRecord","RFIDScanHistory","scans","setScans","searchTag","setSearchTag","loadScans","handleSearchTag","clearFilters","getSignalStrengthColor","strength","Radio","scan","RFIDAnalytics","tagSearch","setTagSearch","tagStats","setTagStats","handleTagSearch","countResponse","latestResponse","BarChart","Tag","GauShala","keys","k","getCurrentTab","path","tab","getBreadcrumbs","Receipt","Warehouse","Progress","max","overviewData","digestersData","productionTrend","statusDistribution","KPICard","change","trend","getTrendColor","getTrendIcon","DigesterCard","digester","statusColor","StatusIcon","Droplets","StatusBadge","count","EnhancedBiogasDashboard","ArrowUpRight","ResponsiveContainer","LineChart","CartesianGrid","XAxis","YAxis","Tooltip","Legend","Line","PieChart","Pie","entry","Cell","CheckCircle2","Select","SelectPrimitive.Root","SelectValue","SelectPrimitive.Value","SelectTrigger","SelectPrimitive.Trigger","SelectPrimitive.Icon","ChevronDown","SelectScrollUpButton","SelectPrimitive.ScrollUpButton","ChevronUp","SelectScrollDownButton","SelectPrimitive.ScrollDownButton","SelectContent","SelectPrimitive.Portal","SelectPrimitive.Content","SelectPrimitive.Viewport","SelectLabel","SelectPrimitive.Label","SelectItem","SelectPrimitive.Item","SelectPrimitive.ItemIndicator","Check","SelectPrimitive.ItemText","SelectSeparator","SelectPrimitive.Separator","baseDigesters","useRealTimeDigesterData","digesters","setDigesters","isConnected","setIsConnected","isRealTimeActive","setIsRealTimeActive","lastUpdateTime","setLastUpdateTime","generateSensorVariation","baseValue","variation","min","newValue","updateDigesterData","prevDigesters","toggleRealTime","SensorCard","getCardStyles","ConnectionStatus","lastUpdate","onToggleRealTime","WifiOff","Pause","Play","ChartCard","subtitle","isLive","Monitor","getDetailedChartData","timeLabel","ModernDigesterMonitoring","selectedDigesterId","setSelectedDigesterId","selectedDigester","d","chartData","timer","Cpu","Beaker","Wind","AreaChart","Area","Textarea","Table","TableHeader","TableBody","TableFooter","TableRow","TableHead","TableCell","TableCaption","BIOGAS_SERVICE_URL","getAuthHeaders","biogasService","granularity","request","batches","certificates","getStatusIcon","mapBackendStatusToFrontend","backendStatus","calculateQualityScore","batch","methaneScore","efficiencyScore","BatchForm","onSubmit","BatchManagement","statusFilter","setStatusFilter","isCreateDialogOpen","setIsCreateDialogOpen","editingBatch","setEditingBatch","deletingBatch","setDeletingBatch","backendBatches","setBackendBatches","lang","mappedBatches","batchesToDisplay","filteredBatches","matchesSearch","matchesStatus","handleCreateBatch","refreshResponse","handleUpdateBatch","handleDeleteBatch","activeBatches","readyBatches","totalVolume","averageQuality","cert","disputes","resolveDispute","disputeId","resolutionData","escalateDispute","reason","DisputeResolution","selectedDispute","setSelectedDispute","filteredDisputes","dispute","handleResolveDispute","resolution","favorFarmer","getDisputeTypeLabel","XCircle","payments","farmers","PaymentReconciliation","selectedPayment","setSelectedPayment","getPaymentTypeIcon","getFarmerName","f","payment","Hash","batchId","tzName","timeZone","offsetFormatCache","offsetCache","tzOffset","offsetStr","calcOffset","captures","offsetRe","cacheStr","values","seconds","TZDateMini","adjustToSystemTZ","syncToInternal","tz","time","re","method","utcMethod","syncFromInternal","baseOffset","prevHour","systemOffset","prevHourSystemOffset","systemDSTChange","dstShift","offsetDiff","systemDate","systemSecondsOffset","secondsOffset","postBaseOffset","postOffset","postOffsetDiff","offsetChanged","postDiff","newBaseOffset","newOffset","offsetChange","TZDate","sign","month","year","locales","millisecondsInWeek","millisecondsInDay","constructFromSymbol","constructFrom","argument","addDays","_date","addMonths","dayOfMonth","endOfDesiredMonth","daysInMonth","defaultOptions","getDefaultOptions","startOfWeek","weekStartsOn","startOfISOWeek","getISOWeekYear","fourthOfJanuaryOfNextYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","getTimezoneOffsetInMilliseconds","utcDate","normalizeDates","dates","normalize","startOfDay","differenceInCalendarDays","laterDate","earlierDate","laterDate_","earlierDate_","laterStartOfDay","earlierStartOfDay","laterTimestamp","earlierTimestamp","startOfISOWeekYear","fourthOfJanuary","addWeeks","addYears","date_","isSameDay","dateLeft_","dateRight_","isDate","isValid","differenceInCalendarMonths","yearsDiff","monthsDiff","endOfMonth","normalizeInterval","start","end","eachMonthOfInterval","reversed","endTime","step","startOfMonth","endOfYear","startOfYear","endOfWeek","endOfISOWeek","formatDistanceLocale","formatDistance","tokenValue","buildFormatLongFn","width","dateFormats","timeFormats","dateTimeFormats","formatLong","formatRelativeLocale","formatRelative","_baseDate","_options","buildLocalizeFn","valuesArray","defaultWidth","eraValues","quarterValues","monthValues","dayValues","dayPeriodValues","formattingDayPeriodValues","ordinalNumber","dirtyNumber","number","rem100","localize","quarter","buildMatchFn","string","matchPattern","matchResult","matchedString","parsePatterns","findIndex","pattern","findKey","object","predicate","array","buildMatchPatternFn","parseResult","matchOrdinalNumberPattern","parseOrdinalNumberPattern","matchEraPatterns","parseEraPatterns","matchQuarterPatterns","parseQuarterPatterns","matchMonthPatterns","parseMonthPatterns","matchDayPatterns","parseDayPatterns","matchDayPeriodPatterns","parseDayPeriodPatterns","match","enUS","getDayOfYear","getISOWeek","getWeekYear","firstWeekContainsDate","firstWeekOfNextYear","firstWeekOfThisYear","startOfWeekYear","firstWeek","getWeek","addLeadingZeros","targetLength","output","lightFormatters","signedYear","dayPeriodEnumValue","numberOfDigits","milliseconds","fractionalSeconds","dayPeriodEnum","formatters","era","signedWeekYear","weekYear","twoDigitYear","isoWeekYear","week","isoWeek","dayOfYear","dayOfWeek","localDayOfWeek","isoDayOfWeek","_localize","timezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","formatTimezoneShort","delimiter","absOffset","dateLongFormatter","timeLongFormatter","dateTimeLongFormatter","datePattern","timePattern","dateTimeFormat","longFormatters","dayOfYearTokenRE","weekYearTokenRE","throwTokens","isProtectedDayOfYearToken","isProtectedWeekYearToken","warnOrThrowProtectedError","input","_message","subject","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","formatStr","locale","defaultLocale","originalDate","substring","firstCharacter","longFormatter","cleanEscapedString","formatterOptions","part","formatter","matched","getDaysInMonth","monthIndex","lastDayOfMonth","getMonth","getYear","isAfter","dateToCompare","isBefore","isSameMonth","isSameYear","setMonth","midMonth","setYear","FIVE_WEEKS","FOUR_WEEKS","getBroadcastWeeksInMonth","dateLib","firstDayOfMonth","firstDayOfWeek","broadcastStartDate","lastDateOfLastWeek","startOfBroadcastWeek","firstOfMonth","endOfBroadcastWeek","numberOfWeeks","DateLib","overrides","dateLeft","dateRight","formatted","_dateLib","numerals","digitMap","digit","localeCode","defaultDateLib","CalendarDay","displayMonth","CalendarMonth","weeks","CalendarWeek","weekNumber","CaptionLabel","Chevron","Day","modifiers","tdProps","DayButton","buttonProps","UI","DayFlag","SelectionState","Animation","Dropdown","components","selectProps","cssClassSelect","selectedOption","DropdownNav","Footer","Month","calendarMonth","displayIndex","divProps","MonthCaption","MonthGrid","Months","dayPickerContext","useDayPicker","MonthsDropdown","Nav","onPreviousClick","onNextClick","previousMonth","nextMonth","navProps","labelPrevious","labelNext","handleNextClick","handlePreviousClick","NextMonthButton","Option","PreviousMonthButton","Root","rootRef","Week","trProps","Weekday","Weekdays","WeekNumber","thProps","WeekNumberHeader","Weeks","YearsDropdown","rangeIncludesDate","range","excludeEnds","from","to","isDateInterval","matcher","isDateRange","isDateAfterType","isDateBeforeType","isDayOfWeekType","isDatesArray","dateMatchModifiers","matchers","matchersArr","diffBefore","diffAfter","isDayBefore","isDayAfter","createGetModifiers","navStart","navEnd","hidden","showOutsideDays","broadcastCalendar","computedNavStart","computedNavEnd","internalModifiersMap","customModifiersMap","isOutside","isBeforeNavStart","isAfterNavEnd","isDisabled","isHidden","isToday","modifierValue","dayFlags","customModifiers","getClassNamesForModifiers","modifiersClassNames","active","previousValue","getComponents","customComponents","getDataAttributes","dataAttributes","val","getDefaultClassNames","formatCaption","formatMonthCaption","formatDay","formatMonthDropdown","formatWeekdayName","weekday","formatWeekNumber","formatWeekNumberHeader","formatYearDropdown","formatYearCaption","getFormatters","customFormatters","defaultFormatters","getMonthOptions","getStyleForModifiers","dayModifiers","modifiersStyles","modifier","getWeekdays","ISOWeek","getYearOptions","reverse","firstNavYear","lastNavYear","years","labelDayButton","labelDay","labelGrid","labelCaption","labelGridcell","labelMonthDropdown","labelNav","_month","labelWeekday","labelWeekNumber","labelWeekNumberHeader","labelYearDropdown","asHtmlElement","element","queryMonthEls","queryMonthEl","queryCaptionEl","queryWeeksEl","queryNavEl","queryWeekdaysEl","useAnimation","rootElRef","enabled","months","focused","previousRootElSnapshotRef","useRef","previousMonthsRef","animatingRef","useLayoutEffect","previousMonths","isAfterPreviousMonth","captionAnimationClass","weeksAnimationClass","previousRootElSnapshot","rootElSnapshot","currentMonthElSnapshot","previousMonthElSnapshot","captionEl","weeksEl","previousMonthEls","currentMonthEls","el","navEl","currentMonthEl","previousMonthEl","cleanUp","previousWeekdaysEl","previousCaptionEl","previousWeeksEl","getDates","displayMonths","maxDate","firstMonth","lastMonth","fixedWeeks","startWeekFirstDate","endWeekLastDate","nOfDays","nOfMonths","extraDates","daysToAdd","getDays","calendarMonths","initialDays","weekDays","getDisplayMonths","firstDisplayedMonth","calendarEndMonth","numberOfMonths","getInitialMonth","defaultMonth","initialMonth","getMonths","dayPickerMonths","firstDateOfFirstWeek","monthDates","nrOfDaysWithFixedWeeks","dayPickerMonth","getNavMonths","startMonth","endMonth","newDate","fromYear","toYear","fromMonth","toMonth","hasYearDropdown","getNextMonth","pagedNavigation","getPreviousMonth","calendarStartMonth","getWeeks","initialWeeks","useControlledValue","controlledValue","uncontrolledValue","setValue","useCalendar","setFirstMonth","newInitialMonth","disableNavigation","onMonthChange","isDayInCalendar","goToMonth","newMonth","FocusTargetPriority","isFocusableDay","calculateFocusTarget","getModifiers","isSelected","lastFocused","focusTarget","foundFocusTargetPriority","getFocusableDate","moveBy","moveDir","refDate","focusableDate","getNextFocus","refDay","attempt","targetMonth","focusDay","useFocus","calendar","autoFocus","setLastFocused","focusedDay","setFocused","nextFocus","useMulti","initiallySelected","onSelect","internallySelected","setSelected","selected","triggerDate","newDates","addToRange","initialRange","rangeContainsDayOfWeek","dayOfWeekArr","totalDays","totalDaysLimit","rangeOverlaps","rangeLeft","rangeRight","rangeContainsModifiers","functionMatchers","useRange","excludeDisabled","newRange","useSingle","compareDate","useSelection","single","multi","DayPicker","initialProps","labels","useMemo","defaultLabels","captionLayout","mode","navLayout","onDayBlur","onDayClick","onDayFocus","onDayKeyDown","onDayMouseEnter","onDayMouseLeave","onPrevClick","showWeekNumber","select","selectedValue","blur","isFocusTarget","moveFocus","weekdays","isInteractive","handleDayClick","handleDayFocus","handleDayBlur","handleDayKeyDown","keyMap","handleDayMouseEnter","handleDayMouseLeave","handleMonthChange","selectedMonth","handleYearChange","selectedYear","contextValue","monthControl","yearControl","ariaLabel","buttonVariant","defaultClassNames","ChevronLeftIcon","ChevronRightIcon","ChevronDownIcon","CalendarDayButton","React.useRef","React.useEffect","Popover","PopoverPrimitive.Root","PopoverTrigger","PopoverPrimitive.Trigger","PopoverContent","align","sideOffset","PopoverPrimitive.Portal","PopoverPrimitive.Content","schedules","createSchedule","updateSchedule","deleteSchedule","getPriorityColor","priority","ScheduleForm","CalendarIcon","PickupScheduler","editingSchedule","setEditingSchedule","deletingSchedule","setDeletingSchedule","handleCreateSchedule","handleUpdateSchedule","handleDeleteSchedule","todaysSchedules","upcomingSchedules","inProgressSchedules","completedSchedules","totalDistance","averageEfficiency","Navigation","Map","createTransaction","getQualityStatusColor","IoTWeightCapture","onWeightCaptured","isConnecting","setIsConnecting","isWeighing","setIsWeighing","currentWeight","setCurrentWeight","connectionError","setConnectionError","simulateConnection","mockIotData","newWeight","captureWeight","simulateManualWeight","manualWeight","Weight","PhotoCapture","onPhotoAdded","photos","fileInputRef","handleFileUpload","file","reader","simulatePhotoCapture","placeholderPhoto","photo","FileImage","TransactionEntry","capturedPhotos","setCapturedPhotos","saveSuccess","setSaveSuccess","handleWeightCaptured","handlePhotoAdded","calculateTotalAmount","calculateBalanceAmount","handleSaveTransaction","recentTransactions","pendingTransactions","todaysTransactions","verifiedTransactions","Verified","Smartphone","QrCode","Switch","checked","onCheckedChange","internalChecked","setInternalChecked","isChecked","thresholds","resolveAlert","alertId","dismissAlert","updateThreshold","config","getAlertLevelColor","level","getAlertIcon","Info","getTypeIcon","Wrench","getSeverityIcon","AlertCard","onResolve","onDismiss","ThresholdConfigCard","onUpdate","localConfig","setLocalConfig","AlertsManagement","alertFilter","setAlertFilter","typeFilter","setTypeFilter","isMonitoringActive","setIsMonitoringActive","notificationSettings","setNotificationSettings","filteredAlerts","matchesLevel","matchesType","activeAlerts","warningAlerts","resolvedToday","systemStatus","handleResolveAlert","handleDismissAlert","handleAcknowledgeAll","VolumeX","RotateCcw","BiogasSangh","Gavel","renderPageContent","generateMockCustomers","generateMockContracts","generateMockInventory","generateMockOrders","generateMockInvoices","salesService","filters","customers","customer","contracts","contract","orders","order","invoices","orderId","sessionId","audioData","MetricCard","getChangeColor","getChangeIcon","RecentOrderItem","InventoryAlert","usagePercentage","performanceData","revenueData","gasTypeData","customerGrowthData","SimpleBarChart","maxValue","displayValue","SimplePieChart","SalesDashboard","setMetrics","recentOrders","setRecentOrders","inventoryAlerts","setInventoryAlerts","lastUpdated","setLastUpdated","loadDashboardData","metricsResponse","ordersResponse","alertItems","isOnTarget","isNearTarget","CustomerCard","onEdit","onViewDetails","getTypeColor","getRiskColor","risk","creditUtilization","MoreHorizontal","Building","CustomerForm","CustomerManagement","setCustomers","filteredCustomers","setFilteredCustomers","setFilters","selectedCustomer","setSelectedCustomer","showCustomerForm","setShowCustomerForm","showCustomerDetails","setShowCustomerDetails","loadCustomers","handleCreateCustomer","handleEditCustomer","handleViewCustomerDetails","handleSaveCustomer","customerData","highRisk","totalRevenue","ContractCard","onView","onSign","daysRemaining","diffTime","contractProgress","elapsed","PenTool","ContractForm","calculateTotalValue","contractData","ContractManagement","setContracts","selectedContract","setSelectedContract","showContractForm","setShowContractForm","showContractDetails","setShowContractDetails","showSigningInterface","setShowSigningInterface","contractsResponse","customersResponse","handleCreateContract","handleEditContract","handleViewContract","handleSignContract","handleSaveContract","newVersion","getCustomerById","draft","daysToExpiry","doc","Send","InventoryCard","availabilityPercentage","isPesoExpiring","InventoryManagement","filteredInventory","setFilteredInventory","lowStockItems","pesoExpiringItems","OrderCard","OrderManagement","setOrders","filteredOrders","setFilteredOrders","o","VoiceInvoicing","isRecording","setIsRecording","currentSession","setCurrentSession","transcription","setTranscription","confidence","setConfidence","startRecording","stopRecording","generateInvoice","Mic","MicOff","Square","Languages","PaymentTracking","setPayments","mockPayments","DeliveryScheduling","mockDeliveries","delivery","PriceBenchmarking","mockPriceData","getCompetitiveColor","ComplianceReports","mockComplianceData","SalesModule","ShoppingCart","CycleManagement","QualityControl","MaintenanceManagement","InventoryTransfer","SlurryManagement","RealTimeMonitoring","PageLoader","PurificationModule","basePath","Suspense","ExecutiveSummary","getKPIIcon","category","ArrowDownRight","Minus","getPerformanceColor","score","getConfidenceColor","formatValue","summaryText","VoiceAnalytics","queryHistory","setQueryHistory","consentGiven","setConsentGiven","showConsentDialog","setShowConsentDialog","privacySettings","setPrivacySettings","sessionTimeRemaining","setSessionTimeRemaining","encryptedData","setEncryptedData","privacyMode","setPrivacyMode","recognitionRef","synthRef","sessionTimeoutRef","simpleEncrypt","text","char","sanitizeSensitiveData","anonymizeTranscript","voiceCommands","executiveQueries","requestVoiceConsent","grantConsent","consentData","startVoiceSession","newSession","endVoiceSession","updatedSession","encryptedSessionData","processVoiceInput","processedInput","encryptedInput","SpeechRecognition","finalTranscript","interimTranscript","processVoiceQuery","speakResponse","storedConsent","consentAge","maxConsentAge","queryType","identifyQueryType","generateResponse","voiceQuery","lowerQuery","patterns","startListening","stopListening","stopSpeaking","toggleLanguage","command","Leaf","example","idx","StrategicPlanning","selectedScenario","setSelectedScenario","selectedTimeframe","setSelectedTimeframe","showAdvancedMetrics","setShowAdvancedMetrics","scenarioModels","investmentOpportunities","geographicOpportunities","monteCarloResults","sensitivityData","riskAssessments","PlayCircle","PauseCircle","getSeverityScore","probability","impact","speakStrategicSummary","activeInitiatives","totalBudget","avgRoi","totalInvestmentOpps","avgNpv","topGeographicOpp","highRisks","r","exportReport","reportData","selectedScenarioData","scenario","initiative","opportunity","opportunities","totalInvestment","sector","sectorOpportunities","risks","region","variable","phase","goal","factor","CarbonAnalytics","selectedMetric","setSelectedMetric","showProjections","setShowProjections","carbonCredits","esgMetrics","marketTrends","complianceFrameworks","getESGRatingColor","rating","getCreditTypeIcon","Recycle","speakCarbonSummary","totalCredits","cc","avgPrice","exportCarbonReport","credit","typeCredits","frameworks","framework","req","currentPrice","pastPrice","opp","multiplier","projectedPrice","projectedRevenue","projection","target","CompetitiveIntelligence","selectedSegment","setSelectedSegment","showAdvancedAnalysis","setShowAdvancedAnalysis","competitors","marketSegments","swotAnalysis","benchmarkMetrics","competitiveAdvantages","getThreatColor","getImpactColor","TrendingFlat","getSustainabilityColor","sustainability","speakCompetitiveSummary","marketShare","ranking","strengthScore","exportCompetitiveReport","Lightbulb","company","segment","Crown","barrier","competitor","weakness","move","threat","advantage","evidence","Network","categoryAdvantages","avgStrength","sustainabilityAdvantages","UrjaNeta","dashboardTabs","ScheduleManager","RouteOptimization","ActiveDeliveries","DeliveryConfirmation","VehicleManagement","DeliveryHistory","TransporterModule","RouteIcon","RoleBasedRouter","getDefaultRouteForUser","defaultRoute","PrivateRoute","Navigate","AppRoutes","App","Router"],"ignoreList":[0,3,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237],"sources":["../../node_modules/react-dom/client.js","../../src/contexts/AuthContext.tsx","../../src/contexts/PlatformContext.tsx","../../node_modules/sonner/dist/index.mjs","../../src/pages/Login.tsx","../../src/lib/utils.ts","../../src/components/ui/button.tsx","../../src/components/ui/badge.tsx","../../src/components/ui/separator.tsx","../../src/components/ui/dialog.tsx","../../src/services/microservices/index.ts","../../src/utils/logger.ts","../../src/services/admin/profile.service.ts","../../src/components/layout/BaseLayout.tsx","../../src/components/ui/card.tsx","../../src/components/ui/empty-state.tsx","../../src/modules/admin/pages/Dashboard/Dashboard.tsx","../../src/services/admin/user-management.service.ts","../../src/components/ui/input.tsx","../../src/modules/admin/pages/UserManagement/UserManagement.tsx","../../src/modules/admin/pages/DeviceRegistry/DeviceRegistry.tsx","../../src/modules/admin/pages/AuditLogs/AuditLogs.tsx","../../src/modules/admin/pages/Reports/Reports.tsx","../../src/modules/admin/pages/Configuration/Configuration.tsx","../../src/components/ui/label.tsx","../../src/components/ui/alert.tsx","../../src/modules/admin/pages/Profile/ProfileEditForm.tsx","../../src/modules/admin/pages/Profile/Profile.tsx","../../src/modules/admin/Admin.container.tsx","../../src/pages/Admin.tsx","../../src/pages/UrjaSanyojak.tsx","../../src/pages/Dashboard.tsx","../../src/contexts/ExecutiveAnalyticsContext.tsx","../../src/components/ui/tabs.tsx","../../src/components/executive/ExecutiveCommandCenter.tsx","../../src/pages/ExecutiveDashboard.tsx","../../src/services/gaushala/api.ts","../../src/pages/gaushala/GauShalaHome.tsx","../../src/utils/auth.ts","../../src/components/gaushala/CowDungTransaction.tsx","../../src/components/gaushala/TransactionHistory.tsx","../../src/pages/gaushala/CattleManagement.tsx","../../src/pages/gaushala/CattleFormFields.tsx","../../src/pages/gaushala/AddCattle.tsx","../../src/pages/gaushala/CattleDetail.tsx","../../src/pages/gaushala/AllTransactions.tsx","../../src/pages/gaushala/FoodHistory.tsx","../../src/pages/gaushala/AddFoodHistory.tsx","../../src/pages/gaushala/ViewFoodHistory.tsx","../../src/pages/gaushala/EditFoodHistory.tsx","../../src/pages/gaushala/HealthHistory.tsx","../../src/pages/gaushala/AddMedicine.tsx","../../src/pages/gaushala/ViewCattle.tsx","../../src/pages/gaushala/EditCattle.tsx","../../src/pages/gaushala/ViewMedicine.tsx","../../src/pages/gaushala/EditMedicine.tsx","../../src/pages/gaushala/MedicineList.tsx","../../src/pages/gaushala/sheds/ShedList.tsx","../../src/pages/gaushala/sheds/AddShed.tsx","../../src/pages/gaushala/sheds/EditShed.tsx","../../src/pages/gaushala/sheds/ShedCapacityDashboard.tsx","../../src/pages/gaushala/inventory/InventoryList.tsx","../../src/pages/gaushala/inventory/AddInventory.tsx","../../src/pages/gaushala/inventory/EditInventory.tsx","../../src/pages/gaushala/inventory/InventoryStockHistory.tsx","../../src/pages/gaushala/production/MilkProductionList.tsx","../../src/pages/gaushala/production/RecordMilkProduction.tsx","../../src/pages/gaushala/production/MilkAnalytics.tsx","../../src/pages/gaushala/health/MedicalRecordsList.tsx","../../src/pages/gaushala/health/AddMedicalRecord.tsx","../../src/pages/gaushala/rfid/RFIDScanHistory.tsx","../../src/pages/gaushala/rfid/RFIDAnalytics.tsx","../../src/pages/GauShala.tsx","../../src/components/ui/progress.tsx","../../src/pages/biogassangh/EnhancedBiogasDashboard.tsx","../../src/components/ui/select.tsx","../../src/pages/biogassangh/ModernDigesterMonitoring.tsx","../../src/components/ui/textarea.tsx","../../src/components/ui/table.tsx","../../src/services/biogasService.ts","../../src/pages/biogassangh/BatchManagement.tsx","../../src/pages/biogassangh/DisputeResolution.tsx","../../src/pages/biogassangh/PaymentReconciliation.tsx","../../node_modules/@date-fns/tz/tzName/index.js","../../node_modules/@date-fns/tz/tzOffset/index.js","../../node_modules/@date-fns/tz/date/mini.js","../../node_modules/@date-fns/tz/date/index.js","../../node_modules/react-day-picker/node_modules/date-fns/constants.js","../../node_modules/react-day-picker/node_modules/date-fns/constructFrom.js","../../node_modules/react-day-picker/node_modules/date-fns/toDate.js","../../node_modules/react-day-picker/node_modules/date-fns/addDays.js","../../node_modules/react-day-picker/node_modules/date-fns/addMonths.js","../../node_modules/react-day-picker/node_modules/date-fns/_lib/defaultOptions.js","../../node_modules/react-day-picker/node_modules/date-fns/startOfWeek.js","../../node_modules/react-day-picker/node_modules/date-fns/startOfISOWeek.js","../../node_modules/react-day-picker/node_modules/date-fns/getISOWeekYear.js","../../node_modules/react-day-picker/node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.js","../../node_modules/react-day-picker/node_modules/date-fns/_lib/normalizeDates.js","../../node_modules/react-day-picker/node_modules/date-fns/startOfDay.js","../../node_modules/react-day-picker/node_modules/date-fns/differenceInCalendarDays.js","../../node_modules/react-day-picker/node_modules/date-fns/startOfISOWeekYear.js","../../node_modules/react-day-picker/node_modules/date-fns/addWeeks.js","../../node_modules/react-day-picker/node_modules/date-fns/addYears.js","../../node_modules/react-day-picker/node_modules/date-fns/max.js","../../node_modules/react-day-picker/node_modules/date-fns/min.js","../../node_modules/react-day-picker/node_modules/date-fns/isSameDay.js","../../node_modules/react-day-picker/node_modules/date-fns/isDate.js","../../node_modules/react-day-picker/node_modules/date-fns/isValid.js","../../node_modules/react-day-picker/node_modules/date-fns/differenceInCalendarMonths.js","../../node_modules/react-day-picker/node_modules/date-fns/endOfMonth.js","../../node_modules/react-day-picker/node_modules/date-fns/_lib/normalizeInterval.js","../../node_modules/react-day-picker/node_modules/date-fns/eachMonthOfInterval.js","../../node_modules/react-day-picker/node_modules/date-fns/startOfMonth.js","../../node_modules/react-day-picker/node_modules/date-fns/endOfYear.js","../../node_modules/react-day-picker/node_modules/date-fns/startOfYear.js","../../node_modules/react-day-picker/node_modules/date-fns/endOfWeek.js","../../node_modules/react-day-picker/node_modules/date-fns/endOfISOWeek.js","../../node_modules/react-day-picker/node_modules/date-fns/locale/en-US/_lib/formatDistance.js","../../node_modules/react-day-picker/node_modules/date-fns/locale/_lib/buildFormatLongFn.js","../../node_modules/react-day-picker/node_modules/date-fns/locale/en-US/_lib/formatLong.js","../../node_modules/react-day-picker/node_modules/date-fns/locale/en-US/_lib/formatRelative.js","../../node_modules/react-day-picker/node_modules/date-fns/locale/_lib/buildLocalizeFn.js","../../node_modules/react-day-picker/node_modules/date-fns/locale/en-US/_lib/localize.js","../../node_modules/react-day-picker/node_modules/date-fns/locale/_lib/buildMatchFn.js","../../node_modules/react-day-picker/node_modules/date-fns/locale/_lib/buildMatchPatternFn.js","../../node_modules/react-day-picker/node_modules/date-fns/locale/en-US/_lib/match.js","../../node_modules/react-day-picker/node_modules/date-fns/locale/en-US.js","../../node_modules/react-day-picker/node_modules/date-fns/getDayOfYear.js","../../node_modules/react-day-picker/node_modules/date-fns/getISOWeek.js","../../node_modules/react-day-picker/node_modules/date-fns/getWeekYear.js","../../node_modules/react-day-picker/node_modules/date-fns/startOfWeekYear.js","../../node_modules/react-day-picker/node_modules/date-fns/getWeek.js","../../node_modules/react-day-picker/node_modules/date-fns/_lib/addLeadingZeros.js","../../node_modules/react-day-picker/node_modules/date-fns/_lib/format/lightFormatters.js","../../node_modules/react-day-picker/node_modules/date-fns/_lib/format/formatters.js","../../node_modules/react-day-picker/node_modules/date-fns/_lib/format/longFormatters.js","../../node_modules/react-day-picker/node_modules/date-fns/_lib/protectedTokens.js","../../node_modules/react-day-picker/node_modules/date-fns/format.js","../../node_modules/react-day-picker/node_modules/date-fns/getDaysInMonth.js","../../node_modules/react-day-picker/node_modules/date-fns/getMonth.js","../../node_modules/react-day-picker/node_modules/date-fns/getYear.js","../../node_modules/react-day-picker/node_modules/date-fns/isAfter.js","../../node_modules/react-day-picker/node_modules/date-fns/isBefore.js","../../node_modules/react-day-picker/node_modules/date-fns/isSameMonth.js","../../node_modules/react-day-picker/node_modules/date-fns/isSameYear.js","../../node_modules/react-day-picker/node_modules/date-fns/setMonth.js","../../node_modules/react-day-picker/node_modules/date-fns/setYear.js","../../node_modules/react-day-picker/dist/esm/helpers/getBroadcastWeeksInMonth.js","../../node_modules/react-day-picker/dist/esm/helpers/startOfBroadcastWeek.js","../../node_modules/react-day-picker/dist/esm/helpers/endOfBroadcastWeek.js","../../node_modules/react-day-picker/dist/esm/classes/DateLib.js","../../node_modules/react-day-picker/dist/esm/classes/CalendarDay.js","../../node_modules/react-day-picker/dist/esm/classes/CalendarMonth.js","../../node_modules/react-day-picker/dist/esm/classes/CalendarWeek.js","../../node_modules/react-day-picker/dist/esm/components/Button.js","../../node_modules/react-day-picker/dist/esm/components/CaptionLabel.js","../../node_modules/react-day-picker/dist/esm/components/Chevron.js","../../node_modules/react-day-picker/dist/esm/components/Day.js","../../node_modules/react-day-picker/dist/esm/components/DayButton.js","../../node_modules/react-day-picker/dist/esm/UI.js","../../node_modules/react-day-picker/dist/esm/components/Dropdown.js","../../node_modules/react-day-picker/dist/esm/components/DropdownNav.js","../../node_modules/react-day-picker/dist/esm/components/Footer.js","../../node_modules/react-day-picker/dist/esm/components/Month.js","../../node_modules/react-day-picker/dist/esm/components/MonthCaption.js","../../node_modules/react-day-picker/dist/esm/components/MonthGrid.js","../../node_modules/react-day-picker/dist/esm/components/Months.js","../../node_modules/react-day-picker/dist/esm/useDayPicker.js","../../node_modules/react-day-picker/dist/esm/components/MonthsDropdown.js","../../node_modules/react-day-picker/dist/esm/components/Nav.js","../../node_modules/react-day-picker/dist/esm/components/NextMonthButton.js","../../node_modules/react-day-picker/dist/esm/components/Option.js","../../node_modules/react-day-picker/dist/esm/components/PreviousMonthButton.js","../../node_modules/react-day-picker/dist/esm/components/Root.js","../../node_modules/react-day-picker/dist/esm/components/Select.js","../../node_modules/react-day-picker/dist/esm/components/Week.js","../../node_modules/react-day-picker/dist/esm/components/Weekday.js","../../node_modules/react-day-picker/dist/esm/components/Weekdays.js","../../node_modules/react-day-picker/dist/esm/components/WeekNumber.js","../../node_modules/react-day-picker/dist/esm/components/WeekNumberHeader.js","../../node_modules/react-day-picker/dist/esm/components/Weeks.js","../../node_modules/react-day-picker/dist/esm/components/YearsDropdown.js","../../node_modules/react-day-picker/dist/esm/utils/rangeIncludesDate.js","../../node_modules/react-day-picker/dist/esm/utils/typeguards.js","../../node_modules/react-day-picker/dist/esm/utils/dateMatchModifiers.js","../../node_modules/react-day-picker/dist/esm/helpers/createGetModifiers.js","../../node_modules/react-day-picker/dist/esm/helpers/getClassNamesForModifiers.js","../../node_modules/react-day-picker/dist/esm/helpers/getComponents.js","../../node_modules/react-day-picker/dist/esm/helpers/getDataAttributes.js","../../node_modules/react-day-picker/dist/esm/helpers/getDefaultClassNames.js","../../node_modules/react-day-picker/dist/esm/formatters/formatCaption.js","../../node_modules/react-day-picker/dist/esm/formatters/formatDay.js","../../node_modules/react-day-picker/dist/esm/formatters/formatMonthDropdown.js","../../node_modules/react-day-picker/dist/esm/formatters/formatWeekdayName.js","../../node_modules/react-day-picker/dist/esm/formatters/formatWeekNumber.js","../../node_modules/react-day-picker/dist/esm/formatters/formatWeekNumberHeader.js","../../node_modules/react-day-picker/dist/esm/formatters/formatYearDropdown.js","../../node_modules/react-day-picker/dist/esm/helpers/getFormatters.js","../../node_modules/react-day-picker/dist/esm/helpers/getMonthOptions.js","../../node_modules/react-day-picker/dist/esm/helpers/getStyleForModifiers.js","../../node_modules/react-day-picker/dist/esm/helpers/getWeekdays.js","../../node_modules/react-day-picker/dist/esm/helpers/getYearOptions.js","../../node_modules/react-day-picker/dist/esm/labels/labelDayButton.js","../../node_modules/react-day-picker/dist/esm/labels/labelGrid.js","../../node_modules/react-day-picker/dist/esm/labels/labelGridcell.js","../../node_modules/react-day-picker/dist/esm/labels/labelMonthDropdown.js","../../node_modules/react-day-picker/dist/esm/labels/labelNav.js","../../node_modules/react-day-picker/dist/esm/labels/labelNext.js","../../node_modules/react-day-picker/dist/esm/labels/labelPrevious.js","../../node_modules/react-day-picker/dist/esm/labels/labelWeekday.js","../../node_modules/react-day-picker/dist/esm/labels/labelWeekNumber.js","../../node_modules/react-day-picker/dist/esm/labels/labelWeekNumberHeader.js","../../node_modules/react-day-picker/dist/esm/labels/labelYearDropdown.js","../../node_modules/react-day-picker/dist/esm/useAnimation.js","../../node_modules/react-day-picker/dist/esm/helpers/getDates.js","../../node_modules/react-day-picker/dist/esm/helpers/getDays.js","../../node_modules/react-day-picker/dist/esm/helpers/getDisplayMonths.js","../../node_modules/react-day-picker/dist/esm/helpers/getInitialMonth.js","../../node_modules/react-day-picker/dist/esm/helpers/getMonths.js","../../node_modules/react-day-picker/dist/esm/helpers/getNavMonth.js","../../node_modules/react-day-picker/dist/esm/helpers/getNextMonth.js","../../node_modules/react-day-picker/dist/esm/helpers/getPreviousMonth.js","../../node_modules/react-day-picker/dist/esm/helpers/getWeeks.js","../../node_modules/react-day-picker/dist/esm/helpers/useControlledValue.js","../../node_modules/react-day-picker/dist/esm/useCalendar.js","../../node_modules/react-day-picker/dist/esm/helpers/calculateFocusTarget.js","../../node_modules/react-day-picker/dist/esm/helpers/getFocusableDate.js","../../node_modules/react-day-picker/dist/esm/helpers/getNextFocus.js","../../node_modules/react-day-picker/dist/esm/useFocus.js","../../node_modules/react-day-picker/dist/esm/selection/useMulti.js","../../node_modules/react-day-picker/dist/esm/utils/addToRange.js","../../node_modules/react-day-picker/dist/esm/utils/rangeContainsDayOfWeek.js","../../node_modules/react-day-picker/dist/esm/utils/rangeOverlaps.js","../../node_modules/react-day-picker/dist/esm/utils/rangeContainsModifiers.js","../../node_modules/react-day-picker/dist/esm/selection/useRange.js","../../node_modules/react-day-picker/dist/esm/selection/useSingle.js","../../node_modules/react-day-picker/dist/esm/useSelection.js","../../node_modules/react-day-picker/dist/esm/DayPicker.js","../../src/components/ui/calendar.tsx","../../src/components/ui/popover.tsx","../../src/pages/biogassangh/PickupScheduler.tsx","../../src/pages/biogassangh/TransactionEntry.tsx","../../src/components/ui/switch.tsx","../../src/pages/biogassangh/AlertsManagement.tsx","../../src/components/BiogasSanghProper.tsx","../../src/modules/sales/services/salesService.ts","../../src/modules/sales/pages/SalesDashboard.tsx","../../src/modules/sales/pages/CustomerManagement.tsx","../../src/modules/sales/pages/ContractManagement.tsx","../../src/modules/sales/pages/InventoryManagement.tsx","../../src/modules/sales/pages/OrderManagement.tsx","../../src/modules/sales/pages/VoiceInvoicing.tsx","../../src/modules/sales/pages/PaymentTracking.tsx","../../src/modules/sales/pages/DeliveryScheduling.tsx","../../src/modules/sales/pages/PriceBenchmarking.tsx","../../src/modules/sales/pages/ComplianceReports.tsx","../../src/modules/sales/Sales.container.tsx","../../src/modules/purification/Purification.container.tsx","../../src/components/executive/ExecutiveSummary.tsx","../../src/components/voice/VoiceAnalytics.tsx","../../src/components/executive/StrategicPlanning.tsx","../../src/components/executive/CarbonAnalytics.tsx","../../src/components/executive/CompetitiveIntelligence.tsx","../../src/pages/UrjaNeta.tsx","../../src/modules/transporter/Transporter.container.tsx","../../src/components/routing/RoleBasedRouter.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","import React, { createContext, useContext, useEffect, useState } from 'react'\r\n\r\nexport type UserRole = 'field_worker' | 'cluster_manager' | 'cbg_sales' | 'business_dev' | 'admin' | 'senior_leader' | 'purification_operator' | 'transporter'\r\n\r\nexport interface Permission {\r\n  module: string\r\n  actions: string[]\r\n}\r\n\r\nexport interface User {\r\n  id: string\r\n  phone: string\r\n  email?: string\r\n  name: string\r\n  role: UserRole\r\n  department?: string\r\n  permissions: Permission[]\r\n  lastAccess?: Date\r\n  appType: 'gausakhi' | 'biogassangh' | 'urjavyapar' | 'urjasanyojak' | 'admin' | 'urjaneta' | 'shuddhidoot'\r\n  executiveLevel?: 'ceo' | 'cfo' | 'coo' | 'vp' | 'director'\r\n  // Backend response fields\r\n  externalId?: string\r\n  locale?: string\r\n  kycStatus?: string\r\n  isActive?: boolean\r\n  roles?: string[]\r\n  governmentAccess?: any[]\r\n}\r\n\r\nexport const ROLE_PERMISSIONS: Record<UserRole, Permission[]> = {\r\n  field_worker: [\r\n    { module: 'rfid', actions: ['scan', 'sync'] },\r\n    { module: 'collection', actions: ['log', 'voice'] },\r\n    { module: 'iot', actions: ['sync', 'update'] },\r\n    { module: 'gps', actions: ['track', 'update'] }\r\n  ],\r\n  cluster_manager: [\r\n    { module: 'slurry', actions: ['monitor', 'alert'] },\r\n    { module: 'digester', actions: ['monitor', 'alert'] },\r\n    { module: 'pickup', actions: ['schedule', 'manage'] },\r\n    { module: 'disputes', actions: ['resolve', 'track'] }\r\n  ],\r\n  cbg_sales: [\r\n    { module: 'inventory', actions: ['manage', 'track'] },\r\n    { module: 'invoicing', actions: ['create', 'send'] },\r\n    { module: 'crm', actions: ['manage', 'update'] },\r\n    { module: 'peso', actions: ['comply', 'report'] },\r\n    { module: 'upi', actions: ['process', 'reconcile'] }\r\n  ],\r\n  business_dev: [\r\n    { module: 'mapping', actions: ['create', 'update'] },\r\n    { module: 'subsidy', actions: ['assist', 'track'] },\r\n    { module: 'feasibility', actions: ['calculate', 'analyze'] },\r\n    { module: 'pipeline', actions: ['track', 'update'] }\r\n  ],\r\n  admin: [\r\n    { module: 'users', actions: ['create', 'read', 'update', 'delete'] },\r\n    { module: 'devices', actions: ['manage', 'configure'] },\r\n    { module: 'permissions', actions: ['assign', 'revoke'] },\r\n    { module: 'audit', actions: ['view', 'export'] },\r\n    { module: 'alerts', actions: ['configure', 'manage'] }\r\n  ],\r\n  senior_leader: [\r\n    { module: 'voice_kpis', actions: ['view', 'analyze'] },\r\n    { module: 'revenue', actions: ['predict', 'analyze'] },\r\n    { module: 'carbon', actions: ['trade', 'track'] },\r\n    { module: 'strategic', actions: ['plan', 'approve'] }\r\n  ],\r\n  purification_operator: [\r\n    { module: 'ch4_monitoring', actions: ['monitor', 'alert'] },\r\n    { module: 'flow_rate', actions: ['monitor', 'adjust'] },\r\n    { module: 'maintenance', actions: ['schedule', 'track'] },\r\n    { module: 'voice_alerts', actions: ['receive', 'respond'] }\r\n  ],\r\n  transporter: [\r\n    { module: 'vehicle_management', actions: ['manage', 'track'] },\r\n    { module: 'route_optimization', actions: ['optimize', 'plan'] },\r\n    { module: 'delivery_tracking', actions: ['track', 'update'] },\r\n    { module: 'schedule_management', actions: ['schedule', 'modify'] },\r\n    { module: 'logistics', actions: ['coordinate', 'monitor'] }\r\n  ]\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null\r\n  loading: boolean\r\n  login: (phone: string, password: string) => Promise<void>\r\n  logout: () => Promise<void>\r\n  hasPermission: (module: string, action: string) => boolean\r\n  isExecutive: () => boolean\r\n  getAccessLevel: () => 'high' | 'medium' | 'low'\r\n  accessToken?: string\r\n  refreshToken?: string\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined)\r\n\r\nexport function useAuth() {\r\n  const context = useContext(AuthContext)\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider')\r\n  }\r\n  return context\r\n}\r\n\r\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\r\n  const [user, setUser] = useState<User | null>(null)\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  // Enhanced permission checking\r\n  const hasPermission = (module: string, action: string): boolean => {\r\n    if (!user) return false\r\n\r\n    const userPermissions = user.permissions || ROLE_PERMISSIONS[user.role] || []\r\n    const modulePermissions = userPermissions.find(p => p.module === module)\r\n    return modulePermissions?.actions.includes(action) || false\r\n  }\r\n\r\n  // Check if user has executive-level access\r\n  const isExecutive = (): boolean => {\r\n    if (!user) return false\r\n    return user.role === 'senior_leader' || user.role === 'admin' || !!user.executiveLevel\r\n  }\r\n\r\n  // Get user access level for security controls\r\n  const getAccessLevel = (): 'high' | 'medium' | 'low' => {\r\n    if (!user) return 'low'\r\n\r\n    if (user.executiveLevel) {\r\n      return user.executiveLevel === 'ceo' || user.executiveLevel === 'cfo' ? 'high' : 'medium'\r\n    }\r\n\r\n    switch (user.role) {\r\n      case 'senior_leader':\r\n      case 'admin':\r\n        return 'high'\r\n      case 'cbg_sales':\r\n      case 'business_dev':\r\n        return 'medium'\r\n      default:\r\n        return 'low'\r\n    }\r\n  }\r\n\r\n  // Backend authentication with JWT microservices integration\r\n  const login = async (phone: string, password: string) => {\r\n    try {\r\n      console.log('🔐 Attempting login with SAUBHAGYA microservices API...')\r\n\r\n      // Import the API service dynamically to avoid circular dependencies\r\n      const { apiService } = await import('../services/api')\r\n\r\n      // Send phone directly to API service (no email conversion needed)\r\n      const loginResponse = await apiService.login(phone, password)\r\n\r\n      if (loginResponse.success && loginResponse.data) {\r\n        const { user: apiUser, token } = loginResponse.data\r\n\r\n        // Map API user to our User interface\r\n        // Get the first role from the backend roles array\r\n        const backendRole = apiUser.role || (apiUser.roles && apiUser.roles[0]) || 'USER'\r\n\r\n        // Override with correct role mapping for demo credentials\r\n        const correctRole = getCorrectRoleForPhone(phone) || mapBackendRoleToUserRole(backendRole)\r\n        const correctAppType = getCorrectAppTypeForPhone(phone) || getAppTypeFromRole(backendRole)\r\n\r\n        const mappedUser: User = {\r\n          id: apiUser.id,\r\n          phone: phone,\r\n          email: apiUser.email,\r\n          name: getCorrectNameForPhone(phone) || apiUser.name,\r\n          role: correctRole,\r\n          department: getDepartmentFromRole(backendRole),\r\n          permissions: mapApiPermissions(apiUser.permissions || []),\r\n          lastAccess: new Date(),\r\n          appType: correctAppType,\r\n          executiveLevel: getExecutiveLevelFromRole(backendRole),\r\n          // API fields\r\n          isActive: true,\r\n          roles: apiUser.roles || [backendRole]\r\n        }\r\n\r\n        setUser(mappedUser)\r\n\r\n        // Store tokens and user data\r\n        localStorage.setItem('user', JSON.stringify(mappedUser))\r\n        localStorage.setItem('saubhagya_jwt_token', token)\r\n        localStorage.setItem('sessionStart', new Date().toISOString())\r\n\r\n        console.log('✅ User logged in successfully with JWT:', mappedUser)\r\n        return\r\n\r\n      } else {\r\n        console.warn('🚫 Backend authentication failed, falling back to demo credentials')\r\n        throw new Error(loginResponse.error || 'Authentication failed')\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('💥 Backend authentication failed, trying fallback:', error)\r\n      // Fallback to demo credentials\r\n      return loginWithFallback(phone, password)\r\n    }\r\n  }\r\n\r\n  // Fallback authentication for demo purposes\r\n  const loginWithFallback = async (phone: string, password: string) => {\r\n    // Demo phone-based users for 7 different SAUBHAGYA apps\r\n    const mockUsers: Record<string, User> = {\r\n      '+919876543210': {\r\n        id: 'fw-001',\r\n        phone: '+919876543210',\r\n        email: 'fieldworker@saubhagya.com',\r\n        name: 'Ramesh Kumar (Field Worker)',\r\n        role: 'field_worker',\r\n        department: 'Field Operations',\r\n        appType: 'gausakhi',\r\n        permissions: ROLE_PERMISSIONS.field_worker,\r\n        lastAccess: new Date()\r\n      },\r\n      '+918765432109': {\r\n        id: 'cm-001',\r\n        phone: '+918765432109',\r\n        email: 'clustermanager@saubhagya.com',\r\n        name: 'Suresh Patel (Cluster Manager)',\r\n        role: 'cluster_manager',\r\n        department: 'Cluster Operations',\r\n        appType: 'biogassangh',\r\n        permissions: ROLE_PERMISSIONS.cluster_manager,\r\n        lastAccess: new Date()\r\n      },\r\n      '+917654321098': {\r\n        id: 'cs-001',\r\n        phone: '+917654321098',\r\n        email: 'cbgsales@saubhagya.com',\r\n        name: 'Priya Sharma (CBG Sales Executive)',\r\n        role: 'cbg_sales',\r\n        department: 'Sales & Marketing',\r\n        appType: 'urjavyapar',\r\n        permissions: ROLE_PERMISSIONS.cbg_sales,\r\n        lastAccess: new Date()\r\n      },\r\n      // '+916543210987': {\r\n      //   id: 'bd-001',\r\n      //   phone: '+916543210987',\r\n      //   email: 'businessdev@saubhagya.com',\r\n      //   name: 'Amit Singh (Business Development)',\r\n      //   role: 'business_dev',\r\n      //   department: 'Business Development',\r\n      //   appType: 'urjasanyojak',\r\n      //   permissions: ROLE_PERMISSIONS.business_dev,\r\n      //   lastAccess: new Date()\r\n      // },\r\n      '+915432109876': {\r\n        id: 'admin-001',\r\n        phone: '+915432109876',\r\n        email: 'admin@saubhagya.com',\r\n        name: 'System Administrator',\r\n        role: 'admin',\r\n        department: 'IT Administration',\r\n        appType: 'admin',\r\n        permissions: ROLE_PERMISSIONS.admin,\r\n        lastAccess: new Date()\r\n      },\r\n      // '+914321098765': {\r\n      //   id: 'sl-001',\r\n      //   phone: '+914321098765',\r\n      //   email: 'seniorleader@saubhagya.com',\r\n      //   name: 'Dr. Rajesh Kumar (CEO)',\r\n      //   role: 'senior_leader',\r\n      //   department: 'Executive Leadership',\r\n      //   appType: 'urjaneta',\r\n      //   executiveLevel: 'ceo',\r\n      //   permissions: ROLE_PERMISSIONS.senior_leader,\r\n      //   lastAccess: new Date()\r\n      // },\r\n      '+913210987654': {\r\n        id: 'po-001',\r\n        phone: '+913210987654',\r\n        email: 'purificationop@saubhagya.com',\r\n        name: 'Vinod Yadav (Purification Operator)',\r\n        role: 'purification_operator',\r\n        department: 'Purification Operations',\r\n        appType: 'shuddhidoot',\r\n        permissions: ROLE_PERMISSIONS.purification_operator,\r\n        lastAccess: new Date()\r\n      },\r\n      '+912109876543': {\r\n        id: 't-001',\r\n        phone: '+912109876543',\r\n        email: 'transporter@saubhagya.com',\r\n        name: 'Ravi Sharma (Transporter)',\r\n        role: 'transporter',\r\n        department: 'Logistics & Transport',\r\n        appType: 'admin', // Using admin app type as transport module is integrated there\r\n        permissions: ROLE_PERMISSIONS.transporter,\r\n        lastAccess: new Date()\r\n      }\r\n    }\r\n\r\n    const mockUser = mockUsers[phone]\r\n    if (!mockUser) {\r\n      throw new Error('Invalid phone number or password')\r\n    }\r\n\r\n    // Simple password validation for demo (in real app, this would be properly hashed)\r\n    // Accept multiple valid passwords for different user types\r\n    const validPasswords = ['password123', 'fieldworker123', 'admin123', 'Farmer@123'];\r\n    if (!validPasswords.includes(password)) {\r\n      throw new Error('Invalid phone number or password')\r\n    }\r\n\r\n    setUser(mockUser)\r\n    localStorage.setItem('user', JSON.stringify(mockUser))\r\n    localStorage.setItem('sessionStart', new Date().toISOString())\r\n\r\n    console.log('Fallback login successful:', mockUser)\r\n  }\r\n\r\n  const logout = async () => {\r\n    try {\r\n      // Import the API service dynamically to avoid circular dependencies\r\n      const { apiService } = await import('../services/api')\r\n      await apiService.logout()\r\n    } catch (error) {\r\n      console.error('Backend logout error:', error)\r\n    }\r\n\r\n    console.log('🔓 Logging out user, clearing session data')\r\n    setUser(null)\r\n    localStorage.removeItem('user')\r\n    localStorage.removeItem('saubhagya_jwt_token')\r\n    localStorage.removeItem('accessToken')\r\n    localStorage.removeItem('refreshToken')\r\n    localStorage.removeItem('sessionStart')\r\n    localStorage.removeItem('voiceSessionData')\r\n  }\r\n\r\n  useEffect(() => {\r\n    // Check for existing user session with security validation\r\n    const savedUser = localStorage.getItem('user')\r\n    const sessionStart = localStorage.getItem('sessionStart')\r\n\r\n    if (savedUser && sessionStart) {\r\n      const parsedUser = JSON.parse(savedUser)\r\n      const sessionAge = Date.now() - new Date(sessionStart).getTime()\r\n      const maxSessionAge = parsedUser.role === 'executive' ? 4 * 60 * 60 * 1000 : 8 * 60 * 60 * 1000 // 4h for exec, 8h for others\r\n\r\n      if (sessionAge > maxSessionAge) {\r\n        console.log('Session expired, logging out')\r\n        logout()\r\n      } else {\r\n        // Update permissions to latest role definition\r\n        parsedUser.permissions = ROLE_PERMISSIONS[parsedUser.role] || []\r\n        setUser(parsedUser)\r\n      }\r\n    }\r\n    setLoading(false)\r\n  }, [])\r\n\r\n  // Monitor executive sessions\r\n  useEffect(() => {\r\n    if (user && isExecutive()) {\r\n      const interval = setInterval(() => {\r\n        const sessionStart = localStorage.getItem('sessionStart')\r\n        if (sessionStart) {\r\n          const sessionAge = Date.now() - new Date(sessionStart).getTime()\r\n          const warningTime = 3.5 * 60 * 60 * 1000 // Warn at 3.5 hours for executives\r\n\r\n          if (sessionAge > warningTime && sessionAge < warningTime + 60000) {\r\n            console.warn('Executive session will expire in 30 minutes')\r\n          }\r\n        }\r\n      }, 60000) // Check every minute\r\n\r\n      return () => clearInterval(interval)\r\n    }\r\n  }, [user])\r\n\r\n  const value = {\r\n    user,\r\n    loading,\r\n    login,\r\n    logout,\r\n    hasPermission,\r\n    isExecutive,\r\n    getAccessLevel,\r\n    accessToken: localStorage.getItem('accessToken'),\r\n    refreshToken: localStorage.getItem('refreshToken')\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n\r\n// Helper functions to map API data to frontend types\r\nfunction mapApiRoleToUserRole(apiRole: string): UserRole {\r\n  switch (apiRole.toLowerCase()) {\r\n    case 'admin':\r\n    case 'administrator':\r\n      return 'admin'\r\n    case 'field_worker':\r\n    case 'farmer':\r\n      return 'field_worker'\r\n    case 'cluster_manager':\r\n      return 'cluster_manager'\r\n    case 'cbg_sales':\r\n    case 'sales_executive':\r\n      return 'cbg_sales'\r\n    case 'business_dev':\r\n    case 'business_developer':\r\n      return 'business_dev'\r\n    case 'senior_leader':\r\n    case 'executive':\r\n    case 'ceo':\r\n    case 'cfo':\r\n      return 'senior_leader'\r\n    case 'purification_operator':\r\n    case 'operator':\r\n      return 'purification_operator'\r\n    default:\r\n      return 'admin'\r\n  }\r\n}\r\n\r\nfunction mapApiPermissions(apiPermissions: string[]): Permission[] {\r\n  // Map API permissions to our Permission interface\r\n  const permissionMap: Record<string, Permission> = {\r\n    'cattle:read': { module: 'rfid', actions: ['scan', 'sync'] },\r\n    'cattle:write': { module: 'collection', actions: ['log', 'voice'] },\r\n    'transactions:read': { module: 'disputes', actions: ['resolve', 'track'] },\r\n    'dashboard:read': { module: 'voice_kpis', actions: ['view', 'analyze'] },\r\n    'users:manage': { module: 'users', actions: ['create', 'read', 'update', 'delete'] }\r\n  }\r\n\r\n  const mappedPermissions: Permission[] = []\r\n  apiPermissions.forEach(perm => {\r\n    if (permissionMap[perm]) {\r\n      mappedPermissions.push(permissionMap[perm])\r\n    }\r\n  })\r\n\r\n  // If no permissions mapped, use role-based defaults\r\n  if (mappedPermissions.length === 0) {\r\n    return ROLE_PERMISSIONS.admin\r\n  }\r\n\r\n  return mappedPermissions\r\n}\r\n\r\n// Helper functions to map backend data to frontend types (legacy support)\r\nfunction mapBackendRoleToUserRole(backendRole: string): UserRole {\r\n  switch (backendRole) {\r\n    case 'FARMER':\r\n    case 'FIELD_WORKER':\r\n      return 'field_worker'\r\n    case 'CLUSTER_MANAGER':\r\n    case 'BIOGAS_SANGH':\r\n      return 'cluster_manager'\r\n    case 'CBG_SALES':\r\n    case 'SALES_EXECUTIVE':\r\n      return 'cbg_sales'\r\n    case 'BUSINESS_DEV':\r\n    case 'BUSINESS_DEVELOPER':\r\n      return 'business_dev'\r\n    case 'ADMIN':\r\n    case 'ADMINISTRATOR':\r\n      return 'admin'\r\n    case 'SENIOR_LEADER':\r\n    case 'EXECUTIVE':\r\n    case 'CEO':\r\n    case 'CFO':\r\n      return 'senior_leader'\r\n    case 'PURIFICATION_OPERATOR':\r\n    case 'OPERATOR':\r\n      return 'purification_operator'\r\n    default:\r\n      return 'field_worker'\r\n  }\r\n}\r\n\r\nfunction getDepartmentFromRole(backendRole: string): string {\r\n  switch (backendRole) {\r\n    case 'FARMER':\r\n    case 'FIELD_WORKER':\r\n      return 'Field Operations'\r\n    case 'CLUSTER_MANAGER':\r\n    case 'BIOGAS_SANGH':\r\n      return 'Cluster Operations'\r\n    case 'CBG_SALES':\r\n    case 'SALES_EXECUTIVE':\r\n      return 'Sales & Marketing'\r\n    case 'BUSINESS_DEV':\r\n    case 'BUSINESS_DEVELOPER':\r\n      return 'Business Development'\r\n    case 'ADMIN':\r\n    case 'ADMINISTRATOR':\r\n      return 'IT Administration'\r\n    case 'SENIOR_LEADER':\r\n    case 'EXECUTIVE':\r\n    case 'CEO':\r\n    case 'CFO':\r\n      return 'Executive Leadership'\r\n    case 'PURIFICATION_OPERATOR':\r\n    case 'OPERATOR':\r\n      return 'Purification Operations'\r\n    default:\r\n      return 'Field Operations'\r\n  }\r\n}\r\n\r\nfunction getAppTypeFromRole(backendRole: string): User['appType'] {\r\n  switch (backendRole) {\r\n    case 'FARMER':\r\n    case 'FIELD_WORKER':\r\n      return 'gausakhi'\r\n    case 'CLUSTER_MANAGER':\r\n    case 'BIOGAS_SANGH':\r\n      return 'biogassangh'\r\n    case 'CBG_SALES':\r\n    case 'SALES_EXECUTIVE':\r\n      return 'urjavyapar'\r\n    case 'BUSINESS_DEV':\r\n    case 'BUSINESS_DEVELOPER':\r\n      return 'urjasanyojak'\r\n    case 'ADMIN':\r\n    case 'ADMINISTRATOR':\r\n      return 'admin'\r\n    case 'SENIOR_LEADER':\r\n    case 'EXECUTIVE':\r\n    case 'CEO':\r\n    case 'CFO':\r\n      return 'urjaneta'\r\n    case 'PURIFICATION_OPERATOR':\r\n    case 'OPERATOR':\r\n      return 'shuddhidoot'\r\n    default:\r\n      return 'gausakhi'\r\n  }\r\n}\r\n\r\nfunction getExecutiveLevelFromRole(backendRole: string): User['executiveLevel'] {\r\n  switch (backendRole) {\r\n    case 'CEO':\r\n      return 'ceo'\r\n    case 'CFO':\r\n      return 'cfo'\r\n    case 'COO':\r\n      return 'coo'\r\n    case 'VP':\r\n      return 'vp'\r\n    case 'DIRECTOR':\r\n      return 'director'\r\n    default:\r\n      return undefined\r\n  }\r\n}\r\n\r\nfunction mapBackendPermissions(backendPermissions: string[]): Permission[] {\r\n  // Map backend permissions to our Permission interface\r\n  const permissionMap: Record<string, Permission> = {\r\n    'CONTRIBUTE_BIOGAS': { module: 'rfid', actions: ['scan', 'sync'] },\r\n    'VIEW_HISTORY': { module: 'collection', actions: ['log', 'voice'] },\r\n    'RAISE_DISPUTE': { module: 'disputes', actions: ['resolve', 'track'] },\r\n    'MANAGE_INVENTORY': { module: 'inventory', actions: ['manage', 'track'] },\r\n    'CREATE_INVOICE': { module: 'invoicing', actions: ['create', 'send'] },\r\n    'MANAGE_CRM': { module: 'crm', actions: ['manage', 'update'] },\r\n    'ADMIN_ACCESS': { module: 'users', actions: ['create', 'read', 'update', 'delete'] },\r\n    'VIEW_ANALYTICS': { module: 'voice_kpis', actions: ['view', 'analyze'] },\r\n    'MONITOR_CH4': { module: 'ch4_monitoring', actions: ['monitor', 'alert'] }\r\n  }\r\n\r\n  const mappedPermissions: Permission[] = []\r\n  backendPermissions.forEach(perm => {\r\n    if (permissionMap[perm]) {\r\n      mappedPermissions.push(permissionMap[perm])\r\n    }\r\n  })\r\n\r\n  // If no permissions mapped, use role-based defaults\r\n  if (mappedPermissions.length === 0) {\r\n    return ROLE_PERMISSIONS.field_worker\r\n  }\r\n\r\n  return mappedPermissions\r\n}\r\n\r\n// Helper functions to map phone numbers to correct demo credentials\r\nfunction getCorrectRoleForPhone(phone: string): UserRole | null {\r\n  const phoneRoleMap: Record<string, UserRole> = {\r\n    '+919876543210': 'field_worker',\r\n    '+918765432109': 'cluster_manager',\r\n    '+917654321098': 'cbg_sales',\r\n    '+915432109876': 'admin',\r\n    '+913210987654': 'purification_operator',\r\n    '+912109876543': 'transporter'\r\n  }\r\n  return phoneRoleMap[phone] || null\r\n}\r\n\r\nfunction getCorrectAppTypeForPhone(phone: string): User['appType'] | null {\r\n  const phoneAppTypeMap: Record<string, User['appType']> = {\r\n    '+919876543210': 'gausakhi',\r\n    '+918765432109': 'biogassangh',\r\n    '+917654321098': 'urjavyapar',\r\n    '+915432109876': 'admin',\r\n    '+913210987654': 'shuddhidoot',\r\n    '+912109876543': 'admin'\r\n  }\r\n  return phoneAppTypeMap[phone] || null\r\n}\r\n\r\nfunction getCorrectNameForPhone(phone: string): string | null {\r\n  const phoneNameMap: Record<string, string> = {\r\n    '+919876543210': 'Ramesh Kumar (Field Worker)',\r\n    '+918765432109': 'Suresh Patel (Cluster Manager)',\r\n    '+917654321098': 'Priya Sharma (CBG Sales Executive)',\r\n    '+915432109876': 'System Administrator',\r\n    '+913210987654': 'Vinod Yadav (Purification Operator)',\r\n    '+912109876543': 'Ravi Sharma (Transporter)'\r\n  }\r\n  return phoneNameMap[phone] || null\r\n}\r\n","import React, { createContext, useContext, useEffect, useState } from 'react'\r\nimport { useAuth } from './AuthContext'\r\n\r\nexport interface PlatformModule {\r\n  id: string\r\n  name: string\r\n  displayName: string\r\n  description: string\r\n  url: string\r\n  icon: string\r\n  category: 'operational' | 'analytics' | 'executive'\r\n  requiredRoles: string[]\r\n  status: 'active' | 'maintenance' | 'disabled'\r\n  lastUpdated: Date\r\n}\r\n\r\nexport interface NavigationState {\r\n  currentModule: string\r\n  previousModule?: string\r\n  navigationHistory: string[]\r\n  breadcrumbs: BreadcrumbItem[]\r\n}\r\n\r\nexport interface BreadcrumbItem {\r\n  label: string\r\n  url: string\r\n  module: string\r\n}\r\n\r\nexport interface PlatformSettings {\r\n  theme: 'light' | 'dark' | 'auto'\r\n  language: 'en' | 'hi'\r\n  timezone: string\r\n  autoSave: boolean\r\n  sessionTimeout: number\r\n  notifications: {\r\n    enabled: boolean\r\n    desktop: boolean\r\n    email: boolean\r\n    categories: string[]\r\n  }\r\n}\r\n\r\nexport interface SessionMetrics {\r\n  totalSessions: number\r\n  activeModules: string[]\r\n  averageSessionDuration: number\r\n  lastActivity: Date\r\n  moduleUsageStats: Record<string, number>\r\n}\r\n\r\ninterface PlatformContextType {\r\n  modules: PlatformModule[]\r\n  navigationState: NavigationState\r\n  platformSettings: PlatformSettings\r\n  sessionMetrics: SessionMetrics\r\n\r\n  // Navigation functions\r\n  navigateToModule: (moduleId: string, preserveState?: boolean) => void\r\n  updateBreadcrumbs: (breadcrumbs: BreadcrumbItem[]) => void\r\n  goBack: () => void\r\n\r\n  // Settings management\r\n  updatePlatformSettings: (settings: Partial<PlatformSettings>) => void\r\n\r\n  // Module management\r\n  getAccessibleModules: () => PlatformModule[]\r\n  isModuleAccessible: (moduleId: string) => boolean\r\n\r\n  // Session management\r\n  trackModuleUsage: (moduleId: string) => void\r\n  getSessionSummary: () => SessionMetrics\r\n}\r\n\r\n// Platform modules configuration\r\nexport const PLATFORM_MODULES: PlatformModule[] = [\r\n  {\r\n    id: 'urjasanyojak',\r\n    name: 'UrjaSanyojak',\r\n    displayName: 'Biogas Cluster Management',\r\n    description: 'Comprehensive biogas production cluster oversight and management',\r\n    url: '/',\r\n    icon: 'factory',\r\n    category: 'operational',\r\n    requiredRoles: ['executive', 'manager', 'operator', 'admin'],\r\n    status: 'active',\r\n    lastUpdated: new Date()\r\n  },\r\n  {\r\n    id: 'shuddhi-doot',\r\n    name: 'ShuddhiDoot',\r\n    displayName: 'Purification & Quality Control',\r\n    description: 'Advanced biogas purification monitoring and quality assurance',\r\n    url: '/purification',\r\n    icon: 'filter',\r\n    category: 'operational',\r\n    requiredRoles: ['executive', 'manager', 'operator', 'analyst', 'admin'],\r\n    status: 'active',\r\n    lastUpdated: new Date()\r\n  },\r\n  {\r\n    id: 'urja-vyapar',\r\n    name: 'UrjaVyapar',\r\n    displayName: 'Sales & Distribution Management',\r\n    description: 'Comprehensive biogas sales, distribution, and customer management',\r\n    url: '/sales',\r\n    icon: 'trending-up',\r\n    category: 'operational',\r\n    requiredRoles: ['executive', 'manager', 'admin'],\r\n    status: 'active',\r\n    lastUpdated: new Date()\r\n  },\r\n  {\r\n    id: 'urja-neta',\r\n    name: 'UrjaNeta',\r\n    displayName: 'Executive Analytics Dashboard',\r\n    description: 'Advanced voice-enabled business intelligence for senior leadership',\r\n    url: '/urjaneta',\r\n    icon: 'brain',\r\n    category: 'executive',\r\n    requiredRoles: ['executive', 'admin'],\r\n    status: 'active',\r\n    lastUpdated: new Date()\r\n  },\r\n  {\r\n    id: 'admin-console',\r\n    name: 'AdminConsole',\r\n    displayName: 'System Administration',\r\n    description: 'Platform administration and system management',\r\n    url: '/admin',\r\n    icon: 'settings',\r\n    category: 'analytics',\r\n    requiredRoles: ['admin'],\r\n    status: 'active',\r\n    lastUpdated: new Date()\r\n  },\r\n  {\r\n    id: 'gaushala',\r\n    name: 'GauShala',\r\n    displayName: 'GauShala Management',\r\n    description: 'Comprehensive cattle and dung collection management',\r\n    url: '/gaushala',\r\n    icon: 'home',\r\n    category: 'operational',\r\n    requiredRoles: ['admin', 'field_worker', 'supervisor', 'manager'],\r\n    status: 'active',\r\n    lastUpdated: new Date()\r\n  },\r\n  {\r\n    id: 'executive-command',\r\n    name: 'ExecutiveCommand',\r\n    displayName: 'Executive Command Center',\r\n    description: 'Unified cross-module analytics and strategic insights',\r\n    url: '/executive',\r\n    icon: 'crown',\r\n    category: 'executive',\r\n    requiredRoles: ['executive', 'admin'],\r\n    status: 'active',\r\n    lastUpdated: new Date()\r\n  }\r\n]\r\n\r\nconst PlatformContext = createContext<PlatformContextType | undefined>(undefined)\r\n\r\nexport function usePlatform() {\r\n  const context = useContext(PlatformContext)\r\n  if (context === undefined) {\r\n    throw new Error('usePlatform must be used within a PlatformProvider')\r\n  }\r\n  return context\r\n}\r\n\r\nexport function PlatformProvider({ children }: { children: React.ReactNode }) {\r\n  const { user, hasPermission, isExecutive } = useAuth()\r\n\r\n  const [navigationState, setNavigationState] = useState<NavigationState>({\r\n    currentModule: 'urjasanyojak',\r\n    navigationHistory: ['urjasanyojak'],\r\n    breadcrumbs: [\r\n      { label: 'Dashboard', url: '/', module: 'urjasanyojak' }\r\n    ]\r\n  })\r\n\r\n  const [platformSettings, setPlatformSettings] = useState<PlatformSettings>({\r\n    theme: 'light',\r\n    language: 'en',\r\n    timezone: 'Asia/Kolkata',\r\n    autoSave: true,\r\n    sessionTimeout: isExecutive() ? 240 : 480, // 4h for exec, 8h for others\r\n    notifications: {\r\n      enabled: true,\r\n      desktop: true,\r\n      email: isExecutive(),\r\n      categories: ['alerts', 'reports', 'updates']\r\n    }\r\n  })\r\n\r\n  const [sessionMetrics, setSessionMetrics] = useState<SessionMetrics>({\r\n    totalSessions: 1,\r\n    activeModules: ['urjasanyojak'],\r\n    averageSessionDuration: 0,\r\n    lastActivity: new Date(),\r\n    moduleUsageStats: {\r\n      'urjasanyojak': 1,\r\n      'shuddhi-doot': 0,\r\n      'urja-vyapar': 0,\r\n      'urja-neta': 0\r\n    }\r\n  })\r\n\r\n  const [modules] = useState<PlatformModule[]>(PLATFORM_MODULES)\r\n\r\n  // Navigation functions\r\n  const navigateToModule = (moduleId: string, preserveState = true) => {\r\n    const module = modules.find(m => m.id === moduleId)\r\n    if (!module || !isModuleAccessible(moduleId)) {\r\n      console.warn(`Module ${moduleId} not accessible`)\r\n      return\r\n    }\r\n\r\n    setNavigationState(prev => ({\r\n      currentModule: moduleId,\r\n      previousModule: preserveState ? prev.currentModule : undefined,\r\n      navigationHistory: [...prev.navigationHistory.slice(-10), moduleId],\r\n      breadcrumbs: [\r\n        { label: module.displayName, url: module.url, module: moduleId }\r\n      ]\r\n    }))\r\n\r\n    trackModuleUsage(moduleId)\r\n\r\n    // Navigate using window.history if needed\r\n    if (window.location.pathname !== module.url) {\r\n      window.history.pushState(null, '', module.url)\r\n    }\r\n\r\n    console.log(`Navigated to ${module.displayName} (${moduleId})`)\r\n  }\r\n\r\n  const updateBreadcrumbs = (breadcrumbs: BreadcrumbItem[]) => {\r\n    setNavigationState(prev => ({\r\n      ...prev,\r\n      breadcrumbs\r\n    }))\r\n  }\r\n\r\n  const goBack = () => {\r\n    if (navigationState.previousModule) {\r\n      navigateToModule(navigationState.previousModule, false)\r\n    }\r\n  }\r\n\r\n  // Settings management\r\n  const updatePlatformSettings = (newSettings: Partial<PlatformSettings>) => {\r\n    setPlatformSettings(prev => {\r\n      const updated = { ...prev, ...newSettings }\r\n\r\n      // Persist to localStorage\r\n      localStorage.setItem('platformSettings', JSON.stringify(updated))\r\n\r\n      console.log('Platform settings updated:', newSettings)\r\n      return updated\r\n    })\r\n  }\r\n\r\n  // Module management\r\n  const getAccessibleModules = (): PlatformModule[] => {\r\n    if (!user) return []\r\n\r\n    return modules.filter(module =>\r\n      module.status === 'active' &&\r\n      module.requiredRoles.includes(user.role) &&\r\n      hasPermission(module.id, 'view')\r\n    )\r\n  }\r\n\r\n  const isModuleAccessible = (moduleId: string): boolean => {\r\n    if (!user) return false\r\n\r\n    const module = modules.find(m => m.id === moduleId)\r\n    if (!module || module.status !== 'active') return false\r\n\r\n    return module.requiredRoles.includes(user.role) &&\r\n           hasPermission(module.id, 'view')\r\n  }\r\n\r\n  // Session management\r\n  const trackModuleUsage = (moduleId: string) => {\r\n    setSessionMetrics(prev => ({\r\n      ...prev,\r\n      lastActivity: new Date(),\r\n      activeModules: Array.from(new Set([...prev.activeModules, moduleId])),\r\n      moduleUsageStats: {\r\n        ...prev.moduleUsageStats,\r\n        [moduleId]: (prev.moduleUsageStats[moduleId] || 0) + 1\r\n      }\r\n    }))\r\n  }\r\n\r\n  const getSessionSummary = (): SessionMetrics => {\r\n    return {\r\n      ...sessionMetrics,\r\n      averageSessionDuration: Date.now() - sessionMetrics.lastActivity.getTime()\r\n    }\r\n  }\r\n\r\n  // Load persisted settings on mount\r\n  useEffect(() => {\r\n    const saved = localStorage.getItem('platformSettings')\r\n    if (saved) {\r\n      try {\r\n        const parsedSettings = JSON.parse(saved)\r\n        setPlatformSettings(prev => ({ ...prev, ...parsedSettings }))\r\n      } catch (error) {\r\n        console.error('Error loading platform settings:', error)\r\n      }\r\n    }\r\n  }, [])\r\n\r\n  // Update current module based on URL\r\n  useEffect(() => {\r\n    const currentPath = window.location.pathname\r\n    const currentModule = modules.find(m => m.url === currentPath)\r\n\r\n    if (currentModule && isModuleAccessible(currentModule.id)) {\r\n      setNavigationState(prev => ({\r\n        ...prev,\r\n        currentModule: currentModule.id\r\n      }))\r\n    }\r\n  }, [modules, user])\r\n\r\n  // Executive-specific settings\r\n  useEffect(() => {\r\n    if (user && isExecutive()) {\r\n      updatePlatformSettings({\r\n        sessionTimeout: 240, // 4 hours for executives\r\n        notifications: {\r\n          ...platformSettings.notifications,\r\n          email: true,\r\n          categories: ['alerts', 'reports', 'updates', 'urgent']\r\n        }\r\n      })\r\n    }\r\n  }, [user, isExecutive])\r\n\r\n  const value = {\r\n    modules,\r\n    navigationState,\r\n    platformSettings,\r\n    sessionMetrics,\r\n    navigateToModule,\r\n    updateBreadcrumbs,\r\n    goBack,\r\n    updatePlatformSettings,\r\n    getAccessibleModules,\r\n    isModuleAccessible,\r\n    trackModuleUsage,\r\n    getSessionSummary\r\n  }\r\n\r\n  return (\r\n    <PlatformContext.Provider value={value}>\r\n      {children}\r\n    </PlatformContext.Provider>\r\n  )\r\n}","'use client';\nfunction __insertCSS(code) {\n  if (!code || typeof document == 'undefined') return\n  let head = document.head || document.getElementsByTagName('head')[0]\n  let style = document.createElement('style')\n  style.type = 'text/css'\n  head.appendChild(style)\n  ;style.styleSheet ? (style.styleSheet.cssText = code) : style.appendChild(document.createTextNode(code))\n}\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst getAsset = (type)=>{\n    switch(type){\n        case 'success':\n            return SuccessIcon;\n        case 'info':\n            return InfoIcon;\n        case 'warning':\n            return WarningIcon;\n        case 'error':\n            return ErrorIcon;\n        default:\n            return null;\n    }\n};\nconst bars = Array(12).fill(0);\nconst Loader = ({ visible, className })=>{\n    return /*#__PURE__*/ React.createElement(\"div\", {\n        className: [\n            'sonner-loading-wrapper',\n            className\n        ].filter(Boolean).join(' '),\n        \"data-visible\": visible\n    }, /*#__PURE__*/ React.createElement(\"div\", {\n        className: \"sonner-spinner\"\n    }, bars.map((_, i)=>/*#__PURE__*/ React.createElement(\"div\", {\n            className: \"sonner-loading-bar\",\n            key: `spinner-bar-${i}`\n        }))));\n};\nconst SuccessIcon = /*#__PURE__*/ React.createElement(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 20 20\",\n    fill: \"currentColor\",\n    height: \"20\",\n    width: \"20\"\n}, /*#__PURE__*/ React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\",\n    clipRule: \"evenodd\"\n}));\nconst WarningIcon = /*#__PURE__*/ React.createElement(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    height: \"20\",\n    width: \"20\"\n}, /*#__PURE__*/ React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M9.401 3.003c1.155-2 4.043-2 5.197 0l7.355 12.748c1.154 2-.29 4.5-2.599 4.5H4.645c-2.309 0-3.752-2.5-2.598-4.5L9.4 3.003zM12 8.25a.75.75 0 01.75.75v3.75a.75.75 0 01-1.5 0V9a.75.75 0 01.75-.75zm0 8.25a.75.75 0 100-1.5.75.75 0 000 1.5z\",\n    clipRule: \"evenodd\"\n}));\nconst InfoIcon = /*#__PURE__*/ React.createElement(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 20 20\",\n    fill: \"currentColor\",\n    height: \"20\",\n    width: \"20\"\n}, /*#__PURE__*/ React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a.75.75 0 000 1.5h.253a.25.25 0 01.244.304l-.459 2.066A1.75 1.75 0 0010.747 15H11a.75.75 0 000-1.5h-.253a.25.25 0 01-.244-.304l.459-2.066A1.75 1.75 0 009.253 9H9z\",\n    clipRule: \"evenodd\"\n}));\nconst ErrorIcon = /*#__PURE__*/ React.createElement(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 20 20\",\n    fill: \"currentColor\",\n    height: \"20\",\n    width: \"20\"\n}, /*#__PURE__*/ React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-5a.75.75 0 01.75.75v4.5a.75.75 0 01-1.5 0v-4.5A.75.75 0 0110 5zm0 10a1 1 0 100-2 1 1 0 000 2z\",\n    clipRule: \"evenodd\"\n}));\nconst CloseIcon = /*#__PURE__*/ React.createElement(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"12\",\n    height: \"12\",\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeWidth: \"1.5\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n}, /*#__PURE__*/ React.createElement(\"line\", {\n    x1: \"18\",\n    y1: \"6\",\n    x2: \"6\",\n    y2: \"18\"\n}), /*#__PURE__*/ React.createElement(\"line\", {\n    x1: \"6\",\n    y1: \"6\",\n    x2: \"18\",\n    y2: \"18\"\n}));\n\nconst useIsDocumentHidden = ()=>{\n    const [isDocumentHidden, setIsDocumentHidden] = React.useState(document.hidden);\n    React.useEffect(()=>{\n        const callback = ()=>{\n            setIsDocumentHidden(document.hidden);\n        };\n        document.addEventListener('visibilitychange', callback);\n        return ()=>window.removeEventListener('visibilitychange', callback);\n    }, []);\n    return isDocumentHidden;\n};\n\nlet toastsCounter = 1;\nclass Observer {\n    constructor(){\n        // We use arrow functions to maintain the correct `this` reference\n        this.subscribe = (subscriber)=>{\n            this.subscribers.push(subscriber);\n            return ()=>{\n                const index = this.subscribers.indexOf(subscriber);\n                this.subscribers.splice(index, 1);\n            };\n        };\n        this.publish = (data)=>{\n            this.subscribers.forEach((subscriber)=>subscriber(data));\n        };\n        this.addToast = (data)=>{\n            this.publish(data);\n            this.toasts = [\n                ...this.toasts,\n                data\n            ];\n        };\n        this.create = (data)=>{\n            var _data_id;\n            const { message, ...rest } = data;\n            const id = typeof (data == null ? void 0 : data.id) === 'number' || ((_data_id = data.id) == null ? void 0 : _data_id.length) > 0 ? data.id : toastsCounter++;\n            const alreadyExists = this.toasts.find((toast)=>{\n                return toast.id === id;\n            });\n            const dismissible = data.dismissible === undefined ? true : data.dismissible;\n            if (this.dismissedToasts.has(id)) {\n                this.dismissedToasts.delete(id);\n            }\n            if (alreadyExists) {\n                this.toasts = this.toasts.map((toast)=>{\n                    if (toast.id === id) {\n                        this.publish({\n                            ...toast,\n                            ...data,\n                            id,\n                            title: message\n                        });\n                        return {\n                            ...toast,\n                            ...data,\n                            id,\n                            dismissible,\n                            title: message\n                        };\n                    }\n                    return toast;\n                });\n            } else {\n                this.addToast({\n                    title: message,\n                    ...rest,\n                    dismissible,\n                    id\n                });\n            }\n            return id;\n        };\n        this.dismiss = (id)=>{\n            if (id) {\n                this.dismissedToasts.add(id);\n                requestAnimationFrame(()=>this.subscribers.forEach((subscriber)=>subscriber({\n                            id,\n                            dismiss: true\n                        })));\n            } else {\n                this.toasts.forEach((toast)=>{\n                    this.subscribers.forEach((subscriber)=>subscriber({\n                            id: toast.id,\n                            dismiss: true\n                        }));\n                });\n            }\n            return id;\n        };\n        this.message = (message, data)=>{\n            return this.create({\n                ...data,\n                message\n            });\n        };\n        this.error = (message, data)=>{\n            return this.create({\n                ...data,\n                message,\n                type: 'error'\n            });\n        };\n        this.success = (message, data)=>{\n            return this.create({\n                ...data,\n                type: 'success',\n                message\n            });\n        };\n        this.info = (message, data)=>{\n            return this.create({\n                ...data,\n                type: 'info',\n                message\n            });\n        };\n        this.warning = (message, data)=>{\n            return this.create({\n                ...data,\n                type: 'warning',\n                message\n            });\n        };\n        this.loading = (message, data)=>{\n            return this.create({\n                ...data,\n                type: 'loading',\n                message\n            });\n        };\n        this.promise = (promise, data)=>{\n            if (!data) {\n                // Nothing to show\n                return;\n            }\n            let id = undefined;\n            if (data.loading !== undefined) {\n                id = this.create({\n                    ...data,\n                    promise,\n                    type: 'loading',\n                    message: data.loading,\n                    description: typeof data.description !== 'function' ? data.description : undefined\n                });\n            }\n            const p = Promise.resolve(promise instanceof Function ? promise() : promise);\n            let shouldDismiss = id !== undefined;\n            let result;\n            const originalPromise = p.then(async (response)=>{\n                result = [\n                    'resolve',\n                    response\n                ];\n                const isReactElementResponse = React.isValidElement(response);\n                if (isReactElementResponse) {\n                    shouldDismiss = false;\n                    this.create({\n                        id,\n                        type: 'default',\n                        message: response\n                    });\n                } else if (isHttpResponse(response) && !response.ok) {\n                    shouldDismiss = false;\n                    const promiseData = typeof data.error === 'function' ? await data.error(`HTTP error! status: ${response.status}`) : data.error;\n                    const description = typeof data.description === 'function' ? await data.description(`HTTP error! status: ${response.status}`) : data.description;\n                    const isExtendedResult = typeof promiseData === 'object' && !React.isValidElement(promiseData);\n                    const toastSettings = isExtendedResult ? promiseData : {\n                        message: promiseData\n                    };\n                    this.create({\n                        id,\n                        type: 'error',\n                        description,\n                        ...toastSettings\n                    });\n                } else if (response instanceof Error) {\n                    shouldDismiss = false;\n                    const promiseData = typeof data.error === 'function' ? await data.error(response) : data.error;\n                    const description = typeof data.description === 'function' ? await data.description(response) : data.description;\n                    const isExtendedResult = typeof promiseData === 'object' && !React.isValidElement(promiseData);\n                    const toastSettings = isExtendedResult ? promiseData : {\n                        message: promiseData\n                    };\n                    this.create({\n                        id,\n                        type: 'error',\n                        description,\n                        ...toastSettings\n                    });\n                } else if (data.success !== undefined) {\n                    shouldDismiss = false;\n                    const promiseData = typeof data.success === 'function' ? await data.success(response) : data.success;\n                    const description = typeof data.description === 'function' ? await data.description(response) : data.description;\n                    const isExtendedResult = typeof promiseData === 'object' && !React.isValidElement(promiseData);\n                    const toastSettings = isExtendedResult ? promiseData : {\n                        message: promiseData\n                    };\n                    this.create({\n                        id,\n                        type: 'success',\n                        description,\n                        ...toastSettings\n                    });\n                }\n            }).catch(async (error)=>{\n                result = [\n                    'reject',\n                    error\n                ];\n                if (data.error !== undefined) {\n                    shouldDismiss = false;\n                    const promiseData = typeof data.error === 'function' ? await data.error(error) : data.error;\n                    const description = typeof data.description === 'function' ? await data.description(error) : data.description;\n                    const isExtendedResult = typeof promiseData === 'object' && !React.isValidElement(promiseData);\n                    const toastSettings = isExtendedResult ? promiseData : {\n                        message: promiseData\n                    };\n                    this.create({\n                        id,\n                        type: 'error',\n                        description,\n                        ...toastSettings\n                    });\n                }\n            }).finally(()=>{\n                if (shouldDismiss) {\n                    // Toast is still in load state (and will be indefinitely — dismiss it)\n                    this.dismiss(id);\n                    id = undefined;\n                }\n                data.finally == null ? void 0 : data.finally.call(data);\n            });\n            const unwrap = ()=>new Promise((resolve, reject)=>originalPromise.then(()=>result[0] === 'reject' ? reject(result[1]) : resolve(result[1])).catch(reject));\n            if (typeof id !== 'string' && typeof id !== 'number') {\n                // cannot Object.assign on undefined\n                return {\n                    unwrap\n                };\n            } else {\n                return Object.assign(id, {\n                    unwrap\n                });\n            }\n        };\n        this.custom = (jsx, data)=>{\n            const id = (data == null ? void 0 : data.id) || toastsCounter++;\n            this.create({\n                jsx: jsx(id),\n                id,\n                ...data\n            });\n            return id;\n        };\n        this.getActiveToasts = ()=>{\n            return this.toasts.filter((toast)=>!this.dismissedToasts.has(toast.id));\n        };\n        this.subscribers = [];\n        this.toasts = [];\n        this.dismissedToasts = new Set();\n    }\n}\nconst ToastState = new Observer();\n// bind this to the toast function\nconst toastFunction = (message, data)=>{\n    const id = (data == null ? void 0 : data.id) || toastsCounter++;\n    ToastState.addToast({\n        title: message,\n        ...data,\n        id\n    });\n    return id;\n};\nconst isHttpResponse = (data)=>{\n    return data && typeof data === 'object' && 'ok' in data && typeof data.ok === 'boolean' && 'status' in data && typeof data.status === 'number';\n};\nconst basicToast = toastFunction;\nconst getHistory = ()=>ToastState.toasts;\nconst getToasts = ()=>ToastState.getActiveToasts();\n// We use `Object.assign` to maintain the correct types as we would lose them otherwise\nconst toast = Object.assign(basicToast, {\n    success: ToastState.success,\n    info: ToastState.info,\n    warning: ToastState.warning,\n    error: ToastState.error,\n    custom: ToastState.custom,\n    message: ToastState.message,\n    promise: ToastState.promise,\n    dismiss: ToastState.dismiss,\n    loading: ToastState.loading\n}, {\n    getHistory,\n    getToasts\n});\n\n__insertCSS(\"[data-sonner-toaster][dir=ltr],html[dir=ltr]{--toast-icon-margin-start:-3px;--toast-icon-margin-end:4px;--toast-svg-margin-start:-1px;--toast-svg-margin-end:0px;--toast-button-margin-start:auto;--toast-button-margin-end:0;--toast-close-button-start:0;--toast-close-button-end:unset;--toast-close-button-transform:translate(-35%, -35%)}[data-sonner-toaster][dir=rtl],html[dir=rtl]{--toast-icon-margin-start:4px;--toast-icon-margin-end:-3px;--toast-svg-margin-start:0px;--toast-svg-margin-end:-1px;--toast-button-margin-start:0;--toast-button-margin-end:auto;--toast-close-button-start:unset;--toast-close-button-end:0;--toast-close-button-transform:translate(35%, -35%)}[data-sonner-toaster]{position:fixed;width:var(--width);font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;--gray1:hsl(0, 0%, 99%);--gray2:hsl(0, 0%, 97.3%);--gray3:hsl(0, 0%, 95.1%);--gray4:hsl(0, 0%, 93%);--gray5:hsl(0, 0%, 90.9%);--gray6:hsl(0, 0%, 88.7%);--gray7:hsl(0, 0%, 85.8%);--gray8:hsl(0, 0%, 78%);--gray9:hsl(0, 0%, 56.1%);--gray10:hsl(0, 0%, 52.3%);--gray11:hsl(0, 0%, 43.5%);--gray12:hsl(0, 0%, 9%);--border-radius:8px;box-sizing:border-box;padding:0;margin:0;list-style:none;outline:0;z-index:999999999;transition:transform .4s ease}@media (hover:none) and (pointer:coarse){[data-sonner-toaster][data-lifted=true]{transform:none}}[data-sonner-toaster][data-x-position=right]{right:var(--offset-right)}[data-sonner-toaster][data-x-position=left]{left:var(--offset-left)}[data-sonner-toaster][data-x-position=center]{left:50%;transform:translateX(-50%)}[data-sonner-toaster][data-y-position=top]{top:var(--offset-top)}[data-sonner-toaster][data-y-position=bottom]{bottom:var(--offset-bottom)}[data-sonner-toast]{--y:translateY(100%);--lift-amount:calc(var(--lift) * var(--gap));z-index:var(--z-index);position:absolute;opacity:0;transform:var(--y);touch-action:none;transition:transform .4s,opacity .4s,height .4s,box-shadow .2s;box-sizing:border-box;outline:0;overflow-wrap:anywhere}[data-sonner-toast][data-styled=true]{padding:16px;background:var(--normal-bg);border:1px solid var(--normal-border);color:var(--normal-text);border-radius:var(--border-radius);box-shadow:0 4px 12px rgba(0,0,0,.1);width:var(--width);font-size:13px;display:flex;align-items:center;gap:6px}[data-sonner-toast]:focus-visible{box-shadow:0 4px 12px rgba(0,0,0,.1),0 0 0 2px rgba(0,0,0,.2)}[data-sonner-toast][data-y-position=top]{top:0;--y:translateY(-100%);--lift:1;--lift-amount:calc(1 * var(--gap))}[data-sonner-toast][data-y-position=bottom]{bottom:0;--y:translateY(100%);--lift:-1;--lift-amount:calc(var(--lift) * var(--gap))}[data-sonner-toast][data-styled=true] [data-description]{font-weight:400;line-height:1.4;color:#3f3f3f}[data-rich-colors=true][data-sonner-toast][data-styled=true] [data-description]{color:inherit}[data-sonner-toaster][data-sonner-theme=dark] [data-description]{color:#e8e8e8}[data-sonner-toast][data-styled=true] [data-title]{font-weight:500;line-height:1.5;color:inherit}[data-sonner-toast][data-styled=true] [data-icon]{display:flex;height:16px;width:16px;position:relative;justify-content:flex-start;align-items:center;flex-shrink:0;margin-left:var(--toast-icon-margin-start);margin-right:var(--toast-icon-margin-end)}[data-sonner-toast][data-promise=true] [data-icon]>svg{opacity:0;transform:scale(.8);transform-origin:center;animation:sonner-fade-in .3s ease forwards}[data-sonner-toast][data-styled=true] [data-icon]>*{flex-shrink:0}[data-sonner-toast][data-styled=true] [data-icon] svg{margin-left:var(--toast-svg-margin-start);margin-right:var(--toast-svg-margin-end)}[data-sonner-toast][data-styled=true] [data-content]{display:flex;flex-direction:column;gap:2px}[data-sonner-toast][data-styled=true] [data-button]{border-radius:4px;padding-left:8px;padding-right:8px;height:24px;font-size:12px;color:var(--normal-bg);background:var(--normal-text);margin-left:var(--toast-button-margin-start);margin-right:var(--toast-button-margin-end);border:none;font-weight:500;cursor:pointer;outline:0;display:flex;align-items:center;flex-shrink:0;transition:opacity .4s,box-shadow .2s}[data-sonner-toast][data-styled=true] [data-button]:focus-visible{box-shadow:0 0 0 2px rgba(0,0,0,.4)}[data-sonner-toast][data-styled=true] [data-button]:first-of-type{margin-left:var(--toast-button-margin-start);margin-right:var(--toast-button-margin-end)}[data-sonner-toast][data-styled=true] [data-cancel]{color:var(--normal-text);background:rgba(0,0,0,.08)}[data-sonner-toaster][data-sonner-theme=dark] [data-sonner-toast][data-styled=true] [data-cancel]{background:rgba(255,255,255,.3)}[data-sonner-toast][data-styled=true] [data-close-button]{position:absolute;left:var(--toast-close-button-start);right:var(--toast-close-button-end);top:0;height:20px;width:20px;display:flex;justify-content:center;align-items:center;padding:0;color:var(--gray12);background:var(--normal-bg);border:1px solid var(--gray4);transform:var(--toast-close-button-transform);border-radius:50%;cursor:pointer;z-index:1;transition:opacity .1s,background .2s,border-color .2s}[data-sonner-toast][data-styled=true] [data-close-button]:focus-visible{box-shadow:0 4px 12px rgba(0,0,0,.1),0 0 0 2px rgba(0,0,0,.2)}[data-sonner-toast][data-styled=true] [data-disabled=true]{cursor:not-allowed}[data-sonner-toast][data-styled=true]:hover [data-close-button]:hover{background:var(--gray2);border-color:var(--gray5)}[data-sonner-toast][data-swiping=true]::before{content:'';position:absolute;left:-100%;right:-100%;height:100%;z-index:-1}[data-sonner-toast][data-y-position=top][data-swiping=true]::before{bottom:50%;transform:scaleY(3) translateY(50%)}[data-sonner-toast][data-y-position=bottom][data-swiping=true]::before{top:50%;transform:scaleY(3) translateY(-50%)}[data-sonner-toast][data-swiping=false][data-removed=true]::before{content:'';position:absolute;inset:0;transform:scaleY(2)}[data-sonner-toast][data-expanded=true]::after{content:'';position:absolute;left:0;height:calc(var(--gap) + 1px);bottom:100%;width:100%}[data-sonner-toast][data-mounted=true]{--y:translateY(0);opacity:1}[data-sonner-toast][data-expanded=false][data-front=false]{--scale:var(--toasts-before) * 0.05 + 1;--y:translateY(calc(var(--lift-amount) * var(--toasts-before))) scale(calc(-1 * var(--scale)));height:var(--front-toast-height)}[data-sonner-toast]>*{transition:opacity .4s}[data-sonner-toast][data-x-position=right]{right:0}[data-sonner-toast][data-x-position=left]{left:0}[data-sonner-toast][data-expanded=false][data-front=false][data-styled=true]>*{opacity:0}[data-sonner-toast][data-visible=false]{opacity:0;pointer-events:none}[data-sonner-toast][data-mounted=true][data-expanded=true]{--y:translateY(calc(var(--lift) * var(--offset)));height:var(--initial-height)}[data-sonner-toast][data-removed=true][data-front=true][data-swipe-out=false]{--y:translateY(calc(var(--lift) * -100%));opacity:0}[data-sonner-toast][data-removed=true][data-front=false][data-swipe-out=false][data-expanded=true]{--y:translateY(calc(var(--lift) * var(--offset) + var(--lift) * -100%));opacity:0}[data-sonner-toast][data-removed=true][data-front=false][data-swipe-out=false][data-expanded=false]{--y:translateY(40%);opacity:0;transition:transform .5s,opacity .2s}[data-sonner-toast][data-removed=true][data-front=false]::before{height:calc(var(--initial-height) + 20%)}[data-sonner-toast][data-swiping=true]{transform:var(--y) translateY(var(--swipe-amount-y,0)) translateX(var(--swipe-amount-x,0));transition:none}[data-sonner-toast][data-swiped=true]{user-select:none}[data-sonner-toast][data-swipe-out=true][data-y-position=bottom],[data-sonner-toast][data-swipe-out=true][data-y-position=top]{animation-duration:.2s;animation-timing-function:ease-out;animation-fill-mode:forwards}[data-sonner-toast][data-swipe-out=true][data-swipe-direction=left]{animation-name:swipe-out-left}[data-sonner-toast][data-swipe-out=true][data-swipe-direction=right]{animation-name:swipe-out-right}[data-sonner-toast][data-swipe-out=true][data-swipe-direction=up]{animation-name:swipe-out-up}[data-sonner-toast][data-swipe-out=true][data-swipe-direction=down]{animation-name:swipe-out-down}@keyframes swipe-out-left{from{transform:var(--y) translateX(var(--swipe-amount-x));opacity:1}to{transform:var(--y) translateX(calc(var(--swipe-amount-x) - 100%));opacity:0}}@keyframes swipe-out-right{from{transform:var(--y) translateX(var(--swipe-amount-x));opacity:1}to{transform:var(--y) translateX(calc(var(--swipe-amount-x) + 100%));opacity:0}}@keyframes swipe-out-up{from{transform:var(--y) translateY(var(--swipe-amount-y));opacity:1}to{transform:var(--y) translateY(calc(var(--swipe-amount-y) - 100%));opacity:0}}@keyframes swipe-out-down{from{transform:var(--y) translateY(var(--swipe-amount-y));opacity:1}to{transform:var(--y) translateY(calc(var(--swipe-amount-y) + 100%));opacity:0}}@media (max-width:600px){[data-sonner-toaster]{position:fixed;right:var(--mobile-offset-right);left:var(--mobile-offset-left);width:100%}[data-sonner-toaster][dir=rtl]{left:calc(var(--mobile-offset-left) * -1)}[data-sonner-toaster] [data-sonner-toast]{left:0;right:0;width:calc(100% - var(--mobile-offset-left) * 2)}[data-sonner-toaster][data-x-position=left]{left:var(--mobile-offset-left)}[data-sonner-toaster][data-y-position=bottom]{bottom:var(--mobile-offset-bottom)}[data-sonner-toaster][data-y-position=top]{top:var(--mobile-offset-top)}[data-sonner-toaster][data-x-position=center]{left:var(--mobile-offset-left);right:var(--mobile-offset-right);transform:none}}[data-sonner-toaster][data-sonner-theme=light]{--normal-bg:#fff;--normal-border:var(--gray4);--normal-text:var(--gray12);--success-bg:hsl(143, 85%, 96%);--success-border:hsl(145, 92%, 87%);--success-text:hsl(140, 100%, 27%);--info-bg:hsl(208, 100%, 97%);--info-border:hsl(221, 91%, 93%);--info-text:hsl(210, 92%, 45%);--warning-bg:hsl(49, 100%, 97%);--warning-border:hsl(49, 91%, 84%);--warning-text:hsl(31, 92%, 45%);--error-bg:hsl(359, 100%, 97%);--error-border:hsl(359, 100%, 94%);--error-text:hsl(360, 100%, 45%)}[data-sonner-toaster][data-sonner-theme=light] [data-sonner-toast][data-invert=true]{--normal-bg:#000;--normal-border:hsl(0, 0%, 20%);--normal-text:var(--gray1)}[data-sonner-toaster][data-sonner-theme=dark] [data-sonner-toast][data-invert=true]{--normal-bg:#fff;--normal-border:var(--gray3);--normal-text:var(--gray12)}[data-sonner-toaster][data-sonner-theme=dark]{--normal-bg:#000;--normal-bg-hover:hsl(0, 0%, 12%);--normal-border:hsl(0, 0%, 20%);--normal-border-hover:hsl(0, 0%, 25%);--normal-text:var(--gray1);--success-bg:hsl(150, 100%, 6%);--success-border:hsl(147, 100%, 12%);--success-text:hsl(150, 86%, 65%);--info-bg:hsl(215, 100%, 6%);--info-border:hsl(223, 43%, 17%);--info-text:hsl(216, 87%, 65%);--warning-bg:hsl(64, 100%, 6%);--warning-border:hsl(60, 100%, 9%);--warning-text:hsl(46, 87%, 65%);--error-bg:hsl(358, 76%, 10%);--error-border:hsl(357, 89%, 16%);--error-text:hsl(358, 100%, 81%)}[data-sonner-toaster][data-sonner-theme=dark] [data-sonner-toast] [data-close-button]{background:var(--normal-bg);border-color:var(--normal-border);color:var(--normal-text)}[data-sonner-toaster][data-sonner-theme=dark] [data-sonner-toast] [data-close-button]:hover{background:var(--normal-bg-hover);border-color:var(--normal-border-hover)}[data-rich-colors=true][data-sonner-toast][data-type=success]{background:var(--success-bg);border-color:var(--success-border);color:var(--success-text)}[data-rich-colors=true][data-sonner-toast][data-type=success] [data-close-button]{background:var(--success-bg);border-color:var(--success-border);color:var(--success-text)}[data-rich-colors=true][data-sonner-toast][data-type=info]{background:var(--info-bg);border-color:var(--info-border);color:var(--info-text)}[data-rich-colors=true][data-sonner-toast][data-type=info] [data-close-button]{background:var(--info-bg);border-color:var(--info-border);color:var(--info-text)}[data-rich-colors=true][data-sonner-toast][data-type=warning]{background:var(--warning-bg);border-color:var(--warning-border);color:var(--warning-text)}[data-rich-colors=true][data-sonner-toast][data-type=warning] [data-close-button]{background:var(--warning-bg);border-color:var(--warning-border);color:var(--warning-text)}[data-rich-colors=true][data-sonner-toast][data-type=error]{background:var(--error-bg);border-color:var(--error-border);color:var(--error-text)}[data-rich-colors=true][data-sonner-toast][data-type=error] [data-close-button]{background:var(--error-bg);border-color:var(--error-border);color:var(--error-text)}.sonner-loading-wrapper{--size:16px;height:var(--size);width:var(--size);position:absolute;inset:0;z-index:10}.sonner-loading-wrapper[data-visible=false]{transform-origin:center;animation:sonner-fade-out .2s ease forwards}.sonner-spinner{position:relative;top:50%;left:50%;height:var(--size);width:var(--size)}.sonner-loading-bar{animation:sonner-spin 1.2s linear infinite;background:var(--gray11);border-radius:6px;height:8%;left:-10%;position:absolute;top:-3.9%;width:24%}.sonner-loading-bar:first-child{animation-delay:-1.2s;transform:rotate(.0001deg) translate(146%)}.sonner-loading-bar:nth-child(2){animation-delay:-1.1s;transform:rotate(30deg) translate(146%)}.sonner-loading-bar:nth-child(3){animation-delay:-1s;transform:rotate(60deg) translate(146%)}.sonner-loading-bar:nth-child(4){animation-delay:-.9s;transform:rotate(90deg) translate(146%)}.sonner-loading-bar:nth-child(5){animation-delay:-.8s;transform:rotate(120deg) translate(146%)}.sonner-loading-bar:nth-child(6){animation-delay:-.7s;transform:rotate(150deg) translate(146%)}.sonner-loading-bar:nth-child(7){animation-delay:-.6s;transform:rotate(180deg) translate(146%)}.sonner-loading-bar:nth-child(8){animation-delay:-.5s;transform:rotate(210deg) translate(146%)}.sonner-loading-bar:nth-child(9){animation-delay:-.4s;transform:rotate(240deg) translate(146%)}.sonner-loading-bar:nth-child(10){animation-delay:-.3s;transform:rotate(270deg) translate(146%)}.sonner-loading-bar:nth-child(11){animation-delay:-.2s;transform:rotate(300deg) translate(146%)}.sonner-loading-bar:nth-child(12){animation-delay:-.1s;transform:rotate(330deg) translate(146%)}@keyframes sonner-fade-in{0%{opacity:0;transform:scale(.8)}100%{opacity:1;transform:scale(1)}}@keyframes sonner-fade-out{0%{opacity:1;transform:scale(1)}100%{opacity:0;transform:scale(.8)}}@keyframes sonner-spin{0%{opacity:1}100%{opacity:.15}}@media (prefers-reduced-motion){.sonner-loading-bar,[data-sonner-toast],[data-sonner-toast]>*{transition:none!important;animation:none!important}}.sonner-loader{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);transform-origin:center;transition:opacity .2s,transform .2s}.sonner-loader[data-visible=false]{opacity:0;transform:scale(.8) translate(-50%,-50%)}\");\n\nfunction isAction(action) {\n    return action.label !== undefined;\n}\n\n// Visible toasts amount\nconst VISIBLE_TOASTS_AMOUNT = 3;\n// Viewport padding\nconst VIEWPORT_OFFSET = '24px';\n// Mobile viewport padding\nconst MOBILE_VIEWPORT_OFFSET = '16px';\n// Default lifetime of a toasts (in ms)\nconst TOAST_LIFETIME = 4000;\n// Default toast width\nconst TOAST_WIDTH = 356;\n// Default gap between toasts\nconst GAP = 14;\n// Threshold to dismiss a toast\nconst SWIPE_THRESHOLD = 45;\n// Equal to exit animation duration\nconst TIME_BEFORE_UNMOUNT = 200;\nfunction cn(...classes) {\n    return classes.filter(Boolean).join(' ');\n}\nfunction getDefaultSwipeDirections(position) {\n    const [y, x] = position.split('-');\n    const directions = [];\n    if (y) {\n        directions.push(y);\n    }\n    if (x) {\n        directions.push(x);\n    }\n    return directions;\n}\nconst Toast = (props)=>{\n    var _toast_classNames, _toast_classNames1, _toast_classNames2, _toast_classNames3, _toast_classNames4, _toast_classNames5, _toast_classNames6, _toast_classNames7, _toast_classNames8;\n    const { invert: ToasterInvert, toast, unstyled, interacting, setHeights, visibleToasts, heights, index, toasts, expanded, removeToast, defaultRichColors, closeButton: closeButtonFromToaster, style, cancelButtonStyle, actionButtonStyle, className = '', descriptionClassName = '', duration: durationFromToaster, position, gap, expandByDefault, classNames, icons, closeButtonAriaLabel = 'Close toast' } = props;\n    const [swipeDirection, setSwipeDirection] = React.useState(null);\n    const [swipeOutDirection, setSwipeOutDirection] = React.useState(null);\n    const [mounted, setMounted] = React.useState(false);\n    const [removed, setRemoved] = React.useState(false);\n    const [swiping, setSwiping] = React.useState(false);\n    const [swipeOut, setSwipeOut] = React.useState(false);\n    const [isSwiped, setIsSwiped] = React.useState(false);\n    const [offsetBeforeRemove, setOffsetBeforeRemove] = React.useState(0);\n    const [initialHeight, setInitialHeight] = React.useState(0);\n    const remainingTime = React.useRef(toast.duration || durationFromToaster || TOAST_LIFETIME);\n    const dragStartTime = React.useRef(null);\n    const toastRef = React.useRef(null);\n    const isFront = index === 0;\n    const isVisible = index + 1 <= visibleToasts;\n    const toastType = toast.type;\n    const dismissible = toast.dismissible !== false;\n    const toastClassname = toast.className || '';\n    const toastDescriptionClassname = toast.descriptionClassName || '';\n    // Height index is used to calculate the offset as it gets updated before the toast array, which means we can calculate the new layout faster.\n    const heightIndex = React.useMemo(()=>heights.findIndex((height)=>height.toastId === toast.id) || 0, [\n        heights,\n        toast.id\n    ]);\n    const closeButton = React.useMemo(()=>{\n        var _toast_closeButton;\n        return (_toast_closeButton = toast.closeButton) != null ? _toast_closeButton : closeButtonFromToaster;\n    }, [\n        toast.closeButton,\n        closeButtonFromToaster\n    ]);\n    const duration = React.useMemo(()=>toast.duration || durationFromToaster || TOAST_LIFETIME, [\n        toast.duration,\n        durationFromToaster\n    ]);\n    const closeTimerStartTimeRef = React.useRef(0);\n    const offset = React.useRef(0);\n    const lastCloseTimerStartTimeRef = React.useRef(0);\n    const pointerStartRef = React.useRef(null);\n    const [y, x] = position.split('-');\n    const toastsHeightBefore = React.useMemo(()=>{\n        return heights.reduce((prev, curr, reducerIndex)=>{\n            // Calculate offset up until current toast\n            if (reducerIndex >= heightIndex) {\n                return prev;\n            }\n            return prev + curr.height;\n        }, 0);\n    }, [\n        heights,\n        heightIndex\n    ]);\n    const isDocumentHidden = useIsDocumentHidden();\n    const invert = toast.invert || ToasterInvert;\n    const disabled = toastType === 'loading';\n    offset.current = React.useMemo(()=>heightIndex * gap + toastsHeightBefore, [\n        heightIndex,\n        toastsHeightBefore\n    ]);\n    React.useEffect(()=>{\n        remainingTime.current = duration;\n    }, [\n        duration\n    ]);\n    React.useEffect(()=>{\n        // Trigger enter animation without using CSS animation\n        setMounted(true);\n    }, []);\n    React.useEffect(()=>{\n        const toastNode = toastRef.current;\n        if (toastNode) {\n            const height = toastNode.getBoundingClientRect().height;\n            // Add toast height to heights array after the toast is mounted\n            setInitialHeight(height);\n            setHeights((h)=>[\n                    {\n                        toastId: toast.id,\n                        height,\n                        position: toast.position\n                    },\n                    ...h\n                ]);\n            return ()=>setHeights((h)=>h.filter((height)=>height.toastId !== toast.id));\n        }\n    }, [\n        setHeights,\n        toast.id\n    ]);\n    React.useLayoutEffect(()=>{\n        // Keep height up to date with the content in case it updates\n        if (!mounted) return;\n        const toastNode = toastRef.current;\n        const originalHeight = toastNode.style.height;\n        toastNode.style.height = 'auto';\n        const newHeight = toastNode.getBoundingClientRect().height;\n        toastNode.style.height = originalHeight;\n        setInitialHeight(newHeight);\n        setHeights((heights)=>{\n            const alreadyExists = heights.find((height)=>height.toastId === toast.id);\n            if (!alreadyExists) {\n                return [\n                    {\n                        toastId: toast.id,\n                        height: newHeight,\n                        position: toast.position\n                    },\n                    ...heights\n                ];\n            } else {\n                return heights.map((height)=>height.toastId === toast.id ? {\n                        ...height,\n                        height: newHeight\n                    } : height);\n            }\n        });\n    }, [\n        mounted,\n        toast.title,\n        toast.description,\n        setHeights,\n        toast.id,\n        toast.jsx,\n        toast.action,\n        toast.cancel\n    ]);\n    const deleteToast = React.useCallback(()=>{\n        // Save the offset for the exit swipe animation\n        setRemoved(true);\n        setOffsetBeforeRemove(offset.current);\n        setHeights((h)=>h.filter((height)=>height.toastId !== toast.id));\n        setTimeout(()=>{\n            removeToast(toast);\n        }, TIME_BEFORE_UNMOUNT);\n    }, [\n        toast,\n        removeToast,\n        setHeights,\n        offset\n    ]);\n    React.useEffect(()=>{\n        if (toast.promise && toastType === 'loading' || toast.duration === Infinity || toast.type === 'loading') return;\n        let timeoutId;\n        // Pause the timer on each hover\n        const pauseTimer = ()=>{\n            if (lastCloseTimerStartTimeRef.current < closeTimerStartTimeRef.current) {\n                // Get the elapsed time since the timer started\n                const elapsedTime = new Date().getTime() - closeTimerStartTimeRef.current;\n                remainingTime.current = remainingTime.current - elapsedTime;\n            }\n            lastCloseTimerStartTimeRef.current = new Date().getTime();\n        };\n        const startTimer = ()=>{\n            // setTimeout(, Infinity) behaves as if the delay is 0.\n            // As a result, the toast would be closed immediately, giving the appearance that it was never rendered.\n            // See: https://github.com/denysdovhan/wtfjs?tab=readme-ov-file#an-infinite-timeout\n            if (remainingTime.current === Infinity) return;\n            closeTimerStartTimeRef.current = new Date().getTime();\n            // Let the toast know it has started\n            timeoutId = setTimeout(()=>{\n                toast.onAutoClose == null ? void 0 : toast.onAutoClose.call(toast, toast);\n                deleteToast();\n            }, remainingTime.current);\n        };\n        if (expanded || interacting || isDocumentHidden) {\n            pauseTimer();\n        } else {\n            startTimer();\n        }\n        return ()=>clearTimeout(timeoutId);\n    }, [\n        expanded,\n        interacting,\n        toast,\n        toastType,\n        isDocumentHidden,\n        deleteToast\n    ]);\n    React.useEffect(()=>{\n        if (toast.delete) {\n            deleteToast();\n            toast.onDismiss == null ? void 0 : toast.onDismiss.call(toast, toast);\n        }\n    }, [\n        deleteToast,\n        toast.delete\n    ]);\n    function getLoadingIcon() {\n        var _toast_classNames;\n        if (icons == null ? void 0 : icons.loading) {\n            var _toast_classNames1;\n            return /*#__PURE__*/ React.createElement(\"div\", {\n                className: cn(classNames == null ? void 0 : classNames.loader, toast == null ? void 0 : (_toast_classNames1 = toast.classNames) == null ? void 0 : _toast_classNames1.loader, 'sonner-loader'),\n                \"data-visible\": toastType === 'loading'\n            }, icons.loading);\n        }\n        return /*#__PURE__*/ React.createElement(Loader, {\n            className: cn(classNames == null ? void 0 : classNames.loader, toast == null ? void 0 : (_toast_classNames = toast.classNames) == null ? void 0 : _toast_classNames.loader),\n            visible: toastType === 'loading'\n        });\n    }\n    const icon = toast.icon || (icons == null ? void 0 : icons[toastType]) || getAsset(toastType);\n    var _toast_richColors, _icons_close;\n    return /*#__PURE__*/ React.createElement(\"li\", {\n        tabIndex: 0,\n        ref: toastRef,\n        className: cn(className, toastClassname, classNames == null ? void 0 : classNames.toast, toast == null ? void 0 : (_toast_classNames = toast.classNames) == null ? void 0 : _toast_classNames.toast, classNames == null ? void 0 : classNames.default, classNames == null ? void 0 : classNames[toastType], toast == null ? void 0 : (_toast_classNames1 = toast.classNames) == null ? void 0 : _toast_classNames1[toastType]),\n        \"data-sonner-toast\": \"\",\n        \"data-rich-colors\": (_toast_richColors = toast.richColors) != null ? _toast_richColors : defaultRichColors,\n        \"data-styled\": !Boolean(toast.jsx || toast.unstyled || unstyled),\n        \"data-mounted\": mounted,\n        \"data-promise\": Boolean(toast.promise),\n        \"data-swiped\": isSwiped,\n        \"data-removed\": removed,\n        \"data-visible\": isVisible,\n        \"data-y-position\": y,\n        \"data-x-position\": x,\n        \"data-index\": index,\n        \"data-front\": isFront,\n        \"data-swiping\": swiping,\n        \"data-dismissible\": dismissible,\n        \"data-type\": toastType,\n        \"data-invert\": invert,\n        \"data-swipe-out\": swipeOut,\n        \"data-swipe-direction\": swipeOutDirection,\n        \"data-expanded\": Boolean(expanded || expandByDefault && mounted),\n        \"data-testid\": toast.testId,\n        style: {\n            '--index': index,\n            '--toasts-before': index,\n            '--z-index': toasts.length - index,\n            '--offset': `${removed ? offsetBeforeRemove : offset.current}px`,\n            '--initial-height': expandByDefault ? 'auto' : `${initialHeight}px`,\n            ...style,\n            ...toast.style\n        },\n        onDragEnd: ()=>{\n            setSwiping(false);\n            setSwipeDirection(null);\n            pointerStartRef.current = null;\n        },\n        onPointerDown: (event)=>{\n            if (event.button === 2) return; // Return early on right click\n            if (disabled || !dismissible) return;\n            dragStartTime.current = new Date();\n            setOffsetBeforeRemove(offset.current);\n            // Ensure we maintain correct pointer capture even when going outside of the toast (e.g. when swiping)\n            event.target.setPointerCapture(event.pointerId);\n            if (event.target.tagName === 'BUTTON') return;\n            setSwiping(true);\n            pointerStartRef.current = {\n                x: event.clientX,\n                y: event.clientY\n            };\n        },\n        onPointerUp: ()=>{\n            var _toastRef_current, _toastRef_current1, _dragStartTime_current;\n            if (swipeOut || !dismissible) return;\n            pointerStartRef.current = null;\n            const swipeAmountX = Number(((_toastRef_current = toastRef.current) == null ? void 0 : _toastRef_current.style.getPropertyValue('--swipe-amount-x').replace('px', '')) || 0);\n            const swipeAmountY = Number(((_toastRef_current1 = toastRef.current) == null ? void 0 : _toastRef_current1.style.getPropertyValue('--swipe-amount-y').replace('px', '')) || 0);\n            const timeTaken = new Date().getTime() - ((_dragStartTime_current = dragStartTime.current) == null ? void 0 : _dragStartTime_current.getTime());\n            const swipeAmount = swipeDirection === 'x' ? swipeAmountX : swipeAmountY;\n            const velocity = Math.abs(swipeAmount) / timeTaken;\n            if (Math.abs(swipeAmount) >= SWIPE_THRESHOLD || velocity > 0.11) {\n                setOffsetBeforeRemove(offset.current);\n                toast.onDismiss == null ? void 0 : toast.onDismiss.call(toast, toast);\n                if (swipeDirection === 'x') {\n                    setSwipeOutDirection(swipeAmountX > 0 ? 'right' : 'left');\n                } else {\n                    setSwipeOutDirection(swipeAmountY > 0 ? 'down' : 'up');\n                }\n                deleteToast();\n                setSwipeOut(true);\n                return;\n            } else {\n                var _toastRef_current2, _toastRef_current3;\n                (_toastRef_current2 = toastRef.current) == null ? void 0 : _toastRef_current2.style.setProperty('--swipe-amount-x', `0px`);\n                (_toastRef_current3 = toastRef.current) == null ? void 0 : _toastRef_current3.style.setProperty('--swipe-amount-y', `0px`);\n            }\n            setIsSwiped(false);\n            setSwiping(false);\n            setSwipeDirection(null);\n        },\n        onPointerMove: (event)=>{\n            var _window_getSelection, // Apply transform using both x and y values\n            _toastRef_current, _toastRef_current1;\n            if (!pointerStartRef.current || !dismissible) return;\n            const isHighlighted = ((_window_getSelection = window.getSelection()) == null ? void 0 : _window_getSelection.toString().length) > 0;\n            if (isHighlighted) return;\n            const yDelta = event.clientY - pointerStartRef.current.y;\n            const xDelta = event.clientX - pointerStartRef.current.x;\n            var _props_swipeDirections;\n            const swipeDirections = (_props_swipeDirections = props.swipeDirections) != null ? _props_swipeDirections : getDefaultSwipeDirections(position);\n            // Determine swipe direction if not already locked\n            if (!swipeDirection && (Math.abs(xDelta) > 1 || Math.abs(yDelta) > 1)) {\n                setSwipeDirection(Math.abs(xDelta) > Math.abs(yDelta) ? 'x' : 'y');\n            }\n            let swipeAmount = {\n                x: 0,\n                y: 0\n            };\n            const getDampening = (delta)=>{\n                const factor = Math.abs(delta) / 20;\n                return 1 / (1.5 + factor);\n            };\n            // Only apply swipe in the locked direction\n            if (swipeDirection === 'y') {\n                // Handle vertical swipes\n                if (swipeDirections.includes('top') || swipeDirections.includes('bottom')) {\n                    if (swipeDirections.includes('top') && yDelta < 0 || swipeDirections.includes('bottom') && yDelta > 0) {\n                        swipeAmount.y = yDelta;\n                    } else {\n                        // Smoothly transition to dampened movement\n                        const dampenedDelta = yDelta * getDampening(yDelta);\n                        // Ensure we don't jump when transitioning to dampened movement\n                        swipeAmount.y = Math.abs(dampenedDelta) < Math.abs(yDelta) ? dampenedDelta : yDelta;\n                    }\n                }\n            } else if (swipeDirection === 'x') {\n                // Handle horizontal swipes\n                if (swipeDirections.includes('left') || swipeDirections.includes('right')) {\n                    if (swipeDirections.includes('left') && xDelta < 0 || swipeDirections.includes('right') && xDelta > 0) {\n                        swipeAmount.x = xDelta;\n                    } else {\n                        // Smoothly transition to dampened movement\n                        const dampenedDelta = xDelta * getDampening(xDelta);\n                        // Ensure we don't jump when transitioning to dampened movement\n                        swipeAmount.x = Math.abs(dampenedDelta) < Math.abs(xDelta) ? dampenedDelta : xDelta;\n                    }\n                }\n            }\n            if (Math.abs(swipeAmount.x) > 0 || Math.abs(swipeAmount.y) > 0) {\n                setIsSwiped(true);\n            }\n            (_toastRef_current = toastRef.current) == null ? void 0 : _toastRef_current.style.setProperty('--swipe-amount-x', `${swipeAmount.x}px`);\n            (_toastRef_current1 = toastRef.current) == null ? void 0 : _toastRef_current1.style.setProperty('--swipe-amount-y', `${swipeAmount.y}px`);\n        }\n    }, closeButton && !toast.jsx && toastType !== 'loading' ? /*#__PURE__*/ React.createElement(\"button\", {\n        \"aria-label\": closeButtonAriaLabel,\n        \"data-disabled\": disabled,\n        \"data-close-button\": true,\n        onClick: disabled || !dismissible ? ()=>{} : ()=>{\n            deleteToast();\n            toast.onDismiss == null ? void 0 : toast.onDismiss.call(toast, toast);\n        },\n        className: cn(classNames == null ? void 0 : classNames.closeButton, toast == null ? void 0 : (_toast_classNames2 = toast.classNames) == null ? void 0 : _toast_classNames2.closeButton)\n    }, (_icons_close = icons == null ? void 0 : icons.close) != null ? _icons_close : CloseIcon) : null, (toastType || toast.icon || toast.promise) && toast.icon !== null && ((icons == null ? void 0 : icons[toastType]) !== null || toast.icon) ? /*#__PURE__*/ React.createElement(\"div\", {\n        \"data-icon\": \"\",\n        className: cn(classNames == null ? void 0 : classNames.icon, toast == null ? void 0 : (_toast_classNames3 = toast.classNames) == null ? void 0 : _toast_classNames3.icon)\n    }, toast.promise || toast.type === 'loading' && !toast.icon ? toast.icon || getLoadingIcon() : null, toast.type !== 'loading' ? icon : null) : null, /*#__PURE__*/ React.createElement(\"div\", {\n        \"data-content\": \"\",\n        className: cn(classNames == null ? void 0 : classNames.content, toast == null ? void 0 : (_toast_classNames4 = toast.classNames) == null ? void 0 : _toast_classNames4.content)\n    }, /*#__PURE__*/ React.createElement(\"div\", {\n        \"data-title\": \"\",\n        className: cn(classNames == null ? void 0 : classNames.title, toast == null ? void 0 : (_toast_classNames5 = toast.classNames) == null ? void 0 : _toast_classNames5.title)\n    }, toast.jsx ? toast.jsx : typeof toast.title === 'function' ? toast.title() : toast.title), toast.description ? /*#__PURE__*/ React.createElement(\"div\", {\n        \"data-description\": \"\",\n        className: cn(descriptionClassName, toastDescriptionClassname, classNames == null ? void 0 : classNames.description, toast == null ? void 0 : (_toast_classNames6 = toast.classNames) == null ? void 0 : _toast_classNames6.description)\n    }, typeof toast.description === 'function' ? toast.description() : toast.description) : null), /*#__PURE__*/ React.isValidElement(toast.cancel) ? toast.cancel : toast.cancel && isAction(toast.cancel) ? /*#__PURE__*/ React.createElement(\"button\", {\n        \"data-button\": true,\n        \"data-cancel\": true,\n        style: toast.cancelButtonStyle || cancelButtonStyle,\n        onClick: (event)=>{\n            // We need to check twice because typescript\n            if (!isAction(toast.cancel)) return;\n            if (!dismissible) return;\n            toast.cancel.onClick == null ? void 0 : toast.cancel.onClick.call(toast.cancel, event);\n            deleteToast();\n        },\n        className: cn(classNames == null ? void 0 : classNames.cancelButton, toast == null ? void 0 : (_toast_classNames7 = toast.classNames) == null ? void 0 : _toast_classNames7.cancelButton)\n    }, toast.cancel.label) : null, /*#__PURE__*/ React.isValidElement(toast.action) ? toast.action : toast.action && isAction(toast.action) ? /*#__PURE__*/ React.createElement(\"button\", {\n        \"data-button\": true,\n        \"data-action\": true,\n        style: toast.actionButtonStyle || actionButtonStyle,\n        onClick: (event)=>{\n            // We need to check twice because typescript\n            if (!isAction(toast.action)) return;\n            toast.action.onClick == null ? void 0 : toast.action.onClick.call(toast.action, event);\n            if (event.defaultPrevented) return;\n            deleteToast();\n        },\n        className: cn(classNames == null ? void 0 : classNames.actionButton, toast == null ? void 0 : (_toast_classNames8 = toast.classNames) == null ? void 0 : _toast_classNames8.actionButton)\n    }, toast.action.label) : null);\n};\nfunction getDocumentDirection() {\n    if (typeof window === 'undefined') return 'ltr';\n    if (typeof document === 'undefined') return 'ltr'; // For Fresh purpose\n    const dirAttribute = document.documentElement.getAttribute('dir');\n    if (dirAttribute === 'auto' || !dirAttribute) {\n        return window.getComputedStyle(document.documentElement).direction;\n    }\n    return dirAttribute;\n}\nfunction assignOffset(defaultOffset, mobileOffset) {\n    const styles = {};\n    [\n        defaultOffset,\n        mobileOffset\n    ].forEach((offset, index)=>{\n        const isMobile = index === 1;\n        const prefix = isMobile ? '--mobile-offset' : '--offset';\n        const defaultValue = isMobile ? MOBILE_VIEWPORT_OFFSET : VIEWPORT_OFFSET;\n        function assignAll(offset) {\n            [\n                'top',\n                'right',\n                'bottom',\n                'left'\n            ].forEach((key)=>{\n                styles[`${prefix}-${key}`] = typeof offset === 'number' ? `${offset}px` : offset;\n            });\n        }\n        if (typeof offset === 'number' || typeof offset === 'string') {\n            assignAll(offset);\n        } else if (typeof offset === 'object') {\n            [\n                'top',\n                'right',\n                'bottom',\n                'left'\n            ].forEach((key)=>{\n                if (offset[key] === undefined) {\n                    styles[`${prefix}-${key}`] = defaultValue;\n                } else {\n                    styles[`${prefix}-${key}`] = typeof offset[key] === 'number' ? `${offset[key]}px` : offset[key];\n                }\n            });\n        } else {\n            assignAll(defaultValue);\n        }\n    });\n    return styles;\n}\nfunction useSonner() {\n    const [activeToasts, setActiveToasts] = React.useState([]);\n    React.useEffect(()=>{\n        return ToastState.subscribe((toast)=>{\n            if (toast.dismiss) {\n                setTimeout(()=>{\n                    ReactDOM.flushSync(()=>{\n                        setActiveToasts((toasts)=>toasts.filter((t)=>t.id !== toast.id));\n                    });\n                });\n                return;\n            }\n            // Prevent batching, temp solution.\n            setTimeout(()=>{\n                ReactDOM.flushSync(()=>{\n                    setActiveToasts((toasts)=>{\n                        const indexOfExistingToast = toasts.findIndex((t)=>t.id === toast.id);\n                        // Update the toast if it already exists\n                        if (indexOfExistingToast !== -1) {\n                            return [\n                                ...toasts.slice(0, indexOfExistingToast),\n                                {\n                                    ...toasts[indexOfExistingToast],\n                                    ...toast\n                                },\n                                ...toasts.slice(indexOfExistingToast + 1)\n                            ];\n                        }\n                        return [\n                            toast,\n                            ...toasts\n                        ];\n                    });\n                });\n            });\n        });\n    }, []);\n    return {\n        toasts: activeToasts\n    };\n}\nconst Toaster = /*#__PURE__*/ React.forwardRef(function Toaster(props, ref) {\n    const { id, invert, position = 'bottom-right', hotkey = [\n        'altKey',\n        'KeyT'\n    ], expand, closeButton, className, offset, mobileOffset, theme = 'light', richColors, duration, style, visibleToasts = VISIBLE_TOASTS_AMOUNT, toastOptions, dir = getDocumentDirection(), gap = GAP, icons, containerAriaLabel = 'Notifications' } = props;\n    const [toasts, setToasts] = React.useState([]);\n    const filteredToasts = React.useMemo(()=>{\n        if (id) {\n            return toasts.filter((toast)=>toast.toasterId === id);\n        }\n        return toasts.filter((toast)=>!toast.toasterId);\n    }, [\n        toasts,\n        id\n    ]);\n    const possiblePositions = React.useMemo(()=>{\n        return Array.from(new Set([\n            position\n        ].concat(filteredToasts.filter((toast)=>toast.position).map((toast)=>toast.position))));\n    }, [\n        filteredToasts,\n        position\n    ]);\n    const [heights, setHeights] = React.useState([]);\n    const [expanded, setExpanded] = React.useState(false);\n    const [interacting, setInteracting] = React.useState(false);\n    const [actualTheme, setActualTheme] = React.useState(theme !== 'system' ? theme : typeof window !== 'undefined' ? window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light' : 'light');\n    const listRef = React.useRef(null);\n    const hotkeyLabel = hotkey.join('+').replace(/Key/g, '').replace(/Digit/g, '');\n    const lastFocusedElementRef = React.useRef(null);\n    const isFocusWithinRef = React.useRef(false);\n    const removeToast = React.useCallback((toastToRemove)=>{\n        setToasts((toasts)=>{\n            var _toasts_find;\n            if (!((_toasts_find = toasts.find((toast)=>toast.id === toastToRemove.id)) == null ? void 0 : _toasts_find.delete)) {\n                ToastState.dismiss(toastToRemove.id);\n            }\n            return toasts.filter(({ id })=>id !== toastToRemove.id);\n        });\n    }, []);\n    React.useEffect(()=>{\n        return ToastState.subscribe((toast)=>{\n            if (toast.dismiss) {\n                // Prevent batching of other state updates\n                requestAnimationFrame(()=>{\n                    setToasts((toasts)=>toasts.map((t)=>t.id === toast.id ? {\n                                ...t,\n                                delete: true\n                            } : t));\n                });\n                return;\n            }\n            // Prevent batching, temp solution.\n            setTimeout(()=>{\n                ReactDOM.flushSync(()=>{\n                    setToasts((toasts)=>{\n                        const indexOfExistingToast = toasts.findIndex((t)=>t.id === toast.id);\n                        // Update the toast if it already exists\n                        if (indexOfExistingToast !== -1) {\n                            return [\n                                ...toasts.slice(0, indexOfExistingToast),\n                                {\n                                    ...toasts[indexOfExistingToast],\n                                    ...toast\n                                },\n                                ...toasts.slice(indexOfExistingToast + 1)\n                            ];\n                        }\n                        return [\n                            toast,\n                            ...toasts\n                        ];\n                    });\n                });\n            });\n        });\n    }, [\n        toasts\n    ]);\n    React.useEffect(()=>{\n        if (theme !== 'system') {\n            setActualTheme(theme);\n            return;\n        }\n        if (theme === 'system') {\n            // check if current preference is dark\n            if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n                // it's currently dark\n                setActualTheme('dark');\n            } else {\n                // it's not dark\n                setActualTheme('light');\n            }\n        }\n        if (typeof window === 'undefined') return;\n        const darkMediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n        try {\n            // Chrome & Firefox\n            darkMediaQuery.addEventListener('change', ({ matches })=>{\n                if (matches) {\n                    setActualTheme('dark');\n                } else {\n                    setActualTheme('light');\n                }\n            });\n        } catch (error) {\n            // Safari < 14\n            darkMediaQuery.addListener(({ matches })=>{\n                try {\n                    if (matches) {\n                        setActualTheme('dark');\n                    } else {\n                        setActualTheme('light');\n                    }\n                } catch (e) {\n                    console.error(e);\n                }\n            });\n        }\n    }, [\n        theme\n    ]);\n    React.useEffect(()=>{\n        // Ensure expanded is always false when no toasts are present / only one left\n        if (toasts.length <= 1) {\n            setExpanded(false);\n        }\n    }, [\n        toasts\n    ]);\n    React.useEffect(()=>{\n        const handleKeyDown = (event)=>{\n            var _listRef_current;\n            const isHotkeyPressed = hotkey.every((key)=>event[key] || event.code === key);\n            if (isHotkeyPressed) {\n                var _listRef_current1;\n                setExpanded(true);\n                (_listRef_current1 = listRef.current) == null ? void 0 : _listRef_current1.focus();\n            }\n            if (event.code === 'Escape' && (document.activeElement === listRef.current || ((_listRef_current = listRef.current) == null ? void 0 : _listRef_current.contains(document.activeElement)))) {\n                setExpanded(false);\n            }\n        };\n        document.addEventListener('keydown', handleKeyDown);\n        return ()=>document.removeEventListener('keydown', handleKeyDown);\n    }, [\n        hotkey\n    ]);\n    React.useEffect(()=>{\n        if (listRef.current) {\n            return ()=>{\n                if (lastFocusedElementRef.current) {\n                    lastFocusedElementRef.current.focus({\n                        preventScroll: true\n                    });\n                    lastFocusedElementRef.current = null;\n                    isFocusWithinRef.current = false;\n                }\n            };\n        }\n    }, [\n        listRef.current\n    ]);\n    return(// Remove item from normal navigation flow, only available via hotkey\n    /*#__PURE__*/ React.createElement(\"section\", {\n        ref: ref,\n        \"aria-label\": `${containerAriaLabel} ${hotkeyLabel}`,\n        tabIndex: -1,\n        \"aria-live\": \"polite\",\n        \"aria-relevant\": \"additions text\",\n        \"aria-atomic\": \"false\",\n        suppressHydrationWarning: true\n    }, possiblePositions.map((position, index)=>{\n        var _heights_;\n        const [y, x] = position.split('-');\n        if (!filteredToasts.length) return null;\n        return /*#__PURE__*/ React.createElement(\"ol\", {\n            key: position,\n            dir: dir === 'auto' ? getDocumentDirection() : dir,\n            tabIndex: -1,\n            ref: listRef,\n            className: className,\n            \"data-sonner-toaster\": true,\n            \"data-sonner-theme\": actualTheme,\n            \"data-y-position\": y,\n            \"data-x-position\": x,\n            style: {\n                '--front-toast-height': `${((_heights_ = heights[0]) == null ? void 0 : _heights_.height) || 0}px`,\n                '--width': `${TOAST_WIDTH}px`,\n                '--gap': `${gap}px`,\n                ...style,\n                ...assignOffset(offset, mobileOffset)\n            },\n            onBlur: (event)=>{\n                if (isFocusWithinRef.current && !event.currentTarget.contains(event.relatedTarget)) {\n                    isFocusWithinRef.current = false;\n                    if (lastFocusedElementRef.current) {\n                        lastFocusedElementRef.current.focus({\n                            preventScroll: true\n                        });\n                        lastFocusedElementRef.current = null;\n                    }\n                }\n            },\n            onFocus: (event)=>{\n                const isNotDismissible = event.target instanceof HTMLElement && event.target.dataset.dismissible === 'false';\n                if (isNotDismissible) return;\n                if (!isFocusWithinRef.current) {\n                    isFocusWithinRef.current = true;\n                    lastFocusedElementRef.current = event.relatedTarget;\n                }\n            },\n            onMouseEnter: ()=>setExpanded(true),\n            onMouseMove: ()=>setExpanded(true),\n            onMouseLeave: ()=>{\n                // Avoid setting expanded to false when interacting with a toast, e.g. swiping\n                if (!interacting) {\n                    setExpanded(false);\n                }\n            },\n            onDragEnd: ()=>setExpanded(false),\n            onPointerDown: (event)=>{\n                const isNotDismissible = event.target instanceof HTMLElement && event.target.dataset.dismissible === 'false';\n                if (isNotDismissible) return;\n                setInteracting(true);\n            },\n            onPointerUp: ()=>setInteracting(false)\n        }, filteredToasts.filter((toast)=>!toast.position && index === 0 || toast.position === position).map((toast, index)=>{\n            var _toastOptions_duration, _toastOptions_closeButton;\n            return /*#__PURE__*/ React.createElement(Toast, {\n                key: toast.id,\n                icons: icons,\n                index: index,\n                toast: toast,\n                defaultRichColors: richColors,\n                duration: (_toastOptions_duration = toastOptions == null ? void 0 : toastOptions.duration) != null ? _toastOptions_duration : duration,\n                className: toastOptions == null ? void 0 : toastOptions.className,\n                descriptionClassName: toastOptions == null ? void 0 : toastOptions.descriptionClassName,\n                invert: invert,\n                visibleToasts: visibleToasts,\n                closeButton: (_toastOptions_closeButton = toastOptions == null ? void 0 : toastOptions.closeButton) != null ? _toastOptions_closeButton : closeButton,\n                interacting: interacting,\n                position: position,\n                style: toastOptions == null ? void 0 : toastOptions.style,\n                unstyled: toastOptions == null ? void 0 : toastOptions.unstyled,\n                classNames: toastOptions == null ? void 0 : toastOptions.classNames,\n                cancelButtonStyle: toastOptions == null ? void 0 : toastOptions.cancelButtonStyle,\n                actionButtonStyle: toastOptions == null ? void 0 : toastOptions.actionButtonStyle,\n                closeButtonAriaLabel: toastOptions == null ? void 0 : toastOptions.closeButtonAriaLabel,\n                removeToast: removeToast,\n                toasts: filteredToasts.filter((t)=>t.position == toast.position),\n                heights: heights.filter((h)=>h.position == toast.position),\n                setHeights: setHeights,\n                expandByDefault: expand,\n                gap: gap,\n                expanded: expanded,\n                swipeDirections: props.swipeDirections\n            });\n        }));\n    })));\n});\n\nexport { Toaster, toast, useSonner };\n","import { useState } from 'react'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Eye, EyeOff, Lock, Mail } from 'lucide-react'\r\n\r\nexport default function Login() {\r\n  const [phone, setPhone] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [showPassword, setShowPassword] = useState(false)\r\n  const [loading, setLoading] = useState(false)\r\n  const [language, setLanguage] = useState<'en' | 'hi'>('en')\r\n  const { login } = useAuth()\r\n  const navigate = useNavigate()\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    setLoading(true)\r\n\r\n    try {\r\n      await login(phone, password)\r\n      // Redirect to root - RoleBasedRouter will handle user-specific routing\r\n      console.log('Login successful, redirecting to dashboard')\r\n      navigate('/')\r\n    } catch (error) {\r\n      console.error('Login failed:', error)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const translations = {\r\n    en: {\r\n      title: 'SAUBHAGYA',\r\n      subtitle: 'Biogas Management & Rural Energy Distribution',\r\n      phone: 'Phone Number',\r\n      password: 'Password',\r\n      login: 'Login',\r\n      loading: 'Logging in...',\r\n      phonePlaceholder: 'Enter your phone number',\r\n      passwordPlaceholder: 'Enter your password'\r\n    },\r\n    hi: {\r\n      title: 'सौभाग्य',\r\n      subtitle: 'बायोगैस प्रबंधन और ग्रामीण ऊर्जा वितरण',\r\n      phone: 'फ़ोन नंबर',\r\n      password: 'पासवर्ड',\r\n      login: 'लॉगिन',\r\n      loading: 'लॉगिन हो रहा है...',\r\n      phonePlaceholder: 'अपना फ़ोन नंबर दर्ज करें',\r\n      passwordPlaceholder: 'अपना पासवर्ड दर्ज करें'\r\n    }\r\n  }\r\n\r\n  const t = translations[language]\r\n\r\n  return (\r\n    <div className=\"min-h-screen relative overflow-hidden flex items-center justify-center p-4\">\r\n      {/* Background Video/Image */}\r\n      <div className=\"absolute inset-0 z-0\">\r\n        {/* Wide panoramic pastoral landscape with cows */}\r\n        <div\r\n          className=\"absolute inset-0 bg-cover bg-center bg-no-repeat transform scale-105\"\r\n          style={{\r\n            backgroundImage: `url(\"https://images.unsplash.com/photo-1574943320219-553eb213f72d?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2560&q=80\"), url(\"https://images.unsplash.com/photo-1506905925346-21bda4d32df4?ixlib=rb-4.0.3&auto=format&fit=crop&w=2560&q=80\"), url(\"https://images.unsplash.com/photo-1595058542840-20d2ce4e77f8?ixlib=rb-4.0.3&auto=format&fit=crop&w=2560&q=80\"), linear-gradient(135deg, #22c55e 0%, #059669 100%)`\r\n          }}\r\n        ></div>\r\n\r\n        {/* Balanced natural gradient overlay */}\r\n        <div className=\"absolute inset-0 bg-gradient-to-br from-slate-900/75 via-blue-900/70 to-emerald-900/75 z-10\"></div>\r\n\r\n        {/* Additional texture overlay */}\r\n        <div\r\n          className=\"absolute inset-0 opacity-20 z-10\"\r\n          style={{\r\n            backgroundImage: `url(\"data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23ffffff' fill-opacity='0.1'%3E%3Ccircle cx='30' cy='30' r='4'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\")`\r\n          }}\r\n        ></div>\r\n\r\n        {/* Subtle natural floating animations */}\r\n        <div className=\"absolute inset-0 overflow-hidden\">\r\n          {/* Soft natural orbs */}\r\n          <div className=\"absolute top-1/4 left-1/6 w-32 h-32 bg-blue-400/10 rounded-full blur-2xl animate-pulse\"></div>\r\n          <div className=\"absolute bottom-1/3 right-1/5 w-48 h-48 bg-slate-400/8 rounded-full blur-3xl animate-pulse\" style={{animationDelay: '2s'}}></div>\r\n          <div className=\"absolute top-2/3 left-1/2 w-24 h-24 bg-teal-400/12 rounded-full blur-xl animate-pulse\" style={{animationDelay: '4s'}}></div>\r\n          <div className=\"absolute top-1/6 right-1/3 w-40 h-40 bg-cyan-400/8 rounded-full blur-2xl animate-pulse\" style={{animationDelay: '6s'}}></div>\r\n\r\n          {/* Floating particles */}\r\n          <div className=\"absolute top-1/5 left-3/4 w-2 h-2 bg-white/30 rounded-full animate-bounce\" style={{animationDelay: '1s', animationDuration: '3s'}}></div>\r\n          <div className=\"absolute bottom-1/4 left-1/5 w-1 h-1 bg-blue-300/40 rounded-full animate-bounce\" style={{animationDelay: '3s', animationDuration: '4s'}}></div>\r\n          <div className=\"absolute top-1/2 right-1/6 w-1.5 h-1.5 bg-teal-300/35 rounded-full animate-bounce\" style={{animationDelay: '5s', animationDuration: '3.5s'}}></div>\r\n        </div>\r\n\r\n        {/* Subtle grid pattern */}\r\n        <div\r\n          className=\"absolute inset-0 opacity-5\"\r\n          style={{\r\n            backgroundImage: `linear-gradient(rgba(255,255,255,.1) 1px, transparent 1px), linear-gradient(90deg, rgba(255,255,255,.1) 1px, transparent 1px)`,\r\n            backgroundSize: '50px 50px'\r\n          }}\r\n        ></div>\r\n      </div>\r\n\r\n      <div className=\"max-w-md w-full space-y-8 relative z-20 animate-in fade-in slide-in-from-bottom-4 duration-1000\">\r\n        {/* Language Toggle */}\r\n        <div className=\"flex justify-end\">\r\n          <button\r\n            onClick={() => setLanguage(language === 'en' ? 'hi' : 'en')}\r\n            className=\"px-4 py-2 text-sm bg-white/10 backdrop-blur-sm rounded-lg shadow-lg border border-white/20 hover:bg-white/20 text-white transition-all duration-300\"\r\n          >\r\n            {language === 'en' ? 'हिंदी' : 'English'}\r\n          </button>\r\n        </div>\r\n\r\n        {/* Header */}\r\n        <div className=\"text-center\">\r\n          {/* Logo/Icon */}\r\n          <div className=\"flex justify-center mb-6\">\r\n            <div className=\"relative\">\r\n              <div className=\"w-28 h-28 bg-white/95 backdrop-blur-sm rounded-2xl flex items-center justify-center shadow-2xl transform hover:scale-110 transition-all duration-300 border border-white/30 p-1\">\r\n                {/* Your Original Dhanush Logo */}\r\n                <img\r\n                  src=\"/images/dhanush_group_logo.jpg\"\r\n                  alt=\"Dhanush Group Logo\"\r\n                  className=\"w-full h-full object-contain rounded-xl\"\r\n                />\r\n              </div>\r\n              {/* Animated ring */}\r\n              <div className=\"absolute inset-0 w-28 h-28 border-2 border-white/20 rounded-2xl animate-ping\"></div>\r\n              <div className=\"absolute inset-2 w-24 h-24 border border-white/10 rounded-xl animate-pulse\"></div>\r\n            </div>\r\n          </div>\r\n\r\n          <h1 className=\"text-4xl font-bold text-white mb-4 drop-shadow-lg\">\r\n            {t.title}\r\n          </h1>\r\n          <p className=\"text-white/90 text-lg mb-8 drop-shadow\">\r\n            {t.subtitle}\r\n          </p>\r\n        </div>\r\n\r\n        {/* Login Form */}\r\n        <form onSubmit={handleSubmit} className=\"bg-white/10 backdrop-blur-md p-8 rounded-2xl shadow-2xl border border-white/20 space-y-6\">\r\n          <div>\r\n            <label htmlFor=\"phone\" className=\"block text-sm font-medium text-white mb-2\">\r\n              {t.phone}\r\n            </label>\r\n            <div className=\"relative\">\r\n              <Mail className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-white/70 h-5 w-5\" />\r\n              <input\r\n                id=\"phone\"\r\n                type=\"tel\"\r\n                value={phone}\r\n                onChange={(e) => setPhone(e.target.value)}\r\n                placeholder={t.phonePlaceholder}\r\n                className=\"w-full pl-10 pr-3 py-3 bg-white/10 backdrop-blur-sm border border-white/30 rounded-lg focus:outline-none focus:ring-2 focus:ring-white/50 focus:border-white/50 text-white placeholder-white/70 transition-all duration-300\"\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"password\" className=\"block text-sm font-medium text-white mb-2\">\r\n              {t.password}\r\n            </label>\r\n            <div className=\"relative\">\r\n              <Lock className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-white/70 h-5 w-5\" />\r\n              <input\r\n                id=\"password\"\r\n                type={showPassword ? 'text' : 'password'}\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                placeholder={t.passwordPlaceholder}\r\n                className=\"w-full pl-10 pr-12 py-3 bg-white/10 backdrop-blur-sm border border-white/30 rounded-lg focus:outline-none focus:ring-2 focus:ring-white/50 focus:border-white/50 text-white placeholder-white/70 transition-all duration-300\"\r\n                required\r\n              />\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => setShowPassword(!showPassword)}\r\n                className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-white/70 hover:text-white transition-colors duration-200\"\r\n              >\r\n                {showPassword ? <EyeOff className=\"h-5 w-5\" /> : <Eye className=\"h-5 w-5\" />}\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            disabled={loading}\r\n            className=\"w-full bg-gradient-to-r from-green-500 to-blue-600 text-white py-3 px-6 rounded-lg hover:from-green-600 hover:to-blue-700 focus:outline-none focus:ring-2 focus:ring-white/50 focus:ring-offset-2 focus:ring-offset-transparent disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-300 font-semibold shadow-lg hover:shadow-xl transform hover:scale-105\"\r\n          >\r\n            {loading ? t.loading : t.login}\r\n          </button>\r\n        </form>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { type ClassValue, clsx } from \"clsx\"\r\nimport { twMerge } from \"tailwind-merge\"\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs))\r\n}","import * as React from \"react\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\r\n        destructive: \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\r\n        outline: \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\r\n        secondary: \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\r\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\r\n        link: \"text-primary underline-offset-4 hover:underline\",\r\n      },\r\n      size: {\r\n        default: \"h-10 px-4 py-2\",\r\n        sm: \"h-9 rounded-md px-3\",\r\n        lg: \"h-11 rounded-md px-8\",\r\n        icon: \"h-10 w-10\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nexport interface ButtonProps\r\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n    VariantProps<typeof buttonVariants> {}\r\n\r\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\r\n  ({ className, variant, size, ...props }, ref) => {\r\n    return (\r\n      <button\r\n        className={cn(buttonVariants({ variant, size, className }))}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nButton.displayName = \"Button\"\r\n\r\nexport { Button, buttonVariants }","import * as React from \"react\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nexport interface BadgeProps\r\n  extends React.HTMLAttributes<HTMLDivElement> {\r\n  variant?: \"default\" | \"secondary\" | \"destructive\" | \"outline\"\r\n}\r\n\r\nfunction Badge({ className, variant = \"default\", ...props }: BadgeProps) {\r\n  return (\r\n    <div\r\n      className={cn(\r\n        \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\r\n        {\r\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\":\r\n            variant === \"default\",\r\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\":\r\n            variant === \"secondary\",\r\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\":\r\n            variant === \"destructive\",\r\n          \"text-foreground\": variant === \"outline\",\r\n        },\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Badge }","import * as React from \"react\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nexport interface SeparatorProps\r\n  extends React.HTMLAttributes<HTMLDivElement> {\r\n  orientation?: \"horizontal\" | \"vertical\"\r\n  decorative?: boolean\r\n}\r\n\r\nconst Separator = React.forwardRef<HTMLDivElement, SeparatorProps>(\r\n  (\r\n    { className, orientation = \"horizontal\", decorative = true, ...props },\r\n    ref\r\n  ) => (\r\n    <div\r\n      ref={ref}\r\n      role={decorative ? \"none\" : \"separator\"}\r\n      aria-orientation={orientation}\r\n      className={cn(\r\n        \"shrink-0 bg-border\",\r\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n)\r\nSeparator.displayName = \"Separator\"\r\n\r\nexport { Separator }","import * as React from \"react\"\r\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\r\nimport { X } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Dialog = DialogPrimitive.Root\r\n\r\nconst DialogTrigger = DialogPrimitive.Trigger\r\n\r\nconst DialogPortal = DialogPrimitive.Portal\r\n\r\nconst DialogClose = DialogPrimitive.Close\r\n\r\nconst DialogOverlay = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\r\n>(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Overlay\r\n    ref={ref}\r\n    className={cn(\r\n      \"fixed inset-0 z-50 bg-background/80 backdrop-blur-sm data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\r\n\r\nconst DialogContent = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\r\n>(({ className, children, ...props }, ref) => (\r\n  <DialogPortal>\r\n    <DialogOverlay />\r\n    <DialogPrimitive.Content\r\n      ref={ref}\r\n      className={cn(\r\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      {children}\r\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\r\n        <X className=\"h-4 w-4\" />\r\n        <span className=\"sr-only\">Close</span>\r\n      </DialogPrimitive.Close>\r\n    </DialogPrimitive.Content>\r\n  </DialogPortal>\r\n))\r\nDialogContent.displayName = DialogPrimitive.Content.displayName\r\n\r\nconst DialogHeader = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div\r\n    className={cn(\r\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n)\r\nDialogHeader.displayName = \"DialogHeader\"\r\n\r\nconst DialogFooter = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div\r\n    className={cn(\r\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n)\r\nDialogFooter.displayName = \"DialogFooter\"\r\n\r\nconst DialogTitle = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Title>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\r\n>(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Title\r\n    ref={ref}\r\n    className={cn(\r\n      \"text-lg font-semibold leading-none tracking-tight\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nDialogTitle.displayName = DialogPrimitive.Title.displayName\r\n\r\nconst DialogDescription = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Description>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\r\n>(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Description\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nDialogDescription.displayName = DialogPrimitive.Description.displayName\r\n\r\nexport {\r\n  Dialog,\r\n  DialogPortal,\r\n  DialogOverlay,\r\n  DialogClose,\r\n  DialogTrigger,\r\n  DialogContent,\r\n  DialogHeader,\r\n  DialogFooter,\r\n  DialogTitle,\r\n  DialogDescription,\r\n}","/**\r\n * Microservices API Layer\r\n * This implements proper microservices architecture with service discovery\r\n * Each service has its own endpoint but goes through proper routing\r\n */\r\n\r\nexport interface ServiceConfig {\r\n  name: string;\r\n  baseUrl: string;\r\n  port: number;\r\n  endpoints: string[];\r\n  status: 'active' | 'inactive' | 'maintenance';\r\n}\r\n\r\n/**\r\n * Service Registry - Defines all microservices in the SAUBHAGYA platform\r\n * Updated to match verified microservices (all 6 healthy)\r\n */\r\nexport const SERVICE_REGISTRY: Record<string, ServiceConfig> = {\r\n  'auth-service': {\r\n    name: 'Authentication Service',\r\n    baseUrl: 'http://localhost:8081',\r\n    port: 8081,\r\n    endpoints: [\r\n      '/auth/api/v1/login',\r\n      '/auth/api/v1/register',\r\n      '/auth/api/v1/cattle/list',\r\n      '/auth/api/v1/cattle/store',\r\n      '/auth/oauth2/token',\r\n      '/auth/api/auth/users',\r\n      '/auth/api/auth/users/{id}',\r\n      '/auth/api/auth/users/{id}/toggle-status',\r\n      '/auth/api/auth/users/{id}/permissions',\r\n      '/auth/api/auth/profile',\r\n      '/auth/api/auth/logout'\r\n    ],\r\n    status: 'active'\r\n  },\r\n  'iot-service': {\r\n    name: 'IoT Device Management Service',\r\n    baseUrl: 'http://localhost:8080',\r\n    port: 8080,\r\n    endpoints: ['/iot/api/v1/devices', '/iot/api/v1/rfid-tags', '/iot/api/v1/sensors'],\r\n    status: 'active'\r\n  },\r\n  'biogas-service': {\r\n    name: 'Biogas Contribution Service',\r\n    baseUrl: 'http://localhost:8082',\r\n    port: 8082,\r\n    endpoints: ['/api/v1/contributions', '/api/v1/contributions/farmer', '/api/v1/contributions/analytics'],\r\n    status: 'active'\r\n  },\r\n  'transaction-service': {\r\n    name: 'Biogas Transaction Service',\r\n    baseUrl: 'http://localhost:8082',\r\n    port: 8082,\r\n    endpoints: ['/api/v1/transactions', '/api/v1/biogas-production', '/api/v1/contributions'],\r\n    status: 'active'\r\n  },\r\n  'sales-service': {\r\n    name: 'Commerce & Sales Service',\r\n    baseUrl: 'http://localhost:8083',\r\n    port: 8083,\r\n    endpoints: ['/api/commerce/sales', '/api/commerce/orders', '/api/commerce/contributions'],\r\n    status: 'active'\r\n  },\r\n  'reporting-service': {\r\n    name: 'Analytics & Reporting Service',\r\n    baseUrl: 'http://localhost:8084',\r\n    port: 8084,\r\n    endpoints: [\r\n      '/api/v1/analytics',\r\n      '/api/v1/reports',\r\n      '/api/v1/dashboard',\r\n      '/system/metrics',\r\n      '/system/services',\r\n      '/system/performance',\r\n      '/audit/logs',\r\n      '/audit/export',\r\n      '/audit/stats/by-module',\r\n      '/audit/stats/by-action'\r\n    ],\r\n    status: 'active'\r\n  },\r\n  'government-service': {\r\n    name: 'Government Dashboard Service',\r\n    baseUrl: 'http://localhost:8085',\r\n    port: 8085,\r\n    endpoints: ['/government/api/v1/dashboard', '/government/api/v1/schemes', '/government/api/v1/compliance'],\r\n    status: 'active'\r\n  }\r\n};\r\n\r\n/**\r\n * Microservices Client - Handles service discovery and routing\r\n */\r\nexport class MicroservicesClient {\r\n  private serviceRegistry = SERVICE_REGISTRY;\r\n\r\n  /**\r\n   * Get service configuration by name\r\n   */\r\n  getService(serviceName: string): ServiceConfig | null {\r\n    return this.serviceRegistry[serviceName] || null;\r\n  }\r\n\r\n  /**\r\n   * Handle 401 Unauthorized errors - clear tokens and redirect to login\r\n   */\r\n  private handle401Error(): void {\r\n    // Clear all tokens from localStorage\r\n    localStorage.removeItem('accessToken');\r\n    localStorage.removeItem('refreshToken');\r\n    localStorage.removeItem('saubhagya_jwt_token');\r\n    localStorage.removeItem('user');\r\n    localStorage.removeItem('sessionStart');\r\n\r\n    // Get current path for redirect after re-login\r\n    const currentPath = window.location.pathname + window.location.search;\r\n    const redirectParam = currentPath !== '/' ? `?redirect=${encodeURIComponent(currentPath)}` : '';\r\n\r\n    // Import toast dynamically to avoid circular dependencies\r\n    import('sonner').then(({ toast }) => {\r\n      toast.error('Session expired. Please login again.');\r\n    });\r\n\r\n    // Redirect to login page with redirect parameter\r\n    window.location.href = `/login${redirectParam}`;\r\n  }\r\n\r\n  /**\r\n   * Make API call to specific microservice\r\n   */\r\n  async callService(serviceName: string, endpoint: string, options: RequestInit = {}): Promise<Response> {\r\n    const service = this.getService(serviceName);\r\n\r\n    if (!service) {\r\n      throw new Error(`Service '${serviceName}' not found in registry`);\r\n    }\r\n\r\n    if (service.status !== 'active') {\r\n      throw new Error(`Service '${serviceName}' is currently ${service.status}`);\r\n    }\r\n\r\n    const url = `${service.baseUrl}${endpoint}`;\r\n\r\n    // Add simple headers that work with CORS\r\n    const token = localStorage.getItem('saubhagya_jwt_token');\r\n    const headers = {\r\n      'Content-Type': 'application/json',\r\n      ...(token && { Authorization: `Bearer ${token}` }),\r\n      ...options.headers\r\n    };\r\n\r\n    const response = await fetch(url, {\r\n      ...options,\r\n      headers\r\n    });\r\n\r\n    // Handle 401 Unauthorized errors\r\n    if (response.status === 401) {\r\n      this.handle401Error();\r\n      throw new Error('Unauthorized - Session expired');\r\n    }\r\n\r\n    return response;\r\n  }\r\n\r\n  /**\r\n   * Get all active services\r\n   */\r\n  getActiveServices(): ServiceConfig[] {\r\n    return Object.values(this.serviceRegistry).filter(service => service.status === 'active');\r\n  }\r\n\r\n  /**\r\n   * Health check for all services\r\n   */\r\n  async healthCheck(): Promise<Record<string, boolean>> {\r\n    const results: Record<string, boolean> = {};\r\n\r\n    for (const [name, service] of Object.entries(this.serviceRegistry)) {\r\n      try {\r\n        const response = await fetch(`${service.baseUrl}/actuator/health`, {\r\n          method: 'GET',\r\n          timeout: 5000\r\n        } as any);\r\n        results[name] = response.ok;\r\n      } catch {\r\n        results[name] = false;\r\n      }\r\n    }\r\n\r\n    return results;\r\n  }\r\n}\r\n\r\n// Export singleton instance\r\nexport const microservicesClient = new MicroservicesClient();\r\n\r\n/**\r\n * Service-specific clients for type safety\r\n */\r\n\r\nexport const IoTServiceClient = {\r\n  async getCattleList() {\r\n    // Call gaushala service with JWT authentication\r\n    try {\r\n      // Get JWT token from localStorage\r\n      const token = localStorage.getItem('saubhagya_jwt_token');\r\n\r\n      const headers: Record<string, string> = {\r\n        'Content-Type': 'application/json'\r\n      };\r\n\r\n      if (token) {\r\n        headers['Authorization'] = `Bearer ${token}`;\r\n      }\r\n\r\n      const response = await fetch('http://localhost:8086/gaushala-service/api/v1/gaushala/cattle', {\r\n        method: 'GET',\r\n        headers\r\n      });\r\n\r\n      // Handle 401 Unauthorized\r\n      if (response.status === 401) {\r\n        microservicesClient['handle401Error']();\r\n        throw new Error('Unauthorized - Session expired');\r\n      }\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      // Transform PagedResponse to expected format\r\n      if (data && data.content) {\r\n        return {\r\n          success: true,\r\n          data: data.content\r\n        };\r\n      }\r\n\r\n      return {\r\n        success: true,\r\n        data: data\r\n      };\r\n    } catch (error) {\r\n      // Import toast dynamically to show error to user\r\n      import('sonner').then(({ toast }) => {\r\n        toast.error('Unable to fetch cattle data. Please check if the Gaushala service is running.');\r\n      });\r\n\r\n      // Return empty array when API fails - NO MOCK DATA\r\n      return {\r\n        success: false,\r\n        data: []\r\n      };\r\n    }\r\n  },\r\n\r\n  async addCattle(cattleData: any) {\r\n    const token = localStorage.getItem('saubhagya_jwt_token');\r\n    const headers: Record<string, string> = {\r\n      'Content-Type': 'application/json'\r\n    };\r\n    if (token) {\r\n      headers['Authorization'] = `Bearer ${token}`;\r\n    }\r\n\r\n    const response = await fetch('http://localhost:8086/gaushala-service/api/v1/gaushala/cattle', {\r\n      method: 'POST',\r\n      headers,\r\n      body: JSON.stringify(cattleData)\r\n    });\r\n\r\n    // Handle 401 Unauthorized\r\n    if (response.status === 401) {\r\n      microservicesClient['handle401Error']();\r\n      throw new Error('Unauthorized - Session expired');\r\n    }\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n\r\n    return { success: true, data: await response.json() };\r\n  },\r\n\r\n  async updateCattle(id: string, cattleData: any) {\r\n    const token = localStorage.getItem('saubhagya_jwt_token');\r\n    const headers: Record<string, string> = {\r\n      'Content-Type': 'application/json'\r\n    };\r\n    if (token) {\r\n      headers['Authorization'] = `Bearer ${token}`;\r\n    }\r\n\r\n    const response = await fetch(`http://localhost:8086/gaushala-service/api/v1/gaushala/cattle/${id}`, {\r\n      method: 'PUT',\r\n      headers,\r\n      body: JSON.stringify(cattleData)\r\n    });\r\n\r\n    // Handle 401 Unauthorized\r\n    if (response.status === 401) {\r\n      microservicesClient['handle401Error']();\r\n      throw new Error('Unauthorized - Session expired');\r\n    }\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n\r\n    return { success: true, data: await response.json() };\r\n  },\r\n\r\n  async deleteCattle(id: string) {\r\n    const token = localStorage.getItem('saubhagya_jwt_token');\r\n    const headers: Record<string, string> = {\r\n      'Content-Type': 'application/json'\r\n    };\r\n    if (token) {\r\n      headers['Authorization'] = `Bearer ${token}`;\r\n    }\r\n\r\n    const response = await fetch(`http://localhost:8086/gaushala-service/api/v1/gaushala/cattle/${id}`, {\r\n      method: 'DELETE',\r\n      headers\r\n    });\r\n\r\n    // Handle 401 Unauthorized\r\n    if (response.status === 401) {\r\n      microservicesClient['handle401Error']();\r\n      throw new Error('Unauthorized - Session expired');\r\n    }\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n\r\n    return { success: true };\r\n  }\r\n};\r\n\r\nexport const BiogasServiceClient = {\r\n  async recordContribution(contributionData: any) {\r\n    // Try biogas service first, fall back to mock success if service is unavailable\r\n    try {\r\n      const response = await fetch('http://localhost:8082/api/v1/contributions', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(contributionData)\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        return data;\r\n      } else {\r\n        // Service unavailable, return mock success response\r\n        return {\r\n          success: true,\r\n          id: `COW_DUNG_TXN_${Date.now()}`,\r\n          message: 'Transaction recorded successfully (fallback mode)',\r\n          ...contributionData\r\n        };\r\n      }\r\n    } catch (error) {\r\n      // Return mock success response for demonstration\r\n      return {\r\n        success: true,\r\n        id: `COW_DUNG_TXN_${Date.now()}`,\r\n        message: 'Transaction recorded successfully (fallback mode)',\r\n        ...contributionData\r\n      };\r\n    }\r\n  },\r\n\r\n  async getAllContributions(page: number = 0, size: number = 100) {\r\n    try {\r\n      // Fetch all contributions with field worker info\r\n      const response = await fetch('http://localhost:8082/api/v1/contributions', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        return data || [];\r\n      } else {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to fetch biogas contributions:', error);\r\n      // Import toast dynamically to show error to user\r\n      import('sonner').then(({ toast }) => {\r\n        toast.error('Unable to fetch biogas contributions. Please check if the Biogas service is running.');\r\n      });\r\n      return [];\r\n    }\r\n  },\r\n\r\n  async getFarmerContributions(farmerId: string, page: number = 0, size: number = 20) {\r\n    const response = await microservicesClient.callService('biogas-service', `/api/v1/contributions/farmer/${farmerId}?page=${page}&size=${size}`);\r\n    return response.json();\r\n  },\r\n\r\n  async getContribution(contributionId: string) {\r\n    const response = await microservicesClient.callService('biogas-service', `/api/v1/contributions/${contributionId}`);\r\n    return response.json();\r\n  },\r\n\r\n  async processPayment(contributionId: string, paymentData: any) {\r\n    const response = await microservicesClient.callService('biogas-service', `/api/v1/contributions/${contributionId}/payment`, {\r\n      method: 'POST',\r\n      body: JSON.stringify(paymentData)\r\n    });\r\n    return response.json();\r\n  },\r\n\r\n  async getContributionAnalytics(clusterId: string, fromDate: string, toDate: string) {\r\n    const response = await microservicesClient.callService('biogas-service', `/api/v1/contributions/analytics?clusterId=${clusterId}&fromDate=${fromDate}&toDate=${toDate}`);\r\n    return response.json();\r\n  }\r\n};\r\n\r\nexport default microservicesClient;","/**\r\n * Logger Utility - Simple wrapper for conditional logging\r\n * Only logs in development mode\r\n */\r\n\r\nconst isDevelopment = import.meta.env.MODE === 'development';\r\n\r\nexport const logger = {\r\n  error: (...args: unknown[]): void => {\r\n    if (isDevelopment) {\r\n      console.error('[ERROR]', ...args);\r\n    }\r\n  },\r\n\r\n  warn: (...args: unknown[]): void => {\r\n    if (isDevelopment) {\r\n      console.warn('[WARN]', ...args);\r\n    }\r\n  },\r\n\r\n  info: (...args: unknown[]): void => {\r\n    if (isDevelopment) {\r\n      console.info('[INFO]', ...args);\r\n    }\r\n  },\r\n\r\n  debug: (...args: unknown[]): void => {\r\n    if (isDevelopment) {\r\n      console.debug('[DEBUG]', ...args);\r\n    }\r\n  }\r\n};\r\n\r\nexport default logger;\r\n","/**\r\n * Profile Service - Real Auth Service Integration\r\n *\r\n * This service connects to the Auth Service (localhost:8081) for user profile management.\r\n * ZERO mock data - only real API calls.\r\n */\r\n\r\nimport { microservicesClient } from '@/services/microservices';\r\nimport { logger } from '@/utils/logger';\r\n\r\n/**\r\n * User Profile Interface - matches Auth Service response\r\n */\r\nexport interface UserProfile {\r\n  id: string;\r\n  externalId: string;\r\n  phone: string;\r\n  name: string;\r\n  email?: string;\r\n  locale: string;\r\n  kycStatus: string;\r\n  isActive: boolean;\r\n  lastLogin?: string;\r\n  createdAt?: string;\r\n  roles: string[];\r\n  permissions: string[];\r\n  governmentAccess: string[];\r\n}\r\n\r\n/**\r\n * Update Profile Request - only name and locale can be updated\r\n */\r\nexport interface UpdateProfileRequest {\r\n  name: string;\r\n  locale: string;\r\n}\r\n\r\n/**\r\n * API Response wrapper\r\n */\r\ninterface ApiResponse<T> {\r\n  success: boolean;\r\n  data?: T;\r\n  error?: string;\r\n  message?: string;\r\n}\r\n\r\n/**\r\n * ProfileService Class - Handles all profile-related API calls\r\n */\r\nclass ProfileService {\r\n  private readonly SERVICE_NAME = 'auth-service';\r\n\r\n  /**\r\n   * Get current user profile from Auth Service\r\n   * Endpoint: GET /auth/api/auth/profile\r\n   */\r\n  async getProfile(): Promise<UserProfile> {\r\n    try {\r\n      const response = await microservicesClient.callService(\r\n        this.SERVICE_NAME,\r\n        '/auth/api/auth/profile',\r\n        {\r\n          method: 'GET'\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        throw new Error(`Failed to fetch profile: ${response.status} - ${errorText}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      logger.error('ProfileService.getProfile error:', error);\r\n      throw new Error(\r\n        error instanceof Error\r\n          ? `Unable to fetch profile: ${error.message}`\r\n          : 'Unable to fetch profile. Please check your connection.'\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update user profile (name and locale only)\r\n   * Endpoint: PUT /auth/api/auth/profile\r\n   */\r\n  async updateProfile(data: UpdateProfileRequest): Promise<UserProfile> {\r\n    try {\r\n      const response = await microservicesClient.callService(\r\n        this.SERVICE_NAME,\r\n        '/auth/api/auth/profile',\r\n        {\r\n          method: 'PUT',\r\n          body: JSON.stringify(data)\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        throw new Error(`Failed to update profile: ${response.status} - ${errorText}`);\r\n      }\r\n\r\n      const updatedProfile = await response.json();\r\n      return updatedProfile;\r\n    } catch (error) {\r\n      logger.error('ProfileService.updateProfile error:', error);\r\n      throw new Error(\r\n        error instanceof Error\r\n          ? `Unable to update profile: ${error.message}`\r\n          : 'Unable to update profile. Please try again.'\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Logout user - invalidate session\r\n   * Endpoint: POST /auth/api/auth/logout\r\n   */\r\n  async logout(): Promise<void> {\r\n    try {\r\n      const response = await microservicesClient.callService(\r\n        this.SERVICE_NAME,\r\n        '/auth/api/auth/logout',\r\n        {\r\n          method: 'POST'\r\n        }\r\n      );\r\n\r\n      // Even if the server logout fails, we should still clear local tokens\r\n      if (!response.ok) {\r\n        logger.warn('Server logout returned non-OK status:', response.status);\r\n      }\r\n\r\n      // Clear all authentication tokens from localStorage\r\n      localStorage.removeItem('saubhagya_jwt_token');\r\n      localStorage.removeItem('user');\r\n      localStorage.removeItem('accessToken');\r\n      localStorage.removeItem('refreshToken');\r\n      localStorage.removeItem('sessionStart');\r\n\r\n    } catch (error) {\r\n      logger.error('ProfileService.logout error:', error);\r\n      // Still clear local storage even if server request fails\r\n      localStorage.removeItem('saubhagya_jwt_token');\r\n      localStorage.removeItem('user');\r\n      localStorage.removeItem('accessToken');\r\n      localStorage.removeItem('refreshToken');\r\n      localStorage.removeItem('sessionStart');\r\n\r\n      throw new Error(\r\n        error instanceof Error\r\n          ? `Logout completed locally, but server error: ${error.message}`\r\n          : 'Logout completed locally.'\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\n// Export singleton instance\r\nexport const profileService = new ProfileService();\r\nexport default profileService;\r\n","/**\r\n * BaseLayout - Reusable layout component with top navbar and left sidebar\r\n * This is the foundation layout that all modules should use for consistency\r\n * Uses shadcn/ui components for professional design system compliance\r\n */\r\n\r\nimport { ReactNode, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Separator } from '@/components/ui/separator';\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogDescription,\r\n  DialogFooter,\r\n  DialogHeader,\r\n  DialogTitle,\r\n} from '@/components/ui/dialog';\r\nimport { cn } from '@/lib/utils';\r\nimport { Search, Bell, Menu, X, LogOut, Loader2 } from 'lucide-react';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport { profileService } from '@/services/admin/profile.service';\r\nimport { toast } from 'sonner';\r\nimport { logger } from '@/utils/logger';\r\n\r\nexport interface NavigationItem {\r\n  id: string;\r\n  label: string;\r\n  icon: ReactNode;\r\n  onClick: () => void;\r\n  isActive?: boolean;\r\n  badge?: string | number;\r\n}\r\n\r\nexport interface BreadcrumbItem {\r\n  label: string;\r\n  url?: string;\r\n  onClick?: () => void;\r\n}\r\n\r\nexport interface BaseLayoutProps {\r\n  /** Module name displayed in the navbar (e.g., \"Gausakhi\") */\r\n  moduleName: string;\r\n  /** Navigation items for the left sidebar */\r\n  navigationItems: NavigationItem[];\r\n  /** Main content to render */\r\n  children: ReactNode;\r\n  /** Optional module subtitle */\r\n  moduleSubtitle?: string;\r\n  /** Optional user info in top right */\r\n  userInfo?: {\r\n    name: string;\r\n    role: string;\r\n    avatar?: string;\r\n  };\r\n  /** Breadcrumb items to show navigation path */\r\n  breadcrumbs?: BreadcrumbItem[];\r\n  /** Custom className for the main content area */\r\n  contentClassName?: string;\r\n}\r\n\r\nexport default function BaseLayout({\r\n  moduleName,\r\n  navigationItems,\r\n  children,\r\n  moduleSubtitle,\r\n  userInfo,\r\n  breadcrumbs,\r\n  contentClassName\r\n}: BaseLayoutProps) {\r\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\r\n  const [showLogoutDialog, setShowLogoutDialog] = useState(false);\r\n  const [isLoggingOut, setIsLoggingOut] = useState(false);\r\n  const { logout } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogoutClick = () => {\r\n    setShowLogoutDialog(true);\r\n  };\r\n\r\n  const handleLogoutConfirm = async () => {\r\n    try {\r\n      setIsLoggingOut(true);\r\n\r\n      // Call ProfileService logout (real Auth Service API)\r\n      await profileService.logout();\r\n\r\n      // Also call AuthContext logout to clear local state\r\n      await logout();\r\n\r\n      toast.success('Logged out successfully');\r\n\r\n      // Navigate to login page\r\n      navigate('/login');\r\n    } catch (error) {\r\n      const errorMessage = error instanceof Error ? error.message : 'Logout failed';\r\n      logger.error('Logout error:', error);\r\n      toast.error(errorMessage);\r\n\r\n      // Even on error, we should navigate to login since tokens are cleared\r\n      navigate('/login');\r\n    } finally {\r\n      setIsLoggingOut(false);\r\n      setShowLogoutDialog(false);\r\n    }\r\n  };\r\n\r\n  const handleLogoutCancel = () => {\r\n    setShowLogoutDialog(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      {/* Mobile Menu Overlay */}\r\n      {isMobileMenuOpen && (\r\n        <div\r\n          className=\"fixed inset-0 bg-black bg-opacity-50 z-40 lg:hidden\"\r\n          onClick={() => setIsMobileMenuOpen(false)}\r\n        />\r\n      )}\r\n\r\n      {/* Left Sidebar - Fixed position */}\r\n      <aside className={`fixed left-0 top-0 w-56 h-screen bg-white border-r border-gray-200 z-50 transform transition-transform duration-300 ease-in-out ${\r\n        isMobileMenuOpen ? 'translate-x-0' : '-translate-x-full'\r\n      } xl:translate-x-0`}>\r\n        <div className=\"flex flex-col h-full\">\r\n          {/* Module Title */}\r\n          <div className=\"h-16 bg-white border-b border-gray-200 flex items-center px-4\">\r\n            <div className=\"flex items-center\">\r\n              <Button\r\n                variant=\"ghost\"\r\n                size=\"sm\"\r\n                className=\"lg:hidden mr-2 p-1\"\r\n                onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\r\n              >\r\n                <Menu className=\"h-5 w-5\" />\r\n              </Button>\r\n              <h1 className=\"text-lg font-bold text-gray-900\">{moduleName}</h1>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Mobile close button */}\r\n          <div className=\"lg:hidden flex justify-between items-center p-4 border-b border-gray-100\">\r\n            <span className=\"text-sm font-medium text-gray-900\">Menu</span>\r\n            <Button\r\n              variant=\"ghost\"\r\n              size=\"sm\"\r\n              onClick={() => setIsMobileMenuOpen(false)}\r\n              className=\"p-1\"\r\n            >\r\n              <X className=\"h-5 w-5\" />\r\n            </Button>\r\n          </div>\r\n\r\n          {/* Module subtitle */}\r\n          {moduleSubtitle && (\r\n            <div className=\"px-4 py-2 border-b border-gray-100\">\r\n              <p className=\"text-xs text-gray-600\">{moduleSubtitle}</p>\r\n            </div>\r\n          )}\r\n\r\n          {/* Navigation */}\r\n          <nav className=\"flex-1 p-3\">\r\n            <div className=\"space-y-2\">\r\n              {navigationItems.map((item) => (\r\n                <Button\r\n                  key={item.id}\r\n                  onClick={() => {\r\n                    item.onClick();\r\n                    setIsMobileMenuOpen(false);\r\n                  }}\r\n                  variant={item.isActive ? 'default' : 'ghost'}\r\n                  className={`w-full justify-start h-10 font-medium text-sm transition-all duration-200 ${\r\n                    item.isActive\r\n                      ? 'bg-blue-600 text-white hover:bg-blue-700 shadow-sm'\r\n                      : 'text-gray-700 hover:bg-gray-100 hover:text-gray-900'\r\n                  }`}\r\n                >\r\n                  <span className={`mr-3 flex-shrink-0 ${item.isActive ? 'text-white' : 'text-gray-500'}`}>\r\n                    {item.icon}\r\n                  </span>\r\n                  <span className=\"flex-1 text-left\">{item.label}</span>\r\n                  {item.badge && (\r\n                    <Badge\r\n                      variant={item.isActive ? \"outline\" : \"secondary\"}\r\n                      className={`ml-auto text-xs ${\r\n                        item.isActive\r\n                          ? 'border-white/30 text-white bg-white/10'\r\n                          : 'bg-gray-200 text-gray-600'\r\n                      }`}\r\n                    >\r\n                      {item.badge}\r\n                    </Badge>\r\n                  )}\r\n                </Button>\r\n              ))}\r\n            </div>\r\n          </nav>\r\n\r\n          {/* Footer */}\r\n          <div className=\"p-4 border-t border-gray-100\">\r\n            <div className=\"flex items-center text-sm text-gray-500\">\r\n              <div className=\"w-2 h-2 bg-green-500 rounded-full mr-2\" />\r\n              System Online\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </aside>\r\n\r\n      {/* Main Content Area - Offset by sidebar width */}\r\n      <div className=\"xl:ml-56 min-h-screen\">\r\n        {/* Top Navbar - Fixed */}\r\n        <header className=\"fixed top-0 left-0 right-0 xl:left-56 h-16 bg-white border-b border-gray-200 z-40 flex items-center justify-between\">\r\n          <div className=\"flex items-center space-x-2\">\r\n            {/* Mobile menu button */}\r\n            <Button\r\n              variant=\"ghost\"\r\n              size=\"sm\"\r\n              className=\"lg:hidden mr-2 p-1\"\r\n              onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\r\n            >\r\n              <Menu className=\"h-5 w-5\" />\r\n            </Button>\r\n\r\n            <div className=\"w-8 h-8 bg-blue-600 rounded-lg flex items-center justify-center\">\r\n              <span className=\"text-white font-bold text-sm\">S</span>\r\n            </div>\r\n            <div>\r\n              <h2 className=\"text-lg font-semibold text-gray-900\">SAUBHAGYA</h2>\r\n              <div className=\"text-xs text-blue-600 font-medium\">Unified Platform</div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex items-center space-x-3\">\r\n            <Button variant=\"ghost\" size=\"sm\">\r\n              <Search className=\"w-4 h-4\" />\r\n              <span className=\"sr-only\">Search</span>\r\n            </Button>\r\n\r\n            <Button variant=\"ghost\" size=\"sm\" className=\"relative\">\r\n              <Bell className=\"w-4 h-4\" />\r\n              <Badge\r\n                variant=\"destructive\"\r\n                className=\"absolute -top-1 -right-1 h-2 w-2 p-0 text-[10px] flex items-center justify-center\"\r\n              >\r\n                2\r\n              </Badge>\r\n              <span className=\"sr-only\">Notifications</span>\r\n            </Button>\r\n\r\n            <Button variant=\"ghost\" size=\"sm\">\r\n              <span className=\"text-sm font-medium\">हिं</span>\r\n            </Button>\r\n\r\n            <Separator orientation=\"vertical\" className=\"h-6\" />\r\n\r\n            {userInfo && (\r\n              <div className=\"flex items-center space-x-3\">\r\n                <div className=\"text-right text-sm hidden md:block\">\r\n                  <div className=\"font-medium text-gray-900\">{userInfo.name}</div>\r\n                  <div className=\"text-xs text-gray-500\">{userInfo.role}</div>\r\n                </div>\r\n                <div className=\"h-8 w-8 bg-blue-600 rounded-full flex items-center justify-center\">\r\n                  {userInfo.avatar ? (\r\n                    <img src={userInfo.avatar} alt={userInfo.name} className=\"h-8 w-8 rounded-full object-cover\" />\r\n                  ) : (\r\n                    <span className=\"text-white text-xs font-medium\">\r\n                      {userInfo.name.charAt(0).toUpperCase()}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n                <Button\r\n                  variant=\"ghost\"\r\n                  size=\"sm\"\r\n                  onClick={handleLogoutClick}\r\n                  className=\"text-gray-600 hover:text-red-600 hover:bg-red-50\"\r\n                  title=\"Logout\"\r\n                >\r\n                  <LogOut className=\"w-4 h-4\" />\r\n                  <span className=\"sr-only\">Logout</span>\r\n                </Button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </header>\r\n\r\n        {/* Breadcrumbs */}\r\n        {breadcrumbs && breadcrumbs.length > 0 && (\r\n          <div className=\"fixed top-16 left-0 right-0 xl:left-56 h-12 bg-gray-50 border-b border-gray-200 z-30 flex items-center px-6\">\r\n            <nav className=\"flex items-center space-x-2 text-sm text-gray-600\">\r\n              {breadcrumbs.map((item, index) => (\r\n                <div key={index} className=\"flex items-center\">\r\n                  {index > 0 && <span className=\"mx-2 text-gray-400\">/</span>}\r\n                  {item.onClick || item.url ? (\r\n                    <button\r\n                      onClick={item.onClick}\r\n                      className=\"hover:text-blue-600 transition-colors font-medium hover:underline\"\r\n                    >\r\n                      {item.label}\r\n                    </button>\r\n                  ) : (\r\n                    <span className={index === breadcrumbs.length - 1 ? \"text-gray-900 font-medium\" : \"\"}>\r\n                      {item.label}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n              ))}\r\n            </nav>\r\n          </div>\r\n        )}\r\n\r\n        {/* Main Content */}\r\n        <main\r\n          className={cn(\r\n            \"pt-20 min-h-screen w-full p-6\",\r\n            breadcrumbs && breadcrumbs.length > 0 ? \"pt-20 mt-12\" : \"pt-20\",\r\n            contentClassName\r\n          )}\r\n        >\r\n          {children}\r\n        </main>\r\n      </div>\r\n\r\n      {/* Logout Confirmation Dialog */}\r\n      <Dialog open={showLogoutDialog} onOpenChange={setShowLogoutDialog}>\r\n        <DialogContent>\r\n          <DialogHeader>\r\n            <DialogTitle>Confirm Logout</DialogTitle>\r\n            <DialogDescription>\r\n              Are you sure you want to logout? You will need to login again to access your account.\r\n            </DialogDescription>\r\n          </DialogHeader>\r\n          <DialogFooter>\r\n            <Button\r\n              variant=\"outline\"\r\n              onClick={handleLogoutCancel}\r\n              disabled={isLoggingOut}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              variant=\"destructive\"\r\n              onClick={handleLogoutConfirm}\r\n              disabled={isLoggingOut}\r\n            >\r\n              {isLoggingOut ? (\r\n                <>\r\n                  <Loader2 className=\"w-4 h-4 mr-2 animate-spin\" />\r\n                  Logging out...\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <LogOut className=\"w-4 h-4 mr-2\" />\r\n                  Logout\r\n                </>\r\n              )}\r\n            </Button>\r\n          </DialogFooter>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import * as React from \"react\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Card = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCard.displayName = \"Card\"\r\n\r\nconst CardHeader = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardHeader.displayName = \"CardHeader\"\r\n\r\nconst CardTitle = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLHeadingElement>\r\n>(({ className, ...props }, ref) => (\r\n  <h3\r\n    ref={ref}\r\n    className={cn(\r\n      \"text-2xl font-semibold leading-none tracking-tight\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCardTitle.displayName = \"CardTitle\"\r\n\r\nconst CardDescription = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, ...props }, ref) => (\r\n  <p\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardDescription.displayName = \"CardDescription\"\r\n\r\nconst CardContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\r\n))\r\nCardContent.displayName = \"CardContent\"\r\n\r\nconst CardFooter = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex items-center p-6 pt-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardFooter.displayName = \"CardFooter\"\r\n\r\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }","import React from 'react';\r\nimport { Badge } from './badge';\r\nimport { Card, CardContent } from './card';\r\nimport { LucideIcon } from 'lucide-react';\r\n\r\ninterface EmptyStateProps {\r\n  icon: LucideIcon;\r\n  title: string;\r\n  message: string;\r\n  missingEndpoints?: string[];\r\n}\r\n\r\nexport const EmptyState: React.FC<EmptyStateProps> = ({\r\n  icon: Icon,\r\n  title,\r\n  message,\r\n  missingEndpoints\r\n}) => {\r\n  return (\r\n    <Card className=\"border-2 border-dashed\">\r\n      <CardContent className=\"flex flex-col items-center justify-center py-16 px-6\">\r\n        <div className=\"rounded-full bg-muted p-6 mb-6\">\r\n          <Icon className=\"h-12 w-12 text-muted-foreground\" />\r\n        </div>\r\n\r\n        <div className=\"text-center space-y-3 mb-6\">\r\n          <h3 className=\"text-xl font-semibold text-foreground\">{title}</h3>\r\n          <p className=\"text-muted-foreground max-w-md\">{message}</p>\r\n        </div>\r\n\r\n        <Badge variant=\"secondary\" className=\"mb-6\">\r\n          Coming Soon\r\n        </Badge>\r\n\r\n        {missingEndpoints && missingEndpoints.length > 0 && (\r\n          <div className=\"w-full max-w-2xl\">\r\n            <div className=\"bg-muted/50 rounded-lg p-6\">\r\n              <h4 className=\"text-sm font-semibold mb-4 text-foreground\">\r\n                Required Backend Endpoints:\r\n              </h4>\r\n              <ul className=\"space-y-2\">\r\n                {missingEndpoints.map((endpoint, index) => (\r\n                  <li\r\n                    key={index}\r\n                    className=\"flex items-start gap-3 text-sm font-mono\"\r\n                  >\r\n                    <span className=\"text-muted-foreground mt-0.5\">•</span>\r\n                    <span className=\"text-foreground\">{endpoint}</span>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n","import React from 'react';\nimport { BarChart3 } from 'lucide-react';\nimport { EmptyState } from '@/components/ui/empty-state';\n\nconst Dashboard: React.FC = () => {\n  return (\n    <div className=\"space-y-6\">\n      <div>\n        <h1 className=\"text-3xl font-bold tracking-tight\">Admin Dashboard</h1>\n        <p className=\"text-muted-foreground\">\n          Platform overview and system health monitoring\n        </p>\n      </div>\n\n      <EmptyState\n        icon={BarChart3}\n        title=\"Dashboard Metrics Not Available\"\n        message=\"System metrics require the Reporting Service to be fully implemented.\"\n        missingEndpoints={[\n          'GET /system/metrics - System health metrics',\n          'GET /system/services - Microservices status',\n          'GET /system/performance - Performance data'\n        ]}\n      />\n    </div>\n  );\n};\n\nexport default Dashboard;\nexport { Dashboard };\n","import { microservicesClient } from '../microservices';\r\n\r\n/**\r\n * User Management Service - Admin CRUD operations\r\n * Connects to Auth Service User Management endpoints\r\n */\r\n\r\nexport interface UserProfile {\r\n  id: string;\r\n  externalId: string;\r\n  phone: string;\r\n  name: string;\r\n  email?: string;\r\n  locale: string;\r\n  kycStatus: string;\r\n  isActive: boolean;\r\n  lastLogin?: string;\r\n  createdAt?: string;\r\n  roles: string[];\r\n  permissions: string[];\r\n  governmentAccess: string[];\r\n}\r\n\r\nexport interface PaginatedUsersResponse {\r\n  users: UserProfile[];\r\n  totalElements: number;\r\n  totalPages: number;\r\n  currentPage: number;\r\n  pageSize: number;\r\n}\r\n\r\nexport interface CreateUserRequest {\r\n  phone: string;\r\n  name: string;\r\n  password: string;\r\n  locale?: string;\r\n  userType: string;\r\n}\r\n\r\nexport interface UpdateUserRequest {\r\n  name: string;\r\n  locale: string;\r\n}\r\n\r\nexport interface UpdatePermissionsRequest {\r\n  roles: string[];\r\n  permissions: string[];\r\n}\r\n\r\nclass UserManagementService {\r\n  private readonly SERVICE_NAME = 'auth-service';\r\n\r\n  /**\r\n   * Get all users with pagination and search\r\n   * GET /api/auth/users\r\n   */\r\n  async getUsers(\r\n    page: number = 0,\r\n    size: number = 20,\r\n    search?: string,\r\n    sortBy: string = 'createdAt',\r\n    sortDir: 'asc' | 'desc' = 'desc'\r\n  ): Promise<PaginatedUsersResponse> {\r\n    try {\r\n      const params = new URLSearchParams({\r\n        page: page.toString(),\r\n        size: size.toString(),\r\n        sortBy,\r\n        sortDir,\r\n      });\r\n\r\n      if (search) {\r\n        params.append('search', search);\r\n      }\r\n\r\n      const response = await microservicesClient.callService(\r\n        this.SERVICE_NAME,\r\n        `/auth/api/auth/users?${params.toString()}`,\r\n        { method: 'GET' }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || 'Failed to fetch users');\r\n      }\r\n\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('Failed to fetch users:', error);\r\n      throw new Error(\r\n        error instanceof Error ? error.message : 'Failed to fetch users'\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get user by ID\r\n   * GET /api/auth/users/{id}\r\n   */\r\n  async getUserById(id: string): Promise<UserProfile> {\r\n    try {\r\n      const response = await microservicesClient.callService(\r\n        this.SERVICE_NAME,\r\n        `/auth/api/auth/users/${id}`,\r\n        { method: 'GET' }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || 'Failed to fetch user');\r\n      }\r\n\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('Failed to fetch user:', error);\r\n      throw new Error(\r\n        error instanceof Error ? error.message : 'Failed to fetch user'\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create new user\r\n   * POST /api/auth/users\r\n   */\r\n  async createUser(data: CreateUserRequest): Promise<UserProfile> {\r\n    try {\r\n      const response = await microservicesClient.callService(\r\n        this.SERVICE_NAME,\r\n        '/auth/api/auth/users',\r\n        {\r\n          method: 'POST',\r\n          body: JSON.stringify(data),\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || 'Failed to create user');\r\n      }\r\n\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('Failed to create user:', error);\r\n      throw new Error(\r\n        error instanceof Error ? error.message : 'Failed to create user'\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update user\r\n   * PUT /api/auth/users/{id}\r\n   */\r\n  async updateUser(id: string, data: UpdateUserRequest): Promise<UserProfile> {\r\n    try {\r\n      const response = await microservicesClient.callService(\r\n        this.SERVICE_NAME,\r\n        `/auth/api/auth/users/${id}`,\r\n        {\r\n          method: 'PUT',\r\n          body: JSON.stringify(data),\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || 'Failed to update user');\r\n      }\r\n\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('Failed to update user:', error);\r\n      throw new Error(\r\n        error instanceof Error ? error.message : 'Failed to update user'\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Delete user (soft delete)\r\n   * DELETE /api/auth/users/{id}\r\n   */\r\n  async deleteUser(id: string): Promise<void> {\r\n    try {\r\n      const response = await microservicesClient.callService(\r\n        this.SERVICE_NAME,\r\n        `/auth/api/auth/users/${id}`,\r\n        { method: 'DELETE' }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || 'Failed to delete user');\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to delete user:', error);\r\n      throw new Error(\r\n        error instanceof Error ? error.message : 'Failed to delete user'\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggle user active status\r\n   * PUT /api/auth/users/{id}/toggle-status\r\n   */\r\n  async toggleUserStatus(id: string): Promise<{ isActive: boolean }> {\r\n    try {\r\n      const response = await microservicesClient.callService(\r\n        this.SERVICE_NAME,\r\n        `/auth/api/auth/users/${id}/toggle-status`,\r\n        { method: 'PUT' }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || 'Failed to toggle user status');\r\n      }\r\n\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('Failed to toggle user status:', error);\r\n      throw new Error(\r\n        error instanceof Error ? error.message : 'Failed to toggle user status'\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update user roles and permissions\r\n   * PUT /api/auth/users/{id}/permissions\r\n   */\r\n  async updateUserPermissions(\r\n    id: string,\r\n    data: UpdatePermissionsRequest\r\n  ): Promise<UserProfile> {\r\n    try {\r\n      const response = await microservicesClient.callService(\r\n        this.SERVICE_NAME,\r\n        `/auth/api/auth/users/${id}/permissions`,\r\n        {\r\n          method: 'PUT',\r\n          body: JSON.stringify(data),\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || 'Failed to update permissions');\r\n      }\r\n\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('Failed to update permissions:', error);\r\n      throw new Error(\r\n        error instanceof Error ? error.message : 'Failed to update permissions'\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport const userManagementService = new UserManagementService();\r\n","import * as React from \"react\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nexport interface InputProps\r\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\r\n\r\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\r\n  ({ className, type, ...props }, ref) => {\r\n    return (\r\n      <input\r\n        type={type}\r\n        className={cn(\r\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nInput.displayName = \"Input\"\r\n\r\nexport { Input }","import React, { useState, useEffect } from 'react';\nimport { Users, Search, Plus, Edit, Trash2, Shield, ToggleLeft, ToggleRight } from 'lucide-react';\nimport { userManagementService, UserProfile, PaginatedUsersResponse } from '@/services/admin/user-management.service';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { toast } from 'sonner';\n\nconst UserManagement: React.FC = () => {\n  const [users, setUsers] = useState<UserProfile[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [currentPage, setCurrentPage] = useState(0);\n  const [totalPages, setTotalPages] = useState(0);\n  const [totalElements, setTotalElements] = useState(0);\n  const pageSize = 10;\n\n  useEffect(() => {\n    fetchUsers();\n  }, [currentPage, searchTerm]);\n\n  const fetchUsers = async () => {\n    try {\n      setLoading(true);\n      const response: PaginatedUsersResponse = await userManagementService.getUsers(\n        currentPage,\n        pageSize,\n        searchTerm || undefined\n      );\n\n      setUsers(response.users);\n      setTotalPages(response.totalPages);\n      setTotalElements(response.totalElements);\n    } catch (error) {\n      console.error('Failed to fetch users:', error);\n      toast.error('Failed to load users', {\n        description: error instanceof Error ? error.message : 'Unknown error occurred'\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleToggleStatus = async (userId: string) => {\n    try {\n      await userManagementService.toggleUserStatus(userId);\n      toast.success('User status updated');\n      fetchUsers(); // Refresh the list\n    } catch (error) {\n      toast.error('Failed to update user status', {\n        description: error instanceof Error ? error.message : 'Unknown error occurred'\n      });\n    }\n  };\n\n  const handleDeleteUser = async (userId: string, userName: string) => {\n    if (!window.confirm(`Are you sure you want to delete user \"${userName}\"?`)) {\n      return;\n    }\n\n    try {\n      await userManagementService.deleteUser(userId);\n      toast.success('User deleted successfully');\n      fetchUsers(); // Refresh the list\n    } catch (error) {\n      toast.error('Failed to delete user', {\n        description: error instanceof Error ? error.message : 'Unknown error occurred'\n      });\n    }\n  };\n\n  const handleSearch = (e: React.FormEvent) => {\n    e.preventDefault();\n    setCurrentPage(0); // Reset to first page on new search\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold tracking-tight\">User Management</h1>\n          <p className=\"text-muted-foreground\">\n            Manage users, roles, and permissions across the platform\n          </p>\n        </div>\n        <Button className=\"gap-2\">\n          <Plus className=\"h-4 w-4\" />\n          Add User\n        </Button>\n      </div>\n\n      {/* Search Bar */}\n      <Card>\n        <CardContent className=\"pt-6\">\n          <form onSubmit={handleSearch} className=\"flex gap-2\">\n            <div className=\"relative flex-1\">\n              <Search className=\"absolute left-3 top-1/2 h-4 w-4 -translate-y-1/2 text-muted-foreground\" />\n              <Input\n                placeholder=\"Search by name, phone, or email...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"pl-10\"\n              />\n            </div>\n            <Button type=\"submit\">Search</Button>\n          </form>\n        </CardContent>\n      </Card>\n\n      {/* Stats Cards */}\n      <div className=\"grid gap-4 md:grid-cols-3\">\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Total Users</CardTitle>\n            <Users className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{totalElements}</div>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Active Users</CardTitle>\n            <ToggleRight className=\"h-4 w-4 text-green-600\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">\n              {users.filter(u => u.isActive).length}\n            </div>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Current Page</CardTitle>\n            <Shield className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">\n              {currentPage + 1} / {totalPages || 1}\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Users Table */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Users</CardTitle>\n          <CardDescription>\n            {loading ? 'Loading...' : `Showing ${users.length} users`}\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          {loading ? (\n            <div className=\"flex items-center justify-center py-8\">\n              <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary\"></div>\n            </div>\n          ) : users.length === 0 ? (\n            <div className=\"text-center py-8 text-muted-foreground\">\n              No users found\n            </div>\n          ) : (\n            <div className=\"overflow-x-auto\">\n              <table className=\"w-full\">\n                <thead>\n                  <tr className=\"border-b\">\n                    <th className=\"text-left py-3 px-4 font-medium\">Name</th>\n                    <th className=\"text-left py-3 px-4 font-medium\">Phone</th>\n                    <th className=\"text-left py-3 px-4 font-medium\">Email</th>\n                    <th className=\"text-left py-3 px-4 font-medium\">Roles</th>\n                    <th className=\"text-left py-3 px-4 font-medium\">Status</th>\n                    <th className=\"text-left py-3 px-4 font-medium\">Actions</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {users.map((user) => (\n                    <tr key={user.id} className=\"border-b hover:bg-muted/50\">\n                      <td className=\"py-3 px-4\">\n                        <div>\n                          <div className=\"font-medium\">{user.name}</div>\n                          <div className=\"text-xs text-muted-foreground\">\n                            ID: {user.externalId}\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"py-3 px-4\">{user.phone}</td>\n                      <td className=\"py-3 px-4\">{user.email || '-'}</td>\n                      <td className=\"py-3 px-4\">\n                        <div className=\"flex flex-wrap gap-1\">\n                          {user.roles.map((role) => (\n                            <Badge key={role} variant=\"secondary\" className=\"text-xs\">\n                              {role}\n                            </Badge>\n                          ))}\n                        </div>\n                      </td>\n                      <td className=\"py-3 px-4\">\n                        <Badge\n                          variant={user.isActive ? 'default' : 'secondary'}\n                          className={user.isActive ? 'bg-green-600' : ''}\n                        >\n                          {user.isActive ? 'Active' : 'Inactive'}\n                        </Badge>\n                      </td>\n                      <td className=\"py-3 px-4\">\n                        <div className=\"flex gap-2\">\n                          <Button\n                            variant=\"ghost\"\n                            size=\"icon\"\n                            onClick={() => handleToggleStatus(user.id)}\n                            title=\"Toggle Status\"\n                          >\n                            {user.isActive ? (\n                              <ToggleRight className=\"h-4 w-4\" />\n                            ) : (\n                              <ToggleLeft className=\"h-4 w-4\" />\n                            )}\n                          </Button>\n                          <Button\n                            variant=\"ghost\"\n                            size=\"icon\"\n                            title=\"Edit User\"\n                          >\n                            <Edit className=\"h-4 w-4\" />\n                          </Button>\n                          <Button\n                            variant=\"ghost\"\n                            size=\"icon\"\n                            onClick={() => handleDeleteUser(user.id, user.name)}\n                            title=\"Delete User\"\n                            className=\"text-destructive hover:text-destructive\"\n                          >\n                            <Trash2 className=\"h-4 w-4\" />\n                          </Button>\n                        </div>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          )}\n\n          {/* Pagination */}\n          {!loading && totalPages > 1 && (\n            <div className=\"flex items-center justify-between mt-4 pt-4 border-t\">\n              <div className=\"text-sm text-muted-foreground\">\n                Showing {currentPage * pageSize + 1} to{' '}\n                {Math.min((currentPage + 1) * pageSize, totalElements)} of {totalElements} users\n              </div>\n              <div className=\"flex gap-2\">\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={() => setCurrentPage(currentPage - 1)}\n                  disabled={currentPage === 0}\n                >\n                  Previous\n                </Button>\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={() => setCurrentPage(currentPage + 1)}\n                  disabled={currentPage >= totalPages - 1}\n                >\n                  Next\n                </Button>\n              </div>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default UserManagement;\nexport { UserManagement };\n","import React from 'react';\nimport { Wifi } from 'lucide-react';\nimport { EmptyState } from '@/components/ui/empty-state';\n\nconst DeviceRegistry: React.FC = () => {\n  return (\n    <div className=\"space-y-6\">\n      <div>\n        <h1 className=\"text-3xl font-bold tracking-tight\">Device Registry</h1>\n        <p className=\"text-muted-foreground\">\n          Manage IoT devices, RFID readers, sensors, and tracking units\n        </p>\n      </div>\n\n      <EmptyState\n        icon={Wifi}\n        title=\"Device Registry Not Available\"\n        message=\"Device management requires the IoT Service to be operational.\"\n        missingEndpoints={[\n          'GET /devices - List all devices',\n          'POST /devices/provision - Provision new device',\n          'GET /devices/:id/status - Get device status'\n        ]}\n      />\n    </div>\n  );\n};\n\nexport default DeviceRegistry;\nexport { DeviceRegistry };\n","import React from 'react';\nimport { Shield } from 'lucide-react';\nimport { EmptyState } from '@/components/ui/empty-state';\n\nconst AuditLogs: React.FC = () => {\n  return (\n    <div className=\"space-y-6\">\n      <div>\n        <h1 className=\"text-3xl font-bold tracking-tight\">Audit Logs</h1>\n        <p className=\"text-muted-foreground\">\n          Comprehensive audit trail of all system activities and user actions\n        </p>\n      </div>\n\n      <EmptyState\n        icon={Shield}\n        title=\"Audit Logs Not Available\"\n        message=\"Audit logs require the Reporting Service audit endpoints.\"\n        missingEndpoints={[\n          'GET /audit/logs - Fetch audit logs',\n          'POST /audit/export - Export audit logs'\n        ]}\n      />\n    </div>\n  );\n};\n\nexport default AuditLogs;\nexport { AuditLogs };\n","import React from 'react';\nimport { FileText } from 'lucide-react';\nimport { EmptyState } from '@/components/ui/empty-state';\n\nconst Reports: React.FC = () => {\n  return (\n    <div className=\"space-y-6\">\n      <div>\n        <h1 className=\"text-3xl font-bold tracking-tight\">Revenue & Carbon Reports</h1>\n        <p className=\"text-muted-foreground\">\n          Comprehensive financial and environmental impact reporting\n        </p>\n      </div>\n\n      <EmptyState\n        icon={FileText}\n        title=\"Reports Not Available\"\n        message=\"Revenue and operational reports require Reporting Service endpoints.\"\n        missingEndpoints={[\n          'GET /reports/revenue - Revenue reports',\n          'GET /reports/operations - Operational metrics'\n        ]}\n      />\n    </div>\n  );\n};\n\nexport default Reports;\nexport { Reports };\n","import React from 'react';\nimport { Settings } from 'lucide-react';\nimport { EmptyState } from '@/components/ui/empty-state';\n\nconst Configuration: React.FC = () => {\n  return (\n    <div className=\"space-y-6\">\n      <div>\n        <h1 className=\"text-3xl font-bold tracking-tight\">System Configuration</h1>\n        <p className=\"text-muted-foreground\">\n          Manage platform settings, integrations, and security policies\n        </p>\n      </div>\n\n      <EmptyState\n        icon={Settings}\n        title=\"Configuration Not Available\"\n        message=\"System configuration requires the Government Service endpoints.\"\n        missingEndpoints={[\n          'GET /config - Get system configuration',\n          'PUT /config - Update system configuration'\n        ]}\n      />\n    </div>\n  );\n};\n\nexport default Configuration;\nexport { Configuration };\n","import * as React from \"react\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nexport interface LabelProps\r\n  extends React.LabelHTMLAttributes<HTMLLabelElement> {}\r\n\r\nconst Label = React.forwardRef<HTMLLabelElement, LabelProps>(\r\n  ({ className, ...props }, ref) => (\r\n    <label\r\n      ref={ref}\r\n      className={cn(\r\n        \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n)\r\nLabel.displayName = \"Label\"\r\n\r\nexport { Label }","import * as React from \"react\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Alert = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement> & {\r\n    variant?: \"default\" | \"destructive\"\r\n  }\r\n>(({ className, variant = \"default\", ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    role=\"alert\"\r\n    className={cn(\r\n      \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\r\n      {\r\n        \"bg-background text-foreground\": variant === \"default\",\r\n        \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\":\r\n          variant === \"destructive\",\r\n      },\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nAlert.displayName = \"Alert\"\r\n\r\nconst AlertTitle = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLHeadingElement>\r\n>(({ className, ...props }, ref) => (\r\n  <h5\r\n    ref={ref}\r\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\r\n    {...props}\r\n  />\r\n))\r\nAlertTitle.displayName = \"AlertTitle\"\r\n\r\nconst AlertDescription = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\r\n    {...props}\r\n  />\r\n))\r\nAlertDescription.displayName = \"AlertDescription\"\r\n\r\nexport { Alert, AlertTitle, AlertDescription }","/**\r\n * ProfileEditForm Component\r\n * Handles editable profile fields (name and locale)\r\n */\r\n\r\nimport React from 'react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Loader2, Save, X, User, Globe } from 'lucide-react';\r\n\r\ninterface ProfileEditFormProps {\r\n  isEditing: boolean;\r\n  editedName: string;\r\n  editedLocale: string;\r\n  saving: boolean;\r\n  profileName?: string;\r\n  profileLocale?: string;\r\n  onNameChange: (value: string) => void;\r\n  onLocaleChange: (value: string) => void;\r\n  onSave: () => void;\r\n  onCancel: () => void;\r\n}\r\n\r\nexport const ProfileEditForm: React.FC<ProfileEditFormProps> = ({\r\n  isEditing,\r\n  editedName,\r\n  editedLocale,\r\n  saving,\r\n  profileName,\r\n  profileLocale,\r\n  onNameChange,\r\n  onLocaleChange,\r\n  onSave,\r\n  onCancel\r\n}) => {\r\n  return (\r\n    <div className=\"bg-blue-50 dark:bg-blue-950/20 p-4 rounded-lg border border-blue-200 dark:border-blue-800\">\r\n      <h3 className=\"text-sm font-semibold text-blue-900 dark:text-blue-100 mb-4\">\r\n        Editable Information\r\n      </h3>\r\n\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n        {/* Name Field */}\r\n        <div>\r\n          <Label htmlFor=\"name\" className=\"flex items-center gap-2 mb-2\">\r\n            <User className=\"w-4 h-4\" />\r\n            Full Name\r\n          </Label>\r\n          {isEditing ? (\r\n            <Input\r\n              id=\"name\"\r\n              value={editedName}\r\n              onChange={(e) => onNameChange(e.target.value)}\r\n              placeholder=\"Enter your name\"\r\n              disabled={saving}\r\n            />\r\n          ) : (\r\n            <p className=\"text-sm font-medium py-2\">{profileName}</p>\r\n          )}\r\n        </div>\r\n\r\n        {/* Locale Field */}\r\n        <div>\r\n          <Label htmlFor=\"locale\" className=\"flex items-center gap-2 mb-2\">\r\n            <Globe className=\"w-4 h-4\" />\r\n            Language/Locale\r\n          </Label>\r\n          {isEditing ? (\r\n            <select\r\n              id=\"locale\"\r\n              value={editedLocale}\r\n              onChange={(e) => onLocaleChange(e.target.value)}\r\n              disabled={saving}\r\n              className=\"w-full px-3 py-2 border border-input rounded-md bg-background text-sm\"\r\n            >\r\n              <option value=\"en\">English (en)</option>\r\n              <option value=\"hi\">हिंदी (hi)</option>\r\n              <option value=\"gu\">ગુજરાતી (gu)</option>\r\n              <option value=\"mr\">मराठी (mr)</option>\r\n              <option value=\"pa\">ਪੰਜਾਬੀ (pa)</option>\r\n            </select>\r\n          ) : (\r\n            <p className=\"text-sm font-medium py-2\">{profileLocale}</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Edit Action Buttons */}\r\n      {isEditing && (\r\n        <div className=\"flex gap-2 mt-4\">\r\n          <Button\r\n            onClick={onSave}\r\n            disabled={saving}\r\n            className=\"flex-1\"\r\n          >\r\n            {saving ? (\r\n              <>\r\n                <Loader2 className=\"w-4 h-4 mr-2 animate-spin\" />\r\n                Saving...\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Save className=\"w-4 h-4 mr-2\" />\r\n                Save Changes\r\n              </>\r\n            )}\r\n          </Button>\r\n          <Button\r\n            onClick={onCancel}\r\n            disabled={saving}\r\n            variant=\"outline\"\r\n          >\r\n            <X className=\"w-4 h-4 mr-2\" />\r\n            Cancel\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileEditForm;\r\n","/**\r\n * Profile Page - User Profile Management\r\n *\r\n * Features:\r\n * - Fetch profile from real Auth Service API\r\n * - Display all user fields\r\n * - Edit mode for name and locale only\r\n * - Real API integration (ZERO mock data)\r\n * - Proper error handling with retry\r\n * - Loading states and user feedback\r\n */\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Card } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Alert } from '@/components/ui/alert';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Loader2, User, Phone, Mail, Shield, Calendar, Edit2, AlertCircle } from 'lucide-react';\r\nimport { toast } from 'sonner';\r\nimport { profileService, UserProfile } from '@/services/admin/profile.service';\r\nimport { ProfileEditForm } from './ProfileEditForm';\r\n\r\n/**\r\n * Profile Page Component\r\n */\r\nexport const Profile: React.FC = () => {\r\n  // State management\r\n  const [profile, setProfile] = useState<UserProfile | null>(null);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [isEditing, setIsEditing] = useState<boolean>(false);\r\n  const [saving, setSaving] = useState<boolean>(false);\r\n\r\n  // Edit form state\r\n  const [editedName, setEditedName] = useState<string>('');\r\n  const [editedLocale, setEditedLocale] = useState<string>('');\r\n\r\n  /**\r\n   * Fetch user profile on component mount\r\n   */\r\n  useEffect(() => {\r\n    fetchProfile();\r\n  }, []);\r\n\r\n  /**\r\n   * Fetch profile from Auth Service\r\n   */\r\n  const fetchProfile = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      const profileData = await profileService.getProfile();\r\n      setProfile(profileData);\r\n      setEditedName(profileData.name);\r\n      setEditedLocale(profileData.locale);\r\n    } catch (err) {\r\n      const errorMessage = err instanceof Error ? err.message : 'Failed to load profile';\r\n      setError(errorMessage);\r\n      toast.error(errorMessage);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handle edit mode toggle\r\n   */\r\n  const handleEditClick = () => {\r\n    if (profile) {\r\n      setEditedName(profile.name);\r\n      setEditedLocale(profile.locale);\r\n      setIsEditing(true);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handle cancel edit\r\n   */\r\n  const handleCancelEdit = () => {\r\n    if (profile) {\r\n      setEditedName(profile.name);\r\n      setEditedLocale(profile.locale);\r\n      setIsEditing(false);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handle save profile\r\n   */\r\n  const handleSaveProfile = async () => {\r\n    try {\r\n      setSaving(true);\r\n\r\n      const updatedProfile = await profileService.updateProfile({\r\n        name: editedName,\r\n        locale: editedLocale\r\n      });\r\n\r\n      setProfile(updatedProfile);\r\n      setIsEditing(false);\r\n\r\n      toast.success('Profile updated successfully!');\r\n    } catch (err) {\r\n      const errorMessage = err instanceof Error ? err.message : 'Failed to update profile';\r\n      toast.error(errorMessage);\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Format date string\r\n   */\r\n  const formatDate = (dateString?: string): string => {\r\n    if (!dateString) return 'N/A';\r\n    try {\r\n      return new Date(dateString).toLocaleString();\r\n    } catch {\r\n      return dateString;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Get KYC status badge color\r\n   */\r\n  const getKycStatusColor = (status: string): string => {\r\n    switch (status.toUpperCase()) {\r\n      case 'VERIFIED':\r\n      case 'APPROVED':\r\n        return 'bg-green-500';\r\n      case 'PENDING':\r\n        return 'bg-yellow-500';\r\n      case 'REJECTED':\r\n        return 'bg-red-500';\r\n      default:\r\n        return 'bg-gray-500';\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Loading state\r\n   */\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center h-96\">\r\n        <div className=\"text-center\">\r\n          <Loader2 className=\"w-12 h-12 animate-spin text-primary mx-auto mb-4\" />\r\n          <p className=\"text-muted-foreground\">Loading profile...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Error state with retry\r\n   */\r\n  if (error && !profile) {\r\n    return (\r\n      <div className=\"max-w-2xl mx-auto mt-8\">\r\n        <Alert variant=\"destructive\" className=\"mb-4\">\r\n          <AlertCircle className=\"h-4 w-4\" />\r\n          <div className=\"ml-2\">\r\n            <h3 className=\"font-semibold\">Error Loading Profile</h3>\r\n            <p className=\"text-sm mt-1\">{error}</p>\r\n          </div>\r\n        </Alert>\r\n        <Button onClick={fetchProfile} className=\"w-full\">\r\n          <Loader2 className=\"w-4 h-4 mr-2\" />\r\n          Retry\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Main profile display\r\n   */\r\n  return (\r\n    <div className=\"container mx-auto p-6 max-w-4xl\">\r\n      {/* Header */}\r\n      <div className=\"mb-6\">\r\n        <h1 className=\"text-3xl font-bold mb-2\">User Profile</h1>\r\n        <p className=\"text-muted-foreground\">Manage your account information and preferences</p>\r\n      </div>\r\n\r\n      {/* Profile Card */}\r\n      <Card className=\"p-6\">\r\n        {/* Card Header with Edit Button */}\r\n        <div className=\"flex justify-between items-center mb-6 pb-4 border-b\">\r\n          <div className=\"flex items-center gap-3\">\r\n            <div className=\"w-12 h-12 rounded-full bg-primary/10 flex items-center justify-center\">\r\n              <User className=\"w-6 h-6 text-primary\" />\r\n            </div>\r\n            <div>\r\n              <h2 className=\"text-xl font-semibold\">{profile?.name}</h2>\r\n              <p className=\"text-sm text-muted-foreground\">{profile?.phone}</p>\r\n            </div>\r\n          </div>\r\n\r\n          {!isEditing && (\r\n            <Button onClick={handleEditClick} variant=\"outline\">\r\n              <Edit2 className=\"w-4 h-4 mr-2\" />\r\n              Edit Profile\r\n            </Button>\r\n          )}\r\n        </div>\r\n\r\n        {/* Profile Fields */}\r\n        <div className=\"space-y-6\">\r\n          {/* Editable Fields Section */}\r\n          <ProfileEditForm\r\n            isEditing={isEditing}\r\n            editedName={editedName}\r\n            editedLocale={editedLocale}\r\n            saving={saving}\r\n            profileName={profile?.name}\r\n            profileLocale={profile?.locale}\r\n            onNameChange={setEditedName}\r\n            onLocaleChange={setEditedLocale}\r\n            onSave={handleSaveProfile}\r\n            onCancel={handleCancelEdit}\r\n          />\r\n\r\n          {/* Read-Only Fields Section */}\r\n          <div>\r\n            <h3 className=\"text-sm font-semibold text-muted-foreground mb-4\">\r\n              Account Information (Read-Only)\r\n            </h3>\r\n\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n              {/* Phone */}\r\n              <div>\r\n                <Label className=\"flex items-center gap-2 mb-2\">\r\n                  <Phone className=\"w-4 h-4\" />\r\n                  Phone Number\r\n                </Label>\r\n                <p className=\"text-sm font-medium\">{profile?.phone}</p>\r\n              </div>\r\n\r\n              {/* Email */}\r\n              <div>\r\n                <Label className=\"flex items-center gap-2 mb-2\">\r\n                  <Mail className=\"w-4 h-4\" />\r\n                  Email Address\r\n                </Label>\r\n                <p className=\"text-sm font-medium\">{profile?.email || 'Not provided'}</p>\r\n              </div>\r\n\r\n              {/* User ID */}\r\n              <div>\r\n                <Label className=\"flex items-center gap-2 mb-2\">\r\n                  <Shield className=\"w-4 h-4\" />\r\n                  User ID\r\n                </Label>\r\n                <p className=\"text-sm font-mono text-muted-foreground\">{profile?.id}</p>\r\n              </div>\r\n\r\n              {/* External ID */}\r\n              <div>\r\n                <Label className=\"flex items-center gap-2 mb-2\">\r\n                  <Shield className=\"w-4 h-4\" />\r\n                  External ID\r\n                </Label>\r\n                <p className=\"text-sm font-mono text-muted-foreground\">{profile?.externalId}</p>\r\n              </div>\r\n\r\n              {/* KYC Status */}\r\n              <div>\r\n                <Label className=\"mb-2 block\">KYC Status</Label>\r\n                <Badge className={getKycStatusColor(profile?.kycStatus || '')}>\r\n                  {profile?.kycStatus}\r\n                </Badge>\r\n              </div>\r\n\r\n              {/* Account Status */}\r\n              <div>\r\n                <Label className=\"mb-2 block\">Account Status</Label>\r\n                <Badge variant={profile?.isActive ? \"default\" : \"destructive\"}>\r\n                  {profile?.isActive ? 'Active' : 'Inactive'}\r\n                </Badge>\r\n              </div>\r\n\r\n              {/* Last Login */}\r\n              <div>\r\n                <Label className=\"flex items-center gap-2 mb-2\">\r\n                  <Calendar className=\"w-4 h-4\" />\r\n                  Last Login\r\n                </Label>\r\n                <p className=\"text-sm font-medium\">{formatDate(profile?.lastLogin)}</p>\r\n              </div>\r\n\r\n              {/* Created At */}\r\n              <div>\r\n                <Label className=\"flex items-center gap-2 mb-2\">\r\n                  <Calendar className=\"w-4 h-4\" />\r\n                  Account Created\r\n                </Label>\r\n                <p className=\"text-sm font-medium\">{formatDate(profile?.createdAt)}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Roles Section */}\r\n          <div>\r\n            <Label className=\"mb-2 block\">Roles</Label>\r\n            <div className=\"flex flex-wrap gap-2\">\r\n              {profile?.roles && profile.roles.length > 0 ? (\r\n                profile.roles.map((role, index) => (\r\n                  <Badge key={index} variant=\"secondary\">\r\n                    {role}\r\n                  </Badge>\r\n                ))\r\n              ) : (\r\n                <p className=\"text-sm text-muted-foreground\">No roles assigned</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Permissions Section */}\r\n          <div>\r\n            <Label className=\"mb-2 block\">Permissions</Label>\r\n            <div className=\"flex flex-wrap gap-2\">\r\n              {profile?.permissions && profile.permissions.length > 0 ? (\r\n                profile.permissions.map((permission, index) => (\r\n                  <Badge key={index} variant=\"outline\">\r\n                    {permission}\r\n                  </Badge>\r\n                ))\r\n              ) : (\r\n                <p className=\"text-sm text-muted-foreground\">No permissions assigned</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Government Access Section */}\r\n          <div>\r\n            <Label className=\"mb-2 block\">Government Access</Label>\r\n            <div className=\"flex flex-wrap gap-2\">\r\n              {profile?.governmentAccess && profile.governmentAccess.length > 0 ? (\r\n                profile.governmentAccess.map((access, index) => (\r\n                  <Badge key={index} variant=\"outline\" className=\"bg-purple-50\">\r\n                    {access}\r\n                  </Badge>\r\n                ))\r\n              ) : (\r\n                <p className=\"text-sm text-muted-foreground\">No government access</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\nimport { Routes, Route, useNavigate, useLocation } from 'react-router-dom';\nimport BaseLayout from '@/components/layout/BaseLayout';\nimport { useAuth } from '@/contexts/AuthContext';\nimport { Dashboard } from './pages/Dashboard/Dashboard';\nimport { UserManagement } from './pages/UserManagement/UserManagement';\nimport { DeviceRegistry } from './pages/DeviceRegistry/DeviceRegistry';\nimport { AuditLogs } from './pages/AuditLogs/AuditLogs';\nimport { Reports } from './pages/Reports/Reports';\nimport { Configuration } from './pages/Configuration/Configuration';\nimport { Profile } from './pages/Profile/Profile';\nimport {\n  LayoutDashboard,\n  Users,\n  HardDrive,\n  FileText,\n  BarChart3,\n  Settings,\n  UserCircle\n} from 'lucide-react';\n\nconst AdminModule: React.FC = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { user } = useAuth();\n\n  const navigationItems = [\n    {\n      id: 'dashboard',\n      label: 'Dashboard',\n      icon: <LayoutDashboard className=\"w-5 h-5\" />,\n      onClick: () => navigate('/admin'),\n      isActive: location.pathname === '/admin' || location.pathname === '/admin/'\n    },\n    {\n      id: 'users',\n      label: 'User Management',\n      icon: <Users className=\"w-5 h-5\" />,\n      onClick: () => navigate('/admin/users'),\n      isActive: location.pathname === '/admin/users'\n    },\n    {\n      id: 'devices',\n      label: 'Device Registry',\n      icon: <HardDrive className=\"w-5 h-5\" />,\n      onClick: () => navigate('/admin/devices'),\n      isActive: location.pathname === '/admin/devices'\n    },\n    {\n      id: 'audit',\n      label: 'Audit Logs',\n      icon: <FileText className=\"w-5 h-5\" />,\n      onClick: () => navigate('/admin/audit'),\n      isActive: location.pathname === '/admin/audit'\n    },\n    {\n      id: 'reports',\n      label: 'Reports',\n      icon: <BarChart3 className=\"w-5 h-5\" />,\n      onClick: () => navigate('/admin/reports'),\n      isActive: location.pathname === '/admin/reports'\n    },\n    {\n      id: 'config',\n      label: 'Configuration',\n      icon: <Settings className=\"w-5 h-5\" />,\n      onClick: () => navigate('/admin/config'),\n      isActive: location.pathname === '/admin/config'\n    },\n    {\n      id: 'profile',\n      label: 'Profile',\n      icon: <UserCircle className=\"w-5 h-5\" />,\n      onClick: () => navigate('/admin/profile'),\n      isActive: location.pathname === '/admin/profile'\n    }\n  ];\n\n  return (\n    <BaseLayout\n      moduleName=\"Admin\"\n      moduleSubtitle=\"Platform Management\"\n      navigationItems={navigationItems}\n      userInfo={user ? {\n        name: user.name,\n        role: user.department || 'User',\n        avatar: undefined\n      } : undefined}\n    >\n      <Routes>\n        <Route path=\"/\" element={<Dashboard />} />\n        <Route path=\"/users\" element={<UserManagement />} />\n        <Route path=\"/devices\" element={<DeviceRegistry />} />\n        <Route path=\"/audit\" element={<AuditLogs />} />\n        <Route path=\"/reports\" element={<Reports />} />\n        <Route path=\"/config\" element={<Configuration />} />\n        <Route path=\"/profile\" element={<Profile />} />\n      </Routes>\n    </BaseLayout>\n  );\n};\n\nexport default AdminModule;","import { useState, useEffect } from 'react'\r\nimport { Users, Shield, Settings, Activity, Database, AlertTriangle, Download, Plus, Search, Filter, Eye, Edit, Trash2, Clock, CheckCircle, XCircle } from 'lucide-react'\r\n\r\ninterface User {\r\n  id: string;\r\n  name: string;\r\n  email: string;\r\n  role: 'GauSakhi' | 'BiogasSangh' | 'ShuddhiDoot' | 'UrjaVyapar' | 'UrjaNeta' | 'Admin';\r\n  status: 'active' | 'inactive' | 'suspended';\r\n  lastLogin: Date;\r\n  permissions: string[];\r\n  createdAt: Date;\r\n}\r\n\r\ninterface AuditLog {\r\n  id: string;\r\n  user: string;\r\n  action: string;\r\n  resource: string;\r\n  timestamp: Date;\r\n  ipAddress: string;\r\n  status: 'success' | 'failure' | 'warning';\r\n  details: string;\r\n}\r\n\r\ninterface SystemHealth {\r\n  cpu: number;\r\n  memory: number;\r\n  disk: number;\r\n  network: number;\r\n  database: 'healthy' | 'warning' | 'critical';\r\n  uptime: number;\r\n  activeUsers: number;\r\n  lastBackup: Date;\r\n}\r\n\r\ninterface Alert {\r\n  id: string;\r\n  type: 'security' | 'performance' | 'system' | 'user';\r\n  severity: 'low' | 'medium' | 'high' | 'critical';\r\n  message: string;\r\n  timestamp: Date;\r\n  status: 'open' | 'acknowledged' | 'resolved';\r\n  assignedTo?: string;\r\n}\r\n\r\nexport default function Admin() {\r\n  const [users, setUsers] = useState<User[]>([]);\r\n  const [auditLogs, setAuditLogs] = useState<AuditLog[]>([]);\r\n  const [systemHealth, setSystemHealth] = useState<SystemHealth>({\r\n    cpu: 0,\r\n    memory: 0,\r\n    disk: 0,\r\n    network: 0,\r\n    database: 'healthy',\r\n    uptime: 0,\r\n    activeUsers: 0,\r\n    lastBackup: new Date()\r\n  });\r\n  const [alerts, setAlerts] = useState<Alert[]>([]);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [filterRole, setFilterRole] = useState<string>('all');\r\n  const [filterStatus, setFilterStatus] = useState<string>('all');\r\n  const [language, setLanguage] = useState<'en' | 'hi'>('en');\r\n  const [activeTab, setActiveTab] = useState<'dashboard' | 'users' | 'security' | 'system' | 'logs'>('dashboard');\r\n\r\n  const translations = {\r\n    en: {\r\n      title: 'System Administration Dashboard',\r\n      subtitle: 'User management, system monitoring, and security controls',\r\n      users: 'Users',\r\n      auditLogs: 'Audit Logs',\r\n      systemHealth: 'System Health',\r\n      alerts: 'Alerts',\r\n      searchUsers: 'Search users...',\r\n      filterByRole: 'Filter by role',\r\n      filterByStatus: 'Filter by status',\r\n      all: 'All',\r\n      active: 'Active',\r\n      inactive: 'Inactive',\r\n      suspended: 'Suspended',\r\n      addUser: 'Add User',\r\n      exportData: 'Export Data',\r\n      name: 'Name',\r\n      email: 'Email',\r\n      role: 'Role',\r\n      status: 'Status',\r\n      lastLogin: 'Last Login',\r\n      actions: 'Actions',\r\n      view: 'View',\r\n      edit: 'Edit',\r\n      delete: 'Delete',\r\n      systemMetrics: 'System Metrics',\r\n      cpu: 'CPU',\r\n      memory: 'Memory',\r\n      disk: 'Disk',\r\n      network: 'Network',\r\n      database: 'Database',\r\n      uptime: 'Uptime',\r\n      activeUsers: 'Active Users',\r\n      lastBackup: 'Last Backup',\r\n      healthy: 'Healthy',\r\n      warning: 'Warning',\r\n      critical: 'Critical',\r\n      security: 'Security',\r\n      performance: 'Performance',\r\n      system: 'System',\r\n      user: 'User',\r\n      low: 'Low',\r\n      medium: 'Medium',\r\n      high: 'High',\r\n      open: 'Open',\r\n      acknowledged: 'Acknowledged',\r\n      resolved: 'Resolved',\r\n      assign: 'Assign',\r\n      acknowledge: 'Acknowledge',\r\n      resolve: 'Resolve',\r\n      noActiveAlerts: 'No active alerts',\r\n      systemStatus: 'System Status',\r\n      diskUsage: 'Disk Usage',\r\n      userManagement: 'User Management',\r\n      timestamp: 'Timestamp',\r\n      resource: 'Resource',\r\n      ipAddress: 'IP Address',\r\n      success: 'Success',\r\n      failure: 'Failure',\r\n      quickActions: 'Quick Actions',\r\n      addUserDescription: 'Create new user account',\r\n      securitySettings: 'Security Settings',\r\n      securitySettingsDescription: 'Configure security policies',\r\n      backupManagement: 'Backup Management',\r\n      backupManagementDescription: 'Backup schedule and recovery',\r\n      systemConfiguration: 'System Configuration',\r\n      systemConfigurationDescription: 'Configure system settings',\r\n      gauSakhi: 'GauSakhi',\r\n      biogasSangh: 'BiogasSangh',\r\n      shuddhiDoot: 'ShuddhiDoot',\r\n      urjaVyapar: 'UrjaVyapar',\r\n      urjaNeta: 'UrjaNeta',\r\n      admin: 'Admin'\r\n    },\r\n    hi: {\r\n      title: 'सिस्टम प्रशासन डैशबोर्ड',\r\n      subtitle: 'उपयोगकर्ता प्रबंधन, सिस्टम निगरानी और सुरक्षा नियंत्रण',\r\n      users: 'उपयोगकर्ता',\r\n      auditLogs: 'ऑडिट लॉग',\r\n      systemHealth: 'सिस्टम स्वास्थ्य',\r\n      alerts: 'अलर्ट',\r\n      searchUsers: 'उपयोगकर्ताओं को खोजें...',\r\n      filterByRole: 'भूमिका के अनुसार फ़िल्टर करें',\r\n      filterByStatus: 'स्थिति के अनुसार फ़िल्टर करें',\r\n      all: 'सभी',\r\n      active: 'सक्रिय',\r\n      inactive: 'निष्क्रिय',\r\n      suspended: 'निलंबित',\r\n      addUser: 'उपयोगकर्ता जोड़ें',\r\n      exportData: 'डेटा निर्यात करें',\r\n      name: 'नाम',\r\n      email: 'ईमेल',\r\n      role: 'भूमिका',\r\n      status: 'स्थिति',\r\n      lastLogin: 'अंतिम लॉगिन',\r\n      actions: 'कार्य',\r\n      view: 'देखें',\r\n      edit: 'संपादित करें',\r\n      delete: 'हटाएं',\r\n      systemMetrics: 'सिस्टम मेट्रिक्स',\r\n      cpu: 'सीपीयू',\r\n      memory: 'मेमोरी',\r\n      disk: 'डिस्क',\r\n      network: 'नेटवर्क',\r\n      database: 'डेटाबेस',\r\n      uptime: 'अपटाइम',\r\n      activeUsers: 'सक्रिय उपयोगकर्ता',\r\n      lastBackup: 'अंतिम बैकअप',\r\n      healthy: 'स्वस्थ',\r\n      warning: 'चेतावनी',\r\n      critical: 'गंभीर',\r\n      security: 'सुरक्षा',\r\n      performance: 'प्रदर्शन',\r\n      system: 'सिस्टम',\r\n      user: 'उपयोगकर्ता',\r\n      low: 'कम',\r\n      medium: 'मध्यम',\r\n      high: 'उच्च',\r\n      open: 'खुला',\r\n      acknowledged: 'स्वीकृत',\r\n      resolved: 'समाधान',\r\n      assign: 'नियुक्त करें',\r\n      acknowledge: 'स्वीकार करें',\r\n      resolve: 'समाधान करें',\r\n      noActiveAlerts: 'कोई खुला अलर्ट नहीं',\r\n      systemStatus: 'सिस्टम स्थिति',\r\n      diskUsage: 'डिस्क उपयोग',\r\n      userManagement: 'उपयोगकर्ता प्रबंधन',\r\n      timestamp: 'समयांक',\r\n      resource: 'संसाधन',\r\n      ipAddress: 'IP पता',\r\n      success: 'सफलता',\r\n      failure: 'विफलता',\r\n      quickActions: 'तेज़ कार्य',\r\n      addUserDescription: 'नया उपयोगकर्ता खाता बनाएं',\r\n      securitySettings: 'सुरक्षा सेटिंग्स',\r\n      securitySettingsDescription: 'सुरक्षा नीतियों को कॉन्फ़िगर करें',\r\n      backupManagement: 'बैकअप प्रबंधन',\r\n      backupManagementDescription: 'बैकअप अनुसूची और पुनर्स्थापना',\r\n      systemConfiguration: 'सिस्टम कॉन्फ़िगरेशन',\r\n      systemConfigurationDescription: 'सिस्टम सेटिंग्स को कॉन्फ़िगर करें',\r\n      gauSakhi: 'गौसाक्षी',\r\n      biogasSangh: 'बिओगास संघ',\r\n      shuddhiDoot: 'शुद्धिदूत',\r\n      urjaVyapar: 'उर्जा व्यापार',\r\n      urjaNeta: 'उर्जा नेटा',\r\n      admin: 'व्यवस्थापक'\r\n    }\r\n  };\r\n\r\n  const t = translations[language];\r\n\r\n  // Mock user data\r\n  useEffect(() => {\r\n    const mockUsers: User[] = [\r\n      {\r\n        id: '1',\r\n        name: 'Rajesh Kumar',\r\n        email: 'rajesh@saubhagya.com',\r\n        role: 'GauSakhi',\r\n        status: 'active',\r\n        lastLogin: new Date(Date.now() - 2 * 60 * 60 * 1000),\r\n        permissions: ['cattle:read', 'cattle:write', 'location:read'],\r\n        createdAt: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000)\r\n      },\r\n      {\r\n        id: '2',\r\n        name: 'Priya Sharma',\r\n        email: 'priya@saubhagya.com',\r\n        role: 'BiogasSangh',\r\n        status: 'active',\r\n        lastLogin: new Date(Date.now() - 1 * 60 * 60 * 1000),\r\n        permissions: ['cluster:read', 'cluster:write', 'iot:read', 'reports:read'],\r\n        createdAt: new Date(Date.now() - 25 * 24 * 60 * 60 * 1000)\r\n      },\r\n      {\r\n        id: '3',\r\n        name: 'Amit Singh',\r\n        email: 'amit@saubhagya.com',\r\n        role: 'ShuddhiDoot',\r\n        status: 'active',\r\n        lastLogin: new Date(Date.now() - 30 * 60 * 1000),\r\n        permissions: ['purification:read', 'purification:write', 'maintenance:read'],\r\n        createdAt: new Date(Date.now() - 20 * 24 * 60 * 60 * 1000)\r\n      },\r\n      {\r\n        id: '4',\r\n        name: 'Sita Devi',\r\n        email: 'sita@saubhagya.com',\r\n        role: 'UrjaVyapar',\r\n        status: 'active',\r\n        lastLogin: new Date(Date.now() - 45 * 60 * 1000),\r\n        permissions: ['sales:read', 'sales:write', 'inventory:read', 'customers:read'],\r\n        createdAt: new Date(Date.now() - 15 * 24 * 60 * 60 * 1000)\r\n      },\r\n      {\r\n        id: '5',\r\n        name: 'Vikram Patel',\r\n        email: 'vikram@saubhagya.com',\r\n        role: 'UrjaNeta',\r\n        status: 'active',\r\n        lastLogin: new Date(Date.now() - 3 * 60 * 60 * 1000),\r\n        permissions: ['dashboard:read', 'reports:read', 'analytics:read'],\r\n        createdAt: new Date(Date.now() - 10 * 24 * 60 * 60 * 1000)\r\n      }\r\n    ];\r\n    setUsers(mockUsers);\r\n  }, []);\r\n\r\n  // Mock audit logs\r\n  useEffect(() => {\r\n    const mockLogs: AuditLog[] = [\r\n      {\r\n        id: '1',\r\n        user: 'Rajesh Kumar',\r\n        action: 'LOGIN',\r\n        resource: 'Authentication',\r\n        timestamp: new Date(Date.now() - 2 * 60 * 60 * 1000),\r\n        ipAddress: '192.168.1.100',\r\n        status: 'success',\r\n        details: 'User logged in successfully'\r\n      },\r\n      {\r\n        id: '2',\r\n        user: 'Priya Sharma',\r\n        action: 'UPDATE',\r\n        resource: 'Cluster Data',\r\n        timestamp: new Date(Date.now() - 1 * 60 * 60 * 1000),\r\n        ipAddress: '192.168.1.101',\r\n        status: 'success',\r\n        details: 'Updated cluster performance metrics'\r\n      },\r\n      {\r\n        id: '3',\r\n        user: 'Amit Singh',\r\n        action: 'CREATE',\r\n        resource: 'Maintenance Schedule',\r\n        timestamp: new Date(Date.now() - 30 * 60 * 1000),\r\n        ipAddress: '192.168.1.102',\r\n        status: 'success',\r\n        details: 'Created new maintenance schedule for Compressor Unit A'\r\n      },\r\n      {\r\n        id: '4',\r\n        user: 'Unknown',\r\n        action: 'LOGIN',\r\n        resource: 'Authentication',\r\n        timestamp: new Date(Date.now() - 15 * 60 * 1000),\r\n        ipAddress: '203.45.67.89',\r\n        status: 'failure',\r\n        details: 'Failed login attempt with invalid credentials'\r\n      }\r\n    ];\r\n    setAuditLogs(mockLogs);\r\n  }, []);\r\n\r\n  // Mock system health data\r\n  useEffect(() => {\r\n    const updateSystemHealth = () => {\r\n      setSystemHealth({\r\n        cpu: Math.random() * 30 + 20, // 20-50%\r\n        memory: Math.random() * 40 + 30, // 30-70%\r\n        disk: Math.random() * 20 + 15, // 15-35%\r\n        network: Math.random() * 25 + 10, // 10-35%\r\n        database: Math.random() > 0.8 ? 'warning' : 'healthy',\r\n        uptime: 15 * 24 * 60 * 60 * 1000 + Math.random() * 60 * 60 * 1000, // ~15 days\r\n        activeUsers: Math.floor(Math.random() * 20) + 15, // 15-35 users\r\n        lastBackup: new Date(Date.now() - 6 * 60 * 60 * 1000) // 6 hours ago\r\n      });\r\n    };\r\n\r\n    updateSystemHealth();\r\n    const interval = setInterval(updateSystemHealth, 10000); // Update every 10 seconds\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  // Mock alerts\r\n  useEffect(() => {\r\n    const mockAlerts: Alert[] = [\r\n      {\r\n        id: '1',\r\n        type: 'security',\r\n        severity: 'medium',\r\n        message: 'Multiple failed login attempts detected from IP 203.45.67.89',\r\n        timestamp: new Date(Date.now() - 15 * 60 * 1000),\r\n        status: 'open'\r\n      },\r\n      {\r\n        id: '2',\r\n        type: 'performance',\r\n        severity: 'low',\r\n        message: 'Database query response time increased by 15%',\r\n        timestamp: new Date(Date.now() - 45 * 60 * 1000),\r\n        status: 'acknowledged',\r\n        assignedTo: 'System Admin'\r\n      },\r\n      {\r\n        id: '3',\r\n        type: 'system',\r\n        severity: 'low',\r\n        message: 'Backup completed successfully',\r\n        timestamp: new Date(Date.now() - 6 * 60 * 60 * 1000),\r\n        status: 'resolved'\r\n      }\r\n    ];\r\n    setAlerts(mockAlerts);\r\n  }, []);\r\n\r\n  const getRoleColor = (role: string) => {\r\n    switch (role) {\r\n      case 'GauSakhi': return 'bg-blue-100 text-blue-800';\r\n      case 'BiogasSangh': return 'bg-green-100 text-green-800';\r\n      case 'ShuddhiDoot': return 'bg-purple-100 text-purple-800';\r\n      case 'UrjaVyapar': return 'bg-orange-100 text-orange-800';\r\n      case 'UrjaNeta': return 'bg-indigo-100 text-indigo-800';\r\n      case 'Admin': return 'bg-red-100 text-red-800';\r\n      default: return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'active': return 'bg-green-100 text-green-800';\r\n      case 'inactive': return 'bg-gray-100 text-gray-800';\r\n      case 'suspended': return 'bg-red-100 text-red-800';\r\n      default: return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  const getSeverityColor = (severity: string) => {\r\n    switch (severity) {\r\n      case 'low': return 'bg-blue-100 text-blue-800';\r\n      case 'medium': return 'bg-yellow-100 text-yellow-800';\r\n      case 'high': return 'bg-orange-100 text-orange-800';\r\n      case 'critical': return 'bg-red-100 text-red-800';\r\n      default: return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  const getAlertTypeIcon = (type: string) => {\r\n    switch (type) {\r\n      case 'security': return <Shield className=\"h-4 w-4\" />;\r\n      case 'performance': return <Activity className=\"h-4 w-4\" />;\r\n      case 'system': return <Database className=\"h-4 w-4\" />;\r\n      case 'user': return <Users className=\"h-4 w-4\" />;\r\n      default: return <AlertTriangle className=\"h-4 w-4\" />;\r\n    }\r\n  };\r\n\r\n  const exportData = (format: 'pdf' | 'excel') => {\r\n    alert(`${format.toUpperCase()} export initiated for admin data`);\r\n  };\r\n\r\n  const filteredUsers = users.filter(user =>\r\n    (filterRole === 'all' || user.role === filterRole) &&\r\n    (filterStatus === 'all' || user.status === filterStatus) &&\r\n    (user.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n     user.email.toLowerCase().includes(searchQuery.toLowerCase()))\r\n  );\r\n\r\n  const formatUptime = (uptime: number) => {\r\n    const days = Math.floor(uptime / (24 * 60 * 60 * 1000));\r\n    const hours = Math.floor((uptime % (24 * 60 * 60 * 1000)) / (60 * 60 * 1000));\r\n    return `${days}d ${hours}h`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      {/* Header */}\r\n      <div className=\"flex justify-between items-center\">\r\n        <div>\r\n          <h1 className=\"text-2xl font-bold text-gray-900\">{t.title}</h1>\r\n          <p className=\"text-gray-600\">{t.subtitle}</p>\r\n        </div>\r\n        <div className=\"flex gap-3\">\r\n          <button\r\n            onClick={() => setLanguage(language === 'en' ? 'hi' : 'en')}\r\n            className=\"px-3 py-1 text-sm bg-white rounded-md shadow-sm border border-gray-200 hover:bg-gray-50\"\r\n          >\r\n            {language === 'en' ? 'हिंदी' : 'English'}\r\n          </button>\r\n          <button className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\">\r\n            <Plus className=\"h-4 w-4 inline mr-2\" />\r\n            {t.addUser}\r\n          </button>\r\n          <button\r\n            onClick={() => exportData('pdf')}\r\n            className=\"px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700\"\r\n          >\r\n            <Download className=\"h-4 w-4 inline mr-2\" />\r\n            {t.exportData}\r\n          </button>\r\n          <button\r\n            onClick={() => exportData('excel')}\r\n            className=\"px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700\"\r\n          >\r\n            <Download className=\"h-4 w-4 inline mr-2\" />\r\n            Excel\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Tab Navigation */}\r\n      <div className=\"border-b border-gray-200\">\r\n        <nav className=\"-mb-px flex space-x-8\">\r\n          <button\r\n            onClick={() => setActiveTab('dashboard')}\r\n            className={`whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm ${\r\n              activeTab === 'dashboard'\r\n                ? 'border-blue-500 text-blue-600'\r\n                : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\r\n            }`}\r\n          >\r\n            <Activity className=\"h-4 w-4 inline mr-2\" />\r\n            Dashboard\r\n          </button>\r\n          <button\r\n            onClick={() => setActiveTab('users')}\r\n            className={`whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm ${\r\n              activeTab === 'users'\r\n                ? 'border-blue-500 text-blue-600'\r\n                : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\r\n            }`}\r\n          >\r\n            <Users className=\"h-4 w-4 inline mr-2\" />\r\n            Users\r\n          </button>\r\n          <button\r\n            onClick={() => setActiveTab('security')}\r\n            className={`whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm ${\r\n              activeTab === 'security'\r\n                ? 'border-blue-500 text-blue-600'\r\n                : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\r\n            }`}\r\n          >\r\n            <Shield className=\"h-4 w-4 inline mr-2\" />\r\n            Security\r\n          </button>\r\n          <button\r\n            onClick={() => setActiveTab('system')}\r\n            className={`whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm ${\r\n              activeTab === 'system'\r\n                ? 'border-blue-500 text-blue-600'\r\n                : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\r\n            }`}\r\n          >\r\n            <Settings className=\"h-4 w-4 inline mr-2\" />\r\n            System\r\n          </button>\r\n          <button\r\n            onClick={() => setActiveTab('logs')}\r\n            className={`whitespace-nowrap py-2 px-1 border-b-2 font-medium text-sm ${\r\n              activeTab === 'logs'\r\n                ? 'border-blue-500 text-blue-600'\r\n                : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\r\n            }`}\r\n          >\r\n            <Database className=\"h-4 w-4 inline mr-2\" />\r\n            Audit Logs\r\n          </button>\r\n        </nav>\r\n      </div>\r\n\r\n      {/* Tab Content */}\r\n      {activeTab === 'dashboard' && (\r\n        <>\r\n          {/* System Health Overview */}\r\n          <div className=\"grid grid-cols-1 gap-5 sm:grid-cols-2 lg:grid-cols-4\">\r\n            <div className=\"bg-white overflow-hidden shadow rounded-lg\">\r\n              <div className=\"p-5\">\r\n                <div className=\"flex items-center\">\r\n                  <div className=\"flex-shrink-0\">\r\n                    <Activity className=\"h-6 w-6 text-blue-400\" />\r\n                  </div>\r\n                  <div className=\"ml-5 w-0 flex-1\">\r\n                    <dl>\r\n                      <dt className=\"text-sm font-medium text-gray-500 truncate\">{t.cpu}</dt>\r\n                      <dd className=\"text-lg font-medium text-gray-900\">{systemHealth.cpu.toFixed(1)}%</dd>\r\n                    </dl>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"bg-white overflow-hidden shadow rounded-lg\">\r\n              <div className=\"p-5\">\r\n                <div className=\"flex items-center\">\r\n                  <div className=\"flex-shrink-0\">\r\n                    <Database className=\"h-6 w-6 text-green-400\" />\r\n                  </div>\r\n                  <div className=\"ml-5 w-0 flex-1\">\r\n                    <dl>\r\n                      <dt className=\"text-sm font-medium text-gray-500 truncate\">{t.memory}</dt>\r\n                      <dd className=\"text-lg font-medium text-gray-900\">{systemHealth.memory.toFixed(1)}%</dd>\r\n                    </dl>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"bg-white overflow-hidden shadow rounded-lg\">\r\n              <div className=\"p-5\">\r\n                <div className=\"flex items-center\">\r\n                  <div className=\"flex-shrink-0\">\r\n                    <Shield className=\"h-6 w-6 text-purple-400\" />\r\n                  </div>\r\n                  <div className=\"ml-5 w-0 flex-1\">\r\n                    <dl>\r\n                      <dt className=\"text-sm font-medium text-gray-500 truncate\">{t.activeUsers}</dt>\r\n                      <dd className=\"text-lg font-medium text-gray-900\">{systemHealth.activeUsers}</dd>\r\n                    </dl>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"bg-white overflow-hidden shadow rounded-lg\">\r\n              <div className=\"p-5\">\r\n                <div className=\"flex items-center\">\r\n                  <div className=\"flex-shrink-0\">\r\n                    <Clock className=\"h-6 w-6 text-orange-400\" />\r\n                  </div>\r\n                  <div className=\"ml-5 w-0 flex-1\">\r\n                    <dl>\r\n                      <dt className=\"text-sm font-medium text-gray-500 truncate\">{t.uptime}</dt>\r\n                      <dd className=\"text-lg font-medium text-gray-900\">{formatUptime(systemHealth.uptime)}</dd>\r\n                    </dl>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Alerts and System Status */}\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\r\n            {/* Active Alerts */}\r\n            <div className=\"bg-white shadow rounded-lg\">\r\n              <div className=\"px-4 py-5 sm:p-6\">\r\n                <h3 className=\"text-lg leading-6 font-medium text-gray-900 mb-4\">{t.alerts}</h3>\r\n                <div className=\"space-y-3\">\r\n                  {alerts.filter(alert => alert.status !== 'resolved').map((alert) => (\r\n                    <div key={alert.id} className=\"flex items-start gap-3 p-3 border rounded-lg\">\r\n                      <div className=\"flex-shrink-0 mt-1\">\r\n                        {getAlertTypeIcon(alert.type)}\r\n                      </div>\r\n                      <div className=\"flex-1 min-w-0\">\r\n                        <div className=\"flex items-center justify-between\">\r\n                          <p className=\"text-sm font-medium text-gray-900\">{alert.message}</p>\r\n                          <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${getSeverityColor(alert.severity)}`}>\r\n                            {alert.severity}\r\n                          </span>\r\n                        </div>\r\n                        <p className=\"text-sm text-gray-500 mt-1\">\r\n                          {alert.timestamp.toLocaleString('hi-IN')} • {alert.type}\r\n                        </p>\r\n                        {alert.assignedTo && (\r\n                          <p className=\"text-sm text-blue-600 mt-1\">{t.assign} to: {alert.assignedTo}</p>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                  {alerts.filter(alert => alert.status !== 'resolved').length === 0 && (\r\n                    <div className=\"text-center py-4 text-gray-500\">\r\n                      <CheckCircle className=\"h-8 w-8 mx-auto text-green-400 mb-2\" />\r\n                      <p>{t.noActiveAlerts}</p>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* System Status */}\r\n            <div className=\"bg-white shadow rounded-lg\">\r\n              <div className=\"px-4 py-5 sm:p-6\">\r\n                <h3 className=\"text-lg leading-6 font-medium text-gray-900 mb-4\">{t.systemStatus}</h3>\r\n                <div className=\"space-y-3\">\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <span className=\"text-sm text-gray-600\">{t.database}</span>\r\n                    <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${\r\n                      systemHealth.database === 'healthy' ? 'bg-green-100 text-green-800' :\r\n                      systemHealth.database === 'warning' ? 'bg-yellow-100 text-yellow-800' :\r\n                      'bg-red-100 text-red-800'\r\n                    }`}>\r\n                      {systemHealth.database === 'healthy' ? t.healthy :\r\n                       systemHealth.database === 'warning' ? t.warning : t.critical}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <span className=\"text-sm text-gray-600\">{t.diskUsage}</span>\r\n                    <span className=\"text-sm font-medium\">{systemHealth.disk.toFixed(1)}%</span>\r\n                  </div>\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <span className=\"text-sm text-gray-600\">{t.network}</span>\r\n                    <span className=\"text-sm font-medium\">{systemHealth.network.toFixed(1)}%</span>\r\n                  </div>\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <span className=\"text-sm text-gray-600\">{t.lastBackup}</span>\r\n                    <span className=\"text-sm font-medium\">{systemHealth.lastBackup.toLocaleString('hi-IN')}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      {/* Users Tab */}\r\n      {activeTab === 'users' && (\r\n        <div className=\"bg-white shadow rounded-lg\">\r\n          <div className=\"px-4 py-5 sm:p-6\">\r\n            <div className=\"flex justify-between items-center mb-4\">\r\n              <h3 className=\"text-lg leading-6 font-medium text-gray-900\">{t.userManagement}</h3>\r\n              <div className=\"flex gap-3\">\r\n                <div className=\"relative\">\r\n                  <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder={t.searchUsers}\r\n                    value={searchQuery}\r\n                    onChange={(e) => setSearchQuery(e.target.value)}\r\n                    className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                  />\r\n                </div>\r\n                <select\r\n                  value={filterRole}\r\n                  onChange={(e) => setFilterRole(e.target.value)}\r\n                  className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                >\r\n                  <option value=\"all\">{t.all}</option>\r\n                  <option value=\"GauSakhi\">{t.gauSakhi}</option>\r\n                  <option value=\"BiogasSangh\">{t.biogasSangh}</option>\r\n                  <option value=\"ShuddhiDoot\">{t.shuddhiDoot}</option>\r\n                  <option value=\"UrjaVyapar\">{t.urjaVyapar}</option>\r\n                  <option value=\"UrjaNeta\">{t.urjaNeta}</option>\r\n                  <option value=\"Admin\">{t.admin}</option>\r\n                </select>\r\n                <select\r\n                  value={filterStatus}\r\n                  onChange={(e) => setFilterStatus(e.target.value)}\r\n                  className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                >\r\n                  <option value=\"all\">{t.all}</option>\r\n                  <option value=\"active\">{t.active}</option>\r\n                  <option value=\"inactive\">{t.inactive}</option>\r\n                  <option value=\"suspended\">{t.suspended}</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div className=\"overflow-x-auto\">\r\n              <table className=\"min-w-full divide-y divide-gray-200\">\r\n                <thead className=\"bg-gray-50\">\r\n                  <tr>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t.user}</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t.role}</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t.status}</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t.lastLogin}</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t.actions}</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                  {filteredUsers.map((user) => (\r\n                    <tr key={user.id}>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <div>\r\n                          <div className=\"text-sm font-medium text-gray-900\">{user.name}</div>\r\n                          <div className=\"text-sm text-gray-500\">{user.email}</div>\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${getRoleColor(user.role)}`}>\r\n                          {user.role}\r\n                        </span>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${getStatusColor(user.status)}`}>\r\n                          {user.status === 'active' ? t.active :\r\n                           user.status === 'inactive' ? t.inactive : t.suspended}\r\n                        </span>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                        {user.lastLogin.toLocaleString('hi-IN')}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n                        <button className=\"text-blue-600 hover:text-blue-900 mr-3\">\r\n                          <Eye className=\"h-4 w-4 inline\" />\r\n                        </button>\r\n                        <button className=\"text-green-600 hover:text-green-900 mr-3\">\r\n                          <Edit className=\"h-4 w-4 inline\" />\r\n                        </button>\r\n                        <button className=\"text-red-600 hover:text-red-900\">\r\n                          <Trash2 className=\"h-4 w-4 inline\" />\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Security Tab */}\r\n      {activeTab === 'security' && (\r\n        <div className=\"space-y-4\">\r\n          {/* Active Alerts */}\r\n          <div className=\"bg-white shadow rounded-lg\">\r\n            <div className=\"px-4 py-5 sm:p-6\">\r\n              <h3 className=\"text-lg leading-6 font-medium text-gray-900 mb-4\">{t.alerts}</h3>\r\n              <div className=\"space-y-3\">\r\n                {alerts.filter(alert => alert.status !== 'resolved').map((alert) => (\r\n                  <div key={alert.id} className=\"flex items-start gap-3 p-3 border rounded-lg\">\r\n                    <div className=\"flex-shrink-0 mt-1\">\r\n                      {getAlertTypeIcon(alert.type)}\r\n                    </div>\r\n                    <div className=\"flex-1 min-w-0\">\r\n                      <div className=\"flex items-center justify-between\">\r\n                        <p className=\"text-sm font-medium text-gray-900\">{alert.message}</p>\r\n                        <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${getSeverityColor(alert.severity)}`}>\r\n                          {alert.severity}\r\n                        </span>\r\n                      </div>\r\n                      <p className=\"text-sm text-gray-500 mt-1\">\r\n                        {alert.timestamp.toLocaleString('hi-IN')} • {alert.type}\r\n                      </p>\r\n                      {alert.assignedTo && (\r\n                        <p className=\"text-sm text-blue-600 mt-1\">{t.assign} to: {alert.assignedTo}</p>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n                {alerts.filter(alert => alert.status !== 'resolved').length === 0 && (\r\n                  <div className=\"text-center py-4 text-gray-500\">\r\n                    <CheckCircle className=\"h-8 w-8 mx-auto text-green-400 mb-2\" />\r\n                    <p>{t.noActiveAlerts}</p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Security Settings */}\r\n          <div className=\"bg-white shadow rounded-lg\">\r\n            <div className=\"px-4 py-5 sm:p-6\">\r\n              <h3 className=\"text-lg leading-6 font-medium text-gray-900 mb-4\">{t.securitySettings}</h3>\r\n              <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-3\">\r\n                <div className=\"relative group bg-white p-6 focus-within:ring-2 focus-within:ring-inset focus-within:ring-blue-500 rounded-lg border border-gray-200 hover:border-gray-300\">\r\n                  <div>\r\n                    <span className=\"rounded-lg inline-flex p-3 bg-green-50 text-green-700 ring-4 ring-white\">\r\n                      <Shield className=\"h-6 w-6\" />\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"mt-4\">\r\n                    <h3 className=\"text-lg font-medium\">Two-Factor Authentication</h3>\r\n                    <p className=\"mt-2 text-sm text-gray-500\">Secure user accounts with 2FA</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"relative group bg-white p-6 focus-within:ring-2 focus-within:ring-inset focus-within:ring-blue-500 rounded-lg border border-gray-200 hover:border-gray-300\">\r\n                  <div>\r\n                    <span className=\"rounded-lg inline-flex p-3 bg-blue-50 text-blue-700 ring-4 ring-white\">\r\n                      <Users className=\"h-6 w-6\" />\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"mt-4\">\r\n                    <h3 className=\"text-lg font-medium\">Access Controls</h3>\r\n                    <p className=\"mt-2 text-sm text-gray-500\">Manage role-based permissions</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"relative group bg-white p-6 focus-within:ring-2 focus-within:ring-inset focus-within:ring-blue-500 rounded-lg border border-gray-200 hover:border-gray-300\">\r\n                  <div>\r\n                    <span className=\"rounded-lg inline-flex p-3 bg-red-50 text-red-700 ring-4 ring-white\">\r\n                      <AlertTriangle className=\"h-6 w-6\" />\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"mt-4\">\r\n                    <h3 className=\"text-lg font-medium\">Threat Detection</h3>\r\n                    <p className=\"mt-2 text-sm text-gray-500\">Monitor suspicious activities</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* System Tab */}\r\n      {activeTab === 'system' && (\r\n        <div className=\"space-y-4\">\r\n          {/* System Health Overview */}\r\n          <div className=\"grid grid-cols-1 gap-5 sm:grid-cols-2 lg:grid-cols-4\">\r\n            <div className=\"bg-white overflow-hidden shadow rounded-lg\">\r\n              <div className=\"p-5\">\r\n                <div className=\"flex items-center\">\r\n                  <div className=\"flex-shrink-0\">\r\n                    <Activity className=\"h-6 w-6 text-blue-400\" />\r\n                  </div>\r\n                  <div className=\"ml-5 w-0 flex-1\">\r\n                    <dl>\r\n                      <dt className=\"text-sm font-medium text-gray-500 truncate\">{t.cpu}</dt>\r\n                      <dd className=\"text-lg font-medium text-gray-900\">{systemHealth.cpu.toFixed(1)}%</dd>\r\n                    </dl>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"bg-white overflow-hidden shadow rounded-lg\">\r\n              <div className=\"p-5\">\r\n                <div className=\"flex items-center\">\r\n                  <div className=\"flex-shrink-0\">\r\n                    <Database className=\"h-6 w-6 text-green-400\" />\r\n                  </div>\r\n                  <div className=\"ml-5 w-0 flex-1\">\r\n                    <dl>\r\n                      <dt className=\"text-sm font-medium text-gray-500 truncate\">{t.memory}</dt>\r\n                      <dd className=\"text-lg font-medium text-gray-900\">{systemHealth.memory.toFixed(1)}%</dd>\r\n                    </dl>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"bg-white overflow-hidden shadow rounded-lg\">\r\n              <div className=\"p-5\">\r\n                <div className=\"flex items-center\">\r\n                  <div className=\"flex-shrink-0\">\r\n                    <Shield className=\"h-6 w-6 text-purple-400\" />\r\n                  </div>\r\n                  <div className=\"ml-5 w-0 flex-1\">\r\n                    <dl>\r\n                      <dt className=\"text-sm font-medium text-gray-500 truncate\">{t.activeUsers}</dt>\r\n                      <dd className=\"text-lg font-medium text-gray-900\">{systemHealth.activeUsers}</dd>\r\n                    </dl>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"bg-white overflow-hidden shadow rounded-lg\">\r\n              <div className=\"p-5\">\r\n                <div className=\"flex items-center\">\r\n                  <div className=\"flex-shrink-0\">\r\n                    <Clock className=\"h-6 w-6 text-orange-400\" />\r\n                  </div>\r\n                  <div className=\"ml-5 w-0 flex-1\">\r\n                    <dl>\r\n                      <dt className=\"text-sm font-medium text-gray-500 truncate\">{t.uptime}</dt>\r\n                      <dd className=\"text-lg font-medium text-gray-900\">{formatUptime(systemHealth.uptime)}</dd>\r\n                    </dl>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* System Status */}\r\n          <div className=\"bg-white shadow rounded-lg\">\r\n            <div className=\"px-4 py-5 sm:p-6\">\r\n              <h3 className=\"text-lg leading-6 font-medium text-gray-900 mb-4\">{t.systemStatus}</h3>\r\n              <div className=\"space-y-3\">\r\n                <div className=\"flex items-center justify-between\">\r\n                  <span className=\"text-sm text-gray-600\">{t.database}</span>\r\n                  <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${\r\n                    systemHealth.database === 'healthy' ? 'bg-green-100 text-green-800' :\r\n                    systemHealth.database === 'warning' ? 'bg-yellow-100 text-yellow-800' :\r\n                    'bg-red-100 text-red-800'\r\n                  }`}>\r\n                    {systemHealth.database === 'healthy' ? t.healthy :\r\n                     systemHealth.database === 'warning' ? t.warning : t.critical}\r\n                  </span>\r\n                </div>\r\n                <div className=\"flex items-center justify-between\">\r\n                  <span className=\"text-sm text-gray-600\">{t.diskUsage}</span>\r\n                  <span className=\"text-sm font-medium\">{systemHealth.disk.toFixed(1)}%</span>\r\n                </div>\r\n                <div className=\"flex items-center justify-between\">\r\n                  <span className=\"text-sm text-gray-600\">{t.network}</span>\r\n                  <span className=\"text-sm font-medium\">{systemHealth.network.toFixed(1)}%</span>\r\n                </div>\r\n                <div className=\"flex items-center justify-between\">\r\n                  <span className=\"text-sm text-gray-600\">{t.lastBackup}</span>\r\n                  <span className=\"text-sm font-medium\">{systemHealth.lastBackup.toLocaleString('hi-IN')}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Quick Actions */}\r\n          <div className=\"bg-white shadow rounded-lg\">\r\n            <div className=\"px-4 py-5 sm:p-6\">\r\n              <h3 className=\"text-lg leading-6 font-medium text-gray-900 mb-4\">{t.quickActions}</h3>\r\n              <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-4\">\r\n                <button className=\"relative group bg-white p-6 focus-within:ring-2 focus-within:ring-inset focus-within:ring-blue-500 rounded-lg border border-gray-200 hover:border-gray-300\">\r\n                  <div>\r\n                    <span className=\"rounded-lg inline-flex p-3 bg-blue-50 text-blue-700 ring-4 ring-white\">\r\n                      <Users className=\"h-6 w-6\" />\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"mt-8\">\r\n                    <h3 className=\"text-lg font-medium\">\r\n                      <span className=\"absolute inset-0\" aria-hidden=\"true\" />\r\n                      {t.addUser}\r\n                    </h3>\r\n                    <p className=\"mt-2 text-sm text-gray-500\">{t.addUserDescription}</p>\r\n                  </div>\r\n                </button>\r\n\r\n                <button className=\"relative group bg-white p-6 focus-within:ring-2 focus-within:ring-inset focus-within:ring-blue-500 rounded-lg border border-gray-200 hover:border-gray-300\">\r\n                  <div>\r\n                    <span className=\"rounded-lg inline-flex p-3 bg-green-50 text-green-700 ring-4 ring-white\">\r\n                      <Shield className=\"h-6 w-6\" />\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"mt-8\">\r\n                    <h3 className=\"text-lg font-medium\">\r\n                      <span className=\"absolute inset-0\" aria-hidden=\"true\" />\r\n                      {t.securitySettings}\r\n                    </h3>\r\n                    <p className=\"mt-2 text-sm text-gray-500\">{t.securitySettingsDescription}</p>\r\n                  </div>\r\n                </button>\r\n\r\n                <button className=\"relative group bg-white p-6 focus-within:ring-2 focus-within:ring-inset focus-within:ring-blue-500 rounded-lg border border-gray-200 hover:border-gray-300\">\r\n                  <div>\r\n                    <span className=\"rounded-lg inline-flex p-3 bg-purple-50 text-purple-700 ring-4 ring-white\">\r\n                      <Database className=\"h-6 w-6\" />\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"mt-8\">\r\n                    <h3 className=\"text-lg font-medium\">\r\n                      <span className=\"absolute inset-0\" aria-hidden=\"true\" />\r\n                      {t.backupManagement}\r\n                    </h3>\r\n                    <p className=\"mt-2 text-sm text-gray-500\">{t.backupManagementDescription}</p>\r\n                  </div>\r\n                </button>\r\n\r\n                <button className=\"relative group bg-white p-6 focus-within:ring-2 focus-within:ring-inset focus-within:ring-blue-500 rounded-lg border border-gray-200 hover:border-gray-300\">\r\n                  <div>\r\n                    <span className=\"rounded-lg inline-flex p-3 bg-orange-50 text-orange-700 ring-4 ring-white\">\r\n                      <Settings className=\"h-6 w-6\" />\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"mt-8\">\r\n                    <h3 className=\"text-lg font-medium\">\r\n                      <span className=\"absolute inset-0\" aria-hidden=\"true\" />\r\n                      {t.systemConfiguration}\r\n                    </h3>\r\n                    <p className=\"mt-2 text-sm text-gray-500\">{t.systemConfigurationDescription}</p>\r\n                  </div>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Audit Logs Tab */}\r\n      {activeTab === 'logs' && (\r\n        <div className=\"bg-white shadow rounded-lg\">\r\n          <div className=\"px-4 py-5 sm:p-6\">\r\n            <h3 className=\"text-lg leading-6 font-medium text-gray-900 mb-4\">{t.auditLogs}</h3>\r\n            <div className=\"overflow-x-auto\">\r\n              <table className=\"min-w-full divide-y divide-gray-200\">\r\n                <thead className=\"bg-gray-50\">\r\n                  <tr>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t.timestamp}</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t.user}</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t.action}</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t.resource}</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t.ipAddress}</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t.status}</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                  {auditLogs.map((log) => (\r\n                    <tr key={log.id}>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                        {log.timestamp.toLocaleString('hi-IN')}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n                        {log.user}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                        {log.action}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                        {log.resource}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                        {log.ipAddress}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${\r\n                          log.status === 'success' ? 'bg-green-100 text-green-800' :\r\n                          log.status === 'failure' ? 'bg-red-100 text-red-800' :\r\n                          'bg-yellow-100 text-yellow-800'\r\n                        }`}>\r\n                          {log.status === 'success' ? t.success :\r\n                           log.status === 'failure' ? t.failure : t.warning}\r\n                        </span>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}","import { useState, useEffect } from 'react'\r\nimport { MapPin, Calculator, TrendingUp, Users, IndianRupee, Target, FileText, Phone, CheckCircle, Clock, AlertCircle, PlusCircle } from 'lucide-react'\r\nimport { usePlatform } from '../contexts/PlatformContext'\r\nimport { useAuth } from '../contexts/AuthContext'\r\n\r\ninterface FeasibilityProject {\r\n  id: string;\r\n  farmerId: string;\r\n  farmerName: string;\r\n  location: string;\r\n  cattleCount: number;\r\n  estimatedProduction: number;\r\n  investmentRequired: number;\r\n  subsidyAmount: number;\r\n  roiMonths: number;\r\n  status: 'assessment' | 'approved' | 'in_progress' | 'completed' | 'rejected';\r\n  createdDate: Date;\r\n  expectedStartDate?: Date;\r\n}\r\n\r\ninterface SubsidyApplication {\r\n  id: string;\r\n  farmerId: string;\r\n  farmerName: string;\r\n  applicationNumber: string;\r\n  subsidyType: 'central' | 'state' | 'combined';\r\n  amount: number;\r\n  applicationDate: Date;\r\n  status: 'submitted' | 'under_review' | 'approved' | 'disbursed' | 'rejected';\r\n  remarks?: string;\r\n}\r\n\r\ninterface BusinessLead {\r\n  id: string;\r\n  farmerName: string;\r\n  phone: string;\r\n  location: string;\r\n  cattleCount: number;\r\n  interest: 'high' | 'medium' | 'low';\r\n  stage: 'contact' | 'assessment' | 'proposal' | 'negotiation' | 'conversion';\r\n  assignedTo: string;\r\n  lastContact: Date;\r\n  nextFollowUp: Date;\r\n}\r\n\r\nconst API_BASE = 'http://localhost:8080' // IoT service for mapping and feasibility\r\nconst AUTH_API = 'http://localhost:8081/auth/api' // Auth service\r\nconst BIOGAS_API = 'http://localhost:8080/biogas' // For production data\r\n\r\nexport default function UrjaSanyojak() {\r\n  const { trackModuleUsage, updateBreadcrumbs } = usePlatform()\r\n  const { user } = useAuth()\r\n\r\n  const [feasibilityProjects, setFeasibilityProjects] = useState<FeasibilityProject[]>([])\r\n  const [subsidyApplications, setSubsidyApplications] = useState<SubsidyApplication[]>([])\r\n  const [businessLeads, setBusinessLeads] = useState<BusinessLead[]>([])\r\n  const [selectedTab, setSelectedTab] = useState<'feasibility' | 'subsidies' | 'pipeline'>('feasibility')\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  useEffect(() => {\r\n    trackModuleUsage('urjasanyojak', 'view')\r\n    updateBreadcrumbs([\r\n      { label: 'UrjaSanyojak Dashboard', url: '/urjasanyojak', module: 'business-dev' }\r\n    ])\r\n    loadBusinessData()\r\n  }, [])\r\n\r\n  // Load data from backend APIs\r\n  const loadBusinessData = async () => {\r\n    setLoading(true)\r\n    try {\r\n      await Promise.all([\r\n        loadFeasibilityProjects(),\r\n        loadSubsidyApplications(),\r\n        loadBusinessLeads()\r\n      ])\r\n    } catch (error) {\r\n      console.error('Error loading business data:', error)\r\n    }\r\n    setLoading(false)\r\n  }\r\n\r\n  const loadFeasibilityProjects = async () => {\r\n    try {\r\n      // Call actual backend API for feasibility analysis\r\n      const response = await fetch(`${API_BASE}/api/iot/analytics/feasibility/projects`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n\r\n      if (response.ok) {\r\n        const data = await response.json()\r\n        setFeasibilityProjects(data)\r\n      } else {\r\n        // Fallback to mock data if backend not available\r\n        setFeasibilityProjects([])\r\n      }\r\n    } catch (error) {\r\n      console.warn('Feasibility API error, using fallback:', error)\r\n      setFeasibilityProjects([])\r\n    }\r\n  }\r\n\r\n  const loadSubsidyApplications = async () => {\r\n    try {\r\n      const response = await fetch(`${AUTH_API}/subsidies/applications`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n\r\n      if (response.ok) {\r\n        const data = await response.json()\r\n        setSubsidyApplications(data)\r\n      } else {\r\n        setSubsidyApplications([])\r\n      }\r\n    } catch (error) {\r\n      console.warn('Subsidy API error, using fallback:', error)\r\n      setSubsidyApplications([])\r\n    }\r\n  }\r\n\r\n  const loadBusinessLeads = async () => {\r\n    try {\r\n      const response = await fetch(`${AUTH_API}/business/leads`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n\r\n      if (response.ok) {\r\n        const data = await response.json()\r\n        setBusinessLeads(data)\r\n      } else {\r\n        setBusinessLeads([])\r\n      }\r\n    } catch (error) {\r\n      console.warn('Business leads API error, using fallback:', error)\r\n      setBusinessLeads([])\r\n    }\r\n  }\r\n\r\n  // Backend API calls for actions\r\n  const calculateFeasibility = async (farmerId: string, cattleCount: number) => {\r\n    try {\r\n      const response = await fetch(`${API_BASE}/api/iot/analytics/feasibility/calculate`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          farmerId,\r\n          cattleCount,\r\n          location: 'default', // Should be passed from form\r\n          userId: user?.id\r\n        })\r\n      })\r\n\r\n      if (response.ok) {\r\n        const result = await response.json()\r\n        console.log('Feasibility calculation:', result)\r\n        await loadFeasibilityProjects() // Refresh data\r\n        return result\r\n      }\r\n    } catch (error) {\r\n      console.error('Feasibility calculation error:', error)\r\n    }\r\n  }\r\n\r\n  const submitSubsidyApplication = async (applicationData: any) => {\r\n    try {\r\n      const response = await fetch(`${AUTH_API}/subsidies/apply`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          ...applicationData,\r\n          submittedBy: user?.id,\r\n          submissionDate: new Date()\r\n        })\r\n      })\r\n\r\n      if (response.ok) {\r\n        const result = await response.json()\r\n        await loadSubsidyApplications() // Refresh data\r\n        alert(`Subsidy application ${result.applicationNumber} submitted successfully!`)\r\n        return result\r\n      }\r\n    } catch (error) {\r\n      console.error('Subsidy application error:', error)\r\n      alert('Error submitting application. Please try again.')\r\n    }\r\n  }\r\n\r\n  const updateLeadStatus = async (leadId: string, newStage: string) => {\r\n    try {\r\n      const response = await fetch(`${AUTH_API}/business/leads/${leadId}/update`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          stage: newStage,\r\n          updatedBy: user?.id,\r\n          lastContact: new Date()\r\n        })\r\n      })\r\n\r\n      if (response.ok) {\r\n        await loadBusinessLeads() // Refresh data\r\n        console.log(`Lead ${leadId} updated to ${newStage}`)\r\n      }\r\n    } catch (error) {\r\n      console.error('Lead update error:', error)\r\n    }\r\n  }\r\n\r\n  // All data now comes from backend - no more mock data!\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'approved': case 'completed': case 'disbursed': case 'conversion':\r\n        return 'bg-green-100 text-green-800 border-green-200'\r\n      case 'in_progress': case 'under_review': case 'assessment': case 'negotiation':\r\n        return 'bg-yellow-100 text-yellow-800 border-yellow-200'\r\n      case 'rejected':\r\n        return 'bg-red-100 text-red-800 border-red-200'\r\n      default:\r\n        return 'bg-blue-100 text-blue-800 border-blue-200'\r\n    }\r\n  }\r\n\r\n  const formatCurrency = (amount: number) => {\r\n    return new Intl.NumberFormat('en-IN', {\r\n      style: 'currency',\r\n      currency: 'INR',\r\n      maximumFractionDigits: 0\r\n    }).format(amount)\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-screen\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-green-600 mx-auto mb-4\"></div>\r\n          <p className=\"text-gray-600\">Loading business development dashboard...</p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-6 space-y-6 max-w-7xl mx-auto\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold text-gray-900 flex items-center gap-3\">\r\n            <TrendingUp className=\"text-green-600\" />\r\n            UrjaSanyojak Dashboard\r\n          </h1>\r\n          <p className=\"text-gray-600 mt-1\">Business Development & Project Pipeline Management</p>\r\n        </div>\r\n        <div className=\"text-right\">\r\n          <p className=\"text-sm text-gray-500\">Business Development Officer</p>\r\n          <p className=\"font-semibold text-gray-900\">{user?.name}</p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Quick Stats */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\r\n        <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-sm text-gray-500\">Active Projects</p>\r\n              <p className=\"text-2xl font-bold text-blue-600\">{feasibilityProjects.length}</p>\r\n            </div>\r\n            <Calculator className=\"h-8 w-8 text-blue-600\" />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-sm text-gray-500\">Subsidy Applications</p>\r\n              <p className=\"text-2xl font-bold text-green-600\">{subsidyApplications.length}</p>\r\n            </div>\r\n            <IndianRupee className=\"h-8 w-8 text-green-600\" />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-sm text-gray-500\">Business Leads</p>\r\n              <p className=\"text-2xl font-bold text-purple-600\">{businessLeads.length}</p>\r\n            </div>\r\n            <Users className=\"h-8 w-8 text-purple-600\" />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-sm text-gray-500\">Conversion Rate</p>\r\n              <p className=\"text-2xl font-bold text-orange-600\">65%</p>\r\n            </div>\r\n            <Target className=\"h-8 w-8 text-orange-600\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Tab Navigation */}\r\n      <div className=\"bg-white rounded-lg border border-gray-200\">\r\n        <div className=\"border-b border-gray-200\">\r\n          <nav className=\"flex space-x-8 px-6\">\r\n            {[\r\n              { id: 'feasibility', label: 'Feasibility Projects', icon: Calculator },\r\n              { id: 'subsidies', label: 'Subsidy Applications', icon: IndianRupee },\r\n              { id: 'pipeline', label: 'Business Pipeline', icon: TrendingUp }\r\n            ].map(({ id, label, icon: Icon }) => (\r\n              <button\r\n                key={id}\r\n                onClick={() => setSelectedTab(id as any)}\r\n                className={`py-4 px-2 border-b-2 font-medium text-sm flex items-center gap-2 transition-colors ${\r\n                  selectedTab === id\r\n                    ? 'border-green-500 text-green-600'\r\n                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\r\n                }`}\r\n              >\r\n                <Icon className=\"h-4 w-4\" />\r\n                {label}\r\n              </button>\r\n            ))}\r\n          </nav>\r\n        </div>\r\n\r\n        <div className=\"p-6\">\r\n          {/* Feasibility Projects Tab */}\r\n          {selectedTab === 'feasibility' && (\r\n            <div>\r\n              <div className=\"flex items-center justify-between mb-6\">\r\n                <h2 className=\"text-xl font-semibold text-gray-900\">Feasibility Assessment Projects</h2>\r\n                <button\r\n                  onClick={() => calculateFeasibility('new-farmer', 25)}\r\n                  className=\"bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 flex items-center gap-2\"\r\n                >\r\n                  <PlusCircle className=\"h-4 w-4\" />\r\n                  New Assessment\r\n                </button>\r\n              </div>\r\n\r\n              <div className=\"space-y-4\">\r\n                {feasibilityProjects.map((project) => (\r\n                  <div key={project.id} className=\"border border-gray-200 rounded-lg p-4\">\r\n                    <div className=\"flex items-start justify-between\">\r\n                      <div className=\"flex-1\">\r\n                        <div className=\"flex items-center gap-3 mb-2\">\r\n                          <h3 className=\"font-semibold text-gray-900\">{project.farmerName}</h3>\r\n                          <span className={`px-2 py-1 rounded-full text-xs font-medium border ${getStatusColor(project.status)}`}>\r\n                            {project.status.replace('_', ' ').toUpperCase()}\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm text-gray-600\">\r\n                          <div className=\"flex items-center gap-2\">\r\n                            <MapPin className=\"h-4 w-4\" />\r\n                            {project.location}\r\n                          </div>\r\n                          <div>\r\n                            <span className=\"font-medium\">Cattle:</span> {project.cattleCount}\r\n                          </div>\r\n                          <div>\r\n                            <span className=\"font-medium\">Production:</span> {project.estimatedProduction} m³/day\r\n                          </div>\r\n                          <div>\r\n                            <span className=\"font-medium\">ROI:</span> {project.roiMonths} months\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"mt-2 grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\r\n                          <div>\r\n                            <span className=\"font-medium text-gray-700\">Investment Required:</span> {formatCurrency(project.investmentRequired)}\r\n                          </div>\r\n                          <div>\r\n                            <span className=\"font-medium text-gray-700\">Subsidy Amount:</span> {formatCurrency(project.subsidyAmount)}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"flex gap-2\">\r\n                        <button\r\n                          onClick={() => calculateFeasibility(project.farmerId, project.cattleCount)}\r\n                          className=\"text-blue-600 hover:text-blue-700 text-sm font-medium\"\r\n                        >\r\n                          Recalculate\r\n                        </button>\r\n                        <button className=\"text-green-600 hover:text-green-700 text-sm font-medium\">\r\n                          View Details\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Subsidies Tab */}\r\n          {selectedTab === 'subsidies' && (\r\n            <div>\r\n              <div className=\"flex items-center justify-between mb-6\">\r\n                <h2 className=\"text-xl font-semibold text-gray-900\">Subsidy Applications</h2>\r\n                <button\r\n                  onClick={() => submitSubsidyApplication({\r\n                    farmerId: 'FARM-NEW',\r\n                    farmerName: 'New Farmer',\r\n                    subsidyType: 'central',\r\n                    amount: 500000\r\n                  })}\r\n                  className=\"bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 flex items-center gap-2\"\r\n                >\r\n                  <FileText className=\"h-4 w-4\" />\r\n                  New Application\r\n                </button>\r\n              </div>\r\n\r\n              <div className=\"space-y-4\">\r\n                {subsidyApplications.map((application) => (\r\n                  <div key={application.id} className=\"border border-gray-200 rounded-lg p-4\">\r\n                    <div className=\"flex items-start justify-between\">\r\n                      <div className=\"flex-1\">\r\n                        <div className=\"flex items-center gap-3 mb-2\">\r\n                          <h3 className=\"font-semibold text-gray-900\">{application.farmerName}</h3>\r\n                          <span className={`px-2 py-1 rounded-full text-xs font-medium border ${getStatusColor(application.status)}`}>\r\n                            {application.status.replace('_', ' ').toUpperCase()}\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm text-gray-600 mb-2\">\r\n                          <div>\r\n                            <span className=\"font-medium\">Application #:</span> {application.applicationNumber}\r\n                          </div>\r\n                          <div>\r\n                            <span className=\"font-medium\">Type:</span> {application.subsidyType.toUpperCase()}\r\n                          </div>\r\n                          <div>\r\n                            <span className=\"font-medium\">Amount:</span> {formatCurrency(application.amount)}\r\n                          </div>\r\n                        </div>\r\n                        {application.remarks && (\r\n                          <div className=\"text-sm text-gray-600 mt-2\">\r\n                            <span className=\"font-medium\">Remarks:</span> {application.remarks}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                      <div className=\"text-right text-sm text-gray-500\">\r\n                        Applied: {application.applicationDate.toLocaleDateString()}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Business Pipeline Tab */}\r\n          {selectedTab === 'pipeline' && (\r\n            <div>\r\n              <div className=\"flex items-center justify-between mb-6\">\r\n                <h2 className=\"text-xl font-semibold text-gray-900\">Business Pipeline</h2>\r\n                <button className=\"bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 flex items-center gap-2\">\r\n                  <PlusCircle className=\"h-4 w-4\" />\r\n                  Add Lead\r\n                </button>\r\n              </div>\r\n\r\n              <div className=\"space-y-4\">\r\n                {businessLeads.map((lead) => (\r\n                  <div key={lead.id} className=\"border border-gray-200 rounded-lg p-4\">\r\n                    <div className=\"flex items-start justify-between\">\r\n                      <div className=\"flex-1\">\r\n                        <div className=\"flex items-center gap-3 mb-2\">\r\n                          <h3 className=\"font-semibold text-gray-900\">{lead.farmerName}</h3>\r\n                          <span className={`px-2 py-1 rounded-full text-xs font-medium border ${getStatusColor(lead.stage)}`}>\r\n                            {lead.stage.replace('_', ' ').toUpperCase()}\r\n                          </span>\r\n                          <span className={`px-2 py-1 rounded-full text-xs font-medium ${\r\n                            lead.interest === 'high' ? 'bg-red-100 text-red-800' :\r\n                            lead.interest === 'medium' ? 'bg-yellow-100 text-yellow-800' :\r\n                            'bg-gray-100 text-gray-800'\r\n                          }`}>\r\n                            {lead.interest.toUpperCase()} INTEREST\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm text-gray-600 mb-2\">\r\n                          <div className=\"flex items-center gap-2\">\r\n                            <Phone className=\"h-4 w-4\" />\r\n                            {lead.phone}\r\n                          </div>\r\n                          <div className=\"flex items-center gap-2\">\r\n                            <MapPin className=\"h-4 w-4\" />\r\n                            {lead.location}\r\n                          </div>\r\n                          <div>\r\n                            <span className=\"font-medium\">Cattle:</span> {lead.cattleCount}\r\n                          </div>\r\n                          <div>\r\n                            <span className=\"font-medium\">Assigned:</span> {lead.assignedTo}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"flex items-center gap-4 text-sm text-gray-500\">\r\n                          <div className=\"flex items-center gap-1\">\r\n                            <Clock className=\"h-4 w-4\" />\r\n                            Last Contact: {lead.lastContact.toLocaleDateString()}\r\n                          </div>\r\n                          <div className=\"flex items-center gap-1\">\r\n                            <AlertCircle className=\"h-4 w-4\" />\r\n                            Next Follow-up: {lead.nextFollowUp.toLocaleDateString()}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"flex gap-2\">\r\n                        <select\r\n                          value={lead.stage}\r\n                          onChange={(e) => updateLeadStatus(lead.id, e.target.value)}\r\n                          className=\"text-sm border border-gray-300 rounded px-2 py-1\"\r\n                        >\r\n                          <option value=\"contact\">Contact</option>\r\n                          <option value=\"assessment\">Assessment</option>\r\n                          <option value=\"proposal\">Proposal</option>\r\n                          <option value=\"negotiation\">Negotiation</option>\r\n                          <option value=\"conversion\">Conversion</option>\r\n                        </select>\r\n                        <button className=\"text-green-600 hover:text-green-700 text-sm font-medium\">\r\n                          Contact\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import { useState, useEffect, useRef } from 'react'\nimport { Users, Database, BarChart3, TrendingUp, Activity, Zap, Truck, AlertTriangle, Clock, Thermometer, Gauge, Calendar, Download, Volume2 } from 'lucide-react'\nimport { useAuth } from '../contexts/AuthContext'\nimport { usePlatform } from '../contexts/PlatformContext'\n\n// Backend API endpoints\nconst IOT_API = import.meta.env.VITE_IOT_API || 'http://localhost:8080';\nconst BIOGAS_API = import.meta.env.VITE_BIOGAS_API || 'http://localhost:8080';\nconst SALES_API = import.meta.env.VITE_SALES_API || 'http://localhost:8083';\n\ninterface IoTData {\n  ch4: number;\n  pressure: number;\n  temperature: number;\n  timestamp: Date;\n}\n\ninterface PickupSchedule {\n  id: string;\n  clusterId: string;\n  scheduledTime: Date;\n  truckId: string;\n  status: 'scheduled' | 'in-progress' | 'completed' | 'cancelled';\n  estimatedVolume: number;\n}\n\ninterface ClusterMetrics {\n  totalBiogas: number;\n  dailyProduction: number;\n  efficiency: number;\n  activePlants: number;\n  alerts: number;\n}\n\nexport default function Dashboard() {\n  const { user } = useAuth()\n  const { trackModuleUsage, updateBreadcrumbs } = usePlatform()\n  const [iotData, setIotData] = useState<IoTData[]>([]);\n  const [pickupSchedules, setPickupSchedules] = useState<PickupSchedule[]>([]);\n  const [clusterMetrics, setClusterMetrics] = useState<ClusterMetrics>({\n    totalBiogas: 0,\n    dailyProduction: 0,\n    efficiency: 0,\n    activePlants: 0,\n    alerts: 0\n  });\n  const [isSpeaking, setIsSpeaking] = useState(false);\n  const [isListening, setIsListening] = useState(false);\n  const [transcript, setTranscript] = useState('');\n  const [voices, setVoices] = useState<SpeechSynthesisVoice[]>([]);\n  const [selectedVoice, setSelectedVoice] = useState<SpeechSynthesisVoice | null>(null);\n  const [language, setLanguage] = useState<'en' | 'hi'>('en');\n\n  const translations = {\n    en: {\n      title: 'Biogas Cluster Management Dashboard',\n      subtitle: 'Real-time monitoring and management of biogas operations',\n      clusterOverview: 'Cluster Overview',\n      totalGaushalas: 'Total Gaushalas',\n      activeDigesters: 'Active Digesters',\n      totalBiogas: 'Total Biogas (m³)',\n      todayCollection: 'Today\\'s Collection',\n      pickupSchedule: 'Pickup Schedule',\n      alerts: 'Alerts',\n      alertManagement: 'Alert Management',\n      voiceSummary: 'Voice Summary',\n      speaking: 'Speaking...',\n      speakCommand: 'Speak a command',\n      startListening: 'Start Listening',\n      stopListening: 'Stop Listening',\n      exportData: 'Export Data',\n      exportPDF: 'Export PDF',\n      exportExcel: 'Export Excel',\n      recentActivity: 'Recent Activity',\n      systemHealth: 'System Health',\n      performance: 'Performance',\n      revenue: 'Revenue',\n      carbonCredits: 'Carbon Credits',\n      totalBiogasLabel: 'Total Biogas',\n      dailyProduction: 'Daily Production',\n      efficiency: 'Efficiency',\n      activePlants: 'Active Plants',\n      alertsLabel: 'Alerts',\n      ch4Level: 'CH4 Level (Methane)',\n      pressure: 'Pressure',\n      temperature: 'Temperature',\n      pickupScheduleLabel: 'Pickup Schedule',\n      cluster: 'Cluster',\n      time: 'Time',\n      truck: 'Truck',\n      quantity: 'Quantity',\n      status: 'Status',\n      action: 'Action',\n      scheduled: 'Scheduled',\n      edit: 'Edit',\n      newSchedule: 'New Schedule',\n      quickActions: 'Quick Actions',\n      pickupScheduleAction: 'Pickup Schedule',\n      clusterAnalysis: 'Cluster Analysis',\n      alertManagementLabel: 'Alert Management',\n      maintenance: 'Maintenance'\n    },\n    hi: {\n      title: 'बायोगैस क्लस्टर प्रबंधन डैशबोर्ड',\n      subtitle: 'बायोगैस संचालन का रीयल-टाइम निगरानी और प्रबंधन',\n      clusterOverview: 'क्लस्टर अवलोकन',\n      totalGaushalas: 'कुल गौशालाएं',\n      activeDigesters: 'सक्रिय डाइजेस्टर',\n      totalBiogas: 'कुल बायोगैस (m³)',\n      todayCollection: 'आज का संग्रह',\n      pickupSchedule: 'पिकअप अनुसूची',\n      alerts: 'अलर्ट',\n      alertManagement: 'अलर्ट प्रबंधन',\n      voiceSummary: 'आवाज सारांश',\n      speaking: 'बोल रहा है...',\n      speakCommand: 'एक कमांड बोलें',\n      startListening: 'सुनना शुरू करें',\n      stopListening: 'सुनना बंद करें',\n      exportData: 'डेटा निर्यात करें',\n      exportPDF: 'PDF निर्यात करें',\n      exportExcel: 'Excel निर्यात करें',\n      recentActivity: 'हाल की गतिविधि',\n      systemHealth: 'सिस्टम स्वास्थ्य',\n      performance: 'प्रदर्शन',\n      revenue: 'राजस्व',\n      carbonCredits: 'कार्बन क्रेडिट',\n      totalBiogasLabel: 'कुल बायोगैस',\n      dailyProduction: 'दैनिक उत्पादन',\n      efficiency: 'दक्षता',\n      activePlants: 'सक्रिय प्लांट',\n      alertsLabel: 'अलर्ट',\n      ch4Level: 'CH4 स्तर (मीथेन)',\n      pressure: 'दबाव',\n      temperature: 'तापमान',\n      pickupScheduleLabel: 'पिकअप शेड्यूल',\n      cluster: 'क्लस्टर',\n      time: 'समय',\n      truck: 'ट्रक',\n      quantity: 'मात्रा',\n      status: 'स्थिति',\n      action: 'कार्य',\n      scheduled: 'निर्धारित',\n      edit: 'संपादित करें',\n      newSchedule: 'नया शेड्यूल',\n      quickActions: 'त्वरित कार्य',\n      pickupScheduleAction: 'पिकअप शेड्यूल',\n      clusterAnalysis: 'क्लस्टर विश्लेषण',\n      alertManagementLabel: 'अलर्ट प्रबंधन',\n      maintenance: 'रखरखाव'\n    }\n  };\n\n  const t = translations[language]\n\n  // Track module usage and update breadcrumbs for platform integration\n  useEffect(() => {\n    trackModuleUsage('urjasanyojak')\n    updateBreadcrumbs([\n      { label: 'UrjaSanyojak', url: '/', module: 'urjasanyojak' },\n      { label: 'Dashboard', url: '/', module: 'urjasanyojak' }\n    ])\n  }, [])\n\n  // Fetch real IoT data from backend\n  const fetchIoTData = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) return;\n\n      const response = await fetch(`${IOT_API}/api/iot/devices?type=biogas_digester&gaushalaId=${user?.id}&status=ONLINE`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (response.ok) {\n        const devices = await response.json();\n        if (devices.length > 0) {\n          const device = devices[0];\n          const newData: IoTData = {\n            ch4: device.ch4Concentration || 0,\n            pressure: device.pressure || 0,\n            temperature: device.temperature || 0,\n            timestamp: new Date(device.lastUpdate || Date.now())\n          };\n          setIotData(prev => [newData, ...prev.slice(0, 19)]); // Keep last 20 readings\n        }\n      }\n    } catch (error) {\n      console.error('Error fetching IoT data:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchIoTData(); // Initial fetch\n    const interval = setInterval(fetchIoTData, 10000); // Update every 10 seconds\n    return () => clearInterval(interval);\n  }, [user]);\n\n  // Fetch pickup schedules from sales service\n  const fetchPickupSchedules = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) return;\n\n      const response = await fetch(`${SALES_API}/sales/schedules?gaushalaId=${user?.id}&type=pickup`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (response.ok) {\n        const schedules = await response.json();\n        const pickupSchedules: PickupSchedule[] = schedules.map((schedule: any) => ({\n          id: schedule.id,\n          clusterId: schedule.clusterId || user?.clusterId,\n          scheduledTime: new Date(schedule.scheduledTime),\n          truckId: schedule.vehicleId || schedule.truckId,\n          status: schedule.status?.toLowerCase() || 'scheduled',\n          estimatedVolume: schedule.estimatedVolume || schedule.quantity\n        }));\n        setPickupSchedules(pickupSchedules);\n      }\n    } catch (error) {\n      console.error('Error fetching pickup schedules:', error);\n      setPickupSchedules([]);\n    }\n  };\n\n  useEffect(() => {\n    fetchPickupSchedules();\n  }, [user]);\n\n  // Fetch cluster metrics from production service\n  const fetchClusterMetrics = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) return;\n\n      const response = await fetch(`${BIOGAS_API}/production/metrics?gaushalaId=${user?.id}&timeframe=daily`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (response.ok) {\n        const metrics = await response.json();\n        setClusterMetrics({\n          totalBiogas: metrics.totalBiogas || 0,\n          dailyProduction: metrics.dailyProduction || 0,\n          efficiency: metrics.efficiency || (iotData[0]?.ch4 || 0),\n          activePlants: metrics.activePlants || 0,\n          alerts: metrics.alerts || 0\n        });\n      }\n    } catch (error) {\n      console.error('Error fetching cluster metrics:', error);\n      // Fallback to IoT data if available\n      if (iotData.length > 0) {\n        const latest = iotData[0];\n        setClusterMetrics(prev => ({\n          ...prev,\n          efficiency: latest.ch4,\n          alerts: latest.pressure > 2.5 || latest.temperature > 40 ? 2 : 0\n        }));\n      }\n    }\n  };\n\n  useEffect(() => {\n    fetchClusterMetrics();\n    const interval = setInterval(fetchClusterMetrics, 60000); // Update every minute\n    return () => clearInterval(interval);\n  }, [user, iotData]);\n\n  const speakSummary = () => {\n    if ('speechSynthesis' in window) {\n      setIsSpeaking(true);\n      const utterance = new SpeechSynthesisUtterance(\n        `क्लस्टर सारांश: कुल बायोगैस ${Math.round(clusterMetrics.totalBiogas)} घन मीटर, दैनिक उत्पादन ${Math.round(clusterMetrics.dailyProduction)} घन मीटर, दक्षता ${Math.round(clusterMetrics.efficiency)} प्रतिशत, सक्रिय प्लांट ${clusterMetrics.activePlants}, अलर्ट ${clusterMetrics.alerts}`\n      );\n      utterance.lang = 'hi-IN';\n      utterance.onend = () => setIsSpeaking(false);\n      speechSynthesis.speak(utterance);\n    }\n  };\n\n  const exportData = (format: 'pdf' | 'excel') => {\n    // Export cluster data\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) return;\n\n      const response = fetch(`${BIOGAS_API}/production/export?gaushalaId=${user?.id}&format=${format}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n\n      alert(`${format.toUpperCase()} export initiated for cluster data`);\n    } catch (error) {\n      console.error('Export error:', error);\n      alert('Export failed. Please try again.');\n    }\n  };\n\n  const getStatusColor = (status: PickupSchedule['status']) => {\n    switch (status) {\n      case 'scheduled': return 'bg-blue-100 text-blue-800';\n      case 'in-progress': return 'bg-yellow-100 text-yellow-800';\n      case 'completed': return 'bg-green-100 text-green-800';\n      case 'cancelled': return 'bg-red-100 text-red-800';\n      default: return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const getStatusText = (status: PickupSchedule['status']) => {\n    switch (status) {\n      case 'scheduled': return 'निर्धारित';\n      case 'in-progress': return 'प्रगति में';\n      case 'completed': return 'पूर्ण';\n      case 'cancelled': return 'रद्द';\n      default: return 'अज्ञात';\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex justify-between items-center\">\n      <div>\n          <h1 className=\"text-2xl font-bold text-gray-900\">{t.title}</h1>\n          <p className=\"text-gray-600\">BiogasSangh Cluster Manager Dashboard</p>\n        </div>\n        \n        {/* Language Toggle */}\n        <button\n          onClick={() => setLanguage(language === 'en' ? 'hi' : 'en')}\n          className=\"px-3 py-1 text-sm bg-white rounded-md shadow-sm border border-gray-200 hover:bg-gray-50\"\n        >\n          {language === 'en' ? 'हिंदी' : 'English'}\n        </button>\n        <div className=\"flex gap-3\">\n          <button\n            onClick={speakSummary}\n            disabled={isSpeaking}\n            className=\"flex items-center gap-2 px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 disabled:opacity-50\"\n          >\n            <Volume2 className=\"h-4 w-4\" />\n            {isSpeaking ? t.speaking : t.voiceSummary}\n          </button>\n          <button\n            onClick={() => exportData('pdf')}\n            className=\"flex items-center gap-2 px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700\"\n          >\n            <Download className=\"h-4 w-4\" />\n            PDF\n          </button>\n          <button\n            onClick={() => exportData('excel')}\n            className=\"flex items-center gap-2 px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700\"\n          >\n            <Download className=\"h-4 w-4\" />\n            Excel\n          </button>\n        </div>\n      </div>\n\n      {/* Cluster Performance Metrics */}\n      <div className=\"grid grid-cols-1 gap-5 sm:grid-cols-2 lg:grid-cols-5\">\n        <div className=\"bg-white overflow-hidden shadow rounded-lg\">\n          <div className=\"p-5\">\n            <div className=\"flex items-center\">\n              <div className=\"flex-shrink-0\">\n                <Zap className=\"h-6 w-6 text-blue-400\" />\n              </div>\n              <div className=\"ml-5 w-0 flex-1\">\n                <dl>\n                  <dt className=\"text-sm font-medium text-gray-500 truncate\">{t.totalBiogasLabel}</dt>\n                  <dd className=\"text-lg font-medium text-gray-900\">{Math.round(clusterMetrics.totalBiogas)} m³</dd>\n                </dl>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white overflow-hidden shadow rounded-lg\">\n          <div className=\"p-5\">\n            <div className=\"flex items-center\">\n              <div className=\"flex-shrink-0\">\n                <TrendingUp className=\"h-6 w-6 text-green-400\" />\n              </div>\n              <div className=\"ml-5 w-0 flex-1\">\n                <dl>\n                  <dt className=\"text-sm font-medium text-gray-500 truncate\">{t.dailyProduction}</dt>\n                  <dd className=\"text-lg font-medium text-gray-900\">{Math.round(clusterMetrics.dailyProduction)} m³</dd>\n                </dl>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white overflow-hidden shadow rounded-lg\">\n            <div className=\"p-5\">\n              <div className=\"flex items-center\">\n                <div className=\"flex-shrink-0\">\n                <BarChart3 className=\"h-6 w-6 text-purple-400\" />\n                </div>\n                <div className=\"ml-5 w-0 flex-1\">\n                  <dl>\n                  <dt className=\"text-sm font-medium text-gray-500 truncate\">{t.efficiency}</dt>\n                  <dd className=\"text-lg font-medium text-gray-900\">{Math.round(clusterMetrics.efficiency)}%</dd>\n                  </dl>\n                </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white overflow-hidden shadow rounded-lg\">\n          <div className=\"p-5\">\n            <div className=\"flex items-center\">\n              <div className=\"flex-shrink-0\">\n                <Database className=\"h-6 w-6 text-orange-400\" />\n              </div>\n              <div className=\"ml-5 w-0 flex-1\">\n                <dl>\n                  <dt className=\"text-sm font-medium text-gray-500 truncate\">{t.activePlants}</dt>\n                  <dd className=\"text-lg font-medium text-gray-900\">{clusterMetrics.activePlants}</dd>\n                </dl>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white overflow-hidden shadow rounded-lg\">\n          <div className=\"p-5\">\n            <div className=\"flex items-center\">\n              <div className=\"flex-shrink-0\">\n                <AlertTriangle className=\"h-6 w-6 text-red-400\" />\n              </div>\n              <div className=\"ml-5 w-0 flex-1\">\n                <dl>\n                  <dt className=\"text-sm font-medium text-gray-500 truncate\">{t.alertsLabel}</dt>\n                  <dd className=\"text-lg font-medium text-gray-900\">{clusterMetrics.alerts}</dd>\n                </dl>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* IoT Real-time Data Visualization */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* CH4 Levels Chart */}\n      <div className=\"bg-white shadow rounded-lg\">\n        <div className=\"px-4 py-5 sm:p-6\">\n            <h3 className=\"text-lg leading-6 font-medium text-gray-900 mb-4\">{t.ch4Level}</h3>\n            <div className=\"space-y-3\">\n              {iotData.slice(0, 10).map((data, index) => (\n                <div key={index} className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center gap-3\">\n                    <div className=\"w-3 h-3 rounded-full bg-blue-500\"></div>\n                    <span className=\"text-sm text-gray-600\">\n                      {data.timestamp.toLocaleTimeString('hi-IN')}\n                        </span>\n                      </div>\n                  <div className=\"flex items-center gap-2\">\n                    <span className=\"text-sm font-medium\">{data.ch4.toFixed(1)}%</span>\n                    <div className=\"w-20 bg-gray-200 rounded-full h-2\">\n                      <div \n                        className=\"bg-blue-600 h-2 rounded-full\" \n                        style={{ width: `${data.ch4}%` }}\n                      ></div>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n\n        {/* Pressure and Temperature */}\n        <div className=\"bg-white shadow rounded-lg\">\n          <div className=\"px-4 py-5 sm:p-6\">\n            <h3 className=\"text-lg leading-6 font-medium text-gray-900 mb-4\">{t.pressure} और {t.temperature}</h3>\n            <div className=\"space-y-4\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center gap-3\">\n                  <Gauge className=\"h-5 w-5 text-red-500\" />\n                  <span className=\"text-sm text-gray-600\">{t.pressure}</span>\n                </div>\n                <span className=\"text-lg font-medium\">{iotData[0]?.pressure.toFixed(2)} bar</span>\n              </div>\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center gap-3\">\n                  <Thermometer className=\"h-5 w-5 text-orange-500\" />\n                  <span className=\"text-sm text-gray-600\">{t.temperature}</span>\n                </div>\n                <span className=\"text-lg font-medium\">{iotData[0]?.temperature.toFixed(1)}°C</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Pickup Scheduling System */}\n      <div className=\"bg-white shadow rounded-lg\">\n        <div className=\"px-4 py-5 sm:p-6\">\n          <div className=\"flex justify-between items-center mb-4\">\n            <h3 className=\"text-lg leading-6 font-medium text-gray-900\">{t.pickupScheduleLabel}</h3>\n            <button className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\">\n              {t.newSchedule}\n            </button>\n          </div>\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t.cluster}</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t.time}</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t.truck}</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t.quantity}</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t.status}</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t.action}</th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {pickupSchedules.map((schedule) => (\n                  <tr key={schedule.id}>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n                      {schedule.clusterId}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                      {schedule.scheduledTime.toLocaleString('hi-IN')}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                      {schedule.truckId}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                      {schedule.estimatedVolume} m³\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${getStatusColor(schedule.status)}`}>\n                        {getStatusText(schedule.status)}\n                      </span>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                      <button className=\"text-blue-600 hover:text-blue-900\">{t.edit}</button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n\n      {/* Quick Actions */}\n      <div className=\"bg-white shadow rounded-lg\">\n        <div className=\"px-4 py-5 sm:p-6\">\n          <h3 className=\"text-lg leading-6 font-medium text-gray-900 mb-4\">{t.quickActions}</h3>\n          <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-4\">\n            <button className=\"relative group bg-white p-6 focus-within:ring-2 focus-within:ring-inset focus-within:ring-blue-500 rounded-lg border border-gray-200 hover:border-gray-300\">\n              <div>\n                <span className=\"rounded-lg inline-flex p-3 bg-blue-50 text-blue-700 ring-4 ring-white\">\n                  <Truck className=\"h-6 w-6\" />\n                </span>\n              </div>\n              <div className=\"mt-8\">\n                <h3 className=\"text-lg font-medium\">\n                  <span className=\"absolute inset-0\" aria-hidden=\"true\" />\n                  {t.pickupScheduleAction}\n                </h3>\n                <p className=\"mt-2 text-sm text-gray-500\">नया पिकअप शेड्यूल बनाएं</p>\n              </div>\n            </button>\n\n            <button className=\"relative group bg-white p-6 focus-within:ring-2 focus-within:ring-inset focus-within:ring-blue-500 rounded-lg border border-gray-200 hover:border-gray-300\">\n              <div>\n                <span className=\"rounded-lg inline-flex p-3 bg-green-50 text-green-700 ring-4 ring-white\">\n                  <BarChart3 className=\"h-6 w-6\" />\n                </span>\n              </div>\n              <div className=\"mt-8\">\n                <h3 className=\"text-lg font-medium\">\n                  <span className=\"absolute inset-0\" aria-hidden=\"true\" />\n                  {t.clusterAnalysis}\n                </h3>\n                <p className=\"mt-2 text-sm text-gray-500\">विस्तृत प्रदर्शन विश्लेषण</p>\n              </div>\n            </button>\n\n            <button className=\"relative group bg-white p-6 focus-within:ring-2 focus-within:ring-inset focus-within:ring-blue-500 rounded-lg border border-gray-200 hover:border-gray-300\">\n              <div>\n                <span className=\"rounded-lg inline-flex p-3 bg-purple-50 text-purple-700 ring-4 ring-white\">\n                  <AlertTriangle className=\"h-6 w-6\" />\n                </span>\n              </div>\n              <div className=\"mt-8\">\n                <h3 className=\"text-lg font-medium\">\n                  <span className=\"absolute inset-0\" aria-hidden=\"true\" />\n                  {t.alertManagementLabel}\n                </h3>\n                <p className=\"mt-2 text-sm text-gray-500\">अलर्ट और सूचनाएं देखें</p>\n              </div>\n            </button>\n\n            <button className=\"relative group bg-white p-6 focus-within:ring-2 focus-within:ring-inset focus-within:ring-blue-500 rounded-lg border border-gray-200 hover:border-gray-300\">\n              <div>\n                <span className=\"rounded-lg inline-flex p-3 bg-orange-50 text-orange-700 ring-4 ring-white\">\n                  <Calendar className=\"h-6 w-6\" />\n                </span>\n              </div>\n              <div className=\"mt-8\">\n                <h3 className=\"text-lg font-medium\">\n                  <span className=\"absolute inset-0\" aria-hidden=\"true\" />\n                  {t.maintenance}\n                </h3>\n                <p className=\"mt-2 text-sm text-gray-500\">रखरखाव शेड्यूल देखें</p>\n              </div>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\n\r\nexport interface ExecutiveKPI {\r\n  id: string;\r\n  name: string;\r\n  value: number;\r\n  unit: string;\r\n  change: number;\r\n  trend: 'up' | 'down' | 'stable';\r\n  target: number;\r\n  confidence: number;\r\n  category: 'financial' | 'operational' | 'environmental' | 'strategic';\r\n  priority: 'high' | 'medium' | 'low';\r\n}\r\n\r\nexport interface PredictiveInsight {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  impact: 'positive' | 'negative' | 'neutral';\r\n  confidence: number;\r\n  category: string;\r\n  actionRequired: boolean;\r\n  timeline: string;\r\n  estimatedValue?: number;\r\n}\r\n\r\nexport interface StrategicInitiative {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  status: 'planning' | 'in-progress' | 'completed' | 'on-hold';\r\n  progress: number;\r\n  budget: number;\r\n  spent: number;\r\n  roi: number;\r\n  timeline: {\r\n    start: string;\r\n    end: string;\r\n    milestones: Array<{\r\n      name: string;\r\n      date: string;\r\n      completed: boolean;\r\n    }>;\r\n  };\r\n  riskLevel: 'low' | 'medium' | 'high';\r\n  owner: string;\r\n  category?: 'technology' | 'market-expansion' | 'operational' | 'financial' | 'strategic';\r\n  businessValue?: string;\r\n  kpis?: Array<{\r\n    name: string;\r\n    target: number;\r\n    current: number;\r\n    unit: string;\r\n  }>;\r\n}\r\n\r\nexport interface CarbonMetrics {\r\n  creditsGenerated: number;\r\n  creditsTarget: number;\r\n  marketValue: number;\r\n  projectedRevenue: number;\r\n  co2Reduced: number;\r\n  certifications: string[];\r\n  marketTrends: {\r\n    currentPrice: number;\r\n    projectedPrice: number;\r\n    volatility: number;\r\n  };\r\n  // Enhanced fields for CarbonAnalytics component\r\n  esgRating: string;\r\n  environmentalScore: number;\r\n  socialScore: number;\r\n  governanceScore: number;\r\n  totalCreditsIssued: number;\r\n  averagePricePerCredit: number;\r\n  complianceFrameworks: number;\r\n  creditsRetired: number;\r\n  creditsPending: number;\r\n}\r\n\r\nexport interface CompetitiveData {\r\n  marketShare: number;\r\n  ranking: number;\r\n  competitorCount: number;\r\n  strengthScore: number;\r\n  weaknessAreas: string[];\r\n  opportunities: string[];\r\n  threats: string[];\r\n  benchmarks: {\r\n    efficiency: number;\r\n    revenue: number;\r\n    growth: number;\r\n  };\r\n  // Enhanced fields for CompetitiveIntelligence component\r\n  highThreatCompetitors: number;\r\n  keyOpportunities: number;\r\n  overallCompetitiveStrength: number;\r\n  marketGrowthRate: number;\r\n  competitiveTrends: {\r\n    innovation: number;\r\n    customerSatisfaction: number;\r\n    marketPresence: number;\r\n  };\r\n}\r\n\r\nexport interface VoiceQuery {\r\n  id: string;\r\n  query: string;\r\n  timestamp: Date;\r\n  response: string;\r\n  confidence: number;\r\n  category: string;\r\n  language: 'en' | 'hi';\r\n}\r\n\r\nexport interface PredictiveAnalytics {\r\n  insights: PredictiveInsight[];\r\n  forecasts: any[];\r\n  trends: any[];\r\n}\r\n\r\nexport interface CompetitiveIntelligence {\r\n  competitiveData: CompetitiveData;\r\n  benchmarks: any[];\r\n  threats: string[];\r\n  opportunities: string[];\r\n}\r\n\r\nexport interface StrategicPlanning {\r\n  initiatives: StrategicInitiative[];\r\n  roadmap: any[];\r\n  milestones: any[];\r\n}\r\n\r\nexport interface ExecutiveAlerts {\r\n  critical: PredictiveInsight[];\r\n  warnings: PredictiveInsight[];\r\n  opportunities: PredictiveInsight[];\r\n}\r\n\r\ninterface ExecutiveAnalyticsContextType {\r\n  // Data states\r\n  kpis: ExecutiveKPI[];\r\n  insights: PredictiveInsight[];\r\n  initiatives: StrategicInitiative[];\r\n  carbonMetrics: CarbonMetrics;\r\n  competitiveData: CompetitiveData;\r\n  voiceHistory: VoiceQuery[];\r\n\r\n  // Loading states\r\n  loading: boolean;\r\n  refreshing: boolean;\r\n\r\n  // Actions\r\n  refreshData: () => Promise<void>;\r\n  addVoiceQuery: (query: VoiceQuery) => void;\r\n  updateKPI: (id: string, updates: Partial<ExecutiveKPI>) => void;\r\n  updateInitiative: (id: string, updates: Partial<StrategicInitiative>) => void;\r\n\r\n  // Computed values\r\n  overallPerformanceScore: number;\r\n  criticalAlerts: PredictiveInsight[];\r\n  topOpportunities: PredictiveInsight[];\r\n}\r\n\r\nconst ExecutiveAnalyticsContext = createContext<ExecutiveAnalyticsContextType | undefined>(undefined);\r\n\r\nexport const useExecutiveAnalytics = () => {\r\n  const context = useContext(ExecutiveAnalyticsContext);\r\n  if (!context) {\r\n    throw new Error('useExecutiveAnalytics must be used within ExecutiveAnalyticsProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface ExecutiveAnalyticsProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const ExecutiveAnalyticsProvider: React.FC<ExecutiveAnalyticsProviderProps> = ({ children }) => {\r\n  const [kpis, setKpis] = useState<ExecutiveKPI[]>([\r\n    {\r\n      id: 'revenue',\r\n      name: 'Monthly Revenue',\r\n      value: 125000000,\r\n      unit: '₹',\r\n      change: 15.8,\r\n      trend: 'up',\r\n      target: 150000000,\r\n      confidence: 0.92,\r\n      category: 'financial',\r\n      priority: 'high'\r\n    },\r\n    {\r\n      id: 'production',\r\n      name: 'Biogas Production',\r\n      value: 12500,\r\n      unit: 'm³/day',\r\n      change: 12.5,\r\n      trend: 'up',\r\n      target: 15000,\r\n      confidence: 0.89,\r\n      category: 'operational',\r\n      priority: 'high'\r\n    },\r\n    {\r\n      id: 'carbon_credits',\r\n      name: 'Carbon Credits',\r\n      value: 450,\r\n      unit: 'tons CO2',\r\n      change: 22.1,\r\n      trend: 'up',\r\n      target: 500,\r\n      confidence: 0.85,\r\n      category: 'environmental',\r\n      priority: 'high'\r\n    },\r\n    {\r\n      id: 'market_share',\r\n      name: 'Market Share',\r\n      value: 18.5,\r\n      unit: '%',\r\n      change: 3.2,\r\n      trend: 'up',\r\n      target: 25,\r\n      confidence: 0.78,\r\n      category: 'strategic',\r\n      priority: 'medium'\r\n    },\r\n    {\r\n      id: 'efficiency',\r\n      name: 'Operational Efficiency',\r\n      value: 87.3,\r\n      unit: '%',\r\n      change: 5.1,\r\n      trend: 'up',\r\n      target: 90,\r\n      confidence: 0.91,\r\n      category: 'operational',\r\n      priority: 'medium'\r\n    },\r\n    {\r\n      id: 'customer_satisfaction',\r\n      name: 'Customer Satisfaction',\r\n      value: 4.6,\r\n      unit: '/5',\r\n      change: -2.1,\r\n      trend: 'down',\r\n      target: 4.8,\r\n      confidence: 0.83,\r\n      category: 'strategic',\r\n      priority: 'high'\r\n    }\r\n  ]);\r\n\r\n  const [insights, setInsights] = useState<PredictiveInsight[]>([\r\n    {\r\n      id: 'revenue_forecast',\r\n      title: 'Revenue Growth Acceleration',\r\n      description: 'Current trajectory suggests 18% quarterly growth, exceeding targets by ₹25Cr',\r\n      impact: 'positive',\r\n      confidence: 0.87,\r\n      category: 'financial',\r\n      actionRequired: false,\r\n      timeline: 'Next Quarter',\r\n      estimatedValue: 25000000\r\n    },\r\n    {\r\n      id: 'carbon_opportunity',\r\n      title: 'Carbon Credit Market Expansion',\r\n      description: 'International markets showing 35% price premium - opportunity for ₹8Cr additional revenue',\r\n      impact: 'positive',\r\n      confidence: 0.74,\r\n      category: 'environmental',\r\n      actionRequired: true,\r\n      timeline: '3-6 months',\r\n      estimatedValue: 80000000\r\n    },\r\n    {\r\n      id: 'efficiency_risk',\r\n      title: 'Production Efficiency Plateau',\r\n      description: 'Three plants showing declining efficiency - risk of ₹12Cr revenue impact',\r\n      impact: 'negative',\r\n      confidence: 0.82,\r\n      category: 'operational',\r\n      actionRequired: true,\r\n      timeline: 'Immediate',\r\n      estimatedValue: -120000000\r\n    }\r\n  ]);\r\n\r\n  const [initiatives, setInitiatives] = useState<StrategicInitiative[]>([\r\n    {\r\n      id: 'market_expansion',\r\n      name: 'Regional Market Expansion',\r\n      description: 'Expand operations to 5 new high-potential regions with focus on rural communities',\r\n      status: 'in-progress',\r\n      progress: 65,\r\n      budget: 500000000,\r\n      spent: 320000000,\r\n      roi: 240,\r\n      timeline: {\r\n        start: '2024-01-01',\r\n        end: '2024-12-31',\r\n        milestones: [\r\n          { name: 'Site Selection', date: '2024-03-15', completed: true },\r\n          { name: 'Regulatory Approval', date: '2024-06-30', completed: true },\r\n          { name: 'Construction Phase', date: '2024-10-15', completed: false },\r\n          { name: 'Operations Launch', date: '2024-12-31', completed: false }\r\n        ]\r\n      },\r\n      riskLevel: 'medium',\r\n      owner: 'Regional Development Team',\r\n      category: 'market-expansion',\r\n      businessValue: 'Increase market presence and revenue base',\r\n      kpis: [\r\n        { name: 'New Regions', target: 5, current: 3, unit: 'regions' },\r\n        { name: 'Revenue Increase', target: 25, current: 18, unit: '%' }\r\n      ]\r\n    },\r\n    {\r\n      id: 'ai_optimization',\r\n      name: 'AI-Driven Production Optimization',\r\n      description: 'Implement ML algorithms for biogas production efficiency and predictive maintenance',\r\n      status: 'planning',\r\n      progress: 25,\r\n      budget: 200000000,\r\n      spent: 50000000,\r\n      roi: 380,\r\n      timeline: {\r\n        start: '2024-06-01',\r\n        end: '2024-11-30',\r\n        milestones: [\r\n          { name: 'Algorithm Development', date: '2024-07-15', completed: false },\r\n          { name: 'Pilot Testing', date: '2024-09-30', completed: false },\r\n          { name: 'Full Deployment', date: '2024-11-30', completed: false }\r\n        ]\r\n      },\r\n      riskLevel: 'low',\r\n      owner: 'Technology Innovation Team',\r\n      category: 'technology',\r\n      businessValue: 'Improve operational efficiency and reduce costs',\r\n      kpis: [\r\n        { name: 'Efficiency Gain', target: 20, current: 5, unit: '%' },\r\n        { name: 'Cost Reduction', target: 15, current: 0, unit: '%' }\r\n      ]\r\n    },\r\n    {\r\n      id: 'carbon_trading',\r\n      name: 'Carbon Credit Trading Platform',\r\n      description: 'Develop integrated platform for carbon credit generation and trading',\r\n      status: 'in-progress',\r\n      progress: 45,\r\n      budget: 150000000,\r\n      spent: 68000000,\r\n      roi: 450,\r\n      timeline: {\r\n        start: '2024-03-01',\r\n        end: '2025-01-31',\r\n        milestones: [\r\n          { name: 'Platform Design', date: '2024-05-15', completed: true },\r\n          { name: 'Compliance Setup', date: '2024-08-30', completed: true },\r\n          { name: 'Market Integration', date: '2024-12-15', completed: false },\r\n          { name: 'Full Launch', date: '2025-01-31', completed: false }\r\n        ]\r\n      },\r\n      riskLevel: 'medium',\r\n      owner: 'Environmental Strategy Team',\r\n      category: 'strategic',\r\n      businessValue: 'Create new revenue stream from carbon credits',\r\n      kpis: [\r\n        { name: 'Credits Generated', target: 2000, current: 850, unit: 'tons' },\r\n        { name: 'Revenue from Credits', target: 80, current: 35, unit: '₹Cr' }\r\n      ]\r\n    },\r\n    {\r\n      id: 'rural_digitization',\r\n      name: 'Rural Digitization Initiative',\r\n      description: 'Digital transformation of rural operations and farmer engagement',\r\n      status: 'planning',\r\n      progress: 15,\r\n      budget: 120000000,\r\n      spent: 18000000,\r\n      roi: 280,\r\n      timeline: {\r\n        start: '2024-08-01',\r\n        end: '2025-06-30',\r\n        milestones: [\r\n          { name: 'Technology Assessment', date: '2024-09-15', completed: false },\r\n          { name: 'Pilot Implementation', date: '2024-12-31', completed: false },\r\n          { name: 'Scale-up Phase', date: '2025-04-30', completed: false },\r\n          { name: 'Full Deployment', date: '2025-06-30', completed: false }\r\n        ]\r\n      },\r\n      riskLevel: 'high',\r\n      owner: 'Digital Innovation Team',\r\n      category: 'operational',\r\n      businessValue: 'Improve farmer engagement and operational transparency',\r\n      kpis: [\r\n        { name: 'Farmers Onboarded', target: 10000, current: 1500, unit: 'farmers' },\r\n        { name: 'Process Efficiency', target: 30, current: 8, unit: '%' }\r\n      ]\r\n    }\r\n  ]);\r\n\r\n  const [carbonMetrics, setCarbonMetrics] = useState<CarbonMetrics>({\r\n    creditsGenerated: 450,\r\n    creditsTarget: 500,\r\n    marketValue: 67500000,\r\n    projectedRevenue: 85000000,\r\n    co2Reduced: 2250,\r\n    certifications: ['Gold Standard', 'VCS', 'CDM'],\r\n    marketTrends: {\r\n      currentPrice: 150000,\r\n      projectedPrice: 185000,\r\n      volatility: 0.12\r\n    },\r\n    // Enhanced fields for CarbonAnalytics\r\n    esgRating: 'A',\r\n    environmentalScore: 87,\r\n    socialScore: 82,\r\n    governanceScore: 88,\r\n    totalCreditsIssued: 420,\r\n    averagePricePerCredit: 165000,\r\n    complianceFrameworks: 4,\r\n    creditsRetired: 380,\r\n    creditsPending: 70\r\n  });\r\n\r\n  const [competitiveData, setCompetitiveData] = useState<CompetitiveData>({\r\n    marketShare: 18.5,\r\n    ranking: 3,\r\n    competitorCount: 15,\r\n    strengthScore: 85,\r\n    weaknessAreas: ['Brand Recognition', 'Scale Limitations'],\r\n    opportunities: ['Government Policy Support', 'Carbon Market Growth', 'Technology Integration'],\r\n    threats: ['New Market Entrants', 'Regulatory Changes', 'Technology Disruption'],\r\n    benchmarks: {\r\n      efficiency: 87,\r\n      revenue: 92,\r\n      growth: 85\r\n    },\r\n    // Enhanced fields for CompetitiveIntelligence\r\n    highThreatCompetitors: 2,\r\n    keyOpportunities: 3,\r\n    overallCompetitiveStrength: 85,\r\n    marketGrowthRate: 15.2,\r\n    competitiveTrends: {\r\n      innovation: 82,\r\n      customerSatisfaction: 88,\r\n      marketPresence: 78\r\n    }\r\n  });\r\n\r\n  const [voiceHistory, setVoiceHistory] = useState<VoiceQuery[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [refreshing, setRefreshing] = useState(false);\r\n\r\n  // Real-time data simulation\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setKpis(prevKpis =>\r\n        prevKpis.map(kpi => ({\r\n          ...kpi,\r\n          value: kpi.value + (Math.random() - 0.5) * (kpi.value * 0.01), // ±1% variance\r\n          change: kpi.change + (Math.random() - 0.5) * 2, // ±2% change variance\r\n        }))\r\n      );\r\n    }, 30000); // Update every 30 seconds\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const refreshData = async (): Promise<void> => {\r\n    setRefreshing(true);\r\n    try {\r\n      // Simulate API call\r\n      await new Promise(resolve => setTimeout(resolve, 1500));\r\n\r\n      // Refresh insights with new data\r\n      const newInsights: PredictiveInsight[] = [\r\n        {\r\n          id: 'market_trend_' + Date.now(),\r\n          title: 'Emerging Market Opportunity',\r\n          description: `New government incentives in ${['Maharashtra', 'Gujarat', 'Punjab'][Math.floor(Math.random() * 3)]} creating 25% growth potential`,\r\n          impact: 'positive',\r\n          confidence: 0.76,\r\n          category: 'strategic',\r\n          actionRequired: true,\r\n          timeline: '2-4 months',\r\n          estimatedValue: 35000000\r\n        }\r\n      ];\r\n\r\n      setInsights(prev => [...newInsights, ...prev.slice(0, 2)]);\r\n    } finally {\r\n      setRefreshing(false);\r\n    }\r\n  };\r\n\r\n  const addVoiceQuery = (query: VoiceQuery) => {\r\n    setVoiceHistory(prev => [query, ...prev.slice(0, 19)]); // Keep last 20 queries\r\n  };\r\n\r\n  const updateKPI = (id: string, updates: Partial<ExecutiveKPI>) => {\r\n    setKpis(prev => prev.map(kpi => kpi.id === id ? { ...kpi, ...updates } : kpi));\r\n  };\r\n\r\n  const updateInitiative = (id: string, updates: Partial<StrategicInitiative>) => {\r\n    setInitiatives(prev => prev.map(init => init.id === id ? { ...init, ...updates } : init));\r\n  };\r\n\r\n  // Computed values\r\n  const overallPerformanceScore = Math.round(\r\n    kpis.reduce((sum, kpi) => sum + (kpi.value / kpi.target) * 100, 0) / kpis.length\r\n  );\r\n\r\n  const criticalAlerts = insights.filter(insight =>\r\n    insight.impact === 'negative' && insight.actionRequired && insight.confidence > 0.7\r\n  );\r\n\r\n  const topOpportunities = insights.filter(insight =>\r\n    insight.impact === 'positive' && insight.confidence > 0.7\r\n  ).sort((a, b) => (b.estimatedValue || 0) - (a.estimatedValue || 0));\r\n\r\n  const value: ExecutiveAnalyticsContextType = {\r\n    kpis,\r\n    insights,\r\n    initiatives,\r\n    carbonMetrics,\r\n    competitiveData,\r\n    voiceHistory,\r\n    loading,\r\n    refreshing,\r\n    refreshData,\r\n    addVoiceQuery,\r\n    updateKPI,\r\n    updateInitiative,\r\n    overallPerformanceScore,\r\n    criticalAlerts,\r\n    topOpportunities\r\n  };\r\n\r\n  return (\r\n    <ExecutiveAnalyticsContext.Provider value={value}>\r\n      {children}\r\n    </ExecutiveAnalyticsContext.Provider>\r\n  );\r\n};","import * as React from \"react\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst TabsContext = React.createContext<{\r\n  value: string;\r\n  onValueChange: (value: string) => void;\r\n}>({\r\n  value: \"\",\r\n  onValueChange: () => {},\r\n})\r\n\r\nconst Tabs = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement> & {\r\n    value?: string;\r\n    onValueChange?: (value: string) => void;\r\n    defaultValue?: string;\r\n  }\r\n>(({ className, value, onValueChange, defaultValue, children, ...props }, ref) => {\r\n  const [internalValue, setInternalValue] = React.useState(defaultValue || \"\")\r\n  const currentValue = value !== undefined ? value : internalValue\r\n  const handleValueChange = onValueChange || setInternalValue\r\n\r\n  return (\r\n    <TabsContext.Provider value={{ value: currentValue, onValueChange: handleValueChange }}>\r\n      <div ref={ref} className={cn(\"w-full\", className)} {...props}>\r\n        {children}\r\n      </div>\r\n    </TabsContext.Provider>\r\n  )\r\n})\r\nTabs.displayName = \"Tabs\"\r\n\r\nconst TabsList = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTabsList.displayName = \"TabsList\"\r\n\r\nconst TabsTrigger = React.forwardRef<\r\n  HTMLButtonElement,\r\n  React.ButtonHTMLAttributes<HTMLButtonElement> & { value: string }\r\n>(({ className, value, children, ...props }, ref) => {\r\n  const { value: currentValue, onValueChange } = React.useContext(TabsContext)\r\n  \r\n  return (\r\n    <button\r\n      ref={ref}\r\n      className={cn(\r\n        \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\r\n        currentValue === value && \"bg-background text-foreground shadow-sm\",\r\n        className\r\n      )}\r\n      onClick={() => onValueChange(value)}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </button>\r\n  )\r\n})\r\nTabsTrigger.displayName = \"TabsTrigger\"\r\n\r\nconst TabsContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement> & { value: string }\r\n>(({ className, value, children, ...props }, ref) => {\r\n  const { value: currentValue } = React.useContext(TabsContext)\r\n  \r\n  if (currentValue !== value) return null\r\n  \r\n  return (\r\n    <div\r\n      ref={ref}\r\n      className={cn(\r\n        \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </div>\r\n  )\r\n})\r\nTabsContent.displayName = \"TabsContent\"\r\n\r\nexport { Tabs, TabsList, TabsTrigger, TabsContent }","import React, { useState, useEffect } from 'react'\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'\r\nimport { Button } from '@/components/ui/button'\r\nimport { Badge } from '@/components/ui/badge'\r\nimport { Alert, AlertDescription } from '@/components/ui/alert'\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'\r\nimport {\r\n  BarChart3,\r\n  TrendingUp,\r\n  AlertTriangle,\r\n  Brain,\r\n  Factory,\r\n  Filter,\r\n  DollarSign,\r\n  Users,\r\n  Zap,\r\n  Globe,\r\n  Clock,\r\n  Target,\r\n  Award,\r\n  Calendar,\r\n  FileText,\r\n  Video,\r\n  MessageSquare,\r\n  Share2,\r\n  Download,\r\n  RefreshCw\r\n} from 'lucide-react'\r\nimport { useAuth } from '../../contexts/AuthContext'\r\nimport { usePlatform } from '../../contexts/PlatformContext'\r\nimport { useExecutiveAnalytics } from '../../contexts/ExecutiveAnalyticsContext'\r\n\r\ninterface CrossModuleMetric {\r\n  id: string\r\n  name: string\r\n  value: number\r\n  unit: string\r\n  change: number\r\n  trend: 'up' | 'down' | 'stable'\r\n  modules: string[]\r\n  priority: 'high' | 'medium' | 'low'\r\n  lastUpdated: Date\r\n}\r\n\r\ninterface ExecutiveInsight {\r\n  id: string\r\n  title: string\r\n  description: string\r\n  impact: 'positive' | 'negative' | 'neutral'\r\n  confidence: number\r\n  actionRequired: boolean\r\n  modules: string[]\r\n  value?: string\r\n  timeframe: string\r\n}\r\n\r\ninterface CollaborationSession {\r\n  id: string\r\n  title: string\r\n  participants: string[]\r\n  status: 'active' | 'scheduled' | 'completed'\r\n  startTime: Date\r\n  duration: number\r\n  modules: string[]\r\n}\r\n\r\nconst ExecutiveCommandCenter: React.FC = () => {\r\n  const { user, isExecutive } = useAuth()\r\n  const { navigationState, sessionMetrics, navigateToModule } = usePlatform()\r\n  const { kpis } = useExecutiveAnalytics()\r\n\r\n  const [crossModuleMetrics, setCrossModuleMetrics] = useState<CrossModuleMetric[]>([\r\n    {\r\n      id: 'unified-revenue',\r\n      name: 'Total Platform Revenue',\r\n      value: 18750000, // 18.75 Cr combining all modules\r\n      unit: '₹',\r\n      change: 22.5,\r\n      trend: 'up',\r\n      modules: ['urjasanyojak', 'shuddhi-doot', 'urja-vyapar'],\r\n      priority: 'high',\r\n      lastUpdated: new Date()\r\n    },\r\n    {\r\n      id: 'operational-efficiency',\r\n      name: 'Cross-Platform Efficiency',\r\n      value: 91.2,\r\n      unit: '%',\r\n      change: 8.3,\r\n      trend: 'up',\r\n      modules: ['urjasanyojak', 'shuddhi-doot'],\r\n      priority: 'high',\r\n      lastUpdated: new Date()\r\n    },\r\n    {\r\n      id: 'executive-decisions',\r\n      name: 'Strategic Decisions This Week',\r\n      value: 12,\r\n      unit: 'decisions',\r\n      change: -15.2,\r\n      trend: 'down',\r\n      modules: ['urja-neta'],\r\n      priority: 'medium',\r\n      lastUpdated: new Date()\r\n    }\r\n  ])\r\n\r\n  const [executiveInsights, setExecutiveInsights] = useState<ExecutiveInsight[]>([\r\n    {\r\n      id: 'cross-platform-synergy',\r\n      title: 'Cross-Platform Operational Synergy',\r\n      description: 'UrjaSanyojak and ShuddhiDoot integration showing 15% efficiency gain in biogas quality control',\r\n      impact: 'positive',\r\n      confidence: 94,\r\n      actionRequired: false,\r\n      modules: ['urjasanyojak', 'shuddhi-doot'],\r\n      value: '+₹2.3Cr',\r\n      timeframe: 'Q1 2025'\r\n    },\r\n    {\r\n      id: 'sales-production-gap',\r\n      title: 'Sales-Production Alignment Gap',\r\n      description: 'UrjaVyapar sales commitments exceeding UrjaSanyojak production capacity by 12%',\r\n      impact: 'negative',\r\n      confidence: 87,\r\n      actionRequired: true,\r\n      modules: ['urjasanyojak', 'urja-vyapar'],\r\n      value: 'Risk: ₹1.8Cr',\r\n      timeframe: 'Immediate'\r\n    },\r\n    {\r\n      id: 'quality-premium-opportunity',\r\n      title: 'Premium Quality Market Opportunity',\r\n      description: 'ShuddhiDoot purity levels enabling 25% premium pricing in international markets',\r\n      impact: 'positive',\r\n      confidence: 82,\r\n      actionRequired: true,\r\n      modules: ['shuddhi-doot', 'urja-vyapar'],\r\n      value: '+₹4.2Cr',\r\n      timeframe: '6 months'\r\n    }\r\n  ])\r\n\r\n  const [collaborationSessions, setCollaborationSessions] = useState<CollaborationSession[]>([\r\n    {\r\n      id: 'weekly-exec-review',\r\n      title: 'Weekly Executive Review',\r\n      participants: ['Dr. Rajesh Kumar', 'Priya Sharma', 'Amit Patel'],\r\n      status: 'scheduled',\r\n      startTime: new Date(Date.now() + 2 * 60 * 60 * 1000), // 2 hours from now\r\n      duration: 60,\r\n      modules: ['urjasanyojak', 'shuddhi-doot', 'urja-vyapar', 'urja-neta']\r\n    },\r\n    {\r\n      id: 'production-sales-sync',\r\n      title: 'Production-Sales Alignment',\r\n      participants: ['Operations Team', 'Sales Team'],\r\n      status: 'active',\r\n      startTime: new Date(Date.now() - 30 * 60 * 1000), // Started 30 min ago\r\n      duration: 90,\r\n      modules: ['urjasanyojak', 'urja-vyapar']\r\n    }\r\n  ])\r\n\r\n  const [refreshing, setRefreshing] = useState(false)\r\n\r\n  const formatCurrency = (value: number): string => {\r\n    if (value >= 10000000) {\r\n      return `₹${(value / 10000000).toFixed(1)}Cr`\r\n    } else if (value >= 100000) {\r\n      return `₹${(value / 100000).toFixed(1)}L`\r\n    } else {\r\n      return `₹${value.toLocaleString()}`\r\n    }\r\n  }\r\n\r\n  const handleRefreshData = async () => {\r\n    setRefreshing(true)\r\n    // Simulate data refresh\r\n    await new Promise(resolve => setTimeout(resolve, 2000))\r\n\r\n    // Update timestamps\r\n    setCrossModuleMetrics(prev => prev.map(metric => ({\r\n      ...metric,\r\n      lastUpdated: new Date()\r\n    })))\r\n\r\n    setRefreshing(false)\r\n  }\r\n\r\n  const handleModuleDeepDive = (moduleId: string) => {\r\n    navigateToModule(moduleId)\r\n  }\r\n\r\n  if (!isExecutive()) {\r\n    return (\r\n      <Alert className=\"m-6\">\r\n        <AlertTriangle className=\"h-4 w-4\" />\r\n        <AlertDescription>\r\n          Executive Command Center requires executive-level access.\r\n        </AlertDescription>\r\n      </Alert>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold text-gray-900\">Executive Command Center</h1>\r\n          <p className=\"text-gray-600\">Unified platform oversight and strategic decision support</p>\r\n        </div>\r\n        <div className=\"flex items-center space-x-3\">\r\n          <Badge variant=\"default\" className=\"bg-gold-100 text-gold-800 border-gold-300\">\r\n            Executive Access\r\n          </Badge>\r\n          <Button\r\n            onClick={handleRefreshData}\r\n            disabled={refreshing}\r\n            variant=\"outline\"\r\n            className=\"flex items-center space-x-2\"\r\n          >\r\n            <RefreshCw className={`h-4 w-4 ${refreshing ? 'animate-spin' : ''}`} />\r\n            <span>Refresh</span>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      <Tabs defaultValue=\"overview\" className=\"space-y-6\">\r\n        <TabsList className=\"grid w-full grid-cols-5\">\r\n          <TabsTrigger value=\"overview\">Platform Overview</TabsTrigger>\r\n          <TabsTrigger value=\"insights\">Strategic Insights</TabsTrigger>\r\n          <TabsTrigger value=\"collaboration\">Collaboration</TabsTrigger>\r\n          <TabsTrigger value=\"performance\">Performance</TabsTrigger>\r\n          <TabsTrigger value=\"reports\">Executive Reports</TabsTrigger>\r\n        </TabsList>\r\n\r\n        {/* Platform Overview Tab */}\r\n        <TabsContent value=\"overview\" className=\"space-y-6\">\r\n          {/* Cross-Module KPIs */}\r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n            {crossModuleMetrics.map((metric) => (\r\n              <Card key={metric.id} className=\"relative\">\r\n                <CardHeader className=\"pb-3\">\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <CardTitle className=\"text-sm font-medium\">{metric.name}</CardTitle>\r\n                    <Badge\r\n                      variant={metric.priority === 'high' ? 'default' : 'secondary'}\r\n                      className=\"text-xs\"\r\n                    >\r\n                      {metric.priority}\r\n                    </Badge>\r\n                  </div>\r\n                </CardHeader>\r\n                <CardContent>\r\n                  <div className=\"space-y-3\">\r\n                    <div className=\"flex items-end space-x-2\">\r\n                      <span className=\"text-2xl font-bold\">\r\n                        {metric.unit === '₹' ? formatCurrency(metric.value) : `${metric.value}${metric.unit}`}\r\n                      </span>\r\n                      <div className={`flex items-center text-sm ${\r\n                        metric.trend === 'up' ? 'text-green-600' : 'text-red-600'\r\n                      }`}>\r\n                        <TrendingUp className={`h-4 w-4 mr-1 ${metric.trend === 'down' ? 'rotate-180' : ''}`} />\r\n                        {Math.abs(metric.change)}%\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"space-y-2\">\r\n                      <div className=\"text-xs text-gray-500\">Source Modules:</div>\r\n                      <div className=\"flex flex-wrap gap-1\">\r\n                        {metric.modules.map((moduleId) => (\r\n                          <Button\r\n                            key={moduleId}\r\n                            variant=\"ghost\"\r\n                            size=\"sm\"\r\n                            onClick={() => handleModuleDeepDive(moduleId)}\r\n                            className=\"h-6 px-2 text-xs bg-blue-50 hover:bg-blue-100 text-blue-700\"\r\n                          >\r\n                            {moduleId.replace('-', '')}\r\n                          </Button>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"text-xs text-gray-400\">\r\n                      Updated: {metric.lastUpdated.toLocaleTimeString()}\r\n                    </div>\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n            ))}\r\n          </div>\r\n\r\n          {/* Module Status Grid */}\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center space-x-2\">\r\n                <Globe className=\"h-5 w-5\" />\r\n                <span>Platform Module Status</span>\r\n              </CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\r\n                <div className=\"flex items-center justify-between p-4 bg-green-50 rounded-lg border border-green-200\">\r\n                  <div className=\"flex items-center space-x-3\">\r\n                    <Factory className=\"h-8 w-8 text-green-600\" />\r\n                    <div>\r\n                      <div className=\"font-medium text-green-900\">UrjaSanyojak</div>\r\n                      <div className=\"text-sm text-green-700\">Active</div>\r\n                    </div>\r\n                  </div>\r\n                  <Badge variant=\"default\" className=\"bg-green-100 text-green-800 border-green-300\">\r\n                    99.2%\r\n                  </Badge>\r\n                </div>\r\n\r\n                <div className=\"flex items-center justify-between p-4 bg-blue-50 rounded-lg border border-blue-200\">\r\n                  <div className=\"flex items-center space-x-3\">\r\n                    <Filter className=\"h-8 w-8 text-blue-600\" />\r\n                    <div>\r\n                      <div className=\"font-medium text-blue-900\">ShuddhiDoot</div>\r\n                      <div className=\"text-sm text-blue-700\">Active</div>\r\n                    </div>\r\n                  </div>\r\n                  <Badge variant=\"default\" className=\"bg-blue-100 text-blue-800 border-blue-300\">\r\n                    98.7%\r\n                  </Badge>\r\n                </div>\r\n\r\n                <div className=\"flex items-center justify-between p-4 bg-purple-50 rounded-lg border border-purple-200\">\r\n                  <div className=\"flex items-center space-x-3\">\r\n                    <TrendingUp className=\"h-8 w-8 text-purple-600\" />\r\n                    <div>\r\n                      <div className=\"font-medium text-purple-900\">UrjaVyapar</div>\r\n                      <div className=\"text-sm text-purple-700\">Active</div>\r\n                    </div>\r\n                  </div>\r\n                  <Badge variant=\"default\" className=\"bg-purple-100 text-purple-800 border-purple-300\">\r\n                    97.9%\r\n                  </Badge>\r\n                </div>\r\n\r\n                <div className=\"flex items-center justify-between p-4 bg-gold-50 rounded-lg border border-gold-200\">\r\n                  <div className=\"flex items-center space-x-3\">\r\n                    <Brain className=\"h-8 w-8 text-gold-600\" />\r\n                    <div>\r\n                      <div className=\"font-medium text-gold-900\">UrjaNeta</div>\r\n                      <div className=\"text-sm text-gold-700\">Executive</div>\r\n                    </div>\r\n                  </div>\r\n                  <Badge variant=\"default\" className=\"bg-gold-100 text-gold-800 border-gold-300\">\r\n                    100%\r\n                  </Badge>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        {/* Strategic Insights Tab */}\r\n        <TabsContent value=\"insights\" className=\"space-y-6\">\r\n          <div className=\"space-y-4\">\r\n            {executiveInsights.map((insight) => (\r\n              <Card key={insight.id} className={`border-l-4 ${\r\n                insight.impact === 'positive' ? 'border-l-green-500 bg-green-50' :\r\n                insight.impact === 'negative' ? 'border-l-red-500 bg-red-50' :\r\n                'border-l-blue-500 bg-blue-50'\r\n              }`}>\r\n                <CardHeader className=\"pb-3\">\r\n                  <div className=\"flex items-start justify-between\">\r\n                    <div className=\"space-y-1\">\r\n                      <CardTitle className=\"text-lg\">{insight.title}</CardTitle>\r\n                      <div className=\"flex items-center space-x-4\">\r\n                        <Badge variant=\"outline\" className=\"text-xs\">\r\n                          Confidence: {insight.confidence}%\r\n                        </Badge>\r\n                        <Badge variant=\"secondary\" className=\"text-xs\">\r\n                          {insight.timeframe}\r\n                        </Badge>\r\n                        {insight.value && (\r\n                          <Badge variant={insight.impact === 'positive' ? 'default' : 'destructive'} className=\"text-xs\">\r\n                            {insight.value}\r\n                          </Badge>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                    {insight.actionRequired && (\r\n                      <Button variant=\"outline\" size=\"sm\">\r\n                        <Target className=\"h-4 w-4 mr-1\" />\r\n                        Action Required\r\n                      </Button>\r\n                    )}\r\n                  </div>\r\n                </CardHeader>\r\n                <CardContent>\r\n                  <p className=\"text-gray-700 mb-4\">{insight.description}</p>\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <div className=\"flex flex-wrap gap-1\">\r\n                      {insight.modules.map((moduleId) => (\r\n                        <Button\r\n                          key={moduleId}\r\n                          variant=\"ghost\"\r\n                          size=\"sm\"\r\n                          onClick={() => handleModuleDeepDive(moduleId)}\r\n                          className=\"h-6 px-2 text-xs\"\r\n                        >\r\n                          {moduleId}\r\n                        </Button>\r\n                      ))}\r\n                    </div>\r\n                    <Button variant=\"outline\" size=\"sm\">\r\n                      <FileText className=\"h-4 w-4 mr-1\" />\r\n                      Generate Report\r\n                    </Button>\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n            ))}\r\n          </div>\r\n        </TabsContent>\r\n\r\n        {/* Collaboration Tab */}\r\n        <TabsContent value=\"collaboration\" className=\"space-y-6\">\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n            {/* Active Sessions */}\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center space-x-2\">\r\n                  <Video className=\"h-5 w-5\" />\r\n                  <span>Active Sessions</span>\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                {collaborationSessions.filter(s => s.status === 'active').map((session) => (\r\n                  <div key={session.id} className=\"p-4 bg-green-50 rounded-lg border border-green-200\">\r\n                    <div className=\"flex items-center justify-between mb-2\">\r\n                      <h4 className=\"font-medium text-green-900\">{session.title}</h4>\r\n                      <Badge variant=\"default\" className=\"bg-green-100 text-green-800\">\r\n                        Live\r\n                      </Badge>\r\n                    </div>\r\n                    <p className=\"text-sm text-green-700 mb-2\">\r\n                      Participants: {session.participants.join(', ')}\r\n                    </p>\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <span className=\"text-xs text-green-600\">\r\n                        Started: {Math.floor((Date.now() - session.startTime.getTime()) / 60000)}m ago\r\n                      </span>\r\n                      <Button variant=\"outline\" size=\"sm\">\r\n                        <Video className=\"h-4 w-4 mr-1\" />\r\n                        Join\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n\r\n                {collaborationSessions.filter(s => s.status === 'scheduled').map((session) => (\r\n                  <div key={session.id} className=\"p-4 bg-blue-50 rounded-lg border border-blue-200\">\r\n                    <div className=\"flex items-center justify-between mb-2\">\r\n                      <h4 className=\"font-medium text-blue-900\">{session.title}</h4>\r\n                      <Badge variant=\"secondary\">\r\n                        Scheduled\r\n                      </Badge>\r\n                    </div>\r\n                    <p className=\"text-sm text-blue-700 mb-2\">\r\n                      Participants: {session.participants.join(', ')}\r\n                    </p>\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <span className=\"text-xs text-blue-600\">\r\n                        Starts: {session.startTime.toLocaleTimeString()}\r\n                      </span>\r\n                      <Button variant=\"outline\" size=\"sm\">\r\n                        <Calendar className=\"h-4 w-4 mr-1\" />\r\n                        Add to Calendar\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </CardContent>\r\n            </Card>\r\n\r\n            {/* Quick Actions */}\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center space-x-2\">\r\n                  <MessageSquare className=\"h-5 w-5\" />\r\n                  <span>Executive Actions</span>\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-3\">\r\n                <Button variant=\"outline\" className=\"w-full justify-start\">\r\n                  <Video className=\"h-4 w-4 mr-2\" />\r\n                  Start Executive Meeting\r\n                </Button>\r\n                <Button variant=\"outline\" className=\"w-full justify-start\">\r\n                  <Share2 className=\"h-4 w-4 mr-2\" />\r\n                  Share Cross-Module Insights\r\n                </Button>\r\n                <Button variant=\"outline\" className=\"w-full justify-start\">\r\n                  <FileText className=\"h-4 w-4 mr-2\" />\r\n                  Create Strategic Document\r\n                </Button>\r\n                <Button variant=\"outline\" className=\"w-full justify-start\">\r\n                  <Download className=\"h-4 w-4 mr-2\" />\r\n                  Export Unified Report\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </TabsContent>\r\n\r\n        {/* Performance Tab */}\r\n        <TabsContent value=\"performance\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center space-x-2\">\r\n                <BarChart3 className=\"h-5 w-5\" />\r\n                <span>Platform Performance Metrics</span>\r\n              </CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\r\n                <div className=\"text-center p-4 bg-blue-50 rounded-lg\">\r\n                  <div className=\"text-2xl font-bold text-blue-600\">1.2s</div>\r\n                  <div className=\"text-sm text-blue-700\">Avg Load Time</div>\r\n                </div>\r\n                <div className=\"text-center p-4 bg-green-50 rounded-lg\">\r\n                  <div className=\"text-2xl font-bold text-green-600\">99.8%</div>\r\n                  <div className=\"text-sm text-green-700\">Platform Uptime</div>\r\n                </div>\r\n                <div className=\"text-center p-4 bg-purple-50 rounded-lg\">\r\n                  <div className=\"text-2xl font-bold text-purple-600\">2.1s</div>\r\n                  <div className=\"text-sm text-purple-700\">SSO Response</div>\r\n                </div>\r\n                <div className=\"text-center p-4 bg-orange-50 rounded-lg\">\r\n                  <div className=\"text-2xl font-bold text-orange-600\">94.2%</div>\r\n                  <div className=\"text-sm text-orange-700\">User Satisfaction</div>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        {/* Reports Tab */}\r\n        <TabsContent value=\"reports\" className=\"space-y-6\">\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n            <Button variant=\"outline\" className=\"h-24 flex flex-col items-center justify-center space-y-2\">\r\n              <FileText className=\"h-6 w-6\" />\r\n              <span>Weekly Executive Summary</span>\r\n            </Button>\r\n            <Button variant=\"outline\" className=\"h-24 flex flex-col items-center justify-center space-y-2\">\r\n              <BarChart3 className=\"h-6 w-6\" />\r\n              <span>Cross-Module Analytics</span>\r\n            </Button>\r\n            <Button variant=\"outline\" className=\"h-24 flex flex-col items-center justify-center space-y-2\">\r\n              <Target className=\"h-6 w-6\" />\r\n              <span>Strategic Planning Report</span>\r\n            </Button>\r\n            <Button variant=\"outline\" className=\"h-24 flex flex-col items-center justify-center space-y-2\">\r\n              <Award className=\"h-6 w-6\" />\r\n              <span>Performance Review</span>\r\n            </Button>\r\n            <Button variant=\"outline\" className=\"h-24 flex flex-col items-center justify-center space-y-2\">\r\n              <DollarSign className=\"h-6 w-6\" />\r\n              <span>Financial Overview</span>\r\n            </Button>\r\n            <Button variant=\"outline\" className=\"h-24 flex flex-col items-center justify-center space-y-2\">\r\n              <Users className=\"h-6 w-6\" />\r\n              <span>Team Productivity</span>\r\n            </Button>\r\n          </div>\r\n        </TabsContent>\r\n      </Tabs>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport { ExecutiveCommandCenter }","import React, { useEffect } from 'react';\r\nimport { usePlatform } from '../contexts/PlatformContext';\r\nimport { ExecutiveAnalyticsProvider } from '../contexts/ExecutiveAnalyticsContext';\r\nimport { ExecutiveCommandCenter } from '../components/executive/ExecutiveCommandCenter';\r\n\r\nconst ExecutiveDashboard: React.FC = () => {\r\n  const { trackModuleUsage, updateBreadcrumbs } = usePlatform();\r\n\r\n  // Track module usage and update breadcrumbs for platform integration\r\n  useEffect(() => {\r\n    trackModuleUsage('urja-neta');\r\n    updateBreadcrumbs([\r\n      { label: 'Executive', url: '/executive', module: 'urja-neta' },\r\n      { label: 'Command Center', url: '/executive', module: 'urja-neta' }\r\n    ]);\r\n  }, []);\r\n\r\n  return (\r\n    <ExecutiveAnalyticsProvider>\r\n      <div className=\"space-y-6\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <div>\r\n            <h1 className=\"text-3xl font-bold text-gray-900\">Executive Command Center</h1>\r\n            <p className=\"text-gray-600\">\r\n              Unified platform analytics and cross-module insights for senior leadership\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <ExecutiveCommandCenter />\r\n      </div>\r\n    </ExecutiveAnalyticsProvider>\r\n  );\r\n};\r\n\r\nexport default ExecutiveDashboard;","/**\n * GauShala API Service - Fixed version with proper microservices integration\n * Handles all API calls for cattle management, transactions, and dashboard data\n */\n\n// Gaushala service runs on port 8086 with /gaushala-service context path\nconst API_BASE_URL = (import.meta as any).env?.VITE_API_URL || 'http://localhost:8086/gaushala-service';\nconst GAUSHALA_SERVICE_URL = 'http://localhost:8086/gaushala-service';\n\nexport interface ApiResponse<T> {\n  success: boolean;\n  data?: T;\n  message?: string;\n  error?: string;\n}\n\n// Cattle Management APIs - Updated to match backend CattleDTO\nexport interface Cattle {\n  id?: number;\n  uniqueAnimalId: string;\n  name: string;\n  breedId: number;           // Changed from breed: string\n  speciesId: number;         // Changed from species: string\n  genderId: number;          // Changed from gender: string\n  colorId: number;           // Changed from color: string\n  dob: string;               // Changed from age: number (ISO format LocalDateTime)\n  weight?: number;\n  height?: number;\n  rfidTagNo?: string;        // Changed from rfidTag\n  gaushalaId: number;        // Changed from gaushala: string\n  shedNumber?: string;\n  healthStatus?: string;\n  vetName?: string;\n  vetContact?: string;\n  photoUrl?: string;\n  isActive?: boolean;\n  totalDungCollected?: number;\n  lastDungCollection?: number;\n  dateOfEntry?: string;      // ISO format LocalDateTime - REQUIRED field\n  createdAt?: string;\n  updatedAt?: string;\n}\n\n// Legacy Cattle interface for IoT service compatibility\nexport interface CattleLegacy {\n  id: string;\n  rfidTag: string;\n  name: string;\n  breed: string;\n  age: number;\n  weight: number;\n  health: 'healthy' | 'sick' | 'recovering' | 'vaccination_due';\n  owner: string;\n  ownerId: string;\n  location: {\n    latitude: number;\n    longitude: number;\n    timestamp: number;\n    address?: string;\n  };\n  totalDungCollected: number;\n  lastDungCollection?: number;\n  isActive: boolean;\n  photoUrl?: string;\n  medicalHistory: MedicalRecord[];\n  createdAt: number;\n  updatedAt: number;\n}\n\nexport interface MedicalRecord {\n  id: string;\n  date: number;\n  type: 'checkup' | 'vaccination' | 'treatment' | 'surgery';\n  description: string;\n  veterinarian: string;\n  medication?: string;\n  nextCheckup?: number;\n}\n\nexport interface Transaction {\n  id: string;\n  cattleId: string;\n  cattleName: string;\n  digestorId: string;\n  dungWeight: number;\n  dungQuality: number;\n  worker: string;\n  timestamp: number;\n  biogasGenerated: number;\n  amount: number;\n  status: 'pending' | 'completed' | 'cancelled';\n  paymentMethod: 'cash' | 'digital' | 'credit';\n  notes?: string;\n}\n\nexport interface DashboardStats {\n  totalCattle: number;\n  activeCattle: number;\n  sickCattle: number;\n  totalDungCollected: number;\n  todayDungCollection: number;\n  totalBiogasGenerated: number;\n  todayBiogasGenerated: number;\n  totalRevenue: number;\n  pendingTransactions: number;\n  averageHealthScore: number;\n}\n\nexport interface RecentCollection {\n  id: string;\n  cattleName: string;\n  weight: number;\n  quality: number;\n  worker: string;\n  timestamp: number;\n  digestorId: string;\n  status: 'completed' | 'processing' | 'failed';\n}\n\nexport interface TopPerformer {\n  name: string;\n  collections: number;\n  totalWeight: number;\n  avgQuality: number;\n}\n\n// Medicine entity interface - matches backend Medicine.java exactly\nexport interface Medicine {\n  id?: number;\n  name: string;\n  description?: string;\n  dosage: string;\n  unit: string;\n  quantity: number;\n  expiryDate: string; // LocalDateTime as ISO string\n  manufacturer?: string;\n  batchNumber?: string;\n  purpose?: string;\n  createdAt?: string;\n  updatedAt?: string;\n}\n\n// FoodHistory entity interface - matches backend FoodHistory.java exactly\nexport interface FoodHistory {\n  id?: number;\n  livestockId: number;\n  shedId: number;\n  inventoryId?: number;\n  consumeQuantity: number;\n  duration: string;\n  date: string; // LocalDateTime as ISO string\n  comments?: string;\n  createdAt?: string;\n  updatedAt?: string;\n}\n\n// Paged response interface for list endpoints\nexport interface PagedResponse<T> {\n  content: T[];\n  pageNumber: number;\n  pageSize: number;\n  totalElements: number;\n  totalPages: number;\n  last: boolean;\n  first: boolean;\n}\n\n// Master Data interfaces - for dropdowns and lookups\nexport interface Breed {\n  id: number;\n  name: string;\n  description?: string;\n  createdAt?: string;\n  updatedAt?: string;\n}\n\nexport interface Species {\n  id: number;\n  name: string;\n  description?: string;\n  createdAt?: string;\n  updatedAt?: string;\n}\n\nexport interface Gender {\n  id: number;\n  name: string;\n  createdAt?: string;\n  updatedAt?: string;\n}\n\nexport interface Color {\n  id: number;\n  name: string;\n  hexCode?: string;\n  createdAt?: string;\n  updatedAt?: string;\n}\n\nexport interface Location {\n  id: number;\n  name: string;\n  address?: string;\n  city?: string;\n  state?: string;\n  pincode?: string;\n  contactPerson?: string;\n  contactPhone?: string;\n  createdAt?: string;\n  updatedAt?: string;\n}\n\n// Master data cache - in-memory caching to avoid repeated API calls\nconst masterDataCache = {\n  breeds: null as Breed[] | null,\n  species: null as Species[] | null,\n  genders: null as Gender[] | null,\n  colors: null as Color[] | null,\n  locations: null as Location[] | null,\n  cacheTimestamp: {\n    breeds: 0,\n    species: 0,\n    genders: 0,\n    colors: 0,\n    locations: 0,\n  },\n  CACHE_DURATION: 5 * 60 * 1000, // 5 minutes cache\n};\n\n// Helper functions for age/dob conversion\n/**\n * Convert age in years to date of birth in ISO format\n * @param ageYears - Age in years\n * @returns ISO formatted date string for dob\n */\nexport function calculateDobFromAge(ageYears: number): string {\n  const today = new Date();\n  const birthYear = today.getFullYear() - ageYears;\n  const dob = new Date(birthYear, today.getMonth(), today.getDate());\n  return dob.toISOString();\n}\n\n/**\n * Convert date of birth to age in years\n * @param dob - Date of birth in ISO format\n * @returns Age in years\n */\nexport function calculateAgeFromDob(dob: string): number {\n  const birthDate = new Date(dob);\n  const today = new Date();\n  let age = today.getFullYear() - birthDate.getFullYear();\n  const monthDiff = today.getMonth() - birthDate.getMonth();\n\n  // Adjust age if birthday hasn't occurred this year yet\n  if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birthDate.getDate())) {\n    age--;\n  }\n\n  return age;\n}\n\n// API Helper function\nasync function apiCall<T>(\n  endpoint: string,\n  options: RequestInit = {}\n): Promise<ApiResponse<T>> {\n  try {\n    const token = localStorage.getItem('saubhagya_jwt_token');\n    const headers = {\n      'Content-Type': 'application/json',\n      ...(token && { Authorization: `Bearer ${token}` }),\n      ...options.headers,\n    };\n\n    const response = await fetch(`${API_BASE_URL}${endpoint}`, {\n      ...options,\n      headers,\n    });\n\n    const data = await response.json();\n\n    if (!response.ok) {\n      return {\n        success: false,\n        error: data.message || `HTTP error! status: ${response.status}`,\n      };\n    }\n\n    return {\n      success: true,\n      data,\n    };\n  } catch (error) {\n    console.error('API call failed:', error);\n    return {\n      success: false,\n      error: error instanceof Error ? error.message : 'Unknown error occurred',\n    };\n  }\n}\n\n// Dashboard API\nexport const dashboardApi = {\n  async getStats(): Promise<ApiResponse<DashboardStats>> {\n    return apiCall<DashboardStats>('/api/dashboard/stats');\n  },\n\n  async getRecentCollections(limit: number = 10): Promise<ApiResponse<RecentCollection[]>> {\n    return apiCall<RecentCollection[]>(`/api/dashboard/recent-collections?limit=${limit}`);\n  },\n\n  async getTopPerformers(limit: number = 5): Promise<ApiResponse<TopPerformer[]>> {\n    return apiCall<TopPerformer[]>(`/api/dashboard/top-performers?limit=${limit}`);\n  },\n};\n\n// Cattle Management API - Using gaushala-service directly\nexport const cattleApi = {\n  async getAllCattle(page: number = 0, size: number = 100): Promise<ApiResponse<PagedResponse<Cattle>>> {\n    // Use Gaushala Service directly on port 8086\n    return apiCall<PagedResponse<Cattle>>(`/api/v1/gaushala/cattle?page=${page}&size=${size}`);\n  },\n\n  /**\n   * Get cattle by ID from Gaushala Service\n   * @param id - Cattle ID (numeric)\n   * @returns Cattle details\n   */\n  async getCattleById(id: number): Promise<ApiResponse<Cattle>> {\n    return apiCall<Cattle>(`/api/v1/gaushala/cattle/${id}`);\n  },\n\n  async getCattleByRfid(rfidTag: string): Promise<ApiResponse<Cattle>> {\n    return apiCall<Cattle>(`/api/v1/cattle/rfid/${encodeURIComponent(rfidTag)}`);\n  },\n\n  /**\n   * Create new cattle in Gaushala Service\n   * @param cattle - Cattle data with proper field mappings (breedId, speciesId, dob, etc.)\n   * @returns Created cattle with generated ID\n   */\n  async createCattle(cattle: Omit<Cattle, 'id' | 'createdAt' | 'updatedAt'>): Promise<ApiResponse<Cattle>> {\n    return apiCall<Cattle>(`/api/v1/gaushala/cattle`, {\n      method: 'POST',\n      body: JSON.stringify(cattle),\n    });\n  },\n\n  /**\n   * Update existing cattle in Gaushala Service\n   * @param id - Cattle ID (numeric)\n   * @param updates - Partial cattle data to update\n   * @returns Updated cattle details\n   */\n  async updateCattle(id: number, updates: Partial<Cattle>): Promise<ApiResponse<Cattle>> {\n    return apiCall<Cattle>(`/api/v1/gaushala/cattle/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(updates),\n    });\n  },\n\n  /**\n   * Delete cattle from Gaushala Service\n   * @param id - Cattle ID (numeric)\n   * @returns Success status\n   */\n  async deleteCattle(id: number): Promise<ApiResponse<void>> {\n    return apiCall<void>(`/api/v1/gaushala/cattle/${id}`, {\n      method: 'DELETE',\n    });\n  },\n\n  async scanRfid(): Promise<ApiResponse<{ rfidTag: string; cattleInfo?: Cattle }>> {\n    // Simulate RFID scanning\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        resolve({\n          success: true,\n          data: {\n            rfidTag: `RFID-${Date.now()}`,\n          },\n        });\n      }, 2000);\n    });\n  },\n\n  async updateHealth(cattleId: string, health: Cattle['health'], notes?: string): Promise<ApiResponse<Cattle>> {\n    const updateData: Partial<Cattle> = { health };\n    if (notes) {\n      // Notes can be used for logging or future implementation\n      console.log(`Health update notes for ${cattleId}: ${notes}`);\n    }\n    return this.updateCattle(cattleId, updateData);\n  },\n\n  async addMedicalRecord(cattleId: string, record: Omit<MedicalRecord, 'id'>): Promise<ApiResponse<MedicalRecord>> {\n    return apiCall<MedicalRecord>(`/api/v1/cattle/${cattleId}/medical-records`, {\n      method: 'POST',\n      body: JSON.stringify(record),\n    });\n  },\n\n  async uploadPhoto(cattleId: string, photoFile: File): Promise<ApiResponse<{ photoUrl: string }>> {\n    const formData = new FormData();\n    formData.append('photo', photoFile);\n\n    try {\n      const token = localStorage.getItem('saubhagya_jwt_token');\n      const response = await fetch(`${API_BASE_URL}/api/v1/cattle/${cattleId}/photo`, {\n        method: 'POST',\n        headers: {\n          ...(token && { Authorization: `Bearer ${token}` }),\n        },\n        body: formData,\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        return {\n          success: false,\n          error: data.message || `HTTP error! status: ${response.status}`,\n        };\n      }\n\n      return {\n        success: true,\n        data,\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error occurred',\n      };\n    }\n  },\n};\n\n// Transaction API\nexport const transactionApi = {\n  async getAllTransactions(): Promise<ApiResponse<Transaction[]>> {\n    return apiCall<Transaction[]>('/api/v1/transactions');\n  },\n\n  async getTransactionById(id: string): Promise<ApiResponse<Transaction>> {\n    return apiCall<Transaction>(`/api/v1/transactions/${id}`);\n  },\n\n  async createTransaction(transaction: Omit<Transaction, 'id' | 'timestamp'>): Promise<ApiResponse<Transaction>> {\n    try {\n      // Use BiogasServiceClient for proper microservices routing\n      const { BiogasServiceClient } = await import('../microservices');\n      const result = await BiogasServiceClient.recordContribution({\n        cattleId: transaction.cattleId,\n        dungWeight: transaction.dungWeight,\n        dungQuality: transaction.dungQuality,\n        workerId: transaction.worker,\n        notes: transaction.notes,\n        digestorId: transaction.digestorId,\n      });\n\n      return {\n        success: result.success || true,\n        data: result.data || result,\n      };\n    } catch (error) {\n      console.error('Error creating transaction:', error);\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error occurred',\n      };\n    }\n  },\n\n  async updateTransaction(id: string, updates: Partial<Transaction>): Promise<ApiResponse<Transaction>> {\n    return apiCall<Transaction>(`/api/v1/transactions/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(updates),\n    });\n  },\n\n  async processPayment(transactionId: string, paymentMethod: Transaction['paymentMethod']): Promise<ApiResponse<Transaction>> {\n    return apiCall<Transaction>(`/api/v1/transactions/${transactionId}/payment`, {\n      method: 'POST',\n      body: JSON.stringify({ paymentMethod }),\n    });\n  },\n\n  async getTransactionsByDigestor(digestorId: string): Promise<ApiResponse<Transaction[]>> {\n    return apiCall<Transaction[]>(`/api/v1/transactions/digestor/${digestorId}`);\n  },\n\n  async getTransactionsByWorker(workerId: string): Promise<ApiResponse<Transaction[]>> {\n    return apiCall<Transaction[]>(`/api/v1/transactions/worker/${workerId}`);\n  },\n\n  async getTransactionsByCattle(cattleId: string): Promise<ApiResponse<Transaction[]>> {\n    return apiCall<Transaction[]>(`/api/v1/transactions/cattle/${cattleId}`);\n  },\n};\n\n// Medicine API - All operations with exact backend field names\nexport const medicineApi = {\n  async getAllMedicines(page: number = 0, size: number = 20): Promise<ApiResponse<PagedResponse<Medicine>>> {\n    try {\n      const response = await fetch(`${GAUSHALA_SERVICE_URL}/api/v1/gaushala/medicines?page=${page}&size=${size}`, {\n        headers: {\n          'Content-Type': 'application/json',\n          ...(localStorage.getItem('saubhagya_jwt_token') && {\n            Authorization: `Bearer ${localStorage.getItem('saubhagya_jwt_token')}`\n          }),\n        },\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        return {\n          success: false,\n          error: error.message || `HTTP error! status: ${response.status}`,\n        };\n      }\n\n      const data = await response.json();\n      return {\n        success: true,\n        data,\n      };\n    } catch (error) {\n      console.error('Get all medicines failed:', error);\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error occurred',\n      };\n    }\n  },\n\n  async getMedicineById(id: number): Promise<ApiResponse<Medicine>> {\n    try {\n      const response = await fetch(`${GAUSHALA_SERVICE_URL}/api/v1/gaushala/medicines/${id}`, {\n        headers: {\n          'Content-Type': 'application/json',\n          ...(localStorage.getItem('saubhagya_jwt_token') && {\n            Authorization: `Bearer ${localStorage.getItem('saubhagya_jwt_token')}`\n          }),\n        },\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        return {\n          success: false,\n          error: error.message || `HTTP error! status: ${response.status}`,\n        };\n      }\n\n      const data = await response.json();\n      return {\n        success: true,\n        data,\n      };\n    } catch (error) {\n      console.error('Get medicine by ID failed:', error);\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error occurred',\n      };\n    }\n  },\n\n  async searchMedicines(name: string, page: number = 0, size: number = 20): Promise<ApiResponse<PagedResponse<Medicine>>> {\n    try {\n      const response = await fetch(`${GAUSHALA_SERVICE_URL}/api/v1/gaushala/medicines/search?name=${encodeURIComponent(name)}&page=${page}&size=${size}`, {\n        headers: {\n          'Content-Type': 'application/json',\n          ...(localStorage.getItem('saubhagya_jwt_token') && {\n            Authorization: `Bearer ${localStorage.getItem('saubhagya_jwt_token')}`\n          }),\n        },\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        return {\n          success: false,\n          error: error.message || `HTTP error! status: ${response.status}`,\n        };\n      }\n\n      const data = await response.json();\n      return {\n        success: true,\n        data,\n      };\n    } catch (error) {\n      console.error('Search medicines failed:', error);\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error occurred',\n      };\n    }\n  },\n\n  async getExpiredMedicines(): Promise<ApiResponse<Medicine[]>> {\n    try {\n      const response = await fetch(`${GAUSHALA_SERVICE_URL}/api/v1/gaushala/medicines/expired`, {\n        headers: {\n          'Content-Type': 'application/json',\n          ...(localStorage.getItem('saubhagya_jwt_token') && {\n            Authorization: `Bearer ${localStorage.getItem('saubhagya_jwt_token')}`\n          }),\n        },\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        return {\n          success: false,\n          error: error.message || `HTTP error! status: ${response.status}`,\n        };\n      }\n\n      const data = await response.json();\n      return {\n        success: true,\n        data,\n      };\n    } catch (error) {\n      console.error('Get expired medicines failed:', error);\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error occurred',\n      };\n    }\n  },\n\n  async getLowStockMedicines(threshold: number = 10): Promise<ApiResponse<Medicine[]>> {\n    try {\n      const response = await fetch(`${GAUSHALA_SERVICE_URL}/api/v1/gaushala/medicines/low-stock?threshold=${threshold}`, {\n        headers: {\n          'Content-Type': 'application/json',\n          ...(localStorage.getItem('saubhagya_jwt_token') && {\n            Authorization: `Bearer ${localStorage.getItem('saubhagya_jwt_token')}`\n          }),\n        },\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        return {\n          success: false,\n          error: error.message || `HTTP error! status: ${response.status}`,\n        };\n      }\n\n      const data = await response.json();\n      return {\n        success: true,\n        data,\n      };\n    } catch (error) {\n      console.error('Get low stock medicines failed:', error);\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error occurred',\n      };\n    }\n  },\n\n  async createMedicine(medicine: Omit<Medicine, 'id' | 'createdAt' | 'updatedAt'>): Promise<ApiResponse<Medicine>> {\n    try {\n      const response = await fetch(`${GAUSHALA_SERVICE_URL}/api/v1/gaushala/medicines`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          ...(localStorage.getItem('saubhagya_jwt_token') && {\n            Authorization: `Bearer ${localStorage.getItem('saubhagya_jwt_token')}`\n          }),\n        },\n        body: JSON.stringify(medicine),\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        return {\n          success: false,\n          error: error.message || `HTTP error! status: ${response.status}`,\n        };\n      }\n\n      const data = await response.json();\n      return {\n        success: true,\n        data,\n      };\n    } catch (error) {\n      console.error('Create medicine failed:', error);\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error occurred',\n      };\n    }\n  },\n\n  async updateMedicine(id: number, medicine: Partial<Medicine>): Promise<ApiResponse<Medicine>> {\n    try {\n      const response = await fetch(`${GAUSHALA_SERVICE_URL}/api/v1/gaushala/medicines/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          ...(localStorage.getItem('saubhagya_jwt_token') && {\n            Authorization: `Bearer ${localStorage.getItem('saubhagya_jwt_token')}`\n          }),\n        },\n        body: JSON.stringify(medicine),\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        return {\n          success: false,\n          error: error.message || `HTTP error! status: ${response.status}`,\n        };\n      }\n\n      const data = await response.json();\n      return {\n        success: true,\n        data,\n      };\n    } catch (error) {\n      console.error('Update medicine failed:', error);\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error occurred',\n      };\n    }\n  },\n\n  async deleteMedicine(id: number): Promise<ApiResponse<void>> {\n    try {\n      const response = await fetch(`${GAUSHALA_SERVICE_URL}/api/v1/gaushala/medicines/${id}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          ...(localStorage.getItem('saubhagya_jwt_token') && {\n            Authorization: `Bearer ${localStorage.getItem('saubhagya_jwt_token')}`\n          }),\n        },\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        return {\n          success: false,\n          error: error.message || `HTTP error! status: ${response.status}`,\n        };\n      }\n\n      return {\n        success: true,\n      };\n    } catch (error) {\n      console.error('Delete medicine failed:', error);\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error occurred',\n      };\n    }\n  },\n};\n\n// FoodHistory API - All operations with exact backend field names\nexport const foodHistoryApi = {\n  async getAllFoodHistory(page: number = 0, size: number = 20): Promise<ApiResponse<PagedResponse<FoodHistory>>> {\n    try {\n      const response = await fetch(`${GAUSHALA_SERVICE_URL}/api/v1/gaushala/food-history?page=${page}&size=${size}`, {\n        headers: {\n          'Content-Type': 'application/json',\n          ...(localStorage.getItem('saubhagya_jwt_token') && {\n            Authorization: `Bearer ${localStorage.getItem('saubhagya_jwt_token')}`\n          }),\n        },\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        return {\n          success: false,\n          error: error.message || `HTTP error! status: ${response.status}`,\n        };\n      }\n\n      const data = await response.json();\n      return {\n        success: true,\n        data,\n      };\n    } catch (error) {\n      console.error('Get all food history failed:', error);\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error occurred',\n      };\n    }\n  },\n\n  async getFoodHistoryById(id: number): Promise<ApiResponse<FoodHistory>> {\n    try {\n      const response = await fetch(`${GAUSHALA_SERVICE_URL}/api/v1/gaushala/food-history/${id}`, {\n        headers: {\n          'Content-Type': 'application/json',\n          ...(localStorage.getItem('saubhagya_jwt_token') && {\n            Authorization: `Bearer ${localStorage.getItem('saubhagya_jwt_token')}`\n          }),\n        },\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        return {\n          success: false,\n          error: error.message || `HTTP error! status: ${response.status}`,\n        };\n      }\n\n      const data = await response.json();\n      return {\n        success: true,\n        data,\n      };\n    } catch (error) {\n      console.error('Get food history by ID failed:', error);\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error occurred',\n      };\n    }\n  },\n\n  async getFoodHistoryByLivestock(livestockId: number, page: number = 0, size: number = 20): Promise<ApiResponse<PagedResponse<FoodHistory>>> {\n    try {\n      const response = await fetch(`${GAUSHALA_SERVICE_URL}/api/v1/gaushala/food-history/livestock/${livestockId}?page=${page}&size=${size}`, {\n        headers: {\n          'Content-Type': 'application/json',\n          ...(localStorage.getItem('saubhagya_jwt_token') && {\n            Authorization: `Bearer ${localStorage.getItem('saubhagya_jwt_token')}`\n          }),\n        },\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        return {\n          success: false,\n          error: error.message || `HTTP error! status: ${response.status}`,\n        };\n      }\n\n      const data = await response.json();\n      return {\n        success: true,\n        data,\n      };\n    } catch (error) {\n      console.error('Get food history by livestock failed:', error);\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error occurred',\n      };\n    }\n  },\n\n  async getFoodHistoryByShed(shedId: number, page: number = 0, size: number = 20): Promise<ApiResponse<PagedResponse<FoodHistory>>> {\n    try {\n      const response = await fetch(`${GAUSHALA_SERVICE_URL}/api/v1/gaushala/food-history/shed/${shedId}?page=${page}&size=${size}`, {\n        headers: {\n          'Content-Type': 'application/json',\n          ...(localStorage.getItem('saubhagya_jwt_token') && {\n            Authorization: `Bearer ${localStorage.getItem('saubhagya_jwt_token')}`\n          }),\n        },\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        return {\n          success: false,\n          error: error.message || `HTTP error! status: ${response.status}`,\n        };\n      }\n\n      const data = await response.json();\n      return {\n        success: true,\n        data,\n      };\n    } catch (error) {\n      console.error('Get food history by shed failed:', error);\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error occurred',\n      };\n    }\n  },\n\n  async createFoodHistory(foodHistory: Omit<FoodHistory, 'id' | 'createdAt' | 'updatedAt'>): Promise<ApiResponse<FoodHistory>> {\n    try {\n      const response = await fetch(`${GAUSHALA_SERVICE_URL}/api/v1/gaushala/food-history`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          ...(localStorage.getItem('saubhagya_jwt_token') && {\n            Authorization: `Bearer ${localStorage.getItem('saubhagya_jwt_token')}`\n          }),\n        },\n        body: JSON.stringify(foodHistory),\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        return {\n          success: false,\n          error: error.message || `HTTP error! status: ${response.status}`,\n        };\n      }\n\n      const data = await response.json();\n      return {\n        success: true,\n        data,\n      };\n    } catch (error) {\n      console.error('Create food history failed:', error);\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error occurred',\n      };\n    }\n  },\n\n  async updateFoodHistory(id: number, foodHistory: Partial<FoodHistory>): Promise<ApiResponse<FoodHistory>> {\n    try {\n      const response = await fetch(`${GAUSHALA_SERVICE_URL}/api/v1/gaushala/food-history/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          ...(localStorage.getItem('saubhagya_jwt_token') && {\n            Authorization: `Bearer ${localStorage.getItem('saubhagya_jwt_token')}`\n          }),\n        },\n        body: JSON.stringify(foodHistory),\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        return {\n          success: false,\n          error: error.message || `HTTP error! status: ${response.status}`,\n        };\n      }\n\n      const data = await response.json();\n      return {\n        success: true,\n        data,\n      };\n    } catch (error) {\n      console.error('Update food history failed:', error);\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error occurred',\n      };\n    }\n  },\n\n  async deleteFoodHistory(id: number): Promise<ApiResponse<void>> {\n    try {\n      const response = await fetch(`${GAUSHALA_SERVICE_URL}/api/v1/gaushala/food-history/${id}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          ...(localStorage.getItem('saubhagya_jwt_token') && {\n            Authorization: `Bearer ${localStorage.getItem('saubhagya_jwt_token')}`\n          }),\n        },\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        return {\n          success: false,\n          error: error.message || `HTTP error! status: ${response.status}`,\n        };\n      }\n\n      return {\n        success: true,\n      };\n    } catch (error) {\n      console.error('Delete food history failed:', error);\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error occurred',\n      };\n    }\n  },\n};\n\n// Master Data API - with intelligent caching\nexport const masterDataApi = {\n  /**\n   * Get all breeds with caching\n   */\n  async getAllBreeds(forceRefresh: boolean = false): Promise<ApiResponse<Breed[]>> {\n    try {\n      // Check cache first\n      const now = Date.now();\n      if (\n        !forceRefresh &&\n        masterDataCache.breeds &&\n        now - masterDataCache.cacheTimestamp.breeds < masterDataCache.CACHE_DURATION\n      ) {\n        return {\n          success: true,\n          data: masterDataCache.breeds,\n        };\n      }\n\n      const response = await fetch(`${GAUSHALA_SERVICE_URL}/api/v1/gaushala/master/breeds`, {\n        headers: {\n          'Content-Type': 'application/json',\n          ...(localStorage.getItem('saubhagya_jwt_token') && {\n            Authorization: `Bearer ${localStorage.getItem('saubhagya_jwt_token')}`\n          }),\n        },\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        return {\n          success: false,\n          error: error.message || `HTTP error! status: ${response.status}`,\n        };\n      }\n\n      const data = await response.json();\n\n      // Update cache\n      masterDataCache.breeds = data;\n      masterDataCache.cacheTimestamp.breeds = now;\n\n      return {\n        success: true,\n        data,\n      };\n    } catch (error) {\n      console.error('Get all breeds failed:', error);\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error occurred',\n      };\n    }\n  },\n\n  /**\n   * Get all species with caching\n   */\n  async getAllSpecies(forceRefresh: boolean = false): Promise<ApiResponse<Species[]>> {\n    try {\n      // Check cache first\n      const now = Date.now();\n      if (\n        !forceRefresh &&\n        masterDataCache.species &&\n        now - masterDataCache.cacheTimestamp.species < masterDataCache.CACHE_DURATION\n      ) {\n        return {\n          success: true,\n          data: masterDataCache.species,\n        };\n      }\n\n      const response = await fetch(`${GAUSHALA_SERVICE_URL}/api/v1/gaushala/master/species`, {\n        headers: {\n          'Content-Type': 'application/json',\n          ...(localStorage.getItem('saubhagya_jwt_token') && {\n            Authorization: `Bearer ${localStorage.getItem('saubhagya_jwt_token')}`\n          }),\n        },\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        return {\n          success: false,\n          error: error.message || `HTTP error! status: ${response.status}`,\n        };\n      }\n\n      const data = await response.json();\n\n      // Update cache\n      masterDataCache.species = data;\n      masterDataCache.cacheTimestamp.species = now;\n\n      return {\n        success: true,\n        data,\n      };\n    } catch (error) {\n      console.error('Get all species failed:', error);\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error occurred',\n      };\n    }\n  },\n\n  /**\n   * Get all genders with caching\n   */\n  async getAllGenders(forceRefresh: boolean = false): Promise<ApiResponse<Gender[]>> {\n    try {\n      // Check cache first\n      const now = Date.now();\n      if (\n        !forceRefresh &&\n        masterDataCache.genders &&\n        now - masterDataCache.cacheTimestamp.genders < masterDataCache.CACHE_DURATION\n      ) {\n        return {\n          success: true,\n          data: masterDataCache.genders,\n        };\n      }\n\n      const response = await fetch(`${GAUSHALA_SERVICE_URL}/api/v1/gaushala/master/genders`, {\n        headers: {\n          'Content-Type': 'application/json',\n          ...(localStorage.getItem('saubhagya_jwt_token') && {\n            Authorization: `Bearer ${localStorage.getItem('saubhagya_jwt_token')}`\n          }),\n        },\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        return {\n          success: false,\n          error: error.message || `HTTP error! status: ${response.status}`,\n        };\n      }\n\n      const data = await response.json();\n\n      // Update cache\n      masterDataCache.genders = data;\n      masterDataCache.cacheTimestamp.genders = now;\n\n      return {\n        success: true,\n        data,\n      };\n    } catch (error) {\n      console.error('Get all genders failed:', error);\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error occurred',\n      };\n    }\n  },\n\n  /**\n   * Get all colors with caching\n   */\n  async getAllColors(forceRefresh: boolean = false): Promise<ApiResponse<Color[]>> {\n    try {\n      // Check cache first\n      const now = Date.now();\n      if (\n        !forceRefresh &&\n        masterDataCache.colors &&\n        now - masterDataCache.cacheTimestamp.colors < masterDataCache.CACHE_DURATION\n      ) {\n        return {\n          success: true,\n          data: masterDataCache.colors,\n        };\n      }\n\n      const response = await fetch(`${GAUSHALA_SERVICE_URL}/api/v1/gaushala/master/colors`, {\n        headers: {\n          'Content-Type': 'application/json',\n          ...(localStorage.getItem('saubhagya_jwt_token') && {\n            Authorization: `Bearer ${localStorage.getItem('saubhagya_jwt_token')}`\n          }),\n        },\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        return {\n          success: false,\n          error: error.message || `HTTP error! status: ${response.status}`,\n        };\n      }\n\n      const data = await response.json();\n\n      // Update cache\n      masterDataCache.colors = data;\n      masterDataCache.cacheTimestamp.colors = now;\n\n      return {\n        success: true,\n        data,\n      };\n    } catch (error) {\n      console.error('Get all colors failed:', error);\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error occurred',\n      };\n    }\n  },\n\n  /**\n   * Get all locations/gaushalas with caching\n   */\n  async getAllLocations(forceRefresh: boolean = false): Promise<ApiResponse<Location[]>> {\n    try {\n      // Check cache first\n      const now = Date.now();\n      if (\n        !forceRefresh &&\n        masterDataCache.locations &&\n        now - masterDataCache.cacheTimestamp.locations < masterDataCache.CACHE_DURATION\n      ) {\n        return {\n          success: true,\n          data: masterDataCache.locations,\n        };\n      }\n\n      const response = await fetch(`${GAUSHALA_SERVICE_URL}/api/v1/gaushala/master/villages`, {\n        headers: {\n          'Content-Type': 'application/json',\n          ...(localStorage.getItem('saubhagya_jwt_token') && {\n            Authorization: `Bearer ${localStorage.getItem('saubhagya_jwt_token')}`\n          }),\n        },\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        return {\n          success: false,\n          error: error.message || `HTTP error! status: ${response.status}`,\n        };\n      }\n\n      const data = await response.json();\n\n      // Update cache\n      masterDataCache.locations = data;\n      masterDataCache.cacheTimestamp.locations = now;\n\n      return {\n        success: true,\n        data,\n      };\n    } catch (error) {\n      console.error('Get all locations failed:', error);\n      return {\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error occurred',\n      };\n    }\n  },\n\n  /**\n   * Clear all master data cache\n   */\n  clearCache(): void {\n    masterDataCache.breeds = null;\n    masterDataCache.species = null;\n    masterDataCache.genders = null;\n    masterDataCache.colors = null;\n    masterDataCache.locations = null;\n    masterDataCache.cacheTimestamp = {\n      breeds: 0,\n      species: 0,\n      genders: 0,\n      colors: 0,\n      locations: 0,\n    };\n  },\n\n  /**\n   * Preload all master data - useful for initial app load\n   */\n  async preloadAll(): Promise<void> {\n    await Promise.all([\n      this.getAllBreeds(),\n      this.getAllSpecies(),\n      this.getAllGenders(),\n      this.getAllColors(),\n      this.getAllLocations(),\n    ]);\n  },\n};\n\n// Inventory Management Interfaces\nexport interface Inventory {\n  id?: number;\n  itemName: string;\n  inventoryTypeId: number;\n  inventoryUnitId: number;\n  quantity: number;\n  reorderLevel: number;\n  supplier?: string;\n  gaushalaId: number;\n  createdAt?: string;\n  updatedAt?: string;\n}\n\nexport interface InventoryType {\n  id: number;\n  name: string;  // Backend field name\n  description?: string;\n}\n\nexport interface InventoryUnit {\n  id: number;\n  unitName: string;\n  abbreviation?: string;\n}\n\nexport interface StockTransaction {\n  id?: number;\n  inventoryId: number;\n  transactionType: 'IN' | 'OUT';\n  quantity: number;\n  transactionDate: string;\n  performedBy?: string;\n  notes?: string;\n}\n\n// Inventory API\nexport const inventoryApi = {\n  async getAllInventory(page: number = 0, size: number = 20): Promise<ApiResponse<PagedResponse<Inventory>>> {\n    return apiCall<PagedResponse<Inventory>>(`/api/v1/gaushala/inventory?page=${page}&size=${size}`);\n  },\n\n  async getInventoryById(id: number): Promise<ApiResponse<Inventory>> {\n    return apiCall<Inventory>(`/api/v1/gaushala/inventory/${id}`);\n  },\n\n  async createInventory(inventory: Omit<Inventory, 'id' | 'createdAt' | 'updatedAt'>): Promise<ApiResponse<Inventory>> {\n    return apiCall<Inventory>(`/api/v1/gaushala/inventory`, {\n      method: 'POST',\n      body: JSON.stringify(inventory),\n    });\n  },\n\n  async updateInventory(id: number, updates: Partial<Inventory>): Promise<ApiResponse<Inventory>> {\n    return apiCall<Inventory>(`/api/v1/gaushala/inventory/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(updates),\n    });\n  },\n\n  async deleteInventory(id: number): Promise<ApiResponse<void>> {\n    return apiCall<void>(`/api/v1/gaushala/inventory/${id}`, {\n      method: 'DELETE',\n    });\n  },\n\n  async searchInventory(itemName: string): Promise<ApiResponse<Inventory[]>> {\n    return apiCall<Inventory[]>(`/api/v1/gaushala/inventory/search?itemName=${encodeURIComponent(itemName)}`);\n  },\n\n  async getStockHistory(inventoryId: number): Promise<ApiResponse<StockTransaction[]>> {\n    return apiCall<StockTransaction[]>(`/api/v1/gaushala/inventory/${inventoryId}/stock-history`);\n  },\n\n  async createStockTransaction(transaction: Omit<StockTransaction, 'id'>): Promise<ApiResponse<StockTransaction>> {\n    return apiCall<StockTransaction>(`/api/v1/gaushala/inventory/stock-transaction`, {\n      method: 'POST',\n      body: JSON.stringify(transaction),\n    });\n  },\n\n  async getInventoryTypes(): Promise<ApiResponse<InventoryType[]>> {\n    return apiCall<InventoryType[]>(`/api/v1/gaushala/master/inventory-types`);\n  },\n\n  async getInventoryUnits(): Promise<ApiResponse<InventoryUnit[]>> {\n    return apiCall<InventoryUnit[]>(`/api/v1/gaushala/inventory/units`);\n  },\n};\n\n// Shed Management Interfaces\nexport interface Shed {\n  id?: number;\n  gaushalaId: number;\n  shedName: string;\n  shedNumber: string;\n  capacity: number;\n  currentOccupancy: number;\n  shedType?: string;\n  areaSqFt?: number;\n  ventilationType?: string;\n  flooringType?: string;\n  waterFacility?: boolean;\n  feedingFacility?: boolean;\n  status: string; // 'ACTIVE' | 'MAINTENANCE'\n  notes?: string;\n  createdAt?: string;\n  updatedAt?: string;\n}\n\nexport interface ShedCapacity {\n  shedId: number;\n  shedName: string;\n  capacity: number;\n  currentOccupancy: number;\n  availableSpace: number;\n  occupancyPercentage: number;\n}\n\n// Shed API\nexport const shedApi = {\n  async getAllSheds(page: number = 0, size: number = 20): Promise<ApiResponse<PagedResponse<Shed>>> {\n    return apiCall<PagedResponse<Shed>>(`/api/v1/gaushala/sheds?page=${page}&size=${size}`);\n  },\n\n  async getShedById(id: number): Promise<ApiResponse<Shed>> {\n    return apiCall<Shed>(`/api/v1/gaushala/sheds/${id}`);\n  },\n\n  async createShed(shed: Omit<Shed, 'id' | 'createdAt' | 'updatedAt'>): Promise<ApiResponse<Shed>> {\n    return apiCall<Shed>(`/api/v1/gaushala/sheds`, {\n      method: 'POST',\n      body: JSON.stringify(shed),\n    });\n  },\n\n  async updateShed(id: number, updates: Partial<Shed>): Promise<ApiResponse<Shed>> {\n    return apiCall<Shed>(`/api/v1/gaushala/sheds/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(updates),\n    });\n  },\n\n  async deleteShed(id: number): Promise<ApiResponse<void>> {\n    return apiCall<void>(`/api/v1/gaushala/sheds/${id}`, {\n      method: 'DELETE',\n    });\n  },\n\n  async getShedsByGaushala(gaushalaId: number): Promise<ApiResponse<Shed[]>> {\n    return apiCall<Shed[]>(`/api/v1/gaushala/sheds/gaushala/${gaushalaId}`);\n  },\n\n  async getShedsByStatus(status: string): Promise<ApiResponse<Shed[]>> {\n    return apiCall<Shed[]>(`/api/v1/gaushala/sheds/by-status?status=${status}`);\n  },\n\n  async getAvailableCapacity(gaushalaId: number): Promise<ApiResponse<number>> {\n    return apiCall<number>(`/api/v1/gaushala/sheds/gaushala/${gaushalaId}/available-capacity`);\n  },\n};\n\n// ============================================================================\n// MILK PRODUCTION API\n// ============================================================================\n\nexport interface MilkRecord {\n  id?: number;\n  entryType?: string;\n  cowId?: string;\n  milkQuantity?: number;\n  fatPercentage?: number;\n  snf?: number;\n  notes?: string;\n  status?: string;\n  createdAt?: string;\n  updatedAt?: string;\n}\n\nexport interface MilkProductionStats {\n  totalQuantity: number;\n  averageFatPercentage: number;\n  averageSnfPercentage: number;\n  recordCount: number;\n}\n\nexport const milkProductionApi = {\n  async getAllMilkRecords(page: number = 0, size: number = 20): Promise<ApiResponse<PagedResponse<MilkRecord>>> {\n    return apiCall<PagedResponse<MilkRecord>>(`/api/v1/gaushala/milk-records?page=${page}&size=${size}`);\n  },\n\n  async getMilkRecordById(id: number): Promise<ApiResponse<MilkRecord>> {\n    return apiCall<MilkRecord>(`/api/v1/gaushala/milk-records/${id}`);\n  },\n\n  async getMilkRecordsByCow(cowId: string, page: number = 0, size: number = 20): Promise<ApiResponse<PagedResponse<MilkRecord>>> {\n    return apiCall<PagedResponse<MilkRecord>>(`/api/v1/gaushala/milk-records/cow/${cowId}?page=${page}&size=${size}`);\n  },\n\n  async createMilkRecord(data: MilkRecord): Promise<ApiResponse<MilkRecord>> {\n    return apiCall<MilkRecord>('/api/v1/gaushala/milk-records', {\n      method: 'POST',\n      body: JSON.stringify(data),\n    });\n  },\n\n  async updateMilkRecord(id: number, data: Partial<MilkRecord>): Promise<ApiResponse<MilkRecord>> {\n    return apiCall<MilkRecord>(`/api/v1/gaushala/milk-records/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(data),\n    });\n  },\n\n  async deleteMilkRecord(id: number): Promise<ApiResponse<void>> {\n    return apiCall<void>(`/api/v1/gaushala/milk-records/${id}`, {\n      method: 'DELETE',\n    });\n  },\n\n  async getTotalMilkQuantity(startDate: string, endDate: string): Promise<ApiResponse<number>> {\n    return apiCall<number>(`/api/v1/gaushala/milk-records/total-quantity?startDate=${startDate}&endDate=${endDate}`);\n  },\n\n  async getAverageFatPercentage(cowId: string): Promise<ApiResponse<number>> {\n    return apiCall<number>(`/api/v1/gaushala/milk-records/cow/${cowId}/avg-fat`);\n  },\n\n  async getMilkRecordsByDateRange(startDate: string, endDate: string, page: number = 0, size: number = 20): Promise<ApiResponse<PagedResponse<MilkRecord>>> {\n    return apiCall<PagedResponse<MilkRecord>>(`/api/v1/gaushala/milk-records/range?startDate=${startDate}&endDate=${endDate}&page=${page}&size=${size}`);\n  },\n\n  async getMilkProductionStats(gaushalaId: number, startDate?: string, endDate?: string): Promise<ApiResponse<MilkProductionStats>> {\n    let url = `/api/v1/gaushala/milk-records/stats?gaushalaId=${gaushalaId}`;\n    if (startDate) url += `&startDate=${startDate}`;\n    if (endDate) url += `&endDate=${endDate}`;\n    return apiCall<MilkProductionStats>(url);\n  },\n};\n\n// ============================================================================\n// HEALTH RECORDS API\n// ============================================================================\n\nexport interface HealthRecord {\n  id?: number;\n  cattleId: number;\n  gaushalaId: number;\n  recordType: string; // 'VACCINATION' | 'TREATMENT' | 'CHECKUP' | 'SURGERY'\n  recordDate: string;\n  diagnosis?: string;\n  treatment?: string;\n  medications?: string;\n  vaccineName?: string;\n  vaccineManufacturer?: string;\n  nextVaccinationDate?: string;\n  nextCheckupDate?: string;\n  veterinarianName?: string;\n  veterinarianContact?: string;\n  cost?: number;\n  notes?: string;\n  status?: string; // 'SCHEDULED' | 'COMPLETED' | 'CANCELLED'\n  createdAt?: string;\n  updatedAt?: string;\n}\n\nexport const healthRecordsApi = {\n  async getAllHealthRecords(page: number = 0, size: number = 20): Promise<ApiResponse<PagedResponse<HealthRecord>>> {\n    return apiCall<PagedResponse<HealthRecord>>(`/api/v1/gaushala/health-records?page=${page}&size=${size}`);\n  },\n\n  async getHealthRecordById(id: number): Promise<ApiResponse<HealthRecord>> {\n    return apiCall<HealthRecord>(`/api/v1/gaushala/health-records/${id}`);\n  },\n\n  async getHealthRecordsByCattle(cattleId: number): Promise<ApiResponse<HealthRecord[]>> {\n    return apiCall<HealthRecord[]>(`/api/v1/gaushala/health-records/cattle/${cattleId}`);\n  },\n\n  async createHealthRecord(data: HealthRecord): Promise<ApiResponse<HealthRecord>> {\n    return apiCall<HealthRecord>('/api/v1/gaushala/health-records', {\n      method: 'POST',\n      body: JSON.stringify(data),\n    });\n  },\n\n  async updateHealthRecord(id: number, data: Partial<HealthRecord>): Promise<ApiResponse<HealthRecord>> {\n    return apiCall<HealthRecord>(`/api/v1/gaushala/health-records/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(data),\n    });\n  },\n\n  async deleteHealthRecord(id: number): Promise<ApiResponse<void>> {\n    return apiCall<void>(`/api/v1/gaushala/health-records/${id}`, {\n      method: 'DELETE',\n    });\n  },\n\n  async getPendingVaccinations(): Promise<ApiResponse<HealthRecord[]>> {\n    return apiCall<HealthRecord[]>('/api/v1/gaushala/health-records/vaccinations/pending');\n  },\n\n  async getUpcomingCheckups(): Promise<ApiResponse<HealthRecord[]>> {\n    return apiCall<HealthRecord[]>('/api/v1/gaushala/health-records/checkups/upcoming');\n  },\n\n  async getHealthRecordsByDateRange(startDate: string, endDate: string): Promise<ApiResponse<HealthRecord[]>> {\n    return apiCall<HealthRecord[]>(`/api/v1/gaushala/health-records/range?startDate=${startDate}&endDate=${endDate}`);\n  },\n};\n\n// ============================================================================\n// RFID SCANS API\n// ============================================================================\n\nexport interface RFIDScan {\n  id?: number;\n  tagIdHex: string;\n  cattleId?: number;\n  gaushalaId: number;\n  scanLocation?: string;\n  scanTimestamp: string;\n  scannerDeviceId?: string;\n  signalStrength?: number;\n  notes?: string;\n  createdAt?: string;\n}\n\nexport interface RFIDScanStats {\n  totalScans: number;\n  uniqueTags: number;\n  lastScanTime: string;\n  averageScansPerDay: number;\n}\n\nexport const rfidApi = {\n  async getAllScans(page: number = 0, size: number = 20): Promise<ApiResponse<PagedResponse<RFIDScan>>> {\n    return apiCall<PagedResponse<RFIDScan>>(`/api/v1/gaushala/rfid/scans?page=${page}&size=${size}`);\n  },\n\n  async getScanById(id: number): Promise<ApiResponse<RFIDScan>> {\n    return apiCall<RFIDScan>(`/api/v1/gaushala/rfid/scans/${id}`);\n  },\n\n  async getScansByTag(tagIdHex: string, page: number = 0, size: number = 20): Promise<ApiResponse<PagedResponse<RFIDScan>>> {\n    return apiCall<PagedResponse<RFIDScan>>(`/api/v1/gaushala/rfid/scans/tag/${tagIdHex}?page=${page}&size=${size}`);\n  },\n\n  async getScansByDateRange(startDate: string, endDate: string, page: number = 0, size: number = 20): Promise<ApiResponse<PagedResponse<RFIDScan>>> {\n    return apiCall<PagedResponse<RFIDScan>>(`/api/v1/gaushala/rfid/scans/range?startDate=${startDate}&endDate=${endDate}&page=${page}&size=${size}`);\n  },\n\n  async getLatestScanByTag(tagIdHex: string): Promise<ApiResponse<RFIDScan>> {\n    return apiCall<RFIDScan>(`/api/v1/gaushala/rfid/scans/tag/${tagIdHex}/latest`);\n  },\n\n  async getScanCountByTag(tagIdHex: string): Promise<ApiResponse<number>> {\n    return apiCall<number>(`/api/v1/gaushala/rfid/scans/tag/${tagIdHex}/count`);\n  },\n\n  async getScanStats(gaushalaId: number, startDate?: string, endDate?: string): Promise<ApiResponse<RFIDScanStats>> {\n    let url = `/api/v1/gaushala/rfid/scans/stats?gaushalaId=${gaushalaId}`;\n    if (startDate) url += `&startDate=${startDate}`;\n    if (endDate) url += `&endDate=${endDate}`;\n    return apiCall<RFIDScanStats>(url);\n  },\n\n  async createScan(data: RFIDScan): Promise<ApiResponse<RFIDScan>> {\n    return apiCall<RFIDScan>('/api/v1/gaushala/rfid/scans', {\n      method: 'POST',\n      body: JSON.stringify(data),\n    });\n  },\n};\n\n// Combined API export\nexport const api = {\n  dashboard: dashboardApi,\n  cattle: cattleApi,\n  transactions: transactionApi,\n  medicine: medicineApi,\n  foodHistory: foodHistoryApi,\n  inventory: inventoryApi,\n  sheds: shedApi,\n  milkProduction: milkProductionApi,\n  healthRecords: healthRecordsApi,\n  rfid: rfidApi,\n  masterData: masterDataApi,\n};\n\n// Legacy export for backward compatibility - maintain nested structure\nexport const gauShalaApi = {\n  cattle: cattleApi,\n  dashboard: dashboardApi,\n  transactions: transactionApi,\n  medicine: medicineApi,\n  foodHistory: foodHistoryApi,\n  inventory: inventoryApi,\n  sheds: shedApi,\n  milkProduction: milkProductionApi,\n  healthRecords: healthRecordsApi,\n  rfid: rfidApi,\n  masterData: masterDataApi,\n};\n\nexport default api;","/**\r\n * GauShala Home Dashboard\r\n * Modern dashboard with real-time metrics, cow counts, dung collection tracking\r\n */\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n  Users,\r\n  TrendingUp,\r\n  TrendingDown,\r\n  Activity,\r\n  MapPin,\r\n  Calendar,\r\n  Scale,\r\n  DollarSign,\r\n  AlertCircle,\r\n  CheckCircle,\r\n  Clock,\r\n  Plus,\r\n  Eye,\r\n  Trash2,\r\n  MoreHorizontal,\r\n  Heart,\r\n  Truck,\r\n  X,\r\n  Save\r\n} from 'lucide-react';\r\nimport { gauShalaApi } from '../../services/gaushala/api';\r\n\r\ninterface LanguageContextType {\r\n  language: 'hi' | 'en';\r\n  setLanguage: (lang: 'hi' | 'en') => void;\r\n  t: (key: string) => string;\r\n}\r\n\r\ninterface DashboardStats {\r\n  totalCows: number;\r\n  cowsIn: number;\r\n  cowsOut: number;\r\n  dungCollectionToday: number;\r\n  dungCollectionMonth: number;\r\n  totalRevenue: number;\r\n  averageQuality: number;\r\n  activeWorkers: number;\r\n  healthyCows: number;\r\n  sickCows: number;\r\n  recentCollections: RecentCollection[];\r\n  topPerformers: TopPerformer[];\r\n}\r\n\r\ninterface RecentCollection {\r\n  id: string;\r\n  cattleName: string;\r\n  weight: number;\r\n  quality: number;\r\n  worker: string;\r\n  timestamp: number;\r\n  digestorId: string;\r\n  status: 'completed' | 'processing' | 'failed';\r\n}\r\n\r\ninterface TopPerformer {\r\n  name: string;\r\n  collections: number;\r\n  totalWeight: number;\r\n  avgQuality: number;\r\n}\r\n\r\nconst translations = {\r\n  en: {\r\n    dashboard: 'Dashboard',\r\n    totalCows: 'Total Cattle',\r\n    cowsIn: 'Cattle In',\r\n    cowsOut: 'Cattle Out',\r\n    dungToday: 'Dung Today',\r\n    dungMonth: 'Dung This Month',\r\n    revenue: 'Revenue',\r\n    avgQuality: 'Avg Quality',\r\n    healthyHead: 'Healthy',\r\n    sickHead: 'Sick',\r\n    recentCollections: 'Recent Collections',\r\n    topPerformers: 'Top Performers',\r\n    quickActions: 'Quick Actions',\r\n    addCattle: 'Add Cattle',\r\n    viewReports: 'View Reports',\r\n    createTransaction: 'Record Dung Collection',\r\n    systemHealth: 'System Health',\r\n    kg: 'kg',\r\n    collections: 'collections',\r\n    worker: 'Worker',\r\n    quality: 'Quality',\r\n    status: 'Status',\r\n    completed: 'Completed',\r\n    processing: 'Processing',\r\n    failed: 'Failed',\r\n    digestor: 'Digestor',\r\n    timeAgo: 'ago',\r\n    minutes: 'min',\r\n    hours: 'h',\r\n    days: 'd',\r\n    createTransactionTitle: 'Record Dung Collection',\r\n    selectCattle: 'Select Cattle',\r\n    enterWeight: 'Enter Weight (kg)',\r\n    addNotes: 'Add Notes (Optional)',\r\n    cancel: 'Cancel',\r\n    submit: 'Submit',\r\n    required: 'This field is required'\r\n  },\r\n  hi: {\r\n    dashboard: 'डैशबोर्ड',\r\n    totalCows: 'कुल पशु',\r\n    cowsIn: 'आने वाले पशु',\r\n    cowsOut: 'जाने वाले पशु',\r\n    dungToday: 'आज का गोबर',\r\n    dungMonth: 'इस महीने का गोबर',\r\n    revenue: 'आय',\r\n    avgQuality: 'औसत गुणवत्ता',\r\n    healthyHead: 'स्वस्थ',\r\n    sickHead: 'बीमार',\r\n    recentCollections: 'हाल के संग्रह',\r\n    topPerformers: 'शीर्ष कार्यकर्ता',\r\n    quickActions: 'त्वरित कार्य',\r\n    addCattle: 'पशु जोड़ें',\r\n    viewReports: 'रिपोर्ट देखें',\r\n    createTransaction: 'गोबर संग्रह रिकॉर्ड करें',\r\n    systemHealth: 'सिस्टम स्वास्थ्य',\r\n    kg: 'किलो',\r\n    collections: 'संग्रह',\r\n    worker: 'कार्यकर्ता',\r\n    quality: 'गुणवत्ता',\r\n    status: 'स्थिति',\r\n    completed: 'पूर्ण',\r\n    processing: 'प्रक्रिया में',\r\n    failed: 'असफल',\r\n    digestor: 'डाइजेस्टर',\r\n    timeAgo: 'पहले',\r\n    minutes: 'मिनट',\r\n    hours: 'घंटे',\r\n    days: 'दिन',\r\n    createTransactionTitle: 'गोबर संग्रह रिकॉर्ड करें',\r\n    selectCattle: 'पशु चुनें',\r\n    enterWeight: 'वजन दर्ज करें (किलो)',\r\n    addNotes: 'टिप्पणी जोड़ें (वैकल्पिक)',\r\n    cancel: 'रद्द करें',\r\n    submit: 'जमा करें',\r\n    required: 'यह फील्ड आवश्यक है'\r\n  }\r\n};\r\n\r\ninterface Props {\r\n  languageContext: LanguageContextType;\r\n}\r\n\r\nexport default function GauShalaHome({ languageContext }: Props) {\r\n  const { language, t: globalT } = languageContext;\r\n  const navigate = useNavigate();\r\n  const [stats, setStats] = useState<DashboardStats>({\r\n    totalCows: 0,\r\n    cowsIn: 0,\r\n    cowsOut: 0,\r\n    dungCollectionToday: 0,\r\n    dungCollectionMonth: 0,\r\n    totalRevenue: 0,\r\n    averageQuality: 0,\r\n    activeWorkers: 0,\r\n    healthyCows: 0,\r\n    sickCows: 0,\r\n    recentCollections: [],\r\n    topPerformers: []\r\n  });\r\n  const [loading, setLoading] = useState(true);\r\n  const [showTransactionModal, setShowTransactionModal] = useState(false);\r\n  const [transactionForm, setTransactionForm] = useState({\r\n    cattleId: '',\r\n    weight: '',\r\n    notes: ''\r\n  });\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const t = (key: string): string => {\r\n    return translations[language][key as keyof typeof translations['en']] || key;\r\n  };\r\n\r\n  // Fetch dashboard data from API\r\n  useEffect(() => {\r\n    fetchDashboardData();\r\n  }, []);\r\n\r\n  const fetchDashboardData = async () => {\r\n    try {\r\n      setLoading(true);\r\n\r\n      // Fetch dashboard statistics from API\r\n      const statsResponse = await gauShalaApi.dashboard.getStats();\r\n\r\n      if (statsResponse.success && statsResponse.data) {\r\n        setStats(statsResponse.data);\r\n      } else {\r\n        console.error('Failed to fetch dashboard stats:', statsResponse.error);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching dashboard data:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const formatTimeAgo = (timestamp: number): string => {\r\n    const now = Date.now();\r\n    const diff = now - timestamp;\r\n    const minutes = Math.floor(diff / (1000 * 60));\r\n    const hours = Math.floor(diff / (1000 * 60 * 60));\r\n    const days = Math.floor(diff / (1000 * 60 * 60 * 24));\r\n\r\n    if (days > 0) {\r\n      return `${days} ${t('days')} ${t('timeAgo')}`;\r\n    } else if (hours > 0) {\r\n      return `${hours} ${t('hours')} ${t('timeAgo')}`;\r\n    } else {\r\n      return `${minutes} ${t('minutes')} ${t('timeAgo')}`;\r\n    }\r\n  };\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'completed':\r\n        return 'bg-green-100 text-green-800';\r\n      case 'processing':\r\n        return 'bg-yellow-100 text-yellow-800';\r\n      case 'failed':\r\n        return 'bg-red-100 text-red-800';\r\n      default:\r\n        return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  const handleTransactionSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    if (!transactionForm.cattleId || !transactionForm.weight) {\r\n      alert(t('required'));\r\n      return;\r\n    }\r\n\r\n    setIsSubmitting(true);\r\n    try {\r\n      const transactionData = {\r\n        cattleId: transactionForm.cattleId,\r\n        weight: parseFloat(transactionForm.weight),\r\n        notes: transactionForm.notes,\r\n        type: 'dung_collection',\r\n        timestamp: new Date().toISOString()\r\n      };\r\n\r\n      const response = await gauShalaApi.transactions.createTransaction(transactionData);\r\n\r\n      if (response.success) {\r\n        // Reset form and close modal\r\n        setTransactionForm({ cattleId: '', weight: '', notes: '' });\r\n        setShowTransactionModal(false);\r\n\r\n        // Refresh data to show new transaction\r\n        fetchDashboardData();\r\n\r\n        alert('Transaction recorded successfully!');\r\n      } else {\r\n        throw new Error(response.error || 'Failed to create transaction');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error creating transaction:', error);\r\n      alert('Failed to record transaction. Please try again.');\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-[400px]\">\r\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"px-4 py-3 space-y-3 bg-gray-50 min-h-full\">\r\n      {/* Page Header */}\r\n      <div className=\"mb-1\">\r\n        <h1 className=\"text-2xl font-bold text-gray-900\">Dashboard Overview</h1>\r\n        <p className=\"text-sm text-gray-600\">Monitor your cattle management and collection metrics</p>\r\n      </div>\r\n\r\n      {/* Statistics Cards */}\r\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-2\">\r\n        {/* Total Cattle */}\r\n        <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 hover:shadow-lg transition-all duration-300 hover:scale-[1.02] overflow-hidden\">\r\n          <div className=\"h-1 bg-gradient-to-r from-blue-500 to-blue-600\"></div>\r\n          <div className=\"p-4\">\r\n            <div className=\"flex items-start justify-between\">\r\n              <div className=\"flex-1\">\r\n                <div className=\"flex items-center justify-between mb-2\">\r\n                  <p className=\"text-sm font-medium text-blue-700\">{t('totalCows')}</p>\r\n                  <div className=\"p-2 bg-blue-50 rounded-lg\">\r\n                    <span className=\"text-2xl\">🐄</span>\r\n                  </div>\r\n                </div>\r\n                <p className=\"text-3xl font-bold text-gray-900 mb-3\">{stats.totalCows}</p>\r\n\r\n                {/* Trend Indicators */}\r\n                <div className=\"space-y-2\">\r\n                  <div className=\"flex items-center justify-between text-sm\">\r\n                    <div className=\"flex items-center text-emerald-600\">\r\n                      <div className=\"w-2 h-2 bg-emerald-500 rounded-full mr-2\"></div>\r\n                      <span className=\"font-medium\">{stats.cowsIn} In Today</span>\r\n                    </div>\r\n                    <div className=\"flex items-center text-green-600\">\r\n                      <TrendingUp className=\"h-3 w-3 mr-1\" />\r\n                      <span className=\"text-xs font-medium\">+8%</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"flex items-center justify-between text-sm\">\r\n                    <div className=\"flex items-center text-red-600\">\r\n                      <div className=\"w-2 h-2 bg-red-500 rounded-full mr-2\"></div>\r\n                      <span className=\"font-medium\">{stats.cowsOut} Out Today</span>\r\n                    </div>\r\n                    <div className=\"flex items-center text-red-600\">\r\n                      <TrendingDown className=\"h-3 w-3 mr-1\" />\r\n                      <span className=\"text-xs font-medium\">-3%</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Dung Collection Today */}\r\n        <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 hover:shadow-lg transition-all duration-300 hover:scale-[1.02] overflow-hidden\">\r\n          <div className=\"h-1 bg-gradient-to-r from-green-500 to-green-600\"></div>\r\n          <div className=\"p-4\">\r\n            <div className=\"flex items-start justify-between\">\r\n              <div className=\"flex-1\">\r\n                <div className=\"flex items-center justify-between mb-2\">\r\n                  <p className=\"text-sm font-medium text-green-700\">{t('dungToday')}</p>\r\n                  <div className=\"p-2 bg-green-50 rounded-lg\">\r\n                    <Scale className=\"h-5 w-5 text-green-600\" />\r\n                  </div>\r\n                </div>\r\n                <p className=\"text-3xl font-bold text-gray-900 mb-1\">{stats.dungCollectionToday}</p>\r\n                <p className=\"text-sm text-gray-500 mb-2\">kg collected today</p>\r\n\r\n                {/* Progress indicator */}\r\n                <div className=\"space-y-2\">\r\n                  <div className=\"flex items-center justify-between text-sm\">\r\n                    <span className=\"text-gray-600\">This month: {stats.dungCollectionMonth} kg</span>\r\n                    <div className=\"flex items-center text-green-600\">\r\n                      <TrendingUp className=\"h-3 w-3 mr-1\" />\r\n                      <span className=\"text-xs font-medium\">+15%</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"w-full bg-gray-200 rounded-full h-2\">\r\n                    <div className=\"bg-green-500 h-2 rounded-full\" style={{width: `${Math.min((stats.dungCollectionToday / 100) * 100, 100)}%`}}></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Revenue */}\r\n        <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-4 hover:shadow-md transition-shadow\">\r\n          <div className=\"flex items-start justify-between\">\r\n            <div className=\"flex-1\">\r\n              <div className=\"flex items-center justify-between mb-2\">\r\n                <p className=\"text-sm font-medium text-gray-600\">{t('revenue')}</p>\r\n                <div className=\"p-2 bg-blue-50 rounded-lg\">\r\n                  <DollarSign className=\"h-5 w-5 text-blue-600\" />\r\n                </div>\r\n              </div>\r\n              <p className=\"text-3xl font-bold text-gray-900 mb-1\">₹{stats.totalRevenue.toLocaleString('hi-IN')}</p>\r\n              <p className=\"text-sm text-gray-500 mb-2\">total revenue</p>\r\n\r\n              {/* Trend with comparison */}\r\n              <div className=\"space-y-2\">\r\n                <div className=\"flex items-center justify-between text-sm\">\r\n                  <span className=\"text-gray-600\">vs last month</span>\r\n                  <div className=\"flex items-center text-green-600\">\r\n                    <TrendingUp className=\"h-3 w-3 mr-1\" />\r\n                    <span className=\"text-xs font-medium\">+12.5%</span>\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex items-center text-xs text-gray-500\">\r\n                  <div className=\"w-2 h-2 bg-green-500 rounded-full mr-2\"></div>\r\n                  <span>Above target by ₹2,340</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Health & Quality Status */}\r\n        <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-4 hover:shadow-md transition-shadow\">\r\n          <div className=\"flex items-start justify-between\">\r\n            <div className=\"flex-1\">\r\n              <div className=\"flex items-center justify-between mb-2\">\r\n                <p className=\"text-sm font-medium text-gray-600\">{t('avgQuality')}</p>\r\n                <div className=\"p-2 bg-purple-50 rounded-lg\">\r\n                  <Activity className=\"h-5 w-5 text-purple-600\" />\r\n                </div>\r\n              </div>\r\n              <p className=\"text-3xl font-bold text-gray-900 mb-1\">{stats.averageQuality}<span className=\"text-lg text-gray-500\">/10</span></p>\r\n              <p className=\"text-sm text-gray-500 mb-2\">average quality score</p>\r\n\r\n              {/* Health breakdown */}\r\n              <div className=\"space-y-2\">\r\n                <div className=\"flex items-center justify-between text-sm\">\r\n                  <div className=\"flex items-center text-emerald-600\">\r\n                    <CheckCircle className=\"h-3 w-3 mr-1\" />\r\n                    <span className=\"font-medium\">{stats.healthyCows} Healthy</span>\r\n                  </div>\r\n                  <span className=\"text-xs text-gray-500\">95%</span>\r\n                </div>\r\n                <div className=\"flex items-center justify-between text-sm\">\r\n                  <div className=\"flex items-center text-red-600\">\r\n                    <AlertCircle className=\"h-3 w-3 mr-1\" />\r\n                    <span className=\"font-medium\">{stats.sickCows} Need Care</span>\r\n                  </div>\r\n                  <span className=\"text-xs text-gray-500\">5%</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Quick Actions */}\r\n      <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\r\n        <div className=\"flex items-center justify-between mb-6\">\r\n          <div>\r\n            <h3 className=\"text-lg font-semibold text-gray-900\">{t('quickActions')}</h3>\r\n            <p className=\"text-sm text-gray-600 mt-1\">Fast access to common tasks</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n          <button\r\n            onClick={() => navigate('/gaushala/cattle/add')}\r\n            className=\"flex items-center p-5 bg-gradient-to-r from-blue-50 to-blue-100/50 rounded-xl hover:from-blue-100 hover:to-blue-150 transition-all duration-200 group border border-blue-200/50\"\r\n          >\r\n            <div className=\"p-3 bg-blue-600 rounded-xl group-hover:bg-blue-700 transition-colors shadow-sm\">\r\n              <Plus className=\"h-5 w-5 text-white\" />\r\n            </div>\r\n            <div className=\"ml-4 text-left\">\r\n              <p className=\"font-semibold text-gray-900 group-hover:text-blue-900\">{t('addCattle')}</p>\r\n              <p className=\"text-sm text-gray-600 mt-0.5\">Register new cattle with RFID</p>\r\n            </div>\r\n          </button>\r\n\r\n          <button\r\n            onClick={() => navigate('/gaushala/cattle')}\r\n            className=\"flex items-center p-5 bg-gradient-to-r from-emerald-50 to-emerald-100/50 rounded-xl hover:from-emerald-100 hover:to-emerald-150 transition-all duration-200 group border border-emerald-200/50\"\r\n          >\r\n            <div className=\"p-3 bg-emerald-600 rounded-xl group-hover:bg-emerald-700 transition-colors shadow-sm\">\r\n              <Eye className=\"h-5 w-5 text-white\" />\r\n            </div>\r\n            <div className=\"ml-4 text-left\">\r\n              <p className=\"font-semibold text-gray-900 group-hover:text-emerald-900\">{t('viewReports')}</p>\r\n              <p className=\"text-sm text-gray-600 mt-0.5\">Analytics and performance reports</p>\r\n            </div>\r\n          </button>\r\n\r\n          <button\r\n            onClick={() => navigate('/gaushala/transactions/create')}\r\n            className=\"flex items-center p-5 bg-gradient-to-r from-orange-50 to-orange-100/50 rounded-xl hover:from-orange-100 hover:to-orange-150 transition-all duration-200 group border border-orange-200/50\"\r\n          >\r\n            <div className=\"p-3 bg-orange-600 rounded-xl group-hover:bg-orange-700 transition-colors shadow-sm\">\r\n              <Scale className=\"h-5 w-5 text-white\" />\r\n            </div>\r\n            <div className=\"ml-4 text-left\">\r\n              <p className=\"font-semibold text-gray-900 group-hover:text-orange-900\">{t('createTransaction')}</p>\r\n              <p className=\"text-sm text-gray-600 mt-0.5\">Record new dung collection transaction</p>\r\n            </div>\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-3\">\r\n        {/* Recent Collections */}\r\n        <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-4\">\r\n          <div className=\"flex items-center justify-between mb-4\">\r\n            <div>\r\n              <h3 className=\"text-lg font-semibold text-gray-900\">{t('recentCollections')}</h3>\r\n              <p className=\"text-sm text-gray-600 mt-1\">Latest dung collection activities</p>\r\n            </div>\r\n            <button className=\"px-3 py-1.5 text-blue-600 hover:bg-blue-50 rounded-lg text-sm font-medium transition-colors\">\r\n              View All\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"space-y-3\">\r\n            {stats.recentCollections.length === 0 ? (\r\n              <div className=\"text-center py-4 text-gray-500\">\r\n                <Activity className=\"h-12 w-12 mx-auto mb-3 text-gray-400\" />\r\n                <p className=\"text-sm\">No recent collections</p>\r\n              </div>\r\n            ) : (\r\n              stats.recentCollections.map((collection) => (\r\n                <div key={collection.id} className=\"border border-gray-200 rounded-lg p-4 hover:bg-gray-50 transition-colors\">\r\n                  <div className=\"flex items-start justify-between\">\r\n                    <div className=\"flex-1\">\r\n                      <div className=\"flex items-center justify-between mb-2\">\r\n                        <h4 className=\"font-semibold text-gray-900\">{collection.cattleName}</h4>\r\n                        <span className={`px-2.5 py-1 rounded-full text-xs font-semibold ${getStatusColor(collection.status)}`}>\r\n                          {t(collection.status)}\r\n                        </span>\r\n                      </div>\r\n\r\n                      <div className=\"grid grid-cols-2 gap-4 text-sm mb-2\">\r\n                        <div className=\"flex items-center text-gray-600\">\r\n                          <Scale className=\"h-3.5 w-3.5 mr-1.5 text-gray-400\" />\r\n                          <span className=\"font-medium\">{collection.weight} kg</span>\r\n                        </div>\r\n                        <div className=\"flex items-center text-gray-600\">\r\n                          <Activity className=\"h-3.5 w-3.5 mr-1.5 text-gray-400\" />\r\n                          <span>Quality: {collection.quality}/10</span>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"flex items-center justify-between text-xs text-gray-500\">\r\n                        <span>Worker: {collection.worker}</span>\r\n                        <span>{formatTimeAgo(collection.timestamp)}</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Top Performers */}\r\n        <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-4\">\r\n          <div className=\"flex items-center justify-between mb-4\">\r\n            <div>\r\n              <h3 className=\"text-lg font-semibold text-gray-900\">{t('topPerformers')}</h3>\r\n              <p className=\"text-sm text-gray-600 mt-1\">Best performing workers this month</p>\r\n            </div>\r\n            <button className=\"px-3 py-1.5 text-blue-600 hover:bg-blue-50 rounded-lg text-sm font-medium transition-colors\">\r\n              View All\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"space-y-3\">\r\n            {stats.topPerformers.length === 0 ? (\r\n              <div className=\"text-center py-4 text-gray-500\">\r\n                <Users className=\"h-12 w-12 mx-auto mb-3 text-gray-400\" />\r\n                <p className=\"text-sm\">No performance data yet</p>\r\n              </div>\r\n            ) : (\r\n              stats.topPerformers.map((performer, index) => (\r\n                <div key={performer.name} className=\"border border-gray-200 rounded-lg p-4 hover:bg-gray-50 transition-colors\">\r\n                  <div className=\"flex items-center\">\r\n                    <div className=\"flex-shrink-0 mr-4\">\r\n                      <div className={`h-10 w-10 rounded-full flex items-center justify-center text-white font-bold text-sm ${\r\n                        index === 0 ? 'bg-gradient-to-r from-green-400 to-green-500' :\r\n                        index === 1 ? 'bg-gradient-to-r from-gray-400 to-gray-600' :\r\n                        index === 2 ? 'bg-gradient-to-r from-purple-600 to-purple-700' :\r\n                        'bg-gradient-to-r from-blue-500 to-blue-600'\r\n                      }`}>\r\n                        #{index + 1}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"flex-1\">\r\n                      <h4 className=\"font-semibold text-gray-900 mb-1\">{performer.name}</h4>\r\n                      <div className=\"grid grid-cols-3 gap-4 text-sm text-gray-600\">\r\n                        <div className=\"flex flex-col\">\r\n                          <span className=\"text-xs text-gray-500\">Collections</span>\r\n                          <span className=\"font-semibold\">{performer.collections}</span>\r\n                        </div>\r\n                        <div className=\"flex flex-col\">\r\n                          <span className=\"text-xs text-gray-500\">Total Weight</span>\r\n                          <span className=\"font-semibold\">{performer.totalWeight} kg</span>\r\n                        </div>\r\n                        <div className=\"flex flex-col\">\r\n                          <span className=\"text-xs text-gray-500\">Avg Quality</span>\r\n                          <span className=\"font-semibold\">{performer.avgQuality}/10</span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Transaction Modal */}\r\n      {showTransactionModal && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <div className=\"bg-white rounded-lg p-6 w-full max-w-md mx-4\">\r\n            <div className=\"flex items-center justify-between mb-4\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900\">{t('createTransactionTitle')}</h3>\r\n              <button\r\n                onClick={() => setShowTransactionModal(false)}\r\n                className=\"text-gray-400 hover:text-gray-600\"\r\n              >\r\n                <X className=\"h-5 w-5\" />\r\n              </button>\r\n            </div>\r\n\r\n            <form onSubmit={handleTransactionSubmit} className=\"space-y-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  {t('selectCattle')} *\r\n                </label>\r\n                <select\r\n                  value={transactionForm.cattleId}\r\n                  onChange={(e) => setTransactionForm(prev => ({ ...prev, cattleId: e.target.value }))}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                  required\r\n                >\r\n                  <option value=\"\">{t('selectCattle')}</option>\r\n                  <option value=\"cattle-001\">Ganga (RFID: RF001)</option>\r\n                  <option value=\"cattle-002\">Yamuna (RFID: RF002)</option>\r\n                  <option value=\"cattle-003\">Saraswati (RFID: RF003)</option>\r\n                </select>\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  {t('enterWeight')} *\r\n                </label>\r\n                <input\r\n                  type=\"number\"\r\n                  step=\"0.1\"\r\n                  min=\"0\"\r\n                  value={transactionForm.weight}\r\n                  onChange={(e) => setTransactionForm(prev => ({ ...prev, weight: e.target.value }))}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                  placeholder=\"0.0\"\r\n                  required\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  {t('addNotes')}\r\n                </label>\r\n                <textarea\r\n                  value={transactionForm.notes}\r\n                  onChange={(e) => setTransactionForm(prev => ({ ...prev, notes: e.target.value }))}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                  rows={3}\r\n                  placeholder=\"Optional notes about the collection...\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"flex space-x-3 pt-4\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setShowTransactionModal(false)}\r\n                  className=\"flex-1 px-4 py-2 border border-gray-300 text-gray-700 rounded-md hover:bg-gray-50 transition-colors\"\r\n                  disabled={isSubmitting}\r\n                >\r\n                  {t('cancel')}\r\n                </button>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"flex-1 px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors disabled:opacity-50 flex items-center justify-center\"\r\n                  disabled={isSubmitting}\r\n                >\r\n                  {isSubmitting ? (\r\n                    <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\r\n                  ) : (\r\n                    <Save className=\"h-4 w-4 mr-2\" />\r\n                  )}\r\n                  {t('submit')}\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}","/**\r\n * Authentication Utilities\r\n * Handles JWT token parsing and user context extraction\r\n */\r\n\r\n// JWT token storage key\r\nconst TOKEN_STORAGE_KEY = 'saubhagya_jwt_token';\r\n\r\n/**\r\n * JWT Token Payload interface based on backend token structure\r\n * Reference: Services/auth-service JWT implementation\r\n */\r\ninterface JwtPayload {\r\n  user_id: string;\r\n  phone: string;\r\n  name: string;\r\n  roles: string[];\r\n  permissions: string[];\r\n  locale: string;\r\n  kyc_status: string;\r\n  government_access: string[];\r\n  gaushalaId?: number;  // Optional: User's assigned gaushala\r\n  sub: string;  // Subject (phone number)\r\n  jti: string;  // JWT ID\r\n  iat: number;  // Issued at\r\n  exp: number;  // Expiration time\r\n}\r\n\r\n/**\r\n * User context extracted from JWT token\r\n */\r\nexport interface UserContext {\r\n  userId: string;\r\n  phone: string;\r\n  name: string;\r\n  roles: string[];\r\n  permissions: string[];\r\n  locale: string;\r\n  kycStatus: string;\r\n  gaushalaId: number | null;\r\n  isAuthenticated: boolean;\r\n}\r\n\r\n/**\r\n * Parse JWT token and extract payload\r\n * @param token - JWT token string\r\n * @returns Decoded JWT payload or null if invalid\r\n */\r\nexport function parseJwtToken(token: string): JwtPayload | null {\r\n  try {\r\n    // JWT format: header.payload.signature\r\n    const parts = token.split('.');\r\n    if (parts.length !== 3) {\r\n      console.error('Invalid JWT token format');\r\n      return null;\r\n    }\r\n\r\n    // Decode base64 payload (middle part)\r\n    const payload = parts[1];\r\n    const decodedPayload = atob(payload);\r\n    const parsedPayload: JwtPayload = JSON.parse(decodedPayload);\r\n\r\n    // Validate token expiration\r\n    const now = Math.floor(Date.now() / 1000);\r\n    if (parsedPayload.exp && parsedPayload.exp < now) {\r\n      console.warn('JWT token has expired');\r\n      return null;\r\n    }\r\n\r\n    return parsedPayload;\r\n  } catch (error) {\r\n    console.error('Failed to parse JWT token:', error);\r\n    return null;\r\n  }\r\n}\r\n\r\n/**\r\n * Get JWT token from localStorage\r\n * @returns JWT token string or null if not found\r\n */\r\nexport function getStoredToken(): string | null {\r\n  try {\r\n    return localStorage.getItem(TOKEN_STORAGE_KEY);\r\n  } catch (error) {\r\n    console.error('Failed to retrieve token from localStorage:', error);\r\n    return null;\r\n  }\r\n}\r\n\r\n/**\r\n * Get current user context from stored JWT token\r\n * @returns UserContext with user details or default unauthenticated context\r\n */\r\nexport function getCurrentUserContext(): UserContext {\r\n  const token = getStoredToken();\r\n\r\n  if (!token) {\r\n    return {\r\n      userId: '',\r\n      phone: '',\r\n      name: '',\r\n      roles: [],\r\n      permissions: [],\r\n      locale: 'en',\r\n      kycStatus: 'PENDING',\r\n      gaushalaId: null,\r\n      isAuthenticated: false,\r\n    };\r\n  }\r\n\r\n  const payload = parseJwtToken(token);\r\n\r\n  if (!payload) {\r\n    return {\r\n      userId: '',\r\n      phone: '',\r\n      name: '',\r\n      roles: [],\r\n      permissions: [],\r\n      locale: 'en',\r\n      kycStatus: 'PENDING',\r\n      gaushalaId: null,\r\n      isAuthenticated: false,\r\n    };\r\n  }\r\n\r\n  return {\r\n    userId: payload.user_id,\r\n    phone: payload.phone,\r\n    name: payload.name,\r\n    roles: payload.roles || [],\r\n    permissions: payload.permissions || [],\r\n    locale: payload.locale || 'en',\r\n    kycStatus: payload.kyc_status || 'PENDING',\r\n    gaushalaId: payload.gaushalaId || null,\r\n    isAuthenticated: true,\r\n  };\r\n}\r\n\r\n/**\r\n * Get logged-in user's gaushalaId\r\n * @returns Gaushala ID or null if not assigned\r\n */\r\nexport function getLoggedInUserGaushalaId(): number | null {\r\n  const userContext = getCurrentUserContext();\r\n  return userContext.gaushalaId;\r\n}\r\n\r\n/**\r\n * Check if user has specific permission\r\n * @param permission - Permission string (e.g., 'iot:read', 'transaction:write')\r\n * @returns True if user has the permission\r\n */\r\nexport function hasPermission(permission: string): boolean {\r\n  const userContext = getCurrentUserContext();\r\n  return userContext.permissions.includes(permission);\r\n}\r\n\r\n/**\r\n * Check if user has specific role\r\n * @param role - Role string (e.g., 'FARMER', 'ADMIN', 'OPERATOR')\r\n * @returns True if user has the role\r\n */\r\nexport function hasRole(role: string): boolean {\r\n  const userContext = getCurrentUserContext();\r\n  return userContext.roles.includes(role);\r\n}\r\n\r\n/**\r\n * Check if JWT token is expired\r\n * @returns True if token is expired or invalid\r\n */\r\nexport function isTokenExpired(): boolean {\r\n  const token = getStoredToken();\r\n  if (!token) return true;\r\n\r\n  const payload = parseJwtToken(token);\r\n  if (!payload) return true;\r\n\r\n  const now = Math.floor(Date.now() / 1000);\r\n  return payload.exp < now;\r\n}\r\n\r\n/**\r\n * Clear stored authentication token (logout)\r\n */\r\nexport function clearAuthToken(): void {\r\n  try {\r\n    localStorage.removeItem(TOKEN_STORAGE_KEY);\r\n  } catch (error) {\r\n    console.error('Failed to clear auth token:', error);\r\n  }\r\n}\r\n\r\n/**\r\n * Store JWT token in localStorage\r\n * @param token - JWT token string\r\n */\r\nexport function storeAuthToken(token: string): void {\r\n  try {\r\n    localStorage.setItem(TOKEN_STORAGE_KEY, token);\r\n  } catch (error) {\r\n    console.error('Failed to store auth token:', error);\r\n  }\r\n}\r\n","/**\r\n * Cow Dung Transaction Recording Component\r\n * Integrates with biogas service for contribution tracking\r\n */\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport {\r\n  Scale,\r\n  MapPin,\r\n  CreditCard,\r\n  CheckCircle,\r\n  AlertTriangle,\r\n  Clock,\r\n  User,\r\n  Calendar,\r\n  Save,\r\n  X,\r\n  Star,\r\n  TrendingUp,\r\n  Coins\r\n} from 'lucide-react';\r\nimport { BiogasServiceClient } from '../../services/microservices';\r\n\r\ninterface TransactionFormData {\r\n  cattleId: string;\r\n  farmerId: string;\r\n  farmerName: string;\r\n  weightKg: string;\r\n  ratePerKg: string;\r\n  totalAmount: string;\r\n  paymentMethod: 'UPI' | 'CASH' | 'NEFT' | 'AEPS';\r\n  qualityGrade: 'PREMIUM' | 'STANDARD' | 'BASIC';\r\n  moistureContent: string;\r\n  gpsLatitude: string;\r\n  gpsLongitude: string;\r\n  deviceReadingId?: string;\r\n  notes?: string;\r\n}\r\n\r\ninterface Cattle {\r\n  id: string;\r\n  name: string;\r\n  rfidTag: string;\r\n  owner: string;\r\n  ownerId: string;\r\n}\r\n\r\ninterface Props {\r\n  cattle?: Cattle;\r\n  onClose: () => void;\r\n  onSuccess: (transaction: any) => void;\r\n}\r\n\r\nconst qualityRates = {\r\n  PREMIUM: 15.0,  // ₹15 per kg for premium quality\r\n  STANDARD: 12.0, // ₹12 per kg for standard quality\r\n  BASIC: 8.0      // ₹8 per kg for basic quality\r\n};\r\n\r\nconst translations = {\r\n  en: {\r\n    title: 'Record Cow Dung Collection',\r\n    subtitle: 'Add new contribution to biogas production',\r\n    farmerInfo: 'Farmer Information',\r\n    farmerName: 'Farmer Name',\r\n    farmerId: 'Farmer ID',\r\n    collectionDetails: 'Collection Details',\r\n    weight: 'Weight (kg)',\r\n    qualityGrade: 'Quality Grade',\r\n    premium: 'Premium',\r\n    standard: 'Standard',\r\n    basic: 'Basic',\r\n    moistureContent: 'Moisture Content (%)',\r\n    location: 'Collection Location',\r\n    latitude: 'Latitude',\r\n    longitude: 'Longitude',\r\n    getCurrentLocation: 'Get Current Location',\r\n    paymentDetails: 'Payment Details',\r\n    ratePerKg: 'Rate per kg (₹)',\r\n    totalAmount: 'Total Amount (₹)',\r\n    paymentMethod: 'Payment Method',\r\n    additionalInfo: 'Additional Information',\r\n    deviceId: 'Device Reading ID',\r\n    notes: 'Notes',\r\n    recordTransaction: 'Record Transaction',\r\n    cancel: 'Cancel',\r\n    processing: 'Processing...',\r\n    success: 'Transaction recorded successfully!',\r\n    error: 'Failed to record transaction. Please try again.',\r\n    requiredField: 'This field is required',\r\n    invalidWeight: 'Weight must be greater than 0',\r\n    invalidRate: 'Rate must be greater than 0'\r\n  },\r\n  hi: {\r\n    title: 'गोबर संग्रह रिकॉर्ड करें',\r\n    subtitle: 'बायोगैस उत्पादन में नया योगदान जोड़ें',\r\n    farmerInfo: 'किसान की जानकारी',\r\n    farmerName: 'किसान का नाम',\r\n    farmerId: 'किसान ID',\r\n    collectionDetails: 'संग्रह विवरण',\r\n    weight: 'वजन (किलो)',\r\n    qualityGrade: 'गुणवत्ता श्रेणी',\r\n    premium: 'प्रीमियम',\r\n    standard: 'मानक',\r\n    basic: 'बेसिक',\r\n    moistureContent: 'नमी की मात्रा (%)',\r\n    location: 'संग्रह स्थान',\r\n    latitude: 'अक्षांश',\r\n    longitude: 'देशांतर',\r\n    getCurrentLocation: 'वर्तमान स्थान लें',\r\n    paymentDetails: 'भुगतान विवरण',\r\n    ratePerKg: 'प्रति किलो दर (₹)',\r\n    totalAmount: 'कुल राशि (₹)',\r\n    paymentMethod: 'भुगतान विधि',\r\n    additionalInfo: 'अतिरिक्त जानकारी',\r\n    deviceId: 'डिवाइस रीडिंग ID',\r\n    notes: 'टिप्पणी',\r\n    recordTransaction: 'लेनदेन रिकॉर्ड करें',\r\n    cancel: 'रद्द करें',\r\n    processing: 'प्रसंस्करण...',\r\n    success: 'लेनदेन सफलतापूर्वक रिकॉर्ड हुआ!',\r\n    error: 'लेनदेन रिकॉर्ड करने में विफल। कृपया पुनः प्रयास करें।',\r\n    requiredField: 'यह फ़ील्ड आवश्यक है',\r\n    invalidWeight: 'वजन 0 से अधिक होना चाहिए',\r\n    invalidRate: 'दर 0 से अधिक होनी चाहिए'\r\n  }\r\n};\r\n\r\nexport default function CowDungTransaction({ cattle, onClose, onSuccess }: Props) {\r\n  const [language] = useState<'en' | 'hi'>('en');\r\n  const [formData, setFormData] = useState<TransactionFormData>({\r\n    cattleId: cattle?.id || '',\r\n    farmerId: cattle?.ownerId || '',\r\n    farmerName: cattle?.owner || '',\r\n    weightKg: '',\r\n    ratePerKg: qualityRates.STANDARD.toString(),\r\n    totalAmount: '0.00',\r\n    paymentMethod: 'UPI',\r\n    qualityGrade: 'STANDARD',\r\n    moistureContent: '65',\r\n    gpsLatitude: '',\r\n    gpsLongitude: '',\r\n    deviceReadingId: '',\r\n    notes: ''\r\n  });\r\n\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [errors, setErrors] = useState<Record<string, string>>({});\r\n  const [locationStatus, setLocationStatus] = useState<'idle' | 'loading' | 'success' | 'error'>('idle');\r\n\r\n  const t = (key: string): string => {\r\n    return translations[language][key as keyof typeof translations['en']] || key;\r\n  };\r\n\r\n  // Calculate total amount when weight or quality changes\r\n  useEffect(() => {\r\n    const weight = parseFloat(formData.weightKg);\r\n    const rate = parseFloat(formData.ratePerKg);\r\n\r\n    if (!isNaN(weight) && !isNaN(rate) && weight > 0 && rate > 0) {\r\n      const total = (weight * rate).toFixed(2);\r\n      setFormData(prev => ({ ...prev, totalAmount: total }));\r\n    } else {\r\n      setFormData(prev => ({ ...prev, totalAmount: '0.00' }));\r\n    }\r\n  }, [formData.weightKg, formData.ratePerKg]);\r\n\r\n  // Update rate when quality grade changes\r\n  useEffect(() => {\r\n    const newRate = qualityRates[formData.qualityGrade].toString();\r\n    setFormData(prev => ({ ...prev, ratePerKg: newRate }));\r\n  }, [formData.qualityGrade]);\r\n\r\n  const handleInputChange = (field: keyof TransactionFormData, value: string) => {\r\n    setFormData(prev => ({ ...prev, [field]: value }));\r\n\r\n    // Clear error for this field\r\n    if (errors[field]) {\r\n      setErrors(prev => ({ ...prev, [field]: '' }));\r\n    }\r\n  };\r\n\r\n  const getCurrentLocation = () => {\r\n    setLocationStatus('loading');\r\n\r\n    if (!navigator.geolocation) {\r\n      setLocationStatus('error');\r\n      alert('Geolocation is not supported by this browser.');\r\n      return;\r\n    }\r\n\r\n    navigator.geolocation.getCurrentPosition(\r\n      (position) => {\r\n        setFormData(prev => ({\r\n          ...prev,\r\n          gpsLatitude: position.coords.latitude.toFixed(6),\r\n          gpsLongitude: position.coords.longitude.toFixed(6)\r\n        }));\r\n        setLocationStatus('success');\r\n      },\r\n      (error) => {\r\n        console.error('Error getting location:', error);\r\n        setLocationStatus('error');\r\n        alert('Unable to get current location. Please enter manually.');\r\n      }\r\n    );\r\n  };\r\n\r\n  const validateForm = (): boolean => {\r\n    const newErrors: Record<string, string> = {};\r\n\r\n    if (!formData.farmerName.trim()) {\r\n      newErrors.farmerName = t('requiredField');\r\n    }\r\n\r\n    if (!formData.farmerId.trim()) {\r\n      newErrors.farmerId = t('requiredField');\r\n    }\r\n\r\n    const weight = parseFloat(formData.weightKg);\r\n    if (!formData.weightKg || isNaN(weight) || weight <= 0) {\r\n      newErrors.weightKg = t('invalidWeight');\r\n    }\r\n\r\n    const rate = parseFloat(formData.ratePerKg);\r\n    if (!formData.ratePerKg || isNaN(rate) || rate <= 0) {\r\n      newErrors.ratePerKg = t('invalidRate');\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    setIsSubmitting(true);\r\n\r\n    try {\r\n      const contributionData = {\r\n        externalId: `CONTRIB-${Date.now()}`,\r\n        farmerId: formData.farmerId,\r\n        farmerName: formData.farmerName,\r\n        cattleId: formData.cattleId,\r\n        deviceReadingId: formData.deviceReadingId || null,\r\n        contributionDate: new Date().toISOString(),\r\n        weightKg: parseFloat(formData.weightKg),\r\n        ratePerKg: parseFloat(formData.ratePerKg),\r\n        totalAmount: parseFloat(formData.totalAmount),\r\n        paymentMethod: formData.paymentMethod,\r\n        qualityGrade: formData.qualityGrade,\r\n        moistureContent: parseFloat(formData.moistureContent),\r\n        gpsLatitude: formData.gpsLatitude ? parseFloat(formData.gpsLatitude) : null,\r\n        gpsLongitude: formData.gpsLongitude ? parseFloat(formData.gpsLongitude) : null,\r\n        notes: formData.notes || null,\r\n        isSubsidyEligible: true,\r\n        carbonCreditEligible: true\r\n      };\r\n\r\n      const response = await BiogasServiceClient.recordContribution(contributionData);\r\n\r\n      if (response.success !== false) {\r\n        alert(t('success'));\r\n        onSuccess(response);\r\n        onClose();\r\n      } else {\r\n        throw new Error(response.message || 'Failed to record contribution');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error recording contribution:', error);\r\n      alert(t('error'));\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const getQualityColor = (grade: string) => {\r\n    switch (grade) {\r\n      case 'PREMIUM':\r\n        return 'bg-green-100 text-green-800 border-green-200';\r\n      case 'STANDARD':\r\n        return 'bg-blue-100 text-blue-800 border-blue-200';\r\n      case 'BASIC':\r\n        return 'bg-yellow-100 text-yellow-800 border-yellow-200';\r\n      default:\r\n        return 'bg-gray-100 text-gray-800 border-gray-200';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\r\n      <div className=\"bg-white rounded-xl max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\r\n        {/* Header */}\r\n        <div className=\"flex justify-between items-center p-6 border-b bg-gradient-to-r from-green-50 to-blue-50\">\r\n          <div>\r\n            <h3 className=\"text-xl font-semibold text-gray-900\">{t('title')}</h3>\r\n            <p className=\"text-gray-600\">{t('subtitle')}</p>\r\n            {cattle && (\r\n              <p className=\"text-sm text-green-600 mt-1\">\r\n                Cattle: {cattle.name} (ID: {cattle.rfidTag})\r\n              </p>\r\n            )}\r\n          </div>\r\n          <button\r\n            onClick={onClose}\r\n            className=\"text-gray-400 hover:text-gray-600 p-2 rounded-full hover:bg-gray-100\"\r\n          >\r\n            <X className=\"h-6 w-6\" />\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"p-6 space-y-6\">\r\n          {/* Farmer Information */}\r\n          <div className=\"bg-gray-50 rounded-lg p-4\">\r\n            <h4 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\r\n              <User className=\"h-5 w-5 mr-2 text-blue-600\" />\r\n              {t('farmerInfo')}\r\n            </h4>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  {t('farmerName')} *\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={formData.farmerName}\r\n                  onChange={(e) => handleInputChange('farmerName', e.target.value)}\r\n                  className={`w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 ${\r\n                    errors.farmerName ? 'border-red-300' : 'border-gray-300'\r\n                  }`}\r\n                />\r\n                {errors.farmerName && (\r\n                  <p className=\"text-red-600 text-sm mt-1\">{errors.farmerName}</p>\r\n                )}\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  {t('farmerId')} *\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={formData.farmerId}\r\n                  onChange={(e) => handleInputChange('farmerId', e.target.value)}\r\n                  className={`w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 ${\r\n                    errors.farmerId ? 'border-red-300' : 'border-gray-300'\r\n                  }`}\r\n                />\r\n                {errors.farmerId && (\r\n                  <p className=\"text-red-600 text-sm mt-1\">{errors.farmerId}</p>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Collection Details */}\r\n          <div className=\"bg-gray-50 rounded-lg p-4\">\r\n            <h4 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\r\n              <Scale className=\"h-5 w-5 mr-2 text-green-600\" />\r\n              {t('collectionDetails')}\r\n            </h4>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  {t('weight')} *\r\n                </label>\r\n                <input\r\n                  type=\"number\"\r\n                  step=\"0.1\"\r\n                  min=\"0\"\r\n                  value={formData.weightKg}\r\n                  onChange={(e) => handleInputChange('weightKg', e.target.value)}\r\n                  className={`w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 ${\r\n                    errors.weightKg ? 'border-red-300' : 'border-gray-300'\r\n                  }`}\r\n                />\r\n                {errors.weightKg && (\r\n                  <p className=\"text-red-600 text-sm mt-1\">{errors.weightKg}</p>\r\n                )}\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  {t('qualityGrade')}\r\n                </label>\r\n                <select\r\n                  value={formData.qualityGrade}\r\n                  onChange={(e) => handleInputChange('qualityGrade', e.target.value)}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                >\r\n                  <option value=\"PREMIUM\">{t('premium')} (₹{qualityRates.PREMIUM}/kg)</option>\r\n                  <option value=\"STANDARD\">{t('standard')} (₹{qualityRates.STANDARD}/kg)</option>\r\n                  <option value=\"BASIC\">{t('basic')} (₹{qualityRates.BASIC}/kg)</option>\r\n                </select>\r\n                <div className={`mt-2 px-2 py-1 rounded text-xs border ${getQualityColor(formData.qualityGrade)}`}>\r\n                  <Star className=\"h-3 w-3 inline mr-1\" />\r\n                  {formData.qualityGrade} Quality\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  {t('moistureContent')}\r\n                </label>\r\n                <input\r\n                  type=\"number\"\r\n                  step=\"0.1\"\r\n                  min=\"0\"\r\n                  max=\"100\"\r\n                  value={formData.moistureContent}\r\n                  onChange={(e) => handleInputChange('moistureContent', e.target.value)}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Location */}\r\n          <div className=\"bg-gray-50 rounded-lg p-4\">\r\n            <h4 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\r\n              <MapPin className=\"h-5 w-5 mr-2 text-red-600\" />\r\n              {t('location')}\r\n            </h4>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  {t('latitude')}\r\n                </label>\r\n                <input\r\n                  type=\"number\"\r\n                  step=\"any\"\r\n                  value={formData.gpsLatitude}\r\n                  onChange={(e) => handleInputChange('gpsLatitude', e.target.value)}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  {t('longitude')}\r\n                </label>\r\n                <input\r\n                  type=\"number\"\r\n                  step=\"any\"\r\n                  value={formData.gpsLongitude}\r\n                  onChange={(e) => handleInputChange('gpsLongitude', e.target.value)}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                />\r\n              </div>\r\n              <div className=\"flex items-end\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={getCurrentLocation}\r\n                  disabled={locationStatus === 'loading'}\r\n                  className=\"w-full px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 flex items-center justify-center\"\r\n                >\r\n                  {locationStatus === 'loading' ? (\r\n                    <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin mr-2\"></div>\r\n                  ) : (\r\n                    <MapPin className=\"h-4 w-4 mr-2\" />\r\n                  )}\r\n                  {t('getCurrentLocation')}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Payment Details */}\r\n          <div className=\"bg-gray-50 rounded-lg p-4\">\r\n            <h4 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\r\n              <CreditCard className=\"h-5 w-5 mr-2 text-purple-600\" />\r\n              {t('paymentDetails')}\r\n            </h4>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  {t('ratePerKg')} *\r\n                </label>\r\n                <input\r\n                  type=\"number\"\r\n                  step=\"0.01\"\r\n                  min=\"0\"\r\n                  value={formData.ratePerKg}\r\n                  onChange={(e) => handleInputChange('ratePerKg', e.target.value)}\r\n                  className={`w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 ${\r\n                    errors.ratePerKg ? 'border-red-300' : 'border-gray-300'\r\n                  }`}\r\n                />\r\n                {errors.ratePerKg && (\r\n                  <p className=\"text-red-600 text-sm mt-1\">{errors.ratePerKg}</p>\r\n                )}\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  {t('totalAmount')}\r\n                </label>\r\n                <div className=\"relative\">\r\n                  <input\r\n                    type=\"text\"\r\n                    value={`₹${formData.totalAmount}`}\r\n                    readOnly\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg bg-gray-100 font-semibold text-green-600\"\r\n                  />\r\n                  <Coins className=\"absolute right-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-green-600\" />\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  {t('paymentMethod')}\r\n                </label>\r\n                <select\r\n                  value={formData.paymentMethod}\r\n                  onChange={(e) => handleInputChange('paymentMethod', e.target.value)}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                >\r\n                  <option value=\"UPI\">UPI</option>\r\n                  <option value=\"CASH\">Cash</option>\r\n                  <option value=\"NEFT\">NEFT</option>\r\n                  <option value=\"AEPS\">AEPS</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Additional Information */}\r\n          <div className=\"bg-gray-50 rounded-lg p-4\">\r\n            <h4 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\r\n              <TrendingUp className=\"h-5 w-5 mr-2 text-orange-600\" />\r\n              {t('additionalInfo')}\r\n            </h4>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  {t('deviceId')}\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={formData.deviceReadingId}\r\n                  onChange={(e) => handleInputChange('deviceReadingId', e.target.value)}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                  placeholder=\"Optional device reading ID\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  {t('notes')}\r\n                </label>\r\n                <textarea\r\n                  value={formData.notes}\r\n                  onChange={(e) => handleInputChange('notes', e.target.value)}\r\n                  rows={2}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                  placeholder=\"Optional notes about the collection\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Action Buttons */}\r\n          <div className=\"flex justify-end gap-3 pt-4 border-t\">\r\n            <button\r\n              onClick={onClose}\r\n              disabled={isSubmitting}\r\n              className=\"px-6 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 disabled:opacity-50\"\r\n            >\r\n              {t('cancel')}\r\n            </button>\r\n            <button\r\n              onClick={handleSubmit}\r\n              disabled={isSubmitting}\r\n              className=\"px-6 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 disabled:opacity-50 flex items-center gap-2\"\r\n            >\r\n              {isSubmitting ? (\r\n                <>\r\n                  <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\"></div>\r\n                  {t('processing')}\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Save className=\"h-4 w-4\" />\r\n                  {t('recordTransaction')}\r\n                </>\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}","/**\r\n * Transaction History Component\r\n * Shows farmer contribution history with payment details and analytics\r\n */\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport {\r\n  Calendar,\r\n  Scale,\r\n  CreditCard,\r\n  MapPin,\r\n  TrendingUp,\r\n  Star,\r\n  Clock,\r\n  CheckCircle,\r\n  AlertTriangle,\r\n  X,\r\n  Download,\r\n  Filter,\r\n  Search,\r\n  Coins,\r\n  BarChart3\r\n} from 'lucide-react';\r\nimport { BiogasServiceClient } from '../../services/microservices';\r\n\r\ninterface Contribution {\r\n  id: string;\r\n  externalId: string;\r\n  contributionDate: string;\r\n  weightKg: number;\r\n  ratePerKg: number;\r\n  totalAmount: number;\r\n  paymentMethod: 'UPI' | 'CASH' | 'NEFT' | 'AEPS';\r\n  paymentStatus: 'PENDING' | 'PROCESSING' | 'COMPLETED' | 'FAILED';\r\n  qualityGrade: 'PREMIUM' | 'STANDARD' | 'BASIC';\r\n  moistureContent?: number;\r\n  gpsLatitude?: number;\r\n  gpsLongitude?: number;\r\n  workflowStatus: string;\r\n  validationStatus: string;\r\n  notes?: string;\r\n  operatorUserId?: string;\r\n  operatorName?: string;\r\n  operatorPhone?: string;\r\n  farmer?: {\r\n    name: string;\r\n    externalId: string;\r\n    phone?: string;\r\n  };\r\n}\r\n\r\ninterface Props {\r\n  farmerId: string;\r\n  farmerName: string;\r\n  onClose: () => void;\r\n}\r\n\r\nconst translations = {\r\n  en: {\r\n    title: 'Transaction History',\r\n    subtitle: 'Complete contribution and payment history',\r\n    summary: 'Summary',\r\n    totalContributions: 'Total Contributions',\r\n    totalWeight: 'Total Weight',\r\n    totalValue: 'Total Value',\r\n    avgQuality: 'Average Quality',\r\n    searchPlaceholder: 'Search by transaction ID or notes...',\r\n    filterByPayment: 'Filter by Payment',\r\n    filterByQuality: 'Filter by Quality',\r\n    allPayments: 'All Payments',\r\n    allQualities: 'All Qualities',\r\n    date: 'Date',\r\n    transactionId: 'Transaction ID',\r\n    weight: 'Weight (kg)',\r\n    quality: 'Quality',\r\n    amount: 'Amount (₹)',\r\n    paymentMethod: 'Payment',\r\n    status: 'Status',\r\n    actions: 'Actions',\r\n    view: 'View Details',\r\n    premium: 'Premium',\r\n    standard: 'Standard',\r\n    basic: 'Basic',\r\n    pending: 'Pending',\r\n    processing: 'Processing',\r\n    completed: 'Completed',\r\n    failed: 'Failed',\r\n    exportData: 'Export Data',\r\n    noTransactions: 'No transactions found',\r\n    kg: 'kg',\r\n    close: 'Close',\r\n    viewDetails: 'View Details',\r\n    location: 'Location',\r\n    moistureContent: 'Moisture Content',\r\n    notes: 'Notes',\r\n    workflowStatus: 'Workflow Status',\r\n    validationStatus: 'Validation Status'\r\n  },\r\n  hi: {\r\n    title: 'लेनदेन इतिहास',\r\n    subtitle: 'पूर्ण योगदान और भुगतान इतिहास',\r\n    summary: 'सारांश',\r\n    totalContributions: 'कुल योगदान',\r\n    totalWeight: 'कुल वजन',\r\n    totalValue: 'कुल मूल्य',\r\n    avgQuality: 'औसत गुणवत्ता',\r\n    searchPlaceholder: 'लेनदेन ID या नोट्स से खोजें...',\r\n    filterByPayment: 'भुगतान के अनुसार फ़िल्टर करें',\r\n    filterByQuality: 'गुणवत्ता के अनुसार फ़िल्टर करें',\r\n    allPayments: 'सभी भुगतान',\r\n    allQualities: 'सभी गुणवत्ता',\r\n    date: 'दिनांक',\r\n    transactionId: 'लेनदेन ID',\r\n    weight: 'वजन (किलो)',\r\n    quality: 'गुणवत्ता',\r\n    amount: 'राशि (₹)',\r\n    paymentMethod: 'भुगतान',\r\n    status: 'स्थिति',\r\n    actions: 'कार्य',\r\n    view: 'विवरण देखें',\r\n    premium: 'प्रीमियम',\r\n    standard: 'मानक',\r\n    basic: 'बेसिक',\r\n    pending: 'लंबित',\r\n    processing: 'प्रसंस्करण',\r\n    completed: 'पूर्ण',\r\n    failed: 'असफल',\r\n    exportData: 'डेटा निर्यात करें',\r\n    noTransactions: 'कोई लेनदेन नहीं मिला',\r\n    kg: 'किलो',\r\n    close: 'बंद करें',\r\n    viewDetails: 'विवरण देखें',\r\n    location: 'स्थान',\r\n    moistureContent: 'नमी की मात्रा',\r\n    notes: 'टिप्पणी',\r\n    workflowStatus: 'वर्कफ़्लो स्थिति',\r\n    validationStatus: 'सत्यापन स्थिति'\r\n  }\r\n};\r\n\r\nexport default function TransactionHistory({ farmerId, farmerName, onClose }: Props) {\r\n  const [language] = useState<'en' | 'hi'>('en');\r\n  const [contributions, setContributions] = useState<Contribution[]>([]);\r\n  const [filteredContributions, setFilteredContributions] = useState<Contribution[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [paymentFilter, setPaymentFilter] = useState('');\r\n  const [qualityFilter, setQualityFilter] = useState('');\r\n  const [selectedContribution, setSelectedContribution] = useState<Contribution | null>(null);\r\n  const [showDetailsModal, setShowDetailsModal] = useState(false);\r\n\r\n  const t = (key: string): string => {\r\n    return translations[language][key as keyof typeof translations['en']] || key;\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadContributions();\r\n  }, [farmerId]);\r\n\r\n  useEffect(() => {\r\n    applyFilters();\r\n  }, [contributions, searchTerm, paymentFilter, qualityFilter]);\r\n\r\n  const loadContributions = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await BiogasServiceClient.getFarmerContributions(farmerId, 0, 100);\r\n\r\n      if (response && Array.isArray(response)) {\r\n        setContributions(response);\r\n      } else {\r\n        console.error('Invalid response format:', response);\r\n        setContributions([]);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading contributions:', error);\r\n      setContributions([]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const applyFilters = () => {\r\n    let filtered = [...contributions];\r\n\r\n    // Search filter\r\n    if (searchTerm) {\r\n      filtered = filtered.filter(c =>\r\n        c.externalId.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        (c.notes && c.notes.toLowerCase().includes(searchTerm.toLowerCase()))\r\n      );\r\n    }\r\n\r\n    // Payment method filter\r\n    if (paymentFilter) {\r\n      filtered = filtered.filter(c => c.paymentMethod === paymentFilter);\r\n    }\r\n\r\n    // Quality filter\r\n    if (qualityFilter) {\r\n      filtered = filtered.filter(c => c.qualityGrade === qualityFilter);\r\n    }\r\n\r\n    setFilteredContributions(filtered);\r\n  };\r\n\r\n  const calculateSummary = () => {\r\n    const totalContributions = contributions.length;\r\n    const totalWeight = contributions.reduce((sum, c) => sum + c.weightKg, 0);\r\n    const totalValue = contributions.reduce((sum, c) => sum + c.totalAmount, 0);\r\n    const qualityDistribution = contributions.reduce((acc, c) => {\r\n      acc[c.qualityGrade] = (acc[c.qualityGrade] || 0) + 1;\r\n      return acc;\r\n    }, {} as Record<string, number>);\r\n\r\n    // Handle empty contributions array\r\n    const qualityKeys = Object.keys(qualityDistribution);\r\n    const avgQuality = qualityKeys.length > 0\r\n      ? qualityKeys.reduce((a, b) => qualityDistribution[a] > qualityDistribution[b] ? a : b)\r\n      : 'STANDARD'; // Default quality when no data\r\n\r\n    return {\r\n      totalContributions,\r\n      totalWeight: totalWeight.toFixed(1),\r\n      totalValue: totalValue.toFixed(2),\r\n      avgQuality\r\n    };\r\n  };\r\n\r\n  const formatDate = (dateString: string): string => {\r\n    return new Date(dateString).toLocaleDateString(language === 'hi' ? 'hi-IN' : 'en-IN');\r\n  };\r\n\r\n  const getPaymentStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'COMPLETED':\r\n        return 'bg-green-100 text-green-800';\r\n      case 'PENDING':\r\n        return 'bg-yellow-100 text-yellow-800';\r\n      case 'PROCESSING':\r\n        return 'bg-blue-100 text-blue-800';\r\n      case 'FAILED':\r\n        return 'bg-red-100 text-red-800';\r\n      default:\r\n        return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  const getQualityColor = (quality: string) => {\r\n    switch (quality) {\r\n      case 'PREMIUM':\r\n        return 'bg-green-100 text-green-800';\r\n      case 'STANDARD':\r\n        return 'bg-blue-100 text-blue-800';\r\n      case 'BASIC':\r\n        return 'bg-yellow-100 text-yellow-800';\r\n      default:\r\n        return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  const handleViewDetails = (contribution: Contribution) => {\r\n    setSelectedContribution(contribution);\r\n    setShowDetailsModal(true);\r\n  };\r\n\r\n  const handleExportData = () => {\r\n    const csvData = contributions.map(c => ({\r\n      'Transaction ID': c.externalId,\r\n      'Date': formatDate(c.contributionDate),\r\n      'Weight (kg)': c.weightKg,\r\n      'Quality': c.qualityGrade,\r\n      'Rate (₹/kg)': c.ratePerKg,\r\n      'Total Amount (₹)': c.totalAmount,\r\n      'Payment Method': c.paymentMethod,\r\n      'Payment Status': c.paymentStatus,\r\n      'Location': c.gpsLatitude && c.gpsLongitude ? `${c.gpsLatitude}, ${c.gpsLongitude}` : 'N/A',\r\n      'Notes': c.notes || 'N/A'\r\n    }));\r\n\r\n    const csvContent = [\r\n      Object.keys(csvData[0] || {}).join(','),\r\n      ...csvData.map(row => Object.values(row).join(','))\r\n    ].join('\\n');\r\n\r\n    const blob = new Blob([csvContent], { type: 'text/csv' });\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = `farmer-${farmerId}-contributions.csv`;\r\n    a.click();\r\n    window.URL.revokeObjectURL(url);\r\n  };\r\n\r\n  const summary = calculateSummary();\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n        <div className=\"bg-white rounded-xl p-8\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto\"></div>\r\n          <p className=\"text-center mt-4\">Loading transaction history...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\r\n      <div className=\"bg-white rounded-xl max-w-7xl w-full max-h-[90vh] overflow-y-auto\">\r\n        {/* Header */}\r\n        <div className=\"flex justify-between items-center p-6 border-b bg-gradient-to-r from-blue-50 to-green-50\">\r\n          <div>\r\n            <h3 className=\"text-xl font-semibold text-gray-900\">{t('title')}</h3>\r\n            <p className=\"text-gray-600\">{t('subtitle')}</p>\r\n            <p className=\"text-sm text-blue-600 mt-1\">Farmer: {farmerName} (ID: {farmerId})</p>\r\n          </div>\r\n          <button\r\n            onClick={onClose}\r\n            className=\"text-gray-400 hover:text-gray-600 p-2 rounded-full hover:bg-gray-100\"\r\n          >\r\n            <X className=\"h-6 w-6\" />\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"p-6 space-y-6\">\r\n          {/* Summary Cards */}\r\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\r\n            <div className=\"bg-blue-50 rounded-lg p-4\">\r\n              <div className=\"flex items-center\">\r\n                <BarChart3 className=\"h-8 w-8 text-blue-600\" />\r\n                <div className=\"ml-3\">\r\n                  <p className=\"text-sm font-medium text-blue-600\">{t('totalContributions')}</p>\r\n                  <p className=\"text-2xl font-bold text-blue-900\">{summary.totalContributions}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"bg-green-50 rounded-lg p-4\">\r\n              <div className=\"flex items-center\">\r\n                <Scale className=\"h-8 w-8 text-green-600\" />\r\n                <div className=\"ml-3\">\r\n                  <p className=\"text-sm font-medium text-green-600\">{t('totalWeight')}</p>\r\n                  <p className=\"text-2xl font-bold text-green-900\">{summary.totalWeight} {t('kg')}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"bg-yellow-50 rounded-lg p-4\">\r\n              <div className=\"flex items-center\">\r\n                <Coins className=\"h-8 w-8 text-yellow-600\" />\r\n                <div className=\"ml-3\">\r\n                  <p className=\"text-sm font-medium text-yellow-600\">{t('totalValue')}</p>\r\n                  <p className=\"text-2xl font-bold text-yellow-900\">₹{summary.totalValue}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"bg-purple-50 rounded-lg p-4\">\r\n              <div className=\"flex items-center\">\r\n                <Star className=\"h-8 w-8 text-purple-600\" />\r\n                <div className=\"ml-3\">\r\n                  <p className=\"text-sm font-medium text-purple-600\">{t('avgQuality')}</p>\r\n                  <p className=\"text-2xl font-bold text-purple-900\">{t(summary.avgQuality.toLowerCase())}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Filters */}\r\n          <div className=\"bg-gray-50 rounded-lg p-4\">\r\n            <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\r\n              <div className=\"md:col-span-2\">\r\n                <div className=\"relative\">\r\n                  <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder={t('searchPlaceholder')}\r\n                    value={searchTerm}\r\n                    onChange={(e) => setSearchTerm(e.target.value)}\r\n                    className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <select\r\n                value={paymentFilter}\r\n                onChange={(e) => setPaymentFilter(e.target.value)}\r\n                className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n              >\r\n                <option value=\"\">{t('allPayments')}</option>\r\n                <option value=\"UPI\">UPI</option>\r\n                <option value=\"CASH\">Cash</option>\r\n                <option value=\"NEFT\">NEFT</option>\r\n                <option value=\"AEPS\">AEPS</option>\r\n              </select>\r\n              <select\r\n                value={qualityFilter}\r\n                onChange={(e) => setQualityFilter(e.target.value)}\r\n                className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n              >\r\n                <option value=\"\">{t('allQualities')}</option>\r\n                <option value=\"PREMIUM\">{t('premium')}</option>\r\n                <option value=\"STANDARD\">{t('standard')}</option>\r\n                <option value=\"BASIC\">{t('basic')}</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Export Button */}\r\n          <div className=\"flex justify-end\">\r\n            <button\r\n              onClick={handleExportData}\r\n              className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\r\n            >\r\n              <Download className=\"h-4 w-4\" />\r\n              {t('exportData')}\r\n            </button>\r\n          </div>\r\n\r\n          {/* Transactions Table */}\r\n          <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 overflow-hidden\">\r\n            <div className=\"overflow-x-auto\">\r\n              <table className=\"w-full\">\r\n                <thead className=\"bg-gray-50 border-b border-gray-200\">\r\n                  <tr>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t('date')}</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t('transactionId')}</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t('weight')}</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t('quality')}</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t('amount')}</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t('paymentMethod')}</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t('status')}</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t('actions')}</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                  {filteredContributions.map((contribution) => (\r\n                    <tr key={contribution.id} className=\"hover:bg-gray-50 transition-colors\">\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                        <div className=\"flex items-center\">\r\n                          <Calendar className=\"h-4 w-4 text-gray-400 mr-2\" />\r\n                          {formatDate(contribution.contributionDate)}\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm font-mono text-gray-900\">\r\n                        {contribution.externalId}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                        {contribution.weightKg} {t('kg')}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${getQualityColor(contribution.qualityGrade)}`}>\r\n                          {t(contribution.qualityGrade.toLowerCase())}\r\n                        </span>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm font-semibold text-green-600\">\r\n                        ₹{contribution.totalAmount.toFixed(2)}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                        {contribution.paymentMethod}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${getPaymentStatusColor(contribution.paymentStatus)}`}>\r\n                          {t(contribution.paymentStatus.toLowerCase())}\r\n                        </span>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n                        <button\r\n                          onClick={() => handleViewDetails(contribution)}\r\n                          className=\"text-blue-600 hover:text-blue-900 p-1 rounded hover:bg-blue-50\"\r\n                          title={t('viewDetails')}\r\n                        >\r\n                          <Clock className=\"h-4 w-4\" />\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n\r\n            {filteredContributions.length === 0 && (\r\n              <div className=\"text-center py-12\">\r\n                <Scale className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\r\n                <p className=\"text-gray-500 text-lg\">{t('noTransactions')}</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Details Modal */}\r\n        {showDetailsModal && selectedContribution && (\r\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\r\n            <div className=\"bg-white rounded-xl max-w-2xl w-full max-h-[90vh] overflow-y-auto\">\r\n              <div className=\"flex justify-between items-center p-6 border-b\">\r\n                <h3 className=\"text-xl font-semibold\">Transaction Details</h3>\r\n                <button\r\n                  onClick={() => setShowDetailsModal(false)}\r\n                  className=\"text-gray-400 hover:text-gray-600\"\r\n                >\r\n                  <X className=\"h-6 w-6\" />\r\n                </button>\r\n              </div>\r\n              <div className=\"p-6 space-y-4\">\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                  <div>\r\n                    <label className=\"text-sm font-medium text-gray-500\">Transaction ID</label>\r\n                    <p className=\"text-lg font-mono\">{selectedContribution.externalId}</p>\r\n                  </div>\r\n                  <div>\r\n                    <label className=\"text-sm font-medium text-gray-500\">Date</label>\r\n                    <p className=\"text-lg\">{formatDate(selectedContribution.contributionDate)}</p>\r\n                  </div>\r\n                  <div>\r\n                    <label className=\"text-sm font-medium text-gray-500\">Weight</label>\r\n                    <p className=\"text-lg\">{selectedContribution.weightKg} kg</p>\r\n                  </div>\r\n                  <div>\r\n                    <label className=\"text-sm font-medium text-gray-500\">Rate per kg</label>\r\n                    <p className=\"text-lg\">₹{selectedContribution.ratePerKg}</p>\r\n                  </div>\r\n                  <div>\r\n                    <label className=\"text-sm font-medium text-gray-500\">Total Amount</label>\r\n                    <p className=\"text-lg font-semibold text-green-600\">₹{selectedContribution.totalAmount}</p>\r\n                  </div>\r\n                  <div>\r\n                    <label className=\"text-sm font-medium text-gray-500\">Payment Method</label>\r\n                    <p className=\"text-lg\">{selectedContribution.paymentMethod}</p>\r\n                  </div>\r\n                  {selectedContribution.moistureContent && (\r\n                    <div>\r\n                      <label className=\"text-sm font-medium text-gray-500\">Moisture Content</label>\r\n                      <p className=\"text-lg\">{selectedContribution.moistureContent}%</p>\r\n                    </div>\r\n                  )}\r\n                  {selectedContribution.gpsLatitude && selectedContribution.gpsLongitude && (\r\n                    <div>\r\n                      <label className=\"text-sm font-medium text-gray-500\">Location</label>\r\n                      <p className=\"text-lg\">{selectedContribution.gpsLatitude}, {selectedContribution.gpsLongitude}</p>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                {selectedContribution.notes && (\r\n                  <div>\r\n                    <label className=\"text-sm font-medium text-gray-500\">Notes</label>\r\n                    <p className=\"text-lg\">{selectedContribution.notes}</p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}","/**\n * Cattle Management System\n * Complete CRUD operations with RFID integration, search, filtering, and detailed cattle records\n */\n\nimport { useState, useEffect } from 'react';\nimport {\n  Search,\n  Filter,\n  Plus,\n  Edit,\n  Trash2,\n  Eye,\n  MapPin,\n  Calendar,\n  Users,\n  Activity,\n  Wifi,\n  AlertTriangle,\n  CheckCircle,\n  Camera,\n  X,\n  Save,\n  Scan,\n  Circle,\n  Scale,\n  History,\n  Clock,\n  LogIn,\n  LogOut\n} from 'lucide-react';\nimport {\n  cattleApi,\n  masterDataApi,\n  calculateAgeFromDob,\n  type Cattle,\n  type Breed,\n  type Species,\n  type Gender,\n  type Color,\n  type Location as GaushalaLocation\n} from '../../services/gaushala/api';\nimport { getLoggedInUserGaushalaId, getCurrentUserContext } from '../../utils/auth';\nimport { useNavigate } from 'react-router-dom';\nimport CowDungTransaction from '../../components/gaushala/CowDungTransaction';\nimport TransactionHistory from '../../components/gaushala/TransactionHistory';\n\ninterface LanguageContextType {\n  language: 'hi' | 'en';\n  setLanguage: (lang: 'hi' | 'en') => void;\n  t: (key: string) => string;\n}\n\n// Legacy interface for backwards compatibility with transaction components\ninterface CattleLegacy {\n  id: string;\n  rfidTag: string;\n  name: string;\n  breed: string;\n  age: number;\n  weight: number;\n  health: 'healthy' | 'sick' | 'recovering' | 'vaccination_due';\n  owner: string;\n  ownerId: string;\n  currentStatus: 'IN' | 'OUT' | 'UNKNOWN';\n  location: {\n    latitude: number;\n    longitude: number;\n    timestamp: number;\n    address?: string;\n  };\n  totalDungCollected: number;\n  lastDungCollection?: number;\n  isActive: boolean;\n  photoUrl?: string;\n  medicalHistory: MedicalRecord[];\n  createdAt: number;\n  updatedAt: number;\n}\n\ninterface MedicalRecord {\n  id: string;\n  date: number;\n  type: 'checkup' | 'vaccination' | 'treatment' | 'surgery';\n  description: string;\n  veterinarian: string;\n  medication?: string;\n  nextCheckup?: number;\n}\n\ninterface AttendanceLog {\n  id: string;\n  cattleId: string;\n  timestamp: number;\n  type: 'IN' | 'OUT';\n  location?: string;\n  rfidScanned?: boolean;\n}\n\ninterface DailyAttendance {\n  date: string;\n  firstIn?: AttendanceLog;\n  lastOut?: AttendanceLog;\n  totalLogs: AttendanceLog[];\n}\n\ninterface AttendanceHistory {\n  cattleId: string;\n  days: DailyAttendance[];\n  selectedDate: string;\n}\n\ninterface CattleFilter {\n  search: string;\n  health: string;\n  breed: string;\n  owner: string;\n  status: string;\n  isActive: boolean | null;\n  gaushalaId?: string;\n}\n\nconst translations = {\n  en: {\n    title: 'Cattle Management',\n    subtitle: 'Manage cattle records with RFID tracking',\n    addCattle: 'Add Cattle',\n    searchPlaceholder: 'Search by name, RFID, or owner...',\n    filterBy: 'Filter',\n    allHealth: 'All Health',\n    healthy: 'Healthy',\n    sick: 'Sick',\n    recovering: 'Recovering',\n    vaccinationDue: 'Vaccination Due',\n    allBreeds: 'All Breeds',\n    allOwners: 'All Owners',\n    active: 'Active',\n    inactive: 'Inactive',\n    name: 'Name',\n    rfidTag: 'RFID Tag',\n    breed: 'Breed',\n    age: 'Age',\n    weight: 'Weight',\n    health: 'Health',\n    status: 'Status',\n    statusIn: 'Inside',\n    statusOut: 'Outside',\n    statusUnknown: 'Unknown',\n    allStatus: 'All Status',\n    owner: 'Owner',\n    lastCollection: 'Last Collection',\n    actions: 'Actions',\n    view: 'View',\n    edit: 'Edit',\n    delete: 'Delete',\n    recordTransaction: 'Record Dung Collection',\n    viewHistory: 'View Transaction History',\n    scanRFID: 'Scan RFID',\n    addPhoto: 'Add Photo',\n    saveChanges: 'Save Changes',\n    cancel: 'Cancel',\n    cattleDetails: 'Cattle Details',\n    basicInfo: 'Basic Information',\n    locationInfo: 'Location Information',\n    collectionStats: 'Collection Statistics',\n    medicalHistory: 'Medical History',\n    latitude: 'Latitude',\n    longitude: 'Longitude',\n    address: 'Address',\n    totalCollected: 'Total Collected',\n    avgQuality: 'Average Quality',\n    lastCheckup: 'Last Checkup',\n    nextCheckup: 'Next Checkup',\n    kg: 'kg',\n    years: 'years',\n    never: 'Never',\n    editCattle: 'Edit Cattle',\n    deleteCattle: 'Delete Cattle',\n    confirmDelete: 'Are you sure you want to delete this cattle record?',\n    yes: 'Yes',\n    no: 'No',\n    attendance: 'Attendance',\n    viewAttendance: 'View Attendance',\n    attendanceLogs: 'Attendance Logs',\n    dailyAttendance: 'Daily Attendance',\n    firstIn: 'First In',\n    lastOut: 'Last Out',\n    totalEntries: 'Total Entries',\n    viewLogs: 'View Logs',\n    timeIn: 'Time In',\n    timeOut: 'Time Out',\n    noAttendanceData: 'No attendance data available',\n    today: 'Today',\n    close: 'Close',\n    selectDate: 'Select Date',\n    last7Days: 'Last 7 Days',\n    last30Days: 'Last 30 Days',\n    attendanceHistory: 'Attendance History',\n    noDataForDate: 'No attendance data for this date',\n    present: 'Present',\n    absent: 'Absent',\n    dayView: 'Day View'\n  },\n  hi: {\n    title: 'पशु प्रबंधन',\n    subtitle: 'RFID ट्रैकिंग के साथ पशु रिकॉर्ड प्रबंधन',\n    addCattle: 'पशु जोड़ें',\n    searchPlaceholder: 'नाम, RFID, या मालिक से खोजें...',\n    filterBy: 'फ़िल्टर',\n    allHealth: 'सभी स्वास्थ्य',\n    healthy: 'स्वस्थ',\n    sick: 'बीमार',\n    recovering: 'ठीक हो रहा',\n    vaccinationDue: 'टीकाकरण देय',\n    allBreeds: 'सभी नस्लें',\n    allOwners: 'सभी मालिक',\n    active: 'सक्रिय',\n    inactive: 'निष्क्रिय',\n    name: 'नाम',\n    rfidTag: 'RFID टैग',\n    breed: 'नस्ल',\n    age: 'आयु',\n    weight: 'वज़न',\n    health: 'स्वास्थ्य',\n    owner: 'मालिक',\n    lastCollection: 'अंतिम संग्रह',\n    actions: 'कार्य',\n    view: 'देखें',\n    edit: 'संपादित करें',\n    delete: 'हटाएं',\n    recordTransaction: 'गोबर संग्रह रिकॉर्ड करें',\n    viewHistory: 'लेनदेन इतिहास देखें',\n    scanRFID: 'RFID स्कैन करें',\n    addPhoto: 'फोटो जोड़ें',\n    saveChanges: 'परिवर्तन सेव करें',\n    cancel: 'रद्द करें',\n    cattleDetails: 'पशु विवरण',\n    basicInfo: 'मूलभूत जानकारी',\n    locationInfo: 'स्थान की जानकारी',\n    collectionStats: 'संग्रह आंकड़े',\n    medicalHistory: 'चिकित्सा इतिहास',\n    latitude: 'अक्षांश',\n    longitude: 'देशांतर',\n    address: 'पता',\n    totalCollected: 'कुल संग्रहीत',\n    avgQuality: 'औसत गुणवत्ता',\n    lastCheckup: 'अंतिम जांच',\n    nextCheckup: 'अगली जांच',\n    kg: 'किलो',\n    years: 'वर्ष',\n    never: 'कभी नहीं',\n    editCattle: 'पशु संपादित करें',\n    deleteCattle: 'पशु हटाएं',\n    confirmDelete: 'क्या आप वाकई इस पशु रिकॉर्ड को हटाना चाहते हैं?',\n    yes: 'हाँ',\n    no: 'नहीं',\n    attendance: 'उपस्थिति',\n    viewAttendance: 'उपस्थिति देखें',\n    attendanceLogs: 'उपस्थिति लॉग',\n    dailyAttendance: 'दैनिक उपस्थिति',\n    firstIn: 'पहली प्रविष्टि',\n    lastOut: 'अंतिम निकास',\n    totalEntries: 'कुल प्रविष्टियां',\n    viewLogs: 'लॉग देखें',\n    timeIn: 'प्रवेश समय',\n    timeOut: 'निकास समय',\n    noAttendanceData: 'कोई उपस्थिति डेटा उपलब्ध नहीं',\n    today: 'आज',\n    close: 'बंद करें',\n    selectDate: 'तारीख चुनें',\n    last7Days: 'पिछले 7 दिन',\n    last30Days: 'पिछले 30 दिन',\n    attendanceHistory: 'उपस्थिति इतिहास',\n    noDataForDate: 'इस तारीख के लिए कोई उपस्थिति डेटा नहीं',\n    present: 'उपस्थित',\n    absent: 'अनुपस्थित',\n    dayView: 'दिन दृश्य'\n  }\n};\n\ninterface Props {\n  languageContext: LanguageContextType;\n}\n\nexport default function CattleManagement({ languageContext }: Props) {\n  const { language } = languageContext;\n  const navigate = useNavigate();\n\n  // User context\n  const userContext = getCurrentUserContext();\n  const userGaushalaId = getLoggedInUserGaushalaId();\n\n  // State management\n  const [cattle, setCattle] = useState<Cattle[]>([]);\n  const [filteredCattle, setFilteredCattle] = useState<Cattle[]>([]);\n  const [loading, setLoading] = useState(true);\n\n  // Master data state\n  const [breeds, setBreeds] = useState<Breed[]>([]);\n  const [species, setSpecies] = useState<Species[]>([]);\n  const [genders, setGenders] = useState<Gender[]>([]);\n  const [colors, setColors] = useState<Color[]>([]);\n  const [locations, setLocations] = useState<GaushalaLocation[]>([]);\n\n  // Modal state\n  const [showViewModal, setShowViewModal] = useState(false);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [showTransactionModal, setShowTransactionModal] = useState(false);\n  const [showHistoryModal, setShowHistoryModal] = useState(false);\n  const [showAttendanceModal, setShowAttendanceModal] = useState(false);\n  const [showAttendanceLogsModal, setShowAttendanceLogsModal] = useState(false);\n  const [selectedCattle, setSelectedCattle] = useState<Cattle | null>(null);\n  const [attendanceHistory, setAttendanceHistory] = useState<AttendanceHistory | null>(null);\n  const [selectedDate, setSelectedDate] = useState<string>(new Date().toISOString().split('T')[0]);\n  const [attendanceLogs, setAttendanceLogs] = useState<AttendanceLog[]>([]);\n  const [logsCurrentPage, setLogsCurrentPage] = useState(1);\n  const [logsSearchTerm, setLogsSearchTerm] = useState('');\n  const logsPerPage = 8;\n  const [editFormData, setEditFormData] = useState<any>({});\n  const [isUpdating, setIsUpdating] = useState(false);\n\n  // Filter state\n  const [filter, setFilter] = useState<CattleFilter>({\n    search: '',\n    health: '',\n    breed: '',\n    owner: '',\n    status: '',\n    isActive: null,\n    gaushalaId: undefined\n  });\n\n  const t = (key: string): string => {\n    return translations[language][key as keyof typeof translations['en']] || key;\n  };\n\n  // Load cattle data and master data on component mount\n  useEffect(() => {\n    loadCattleData();\n    loadMasterData();\n  }, []);\n\n  // Apply filters whenever cattle or filter state changes\n  useEffect(() => {\n    applyFilters();\n  }, [cattle, filter]);\n\n  /**\n   * Load all cattle from Gaushala Service\n   * Automatically filters by user's gaushalaId if available\n   */\n  const loadCattleData = async () => {\n    try {\n      setLoading(true);\n\n      // Fetch cattle from Gaushala Service (port 8086)\n      const response = await cattleApi.getAllCattle(0, 10000);\n\n      if (response.success && response.data) {\n        const allCattle = response.data.content || [];\n\n        // Filter by logged-in user's gaushala if gaushalaId is available\n        const ownedCattle = userGaushalaId\n          ? allCattle.filter(c => c.gaushalaId === userGaushalaId)\n          : allCattle;\n\n        console.log(`Loaded ${ownedCattle.length} cattle records`);\n        setCattle(ownedCattle);\n      } else {\n        console.error('Failed to fetch cattle data:', response.error);\n        setCattle([]);\n      }\n    } catch (error) {\n      console.error('Error loading cattle data:', error);\n      setCattle([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  /**\n   * Load master data for displaying breed/species/gender/color names\n   */\n  const loadMasterData = async () => {\n    try {\n      const [breedsRes, speciesRes, gendersRes, colorsRes, locationsRes] = await Promise.all([\n        masterDataApi.getAllBreeds(),\n        masterDataApi.getAllSpecies(),\n        masterDataApi.getAllGenders(),\n        masterDataApi.getAllColors(),\n        masterDataApi.getAllLocations(),\n      ]);\n\n      if (breedsRes.success && breedsRes.data) setBreeds(breedsRes.data);\n      if (speciesRes.success && speciesRes.data) setSpecies(speciesRes.data);\n      if (gendersRes.success && gendersRes.data) setGenders(gendersRes.data);\n      if (colorsRes.success && colorsRes.data) setColors(colorsRes.data);\n      if (locationsRes.success && locationsRes.data) setLocations(locationsRes.data);\n    } catch (error) {\n      console.error('Error loading master data:', error);\n    }\n  };\n\n  /**\n   * Helper functions to get master data names by ID\n   */\n  const getBreedName = (breedId: number): string => {\n    const breed = breeds.find(b => b.id === breedId);\n    return breed?.name || `Breed #${breedId}`;\n  };\n\n  const getSpeciesName = (speciesId: number): string => {\n    const sp = species.find(s => s.id === speciesId);\n    return sp?.name || `Species #${speciesId}`;\n  };\n\n  const getGenderName = (genderId: number): string => {\n    const gender = genders.find(g => g.id === genderId);\n    return gender?.name || `Gender #${genderId}`;\n  };\n\n  const getColorName = (colorId: number): string => {\n    const color = colors.find(c => c.id === colorId);\n    return color?.name || `Color #${colorId}`;\n  };\n\n  const getGaushalaName = (gaushalaId: number): string => {\n    const location = locations.find(l => l.id === gaushalaId);\n    return location?.name || `Gaushala #${gaushalaId}`;\n  };\n\n  /**\n   * Apply all active filters to cattle list\n   * Works with new Cattle interface using IDs for breeds, species, etc.\n   */\n  const applyFilters = () => {\n    let filtered = [...cattle];\n\n    // Search filter - search by name, RFID tag, or unique animal ID\n    if (filter.search) {\n      const searchLower = filter.search.toLowerCase();\n      filtered = filtered.filter(c =>\n        c.name.toLowerCase().includes(searchLower) ||\n        (c.rfidTagNo && c.rfidTagNo.toLowerCase().includes(searchLower)) ||\n        c.uniqueAnimalId.toLowerCase().includes(searchLower) ||\n        getBreedName(c.breedId).toLowerCase().includes(searchLower)\n      );\n    }\n\n    // Health status filter\n    if (filter.health) {\n      filtered = filtered.filter(c => c.healthStatus === filter.health);\n    }\n\n    // Breed filter (by breed name)\n    if (filter.breed) {\n      filtered = filtered.filter(c => getBreedName(c.breedId) === filter.breed);\n    }\n\n    // Active status filter\n    if (filter.isActive !== null) {\n      filtered = filtered.filter(c => c.isActive === filter.isActive);\n    }\n\n    // Gaushala filter - already filtered at load time by userGaushalaId\n    // Additional gaushalaId filter can be applied if needed\n    if (filter.gaushalaId) {\n      filtered = filtered.filter(c => c.gaushalaId === parseInt(filter.gaushalaId));\n    }\n\n    setFilteredCattle(filtered);\n  };\n\n  const getHealthColor = (health: string) => {\n    switch (health) {\n      case 'healthy':\n        return 'bg-green-100 text-green-800';\n      case 'sick':\n        return 'bg-red-100 text-red-800';\n      case 'recovering':\n        return 'bg-yellow-100 text-yellow-800';\n      case 'vaccination_due':\n        return 'bg-blue-100 text-blue-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'IN':\n        return 'bg-green-100 text-green-800';\n      case 'OUT':\n        return 'bg-orange-100 text-orange-800';\n      case 'UNKNOWN':\n        return 'bg-gray-100 text-gray-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const formatDate = (timestamp: number): string => {\n    return new Date(timestamp).toLocaleDateString(language === 'hi' ? 'hi-IN' : 'en-IN');\n  };\n\n  const handleView = (cattle: Cattle) => {\n    navigate(`/gaushala/cattle/view/${cattle.id}`);\n  };\n\n  const handleEdit = (cattle: Cattle) => {\n    navigate(`/gaushala/cattle/edit/${cattle.id}`);\n  };\n\n  const handleEditInputChange = (field: string, value: string) => {\n    if (field.startsWith('location.')) {\n      const locationField = field.split('.')[1];\n      setEditFormData((prev: any) => ({\n        ...prev,\n        location: {\n          ...prev.location,\n          [locationField]: value\n        }\n      }));\n    } else {\n      setEditFormData((prev: any) => ({\n        ...prev,\n        [field]: value\n      }));\n    }\n  };\n\n  const handleEditSubmit = async () => {\n    if (!selectedCattle) return;\n\n    setIsUpdating(true);\n    try {\n      // Prepare update data in the format expected by the API\n      const updateData = {\n        ...editFormData,\n        age: parseInt(editFormData.age),\n        weight: parseFloat(editFormData.weight),\n        location: {\n          latitude: parseFloat(editFormData.location.latitude),\n          longitude: parseFloat(editFormData.location.longitude),\n          address: editFormData.location.address,\n          timestamp: Date.now()\n        }\n      };\n\n      const response = await gauShalaApi.cattle.updateCattle(selectedCattle.id, updateData);\n\n      if (response.success) {\n        // Update the cattle in the local state\n        setCattle(prevCattle =>\n          prevCattle.map(c =>\n            c.id === selectedCattle.id\n              ? { ...c, ...updateData, updatedAt: Date.now() }\n              : c\n          )\n        );\n        setShowEditModal(false);\n        setSelectedCattle(null);\n        setEditFormData({});\n        alert('Cattle updated successfully!');\n      } else {\n        alert('Failed to update cattle: ' + (response.error || 'Unknown error'));\n      }\n    } catch (error) {\n      console.error('Failed to update cattle:', error);\n      alert('Failed to update cattle. Please try again.');\n    } finally {\n      setIsUpdating(false);\n    }\n  };\n\n  const handleDelete = async (cattle: Cattle) => {\n    if (confirm(t('confirmDelete'))) {\n      try {\n        const response = await gauShalaApi.cattle.deleteCattle(cattle.id);\n\n        if (response.success) {\n          setCattle(prev => prev.filter(c => c.id !== cattle.id));\n        } else {\n          console.error('Failed to delete cattle:', response.error);\n          alert('Failed to delete cattle. Please try again.');\n        }\n      } catch (error) {\n        console.error('Error deleting cattle:', error);\n        alert('Error deleting cattle. Please try again.');\n      }\n    }\n  };\n\n  const handleRecordTransaction = (cattle: Cattle) => {\n    setSelectedCattle(cattle);\n    setShowTransactionModal(true);\n  };\n\n  const handleViewHistory = (cattle: Cattle) => {\n    setSelectedCattle(cattle);\n    setShowHistoryModal(true);\n  };\n\n  const handleTransactionSuccess = (transaction: any) => {\n    // Update cattle data with latest collection info\n    setCattle(prevCattle =>\n      prevCattle.map(c =>\n        c.id === selectedCattle?.id\n          ? {\n              ...c,\n              totalDungCollected: c.totalDungCollected + parseFloat(transaction.weightKg || '0'),\n              lastDungCollection: Date.now()\n            }\n          : c\n      )\n    );\n\n    console.log('Transaction recorded successfully:', transaction);\n  };\n\n  // Generate mock attendance data for multiple days\n  const generateMockAttendanceHistory = (cattleId: string): AttendanceHistory => {\n    const days: DailyAttendance[] = [];\n    const today = new Date();\n\n    // Generate data for last 30 days\n    for (let i = 0; i < 30; i++) {\n      const date = new Date(today);\n      date.setDate(today.getDate() - i);\n      const dateString = date.toISOString().split('T')[0];\n\n      // Random chance of attendance (85% chance of being present)\n      const isPresent = Math.random() > 0.15;\n\n      if (isPresent) {\n        const logs: AttendanceLog[] = [];\n\n        // Generate first in time (6-8 AM)\n        const firstInTime = new Date(date);\n        firstInTime.setHours(6 + Math.floor(Math.random() * 2), Math.floor(Math.random() * 60), 0, 0);\n\n        // Generate last out time (17-19 PM)\n        const lastOutTime = new Date(date);\n        lastOutTime.setHours(17 + Math.floor(Math.random() * 2), Math.floor(Math.random() * 60), 0, 0);\n\n        const firstInLog: AttendanceLog = {\n          id: `${cattleId}-in-${date.getTime()}-${i}`,\n          cattleId,\n          timestamp: firstInTime.getTime(),\n          type: 'IN',\n          location: 'Main Gate',\n          rfidScanned: true\n        };\n\n        const lastOutLog: AttendanceLog = {\n          id: `${cattleId}-out-${date.getTime()}-${i}`,\n          cattleId,\n          timestamp: lastOutTime.getTime(),\n          type: 'OUT',\n          location: 'Main Gate',\n          rfidScanned: true\n        };\n\n        // Generate intermediate logs (2-5 entries)\n        const numIntermediateLogs = 2 + Math.floor(Math.random() * 4);\n        for (let j = 0; j < numIntermediateLogs; j++) {\n          const randomTime = new Date(date);\n          randomTime.setHours(9 + j * 2, Math.floor(Math.random() * 60), 0, 0);\n\n          const locations = ['Feeding Area', 'Water Point', 'Milking Shed', 'Rest Area', 'Medical Check'];\n\n          logs.push({\n            id: `${cattleId}-${j}-${date.getTime()}-${i}`,\n            cattleId,\n            timestamp: randomTime.getTime(),\n            type: j % 2 === 0 ? 'OUT' : 'IN',\n            location: locations[j % locations.length],\n            rfidScanned: Math.random() > 0.1 // 90% RFID scan success\n          });\n        }\n\n        logs.push(firstInLog, lastOutLog);\n        logs.sort((a, b) => a.timestamp - b.timestamp);\n\n        days.push({\n          date: dateString,\n          firstIn: firstInLog,\n          lastOut: lastOutLog,\n          totalLogs: logs\n        });\n      } else {\n        // Absent day\n        days.push({\n          date: dateString,\n          firstIn: undefined,\n          lastOut: undefined,\n          totalLogs: []\n        });\n      }\n    }\n\n    return {\n      cattleId,\n      days: days.reverse(), // Most recent first\n      selectedDate: today.toISOString().split('T')[0]\n    };\n  };\n\n  const handleViewAttendance = async (cattle: Cattle) => {\n    setSelectedCattle(cattle);\n\n    // Generate mock data for multiple days - replace with actual API call\n    const historyData = generateMockAttendanceHistory(cattle.id);\n    setAttendanceHistory(historyData);\n    setSelectedDate(historyData.selectedDate);\n    setShowAttendanceModal(true);\n  };\n\n  const handleDateChange = (date: string) => {\n    setSelectedDate(date);\n  };\n\n  const handleViewAttendanceLogs = () => {\n    if (attendanceHistory && selectedDate) {\n      const dayData = attendanceHistory.days.find(day => day.date === selectedDate);\n      if (dayData) {\n        setAttendanceLogs(dayData.totalLogs);\n        setLogsCurrentPage(1);\n        setLogsSearchTerm('');\n        setShowAttendanceLogsModal(true);\n      }\n    }\n  };\n\n  const getCurrentDayAttendance = (): DailyAttendance | null => {\n    if (attendanceHistory && selectedDate) {\n      return attendanceHistory.days.find(day => day.date === selectedDate) || null;\n    }\n    return null;\n  };\n\n  const getFilteredLogs = () => {\n    if (!logsSearchTerm.trim()) return attendanceLogs;\n\n    return attendanceLogs.filter(log =>\n      log.type.toLowerCase().includes(logsSearchTerm.toLowerCase()) ||\n      log.location?.toLowerCase().includes(logsSearchTerm.toLowerCase()) ||\n      new Date(log.timestamp).toLocaleTimeString().includes(logsSearchTerm)\n    );\n  };\n\n  const getPaginatedLogs = () => {\n    const filtered = getFilteredLogs();\n    const startIndex = (logsCurrentPage - 1) * logsPerPage;\n    const endIndex = startIndex + logsPerPage;\n    return filtered.slice(startIndex, endIndex);\n  };\n\n  const getTotalPages = () => {\n    return Math.ceil(getFilteredLogs().length / logsPerPage);\n  };\n\n  const handleScanRFID = async () => {\n    try {\n      const response = await gauShalaApi.cattle.scanRfid();\n\n      if (response.success && response.data) {\n        const { rfidTag, cattleInfo } = response.data;\n        if (cattleInfo) {\n          alert(`RFID Scanned: ${rfidTag}\\nCattle Found: ${cattleInfo.name}`);\n        } else {\n          alert(`RFID Scanned: ${rfidTag}\\nNo cattle found with this tag.`);\n        }\n      } else {\n        console.error('Failed to scan RFID:', response.error);\n        alert('Failed to scan RFID. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error scanning RFID:', error);\n      alert('Error scanning RFID. Please try again.');\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-[400px]\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-6 space-y-6\">\n      {/* Header */}\n      <div className=\"flex justify-between items-center\">\n        <div>\n          <h2 className=\"text-2xl font-bold text-gray-900\">{t('title')}</h2>\n          <p className=\"text-gray-600\">{t('subtitle')}</p>\n        </div>\n        <button\n          onClick={() => navigate('/gaushala/cattle/add')}\n          className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n        >\n          <Plus className=\"h-4 w-4\" />\n          {t('addCattle')}\n        </button>\n      </div>\n\n      {/* Filters */}\n      <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 p-6\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-4\">\n          {/* Search */}\n          <div className=\"lg:col-span-2\">\n            <div className=\"relative\">\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\n              <input\n                type=\"text\"\n                placeholder={t('searchPlaceholder')}\n                value={filter.search}\n                onChange={(e) => setFilter(prev => ({ ...prev, search: e.target.value }))}\n                className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              />\n            </div>\n          </div>\n\n          {/* Health Filter */}\n          <select\n            value={filter.health}\n            onChange={(e) => setFilter(prev => ({ ...prev, health: e.target.value }))}\n            className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n          >\n            <option value=\"\">{t('allHealth')}</option>\n            <option value=\"healthy\">{t('healthy')}</option>\n            <option value=\"sick\">{t('sick')}</option>\n            <option value=\"recovering\">{t('recovering')}</option>\n            <option value=\"vaccination_due\">{t('vaccinationDue')}</option>\n          </select>\n\n          {/* Breed Filter */}\n          <select\n            value={filter.breed}\n            onChange={(e) => setFilter(prev => ({ ...prev, breed: e.target.value }))}\n            className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n          >\n            <option value=\"\">{t('allBreeds')}</option>\n            <option value=\"गिर\">गिर</option>\n            <option value=\"सिंधी\">सिंधी</option>\n            <option value=\"होल्स्टीन\">होल्स्टीन</option>\n            <option value=\"जर्सी\">जर्सी</option>\n          </select>\n\n          {/* RFID Scan Button */}\n          <button\n            onClick={handleScanRFID}\n            className=\"flex items-center justify-center gap-2 px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors\"\n          >\n            <Scan className=\"h-4 w-4\" />\n            {t('scanRFID')}\n          </button>\n        </div>\n      </div>\n\n      {/* Cattle Table */}\n      <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 overflow-hidden\">\n        <div className=\"overflow-x-auto\">\n          <table className=\"w-full\">\n            <thead className=\"bg-gray-50 border-b border-gray-200\">\n              <tr>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t('name')}</th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t('rfidTag')}</th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t('breed')}</th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t('age')}</th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t('weight')}</th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t('health')}</th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t('owner')}</th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t('actions')}</th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white divide-y divide-gray-200\">\n              {filteredCattle.map((cattle) => (\n                <tr key={cattle.id} className=\"hover:bg-gray-50 transition-colors\">\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <div className=\"flex items-center\">\n                      <div className=\"h-10 w-10 bg-blue-100 rounded-full flex items-center justify-center\">\n                        {cattle.photoUrl ? (\n                          <img src={cattle.photoUrl} alt={cattle.name} className=\"h-10 w-10 rounded-full object-cover\" />\n                        ) : (\n                          <span className=\"text-2xl\">🐄</span>\n                        )}\n                      </div>\n                      <div className=\"ml-3\">\n                        <div className=\"text-sm font-medium text-gray-900\">{cattle.name}</div>\n                        <div className=\"text-sm text-gray-500\">ID: {cattle.uniqueAnimalId}</div>\n                      </div>\n                    </div>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <div className=\"flex items-center\">\n                      <Wifi className=\"h-4 w-4 text-blue-500 mr-2\" />\n                      <span className=\"text-sm font-mono text-gray-900\">{cattle.rfidTagNo || 'No RFID'}</span>\n                    </div>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">{getBreedName(cattle.breedId)}</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">{calculateAgeFromDob(cattle.dob)} {t('years')}</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">{cattle.weight || 'N/A'} {cattle.weight ? t('kg') : ''}</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${getHealthColor(cattle.healthStatus || 'unknown')}`}>\n                      {t(cattle.healthStatus || 'unknown')}\n                    </span>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">{getGaushalaName(cattle.gaushalaId)}</td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                    <div className=\"flex items-center space-x-2\">\n                      <button\n                        onClick={() => handleView(cattle)}\n                        className=\"text-blue-600 hover:text-blue-900 p-1 rounded hover:bg-blue-50\"\n                        title={t('view')}\n                      >\n                        <Eye className=\"h-4 w-4\" />\n                      </button>\n                      <button\n                        onClick={() => handleEdit(cattle)}\n                        className=\"text-green-600 hover:text-green-900 p-1 rounded hover:bg-green-50\"\n                        title={t('edit')}\n                      >\n                        <Edit className=\"h-4 w-4\" />\n                      </button>\n                      <button\n                        onClick={() => handleViewAttendance(cattle)}\n                        className=\"text-indigo-600 hover:text-indigo-900 p-1 rounded hover:bg-indigo-50\"\n                        title={t('viewAttendance')}\n                      >\n                        <Clock className=\"h-4 w-4\" />\n                      </button>\n                      <button\n                        onClick={() => handleDelete(cattle)}\n                        className=\"text-red-600 hover:text-red-900 p-1 rounded hover:bg-red-50\"\n                        title={t('delete')}\n                      >\n                        <Trash2 className=\"h-4 w-4\" />\n                      </button>\n                    </div>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n\n        {filteredCattle.length === 0 && (\n          <div className=\"text-center py-12\">\n            <span className=\"text-6xl mx-auto mb-4 block\">🐄</span>\n            <p className=\"text-gray-500 text-lg\">No cattle found matching your filters</p>\n          </div>\n        )}\n      </div>\n\n      {/* View Modal */}\n      {showViewModal && selectedCattle && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n          <div className=\"bg-white rounded-xl max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\n            <div className=\"flex justify-between items-center p-6 border-b\">\n              <h3 className=\"text-xl font-semibold\">{t('cattleDetails')} - {selectedCattle.name}</h3>\n              <button\n                onClick={() => setShowViewModal(false)}\n                className=\"text-gray-400 hover:text-gray-600\"\n              >\n                <X className=\"h-6 w-6\" />\n              </button>\n            </div>\n\n            <div className=\"p-6 grid grid-cols-1 lg:grid-cols-2 gap-6\">\n              {/* Basic Information */}\n              <div className=\"space-y-4\">\n                <h4 className=\"text-lg font-semibold text-gray-900\">{t('basicInfo')}</h4>\n                <div className=\"bg-gray-50 rounded-lg p-4 space-y-3\">\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-gray-600\">{t('name')}:</span>\n                    <span className=\"font-medium\">{selectedCattle.name}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-gray-600\">{t('rfidTag')}:</span>\n                    <span className=\"font-mono font-medium\">{selectedCattle.rfidTag}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-gray-600\">{t('breed')}:</span>\n                    <span className=\"font-medium\">{selectedCattle.breed}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-gray-600\">{t('age')}:</span>\n                    <span className=\"font-medium\">{selectedCattle.age} {t('years')}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-gray-600\">{t('weight')}:</span>\n                    <span className=\"font-medium\">{selectedCattle.weight} {t('kg')}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-gray-600\">{t('health')}:</span>\n                    <span className={`px-2 py-1 rounded-full text-sm font-medium ${getHealthColor(selectedCattle.health)}`}>\n                      {t(selectedCattle.health)}\n                    </span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-gray-600\">{t('owner')}:</span>\n                    <span className=\"font-medium\">{selectedCattle.owner}</span>\n                  </div>\n                </div>\n              </div>\n\n              {/* Location Information */}\n              <div className=\"space-y-4\">\n                <h4 className=\"text-lg font-semibold text-gray-900\">{t('locationInfo')}</h4>\n                <div className=\"bg-gray-50 rounded-lg p-4 space-y-3\">\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-gray-600\">{t('latitude')}:</span>\n                    <span className=\"font-medium\">{selectedCattle.location.latitude.toFixed(6)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-gray-600\">{t('longitude')}:</span>\n                    <span className=\"font-medium\">{selectedCattle.location.longitude.toFixed(6)}</span>\n                  </div>\n                  {selectedCattle.location.address && (\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-gray-600\">{t('address')}:</span>\n                      <span className=\"font-medium text-right\">{selectedCattle.location.address}</span>\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              {/* Collection Statistics */}\n              <div className=\"space-y-4\">\n                <h4 className=\"text-lg font-semibold text-gray-900\">{t('collectionStats')}</h4>\n                <div className=\"bg-gray-50 rounded-lg p-4 space-y-3\">\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-gray-600\">{t('totalCollected')}:</span>\n                    <span className=\"font-medium\">{selectedCattle.totalDungCollected} {t('kg')}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-gray-600\">{t('lastCollection')}:</span>\n                    <span className=\"font-medium\">\n                      {selectedCattle.lastDungCollection ? formatDate(selectedCattle.lastDungCollection) : t('never')}\n                    </span>\n                  </div>\n                </div>\n              </div>\n\n              {/* Medical History */}\n              <div className=\"space-y-4\">\n                <h4 className=\"text-lg font-semibold text-gray-900\">{t('medicalHistory')}</h4>\n                <div className=\"bg-gray-50 rounded-lg p-4 space-y-3\">\n                  {selectedCattle.medicalHistory.map((record) => (\n                    <div key={record.id} className=\"border-l-4 border-blue-500 pl-3\">\n                      <div className=\"flex justify-between items-start\">\n                        <div>\n                          <p className=\"font-medium\">{record.description}</p>\n                          <p className=\"text-sm text-gray-600\">{record.veterinarian}</p>\n                          {record.medication && (\n                            <p className=\"text-xs text-gray-500\">{record.medication}</p>\n                          )}\n                        </div>\n                        <span className=\"text-sm text-gray-500\">{formatDate(record.date)}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n\n      {/* Edit Cattle Modal */}\n      {showEditModal && selectedCattle && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n          <div className=\"bg-white rounded-xl max-w-2xl w-full max-h-[90vh] overflow-y-auto\">\n            <div className=\"flex justify-between items-center p-6 border-b\">\n              <h3 className=\"text-xl font-semibold\">{t('editCattle')} - {selectedCattle.name}</h3>\n              <button\n                onClick={() => setShowEditModal(false)}\n                className=\"text-gray-400 hover:text-gray-600\"\n              >\n                <X className=\"h-6 w-6\" />\n              </button>\n            </div>\n            <div className=\"p-6 space-y-6\">\n              {/* Basic Information */}\n              <div>\n                <h4 className=\"text-lg font-semibold mb-4\">Basic Information</h4>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      Cattle Name *\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={editFormData.name || ''}\n                      onChange={(e) => handleEditInputChange('name', e.target.value)}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                      required\n                    />\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      RFID Tag *\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={editFormData.rfidTag || ''}\n                      onChange={(e) => handleEditInputChange('rfidTag', e.target.value)}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                      required\n                    />\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      Breed *\n                    </label>\n                    <select\n                      value={editFormData.breed || ''}\n                      onChange={(e) => handleEditInputChange('breed', e.target.value)}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                      required\n                    >\n                      <option value=\"\">Select Breed</option>\n                      <option value=\"gir\">Gir</option>\n                      <option value=\"sahiwal\">Sahiwal</option>\n                      <option value=\"sindhi\">Red Sindhi</option>\n                      <option value=\"tharparkar\">Tharparkar</option>\n                      <option value=\"holstein\">Holstein Friesian</option>\n                      <option value=\"jersey\">Jersey</option>\n                    </select>\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      Health Status\n                    </label>\n                    <select\n                      value={editFormData.health || ''}\n                      onChange={(e) => handleEditInputChange('health', e.target.value)}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    >\n                      <option value=\"healthy\">Healthy</option>\n                      <option value=\"sick\">Sick</option>\n                      <option value=\"recovering\">Recovering</option>\n                      <option value=\"vaccination_due\">Vaccination Due</option>\n                    </select>\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      Age (months)\n                    </label>\n                    <input\n                      type=\"number\"\n                      value={editFormData.age || ''}\n                      onChange={(e) => handleEditInputChange('age', e.target.value)}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                      min=\"0\"\n                    />\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      Weight (kg)\n                    </label>\n                    <input\n                      type=\"number\"\n                      value={editFormData.weight || ''}\n                      onChange={(e) => handleEditInputChange('weight', e.target.value)}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                      min=\"0\"\n                      step=\"0.1\"\n                    />\n                  </div>\n                </div>\n              </div>\n\n              {/* Owner Information */}\n              <div>\n                <h4 className=\"text-lg font-semibold mb-4\">Owner Information</h4>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      Owner Name *\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={editFormData.owner || ''}\n                      onChange={(e) => handleEditInputChange('owner', e.target.value)}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                      required\n                    />\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      Owner ID/Phone\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={editFormData.ownerId || ''}\n                      onChange={(e) => handleEditInputChange('ownerId', e.target.value)}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                  </div>\n                </div>\n              </div>\n\n              {/* Location Information */}\n              <div>\n                <h4 className=\"text-lg font-semibold mb-4\">Location Information</h4>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div className=\"md:col-span-2\">\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      Address\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={editFormData.location?.address || ''}\n                      onChange={(e) => handleEditInputChange('location.address', e.target.value)}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      Latitude\n                    </label>\n                    <input\n                      type=\"number\"\n                      value={editFormData.location?.latitude || ''}\n                      onChange={(e) => handleEditInputChange('location.latitude', e.target.value)}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                      step=\"any\"\n                    />\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      Longitude\n                    </label>\n                    <input\n                      type=\"number\"\n                      value={editFormData.location?.longitude || ''}\n                      onChange={(e) => handleEditInputChange('location.longitude', e.target.value)}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                      step=\"any\"\n                    />\n                  </div>\n                </div>\n              </div>\n\n              {/* Action Buttons */}\n              <div className=\"flex justify-end gap-3 pt-4 border-t\">\n                <button\n                  onClick={() => {\n                    setShowEditModal(false);\n                    setEditFormData({});\n                  }}\n                  disabled={isUpdating}\n                  className=\"px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 disabled:opacity-50\"\n                >\n                  Cancel\n                </button>\n                <button\n                  onClick={handleEditSubmit}\n                  disabled={isUpdating || !editFormData.name || !editFormData.rfidTag}\n                  className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 flex items-center gap-2\"\n                >\n                  {isUpdating && (\n                    <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\"></div>\n                  )}\n                  {isUpdating ? 'Updating...' : 'Update Cattle'}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Cow Dung Transaction Modal */}\n      {showTransactionModal && selectedCattle && (\n        <CowDungTransaction\n          cattle={selectedCattle}\n          onClose={() => {\n            setShowTransactionModal(false);\n            setSelectedCattle(null);\n          }}\n          onSuccess={handleTransactionSuccess}\n        />\n      )}\n\n      {/* Transaction History Modal */}\n      {showHistoryModal && selectedCattle && (\n        <TransactionHistory\n          farmerId={selectedCattle.ownerId}\n          farmerName={selectedCattle.owner}\n          onClose={() => {\n            setShowHistoryModal(false);\n            setSelectedCattle(null);\n          }}\n        />\n      )}\n\n      {/* Daily Attendance Modal */}\n      {showAttendanceModal && selectedCattle && attendanceHistory && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n          <div className=\"bg-white rounded-xl max-w-5xl w-full h-[85vh] flex flex-col shadow-sm border border-gray-100\">\n            {/* Header */}\n            <div className=\"p-6 border-b border-gray-100\">\n              <div className=\"flex justify-between items-center\">\n                <div>\n                  <h2 className=\"text-lg font-semibold text-gray-900 flex items-center gap-3\">\n                    <div className=\"h-10 w-10 bg-blue-100 rounded-full flex items-center justify-center\">\n                      <Clock className=\"h-5 w-5 text-blue-600\" />\n                    </div>\n                    {t('attendanceHistory')}\n                  </h2>\n                  <p className=\"text-gray-600 mt-1\">{selectedCattle.name} - {t('last30Days')}</p>\n                </div>\n                <button\n                  onClick={() => {\n                    setShowAttendanceModal(false);\n                    setSelectedCattle(null);\n                    setAttendanceHistory(null);\n                  }}\n                  className=\"text-gray-400 hover:text-gray-600 p-2 rounded-lg hover:bg-gray-100 transition-colors\"\n                >\n                  <X className=\"h-5 w-5\" />\n                </button>\n              </div>\n            </div>\n\n            {/* Content */}\n            <div className=\"flex-1 overflow-y-auto p-6 space-y-4\">\n              {/* Date Selector */}\n              <div>\n                <h3 className=\"text-md font-semibold text-gray-800 mb-4 pb-2 border-b border-gray-200 flex items-center gap-2\">\n                  <Calendar className=\"h-5 w-5 text-blue-600\" />\n                  📅 {t('selectDate')}\n                </h3>\n                <input\n                  type=\"date\"\n                  value={selectedDate}\n                  onChange={(e) => handleDateChange(e.target.value)}\n                  max={new Date().toISOString().split('T')[0]}\n                  min={new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString().split('T')[0]}\n                  className=\"w-full px-3 py-2 bg-white border border-gray-300 rounded-lg transition-all duration-200 text-gray-900 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent hover:border-gray-400\"\n                />\n              </div>\n\n              {(() => {\n                const currentDay = getCurrentDayAttendance();\n                if (!currentDay || currentDay.totalLogs.length === 0) {\n                  return (\n                    <div className=\"text-center py-12\">\n                      <div className=\"h-16 w-16 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                        <span className=\"text-2xl\">📅</span>\n                      </div>\n                      <h3 className=\"text-lg font-semibold text-gray-800 mb-2\">{t('noDataForDate')}</h3>\n                      <p className=\"text-gray-600 mb-4\">{selectedDate === new Date().toISOString().split('T')[0] ? t('today') : new Date(selectedDate).toLocaleDateString()}</p>\n                      <div className=\"inline-flex items-center px-3 py-1 bg-red-100 text-red-800 text-sm font-medium rounded-full\">\n                        {t('absent')}\n                      </div>\n                    </div>\n                  );\n                }\n\n                return (\n                  <>\n                    {/* Quick Stats for Selected Date */}\n                    <div>\n                      <h3 className=\"text-md font-semibold text-gray-800 mb-3 pb-2 border-b border-gray-200 flex items-center gap-2\">\n                        <Activity className=\"h-5 w-5 text-blue-600\" />\n                        📊 {t('dayView')}\n                      </h3>\n                      <div className=\"grid grid-cols-3 gap-4\">\n                        <div className=\"text-center p-3 bg-green-50 rounded-lg\">\n                          <LogIn className=\"h-5 w-5 text-green-600 mx-auto mb-1\" />\n                          <div className=\"text-xs text-gray-600\">{t('firstIn')}</div>\n                          <div className=\"text-sm font-bold text-gray-900\">\n                            {currentDay.firstIn ?\n                              new Date(currentDay.firstIn.timestamp).toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})\n                              : '--:--'\n                            }\n                          </div>\n                        </div>\n\n                        <div className=\"text-center p-3 bg-orange-50 rounded-lg\">\n                          <LogOut className=\"h-5 w-5 text-orange-600 mx-auto mb-1\" />\n                          <div className=\"text-xs text-gray-600\">{t('lastOut')}</div>\n                          <div className=\"text-sm font-bold text-gray-900\">\n                            {currentDay.lastOut ?\n                              new Date(currentDay.lastOut.timestamp).toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})\n                              : '--:--'\n                            }\n                          </div>\n                        </div>\n\n                        <div className=\"text-center p-3 bg-blue-50 rounded-lg\">\n                          <Activity className=\"h-5 w-5 text-blue-600 mx-auto mb-1\" />\n                          <div className=\"text-xs text-gray-600\">{t('totalEntries')}</div>\n                          <div className=\"text-sm font-bold text-gray-900\">{currentDay.totalLogs.length}</div>\n                        </div>\n                      </div>\n                    </div>\n\n                    {/* Attendance Summary for Selected Date */}\n                    <div>\n                      <h3 className=\"text-md font-semibold text-gray-800 mb-3 pb-2 border-b border-gray-200 flex items-center gap-2\">\n                        <Calendar className=\"h-5 w-5 text-blue-600\" />\n                        📋 {new Date(selectedDate).toLocaleDateString()}\n                        {selectedDate === new Date().toISOString().split('T')[0] && (\n                          <span className=\"text-xs bg-blue-100 text-blue-800 px-2 py-1 rounded-full ml-2\">{t('today')}</span>\n                        )}\n                      </h3>\n\n                      <div className=\"grid grid-cols-2 md:grid-cols-4 gap-3\">\n                        <div className=\"space-y-1\">\n                          <label className=\"block text-xs font-medium text-gray-600\">{t('firstIn')} Details</label>\n                          <div className=\"text-sm text-gray-900 font-medium\">\n                            {currentDay.firstIn ?\n                              new Date(currentDay.firstIn.timestamp).toLocaleTimeString()\n                              : '--'\n                            }\n                          </div>\n                        </div>\n\n                        <div className=\"space-y-1\">\n                          <label className=\"block text-xs font-medium text-gray-600\">{t('lastOut')} Details</label>\n                          <div className=\"text-sm text-gray-900 font-medium\">\n                            {currentDay.lastOut ?\n                              new Date(currentDay.lastOut.timestamp).toLocaleTimeString()\n                              : '--'\n                            }\n                          </div>\n                        </div>\n\n                        <div className=\"space-y-1\">\n                          <label className=\"block text-xs font-medium text-gray-600\">Status</label>\n                          <div className=\"flex items-center gap-1\">\n                            <div className=\"w-2 h-2 rounded-full bg-green-500\"></div>\n                            <span className=\"text-sm text-gray-900 font-medium\">{t('present')}</span>\n                          </div>\n                        </div>\n\n                        <div className=\"space-y-1\">\n                          <label className=\"block text-xs font-medium text-gray-600\">Duration</label>\n                          <div className=\"text-sm text-gray-900 font-medium\">\n                            {currentDay.firstIn && currentDay.lastOut ?\n                              `${Math.round((currentDay.lastOut.timestamp - currentDay.firstIn.timestamp) / (1000 * 60 * 60))}h`\n                              : '--'\n                            }\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n\n                    {/* Quick Week View */}\n                    <div>\n                      <h3 className=\"text-md font-semibold text-gray-800 mb-4 pb-2 border-b border-gray-200 flex items-center gap-2\">\n                        <Calendar className=\"h-5 w-5 text-blue-600\" />\n                        📅 {t('last7Days')}\n                      </h3>\n                      <div className=\"grid grid-cols-7 gap-2\">\n                        {attendanceHistory.days.slice(0, 7).map((day, index) => (\n                          <div\n                            key={day.date}\n                            className={`p-3 rounded-lg text-center cursor-pointer transition-colors border ${\n                              day.date === selectedDate\n                                ? 'bg-blue-100 border-blue-200 text-blue-800'\n                                : day.totalLogs.length > 0\n                                ? 'bg-white border-green-200 hover:bg-green-50'\n                                : 'bg-white border-red-200 hover:bg-red-50'\n                            }`}\n                            onClick={() => handleDateChange(day.date)}\n                          >\n                            <div className=\"text-xs font-medium text-gray-600\">\n                              {new Date(day.date).toLocaleDateString([], { weekday: 'short' })}\n                            </div>\n                            <div className=\"text-sm font-bold text-gray-900\">\n                              {new Date(day.date).getDate()}\n                            </div>\n                            <div className=\"text-xs mt-1\">\n                              {day.totalLogs.length > 0 ? (\n                                <span className=\"text-green-600\">✓</span>\n                              ) : (\n                                <span className=\"text-red-600\">✗</span>\n                              )}\n                            </div>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n\n                    {/* Action Buttons */}\n                    <div className=\"flex justify-start gap-4 pt-4 border-t border-gray-100\">\n                      <button\n                        onClick={handleViewAttendanceLogs}\n                        className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n                      >\n                        <Eye className=\"h-4 w-4\" />\n                        {t('viewLogs')} ({currentDay.totalLogs.length})\n                      </button>\n\n                      <button\n                        onClick={() => {\n                          setShowAttendanceModal(false);\n                          setSelectedCattle(null);\n                          setAttendanceHistory(null);\n                        }}\n                        className=\"px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors\"\n                      >\n                        {t('close')}\n                      </button>\n                    </div>\n                  </>\n                );\n              })()}\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Attendance Logs Modal */}\n      {showAttendanceLogsModal && attendanceLogs.length > 0 && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n          <div className=\"bg-white rounded-xl max-w-4xl w-full h-[85vh] flex flex-col shadow-sm border border-gray-100\">\n            {/* Header */}\n            <div className=\"p-6 border-b border-gray-100\">\n              <div className=\"flex justify-between items-center\">\n                <div>\n                  <h2 className=\"text-lg font-semibold text-gray-900 flex items-center gap-3\">\n                    <div className=\"h-10 w-10 bg-blue-100 rounded-full flex items-center justify-center\">\n                      <History className=\"h-5 w-5 text-blue-600\" />\n                    </div>\n                    {t('attendanceLogs')}\n                  </h2>\n                  <p className=\"text-gray-600 mt-1\">{selectedCattle?.name} - {new Date(selectedDate).toLocaleDateString()}</p>\n                </div>\n                <button\n                  onClick={() => {\n                    setShowAttendanceLogsModal(false);\n                    setAttendanceLogs([]);\n                  }}\n                  className=\"text-gray-400 hover:text-gray-600 p-2 rounded-lg hover:bg-gray-100 transition-colors\"\n                >\n                  <X className=\"h-5 w-5\" />\n                </button>\n              </div>\n            </div>\n\n            {/* Content */}\n            <div className=\"flex-1 overflow-y-auto p-6\">\n              {/* Search and Summary */}\n              <div className=\"mb-4 space-y-3\">\n                <div className=\"flex items-center justify-between\">\n                  <h3 className=\"text-md font-semibold text-gray-800 flex items-center gap-2\">\n                    <Search className=\"h-4 w-4 text-blue-600\" />\n                    Search Logs ({getFilteredLogs().length} entries)\n                  </h3>\n                  <div className=\"text-sm text-gray-600\">\n                    Page {logsCurrentPage} of {getTotalPages()}\n                  </div>\n                </div>\n\n                <input\n                  type=\"text\"\n                  placeholder=\"Search by location, type, or time...\"\n                  value={logsSearchTerm}\n                  onChange={(e) => {\n                    setLogsSearchTerm(e.target.value);\n                    setLogsCurrentPage(1);\n                  }}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                />\n              </div>\n\n              {getPaginatedLogs().length === 0 ? (\n                <div className=\"text-center py-8\">\n                  <div className=\"h-16 w-16 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                    <Search className=\"h-6 w-6 text-gray-400\" />\n                  </div>\n                  <h3 className=\"text-lg font-semibold text-gray-600 mb-2\">No logs found</h3>\n                  <p className=\"text-gray-500\">\n                    {logsSearchTerm ? 'Try adjusting your search terms' : 'No attendance logs for this date'}\n                  </p>\n                  {logsSearchTerm && (\n                    <button\n                      onClick={() => {\n                        setLogsSearchTerm('');\n                        setLogsCurrentPage(1);\n                      }}\n                      className=\"mt-3 text-blue-600 hover:text-blue-700 text-sm font-medium\"\n                    >\n                      Clear search\n                    </button>\n                  )}\n                </div>\n              ) : (\n                <div className=\"space-y-3\">\n                  {getPaginatedLogs().map((log, index) => (\n                  <div key={log.id} className=\"flex items-center justify-between p-4 bg-white border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors\">\n                    <div className=\"flex items-center gap-4\">\n                      <div className=\"flex items-center justify-center w-8 h-8 rounded-full bg-gray-100 text-xs font-bold text-gray-600\">\n                        {(logsCurrentPage - 1) * logsPerPage + index + 1}\n                      </div>\n\n                      <div className=\"flex items-center gap-3\">\n                        <div className={`p-2 rounded-lg ${log.type === 'IN' ? 'bg-green-100' : 'bg-orange-100'}`}>\n                          {log.type === 'IN' ? (\n                            <LogIn className=\"h-4 w-4 text-green-600\" />\n                          ) : (\n                            <LogOut className=\"h-4 w-4 text-orange-600\" />\n                          )}\n                        </div>\n\n                        <div>\n                          <div className=\"flex items-center gap-2\">\n                            <span className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium ${\n                              log.type === 'IN' ? 'bg-green-100 text-green-800' : 'bg-orange-100 text-orange-800'\n                            }`}>\n                              {log.type}\n                            </span>\n                            <span className=\"text-sm text-gray-600\">{log.location}</span>\n                          </div>\n                          {log.rfidScanned && (\n                            <div className=\"flex items-center gap-1 text-xs text-blue-600 mt-1\">\n                              <Wifi className=\"h-3 w-3\" />\n                              RFID Scanned\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"text-right\">\n                      <p className=\"font-mono text-sm font-medium text-gray-900\">\n                        {new Date(log.timestamp).toLocaleTimeString()}\n                      </p>\n                      <p className=\"text-xs text-gray-500\">\n                        {new Date(log.timestamp).toLocaleDateString()}\n                      </p>\n                    </div>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n\n            {/* Footer */}\n            <div className=\"p-6 border-t border-gray-100\">\n              <div className=\"flex items-center justify-between\">\n                <button\n                  onClick={() => {\n                    setShowAttendanceLogsModal(false);\n                    setAttendanceLogs([]);\n                    setLogsCurrentPage(1);\n                    setLogsSearchTerm('');\n                  }}\n                  className=\"px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors\"\n                >\n                  {t('close')}\n                </button>\n\n                {getTotalPages() > 1 && (\n                  <div className=\"flex items-center gap-2\">\n                    <button\n                      onClick={() => setLogsCurrentPage(Math.max(1, logsCurrentPage - 1))}\n                      disabled={logsCurrentPage === 1}\n                      className=\"px-3 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n                    >\n                      Previous\n                    </button>\n\n                    <div className=\"flex items-center gap-1\">\n                      {Array.from({ length: Math.min(5, getTotalPages()) }, (_, i) => {\n                        let pageNum;\n                        if (getTotalPages() <= 5) {\n                          pageNum = i + 1;\n                        } else if (logsCurrentPage <= 3) {\n                          pageNum = i + 1;\n                        } else if (logsCurrentPage >= getTotalPages() - 2) {\n                          pageNum = getTotalPages() - 4 + i;\n                        } else {\n                          pageNum = logsCurrentPage - 2 + i;\n                        }\n\n                        return (\n                          <button\n                            key={pageNum}\n                            onClick={() => setLogsCurrentPage(pageNum)}\n                            className={`px-3 py-2 text-sm rounded-lg transition-colors ${\n                              logsCurrentPage === pageNum\n                                ? 'bg-blue-600 text-white'\n                                : 'border border-gray-300 text-gray-700 hover:bg-gray-50'\n                            }`}\n                          >\n                            {pageNum}\n                          </button>\n                        );\n                      })}\n                    </div>\n\n                    <button\n                      onClick={() => setLogsCurrentPage(Math.min(getTotalPages(), logsCurrentPage + 1))}\n                      disabled={logsCurrentPage === getTotalPages()}\n                      className=\"px-3 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n                    >\n                      Next\n                    </button>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}","/**\r\n * Reusable form field components for cattle registration\r\n * BUGFIX: Extracted from AddCattle.tsx to prevent component re-creation causing input unfocus\r\n */\r\n\r\nimport { AlertCircle, Upload, X } from 'lucide-react';\r\n\r\nexport const InputField = ({\r\n  label,\r\n  value,\r\n  onChange,\r\n  type = 'text',\r\n  placeholder,\r\n  required = false,\r\n  error,\r\n  className = '',\r\n  ...props\r\n}: any) => (\r\n  <div className={`space-y-2 ${className}`}>\r\n    <label className=\"block text-sm font-medium text-gray-800\">\r\n      {label} {required && <span className=\"text-red-500\">*</span>}\r\n    </label>\r\n    <input\r\n      type={type}\r\n      value={value}\r\n      onChange={(e) => onChange(e.target.value)}\r\n      placeholder={placeholder}\r\n      className={`w-full px-3 py-2 bg-white border rounded-lg transition-all duration-200 text-gray-900 placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent hover:border-gray-400 ${\r\n        error ? 'border-red-300 bg-red-50' : 'border-gray-300'\r\n      }`}\r\n      {...props}\r\n    />\r\n    {error && (\r\n      <div className=\"flex items-center gap-2 text-sm text-red-600\">\r\n        <AlertCircle className=\"h-4 w-4\" />\r\n        {error}\r\n      </div>\r\n    )}\r\n  </div>\r\n);\r\n\r\nexport const SelectField = ({\r\n  label,\r\n  value,\r\n  onChange,\r\n  options,\r\n  placeholder,\r\n  required = false,\r\n  error,\r\n  className = ''\r\n}: any) => (\r\n  <div className={`space-y-2 ${className}`}>\r\n    <label className=\"block text-sm font-medium text-gray-800\">\r\n      {label} {required && <span className=\"text-red-500\">*</span>}\r\n    </label>\r\n    <select\r\n      value={value}\r\n      onChange={(e) => onChange(e.target.value)}\r\n      className={`w-full px-3 py-2 bg-white border rounded-lg transition-all duration-200 text-gray-900 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent hover:border-gray-400 ${\r\n        error ? 'border-red-300 bg-red-50' : 'border-gray-300'\r\n      }`}\r\n    >\r\n      <option value=\"\">{placeholder}</option>\r\n      {options.map((option: any) => (\r\n        <option key={option.value} value={option.value}>\r\n          {option.label}\r\n        </option>\r\n      ))}\r\n    </select>\r\n    {error && (\r\n      <div className=\"flex items-center gap-2 text-sm text-red-600\">\r\n        <AlertCircle className=\"h-4 w-4\" />\r\n        {error}\r\n      </div>\r\n    )}\r\n  </div>\r\n);\r\n\r\nexport const TextAreaField = ({\r\n  label,\r\n  value,\r\n  onChange,\r\n  placeholder,\r\n  rows = 3,\r\n  className = ''\r\n}: any) => (\r\n  <div className={`space-y-2 ${className}`}>\r\n    <label className=\"block text-sm font-medium text-gray-800\">\r\n      {label}\r\n    </label>\r\n    <textarea\r\n      value={value}\r\n      onChange={(e) => onChange(e.target.value)}\r\n      placeholder={placeholder}\r\n      rows={rows}\r\n      className=\"w-full px-3 py-2 bg-white border border-gray-300 rounded-lg transition-all duration-200 text-gray-900 placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent hover:border-gray-400 resize-none\"\r\n    />\r\n  </div>\r\n);\r\n\r\nexport const FileUploadField = ({\r\n  label,\r\n  value,\r\n  onChange,\r\n  accept,\r\n  className = ''\r\n}: any) => (\r\n  <div className={`space-y-2 ${className}`}>\r\n    <label className=\"block text-sm font-medium text-gray-800\">\r\n      {label}\r\n    </label>\r\n    <div className=\"relative\">\r\n      <input\r\n        type=\"file\"\r\n        accept={accept}\r\n        onChange={(e) => onChange(e.target.files?.[0] || null)}\r\n        className=\"hidden\"\r\n        id={label.replace(/\\s+/g, '-').toLowerCase()}\r\n      />\r\n      <label\r\n        htmlFor={label.replace(/\\s+/g, '-').toLowerCase()}\r\n        className=\"flex items-center justify-center w-full px-3 py-2 bg-white border-2 border-dashed border-gray-300 rounded-lg transition-all duration-200 cursor-pointer hover:border-blue-400 hover:bg-blue-50 group\"\r\n      >\r\n        <div className=\"flex items-center gap-3 text-gray-600 group-hover:text-blue-600\">\r\n          <Upload className=\"h-5 w-5\" />\r\n          <span className=\"text-sm font-medium\">\r\n            {value ? value.name : `Choose ${label.toLowerCase()}`}\r\n          </span>\r\n        </div>\r\n      </label>\r\n      {value && (\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => onChange(null)}\r\n          className=\"absolute top-2 right-2 p-1 bg-red-100 text-red-600 rounded-full hover:bg-red-200 transition-colors\"\r\n        >\r\n          <X className=\"h-4 w-4\" />\r\n        </button>\r\n      )}\r\n    </div>\r\n  </div>\r\n);\r\n","/**\n * Add Cattle Page - Production-level cattle registration form\n * Updated to use master data IDs and proper field mappings for backend integration\n */\n\nimport { useState, useCallback, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  Save, ArrowLeft, Scan, Upload, Camera, FileText,\n  User, Activity, Baby, Globe, Settings, Ruler,\n  AlertCircle, CheckCircle, Clock, Plus, X\n} from 'lucide-react';\nimport {\n  gauShalaApi,\n  calculateDobFromAge,\n  type Breed,\n  type Species,\n  type Gender,\n  type Color,\n  type Cattle\n} from '../../services/gaushala/api';\n\nimport { InputField, SelectField, TextAreaField, FileUploadField } from './CattleFormFields';\ninterface LanguageContextType {\n  language: 'hi' | 'en';\n  t: (key: string) => string;\n}\n\ninterface AddCattleProps {\n  languageContext: LanguageContextType;\n}\n\nexport default function AddCattle({ languageContext }: AddCattleProps) {\n  const navigate = useNavigate();\n\n  // Master data state\n  const [breeds, setBreeds] = useState<Breed[]>([]);\n  const [species, setSpecies] = useState<Species[]>([]);\n  const [genders, setGenders] = useState<Gender[]>([]);\n  const [colors, setColors] = useState<Color[]>([]);\n  const [masterDataLoading, setMasterDataLoading] = useState(true);\n\n  const [formData, setFormData] = useState({\n    // Basic Identification - Updated to use IDs\n    uniqueAnimalId: '',\n    name: '',\n    breedId: 0,\n    speciesId: 0,\n    genderId: 0,\n    colorId: 0,\n    ageYears: 0,  // User enters age, will be converted to dob on submit\n    dateOfEntry: new Date().toISOString().split('T')[0],  // Store as date string for form input\n\n\n    // Health & Medical Records\n    vaccinationStatus: '',\n    disability: '',\n    veterinarianName: '',\n    dewormingSchedule: '',\n    lastHealthCheckup: '',\n    veterinarianContact: '',\n    medicalHistory: '',\n\n    // Physical Characteristics - Updated field name\n    weight: '',\n    hornStatus: '',\n    rfidTagNo: '',  // Changed from rfidTagNumber to match backend\n    height: '',\n    earTagNumber: '',\n    microchipNumber: '',\n\n    // Reproductive Details (Female only)\n    milkingStatus: '',\n    milkYieldPerDay: '',\n    numberOfCalves: '',\n    lactationNumber: '',\n    lastCalvingDate: '',\n    pregnancyStatus: '',\n\n    // Origin & Ownership\n    sourceOfAcquisition: '',\n    previousOwner: '',\n    dateOfAcquisition: '',\n    ownershipStatus: '',\n\n    // Shelter & Feeding\n    shedNumber: '',\n    typeOfFeed: '',\n    feedingSchedule: '',\n\n    // Supporting Documents\n    photoFile: null as File | null,\n    healthCertificate: null as File | null,\n    vaccinationRecord: null as File | null,\n    purchaseDocument: null as File | null\n  });\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [isScanning, setIsScanning] = useState(false);\n  const [message, setMessage] = useState<{ type: 'success' | 'error' | 'warning'; text: string } | null>(null);\n  const [errors, setErrors] = useState<Record<string, string>>({});\n  const [activeSection, setActiveSection] = useState(0);\n\n  // Load master data on component mount\n  useEffect(() => {\n    const loadMasterData = async () => {\n      setMasterDataLoading(true);\n      try {\n        const [breedsRes, speciesRes, gendersRes, colorsRes] = await Promise.all([\n          gauShalaApi.masterData.getAllBreeds(),\n          gauShalaApi.masterData.getAllSpecies(),\n          gauShalaApi.masterData.getAllGenders(),\n          gauShalaApi.masterData.getAllColors(),\n        ]);\n\n        if (breedsRes.success && breedsRes.data) setBreeds(breedsRes.data);\n        if (speciesRes.success && speciesRes.data) setSpecies(speciesRes.data);\n        if (gendersRes.success && gendersRes.data) setGenders(gendersRes.data);\n        if (colorsRes.success && colorsRes.data) setColors(colorsRes.data);\n      } catch (error) {\n        console.error('Failed to load master data:', error);\n        setMessage({\n          type: 'error',\n          text: 'Failed to load reference data. Please refresh the page.'\n        });\n      } finally {\n        setMasterDataLoading(false);\n      }\n    };\n\n    loadMasterData();\n  }, []);\n\n  const handleInputChange = useCallback((field: string, value: string | File | null) => {\n    setFormData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n\n    // Clear error for this field - use functional update to prevent input unfocus bug\n    setErrors(prev => {\n      if (prev[field]) {\n        const newErrors = { ...prev };\n        delete newErrors[field];\n        return newErrors;\n      }\n      return prev;\n    });\n    setMessage(null);\n  }, []); // Empty dependency array - function is now stable\n\n  const handleScanRfid = async () => {\n    setIsScanning(true);\n    try {\n      const response = await gauShalaApi.cattle.scanRfid();\n      if (response.success && response.data) {\n        handleInputChange('rfidTagNo', response.data.rfidTag);\n\n        if (response.data.cattleInfo) {\n          setMessage({\n            type: 'warning',\n            text: 'RFID tag already exists for another cattle'\n          });\n        } else {\n          setMessage({\n            type: 'success',\n            text: 'RFID tag scanned successfully'\n          });\n        }\n      }\n    } catch (error) {\n      setMessage({\n        type: 'error',\n        text: 'Failed to scan RFID tag'\n      });\n    } finally {\n      setIsScanning(false);\n    }\n  };\n\n  const validateForm = () => {\n    const newErrors: Record<string, string> = {};\n\n    // Required fields validation - Updated for ID fields\n    if (!formData.uniqueAnimalId.trim()) newErrors.uniqueAnimalId = 'Unique Animal ID is required';\n    if (formData.breedId === 0) newErrors.breedId = 'Breed is required';\n    if (formData.speciesId === 0) newErrors.speciesId = 'Species is required';\n    if (formData.genderId === 0) newErrors.genderId = 'Gender is required';\n    if (!formData.dateOfEntry) newErrors.dateOfEntry = 'Date of Entry is required';\n    if (!formData.rfidTagNo.trim()) newErrors.rfidTagNo = 'RFID Tag Number is required';\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  // Helper function to convert date string (YYYY-MM-DD) to LocalDateTime format (YYYY-MM-DDTHH:MM:SS)\n  const convertToLocalDateTime = (dateString: string): string | undefined => {\n    if (!dateString || dateString.trim() === '') return undefined;\n    // If already in ISO format, return as-is\n    if (dateString.includes('T')) return dateString;\n    // Convert date-only string to LocalDateTime at midnight\n    return `${dateString}T00:00:00`;\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (!validateForm()) {\n      setMessage({\n        type: 'error',\n        text: 'Please fill in all required fields'\n      });\n      return;\n    }\n\n    setIsLoading(true);\n    setMessage(null);\n\n    try {\n      // Transform formData to match Cattle interface for backend - COMPLETE FIELD MAPPING\n      const cattleData: Omit<Cattle, 'id' | 'createdAt' | 'updatedAt'> = {\n        uniqueAnimalId: formData.uniqueAnimalId,\n        name: formData.name || undefined,\n        breedId: formData.breedId,\n        speciesId: formData.speciesId,\n        genderId: formData.genderId,\n        colorId: formData.colorId,\n        dob: formData.ageYears > 0 ? calculateDobFromAge(formData.ageYears) : new Date().toISOString(),\n\n        // Physical Characteristics\n        weight: formData.weight ? parseFloat(formData.weight) : undefined,\n        height: formData.height ? parseFloat(formData.height) : undefined,\n        hornStatus: formData.hornStatus || undefined,\n        rfidTagNo: formData.rfidTagNo,\n        earTagNo: formData.earTagNumber || undefined,\n        microchipNo: formData.microchipNumber || undefined,\n        shedNumber: formData.shedNumber || undefined,\n\n        // Health & Medical Records\n        vaccinationStatus: formData.vaccinationStatus || undefined,\n        disability: formData.disability || undefined,\n        dewormingSchedule: formData.dewormingSchedule || undefined,\n        medicalHistory: formData.medicalHistory || undefined,\n        lastHealthCheckupDate: formData.lastHealthCheckup ? convertToLocalDateTime(formData.lastHealthCheckup) : undefined,\n        vetName: formData.veterinarianName || undefined,\n        vetContact: formData.veterinarianContact || undefined,\n\n        // Reproductive Details\n        milkingStatus: formData.milkingStatus || undefined,\n        lactationNumber: formData.lactationNumber ? parseInt(formData.lactationNumber) : undefined,\n        milkYieldPerDay: formData.milkYieldPerDay ? parseFloat(formData.milkYieldPerDay) : undefined,\n        lastCalvingDate: formData.lastCalvingDate ? convertToLocalDateTime(formData.lastCalvingDate) : undefined,\n        calvesCount: formData.numberOfCalves ? parseInt(formData.numberOfCalves) : undefined,\n        pregnancyStatus: formData.pregnancyStatus || undefined,\n\n        // Origin & Ownership\n        sourceId: formData.sourceOfAcquisition ? parseInt(formData.sourceOfAcquisition) : undefined,\n        dateOfAcquisition: formData.dateOfAcquisition ? convertToLocalDateTime(formData.dateOfAcquisition) : undefined,\n        previousOwner: formData.previousOwner || undefined,\n        ownershipId: formData.ownershipStatus ? parseInt(formData.ownershipStatus) : undefined,\n\n        // Shelter & Feeding\n        feedingSchedule: formData.feedingSchedule || undefined,\n        feedTypeId: formData.typeOfFeed ? parseInt(formData.typeOfFeed) : undefined,\n\n        // System fields\n        dateOfEntry: convertToLocalDateTime(formData.dateOfEntry),\n        isActive: true,\n        totalDungCollected: 0,\n        lastDungCollection: 0,\n      };\n\n      const response = await gauShalaApi.cattle.createCattle(cattleData);\n\n      if (response.success && response.data) {\n        // Upload documents if provided\n        const uploadPromises = [];\n\n        if (formData.photoFile) {\n          uploadPromises.push(gauShalaApi.cattle.uploadPhoto(response.data.id, formData.photoFile));\n        }\n\n        if (formData.healthCertificate) {\n          uploadPromises.push(gauShalaApi.cattle.uploadDocument(response.data.id, formData.healthCertificate, 'health_certificate'));\n        }\n\n        if (formData.vaccinationRecord) {\n          uploadPromises.push(gauShalaApi.cattle.uploadDocument(response.data.id, formData.vaccinationRecord, 'vaccination_record'));\n        }\n\n        if (formData.purchaseDocument) {\n          uploadPromises.push(gauShalaApi.cattle.uploadDocument(response.data.id, formData.purchaseDocument, 'purchase_document'));\n        }\n\n        // Wait for all uploads\n        if (uploadPromises.length > 0) {\n          try {\n            await Promise.all(uploadPromises);\n          } catch (uploadError) {\n            console.warn('Some document uploads failed:', uploadError);\n          }\n        }\n\n        setMessage({\n          type: 'success',\n          text: 'Cattle registered successfully!'\n        });\n\n        // Navigate back after delay\n        setTimeout(() => {\n          navigate('/gaushala/cattle');\n        }, 2000);\n      } else {\n        throw new Error(response.error || 'Failed to create cattle');\n      }\n    } catch (error) {\n      setMessage({\n        type: 'error',\n        text: 'Failed to register cattle. Please try again.'\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleCancel = () => {\n    navigate('/gaushala/cattle');\n  };\n\n  const sections = [\n    {\n      id: 'basic',\n      title: 'Basic Identification',\n      icon: User,\n      color: 'from-blue-500 to-indigo-600',\n      progress: 0\n    },\n    {\n      id: 'physical',\n      title: 'Physical Characteristics',\n      icon: Ruler,\n      color: 'from-purple-500 to-violet-600',\n      progress: 0\n    },\n    {\n      id: 'health',\n      title: 'Health & Medical',\n      icon: Activity,\n      color: 'from-red-500 to-pink-600',\n      progress: 0\n    },\n    {\n      id: 'reproductive',\n      title: 'Reproductive Details',\n      icon: Baby,\n      color: 'from-pink-500 to-rose-600',\n      progress: 0\n    },\n    {\n      id: 'origin',\n      title: 'Origin & Ownership',\n      icon: Globe,\n      color: 'from-emerald-500 to-teal-600',\n      progress: 0\n    },\n    {\n      id: 'shelter',\n      title: 'Shelter & Feeding',\n      icon: Settings,\n      color: 'from-amber-500 to-yellow-600',\n      progress: 0\n    }\n  ];\n\n\n  return (\n    <div className=\"p-6 space-y-6\">\n      {/* Header */}\n      <div className=\"flex justify-between items-center\">\n        <div className=\"flex items-center gap-4\">\n          <button\n            onClick={handleCancel}\n            className=\"flex items-center gap-2 px-4 py-2 text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded-lg transition-colors\"\n          >\n            <ArrowLeft className=\"h-5 w-5\" />\n            <span className=\"font-medium\">Back</span>\n          </button>\n\n          <div className=\"h-8 w-px bg-gray-300\"></div>\n\n          <div className=\"flex items-center gap-3\">\n            <div className=\"h-10 w-10 bg-blue-100 rounded-full flex items-center justify-center\">\n              <span className=\"text-2xl\">🐄</span>\n            </div>\n            <div>\n              <h2 className=\"text-2xl font-bold text-gray-900\">Register New Cattle</h2>\n              <p className=\"text-gray-600\">Complete cattle registration with comprehensive details</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"flex items-center gap-3\">\n          <button\n            type=\"button\"\n            onClick={handleCancel}\n            className=\"px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors\"\n          >\n            Cancel\n          </button>\n          <button\n            type=\"submit\"\n            form=\"cattle-form\"\n            disabled={isLoading}\n            className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 transition-colors\"\n          >\n            <Save className=\"h-4 w-4\" />\n            {isLoading ? 'Saving...' : 'Save Cattle'}\n          </button>\n        </div>\n      </div>\n\n      {/* Progress Indicator */}\n      <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 p-4\">\n        <div className=\"flex items-center justify-between overflow-x-auto\">\n          {sections.map((section, index) => {\n            const Icon = section.icon;\n            return (\n              <div key={section.id} className=\"flex items-center flex-shrink-0\">\n                <div className=\"flex items-center justify-center w-8 h-8 rounded-lg bg-blue-100 text-blue-600\">\n                  <Icon className=\"h-4 w-4\" />\n                </div>\n                <div className=\"ml-2\">\n                  <p className=\"text-xs font-medium text-gray-700\">{section.title}</p>\n                </div>\n                {index < sections.length - 1 && (\n                  <div className=\"w-8 h-px bg-gray-300 mx-3\"></div>\n                )}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n\n      {/* Message Alert */}\n      {message && (\n        <div className={`p-4 rounded-lg border-l-4 ${\n          message.type === 'success'\n            ? 'bg-green-50 border-green-400 text-green-800'\n            : message.type === 'warning'\n            ? 'bg-yellow-50 border-yellow-400 text-yellow-800'\n            : 'bg-red-50 border-red-400 text-red-800'\n        }`}>\n          <div className=\"flex items-center gap-3\">\n            {message.type === 'success' ? (\n              <CheckCircle className=\"h-5 w-5\" />\n            ) : message.type === 'warning' ? (\n              <Clock className=\"h-5 w-5\" />\n            ) : (\n              <AlertCircle className=\"h-5 w-5\" />\n            )}\n            <span className=\"font-medium\">{message.text}</span>\n          </div>\n        </div>\n      )}\n      <form id=\"cattle-form\" onSubmit={handleSubmit} className=\"space-y-6\">\n        {/* Main Grid Layout */}\n        <div className=\"grid grid-cols-1 xl:grid-cols-4 gap-6\">\n\n          {/* Left Section - 3 columns */}\n          <div className=\"xl:col-span-3 space-y-6\">\n\n            {/* Basic Identification */}\n            <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 p-6\">\n              <h2 className=\"text-lg font-semibold text-gray-900 mb-6 flex items-center gap-3\">\n                <div className=\"h-10 w-10 bg-blue-100 rounded-full flex items-center justify-center\">\n                  <User className=\"h-5 w-5 text-blue-600\" />\n                </div>\n                🐄 Basic Identification\n              </h2>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                  <InputField\n                    label=\"Unique Animal ID\"\n                    value={formData.uniqueAnimalId}\n                    onChange={(value: string) => handleInputChange('uniqueAnimalId', value)}\n                    placeholder=\"Enter unique animal ID\"\n                    required\n                    error={errors.uniqueAnimalId}\n                  />\n\n                  <InputField\n                    label=\"Name (Optional)\"\n                    value={formData.name}\n                    onChange={(value: string) => handleInputChange('name', value)}\n                    placeholder=\"Enter cattle name\"\n                  />\n\n                  <SelectField\n                    label=\"Breed\"\n                    value={formData.breedId}\n                    onChange={(value: string) => handleInputChange('breedId', parseInt(value) || 0)}\n                    placeholder={masterDataLoading ? 'Loading breeds...' : 'Select Breed'}\n                    required\n                    error={errors.breedId}\n                    options={breeds.filter(breed => breed && breed.id && breed.name).map(breed => ({\n                      value: breed.id.toString(),\n                      label: breed.name\n                    }))}\n                  />\n\n                  <SelectField\n                    label=\"Species\"\n                    value={formData.speciesId}\n                    onChange={(value: string) => handleInputChange('speciesId', parseInt(value) || 0)}\n                    placeholder={masterDataLoading ? 'Loading species...' : 'Select Species'}\n                    required\n                    error={errors.speciesId}\n                    options={species.filter(s => s && s.id && s.name).map(s => ({\n                      value: s.id.toString(),\n                      label: s.name\n                    }))}\n                  />\n\n                  <SelectField\n                    label=\"Gender\"\n                    value={formData.genderId}\n                    onChange={(value: string) => handleInputChange('genderId', parseInt(value) || 0)}\n                    placeholder={masterDataLoading ? 'Loading genders...' : 'Select Gender'}\n                    required\n                    error={errors.genderId}\n                    options={genders.filter(gender => gender && gender.id && gender.name).map(gender => ({\n                      value: gender.id.toString(),\n                      label: gender.name\n                    }))}\n                  />\n\n                  <SelectField\n                    label=\"Color\"\n                    value={formData.colorId}\n                    onChange={(value: string) => handleInputChange('colorId', parseInt(value) || 0)}\n                    placeholder={masterDataLoading ? 'Loading colors...' : 'Select Color'}\n                    error={errors.colorId}\n                    options={colors.filter(color => color && color.id && color.name).map(color => ({\n                      value: color.id.toString(),\n                      label: color.name\n                    }))}\n                  />\n\n                  <InputField\n                    label=\"Age (Years)\"\n                    value={formData.ageYears}\n                    onChange={(value: string) => handleInputChange('ageYears', parseInt(value) || 0)}\n                    type=\"number\"\n                    min=\"0\"\n                    placeholder=\"Enter age in years\"\n                  />\n\n                  <InputField\n                    label=\"Date of Entry\"\n                    value={formData.dateOfEntry}\n                    onChange={(value: string) => handleInputChange('dateOfEntry', value)}\n                    type=\"date\"\n                    required\n                    error={errors.dateOfEntry}\n                  />\n                </div>\n              </div>\n\n\n            {/* Physical Characteristics */}\n            <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 p-6\">\n              <h2 className=\"text-lg font-semibold text-gray-900 mb-6 flex items-center gap-3\">\n                <div className=\"h-10 w-10 bg-purple-100 rounded-full flex items-center justify-center\">\n                  <Ruler className=\"h-5 w-5 text-purple-600\" />\n                </div>\n                📏 Physical Characteristics\n              </h2>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                  <InputField\n                    label=\"Weight (kg)\"\n                    value={formData.weight}\n                    onChange={(value: string) => handleInputChange('weight', value)}\n                    type=\"number\"\n                    step=\"0.1\"\n                    placeholder=\"Weight in kilograms\"\n                  />\n\n                  <InputField\n                    label=\"Height (cm)\"\n                    value={formData.height}\n                    onChange={(value: string) => handleInputChange('height', value)}\n                    type=\"number\"\n                    placeholder=\"Height in centimeters\"\n                  />\n\n                  <SelectField\n                    label=\"Horn Status\"\n                    value={formData.hornStatus}\n                    onChange={(value: string) => handleInputChange('hornStatus', value)}\n                    placeholder=\"Select Status\"\n                    options={[\n                      { value: 'horned', label: 'Horned' },\n                      { value: 'dehorned', label: 'Dehorned' },\n                      { value: 'polled', label: 'Polled (Naturally hornless)' }\n                    ]}\n                  />\n\n                  <div className=\"lg:col-span-2\">\n                    <label className=\"block text-sm font-medium text-gray-800 mb-2\">\n                      RFID Tag Number <span className=\"text-red-500\">*</span>\n                    </label>\n                    <div className=\"flex gap-3\">\n                      <input\n                        type=\"text\"\n                        value={formData.rfidTagNo}\n                        onChange={(e) => handleInputChange('rfidTagNo', e.target.value)}\n                        placeholder=\"Scan or enter RFID tag\"\n                        className={`flex-1 px-4 py-3.5 bg-white border-2 rounded-xl transition-all duration-200 text-gray-900 placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:border-blue-500 hover:border-gray-300 ${\n                          errors.rfidTagNo ? 'border-red-300 bg-red-50' : 'border-gray-200'\n                        }`}\n                        required\n                      />\n                      <button\n                        type=\"button\"\n                        onClick={handleScanRfid}\n                        disabled={isScanning}\n                        className=\"flex items-center gap-2 px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 disabled:opacity-50 transition-colors\"\n                      >\n                        <Scan className=\"h-5 w-5\" />\n                        {isScanning ? 'Scanning...' : 'Scan'}\n                      </button>\n                    </div>\n                    {errors.rfidTagNo && (\n                      <div className=\"flex items-center gap-2 text-sm text-red-600 mt-2\">\n                        <AlertCircle className=\"h-4 w-4\" />\n                        {errors.rfidTagNo}\n                      </div>\n                    )}\n                  </div>\n\n                  <InputField\n                    label=\"Ear Tag Number\"\n                    value={formData.earTagNumber}\n                    onChange={(value: string) => handleInputChange('earTagNumber', value)}\n                    placeholder=\"Ear tag number\"\n                  />\n\n                  <InputField\n                    label=\"Microchip Number\"\n                    value={formData.microchipNumber}\n                    onChange={(value: string) => handleInputChange('microchipNumber', value)}\n                    placeholder=\"Microchip number\"\n                  />\n                </div>\n              </div>\n\n            {/* Health & Medical Records */}\n            <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 p-6\">\n              <h2 className=\"text-lg font-semibold text-gray-900 mb-6 flex items-center gap-3\">\n                <div className=\"h-10 w-10 bg-blue-100 rounded-full flex items-center justify-center\">\n                  <Activity className=\"h-5 w-5 text-blue-600\" />\n                </div>\n                🩺 Health & Medical Records\n              </h2>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                  <InputField\n                    label=\"Vaccination Status\"\n                    value={formData.vaccinationStatus}\n                    onChange={(value: string) => handleInputChange('vaccinationStatus', value)}\n                    placeholder=\"e.g., FMD, HS completed\"\n                  />\n\n                  <InputField\n                    label=\"Disability / Injury\"\n                    value={formData.disability}\n                    onChange={(value: string) => handleInputChange('disability', value)}\n                    placeholder=\"Any disabilities or injuries\"\n                  />\n\n                  <InputField\n                    label=\"Veterinarian Name\"\n                    value={formData.veterinarianName}\n                    onChange={(value: string) => handleInputChange('veterinarianName', value)}\n                    placeholder=\"Name of attending veterinarian\"\n                  />\n\n                  <InputField\n                    label=\"Veterinarian Contact\"\n                    value={formData.veterinarianContact}\n                    onChange={(value: string) => handleInputChange('veterinarianContact', value)}\n                    type=\"tel\"\n                    placeholder=\"Phone number\"\n                  />\n\n                  <InputField\n                    label=\"Last Health Check-up\"\n                    value={formData.lastHealthCheckup}\n                    onChange={(value: string) => handleInputChange('lastHealthCheckup', value)}\n                    type=\"date\"\n                  />\n\n                  <InputField\n                    label=\"Deworming Schedule\"\n                    value={formData.dewormingSchedule}\n                    onChange={(value: string) => handleInputChange('dewormingSchedule', value)}\n                    placeholder=\"e.g., Every 6 months\"\n                  />\n\n                  <TextAreaField\n                    label=\"Medical History\"\n                    value={formData.medicalHistory}\n                    onChange={(value: string) => handleInputChange('medicalHistory', value)}\n                    placeholder=\"Previous medical treatments, surgeries, etc.\"\n                    className=\"lg:col-span-3\"\n                  />\n                </div>\n              </div>\n\n              {/* Additional Sections Grid */}\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n\n                {/* Reproductive Details (Female only) */}\n                {/* Note: Check if genderId matches female gender ID from master data */}\n                {genders.find(g => g.name && g.name.toLowerCase() === 'female' && g.id === formData.genderId) && (\n                  <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 p-6\">\n                    <h2 className=\"text-lg font-semibold text-gray-900 mb-6 flex items-center gap-3\">\n                      <div className=\"h-10 w-10 bg-blue-100 rounded-full flex items-center justify-center\">\n                        <Baby className=\"h-5 w-5 text-blue-600\" />\n                      </div>\n                      🤱 Reproductive Details\n                    </h2>\n\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                      <SelectField\n                        label=\"Milking Status\"\n                        value={formData.milkingStatus}\n                        onChange={(value: string) => handleInputChange('milkingStatus', value)}\n                        placeholder=\"Select Status\"\n                        options={[\n                          { value: 'lactating', label: 'Lactating' },\n                          { value: 'dry', label: 'Dry' },\n                          { value: 'pregnant', label: 'Pregnant' },\n                          { value: 'not_breeding', label: 'Not for Breeding' }\n                        ]}\n                      />\n\n                      <InputField\n                        label=\"Milk Yield Per Day (Liters)\"\n                        value={formData.milkYieldPerDay}\n                        onChange={(value: string) => handleInputChange('milkYieldPerDay', value)}\n                        type=\"number\"\n                        step=\"0.1\"\n                        placeholder=\"Daily milk yield\"\n                      />\n\n                      <InputField\n                        label=\"Number of Calves\"\n                        value={formData.numberOfCalves}\n                        onChange={(value: string) => handleInputChange('numberOfCalves', value)}\n                        type=\"number\"\n                        placeholder=\"Total calves born\"\n                      />\n\n                      <InputField\n                        label=\"Lactation Number\"\n                        value={formData.lactationNumber}\n                        onChange={(value: string) => handleInputChange('lactationNumber', value)}\n                        type=\"number\"\n                        placeholder=\"Current lactation number\"\n                      />\n\n                      <InputField\n                        label=\"Last Calving Date\"\n                        value={formData.lastCalvingDate}\n                        onChange={(value: string) => handleInputChange('lastCalvingDate', value)}\n                        type=\"date\"\n                      />\n\n                      <SelectField\n                        label=\"Pregnancy Status\"\n                        value={formData.pregnancyStatus}\n                        onChange={(value: string) => handleInputChange('pregnancyStatus', value)}\n                        placeholder=\"Select Status\"\n                        options={[\n                          { value: 'pregnant', label: 'Pregnant' },\n                          { value: 'not_pregnant', label: 'Not Pregnant' },\n                          { value: 'unknown', label: 'Unknown' }\n                        ]}\n                      />\n                    </div>\n                  </div>\n                )}\n\n                {/* Origin & Ownership */}\n                <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 p-6\">\n                  <h2 className=\"text-lg font-semibold text-gray-900 mb-6 flex items-center gap-3\">\n                    <div className=\"h-10 w-10 bg-blue-100 rounded-full flex items-center justify-center\">\n                      <Globe className=\"h-5 w-5 text-blue-600\" />\n                    </div>\n                    🌍 Origin & Ownership\n                  </h2>\n\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    <SelectField\n                      label=\"Source of Acquisition\"\n                      value={formData.sourceOfAcquisition}\n                      onChange={(value: string) => handleInputChange('sourceOfAcquisition', value)}\n                      placeholder=\"Select Source\"\n                      options={[\n                        { value: 'purchase', label: 'Purchase' },\n                        { value: 'donation', label: 'Donation' },\n                        { value: 'rescue', label: 'Rescue' },\n                        { value: 'transfer', label: 'Transfer' },\n                        { value: 'born_here', label: 'Born Here' }\n                      ]}\n                    />\n\n                    <InputField\n                      label=\"Previous Owner\"\n                      value={formData.previousOwner}\n                      onChange={(value: string) => handleInputChange('previousOwner', value)}\n                      placeholder=\"Name of previous owner\"\n                    />\n\n                    <InputField\n                      label=\"Date of Acquisition\"\n                      value={formData.dateOfAcquisition}\n                      onChange={(value: string) => handleInputChange('dateOfAcquisition', value)}\n                      type=\"date\"\n                    />\n\n                    <SelectField\n                      label=\"Ownership Status\"\n                      value={formData.ownershipStatus}\n                      onChange={(value: string) => handleInputChange('ownershipStatus', value)}\n                      placeholder=\"Select Status\"\n                      options={[\n                        { value: 'owned', label: 'Owned by Gaushala' },\n                        { value: 'fostered', label: 'Fostered' },\n                        { value: 'temporary', label: 'Temporary Care' },\n                        { value: 'sponsored', label: 'Sponsored' }\n                      ]}\n                    />\n                  </div>\n                </div>\n\n                {/* Shelter & Feeding */}\n                <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 p-6\">\n                  <h2 className=\"text-lg font-semibold text-gray-900 mb-6 flex items-center gap-3\">\n                    <div className=\"h-10 w-10 bg-blue-100 rounded-full flex items-center justify-center\">\n                      <Settings className=\"h-5 w-5 text-blue-600\" />\n                    </div>\n                    🏠 Shelter & Feeding\n                  </h2>\n\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    <InputField\n                      label=\"Shed Number\"\n                      value={formData.shedNumber}\n                      onChange={(value: string) => handleInputChange('shedNumber', value)}\n                      placeholder=\"Assigned shed number\"\n                    />\n\n                    <SelectField\n                      label=\"Type of Feed\"\n                      value={formData.typeOfFeed}\n                      onChange={(value: string) => handleInputChange('typeOfFeed', value)}\n                      placeholder=\"Select Feed Type\"\n                      options={[\n                        { value: 'grass', label: 'Grass' },\n                        { value: 'hay', label: 'Hay' },\n                        { value: 'silage', label: 'Silage' },\n                        { value: 'concentrate', label: 'Concentrate' },\n                        { value: 'mixed', label: 'Mixed Feed' }\n                      ]}\n                    />\n\n                    <div className=\"md:col-span-2\">\n                      <TextAreaField\n                        label=\"Feeding Schedule\"\n                        value={formData.feedingSchedule}\n                        onChange={(value: string) => handleInputChange('feedingSchedule', value)}\n                        placeholder=\"Feeding times and quantities\"\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n          {/* Right Sidebar */}\n          <div className=\"xl:col-span-1 space-y-6\">\n\n            {/* Supporting Documents */}\n            <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 p-6 sticky top-4\">\n              <h2 className=\"text-lg font-semibold text-gray-900 mb-6 flex items-center gap-3\">\n                <div className=\"h-10 w-10 bg-blue-100 rounded-full flex items-center justify-center\">\n                  <FileText className=\"h-5 w-5 text-blue-600\" />\n                </div>\n                📎 Documents\n              </h2>\n\n                <div className=\"space-y-6\">\n                  <FileUploadField\n                    label=\"Photo\"\n                    value={formData.photoFile}\n                    onChange={(value: File | null) => handleInputChange('photoFile', value)}\n                    accept=\"image/*\"\n                  />\n\n                  <FileUploadField\n                    label=\"Health Certificate\"\n                    value={formData.healthCertificate}\n                    onChange={(value: File | null) => handleInputChange('healthCertificate', value)}\n                    accept=\".pdf\"\n                  />\n\n                  <FileUploadField\n                    label=\"Vaccination Record\"\n                    value={formData.vaccinationRecord}\n                    onChange={(value: File | null) => handleInputChange('vaccinationRecord', value)}\n                    accept=\".pdf\"\n                  />\n\n                  <FileUploadField\n                    label=\"Purchase/Donation Document\"\n                    value={formData.purchaseDocument}\n                    onChange={(value: File | null) => handleInputChange('purchaseDocument', value)}\n                    accept=\".pdf\"\n                  />\n                </div>\n\n                {/* Quick Stats */}\n                <div className=\"mt-8 pt-6 border-t border-gray-200\">\n                  <h3 className=\"text-sm font-medium text-gray-700 mb-4\">Form Progress</h3>\n                  <div className=\"space-y-3\">\n                    <div className=\"flex justify-between text-sm\">\n                      <span className=\"text-gray-600\">Required Fields</span>\n                      <span className=\"font-medium text-gray-900\">\n                        {Object.keys(errors).length === 0 ? '✓ Complete' : `${Object.keys(errors).length} missing`}\n                      </span>\n                    </div>\n                    <div className=\"flex justify-between text-sm\">\n                      <span className=\"text-gray-600\">Documents</span>\n                      <span className=\"font-medium text-gray-900\">\n                        {[formData.photoFile, formData.healthCertificate, formData.vaccinationRecord, formData.purchaseDocument].filter(Boolean).length}/4\n                      </span>\n                    </div>\n                  </div>\n                </div>\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n}","/**\r\n * Cattle Detail Page - View and Update cattle information\r\n */\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport {\r\n  Edit,\r\n  Save,\r\n  ArrowLeft,\r\n  Calendar,\r\n  MapPin,\r\n  Activity,\r\n  Heart,\r\n  FileText,\r\n  Camera,\r\n  Trash2,\r\n  AlertTriangle,\r\n  User,\r\n  Home,\r\n  Ruler,\r\n  Baby,\r\n  Globe,\r\n  Settings\r\n} from 'lucide-react';\r\nimport { gauShalaApi, Cattle, MedicalRecord } from '../../services/gaushala/api';\r\n\r\ninterface LanguageContextType {\r\n  language: 'hi' | 'en';\r\n  t: (key: string) => string;\r\n}\r\n\r\ninterface CattleDetailProps {\r\n  languageContext: LanguageContextType;\r\n}\r\n\r\nconst translations = {\r\n  en: {\r\n    title: 'Cattle Details',\r\n    subtitle: 'View and manage cattle information',\r\n    edit: 'Edit',\r\n    save: 'Save Changes',\r\n    cancel: 'Cancel',\r\n    delete: 'Delete Cattle',\r\n    confirmDelete: 'Are you sure you want to delete this cattle record?',\r\n    basicInfo: 'Basic Information',\r\n    name: 'Name',\r\n    rfidTag: 'RFID Tag',\r\n    breed: 'Breed',\r\n    age: 'Age',\r\n    weight: 'Weight',\r\n    health: 'Health Status',\r\n    owner: 'Owner',\r\n    ownerId: 'Owner ID',\r\n    locationInfo: 'Location Information',\r\n    address: 'Address',\r\n    coordinates: 'Coordinates',\r\n    medicalHistory: 'Medical History',\r\n    addMedicalRecord: 'Add Medical Record',\r\n    collectionHistory: 'Collection History',\r\n    totalCollected: 'Total Dung Collected',\r\n    lastCollection: 'Last Collection',\r\n    photo: 'Photo',\r\n    changePhoto: 'Change Photo',\r\n    loading: 'Loading...',\r\n    saving: 'Saving...',\r\n    success: 'Cattle updated successfully!',\r\n    error: 'Failed to update cattle',\r\n    notFound: 'Cattle not found',\r\n    medicalRecordType: 'Type',\r\n    medicalRecordDate: 'Date',\r\n    medicalRecordDescription: 'Description',\r\n    medicalRecordVet: 'Veterinarian',\r\n    medicalRecordMedication: 'Medication',\r\n    medicalRecordNextCheckup: 'Next Checkup',\r\n    recordTypes: {\r\n      checkup: 'Checkup',\r\n      vaccination: 'Vaccination',\r\n      treatment: 'Treatment',\r\n      surgery: 'Surgery'\r\n    },\r\n    healthStatus: {\r\n      healthy: 'Healthy',\r\n      sick: 'Sick',\r\n      recovering: 'Recovering',\r\n      vaccination_due: 'Vaccination Due'\r\n    },\r\n    breeds: {\r\n      gir: 'Gir',\r\n      sindhi: 'Red Sindhi',\r\n      holstein: 'Holstein Friesian',\r\n      jersey: 'Jersey',\r\n      sahiwal: 'Sahiwal',\r\n      tharparkar: 'Tharparkar'\r\n    }\r\n  },\r\n  hi: {\r\n    title: 'पशु विवरण',\r\n    subtitle: 'पशु की जानकारी देखें और प्रबंधित करें',\r\n    edit: 'संपादित करें',\r\n    save: 'परिवर्तन सहेजें',\r\n    cancel: 'रद्द करें',\r\n    delete: 'पशु हटाएं',\r\n    confirmDelete: 'क्या आप वाकई इस पशु का रिकॉर्ड हटाना चाहते हैं?',\r\n    basicInfo: 'बुनियादी जानकारी',\r\n    name: 'नाम',\r\n    rfidTag: 'RFID टैग',\r\n    breed: 'नस्ल',\r\n    age: 'आयु',\r\n    weight: 'वजन',\r\n    health: 'स्वास्थ्य स्थिति',\r\n    owner: 'मालिक',\r\n    ownerId: 'मालिक ID',\r\n    locationInfo: 'स्थान की जानकारी',\r\n    address: 'पता',\r\n    coordinates: 'निर्देशांक',\r\n    medicalHistory: 'चिकित्सा इतिहास',\r\n    addMedicalRecord: 'चिकित्सा रिकॉर्ड जोड़ें',\r\n    collectionHistory: 'संग्रह इतिहास',\r\n    totalCollected: 'कुल गोबर संग्रह',\r\n    lastCollection: 'अंतिम संग्रह',\r\n    photo: 'फोटो',\r\n    changePhoto: 'फोटो बदलें',\r\n    loading: 'लोड हो रहा है...',\r\n    saving: 'सहेजा जा रहा है...',\r\n    success: 'पशु सफलतापूर्वक अपडेट किया गया!',\r\n    error: 'पशु अपडेट करने में विफल',\r\n    notFound: 'पशु नहीं मिला',\r\n    medicalRecordType: 'प्रकार',\r\n    medicalRecordDate: 'तारीख',\r\n    medicalRecordDescription: 'विवरण',\r\n    medicalRecordVet: 'पशु चिकित्सक',\r\n    medicalRecordMedication: 'दवा',\r\n    medicalRecordNextCheckup: 'अगली जांच',\r\n    recordTypes: {\r\n      checkup: 'जांच',\r\n      vaccination: 'टीकाकरण',\r\n      treatment: 'उपचार',\r\n      surgery: 'सर्जरी'\r\n    },\r\n    healthStatus: {\r\n      healthy: 'स्वस्थ',\r\n      sick: 'बीमार',\r\n      recovering: 'ठीक हो रहा',\r\n      vaccination_due: 'टीकाकरण देय'\r\n    },\r\n    breeds: {\r\n      gir: 'गिर',\r\n      sindhi: 'लाल सिंधी',\r\n      holstein: 'होल्स्टीन फ्रीजियन',\r\n      jersey: 'जर्सी',\r\n      sahiwal: 'साहीवाल',\r\n      tharparkar: 'थारपारकर'\r\n    }\r\n  }\r\n};\r\n\r\nexport default function CattleDetail({ languageContext }: CattleDetailProps) {\r\n  const { id } = useParams<{ id: string }>();\r\n  const navigate = useNavigate();\r\n  const { t } = languageContext;\r\n\r\n  const [cattle, setCattle] = useState<Cattle | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [isSaving, setIsSaving] = useState(false);\r\n  const [editData, setEditData] = useState<Partial<Cattle>>({});\r\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\r\n  const [message, setMessage] = useState<{ type: 'success' | 'error'; text: string } | null>(null);\r\n  const [newMedicalRecord, setNewMedicalRecord] = useState({\r\n    type: 'checkup' as const,\r\n    date: '',\r\n    description: '',\r\n    veterinarian: '',\r\n    medication: '',\r\n    nextCheckup: ''\r\n  });\r\n  const [showAddMedical, setShowAddMedical] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      loadCattleDetail();\r\n    }\r\n  }, [id]);\r\n\r\n  const loadCattleDetail = async () => {\r\n    try {\r\n      const response = await gauShalaApi.cattle.getCattleById(id!);\r\n      if (response.success && response.data) {\r\n        setCattle(response.data);\r\n        setEditData(response.data);\r\n      } else {\r\n        setMessage({\r\n          type: 'error',\r\n          text: translations[languageContext.language].notFound\r\n        });\r\n      }\r\n    } catch (error) {\r\n      setMessage({\r\n        type: 'error',\r\n        text: translations[languageContext.language].error\r\n      });\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    setIsEditing(true);\r\n    setMessage(null);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsEditing(false);\r\n    setEditData(cattle || {});\r\n    setMessage(null);\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    if (!cattle || !id) return;\r\n\r\n    setIsSaving(true);\r\n    try {\r\n      const response = await gauShalaApi.cattle.updateCattle(id, editData);\r\n      if (response.success && response.data) {\r\n        setCattle(response.data);\r\n        setIsEditing(false);\r\n        setMessage({\r\n          type: 'success',\r\n          text: translations[languageContext.language].success\r\n        });\r\n      } else {\r\n        throw new Error(response.error);\r\n      }\r\n    } catch (error) {\r\n      setMessage({\r\n        type: 'error',\r\n        text: translations[languageContext.language].error\r\n      });\r\n    } finally {\r\n      setIsSaving(false);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    if (!id) return;\r\n\r\n    try {\r\n      const response = await gauShalaApi.cattle.deleteCattle(id);\r\n      if (response.success) {\r\n        navigate('/gaushala/cattle');\r\n      } else {\r\n        throw new Error(response.error);\r\n      }\r\n    } catch (error) {\r\n      setMessage({\r\n        type: 'error',\r\n        text: translations[languageContext.language].error\r\n      });\r\n    }\r\n    setShowDeleteConfirm(false);\r\n  };\r\n\r\n  const handleAddMedicalRecord = async () => {\r\n    if (!cattle || !id) return;\r\n\r\n    try {\r\n      const recordData = {\r\n        ...newMedicalRecord,\r\n        date: new Date(newMedicalRecord.date).getTime(),\r\n        nextCheckup: newMedicalRecord.nextCheckup ? new Date(newMedicalRecord.nextCheckup).getTime() : undefined\r\n      };\r\n\r\n      const response = await gauShalaApi.cattle.addMedicalRecord(id, recordData);\r\n      if (response.success) {\r\n        await loadCattleDetail(); // Reload to get updated medical history\r\n        setShowAddMedical(false);\r\n        setNewMedicalRecord({\r\n          type: 'checkup',\r\n          date: '',\r\n          description: '',\r\n          veterinarian: '',\r\n          medication: '',\r\n          nextCheckup: ''\r\n        });\r\n      }\r\n    } catch (error) {\r\n      setMessage({\r\n        type: 'error',\r\n        text: 'Failed to add medical record'\r\n      });\r\n    }\r\n  };\r\n\r\n  const formatDate = (timestamp: number) => {\r\n    return new Date(timestamp).toLocaleDateString();\r\n  };\r\n\r\n  const getHealthStatusColor = (health: string) => {\r\n    switch (health) {\r\n      case 'healthy': return 'text-green-600 bg-green-100';\r\n      case 'sick': return 'text-red-600 bg-red-100';\r\n      case 'recovering': return 'text-yellow-600 bg-yellow-100';\r\n      case 'vaccination_due': return 'text-orange-600 bg-orange-100';\r\n      default: return 'text-gray-600 bg-gray-100';\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto\"></div>\r\n          <p className=\"mt-4 text-gray-600\">{translations[languageContext.language].loading}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!cattle) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <AlertTriangle className=\"h-12 w-12 text-red-600 mx-auto mb-4\" />\r\n          <p className=\"text-gray-600\">{translations[languageContext.language].notFound}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 py-6\">\r\n      <div className=\"max-w-6xl mx-auto px-6\">\r\n        {/* Header */}\r\n        <div className=\"mb-6\">\r\n          <div className=\"flex items-center gap-4 mb-4\">\r\n            <button\r\n              onClick={() => navigate('/gaushala/cattle')}\r\n              className=\"flex items-center gap-2 px-3 py-2 text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded-lg transition-colors\"\r\n            >\r\n              <ArrowLeft className=\"h-4 w-4\" />\r\n              Back to Cattle List\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"flex items-center gap-3\">\r\n              <div className=\"flex items-center justify-center w-12 h-12 bg-blue-100 rounded-xl\">\r\n                <span className=\"text-3xl\">🐄</span>\r\n              </div>\r\n              <div>\r\n                <h1 className=\"text-2xl font-bold text-gray-900\">\r\n                  {cattle.name}\r\n                </h1>\r\n                <p className=\"text-gray-600\">\r\n                  RFID: {cattle.rfidTag}\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"flex gap-3\">\r\n              {!isEditing ? (\r\n                <>\r\n                  <button\r\n                    onClick={handleEdit}\r\n                    className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\r\n                  >\r\n                    <Edit className=\"h-4 w-4\" />\r\n                    {translations[languageContext.language].edit}\r\n                  </button>\r\n                  <button\r\n                    onClick={() => setShowDeleteConfirm(true)}\r\n                    className=\"flex items-center gap-2 px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700\"\r\n                  >\r\n                    <Trash2 className=\"h-4 w-4\" />\r\n                    {translations[languageContext.language].delete}\r\n                  </button>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <button\r\n                    onClick={handleCancel}\r\n                    className=\"px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50\"\r\n                  >\r\n                    {translations[languageContext.language].cancel}\r\n                  </button>\r\n                  <button\r\n                    onClick={handleSave}\r\n                    disabled={isSaving}\r\n                    className=\"flex items-center gap-2 px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 disabled:opacity-50\"\r\n                  >\r\n                    <Save className=\"h-4 w-4\" />\r\n                    {isSaving\r\n                      ? translations[languageContext.language].saving\r\n                      : translations[languageContext.language].save\r\n                    }\r\n                  </button>\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Message */}\r\n        {message && (\r\n          <div className={`mb-6 p-4 rounded-lg ${\r\n            message.type === 'success'\r\n              ? 'bg-green-50 text-green-800 border border-green-200'\r\n              : 'bg-red-50 text-red-800 border border-red-200'\r\n          }`}>\r\n            {message.text}\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\r\n          {/* Main Information */}\r\n          <div className=\"lg:col-span-2 space-y-6\">\r\n            {/* Basic Information */}\r\n            <div className=\"bg-white rounded-xl p-6 shadow-sm\">\r\n              <h2 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center gap-2\">\r\n                <span className=\"text-2xl\">🐄</span>\r\n                {translations[languageContext.language].basicInfo}\r\n              </h2>\r\n\r\n              <div className=\"grid grid-cols-2 gap-4\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-500 mb-1\">\r\n                    {translations[languageContext.language].name}\r\n                  </label>\r\n                  {isEditing ? (\r\n                    <input\r\n                      type=\"text\"\r\n                      value={editData.name || ''}\r\n                      onChange={(e) => setEditData(prev => ({ ...prev, name: e.target.value }))}\r\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                    />\r\n                  ) : (\r\n                    <p className=\"text-gray-900\">{cattle.name}</p>\r\n                  )}\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-500 mb-1\">\r\n                    {translations[languageContext.language].rfidTag}\r\n                  </label>\r\n                  <p className=\"text-gray-900 font-mono\">{cattle.rfidTag}</p>\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-500 mb-1\">\r\n                    {translations[languageContext.language].breed}\r\n                  </label>\r\n                  {isEditing ? (\r\n                    <select\r\n                      value={editData.breed || ''}\r\n                      onChange={(e) => setEditData(prev => ({ ...prev, breed: e.target.value }))}\r\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                    >\r\n                      <option value=\"gir\">{translations[languageContext.language].breeds.gir}</option>\r\n                      <option value=\"sindhi\">{translations[languageContext.language].breeds.sindhi}</option>\r\n                      <option value=\"holstein\">{translations[languageContext.language].breeds.holstein}</option>\r\n                      <option value=\"jersey\">{translations[languageContext.language].breeds.jersey}</option>\r\n                    </select>\r\n                  ) : (\r\n                    <p className=\"text-gray-900\">{translations[languageContext.language].breeds[cattle.breed] || cattle.breed}</p>\r\n                  )}\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-500 mb-1\">\r\n                    {translations[languageContext.language].health}\r\n                  </label>\r\n                  {isEditing ? (\r\n                    <select\r\n                      value={editData.health || ''}\r\n                      onChange={(e) => setEditData(prev => ({ ...prev, health: e.target.value as any }))}\r\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                    >\r\n                      <option value=\"healthy\">{translations[languageContext.language].healthStatus.healthy}</option>\r\n                      <option value=\"sick\">{translations[languageContext.language].healthStatus.sick}</option>\r\n                      <option value=\"recovering\">{translations[languageContext.language].healthStatus.recovering}</option>\r\n                      <option value=\"vaccination_due\">{translations[languageContext.language].healthStatus.vaccination_due}</option>\r\n                    </select>\r\n                  ) : (\r\n                    <span className={`inline-flex px-2 py-1 text-xs font-medium rounded-full ${getHealthStatusColor(cattle.health)}`}>\r\n                      {translations[languageContext.language].healthStatus[cattle.health]}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-500 mb-1\">\r\n                    {translations[languageContext.language].age}\r\n                  </label>\r\n                  {isEditing ? (\r\n                    <input\r\n                      type=\"number\"\r\n                      value={editData.age || ''}\r\n                      onChange={(e) => setEditData(prev => ({ ...prev, age: parseInt(e.target.value) }))}\r\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                    />\r\n                  ) : (\r\n                    <p className=\"text-gray-900\">{cattle.age} months</p>\r\n                  )}\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-500 mb-1\">\r\n                    {translations[languageContext.language].weight}\r\n                  </label>\r\n                  {isEditing ? (\r\n                    <input\r\n                      type=\"number\"\r\n                      step=\"0.1\"\r\n                      value={editData.weight || ''}\r\n                      onChange={(e) => setEditData(prev => ({ ...prev, weight: parseFloat(e.target.value) }))}\r\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                    />\r\n                  ) : (\r\n                    <p className=\"text-gray-900\">{cattle.weight} kg</p>\r\n                  )}\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-500 mb-1\">\r\n                    {translations[languageContext.language].owner}\r\n                  </label>\r\n                  {isEditing ? (\r\n                    <input\r\n                      type=\"text\"\r\n                      value={editData.owner || ''}\r\n                      onChange={(e) => setEditData(prev => ({ ...prev, owner: e.target.value }))}\r\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                    />\r\n                  ) : (\r\n                    <p className=\"text-gray-900\">{cattle.owner}</p>\r\n                  )}\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-500 mb-1\">\r\n                    {translations[languageContext.language].ownerId}\r\n                  </label>\r\n                  <p className=\"text-gray-900\">{cattle.ownerId}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Location Information */}\r\n            <div className=\"bg-white rounded-xl p-6 shadow-sm\">\r\n              <h2 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center gap-2\">\r\n                <MapPin className=\"h-5 w-5 text-blue-600\" />\r\n                {translations[languageContext.language].locationInfo}\r\n              </h2>\r\n\r\n              <div className=\"space-y-4\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-500 mb-1\">\r\n                    {translations[languageContext.language].address}\r\n                  </label>\r\n                  <p className=\"text-gray-900\">{cattle.location.address || 'Not provided'}</p>\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-500 mb-1\">\r\n                    {translations[languageContext.language].coordinates}\r\n                  </label>\r\n                  <p className=\"text-gray-900\">\r\n                    {cattle.location.latitude}, {cattle.location.longitude}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Medical History */}\r\n            <div className=\"bg-white rounded-xl p-6 shadow-sm\">\r\n              <div className=\"flex items-center justify-between mb-4\">\r\n                <h2 className=\"text-lg font-semibold text-gray-900 flex items-center gap-2\">\r\n                  <span className=\"text-2xl\">🐄</span>\r\n                  {translations[languageContext.language].medicalHistory}\r\n                </h2>\r\n                <button\r\n                  onClick={() => setShowAddMedical(true)}\r\n                  className=\"flex items-center gap-2 px-3 py-1 bg-blue-600 text-white rounded-lg hover:bg-blue-700 text-sm\"\r\n                >\r\n                  <FileText className=\"h-4 w-4\" />\r\n                  {translations[languageContext.language].addMedicalRecord}\r\n                </button>\r\n              </div>\r\n\r\n              {cattle.medicalHistory.length > 0 ? (\r\n                <div className=\"space-y-4\">\r\n                  {cattle.medicalHistory.map((record, index) => (\r\n                    <div key={index} className=\"border border-gray-200 rounded-lg p-4\">\r\n                      <div className=\"flex items-center justify-between mb-2\">\r\n                        <span className=\"font-medium text-gray-900\">\r\n                          {translations[languageContext.language].recordTypes[record.type]}\r\n                        </span>\r\n                        <span className=\"text-sm text-gray-500\">\r\n                          {formatDate(record.date)}\r\n                        </span>\r\n                      </div>\r\n                      <p className=\"text-gray-700 mb-2\">{record.description}</p>\r\n                      <div className=\"text-sm text-gray-600\">\r\n                        <p>Veterinarian: {record.veterinarian}</p>\r\n                        {record.medication && <p>Medication: {record.medication}</p>}\r\n                        {record.nextCheckup && <p>Next Checkup: {formatDate(record.nextCheckup)}</p>}\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              ) : (\r\n                <p className=\"text-gray-500 text-center py-8\">No medical records found</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Sidebar */}\r\n          <div className=\"space-y-6\">\r\n            {/* Photo */}\r\n            <div className=\"bg-white rounded-xl p-6 shadow-sm\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center gap-2\">\r\n                <Camera className=\"h-5 w-5 text-blue-600\" />\r\n                {translations[languageContext.language].photo}\r\n              </h3>\r\n\r\n              <div className=\"text-center\">\r\n                {cattle.photoUrl ? (\r\n                  <img\r\n                    src={cattle.photoUrl}\r\n                    alt={cattle.name}\r\n                    className=\"w-full h-48 object-cover rounded-lg mb-4\"\r\n                  />\r\n                ) : (\r\n                  <div className=\"w-full h-48 bg-gray-100 rounded-lg flex items-center justify-center mb-4\">\r\n                    <span className=\"text-6xl\">🐄</span>\r\n                  </div>\r\n                )}\r\n\r\n                <button className=\"text-sm text-blue-600 hover:text-blue-700\">\r\n                  {translations[languageContext.language].changePhoto}\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Collection Stats */}\r\n            <div className=\"bg-white rounded-xl p-6 shadow-sm\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center gap-2\">\r\n                <Activity className=\"h-5 w-5 text-blue-600\" />\r\n                {translations[languageContext.language].collectionHistory}\r\n              </h3>\r\n\r\n              <div className=\"space-y-4\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-500 mb-1\">\r\n                    {translations[languageContext.language].totalCollected}\r\n                  </label>\r\n                  <p className=\"text-2xl font-bold text-green-600\">\r\n                    {cattle.totalDungCollected} kg\r\n                  </p>\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-500 mb-1\">\r\n                    {translations[languageContext.language].lastCollection}\r\n                  </label>\r\n                  <p className=\"text-gray-900\">\r\n                    {cattle.lastDungCollection\r\n                      ? formatDate(cattle.lastDungCollection)\r\n                      : 'No collections yet'\r\n                    }\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Delete Confirmation Modal */}\r\n        {showDeleteConfirm && (\r\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n            <div className=\"bg-white rounded-xl p-6 max-w-md w-full\">\r\n              <div className=\"flex items-center gap-3 mb-4\">\r\n                <AlertTriangle className=\"h-6 w-6 text-red-600\" />\r\n                <h3 className=\"text-lg font-semibold text-gray-900\">\r\n                  {translations[languageContext.language].delete}\r\n                </h3>\r\n              </div>\r\n\r\n              <p className=\"text-gray-600 mb-6\">\r\n                {translations[languageContext.language].confirmDelete}\r\n              </p>\r\n\r\n              <div className=\"flex justify-end gap-3\">\r\n                <button\r\n                  onClick={() => setShowDeleteConfirm(false)}\r\n                  className=\"px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50\"\r\n                >\r\n                  {translations[languageContext.language].cancel}\r\n                </button>\r\n                <button\r\n                  onClick={handleDelete}\r\n                  className=\"px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700\"\r\n                >\r\n                  {translations[languageContext.language].delete}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Add Medical Record Modal */}\r\n        {showAddMedical && (\r\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n            <div className=\"bg-white rounded-xl p-6 max-w-md w-full\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">\r\n                {translations[languageContext.language].addMedicalRecord}\r\n              </h3>\r\n\r\n              <div className=\"space-y-4\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                    {translations[languageContext.language].medicalRecordType}\r\n                  </label>\r\n                  <select\r\n                    value={newMedicalRecord.type}\r\n                    onChange={(e) => setNewMedicalRecord(prev => ({ ...prev, type: e.target.value as any }))}\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                  >\r\n                    <option value=\"checkup\">{translations[languageContext.language].recordTypes.checkup}</option>\r\n                    <option value=\"vaccination\">{translations[languageContext.language].recordTypes.vaccination}</option>\r\n                    <option value=\"treatment\">{translations[languageContext.language].recordTypes.treatment}</option>\r\n                    <option value=\"surgery\">{translations[languageContext.language].recordTypes.surgery}</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                    {translations[languageContext.language].medicalRecordDate}\r\n                  </label>\r\n                  <input\r\n                    type=\"date\"\r\n                    value={newMedicalRecord.date}\r\n                    onChange={(e) => setNewMedicalRecord(prev => ({ ...prev, date: e.target.value }))}\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                    {translations[languageContext.language].medicalRecordDescription}\r\n                  </label>\r\n                  <textarea\r\n                    value={newMedicalRecord.description}\r\n                    onChange={(e) => setNewMedicalRecord(prev => ({ ...prev, description: e.target.value }))}\r\n                    rows={3}\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                    {translations[languageContext.language].medicalRecordVet}\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={newMedicalRecord.veterinarian}\r\n                    onChange={(e) => setNewMedicalRecord(prev => ({ ...prev, veterinarian: e.target.value }))}\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex justify-end gap-3 mt-6\">\r\n                <button\r\n                  onClick={() => setShowAddMedical(false)}\r\n                  className=\"px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50\"\r\n                >\r\n                  {translations[languageContext.language].cancel}\r\n                </button>\r\n                <button\r\n                  onClick={handleAddMedicalRecord}\r\n                  className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\r\n                >\r\n                  Add Record\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}","/**\n * All Transactions Page - Shows all field worker transactions\n * Displays comprehensive transaction history with field worker management\n */\n\nimport { useState, useEffect } from 'react';\nimport {\n  Calendar,\n  Scale,\n  User,\n  MapPin,\n  Star,\n  Clock,\n  CheckCircle,\n  X,\n  Download,\n  Filter,\n  Search,\n  Coins,\n  BarChart3,\n  Users\n} from 'lucide-react';\nimport { BiogasServiceClient } from '../../services/microservices';\n\ninterface Contribution {\n  id: string;\n  externalId: string;\n  contributionDate: string;\n  weightKg: number;\n  ratePerKg: number;\n  totalAmount: number;\n  paymentMethod: 'UPI' | 'CASH' | 'NEFT' | 'AEPS';\n  paymentStatus: 'PENDING' | 'PROCESSING' | 'COMPLETED' | 'FAILED';\n  qualityGrade: 'PREMIUM' | 'STANDARD' | 'BASIC';\n  moistureContent?: number;\n  gpsLatitude?: number;\n  gpsLongitude?: number;\n  workflowStatus: string;\n  validationStatus: string;\n  notes?: string;\n  operatorUserId?: string;\n  operatorName?: string;\n  operatorPhone?: string;\n  farmer?: {\n    name: string;\n    externalId: string;\n    phone?: string;\n  };\n}\n\ninterface Props {\n  onClose?: () => void;\n}\n\nconst translations = {\n  en: {\n    title: 'All Field Worker Transactions',\n    subtitle: 'Comprehensive transaction history across all field workers',\n    summary: 'Summary',\n    totalTransactions: 'Total Transactions',\n    totalWeight: 'Total Weight',\n    totalValue: 'Total Value',\n    activeWorkers: 'Active Workers',\n    searchPlaceholder: 'Search by transaction ID, farmer, or field worker...',\n    filterByPayment: 'Filter by Payment',\n    filterByQuality: 'Filter by Quality',\n    filterByWorker: 'Filter by Field Worker',\n    allPayments: 'All Payments',\n    allQualities: 'All Qualities',\n    allWorkers: 'All Field Workers',\n    date: 'Date',\n    transactionId: 'Transaction ID',\n    farmer: 'Farmer',\n    fieldWorker: 'Field Worker',\n    weight: 'Weight (kg)',\n    quality: 'Quality',\n    amount: 'Amount (₹)',\n    paymentMethod: 'Payment',\n    status: 'Status',\n    actions: 'Actions',\n    view: 'View Details',\n    premium: 'Premium',\n    standard: 'Standard',\n    basic: 'Basic',\n    pending: 'Pending',\n    processing: 'Processing',\n    completed: 'Completed',\n    failed: 'Failed',\n    exportData: 'Export Data',\n    noTransactions: 'No transactions found',\n    kg: 'kg',\n    close: 'Close',\n    viewDetails: 'View Details',\n    location: 'Location',\n    moistureContent: 'Moisture Content',\n    notes: 'Notes',\n    workflowStatus: 'Workflow Status',\n    validationStatus: 'Validation Status'\n  }\n};\n\nexport default function AllTransactions({ onClose }: Props) {\n  const [language] = useState<'en'>('en');\n  const [contributions, setContributions] = useState<Contribution[]>([]);\n  const [filteredContributions, setFilteredContributions] = useState<Contribution[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [paymentFilter, setPaymentFilter] = useState('');\n  const [qualityFilter, setQualityFilter] = useState('');\n  const [workerFilter, setWorkerFilter] = useState('');\n  const [selectedContribution, setSelectedContribution] = useState<Contribution | null>(null);\n  const [showDetailsModal, setShowDetailsModal] = useState(false);\n  const [entriesPerPage, setEntriesPerPage] = useState(20);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const t = (key: string): string => {\n    return translations[language][key as keyof typeof translations['en']] || key;\n  };\n\n  useEffect(() => {\n    loadAllContributions();\n  }, []);\n\n  useEffect(() => {\n    applyFilters();\n  }, [contributions, searchTerm, paymentFilter, qualityFilter, workerFilter]);\n\n  // Pagination calculation\n  const totalEntries = filteredContributions.length;\n  const totalPages = Math.ceil(totalEntries / entriesPerPage);\n  const startIndex = (currentPage - 1) * entriesPerPage;\n  const endIndex = Math.min(startIndex + entriesPerPage, totalEntries);\n  const currentData = filteredContributions.slice(startIndex, endIndex);\n\n  const loadAllContributions = async () => {\n    try {\n      setLoading(true);\n      const response = await BiogasServiceClient.getAllContributions();\n\n      if (response && Array.isArray(response)) {\n        setContributions(response);\n      } else {\n        console.error('Invalid response format:', response);\n        setContributions([]);\n      }\n    } catch (error) {\n      console.error('Error loading contributions:', error);\n      setContributions([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const applyFilters = () => {\n    let filtered = [...contributions];\n\n    // Search filter\n    if (searchTerm) {\n      filtered = filtered.filter(c =>\n        c.externalId.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        (c.farmer?.name && c.farmer.name.toLowerCase().includes(searchTerm.toLowerCase())) ||\n        (c.operatorName && c.operatorName.toLowerCase().includes(searchTerm.toLowerCase())) ||\n        (c.notes && c.notes.toLowerCase().includes(searchTerm.toLowerCase()))\n      );\n    }\n\n    // Payment method filter\n    if (paymentFilter) {\n      filtered = filtered.filter(c => c.paymentMethod === paymentFilter);\n    }\n\n    // Quality filter\n    if (qualityFilter) {\n      filtered = filtered.filter(c => c.qualityGrade === qualityFilter);\n    }\n\n    // Field worker filter\n    if (workerFilter) {\n      filtered = filtered.filter(c => c.operatorUserId === workerFilter);\n    }\n\n    setFilteredContributions(filtered);\n    setCurrentPage(1);\n  };\n\n  const calculateSummary = () => {\n    const totalTransactions = contributions.length;\n    const totalWeight = contributions.reduce((sum, c) => sum + c.weightKg, 0);\n    const totalValue = contributions.reduce((sum, c) => sum + c.totalAmount, 0);\n    const uniqueWorkers = new Set(contributions.map(c => c.operatorUserId).filter(Boolean));\n\n    return {\n      totalTransactions,\n      totalWeight: totalWeight.toFixed(1),\n      totalValue: totalValue.toFixed(2),\n      activeWorkers: uniqueWorkers.size\n    };\n  };\n\n  const getUniqueWorkers = () => {\n    const workers = new Map();\n    contributions.forEach(c => {\n      if (c.operatorUserId && c.operatorName) {\n        workers.set(c.operatorUserId, c.operatorName);\n      }\n    });\n    return Array.from(workers.entries()).map(([id, name]) => ({ id, name }));\n  };\n\n  const formatDate = (dateString: string): string => {\n    return new Date(dateString).toLocaleDateString('en-IN');\n  };\n\n  const getPaymentStatusColor = (status: string) => {\n    switch (status) {\n      case 'COMPLETED':\n        return 'bg-green-100 text-green-800';\n      case 'PENDING':\n        return 'bg-yellow-100 text-yellow-800';\n      case 'PROCESSING':\n        return 'bg-blue-100 text-blue-800';\n      case 'FAILED':\n        return 'bg-red-100 text-red-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const getQualityColor = (quality: string) => {\n    switch (quality) {\n      case 'PREMIUM':\n        return 'bg-green-100 text-green-800';\n      case 'STANDARD':\n        return 'bg-blue-100 text-blue-800';\n      case 'BASIC':\n        return 'bg-yellow-100 text-yellow-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const handleViewDetails = (contribution: Contribution) => {\n    setSelectedContribution(contribution);\n    setShowDetailsModal(true);\n  };\n\n  const handleExportData = () => {\n    const csvData = contributions.map(c => ({\n      'Transaction ID': c.externalId,\n      'Date': formatDate(c.contributionDate),\n      'Farmer': c.farmer?.name || 'Unknown',\n      'Field Worker': c.operatorName || 'Unknown',\n      'Phone': c.operatorPhone || 'N/A',\n      'Weight (kg)': c.weightKg,\n      'Quality': c.qualityGrade,\n      'Rate (₹/kg)': c.ratePerKg,\n      'Total Amount (₹)': c.totalAmount,\n      'Payment Method': c.paymentMethod,\n      'Payment Status': c.paymentStatus,\n      'Location': c.gpsLatitude && c.gpsLongitude ? `${c.gpsLatitude}, ${c.gpsLongitude}` : 'N/A',\n      'Notes': c.notes || 'N/A'\n    }));\n\n    const csvContent = [\n      Object.keys(csvData[0] || {}).join(','),\n      ...csvData.map(row => Object.values(row).join(','))\n    ].join('\\n');\n\n    const blob = new Blob([csvContent], { type: 'text/csv' });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `field-worker-transactions-${new Date().toISOString().split('T')[0]}.csv`;\n    a.click();\n    window.URL.revokeObjectURL(url);\n  };\n\n  const summary = calculateSummary();\n  const uniqueWorkers = getUniqueWorkers();\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <div className=\"bg-white rounded-xl p-8 shadow-lg\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto\"></div>\n          <p className=\"text-center mt-4\">Loading transactions...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 p-6\">\n      <div className=\"max-w-7xl mx-auto\">\n        {/* Header */}\n        <div className=\"bg-white rounded-xl shadow-sm p-6 mb-6\">\n          <div className=\"flex justify-between items-center\">\n            <div>\n              <h1 className=\"text-2xl font-bold text-gray-900\">{t('title')}</h1>\n              <p className=\"text-gray-600 mt-1\">{t('subtitle')}</p>\n            </div>\n            {onClose && (\n              <button\n                onClick={onClose}\n                className=\"text-gray-400 hover:text-gray-600 p-2 rounded-full hover:bg-gray-100\"\n              >\n                <X className=\"h-6 w-6\" />\n              </button>\n            )}\n          </div>\n        </div>\n\n        {/* Summary Cards */}\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-6\">\n          <div className=\"bg-white rounded-xl shadow-sm p-6\">\n            <div className=\"flex items-center\">\n              <BarChart3 className=\"h-10 w-10 text-blue-600\" />\n              <div className=\"ml-4\">\n                <p className=\"text-sm font-medium text-gray-600\">{t('totalTransactions')}</p>\n                <p className=\"text-2xl font-bold text-gray-900\">{summary.totalTransactions}</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"bg-white rounded-xl shadow-sm p-6\">\n            <div className=\"flex items-center\">\n              <Scale className=\"h-10 w-10 text-green-600\" />\n              <div className=\"ml-4\">\n                <p className=\"text-sm font-medium text-gray-600\">{t('totalWeight')}</p>\n                <p className=\"text-2xl font-bold text-gray-900\">{summary.totalWeight} {t('kg')}</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"bg-white rounded-xl shadow-sm p-6\">\n            <div className=\"flex items-center\">\n              <Coins className=\"h-10 w-10 text-yellow-600\" />\n              <div className=\"ml-4\">\n                <p className=\"text-sm font-medium text-gray-600\">{t('totalValue')}</p>\n                <p className=\"text-2xl font-bold text-gray-900\">₹{summary.totalValue}</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"bg-white rounded-xl shadow-sm p-6\">\n            <div className=\"flex items-center\">\n              <Users className=\"h-10 w-10 text-purple-600\" />\n              <div className=\"ml-4\">\n                <p className=\"text-sm font-medium text-gray-600\">{t('activeWorkers')}</p>\n                <p className=\"text-2xl font-bold text-gray-900\">{summary.activeWorkers}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Filters */}\n        <div className=\"bg-white rounded-xl shadow-sm p-6 mb-6\">\n          <div className=\"grid grid-cols-1 md:grid-cols-5 gap-4\">\n            <div className=\"md:col-span-2\">\n              <div className=\"relative\">\n                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\n                <input\n                  type=\"text\"\n                  placeholder={t('searchPlaceholder')}\n                  value={searchTerm}\n                  onChange={(e) => setSearchTerm(e.target.value)}\n                  className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                />\n              </div>\n            </div>\n            <select\n              value={workerFilter}\n              onChange={(e) => setWorkerFilter(e.target.value)}\n              className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            >\n              <option value=\"\">{t('allWorkers')}</option>\n              {uniqueWorkers.map((worker) => (\n                <option key={worker.id} value={worker.id}>{worker.name}</option>\n              ))}\n            </select>\n            <select\n              value={paymentFilter}\n              onChange={(e) => setPaymentFilter(e.target.value)}\n              className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            >\n              <option value=\"\">{t('allPayments')}</option>\n              <option value=\"UPI\">UPI</option>\n              <option value=\"CASH\">Cash</option>\n              <option value=\"NEFT\">NEFT</option>\n              <option value=\"AEPS\">AEPS</option>\n            </select>\n            <select\n              value={qualityFilter}\n              onChange={(e) => setQualityFilter(e.target.value)}\n              className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            >\n              <option value=\"\">{t('allQualities')}</option>\n              <option value=\"PREMIUM\">{t('premium')}</option>\n              <option value=\"STANDARD\">{t('standard')}</option>\n              <option value=\"BASIC\">{t('basic')}</option>\n            </select>\n          </div>\n          <div className=\"flex justify-end mt-4\">\n            <button\n              onClick={handleExportData}\n              className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n            >\n              <Download className=\"h-4 w-4\" />\n              {t('exportData')}\n            </button>\n          </div>\n        </div>\n\n        {/* Pagination Controls */}\n        <div className=\"bg-white rounded-xl shadow-sm p-4 mb-4\">\n          <div className=\"flex justify-between items-center\">\n            <div className=\"flex items-center gap-2\">\n              <span className=\"text-sm text-gray-600\">Show</span>\n              <select\n                value={entriesPerPage}\n                onChange={(e) => { setEntriesPerPage(Number(e.target.value)); setCurrentPage(1); }}\n                className=\"px-3 py-1 border border-gray-300 rounded-lg text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              >\n                <option value={10}>10</option>\n                <option value={20}>20</option>\n                <option value={50}>50</option>\n                <option value={100}>100</option>\n              </select>\n              <span className=\"text-sm text-gray-600\">entries</span>\n            </div>\n          </div>\n        </div>\n\n\n        {/* Transactions Table */}\n        <div className=\"bg-white rounded-xl shadow-sm overflow-hidden\">\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full\">\n              <thead className=\"bg-gray-50 border-b border-gray-200\">\n                <tr>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t('date')}</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t('transactionId')}</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t('farmer')}</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t('fieldWorker')}</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t('weight')}</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t('quality')}</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t('amount')}</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t('paymentMethod')}</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t('status')}</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{t('actions')}</th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {currentData.map((contribution) => (\n                  <tr key={contribution.id} className=\"hover:bg-gray-50 transition-colors\">\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                      <div className=\"flex items-center\">\n                        <Calendar className=\"h-4 w-4 text-gray-400 mr-2\" />\n                        {formatDate(contribution.contributionDate)}\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-mono text-gray-900\">\n                      {contribution.externalId}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                      <div>\n                        <div className=\"font-medium\">{contribution.farmer?.name || 'Unknown'}</div>\n                        <div className=\"text-xs text-gray-500\">{contribution.farmer?.externalId}</div>\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                      <div className=\"flex items-center\">\n                        <User className=\"h-4 w-4 text-gray-400 mr-2\" />\n                        <div>\n                          <div className=\"font-medium\">{contribution.operatorName || 'Unknown'}</div>\n                          <div className=\"text-xs text-gray-500\">{contribution.operatorPhone}</div>\n                        </div>\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                      {contribution.weightKg} {t('kg')}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${getQualityColor(contribution.qualityGrade)}`}>\n                        {t(contribution.qualityGrade.toLowerCase())}\n                      </span>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-semibold text-green-600\">\n                      ₹{contribution.totalAmount.toFixed(2)}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                      {contribution.paymentMethod}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${getPaymentStatusColor(contribution.paymentStatus)}`}>\n                        {t(contribution.paymentStatus.toLowerCase())}\n                      </span>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                      <button\n                        onClick={() => handleViewDetails(contribution)}\n                        className=\"text-blue-600 hover:text-blue-900 p-1 rounded hover:bg-blue-50\"\n                        title={t('viewDetails')}\n                      >\n                        <Clock className=\"h-4 w-4\" />\n                      </button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n\n          {/* Pagination Footer */}\n          <div className=\"px-6 py-4 border-t border-gray-100\">\n            <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4\">\n              <div className=\"text-sm text-gray-700\">\n                Showing {startIndex + 1} to {endIndex} of {totalEntries} entries\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <button\n                  onClick={() => setCurrentPage(Math.max(1, currentPage - 1))}\n                  disabled={currentPage === 1}\n                  className=\"px-3 py-1 text-sm border border-gray-300 rounded hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n                >\n                  Previous\n                </button>\n                <span className=\"px-3 py-1 text-sm bg-blue-600 text-white rounded\">\n                  {currentPage}\n                </span>\n                <button\n                  onClick={() => setCurrentPage(Math.min(totalPages, currentPage + 1))}\n                  disabled={currentPage === totalPages}\n                  className=\"px-3 py-1 text-sm border border-gray-300 rounded hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n                >\n                  Next\n                </button>\n              </div>\n            </div>\n          </div>\n\n\n          {filteredContributions.length === 0 && (\n            <div className=\"text-center py-12\">\n              <Scale className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n              <p className=\"text-gray-500 text-lg\">{t('noTransactions')}</p>\n            </div>\n          )}\n        </div>\n\n        {/* Details Modal */}\n        {showDetailsModal && selectedContribution && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n            <div className=\"bg-white rounded-xl max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\n              <div className=\"flex justify-between items-center p-6 border-b\">\n                <h3 className=\"text-xl font-semibold\">Transaction Details</h3>\n                <button\n                  onClick={() => setShowDetailsModal(false)}\n                  className=\"text-gray-400 hover:text-gray-600\"\n                >\n                  <X className=\"h-6 w-6\" />\n                </button>\n              </div>\n              <div className=\"p-6 space-y-6\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  <div>\n                    <label className=\"text-sm font-medium text-gray-500\">Transaction ID</label>\n                    <p className=\"text-lg font-mono\">{selectedContribution.externalId}</p>\n                  </div>\n                  <div>\n                    <label className=\"text-sm font-medium text-gray-500\">Date</label>\n                    <p className=\"text-lg\">{formatDate(selectedContribution.contributionDate)}</p>\n                  </div>\n                  <div>\n                    <label className=\"text-sm font-medium text-gray-500\">Farmer</label>\n                    <p className=\"text-lg\">{selectedContribution.farmer?.name || 'Unknown'}</p>\n                    <p className=\"text-sm text-gray-500\">{selectedContribution.farmer?.externalId}</p>\n                  </div>\n                  <div>\n                    <label className=\"text-sm font-medium text-gray-500\">Field Worker</label>\n                    <p className=\"text-lg\">{selectedContribution.operatorName || 'Unknown'}</p>\n                    <p className=\"text-sm text-gray-500\">{selectedContribution.operatorPhone}</p>\n                  </div>\n                  <div>\n                    <label className=\"text-sm font-medium text-gray-500\">Weight</label>\n                    <p className=\"text-lg\">{selectedContribution.weightKg} kg</p>\n                  </div>\n                  <div>\n                    <label className=\"text-sm font-medium text-gray-500\">Rate per kg</label>\n                    <p className=\"text-lg\">₹{selectedContribution.ratePerKg}</p>\n                  </div>\n                  <div>\n                    <label className=\"text-sm font-medium text-gray-500\">Total Amount</label>\n                    <p className=\"text-lg font-semibold text-green-600\">₹{selectedContribution.totalAmount}</p>\n                  </div>\n                  <div>\n                    <label className=\"text-sm font-medium text-gray-500\">Payment Method</label>\n                    <p className=\"text-lg\">{selectedContribution.paymentMethod}</p>\n                  </div>\n                  {selectedContribution.moistureContent && (\n                    <div>\n                      <label className=\"text-sm font-medium text-gray-500\">Moisture Content</label>\n                      <p className=\"text-lg\">{selectedContribution.moistureContent}%</p>\n                    </div>\n                  )}\n                  {selectedContribution.gpsLatitude && selectedContribution.gpsLongitude && (\n                    <div>\n                      <label className=\"text-sm font-medium text-gray-500\">Location</label>\n                      <p className=\"text-lg\">{selectedContribution.gpsLatitude}, {selectedContribution.gpsLongitude}</p>\n                    </div>\n                  )}\n                </div>\n                {selectedContribution.notes && (\n                  <div>\n                    <label className=\"text-sm font-medium text-gray-500\">Notes</label>\n                    <p className=\"text-lg\">{selectedContribution.notes}</p>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}","/**\r\n * Food History Page - Shows food consumption history with filtering and pagination\r\n * Mapped to backend FoodHistoryDTO with exact field names\r\n */\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Search, Filter, Eye, Edit, Trash2, Plus, Download } from 'lucide-react';\r\nimport { foodHistoryApi, type FoodHistory } from '../../services/gaushala/api';\r\n\r\nexport default function FoodHistory() {\r\n  const navigate = useNavigate();\r\n  const [foodHistory, setFoodHistory] = useState<FoodHistory[]>([]);\r\n  const [filteredData, setFilteredData] = useState<FoodHistory[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [entriesPerPage, setEntriesPerPage] = useState(20);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n  const [totalItems, setTotalItems] = useState(0);\r\n  const [showFilters, setShowFilters] = useState(false);\r\n\r\n  // Filter states\r\n  const [filterLivestockId, setFilterLivestockId] = useState('');\r\n  const [filterShedId, setFilterShedId] = useState('');\r\n  const [filterInventoryId, setFilterInventoryId] = useState('');\r\n  const [filterDuration, setFilterDuration] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchFoodHistory();\r\n  }, [currentPage, entriesPerPage]);\r\n\r\n  const fetchFoodHistory = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const result = await foodHistoryApi.getAllFoodHistory(currentPage - 1, entriesPerPage);\r\n\r\n      if (result.success && result.data) {\r\n        setFoodHistory(result.data.content || []);\r\n        setFilteredData(result.data.content || []);\r\n        setTotalPages(result.data.totalPages || 1);\r\n        setTotalItems(result.data.totalElements || 0);\r\n      } else {\r\n        setError(result.error || 'Failed to load food history');\r\n        setFoodHistory([]);\r\n        setFilteredData([]);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching food history:', error);\r\n      setError('Failed to load food history');\r\n      setFoodHistory([]);\r\n      setFilteredData([]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let filtered = foodHistory;\r\n\r\n    // Apply search filter\r\n    if (searchTerm) {\r\n      filtered = filtered.filter(item =>\r\n        item.livestockId.toString().includes(searchTerm) ||\r\n        item.shedId.toString().includes(searchTerm) ||\r\n        item.inventoryId.toString().includes(searchTerm) ||\r\n        item.duration.toLowerCase().includes(searchTerm.toLowerCase())\r\n      );\r\n    }\r\n\r\n    // Apply specific filters\r\n    if (filterLivestockId) {\r\n      filtered = filtered.filter(item =>\r\n        item.livestockId.toString().includes(filterLivestockId)\r\n      );\r\n    }\r\n    if (filterShedId) {\r\n      filtered = filtered.filter(item =>\r\n        item.shedId.toString().includes(filterShedId)\r\n      );\r\n    }\r\n    if (filterInventoryId) {\r\n      filtered = filtered.filter(item =>\r\n        item.inventoryId.toString().includes(filterInventoryId)\r\n      );\r\n    }\r\n    if (filterDuration) {\r\n      filtered = filtered.filter(item =>\r\n        item.duration.toLowerCase().includes(filterDuration.toLowerCase())\r\n      );\r\n    }\r\n\r\n    setFilteredData(filtered);\r\n  }, [searchTerm, filterLivestockId, filterShedId, filterInventoryId, filterDuration, foodHistory]);\r\n\r\n  // Action handlers\r\n  const handleView = (id: number) => {\r\n    navigate(`/gaushala/food-history/view/${id}`);\r\n  };\r\n\r\n  const handleEdit = (id: number) => {\r\n    navigate(`/gaushala/food-history/edit/${id}`);\r\n  };\r\n\r\n  const handleDelete = async (id: number) => {\r\n    if (!window.confirm('Are you sure you want to delete this food history record?')) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const result = await foodHistoryApi.deleteFoodHistory(id);\r\n\r\n      if (result.success) {\r\n        // Refresh the list after successful deletion\r\n        fetchFoodHistory();\r\n      } else {\r\n        alert(result.error || 'Failed to delete food history record');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting food history record:', error);\r\n      alert('Failed to delete food history record');\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString?: string) => {\r\n    if (!dateString) return '-';\r\n    try {\r\n      const date = new Date(dateString);\r\n      return date.toLocaleDateString('en-US', {\r\n        month: 'short',\r\n        day: 'numeric',\r\n        year: 'numeric'\r\n      });\r\n    } catch {\r\n      return dateString;\r\n    }\r\n  };\r\n\r\n  // Calculate display values\r\n  const startIndex = (currentPage - 1) * entriesPerPage;\r\n  const endIndex = Math.min(startIndex + filteredData.length, totalItems);\r\n\r\n  if (loading && foodHistory.length === 0) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-64\">\r\n        <div className=\"text-gray-500\">Loading food history...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4\">\r\n        <div>\r\n          <h1 className=\"text-2xl font-bold text-gray-900\">Food History</h1>\r\n          <p className=\"text-gray-600 mt-1\">Food consumption history and records</p>\r\n        </div>\r\n        <div className=\"flex gap-3\">\r\n          <button className=\"flex items-center gap-2 px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors\">\r\n            <Download className=\"h-4 w-4\" />\r\n            Export\r\n          </button>\r\n          <button\r\n            onClick={() => navigate('/gaushala/food-history/add')}\r\n            className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\r\n          >\r\n            <Plus className=\"h-4 w-4\" />\r\n            Add Food Entry\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Error Message */}\r\n      {error && (\r\n        <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\r\n          <div className=\"flex items-center gap-2 text-red-800\">\r\n            <span className=\"text-red-500\">⚠</span>\r\n            {error}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Main Content Card */}\r\n      <div className=\"bg-white rounded-xl shadow-sm border border-gray-100\">\r\n        {/* Controls */}\r\n        <div className=\"p-6 border-b border-gray-100\">\r\n          <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between gap-4\">\r\n            {/* Left side - Show entries and Filter */}\r\n            <div className=\"flex items-center gap-4\">\r\n              <div className=\"flex items-center gap-2\">\r\n                <span className=\"text-sm text-gray-600\">Show</span>\r\n                <select\r\n                  value={entriesPerPage}\r\n                  onChange={(e) => {\r\n                    setEntriesPerPage(Number(e.target.value));\r\n                    setCurrentPage(1);\r\n                  }}\r\n                  className=\"px-3 py-1 border border-gray-300 rounded-lg text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                >\r\n                  <option value={10}>10</option>\r\n                  <option value={20}>20</option>\r\n                  <option value={50}>50</option>\r\n                  <option value={100}>100</option>\r\n                </select>\r\n                <span className=\"text-sm text-gray-600\">entries</span>\r\n              </div>\r\n\r\n              <button\r\n                onClick={() => setShowFilters(!showFilters)}\r\n                className=\"flex items-center gap-2 px-3 py-1 border border-gray-300 rounded-lg text-sm hover:bg-gray-50 transition-colors\"\r\n              >\r\n                <Filter className=\"h-4 w-4\" />\r\n                Filter Box\r\n              </button>\r\n            </div>\r\n\r\n            {/* Right side - Search */}\r\n            <div className=\"relative\">\r\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search...\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n                className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Filter Box */}\r\n          {showFilters && (\r\n            <div className=\"mt-4 p-4 bg-gray-50 rounded-lg\">\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Filter by Livestock ID\"\r\n                  value={filterLivestockId}\r\n                  onChange={(e) => setFilterLivestockId(e.target.value)}\r\n                  className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Filter by Shed ID\"\r\n                  value={filterShedId}\r\n                  onChange={(e) => setFilterShedId(e.target.value)}\r\n                  className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Filter by Inventory ID\"\r\n                  value={filterInventoryId}\r\n                  onChange={(e) => setFilterInventoryId(e.target.value)}\r\n                  className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Filter by Duration\"\r\n                  value={filterDuration}\r\n                  onChange={(e) => setFilterDuration(e.target.value)}\r\n                  className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                />\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Table */}\r\n        <div className=\"overflow-x-auto\">\r\n          <table className=\"w-full\">\r\n            <thead className=\"bg-gray-50 border-b border-gray-100\">\r\n              <tr>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  SL.\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Livestock ID\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Shed ID\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Inventory ID\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Consume Quantity (kg)\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Duration\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Date\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Action\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"bg-white divide-y divide-gray-100\">\r\n              {filteredData.length === 0 ? (\r\n                <tr>\r\n                  <td colSpan={8} className=\"px-6 py-8 text-center text-gray-500\">\r\n                    {loading ? 'Loading...' : 'No food history records found'}\r\n                  </td>\r\n                </tr>\r\n              ) : (\r\n                filteredData.map((item, index) => (\r\n                  <tr key={item.id} className=\"hover:bg-gray-50 transition-colors\">\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                      {startIndex + index + 1}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 font-medium\">\r\n                      {item.livestockId}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                      {item.shedId}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                      {item.inventoryId}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                      {item.consumeQuantity}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                      {item.duration}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                      {formatDate(item.date)}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                      <div className=\"flex items-center gap-2\">\r\n                        <button\r\n                          onClick={() => handleView(item.id)}\r\n                          className=\"p-1 text-blue-600 hover:text-blue-800 hover:bg-blue-50 rounded transition-colors\"\r\n                          title=\"View\"\r\n                        >\r\n                          <Eye className=\"h-4 w-4\" />\r\n                        </button>\r\n                        <button\r\n                          onClick={() => handleEdit(item.id)}\r\n                          className=\"p-1 text-green-600 hover:text-green-800 hover:bg-green-50 rounded transition-colors\"\r\n                          title=\"Edit\"\r\n                        >\r\n                          <Edit className=\"h-4 w-4\" />\r\n                        </button>\r\n                        <button\r\n                          onClick={() => handleDelete(item.id)}\r\n                          className=\"p-1 text-red-600 hover:text-red-800 hover:bg-red-50 rounded transition-colors\"\r\n                          title=\"Delete\"\r\n                        >\r\n                          <Trash2 className=\"h-4 w-4\" />\r\n                        </button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                ))\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        {/* Pagination */}\r\n        <div className=\"px-6 py-4 border-t border-gray-100\">\r\n          <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4\">\r\n            <div className=\"text-sm text-gray-700\">\r\n              Showing {filteredData.length > 0 ? startIndex + 1 : 0} to {endIndex} of {totalItems} entries\r\n            </div>\r\n            <div className=\"flex items-center gap-2\">\r\n              <button\r\n                onClick={() => setCurrentPage(Math.max(1, currentPage - 1))}\r\n                disabled={currentPage === 1}\r\n                className=\"px-3 py-1 text-sm border border-gray-300 rounded hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\r\n              >\r\n                Previous\r\n              </button>\r\n              <span className=\"px-3 py-1 text-sm bg-blue-600 text-white rounded\">\r\n                {currentPage}\r\n              </span>\r\n              <span className=\"text-sm text-gray-500\">of {totalPages}</span>\r\n              <button\r\n                onClick={() => setCurrentPage(Math.min(totalPages, currentPage + 1))}\r\n                disabled={currentPage === totalPages}\r\n                className=\"px-3 py-1 text-sm border border-gray-300 rounded hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\r\n              >\r\n                Next\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","/**\r\n * Add Food History Page - Create new food history entries\r\n * Mapped to backend FoodHistoryDTO with exact field names\r\n */\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Save, ArrowLeft, Calendar, FileText } from 'lucide-react';\r\nimport { foodHistoryApi, type FoodHistory } from '../../services/gaushala/api';\r\n\r\ninterface FoodHistoryFormData {\r\n  livestockId: number;\r\n  shedId: number;\r\n  inventoryId: number;\r\n  consumeQuantity: number;\r\n  duration: string;\r\n  date: string;\r\n  comments: string;\r\n}\r\n\r\nexport default function AddFoodHistory() {\r\n  const navigate = useNavigate();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [message, setMessage] = useState<{ type: 'success' | 'error'; text: string } | null>(null);\r\n\r\n  // TODO: Fetch these from backend APIs when available\r\n  const [cattle, setCattle] = useState<any[]>([]);\r\n  const [sheds, setSheds] = useState<any[]>([]);\r\n  const [inventory, setInventory] = useState<any[]>([]);\r\n\r\n  const [formData, setFormData] = useState<FoodHistoryFormData>({\r\n    livestockId: 0,\r\n    shedId: 0,\r\n    inventoryId: 0,\r\n    consumeQuantity: 0,\r\n    duration: '',\r\n    date: '',\r\n    comments: ''\r\n  });\r\n\r\n  const [errors, setErrors] = useState<Partial<Record<keyof FoodHistoryFormData, string>>>({});\r\n\r\n  useEffect(() => {\r\n    // TODO: Fetch cattle, sheds, and inventory from backend\r\n    // For now using mock data\r\n    setCattle([\r\n      { id: 1, name: 'Cow 001 - Ganga' },\r\n      { id: 2, name: 'Cow 002 - Yamuna' },\r\n      { id: 3, name: 'Cow 003 - Saraswati' }\r\n    ]);\r\n\r\n    setSheds([\r\n      { id: 1, name: 'Shed 1' },\r\n      { id: 2, name: 'Shed 2' },\r\n      { id: 3, name: 'Shed 3' },\r\n      { id: 4, name: 'Shed 4' },\r\n      { id: 5, name: 'Shed 5' }\r\n    ]);\r\n\r\n    setInventory([\r\n      { id: 1, name: 'Green Fodder' },\r\n      { id: 2, name: 'Dry Fodder' },\r\n      { id: 3, name: 'Concentrate Feed' },\r\n      { id: 4, name: 'Mineral Mixture' },\r\n      { id: 5, name: 'Water' }\r\n    ]);\r\n  }, []);\r\n\r\n  const handleInputChange = (field: keyof FoodHistoryFormData, value: string | number) => {\r\n    setFormData(prev => ({ ...prev, [field]: value }));\r\n    if (errors[field]) {\r\n      setErrors(prev => ({ ...prev, [field]: '' }));\r\n    }\r\n  };\r\n\r\n  const validateForm = (): boolean => {\r\n    const newErrors: Partial<Record<keyof FoodHistoryFormData, string>> = {};\r\n\r\n    if (formData.livestockId === 0) newErrors.livestockId = 'Livestock is required';\r\n    if (formData.shedId === 0) newErrors.shedId = 'Shed is required';\r\n    if (formData.inventoryId === 0) newErrors.inventoryId = 'Food Type is required';\r\n    if (!formData.date.trim()) newErrors.date = 'Date is required';\r\n    if (formData.consumeQuantity <= 0) newErrors.consumeQuantity = 'Consume Quantity must be greater than 0';\r\n    if (!formData.duration.trim()) newErrors.duration = 'Duration is required';\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    if (!validateForm()) {\r\n      setMessage({\r\n        type: 'error',\r\n        text: 'Please fill in all required fields.'\r\n      });\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    setMessage(null);\r\n\r\n    try {\r\n      // Convert date to ISO format for backend LocalDateTime\r\n      const foodHistoryData: Omit<FoodHistory, 'id' | 'createdAt' | 'updatedAt'> = {\r\n        livestockId: formData.livestockId,\r\n        shedId: formData.shedId,\r\n        inventoryId: formData.inventoryId,\r\n        consumeQuantity: formData.consumeQuantity,\r\n        duration: formData.duration,\r\n        date: new Date(formData.date).toISOString(),\r\n        comments: formData.comments || undefined\r\n      };\r\n\r\n      const result = await foodHistoryApi.createFoodHistory(foodHistoryData);\r\n\r\n      if (result.success) {\r\n        setMessage({\r\n          type: 'success',\r\n          text: 'Food history entry created successfully!'\r\n        });\r\n\r\n        // Navigate back after delay\r\n        setTimeout(() => {\r\n          navigate('/gaushala/food-history');\r\n        }, 2000);\r\n      } else {\r\n        setMessage({\r\n          type: 'error',\r\n          text: result.error || 'Failed to create food history entry.'\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error creating food history:', error);\r\n      setMessage({\r\n        type: 'error',\r\n        text: 'Failed to create food history entry. Please try again.'\r\n      });\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    navigate('/gaushala/food-history');\r\n  };\r\n\r\n  const SelectField = ({\r\n    label,\r\n    value,\r\n    onChange,\r\n    placeholder,\r\n    required = false,\r\n    error,\r\n    options,\r\n    className = ''\r\n  }: any) => (\r\n    <div className={`space-y-2 ${className}`}>\r\n      <label className=\"block text-sm font-medium text-gray-800\">\r\n        {label} {required && <span className=\"text-red-500\">*</span>}\r\n      </label>\r\n      <select\r\n        value={value}\r\n        onChange={(e) => onChange(Number(e.target.value) || e.target.value)}\r\n        className={`w-full px-3 py-2 bg-white border rounded-lg transition-all duration-200 text-gray-900 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent hover:border-gray-400 ${\r\n          error ? 'border-red-300 bg-red-50' : 'border-gray-300'\r\n        }`}\r\n      >\r\n        <option value={0}>{placeholder}</option>\r\n        {options.map((option: any) => (\r\n          <option key={option.id} value={option.id}>\r\n            {option.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error && (\r\n        <div className=\"flex items-center gap-2 text-sm text-red-600\">\r\n          <span className=\"text-red-500\">⚠</span>\r\n          {error}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  const InputField = ({\r\n    label,\r\n    value,\r\n    onChange,\r\n    type = 'text',\r\n    placeholder,\r\n    required = false,\r\n    error,\r\n    className = '',\r\n    ...props\r\n  }: any) => (\r\n    <div className={`space-y-2 ${className}`}>\r\n      <label className=\"block text-sm font-medium text-gray-800\">\r\n        {label} {required && <span className=\"text-red-500\">*</span>}\r\n      </label>\r\n      <input\r\n        type={type}\r\n        value={value}\r\n        onChange={(e) => onChange(type === 'number' ? Number(e.target.value) : e.target.value)}\r\n        placeholder={placeholder}\r\n        className={`w-full px-3 py-2 bg-white border rounded-lg transition-all duration-200 text-gray-900 placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent hover:border-gray-400 ${\r\n          error ? 'border-red-300 bg-red-50' : 'border-gray-300'\r\n        }`}\r\n        {...props}\r\n      />\r\n      {error && (\r\n        <div className=\"flex items-center gap-2 text-sm text-red-600\">\r\n          <span className=\"text-red-500\">⚠</span>\r\n          {error}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  const TextAreaField = ({\r\n    label,\r\n    value,\r\n    onChange,\r\n    placeholder,\r\n    required = false,\r\n    error,\r\n    rows = 3,\r\n    className = ''\r\n  }: any) => (\r\n    <div className={`space-y-2 ${className}`}>\r\n      <label className=\"block text-sm font-medium text-gray-800\">\r\n        {label} {required && <span className=\"text-red-500\">*</span>}\r\n      </label>\r\n      <textarea\r\n        value={value}\r\n        onChange={(e) => onChange(e.target.value)}\r\n        placeholder={placeholder}\r\n        rows={rows}\r\n        className={`w-full px-3 py-2 bg-white border rounded-lg transition-all duration-200 text-gray-900 placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent hover:border-gray-400 resize-vertical ${\r\n          error ? 'border-red-300 bg-red-50' : 'border-gray-300'\r\n        }`}\r\n      />\r\n      {error && (\r\n        <div className=\"flex items-center gap-2 text-sm text-red-600\">\r\n          <span className=\"text-red-500\">⚠</span>\r\n          {error}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n        {/* Header */}\r\n        <div className=\"flex items-center justify-between\">\r\n          <div>\r\n            <h1 className=\"text-2xl font-bold text-gray-900\">Create Food History</h1>\r\n            <p className=\"text-gray-600 mt-1\">Record new food consumption entry</p>\r\n          </div>\r\n          <button\r\n            onClick={handleCancel}\r\n            className=\"flex items-center gap-2 px-4 py-2 text-gray-600 hover:text-gray-800 hover:bg-gray-100 rounded-lg transition-colors\"\r\n          >\r\n            <ArrowLeft className=\"h-4 w-4\" />\r\n            Back\r\n          </button>\r\n        </div>\r\n\r\n        {/* Message */}\r\n        {message && (\r\n          <div className={`p-4 rounded-lg border ${\r\n            message.type === 'success'\r\n              ? 'bg-green-50 border-green-200 text-green-800'\r\n              : 'bg-red-50 border-red-200 text-red-800'\r\n          }`}>\r\n            <div className=\"flex items-center gap-2\">\r\n              {message.type === 'success' ? (\r\n                <span className=\"text-green-500\">✓</span>\r\n              ) : (\r\n                <span className=\"text-red-500\">⚠</span>\r\n              )}\r\n              {message.text}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Main Form */}\r\n        <div className=\"bg-white rounded-xl shadow-sm border border-gray-100\">\r\n          <div className=\"p-6 border-b border-gray-100\">\r\n            <h2 className=\"text-lg font-semibold text-gray-900 flex items-center gap-3\">\r\n              <div className=\"h-10 w-10 bg-blue-100 rounded-full flex items-center justify-center\">\r\n                <FileText className=\"h-5 w-5 text-blue-600\" />\r\n              </div>\r\n              Create New Food History\r\n            </h2>\r\n          </div>\r\n\r\n          <form onSubmit={handleSubmit} className=\"p-6\">\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n              {/* Livestock */}\r\n              <SelectField\r\n                label=\"Livestock (Cattle)\"\r\n                value={formData.livestockId}\r\n                onChange={(value: number) => handleInputChange('livestockId', value)}\r\n                placeholder=\"Select cattle\"\r\n                required\r\n                error={errors.livestockId}\r\n                options={cattle}\r\n              />\r\n\r\n              {/* Shed */}\r\n              <SelectField\r\n                label=\"Shed\"\r\n                value={formData.shedId}\r\n                onChange={(value: number) => handleInputChange('shedId', value)}\r\n                placeholder=\"Select shed\"\r\n                required\r\n                error={errors.shedId}\r\n                options={sheds}\r\n              />\r\n\r\n              {/* Food Type (Inventory) */}\r\n              <SelectField\r\n                label=\"Food Type\"\r\n                value={formData.inventoryId}\r\n                onChange={(value: number) => handleInputChange('inventoryId', value)}\r\n                placeholder=\"Select food type\"\r\n                required\r\n                error={errors.inventoryId}\r\n                options={inventory}\r\n              />\r\n\r\n              {/* Consume Quantity */}\r\n              <InputField\r\n                label=\"Consume Quantity (kg)\"\r\n                value={formData.consumeQuantity}\r\n                onChange={(value: number) => handleInputChange('consumeQuantity', value)}\r\n                type=\"number\"\r\n                placeholder=\"Enter quantity\"\r\n                required\r\n                error={errors.consumeQuantity}\r\n                min=\"0\"\r\n                step=\"0.1\"\r\n              />\r\n\r\n              {/* Date */}\r\n              <div className=\"space-y-2\">\r\n                <label className=\"block text-sm font-medium text-gray-800\">\r\n                  Date <span className=\"text-red-500\">*</span>\r\n                </label>\r\n                <div className=\"relative\">\r\n                  <input\r\n                    type=\"date\"\r\n                    value={formData.date}\r\n                    onChange={(e) => handleInputChange('date', e.target.value)}\r\n                    className={`w-full px-3 py-2 bg-white border rounded-lg transition-all duration-200 text-gray-900 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent hover:border-gray-400 ${\r\n                      errors.date ? 'border-red-300 bg-red-50' : 'border-gray-300'\r\n                    }`}\r\n                  />\r\n                  <Calendar className=\"absolute right-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n                </div>\r\n                {errors.date && (\r\n                  <div className=\"flex items-center gap-2 text-sm text-red-600\">\r\n                    <span className=\"text-red-500\">⚠</span>\r\n                    {errors.date}\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              {/* Duration */}\r\n              <SelectField\r\n                label=\"Duration\"\r\n                value={formData.duration}\r\n                onChange={(value: string) => handleInputChange('duration', value)}\r\n                placeholder=\"Select duration\"\r\n                required\r\n                error={errors.duration}\r\n                options={[\r\n                  { id: 'morning', name: 'Morning' },\r\n                  { id: 'afternoon', name: 'Afternoon' },\r\n                  { id: 'evening', name: 'Evening' },\r\n                  { id: '1st half', name: '1st Half' },\r\n                  { id: 'Last Half of the day', name: 'Last Half of the day' },\r\n                  { id: 'full day', name: 'Full Day' }\r\n                ]}\r\n              />\r\n\r\n              {/* Comments */}\r\n              <TextAreaField\r\n                label=\"Comments\"\r\n                value={formData.comments}\r\n                onChange={(value: string) => handleInputChange('comments', value)}\r\n                placeholder=\"Enter any additional comments or notes\"\r\n                className=\"md:col-span-2\"\r\n              />\r\n            </div>\r\n\r\n            {/* Action Buttons */}\r\n            <div className=\"flex justify-start gap-4 mt-8 pt-6 border-t border-gray-100\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={handleCancel}\r\n                className=\"px-6 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                type=\"submit\"\r\n                disabled={isLoading}\r\n                className=\"flex items-center gap-2 px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\r\n              >\r\n                <Save className=\"h-4 w-4\" />\r\n                {isLoading ? 'Creating...' : 'Create Food History'}\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n","/**\r\n * View Food History Page - Display detailed view of a specific food history record\r\n * Mapped to backend FoodHistoryDTO with exact field names\r\n */\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { ArrowLeft, Calendar, FileText, Edit, Trash2 } from 'lucide-react';\r\nimport { foodHistoryApi, type FoodHistory } from '../../services/gaushala/api';\r\n\r\nexport default function ViewFoodHistory() {\r\n  const navigate = useNavigate();\r\n  const { id } = useParams<{ id: string }>();\r\n  const [record, setRecord] = useState<FoodHistory | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const fetchRecord = async () => {\r\n      if (!id) return;\r\n\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      try {\r\n        const result = await foodHistoryApi.getFoodHistoryById(parseInt(id));\r\n\r\n        if (result.success && result.data) {\r\n          setRecord(result.data);\r\n        } else {\r\n          setError(result.error || 'Food history record not found');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching food history record:', error);\r\n        setError('Failed to load food history details');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchRecord();\r\n  }, [id]);\r\n\r\n  const handleEdit = () => {\r\n    navigate(`/gaushala/food-history/edit/${id}`);\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    if (!id || !window.confirm('Are you sure you want to delete this food history record?')) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const result = await foodHistoryApi.deleteFoodHistory(parseInt(id));\r\n\r\n      if (result.success) {\r\n        navigate('/gaushala/food-history');\r\n      } else {\r\n        alert(result.error || 'Failed to delete food history record');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting food history record:', error);\r\n      alert('Failed to delete food history record');\r\n    }\r\n  };\r\n\r\n  const handleBack = () => {\r\n    navigate('/gaushala/food-history');\r\n  };\r\n\r\n  const formatDate = (dateString?: string) => {\r\n    if (!dateString) return '-';\r\n    try {\r\n      const date = new Date(dateString);\r\n      return date.toLocaleDateString('en-US', {\r\n        month: 'short',\r\n        day: 'numeric',\r\n        year: 'numeric',\r\n        hour: '2-digit',\r\n        minute: '2-digit'\r\n      });\r\n    } catch {\r\n      return dateString;\r\n    }\r\n  };\r\n\r\n  const formatFeedingDate = (dateString?: string) => {\r\n    if (!dateString) return '-';\r\n    try {\r\n      const date = new Date(dateString);\r\n      return date.toLocaleDateString('en-US', {\r\n        month: 'short',\r\n        day: 'numeric',\r\n        year: 'numeric'\r\n      });\r\n    } catch {\r\n      return dateString;\r\n    }\r\n  };\r\n\r\n  const DetailField = ({ label, value, className = '' }: { label: string; value: string | number; className?: string }) => (\r\n    <div className={`space-y-1 ${className}`}>\r\n      <label className=\"block text-sm font-medium text-gray-600\">{label}</label>\r\n      <div className=\"text-gray-900 font-medium\">{value || '-'}</div>\r\n    </div>\r\n  );\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-64\">\r\n        <div className=\"text-gray-500\">Loading food history details...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error || !record) {\r\n    return (\r\n      <div className=\"space-y-6\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <div>\r\n            <h1 className=\"text-2xl font-bold text-gray-900\">Food History Not Found</h1>\r\n            <p className=\"text-gray-600 mt-1\">{error || 'The requested food history record could not be found.'}</p>\r\n          </div>\r\n          <button\r\n            onClick={handleBack}\r\n            className=\"flex items-center gap-2 px-4 py-2 text-gray-600 hover:text-gray-800 hover:bg-gray-100 rounded-lg transition-colors\"\r\n          >\r\n            <ArrowLeft className=\"h-4 w-4\" />\r\n            Back to List\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-2xl font-bold text-gray-900\">Food History Details</h1>\r\n          <p className=\"text-gray-600 mt-1\">Record #{record.id}</p>\r\n        </div>\r\n        <div className=\"flex items-center gap-3\">\r\n          <button\r\n            onClick={handleEdit}\r\n            className=\"flex items-center gap-2 px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors\"\r\n          >\r\n            <Edit className=\"h-4 w-4\" />\r\n            Edit\r\n          </button>\r\n          <button\r\n            onClick={handleDelete}\r\n            className=\"flex items-center gap-2 px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors\"\r\n          >\r\n            <Trash2 className=\"h-4 w-4\" />\r\n            Delete\r\n          </button>\r\n          <button\r\n            onClick={handleBack}\r\n            className=\"flex items-center gap-2 px-4 py-2 text-gray-600 hover:text-gray-800 hover:bg-gray-100 rounded-lg transition-colors\"\r\n          >\r\n            <ArrowLeft className=\"h-4 w-4\" />\r\n            Back\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Main Content */}\r\n      <div className=\"bg-white rounded-xl shadow-sm border border-gray-100\">\r\n        <div className=\"p-6 border-b border-gray-100\">\r\n          <h2 className=\"text-lg font-semibold text-gray-900 flex items-center gap-3\">\r\n            <div className=\"h-10 w-10 bg-blue-100 rounded-full flex items-center justify-center\">\r\n              <FileText className=\"h-5 w-5 text-blue-600\" />\r\n            </div>\r\n            Food History Information\r\n          </h2>\r\n        </div>\r\n\r\n        <div className=\"p-6\">\r\n          {/* Basic Information Section */}\r\n          <div className=\"mb-8\">\r\n            <h3 className=\"text-md font-semibold text-gray-800 mb-4 pb-2 border-b border-gray-200\">\r\n              📋 Basic Information\r\n            </h3>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n              <DetailField label=\"Livestock ID\" value={record.livestockId} />\r\n              <DetailField label=\"Shed ID\" value={record.shedId} />\r\n              <DetailField label=\"Inventory ID\" value={record.inventoryId} />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Consumption Details Section */}\r\n          <div className=\"mb-8\">\r\n            <h3 className=\"text-md font-semibold text-gray-800 mb-4 pb-2 border-b border-gray-200\">\r\n              🍽️ Consumption Details\r\n            </h3>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n              <DetailField label=\"Consume Quantity (kg)\" value={record.consumeQuantity} />\r\n              <DetailField label=\"Duration\" value={record.duration} />\r\n              <div className=\"space-y-1\">\r\n                <label className=\"block text-sm font-medium text-gray-600\">Feeding Date</label>\r\n                <div className=\"flex items-center gap-2 text-gray-900 font-medium\">\r\n                  <Calendar className=\"h-4 w-4 text-gray-400\" />\r\n                  {formatFeedingDate(record.date)}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Comments Section */}\r\n          {record.comments && (\r\n            <div className=\"mb-8\">\r\n              <h3 className=\"text-md font-semibold text-gray-800 mb-4 pb-2 border-b border-gray-200\">\r\n                💬 Comments & Notes\r\n              </h3>\r\n              <div className=\"bg-gray-50 rounded-lg p-4\">\r\n                <p className=\"text-gray-900 leading-relaxed\">{record.comments}</p>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Record Information Section */}\r\n          <div className=\"mb-8\">\r\n            <h3 className=\"text-md font-semibold text-gray-800 mb-4 pb-2 border-b border-gray-200\">\r\n              ℹ️ Record Information\r\n            </h3>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n              {record.id && <DetailField label=\"Record ID\" value={record.id} />}\r\n              {record.createdAt && (\r\n                <DetailField label=\"Record Created\" value={formatDate(record.createdAt)} />\r\n              )}\r\n              {record.updatedAt && (\r\n                <DetailField label=\"Last Updated\" value={formatDate(record.updatedAt)} />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Action Buttons */}\r\n      <div className=\"flex justify-start gap-4\">\r\n        <button\r\n          onClick={handleEdit}\r\n          className=\"flex items-center gap-2 px-6 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors\"\r\n        >\r\n          <Edit className=\"h-4 w-4\" />\r\n          Edit Record\r\n        </button>\r\n        <button\r\n          onClick={handleBack}\r\n          className=\"flex items-center gap-2 px-6 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors\"\r\n        >\r\n          <ArrowLeft className=\"h-4 w-4\" />\r\n          Back to List\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","/**\r\n * Edit Food History Page - Edit existing food history entries\r\n * Mapped to backend FoodHistoryDTO with exact field names\r\n */\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { Save, ArrowLeft, Calendar, FileText } from 'lucide-react';\r\nimport { foodHistoryApi, type FoodHistory } from '../../services/gaushala/api';\r\n\r\ninterface FoodHistoryFormData {\r\n  livestockId: number;\r\n  shedId: number;\r\n  inventoryId: number;\r\n  consumeQuantity: number;\r\n  duration: string;\r\n  date: string;\r\n  comments: string;\r\n}\r\n\r\nexport default function EditFoodHistory() {\r\n  const navigate = useNavigate();\r\n  const { id } = useParams<{ id: string }>();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [message, setMessage] = useState<{ type: 'success' | 'error'; text: string } | null>(null);\r\n\r\n  // TODO: Fetch these from backend APIs when available\r\n  const [cattle, setCattle] = useState<any[]>([]);\r\n  const [sheds, setSheds] = useState<any[]>([]);\r\n  const [inventory, setInventory] = useState<any[]>([]);\r\n\r\n  const [formData, setFormData] = useState<FoodHistoryFormData>({\r\n    livestockId: 0,\r\n    shedId: 0,\r\n    inventoryId: 0,\r\n    consumeQuantity: 0,\r\n    duration: '',\r\n    date: '',\r\n    comments: ''\r\n  });\r\n\r\n  const [errors, setErrors] = useState<Partial<Record<keyof FoodHistoryFormData, string>>>({});\r\n\r\n  useEffect(() => {\r\n    // TODO: Fetch cattle, sheds, and inventory from backend\r\n    // For now using mock data\r\n    setCattle([\r\n      { id: 1, name: 'Cow 001 - Ganga' },\r\n      { id: 2, name: 'Cow 002 - Yamuna' },\r\n      { id: 3, name: 'Cow 003 - Saraswati' }\r\n    ]);\r\n\r\n    setSheds([\r\n      { id: 1, name: 'Shed 1' },\r\n      { id: 2, name: 'Shed 2' },\r\n      { id: 3, name: 'Shed 3' },\r\n      { id: 4, name: 'Shed 4' },\r\n      { id: 5, name: 'Shed 5' }\r\n    ]);\r\n\r\n    setInventory([\r\n      { id: 1, name: 'Green Fodder' },\r\n      { id: 2, name: 'Dry Fodder' },\r\n      { id: 3, name: 'Concentrate Feed' },\r\n      { id: 4, name: 'Mineral Mixture' },\r\n      { id: 5, name: 'Water' }\r\n    ]);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchRecord = async () => {\r\n      if (!id) return;\r\n\r\n      setLoading(true);\r\n      try {\r\n        const result = await foodHistoryApi.getFoodHistoryById(parseInt(id));\r\n\r\n        if (result.success && result.data) {\r\n          const record = result.data;\r\n          // Convert ISO date string to YYYY-MM-DD format for date input\r\n          const dateObj = new Date(record.date);\r\n          const formattedDate = dateObj.toISOString().split('T')[0];\r\n\r\n          setFormData({\r\n            livestockId: record.livestockId,\r\n            shedId: record.shedId,\r\n            inventoryId: record.inventoryId,\r\n            consumeQuantity: record.consumeQuantity,\r\n            duration: record.duration,\r\n            date: formattedDate,\r\n            comments: record.comments || ''\r\n          });\r\n        } else {\r\n          setMessage({\r\n            type: 'error',\r\n            text: result.error || 'Failed to load food history record.'\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching food history record:', error);\r\n        setMessage({\r\n          type: 'error',\r\n          text: 'Failed to load food history record.'\r\n        });\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchRecord();\r\n  }, [id]);\r\n\r\n  const handleInputChange = (field: keyof FoodHistoryFormData, value: string | number) => {\r\n    setFormData(prev => ({ ...prev, [field]: value }));\r\n    if (errors[field]) {\r\n      setErrors(prev => ({ ...prev, [field]: '' }));\r\n    }\r\n  };\r\n\r\n  const validateForm = (): boolean => {\r\n    const newErrors: Partial<Record<keyof FoodHistoryFormData, string>> = {};\r\n\r\n    if (formData.livestockId === 0) newErrors.livestockId = 'Livestock is required';\r\n    if (formData.shedId === 0) newErrors.shedId = 'Shed is required';\r\n    if (formData.inventoryId === 0) newErrors.inventoryId = 'Food Type is required';\r\n    if (!formData.date.trim()) newErrors.date = 'Date is required';\r\n    if (formData.consumeQuantity <= 0) newErrors.consumeQuantity = 'Consume Quantity must be greater than 0';\r\n    if (!formData.duration.trim()) newErrors.duration = 'Duration is required';\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    if (!validateForm()) {\r\n      setMessage({\r\n        type: 'error',\r\n        text: 'Please fill in all required fields.'\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (!id) {\r\n      setMessage({\r\n        type: 'error',\r\n        text: 'Invalid food history ID.'\r\n      });\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    setMessage(null);\r\n\r\n    try {\r\n      // Convert date to ISO format for backend LocalDateTime\r\n      const foodHistoryData: Omit<FoodHistory, 'id' | 'createdAt' | 'updatedAt'> = {\r\n        livestockId: formData.livestockId,\r\n        shedId: formData.shedId,\r\n        inventoryId: formData.inventoryId,\r\n        consumeQuantity: formData.consumeQuantity,\r\n        duration: formData.duration,\r\n        date: new Date(formData.date).toISOString(),\r\n        comments: formData.comments || undefined\r\n      };\r\n\r\n      const result = await foodHistoryApi.updateFoodHistory(parseInt(id), foodHistoryData);\r\n\r\n      if (result.success) {\r\n        setMessage({\r\n          type: 'success',\r\n          text: 'Food history entry updated successfully!'\r\n        });\r\n\r\n        // Navigate back after delay\r\n        setTimeout(() => {\r\n          navigate('/gaushala/food-history');\r\n        }, 2000);\r\n      } else {\r\n        setMessage({\r\n          type: 'error',\r\n          text: result.error || 'Failed to update food history entry.'\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating food history:', error);\r\n      setMessage({\r\n        type: 'error',\r\n        text: 'Failed to update food history entry. Please try again.'\r\n      });\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    navigate('/gaushala/food-history');\r\n  };\r\n\r\n  const SelectField = ({\r\n    label,\r\n    value,\r\n    onChange,\r\n    placeholder,\r\n    required = false,\r\n    error,\r\n    options,\r\n    className = ''\r\n  }: any) => (\r\n    <div className={`space-y-2 ${className}`}>\r\n      <label className=\"block text-sm font-medium text-gray-800\">\r\n        {label} {required && <span className=\"text-red-500\">*</span>}\r\n      </label>\r\n      <select\r\n        value={value}\r\n        onChange={(e) => onChange(Number(e.target.value) || e.target.value)}\r\n        className={`w-full px-3 py-2 bg-white border rounded-lg transition-all duration-200 text-gray-900 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent hover:border-gray-400 ${\r\n          error ? 'border-red-300 bg-red-50' : 'border-gray-300'\r\n        }`}\r\n      >\r\n        <option value={0}>{placeholder}</option>\r\n        {options.map((option: any) => (\r\n          <option key={option.id} value={option.id}>\r\n            {option.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error && (\r\n        <div className=\"flex items-center gap-2 text-sm text-red-600\">\r\n          <span className=\"text-red-500\">⚠</span>\r\n          {error}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  const InputField = ({\r\n    label,\r\n    value,\r\n    onChange,\r\n    type = 'text',\r\n    placeholder,\r\n    required = false,\r\n    error,\r\n    className = '',\r\n    ...props\r\n  }: any) => (\r\n    <div className={`space-y-2 ${className}`}>\r\n      <label className=\"block text-sm font-medium text-gray-800\">\r\n        {label} {required && <span className=\"text-red-500\">*</span>}\r\n      </label>\r\n      <input\r\n        type={type}\r\n        value={value}\r\n        onChange={(e) => onChange(type === 'number' ? Number(e.target.value) : e.target.value)}\r\n        placeholder={placeholder}\r\n        className={`w-full px-3 py-2 bg-white border rounded-lg transition-all duration-200 text-gray-900 placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent hover:border-gray-400 ${\r\n          error ? 'border-red-300 bg-red-50' : 'border-gray-300'\r\n        }`}\r\n        {...props}\r\n      />\r\n      {error && (\r\n        <div className=\"flex items-center gap-2 text-sm text-red-600\">\r\n          <span className=\"text-red-500\">⚠</span>\r\n          {error}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  const TextAreaField = ({\r\n    label,\r\n    value,\r\n    onChange,\r\n    placeholder,\r\n    required = false,\r\n    error,\r\n    rows = 3,\r\n    className = ''\r\n  }: any) => (\r\n    <div className={`space-y-2 ${className}`}>\r\n      <label className=\"block text-sm font-medium text-gray-800\">\r\n        {label} {required && <span className=\"text-red-500\">*</span>}\r\n      </label>\r\n      <textarea\r\n        value={value}\r\n        onChange={(e) => onChange(e.target.value)}\r\n        placeholder={placeholder}\r\n        rows={rows}\r\n        className={`w-full px-3 py-2 bg-white border rounded-lg transition-all duration-200 text-gray-900 placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent hover:border-gray-400 resize-vertical ${\r\n          error ? 'border-red-300 bg-red-50' : 'border-gray-300'\r\n        }`}\r\n      />\r\n      {error && (\r\n        <div className=\"flex items-center gap-2 text-sm text-red-600\">\r\n          <span className=\"text-red-500\">⚠</span>\r\n          {error}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-64\">\r\n        <div className=\"text-gray-500\">Loading food history record...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-2xl font-bold text-gray-900\">Edit Food History</h1>\r\n          <p className=\"text-gray-600 mt-1\">Update food history record #{id}</p>\r\n        </div>\r\n        <button\r\n          onClick={handleCancel}\r\n          className=\"flex items-center gap-2 px-4 py-2 text-gray-600 hover:text-gray-800 hover:bg-gray-100 rounded-lg transition-colors\"\r\n        >\r\n          <ArrowLeft className=\"h-4 w-4\" />\r\n          Back\r\n        </button>\r\n      </div>\r\n\r\n      {/* Message */}\r\n      {message && (\r\n        <div className={`p-4 rounded-lg border ${\r\n          message.type === 'success'\r\n            ? 'bg-green-50 border-green-200 text-green-800'\r\n            : 'bg-red-50 border-red-200 text-red-800'\r\n        }`}>\r\n          <div className=\"flex items-center gap-2\">\r\n            {message.type === 'success' ? (\r\n              <span className=\"text-green-500\">✓</span>\r\n            ) : (\r\n              <span className=\"text-red-500\">⚠</span>\r\n            )}\r\n            {message.text}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Main Form */}\r\n      <div className=\"bg-white rounded-xl shadow-sm border border-gray-100\">\r\n        <div className=\"p-6 border-b border-gray-100\">\r\n          <h2 className=\"text-lg font-semibold text-gray-900 flex items-center gap-3\">\r\n            <div className=\"h-10 w-10 bg-blue-100 rounded-full flex items-center justify-center\">\r\n              <FileText className=\"h-5 w-5 text-blue-600\" />\r\n            </div>\r\n            Edit Food History Information\r\n          </h2>\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit} className=\"p-6\">\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n            {/* Livestock */}\r\n            <SelectField\r\n              label=\"Livestock (Cattle)\"\r\n              value={formData.livestockId}\r\n              onChange={(value: number) => handleInputChange('livestockId', value)}\r\n              placeholder=\"Select cattle\"\r\n              required\r\n              error={errors.livestockId}\r\n              options={cattle}\r\n            />\r\n\r\n            {/* Shed */}\r\n            <SelectField\r\n              label=\"Shed\"\r\n              value={formData.shedId}\r\n              onChange={(value: number) => handleInputChange('shedId', value)}\r\n              placeholder=\"Select shed\"\r\n              required\r\n              error={errors.shedId}\r\n              options={sheds}\r\n            />\r\n\r\n            {/* Food Type (Inventory) */}\r\n            <SelectField\r\n              label=\"Food Type\"\r\n              value={formData.inventoryId}\r\n              onChange={(value: number) => handleInputChange('inventoryId', value)}\r\n              placeholder=\"Select food type\"\r\n              required\r\n              error={errors.inventoryId}\r\n              options={inventory}\r\n            />\r\n\r\n            {/* Consume Quantity */}\r\n            <InputField\r\n              label=\"Consume Quantity (kg)\"\r\n              value={formData.consumeQuantity}\r\n              onChange={(value: number) => handleInputChange('consumeQuantity', value)}\r\n              type=\"number\"\r\n              placeholder=\"Enter quantity\"\r\n              required\r\n              error={errors.consumeQuantity}\r\n              min=\"0\"\r\n              step=\"0.1\"\r\n            />\r\n\r\n            {/* Date */}\r\n            <div className=\"space-y-2\">\r\n              <label className=\"block text-sm font-medium text-gray-800\">\r\n                Date <span className=\"text-red-500\">*</span>\r\n              </label>\r\n              <div className=\"relative\">\r\n                <input\r\n                  type=\"date\"\r\n                  value={formData.date}\r\n                  onChange={(e) => handleInputChange('date', e.target.value)}\r\n                  className={`w-full px-3 py-2 bg-white border rounded-lg transition-all duration-200 text-gray-900 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent hover:border-gray-400 ${\r\n                    errors.date ? 'border-red-300 bg-red-50' : 'border-gray-300'\r\n                  }`}\r\n                />\r\n                <Calendar className=\"absolute right-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n              </div>\r\n              {errors.date && (\r\n                <div className=\"flex items-center gap-2 text-sm text-red-600\">\r\n                  <span className=\"text-red-500\">⚠</span>\r\n                  {errors.date}\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* Duration */}\r\n            <SelectField\r\n              label=\"Duration\"\r\n              value={formData.duration}\r\n              onChange={(value: string) => handleInputChange('duration', value)}\r\n              placeholder=\"Select duration\"\r\n              required\r\n              error={errors.duration}\r\n              options={[\r\n                { id: 'morning', name: 'Morning' },\r\n                { id: 'afternoon', name: 'Afternoon' },\r\n                { id: 'evening', name: 'Evening' },\r\n                { id: '1st half', name: '1st Half' },\r\n                { id: 'Last Half of the day', name: 'Last Half of the day' },\r\n                { id: 'full day', name: 'Full Day' }\r\n              ]}\r\n            />\r\n\r\n            {/* Comments */}\r\n            <TextAreaField\r\n              label=\"Comments\"\r\n              value={formData.comments}\r\n              onChange={(value: string) => handleInputChange('comments', value)}\r\n              placeholder=\"Enter any additional comments or notes\"\r\n              className=\"md:col-span-2\"\r\n            />\r\n          </div>\r\n\r\n          {/* Action Buttons */}\r\n          <div className=\"flex justify-start gap-4 mt-8 pt-6 border-t border-gray-100\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={handleCancel}\r\n              className=\"px-6 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors\"\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              disabled={isLoading}\r\n              className=\"flex items-center gap-2 px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\r\n            >\r\n              <Save className=\"h-4 w-4\" />\r\n              {isLoading ? 'Updating...' : 'Update Food History'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","/**\r\n * Health History Page - Shows health history records with filtering and pagination\r\n */\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Search, Filter, Eye, Edit, Trash2, Plus, Download, Calendar } from 'lucide-react';\r\n\r\ninterface HealthHistoryRecord {\r\n  id: number;\r\n  batchName: string;\r\n  type: string;\r\n  shedNo: string;\r\n  doctor: string;\r\n  identifyDate: string;\r\n  startDate: string;\r\n  endDate: string;\r\n  nextFollowUpDate: string;\r\n}\r\n\r\nconst mockData: HealthHistoryRecord[] = [\r\n  {\r\n    id: 1,\r\n    batchName: 'Batch-04',\r\n    type: '',\r\n    shedNo: 'Shed_1',\r\n    doctor: 'Mr. User',\r\n    identifyDate: 'Apr 17, 2025',\r\n    startDate: 'Apr 17, 2025',\r\n    endDate: 'Apr 18, 2025',\r\n    nextFollowUpDate: 'Apr 27, 2025'\r\n  },\r\n  {\r\n    id: 2,\r\n    batchName: 'Batch-07',\r\n    type: '',\r\n    shedNo: '',\r\n    doctor: 'Mr. User',\r\n    identifyDate: 'Apr 02, 2025',\r\n    startDate: 'Apr 02, 2025',\r\n    endDate: 'Apr 04, 2025',\r\n    nextFollowUpDate: 'Apr 12, 2025'\r\n  },\r\n  {\r\n    id: 3,\r\n    batchName: 'Batch-06',\r\n    type: '',\r\n    shedNo: 'Shed_1',\r\n    doctor: 'Mr. User',\r\n    identifyDate: 'Mar 14, 2025',\r\n    startDate: 'Mar 04, 2025',\r\n    endDate: 'Mar 04, 2025',\r\n    nextFollowUpDate: 'Mar 20, 2025'\r\n  }\r\n];\r\n\r\nexport default function HealthHistory() {\r\n  const navigate = useNavigate();\r\n  const [healthHistory, setHealthHistory] = useState<HealthHistoryRecord[]>(mockData);\r\n  const [filteredData, setFilteredData] = useState<HealthHistoryRecord[]>(mockData);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [entriesPerPage, setEntriesPerPage] = useState(10);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [showFilters, setShowFilters] = useState(false);\r\n\r\n  // Filter states\r\n  const [filterBatchName, setFilterBatchName] = useState('');\r\n  const [filterType, setFilterType] = useState('');\r\n  const [filterDoctor, setFilterDoctor] = useState('');\r\n  const [filterIdentifyDate, setFilterIdentifyDate] = useState('');\r\n  const [filterNextFollowUpDate, setFilterNextFollowUpDate] = useState('');\r\n\r\n  useEffect(() => {\r\n    let filtered = healthHistory;\r\n\r\n    // Apply search filter\r\n    if (searchTerm) {\r\n      filtered = filtered.filter(item =>\r\n        item.batchName.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        item.type.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        item.shedNo.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        item.doctor.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        item.identifyDate.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        item.nextFollowUpDate.toLowerCase().includes(searchTerm.toLowerCase())\r\n      );\r\n    }\r\n\r\n    // Apply specific filters\r\n    if (filterBatchName && filterBatchName !== 'all') {\r\n      filtered = filtered.filter(item =>\r\n        item.batchName.toLowerCase().includes(filterBatchName.toLowerCase())\r\n      );\r\n    }\r\n    if (filterType && filterType !== 'all') {\r\n      filtered = filtered.filter(item =>\r\n        item.type.toLowerCase().includes(filterType.toLowerCase())\r\n      );\r\n    }\r\n    if (filterDoctor && filterDoctor !== 'all') {\r\n      filtered = filtered.filter(item =>\r\n        item.doctor.toLowerCase().includes(filterDoctor.toLowerCase())\r\n      );\r\n    }\r\n    if (filterIdentifyDate) {\r\n      filtered = filtered.filter(item =>\r\n        item.identifyDate.toLowerCase().includes(filterIdentifyDate.toLowerCase())\r\n      );\r\n    }\r\n    if (filterNextFollowUpDate) {\r\n      filtered = filtered.filter(item =>\r\n        item.nextFollowUpDate.toLowerCase().includes(filterNextFollowUpDate.toLowerCase())\r\n      );\r\n    }\r\n\r\n    setFilteredData(filtered);\r\n    setCurrentPage(1);\r\n  }, [searchTerm, filterBatchName, filterType, filterDoctor, filterIdentifyDate, filterNextFollowUpDate, healthHistory]);\r\n\r\n  // Pagination\r\n  const totalEntries = filteredData.length;\r\n  const totalPages = Math.ceil(totalEntries / entriesPerPage);\r\n  const startIndex = (currentPage - 1) * entriesPerPage;\r\n  const endIndex = Math.min(startIndex + entriesPerPage, totalEntries);\r\n  const currentData = filteredData.slice(startIndex, endIndex);\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4\">\r\n        <div>\r\n          <h1 className=\"text-2xl font-bold text-gray-900\">Health History</h1>\r\n          <p className=\"text-gray-600 mt-1\">Health History Listing</p>\r\n        </div>\r\n        <div className=\"flex gap-3\">\r\n          <button className=\"flex items-center gap-2 px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors\">\r\n            <Download className=\"h-4 w-4\" />\r\n            Export\r\n          </button>\r\n          <button\r\n            onClick={() => navigate('/gaushala/health-history/add')}\r\n            className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\r\n          >\r\n            <Plus className=\"h-4 w-4\" />\r\n            Add Medicine\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Main Content Card */}\r\n      <div className=\"bg-white rounded-xl shadow-sm border border-gray-100\">\r\n        {/* Controls */}\r\n        <div className=\"p-6 border-b border-gray-100\">\r\n          <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between gap-4\">\r\n            {/* Left side - Show entries and Filter */}\r\n            <div className=\"flex items-center gap-4\">\r\n              <div className=\"flex items-center gap-2\">\r\n                <span className=\"text-sm text-gray-600\">Show</span>\r\n                <select\r\n                  value={entriesPerPage}\r\n                  onChange={(e) => setEntriesPerPage(Number(e.target.value))}\r\n                  className=\"px-3 py-1 border border-gray-300 rounded-lg text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                >\r\n                  <option value={10}>10</option>\r\n                  <option value={25}>25</option>\r\n                  <option value={50}>50</option>\r\n                  <option value={100}>100</option>\r\n                </select>\r\n                <span className=\"text-sm text-gray-600\">entries</span>\r\n              </div>\r\n\r\n              <button\r\n                onClick={() => setShowFilters(!showFilters)}\r\n                className=\"flex items-center gap-2 px-3 py-1 border border-gray-300 rounded-lg text-sm hover:bg-gray-50 transition-colors\"\r\n              >\r\n                <Filter className=\"h-4 w-4\" />\r\n                Filter Box\r\n              </button>\r\n            </div>\r\n\r\n            {/* Right side - Search */}\r\n            <div className=\"relative\">\r\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search...\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n                className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Filter Box */}\r\n          {showFilters && (\r\n            <div className=\"mt-4 p-4 bg-gray-50 rounded-lg\">\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-4\">\r\n                <div>\r\n                  <label className=\"block text-xs font-medium text-gray-600 mb-1\">Batch Name</label>\r\n                  <select\r\n                    value={filterBatchName}\r\n                    onChange={(e) => setFilterBatchName(e.target.value)}\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                  >\r\n                    <option value=\"\">------ All ------</option>\r\n                    <option value=\"Batch-04\">Batch-04</option>\r\n                    <option value=\"Batch-06\">Batch-06</option>\r\n                    <option value=\"Batch-07\">Batch-07</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-xs font-medium text-gray-600 mb-1\">Type</label>\r\n                  <select\r\n                    value={filterType}\r\n                    onChange={(e) => setFilterType(e.target.value)}\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                  >\r\n                    <option value=\"\">------ All ------</option>\r\n                    <option value=\"checkup\">Check-up</option>\r\n                    <option value=\"vaccination\">Vaccination</option>\r\n                    <option value=\"treatment\">Treatment</option>\r\n                    <option value=\"surgery\">Surgery</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-xs font-medium text-gray-600 mb-1\">Identify Date</label>\r\n                  <input\r\n                    type=\"date\"\r\n                    value={filterIdentifyDate}\r\n                    onChange={(e) => setFilterIdentifyDate(e.target.value)}\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-xs font-medium text-gray-600 mb-1\">Doctor</label>\r\n                  <select\r\n                    value={filterDoctor}\r\n                    onChange={(e) => setFilterDoctor(e.target.value)}\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                  >\r\n                    <option value=\"\">------ All ------</option>\r\n                    <option value=\"Mr. User\">Mr. User</option>\r\n                    <option value=\"Dr. Smith\">Dr. Smith</option>\r\n                    <option value=\"Dr. Johnson\">Dr. Johnson</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-xs font-medium text-gray-600 mb-1\">Next Follow Up Date</label>\r\n                  <input\r\n                    type=\"date\"\r\n                    value={filterNextFollowUpDate}\r\n                    onChange={(e) => setFilterNextFollowUpDate(e.target.value)}\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Table */}\r\n        <div className=\"overflow-x-auto\">\r\n          <table className=\"w-full\">\r\n            <thead className=\"bg-gray-50 border-b border-gray-100\">\r\n              <tr>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  SL.\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Batch Name\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Type\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Shed No\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Doctor\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Identify Date\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Start Date\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  End Date\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Next Follow Up Date\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Action\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"bg-white divide-y divide-gray-100\">\r\n              {currentData.map((item, index) => (\r\n                <tr key={item.id} className=\"hover:bg-gray-50 transition-colors\">\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                    {startIndex + index + 1}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 font-medium\">\r\n                    {item.batchName}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                    {item.type}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                    {item.shedNo}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                    {item.doctor}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                    {item.identifyDate}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                    {item.startDate}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                    {item.endDate}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                    {item.nextFollowUpDate}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <button\r\n                        className=\"p-1 text-blue-600 hover:text-blue-800 hover:bg-blue-50 rounded transition-colors\"\r\n                        title=\"View\"\r\n                      >\r\n                        <Eye className=\"h-4 w-4\" />\r\n                      </button>\r\n                      <button\r\n                        className=\"p-1 text-green-600 hover:text-green-800 hover:bg-green-50 rounded transition-colors\"\r\n                        title=\"Edit\"\r\n                      >\r\n                        <Edit className=\"h-4 w-4\" />\r\n                      </button>\r\n                      <button\r\n                        className=\"p-1 text-red-600 hover:text-red-800 hover:bg-red-50 rounded transition-colors\"\r\n                        title=\"Delete\"\r\n                      >\r\n                        <Trash2 className=\"h-4 w-4\" />\r\n                      </button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        {/* Pagination */}\r\n        <div className=\"px-6 py-4 border-t border-gray-100\">\r\n          <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4\">\r\n            <div className=\"text-sm text-gray-700\">\r\n              Showing {startIndex + 1} to {endIndex} of {totalEntries} entries\r\n            </div>\r\n            <div className=\"flex items-center gap-2\">\r\n              <button\r\n                onClick={() => setCurrentPage(Math.max(1, currentPage - 1))}\r\n                disabled={currentPage === 1}\r\n                className=\"px-3 py-1 text-sm border border-gray-300 rounded hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\r\n              >\r\n                Previous\r\n              </button>\r\n              <span className=\"px-3 py-1 text-sm bg-blue-600 text-white rounded\">\r\n                {currentPage}\r\n              </span>\r\n              <button\r\n                onClick={() => setCurrentPage(Math.min(totalPages, currentPage + 1))}\r\n                disabled={currentPage === totalPages}\r\n                className=\"px-3 py-1 text-sm border border-gray-300 rounded hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\r\n              >\r\n                Next\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}","/**\r\n * Add Medicine Page - Create new medicine records\r\n * Mapped to backend Medicine.java entity with exact field names\r\n */\r\n\r\nimport { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Save, ArrowLeft, Calendar, Pill } from 'lucide-react';\r\nimport { medicineApi, type Medicine } from '../../services/gaushala/api';\r\n\r\ninterface MedicineFormData {\r\n  name: string;\r\n  description: string;\r\n  dosage: string;\r\n  unit: string;\r\n  quantity: number;\r\n  expiryDate: string;\r\n  manufacturer: string;\r\n  batchNumber: string;\r\n  purpose: string;\r\n}\r\n\r\nexport default function AddMedicine() {\r\n  const navigate = useNavigate();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [message, setMessage] = useState<{ type: 'success' | 'error'; text: string } | null>(null);\r\n\r\n  const [formData, setFormData] = useState<MedicineFormData>({\r\n    name: '',\r\n    description: '',\r\n    dosage: '',\r\n    unit: 'mg',\r\n    quantity: 0,\r\n    expiryDate: '',\r\n    manufacturer: '',\r\n    batchNumber: '',\r\n    purpose: ''\r\n  });\r\n\r\n  const [errors, setErrors] = useState<Partial<MedicineFormData>>({});\r\n\r\n  const handleInputChange = (field: keyof MedicineFormData, value: string | number) => {\r\n    setFormData(prev => ({ ...prev, [field]: value }));\r\n    if (errors[field]) {\r\n      setErrors(prev => ({ ...prev, [field]: '' }));\r\n    }\r\n  };\r\n\r\n  const validateForm = (): boolean => {\r\n    const newErrors: Partial<Record<keyof MedicineFormData, string>> = {};\r\n\r\n    if (!formData.name.trim()) newErrors.name = 'Medicine Name is required';\r\n    if (!formData.dosage.trim()) newErrors.dosage = 'Dosage is required';\r\n    if (!formData.unit.trim()) newErrors.unit = 'Unit is required';\r\n    if (formData.quantity <= 0) newErrors.quantity = 'Quantity must be greater than 0';\r\n    if (!formData.expiryDate.trim()) newErrors.expiryDate = 'Expiry Date is required';\r\n\r\n    // Date validation - expiry date should be in the future\r\n    if (formData.expiryDate) {\r\n      const expiryDate = new Date(formData.expiryDate);\r\n      const today = new Date();\r\n      today.setHours(0, 0, 0, 0);\r\n      if (expiryDate < today) {\r\n        newErrors.expiryDate = 'Expiry Date should be in the future';\r\n      }\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    if (!validateForm()) {\r\n      setMessage({\r\n        type: 'error',\r\n        text: 'Please fill in all required fields and fix validation errors.'\r\n      });\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    setMessage(null);\r\n\r\n    try {\r\n      // Convert date to ISO format for backend LocalDateTime\r\n      const medicineData: Omit<Medicine, 'id' | 'createdAt' | 'updatedAt'> = {\r\n        name: formData.name,\r\n        description: formData.description || undefined,\r\n        dosage: formData.dosage,\r\n        unit: formData.unit,\r\n        quantity: formData.quantity,\r\n        expiryDate: new Date(formData.expiryDate).toISOString(),\r\n        manufacturer: formData.manufacturer || undefined,\r\n        batchNumber: formData.batchNumber || undefined,\r\n        purpose: formData.purpose || undefined\r\n      };\r\n\r\n      const result = await medicineApi.createMedicine(medicineData);\r\n\r\n      if (result.success) {\r\n        setMessage({\r\n          type: 'success',\r\n          text: 'Medicine record created successfully!'\r\n        });\r\n\r\n        // Navigate back after delay\r\n        setTimeout(() => {\r\n          navigate('/gaushala/health-history');\r\n        }, 2000);\r\n      } else {\r\n        setMessage({\r\n          type: 'error',\r\n          text: result.error || 'Failed to create medicine record.'\r\n        });\r\n      }\r\n    } catch (error) {\r\n      setMessage({\r\n        type: 'error',\r\n        text: 'Failed to create medicine record. Please try again.'\r\n      });\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    navigate('/gaushala/health-history');\r\n  };\r\n\r\n  const InputField = ({\r\n    label,\r\n    value,\r\n    onChange,\r\n    type = 'text',\r\n    placeholder,\r\n    required = false,\r\n    error,\r\n    className = '',\r\n    ...props\r\n  }: any) => (\r\n    <div className={`space-y-2 ${className}`}>\r\n      <label className=\"block text-sm font-medium text-gray-800\">\r\n        {label} {required && <span className=\"text-red-500\">*</span>}\r\n      </label>\r\n      <input\r\n        type={type}\r\n        value={value}\r\n        onChange={(e) => onChange(type === 'number' ? Number(e.target.value) : e.target.value)}\r\n        placeholder={placeholder}\r\n        className={`w-full px-3 py-2 bg-white border rounded-lg transition-all duration-200 text-gray-900 placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent hover:border-gray-400 ${\r\n          error ? 'border-red-300 bg-red-50' : 'border-gray-300'\r\n        }`}\r\n        {...props}\r\n      />\r\n      {error && (\r\n        <div className=\"flex items-center gap-2 text-sm text-red-600\">\r\n          <span className=\"text-red-500\">⚠</span>\r\n          {error}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  const SelectField = ({\r\n    label,\r\n    value,\r\n    onChange,\r\n    placeholder,\r\n    required = false,\r\n    error,\r\n    options,\r\n    className = ''\r\n  }: any) => (\r\n    <div className={`space-y-2 ${className}`}>\r\n      <label className=\"block text-sm font-medium text-gray-800\">\r\n        {label} {required && <span className=\"text-red-500\">*</span>}\r\n      </label>\r\n      <select\r\n        value={value}\r\n        onChange={(e) => onChange(e.target.value)}\r\n        className={`w-full px-3 py-2 bg-white border rounded-lg transition-all duration-200 text-gray-900 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent hover:border-gray-400 ${\r\n          error ? 'border-red-300 bg-red-50' : 'border-gray-300'\r\n        }`}\r\n      >\r\n        <option value=\"\">{placeholder}</option>\r\n        {options.map((option: any) => (\r\n          <option key={option.value} value={option.value}>\r\n            {option.label}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error && (\r\n        <div className=\"flex items-center gap-2 text-sm text-red-600\">\r\n          <span className=\"text-red-500\">⚠</span>\r\n          {error}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  const TextAreaField = ({\r\n    label,\r\n    value,\r\n    onChange,\r\n    placeholder,\r\n    required = false,\r\n    error,\r\n    rows = 3,\r\n    className = ''\r\n  }: any) => (\r\n    <div className={`space-y-2 ${className}`}>\r\n      <label className=\"block text-sm font-medium text-gray-800\">\r\n        {label} {required && <span className=\"text-red-500\">*</span>}\r\n      </label>\r\n      <textarea\r\n        value={value}\r\n        onChange={(e) => onChange(e.target.value)}\r\n        placeholder={placeholder}\r\n        rows={rows}\r\n        className={`w-full px-3 py-2 bg-white border rounded-lg transition-all duration-200 text-gray-900 placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent hover:border-gray-400 resize-vertical ${\r\n          error ? 'border-red-300 bg-red-50' : 'border-gray-300'\r\n        }`}\r\n      />\r\n      {error && (\r\n        <div className=\"flex items-center gap-2 text-sm text-red-600\">\r\n          <span className=\"text-red-500\">⚠</span>\r\n          {error}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n        {/* Header */}\r\n        <div className=\"flex items-center justify-between\">\r\n          <div>\r\n            <h1 className=\"text-2xl font-bold text-gray-900\">Add New Medicine</h1>\r\n            <p className=\"text-gray-600 mt-1\">Create new medicine inventory record</p>\r\n          </div>\r\n          <button\r\n            onClick={handleCancel}\r\n            className=\"flex items-center gap-2 px-4 py-2 text-gray-600 hover:text-gray-800 hover:bg-gray-100 rounded-lg transition-colors\"\r\n          >\r\n            <ArrowLeft className=\"h-4 w-4\" />\r\n            Back\r\n          </button>\r\n        </div>\r\n\r\n        {/* Message */}\r\n        {message && (\r\n          <div className={`p-4 rounded-lg border ${\r\n            message.type === 'success'\r\n              ? 'bg-green-50 border-green-200 text-green-800'\r\n              : 'bg-red-50 border-red-200 text-red-800'\r\n          }`}>\r\n            <div className=\"flex items-center gap-2\">\r\n              {message.type === 'success' ? (\r\n                <span className=\"text-green-500\">✓</span>\r\n              ) : (\r\n                <span className=\"text-red-500\">⚠</span>\r\n              )}\r\n              {message.text}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Main Form */}\r\n        <div className=\"bg-white rounded-xl shadow-sm border border-gray-100\">\r\n          <div className=\"p-6 border-b border-gray-100\">\r\n            <h2 className=\"text-lg font-semibold text-gray-900 flex items-center gap-3\">\r\n              <div className=\"h-10 w-10 bg-blue-100 rounded-full flex items-center justify-center\">\r\n                <Pill className=\"h-5 w-5 text-blue-600\" />\r\n              </div>\r\n              Medicine Information\r\n            </h2>\r\n          </div>\r\n\r\n          <form onSubmit={handleSubmit} className=\"p-6\">\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n              {/* Medicine Name */}\r\n              <InputField\r\n                label=\"Medicine Name\"\r\n                value={formData.name}\r\n                onChange={(value: string) => handleInputChange('name', value)}\r\n                placeholder=\"Enter medicine name\"\r\n                required\r\n                error={errors.name}\r\n              />\r\n\r\n              {/* Batch Number */}\r\n              <InputField\r\n                label=\"Batch Number\"\r\n                value={formData.batchNumber}\r\n                onChange={(value: string) => handleInputChange('batchNumber', value)}\r\n                placeholder=\"Enter batch number\"\r\n                error={errors.batchNumber}\r\n              />\r\n\r\n              {/* Dosage */}\r\n              <InputField\r\n                label=\"Dosage\"\r\n                value={formData.dosage}\r\n                onChange={(value: string) => handleInputChange('dosage', value)}\r\n                placeholder=\"e.g., 500mg twice daily\"\r\n                required\r\n                error={errors.dosage}\r\n              />\r\n\r\n              {/* Unit */}\r\n              <SelectField\r\n                label=\"Unit\"\r\n                value={formData.unit}\r\n                onChange={(value: string) => handleInputChange('unit', value)}\r\n                placeholder=\"Select unit\"\r\n                required\r\n                error={errors.unit}\r\n                options={[\r\n                  { value: 'mg', label: 'Milligrams (mg)' },\r\n                  { value: 'ml', label: 'Milliliters (ml)' },\r\n                  { value: 'g', label: 'Grams (g)' },\r\n                  { value: 'tablets', label: 'Tablets' },\r\n                  { value: 'capsules', label: 'Capsules' },\r\n                  { value: 'units', label: 'Units' }\r\n                ]}\r\n              />\r\n\r\n              {/* Quantity */}\r\n              <InputField\r\n                label=\"Quantity\"\r\n                type=\"number\"\r\n                value={formData.quantity}\r\n                onChange={(value: number) => handleInputChange('quantity', value)}\r\n                placeholder=\"Enter quantity in stock\"\r\n                required\r\n                error={errors.quantity}\r\n                min=\"0\"\r\n              />\r\n\r\n              {/* Expiry Date */}\r\n              <div className=\"space-y-2\">\r\n                <label className=\"block text-sm font-medium text-gray-800\">\r\n                  Expiry Date <span className=\"text-red-500\">*</span>\r\n                </label>\r\n                <div className=\"relative\">\r\n                  <input\r\n                    type=\"date\"\r\n                    value={formData.expiryDate}\r\n                    onChange={(e) => handleInputChange('expiryDate', e.target.value)}\r\n                    className={`w-full px-3 py-2 bg-white border rounded-lg transition-all duration-200 text-gray-900 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent hover:border-gray-400 ${\r\n                      errors.expiryDate ? 'border-red-300 bg-red-50' : 'border-gray-300'\r\n                    }`}\r\n                  />\r\n                  <Calendar className=\"absolute right-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n                </div>\r\n                {errors.expiryDate && (\r\n                  <div className=\"flex items-center gap-2 text-sm text-red-600\">\r\n                    <span className=\"text-red-500\">⚠</span>\r\n                    {errors.expiryDate}\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              {/* Manufacturer */}\r\n              <InputField\r\n                label=\"Manufacturer\"\r\n                value={formData.manufacturer}\r\n                onChange={(value: string) => handleInputChange('manufacturer', value)}\r\n                placeholder=\"Enter manufacturer name\"\r\n                error={errors.manufacturer}\r\n              />\r\n\r\n              {/* Purpose */}\r\n              <TextAreaField\r\n                label=\"Purpose\"\r\n                value={formData.purpose}\r\n                onChange={(value: string) => handleInputChange('purpose', value)}\r\n                placeholder=\"Enter purpose or indication for use\"\r\n                className=\"md:col-span-2\"\r\n                rows={2}\r\n              />\r\n\r\n              {/* Description */}\r\n              <TextAreaField\r\n                label=\"Description\"\r\n                value={formData.description}\r\n                onChange={(value: string) => handleInputChange('description', value)}\r\n                placeholder=\"Enter additional details about the medicine\"\r\n                className=\"md:col-span-2\"\r\n                rows={3}\r\n              />\r\n            </div>\r\n\r\n            {/* Action Buttons */}\r\n            <div className=\"flex justify-start gap-4 mt-8 pt-6 border-t border-gray-100\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={handleCancel}\r\n                className=\"px-6 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                type=\"submit\"\r\n                disabled={isLoading}\r\n                className=\"flex items-center gap-2 px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\r\n              >\r\n                <Save className=\"h-4 w-4\" />\r\n                {isLoading ? 'Creating...' : 'Create Medicine'}\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n","/**\r\n * View Cattle Page - Display detailed view of a specific cattle record\r\n * Updated to use real API and master data for field display\r\n */\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport {ArrowLeft,\r\n  Calendar,\r\n  FileText,\r\n  Edit,\r\n  Trash2,\r\n  User,\r\n  Home,\r\n  Ruler,\r\n  Baby,\r\n  Globe,\r\n  Settings,\r\n  Activity,\r\n  Scan,\n  Heart,\n  Utensils} from 'lucide-react';\r\nimport {\r\n  cattleApi,\r\n  masterDataApi,\r\n  calculateAgeFromDob,\r\n  type Cattle,\r\n  type Breed,\r\n  type Species,\r\n  type Gender,\r\n  type Color,\r\n  type Location\r\n} from '../../services/gaushala/api';\r\n\r\nexport default function ViewCattle() {\r\n  const navigate = useNavigate();\r\n  const { id } = useParams<{ id: string }>();\r\n  const [record, setRecord] = useState<Cattle | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  // Master data for lookups\r\n  const [breeds, setBreeds] = useState<Breed[]>([]);\r\n  const [species, setSpecies] = useState<Species[]>([]);\r\n  const [genders, setGenders] = useState<Gender[]>([]);\r\n  const [colors, setColors] = useState<Color[]>([]);\r\n  const [locations, setLocations] = useState<Location[]>([]);\r\n\r\n  /**\r\n   * Helper functions to get master data names by ID\r\n   */\r\n  const getBreedName = (breedId: number): string => {\r\n    const breed = breeds.find(b => b.id === breedId);\r\n    return breed?.name || `Breed #${breedId}`;\r\n  };\r\n\r\n  const getSpeciesName = (speciesId: number): string => {\r\n    const sp = species.find(s => s.id === speciesId);\r\n    return sp?.name || `Species #${speciesId}`;\r\n  };\r\n\r\n  const getGenderName = (genderId: number): string => {\r\n    const gender = genders.find(g => g.id === genderId);\r\n    return gender?.name || `Gender #${genderId}`;\r\n  };\r\n\r\n  const getColorName = (colorId: number): string => {\r\n    const color = colors.find(c => c.id === colorId);\r\n    return color?.name || `Color #${colorId}`;\r\n  };\r\n\r\n  const getGaushalaName = (gaushalaId: number): string => {\r\n    const location = locations.find(l => l.id === gaushalaId);\r\n    return location?.name || `Gaushala #${gaushalaId}`;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      if (!id) return;\r\n\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      try {\r\n        // Load master data and cattle record in parallel\r\n        const [breedsRes, speciesRes, gendersRes, colorsRes, locationsRes, cattleRes] = await Promise.all([\r\n          masterDataApi.getAllBreeds(),\r\n          masterDataApi.getAllSpecies(),\r\n          masterDataApi.getAllGenders(),\r\n          masterDataApi.getAllColors(),\r\n          masterDataApi.getAllLocations(),\r\n          cattleApi.getCattleById(parseInt(id))\r\n        ]);\r\n\r\n        if (breedsRes.success && breedsRes.data) setBreeds(breedsRes.data);\r\n        if (speciesRes.success && speciesRes.data) setSpecies(speciesRes.data);\r\n        if (gendersRes.success && gendersRes.data) setGenders(gendersRes.data);\r\n        if (colorsRes.success && colorsRes.data) setColors(colorsRes.data);\r\n        if (locationsRes.success && locationsRes.data) setLocations(locationsRes.data);\r\n\r\n        if (cattleRes.success && cattleRes.data) {\r\n          setRecord(cattleRes.data);\r\n        } else {\r\n          setError(cattleRes.error || 'Cattle record not found');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching cattle record:', error);\r\n        setError('Failed to load cattle details');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    loadData();\r\n  }, [id]);\r\n\r\n  const handleEdit = () => {\r\n    navigate(`/gaushala/cattle/edit/${id}`);\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    if (!id || !window.confirm('Are you sure you want to delete this cattle record?')) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const result = await cattleApi.deleteCattle(parseInt(id));\r\n\r\n      if (result.success) {\r\n        navigate('/gaushala/cattle');\r\n      } else {\r\n        alert(result.error || 'Failed to delete cattle record');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting cattle record:', error);\r\n      alert('Failed to delete cattle record');\r\n    }\r\n  };\r\n\r\n  const handleBack = () => {\r\n    navigate('/gaushala/cattle');\r\n  };\r\n\r\n  const formatDate = (dateString?: string) => {\r\n    if (!dateString) return '-';\r\n    try {\r\n      const date = new Date(dateString);\r\n      return date.toLocaleDateString('en-US', {\r\n        month: 'short',\r\n        day: 'numeric',\r\n        year: 'numeric'\r\n      });\r\n    } catch {\r\n      return dateString;\r\n    }\r\n  };\r\n\r\n  const formatDateTime = (dateString?: string) => {\r\n    if (!dateString) return '-';\r\n    try {\r\n      const date = new Date(dateString);\r\n      return date.toLocaleDateString('en-US', {\r\n        month: 'short',\r\n        day: 'numeric',\r\n        year: 'numeric',\r\n        hour: '2-digit',\r\n        minute: '2-digit'\r\n      });\r\n    } catch {\r\n      return dateString;\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-64\">\r\n        <div className=\"text-gray-500\">Loading cattle details...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error || !record) {\r\n    return (\r\n      <div className=\"space-y-6\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <div>\r\n            <h1 className=\"text-2xl font-bold text-gray-900\">Cattle Not Found</h1>\r\n            <p className=\"text-gray-600 mt-1\">{error || 'The requested cattle record could not be found.'}</p>\r\n          </div>\r\n          <button\r\n            onClick={handleBack}\r\n            className=\"flex items-center gap-2 px-4 py-2 text-gray-600 hover:text-gray-800 hover:bg-gray-100 rounded-lg transition-colors\"\r\n          >\r\n            <ArrowLeft className=\"h-4 w-4\" />\r\n            Back to Cattle List\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const DetailField = ({ label, value, className = '' }: { label: string; value: string | number; className?: string }) => (\r\n    <div className={`space-y-1 ${className}`}>\r\n      <label className=\"block text-sm font-medium text-gray-600\">{label}</label>\r\n      <div className=\"text-gray-900 font-medium\">{value || '-'}</div>\r\n    </div>\r\n  );\r\n\r\n  const isFemale = genders.find(g => g.name.toLowerCase() === 'female' && g.id === record.genderId);\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-2xl font-bold text-gray-900\">Cattle Details</h1>\r\n          <p className=\"text-gray-600 mt-1\">{record.name || 'No Name'} - {record.uniqueAnimalId}</p>\r\n        </div>\r\n        <div className=\"flex items-center gap-3\">\r\n          <button\r\n            onClick={handleEdit}\r\n            className=\"flex items-center gap-2 px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors\"\r\n          >\r\n            <Edit className=\"h-4 w-4\" />\r\n            Edit\r\n          </button>\r\n          <button\r\n            onClick={handleDelete}\r\n            className=\"flex items-center gap-2 px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors\"\r\n          >\r\n            <Trash2 className=\"h-4 w-4\" />\r\n            Delete\r\n          </button>\r\n          <button\r\n            onClick={handleBack}\r\n            className=\"flex items-center gap-2 px-4 py-2 text-gray-600 hover:text-gray-800 hover:bg-gray-100 rounded-lg transition-colors\"\r\n          >\r\n            <ArrowLeft className=\"h-4 w-4\" />\r\n            Back\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Main Content */}\r\n      <div className=\"bg-white rounded-xl shadow-sm border border-gray-100\">\r\n        <div className=\"p-6 border-b border-gray-100\">\r\n          <h2 className=\"text-lg font-semibold text-gray-900 flex items-center gap-3\">\r\n            <div className=\"h-10 w-10 bg-blue-100 rounded-full flex items-center justify-center\">\r\n              <FileText className=\"h-5 w-5 text-blue-600\" />\r\n            </div>\r\n            Cattle Information\r\n          </h2>\r\n        </div>\r\n\r\n        <div className=\"p-6\">\r\n          {/* Basic Identification Section */}\r\n          <div className=\"mb-8\">\r\n            <h3 className=\"text-md font-semibold text-gray-800 mb-4 pb-2 border-b border-gray-200 flex items-center gap-2\">\r\n              <User className=\"h-5 w-5 text-blue-600\" />\r\n              🐄 Basic Identification\r\n            </h3>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n              <DetailField label=\"Unique Animal ID\" value={record.uniqueAnimalId} />\r\n              <DetailField label=\"Name\" value={record.name || '-'} />\r\n              <DetailField label=\"Breed\" value={getBreedName(record.breedId)} />\r\n              <DetailField label=\"Species\" value={getSpeciesName(record.speciesId)} />\r\n              <DetailField label=\"Gender\" value={getGenderName(record.genderId)} />\r\n              <DetailField label=\"Color\" value={getColorName(record.colorId)} />\r\n              <DetailField label=\"Date of Birth\" value={formatDate(record.dob)} />\r\n              <DetailField label=\"Age\" value={`${calculateAgeFromDob(record.dob)} years`} />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Gaushala Assignment Section */}\r\n          <div className=\"mb-8\">\r\n            <h3 className=\"text-md font-semibold text-gray-800 mb-4 pb-2 border-b border-gray-200 flex items-center gap-2\">\r\n              <Home className=\"h-5 w-5 text-green-600\" />\r\n              🏠 Gaushala Assignment\r\n            </h3>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n              <DetailField label=\"Assigned Gaushala\" value={getGaushalaName(record.gaushalaId)} />\r\n              <div className=\"space-y-1\">\r\n                <label className=\"block text-sm font-medium text-gray-600\">Status</label>\r\n                <div className=\"flex items-center gap-2\">\r\n                  <div className={`w-2 h-2 ${record.isActive ? 'bg-green-500' : 'bg-gray-500'} rounded-full`}></div>\r\n                  <span className=\"text-gray-900 font-medium\">{record.isActive ? 'Active' : 'Inactive'}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Physical Characteristics Section */}\r\n          <div className=\"mb-8\">\r\n            <h3 className=\"text-md font-semibold text-gray-800 mb-4 pb-2 border-b border-gray-200 flex items-center gap-2\">\r\n              <Ruler className=\"h-5 w-5 text-purple-600\" />\r\n              📏 Physical Characteristics\r\n            </h3>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n              <DetailField label=\"Weight\" value={record.weight ? `${record.weight} kg` : '-'} />\r\n              <DetailField label=\"Height\" value={record.height ? `${record.height} cm` : '-'} />\n              <DetailField label=\"Horn Status\" value={record.hornStatus || '-'} />\r\n              <div className=\"space-y-1\">\r\n                <label className=\"block text-sm font-medium text-gray-600\">RFID Tag Number</label>\r\n                <div className=\"flex items-center gap-2 text-gray-900 font-medium font-mono bg-gray-50 p-2 rounded\">\r\n                  <Scan className=\"h-4 w-4 text-gray-400\" />\r\n                  {record.rfidTagNo || '-'}\r\n                </div>\r\n              </div>\r\n              <DetailField label=\"Ear Tag Number\" value={record.earTagNo || '-'} />\n              <DetailField label=\"Microchip Number\" value={record.microchipNo || '-'} />\n              <DetailField label=\"Shed Number\" value={record.shedNumber || '-'} />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Health & Medical Records Section */}\r\n          <div className=\"mb-8\">\r\n            <h3 className=\"text-md font-semibold text-gray-800 mb-4 pb-2 border-b border-gray-200 flex items-center gap-2\">\r\n              <Activity className=\"h-5 w-5 text-red-600\" />\r\n              🩺 Health & Medical Records\r\n            </h3>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              <DetailField label=\"Vaccination Status\" value={record.vaccinationStatus || '-'} className=\"md:col-span-2 lg:col-span-3\" />\n              <DetailField label=\"Disability\" value={record.disability || '-'} className=\"md:col-span-2 lg:col-span-3\" />\n              <DetailField label=\"Medical History\" value={record.medicalHistory || '-'} className=\"md:col-span-2 lg:col-span-3\" />\n              <DetailField label=\"Deworming Schedule\" value={record.dewormingSchedule || '-'} />\n              <DetailField label=\"Last Health Checkup\" value={formatDate(record.lastHealthCheckupDate)} />\n              <DetailField label=\"Health Status\" value={record.healthStatus || '-'} />\n              <DetailField label=\"Veterinarian Name\" value={record.vetName || '-'} />\n              <DetailField label=\"Veterinarian Contact\" value={record.vetContact || '-'} />\n            </div>\r\n          </div>\r\n\r\n          {/* Reproductive Details Section - NEW SECTION */}\n          {isFemale && (\n            <div className=\"mb-8\">\n              <h3 className=\"text-md font-semibold text-gray-800 mb-4 pb-2 border-b border-gray-200 flex items-center gap-2\">\n                <Heart className=\"h-5 w-5 text-pink-600\" />\n                🤰 Reproductive Details\n              </h3>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                <DetailField label=\"Pregnancy Status\" value={record.pregnancyStatus || '-'} />\n                <DetailField label=\"Milking Status\" value={record.milkingStatus || '-'} />\n                <DetailField label=\"Milk Yield Per Day\" value={record.milkYieldPerDay ? `${record.milkYieldPerDay} L` : '-'} />\n                <DetailField label=\"Lactation Number\" value={record.lactationNumber || '-'} />\n                <DetailField label=\"Last Calving Date\" value={formatDate(record.lastCalvingDate)} />\n                <DetailField label=\"Number of Calves\" value={record.calvesCount || '-'} />\n              </div>\n            </div>\n          )}\n\n\n          {/* Origin & Ownership Section - NEW SECTION */}\n          <div className=\"mb-8\">\n            <h3 className=\"text-md font-semibold text-gray-800 mb-4 pb-2 border-b border-gray-200 flex items-center gap-2\">\n              <Globe className=\"h-5 w-5 text-indigo-600\" />\n              🌍 Origin & Ownership\n            </h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              <DetailField label=\"Source of Acquisition\" value={record.sourceId ? `Source #${record.sourceId}` : '-'} />\n              <DetailField label=\"Date of Acquisition\" value={formatDate(record.dateOfAcquisition)} />\n              <DetailField label=\"Previous Owner\" value={record.previousOwner || '-'} />\n              <DetailField label=\"Ownership Status\" value={record.ownershipId ? `Ownership #${record.ownershipId}` : '-'} />\n              <DetailField label=\"Date of Entry\" value={formatDate(record.dateOfEntry)} />\n            </div>\n          </div>\n\n\n\n\n          {/* Feeding Details Section - NEW SECTION */}\n          <div className=\"mb-8\">\n            <h3 className=\"text-md font-semibold text-gray-800 mb-4 pb-2 border-b border-gray-200 flex items-center gap-2\">\n              <Utensils className=\"h-5 w-5 text-orange-600\" />\n              🌾 Feeding Details\n            </h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              <DetailField label=\"Feeding Schedule\" value={record.feedingSchedule || '-'} className=\"md:col-span-2 lg:col-span-3\" />\n              <DetailField label=\"Feed Type\" value={record.feedTypeId ? `Feed Type #${record.feedTypeId}` : '-'} />\n            </div>\n          </div>\n\n\n\n\n\n          {/* Dung Collection Section */}\r\n          <div className=\"mb-8\">\r\n            <h3 className=\"text-md font-semibold text-gray-800 mb-4 pb-2 border-b border-gray-200\">\r\n              🌾 Dung Collection Statistics\r\n            </h3>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n              <DetailField label=\"Total Dung Collected\" value={record.totalDungCollected ? `${record.totalDungCollected} kg` : '-'} />\r\n              <DetailField label=\"Last Dung Collection\" value={record.lastDungCollection ? `${record.lastDungCollection} kg` : '-'} />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Record Information Section */}\r\n          <div className=\"mb-8\">\r\n            <h3 className=\"text-md font-semibold text-gray-800 mb-4 pb-2 border-b border-gray-200\">\r\n              ℹ️ Record Information\r\n            </h3>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n              {record.id && <DetailField label=\"Record ID\" value={record.id} />}\r\n              {record.createdAt && (\r\n                <DetailField label=\"Record Created\" value={formatDateTime(record.createdAt)} />\r\n              )}\r\n              {record.updatedAt && (\r\n                <DetailField label=\"Last Updated\" value={formatDateTime(record.updatedAt)} />\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Photo Section */}\r\n          {record.photoUrl && (\r\n            <div className=\"mb-8\">\r\n              <h3 className=\"text-md font-semibold text-gray-800 mb-4 pb-2 border-b border-gray-200\">\r\n                📷 Cattle Photo\r\n              </h3>\r\n              <div className=\"bg-gray-50 border border-gray-200 rounded-lg p-4 max-w-md\">\r\n                <img src={record.photoUrl} alt=\"Cattle Photo\" className=\"max-h-64 max-w-full object-cover rounded\" />\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Action Buttons */}\r\n      <div className=\"flex justify-start gap-4\">\r\n        <button\r\n          onClick={handleEdit}\r\n          className=\"flex items-center gap-2 px-6 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors\"\r\n        >\r\n          <Edit className=\"h-4 w-4\" />\r\n          Edit Record\r\n        </button>\r\n        <button\r\n          onClick={handleBack}\r\n          className=\"flex items-center gap-2 px-6 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors\"\r\n        >\r\n          <ArrowLeft className=\"h-4 w-4\" />\r\n          Back to List\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","/**\r\n * Edit Cattle Page - Edit existing cattle entries\r\n * Updated to use master data IDs and proper field mappings for backend integration\r\n */\r\n\r\nimport { useState, useCallback, useEffect } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport {\r\n  Save, ArrowLeft, Scan, Upload, Camera, FileText,\r\n  User, Home, Activity, Baby, Globe, Settings, Ruler,\r\n  AlertCircle, CheckCircle, Clock, Plus, X\r\n} from 'lucide-react';\r\nimport {\r\n  cattleApi,\r\n  masterDataApi,\r\n  calculateDobFromAge,\r\n  calculateAgeFromDob,\r\n  type Breed,\r\n  type Species,\r\n  type Gender,\r\n  type Color,\r\n  type Location,\r\n  type Cattle\r\n} from '../../services/gaushala/api';\r\n\r\ninterface LanguageContextType {\r\n  language: 'hi' | 'en';\r\n  t: (key: string) => string;\r\n}\r\n\r\ninterface EditCattleProps {\r\n  languageContext: LanguageContextType;\r\n}\r\n\r\nexport default function EditCattle({ languageContext }: EditCattleProps) {\r\n  const navigate = useNavigate();\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  // Master data state\r\n  const [breeds, setBreeds] = useState<Breed[]>([]);\r\n  const [species, setSpecies] = useState<Species[]>([]);\r\n  const [genders, setGenders] = useState<Gender[]>([]);\r\n  const [colors, setColors] = useState<Color[]>([]);\r\n  const [locations, setLocations] = useState<Location[]>([]);\r\n  const [masterDataLoading, setMasterDataLoading] = useState(true);\r\n\r\n  const [formData, setFormData] = useState({\r\n    // Basic Identification - Updated to use IDs\r\n    uniqueAnimalId: '',\r\n    name: '',\r\n    breedId: 0,\r\n    speciesId: 0,\r\n    genderId: 0,\r\n    colorId: 0,\r\n    ageYears: 0,  // User sees age, will be converted to dob on submit\r\n    dateOfEntry: new Date().toISOString().split('T')[0],\r\n\r\n    // Gaushala Assignment - Updated to use ID\r\n    gaushalaId: 0,\r\n\r\n    // Health & Medical Records\r\n    vaccinationStatus: '',\r\n    disability: '',\r\n    veterinarianName: '',\r\n    dewormingSchedule: '',\r\n    lastHealthCheckup: '',\r\n    veterinarianContact: '',\r\n    medicalHistory: '',\r\n\r\n    // Physical Characteristics - Updated field name\r\n    weight: '',\r\n    hornStatus: '',\r\n    rfidTagNo: '',  // Changed from rfidTagNumber to match backend\r\n    height: '',\r\n    earTagNumber: '',\r\n    microchipNumber: '',\r\n\r\n    // Reproductive Details (Female only)\r\n    milkingStatus: '',\r\n    milkYieldPerDay: '',\r\n    numberOfCalves: '',\r\n    lactationNumber: '',\r\n    lastCalvingDate: '',\r\n    pregnancyStatus: '',\r\n\r\n    // Origin & Ownership\r\n    sourceOfAcquisition: '',\r\n    previousOwner: '',\r\n    dateOfAcquisition: '',\r\n    ownershipStatus: '',\r\n\r\n    // Shelter & Feeding\r\n    shedNumber: '',\r\n    typeOfFeed: '',\r\n    feedingSchedule: '',\r\n\r\n    // Supporting Documents\r\n    photoFile: null as File | null,\r\n    healthCertificate: null as File | null,\r\n    vaccinationRecord: null as File | null,\r\n    purchaseDocument: null as File | null\r\n  });\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [isScanning, setIsScanning] = useState(false);\r\n  const [message, setMessage] = useState<{ type: 'success' | 'error' | 'warning'; text: string } | null>(null);\r\n  const [errors, setErrors] = useState<Record<string, string>>({});\r\n  const [activeSection, setActiveSection] = useState(0);\r\n\r\n  // Load master data and cattle record on component mount\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      if (!id) {\r\n        setMessage({ type: 'error', text: 'Invalid cattle ID' });\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      setLoading(true);\r\n      try {\r\n        // Load master data and cattle record in parallel\r\n        const [breedsRes, speciesRes, gendersRes, colorsRes, locationsRes, cattleRes] = await Promise.all([\r\n          masterDataApi.getAllBreeds(),\r\n          masterDataApi.getAllSpecies(),\r\n          masterDataApi.getAllGenders(),\r\n          masterDataApi.getAllColors(),\r\n          masterDataApi.getAllLocations(),\r\n          cattleApi.getCattleById(parseInt(id))\r\n        ]);\r\n\r\n        if (breedsRes.success && breedsRes.data) setBreeds(breedsRes.data);\r\n        if (speciesRes.success && speciesRes.data) setSpecies(speciesRes.data);\r\n        if (gendersRes.success && gendersRes.data) setGenders(gendersRes.data);\r\n        if (colorsRes.success && colorsRes.data) setColors(colorsRes.data);\r\n        if (locationsRes.success && locationsRes.data) setLocations(locationsRes.data);\r\n\r\n        if (cattleRes.success && cattleRes.data) {\r\n          const cattle = cattleRes.data;\r\n          // Transform backend data to form data (dob → ageYears)\r\n          setFormData({\r\n            uniqueAnimalId: cattle.uniqueAnimalId,\r\n            name: cattle.name || '',\r\n            breedId: cattle.breedId,\r\n            speciesId: cattle.speciesId,\r\n            genderId: cattle.genderId,\r\n            colorId: cattle.colorId,\r\n            ageYears: calculateAgeFromDob(cattle.dob),\r\n            dateOfEntry: new Date().toISOString().split('T')[0],\r\n            gaushalaId: cattle.gaushalaId,\r\n            vaccinationStatus: '',\r\n            disability: '',\r\n            veterinarianName: cattle.vetName || '',\r\n            dewormingSchedule: '',\r\n            lastHealthCheckup: '',\r\n            veterinarianContact: cattle.vetContact || '',\r\n            medicalHistory: cattle.healthStatus || '',\r\n            weight: cattle.weight?.toString() || '',\r\n            hornStatus: '',\r\n            rfidTagNo: cattle.rfidTagNo || '',\r\n            height: cattle.height?.toString() || '',\r\n            earTagNumber: '',\r\n            microchipNumber: '',\r\n            milkingStatus: '',\r\n            milkYieldPerDay: '',\r\n            numberOfCalves: '',\r\n            lactationNumber: '',\r\n            lastCalvingDate: '',\r\n            pregnancyStatus: '',\r\n            sourceOfAcquisition: '',\r\n            previousOwner: '',\r\n            dateOfAcquisition: '',\r\n            ownershipStatus: '',\r\n            shedNumber: cattle.shedNumber || '',\r\n            typeOfFeed: '',\r\n            feedingSchedule: '',\r\n            photoFile: null,\r\n            healthCertificate: null,\r\n            vaccinationRecord: null,\r\n            purchaseDocument: null\r\n          });\r\n        } else {\r\n          setMessage({\r\n            type: 'error',\r\n            text: cattleRes.error || 'Failed to load cattle record.'\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to load data:', error);\r\n        setMessage({\r\n          type: 'error',\r\n          text: 'Failed to load cattle record. Please try again.'\r\n        });\r\n      } finally {\r\n        setLoading(false);\r\n        setMasterDataLoading(false);\r\n      }\r\n    };\r\n\r\n    loadData();\r\n  }, [id]);\r\n\r\n  const handleInputChange = useCallback((field: string, value: string | File | null | number) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [field]: value\r\n    }));\r\n\r\n    // Clear error for this field\r\n    if (errors[field]) {\r\n      setErrors(prev => ({\r\n        ...prev,\r\n        [field]: ''\r\n      }));\r\n    }\r\n    setMessage(null);\r\n  }, [errors]);\r\n\r\n  const handleScanRfid = async () => {\r\n    setIsScanning(true);\r\n    try {\r\n      const response = await cattleApi.scanRfid();\r\n      if (response.success && response.data) {\r\n        handleInputChange('rfidTagNo', response.data.rfidTag);\r\n\r\n        if (response.data.cattleInfo) {\r\n          setMessage({\r\n            type: 'warning',\r\n            text: 'RFID tag already exists for another cattle'\r\n          });\r\n        } else {\r\n          setMessage({\r\n            type: 'success',\r\n            text: 'RFID tag scanned successfully'\r\n          });\r\n        }\r\n      }\r\n    } catch (error) {\r\n      setMessage({\r\n        type: 'error',\r\n        text: 'Failed to scan RFID tag'\r\n      });\r\n    } finally {\r\n      setIsScanning(false);\r\n    }\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const newErrors: Record<string, string> = {};\r\n\r\n    // Required fields validation - Updated for ID fields\r\n    if (!formData.uniqueAnimalId.trim()) newErrors.uniqueAnimalId = 'Unique Animal ID is required';\r\n    if (formData.breedId === 0) newErrors.breedId = 'Breed is required';\r\n    if (formData.speciesId === 0) newErrors.speciesId = 'Species is required';\r\n    if (formData.genderId === 0) newErrors.genderId = 'Gender is required';\r\n    if (!formData.dateOfEntry) newErrors.dateOfEntry = 'Date of Entry is required';\r\n    if (formData.gaushalaId === 0) newErrors.gaushalaId = 'Gaushala selection is required';\r\n    if (!formData.rfidTagNo.trim()) newErrors.rfidTagNo = 'RFID Tag Number is required';\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    if (!validateForm()) {\r\n      setMessage({\r\n        type: 'error',\r\n        text: 'Please fill in all required fields'\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (!id) {\r\n      setMessage({\r\n        type: 'error',\r\n        text: 'Invalid cattle ID'\r\n      });\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    setMessage(null);\r\n\r\n    try {\r\n      // Transform formData to match Cattle interface for backend\r\n      const cattleData: Omit<Cattle, 'id' | 'createdAt' | 'updatedAt'> = {\r\n        uniqueAnimalId: formData.uniqueAnimalId,\r\n        name: formData.name,\r\n        breedId: formData.breedId,\r\n        speciesId: formData.speciesId,\r\n        genderId: formData.genderId,\r\n        colorId: formData.colorId,\r\n        dob: formData.ageYears > 0 ? calculateDobFromAge(formData.ageYears) : new Date().toISOString(),\r\n        weight: formData.weight ? parseFloat(formData.weight) : undefined,\r\n        height: formData.height ? parseFloat(formData.height) : undefined,\r\n        rfidTagNo: formData.rfidTagNo,\r\n        gaushalaId: formData.gaushalaId,\r\n        shedNumber: formData.shedNumber || undefined,\r\n        healthStatus: formData.medicalHistory || undefined,\r\n        vetName: formData.veterinarianName || undefined,\r\n        vetContact: formData.veterinarianContact || undefined,\r\n        isActive: true,\r\n        totalDungCollected: 0,\r\n        lastDungCollection: 0,\r\n      };\r\n\r\n      const response = await cattleApi.updateCattle(parseInt(id), cattleData);\r\n\r\n      if (response.success && response.data) {\r\n        // Upload documents if provided\r\n        const uploadPromises = [];\r\n\r\n        if (formData.photoFile) {\r\n          uploadPromises.push(cattleApi.uploadPhoto(response.data.id!, formData.photoFile));\r\n        }\r\n\r\n        if (formData.healthCertificate) {\r\n          // TODO: Implement uploadDocument API method\r\n          console.log('Health certificate upload pending implementation');\r\n        }\r\n\r\n        if (formData.vaccinationRecord) {\r\n          // TODO: Implement uploadDocument API method\r\n          console.log('Vaccination record upload pending implementation');\r\n        }\r\n\r\n        if (formData.purchaseDocument) {\r\n          // TODO: Implement uploadDocument API method\r\n          console.log('Purchase document upload pending implementation');\r\n        }\r\n\r\n        // Wait for all uploads\r\n        if (uploadPromises.length > 0) {\r\n          try {\r\n            await Promise.all(uploadPromises);\r\n          } catch (uploadError) {\r\n            console.warn('Some document uploads failed:', uploadError);\r\n          }\r\n        }\r\n\r\n        setMessage({\r\n          type: 'success',\r\n          text: 'Cattle updated successfully!'\r\n        });\r\n\r\n        // Navigate back after delay\r\n        setTimeout(() => {\r\n          navigate('/gaushala/cattle');\r\n        }, 2000);\r\n      } else {\r\n        throw new Error(response.error || 'Failed to update cattle');\r\n      }\r\n    } catch (error) {\r\n      setMessage({\r\n        type: 'error',\r\n        text: 'Failed to update cattle. Please try again.'\r\n      });\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    navigate('/gaushala/cattle');\r\n  };\r\n\r\n  const sections = [\r\n    {\r\n      id: 'basic',\r\n      title: 'Basic Identification',\r\n      icon: User,\r\n      color: 'from-blue-500 to-indigo-600',\r\n      progress: 0\r\n    },\r\n    {\r\n      id: 'gaushala',\r\n      title: 'Gaushala',\r\n      icon: Home,\r\n      color: 'from-green-500 to-teal-600',\r\n      progress: 0\r\n    },\r\n    {\r\n      id: 'physical',\r\n      title: 'Physical Characteristics',\r\n      icon: Ruler,\r\n      color: 'from-purple-500 to-violet-600',\r\n      progress: 0\r\n    },\r\n    {\r\n      id: 'health',\r\n      title: 'Health & Medical',\r\n      icon: Activity,\r\n      color: 'from-red-500 to-pink-600',\r\n      progress: 0\r\n    },\r\n    {\r\n      id: 'reproductive',\r\n      title: 'Reproductive Details',\r\n      icon: Baby,\r\n      color: 'from-pink-500 to-rose-600',\r\n      progress: 0\r\n    },\r\n    {\r\n      id: 'origin',\r\n      title: 'Origin & Ownership',\r\n      icon: Globe,\r\n      color: 'from-emerald-500 to-teal-600',\r\n      progress: 0\r\n    },\r\n    {\r\n      id: 'shelter',\r\n      title: 'Shelter & Feeding',\r\n      icon: Settings,\r\n      color: 'from-amber-500 to-yellow-600',\r\n      progress: 0\r\n    }\r\n  ];\r\n\r\n  const InputField = ({\r\n    label,\r\n    value,\r\n    onChange,\r\n    type = 'text',\r\n    placeholder,\r\n    required = false,\r\n    error,\r\n    className = '',\r\n    ...props\r\n  }: any) => (\r\n    <div className={`space-y-2 ${className}`}>\r\n      <label className=\"block text-sm font-medium text-gray-800\">\r\n        {label} {required && <span className=\"text-red-500\">*</span>}\r\n      </label>\r\n      <input\r\n        type={type}\r\n        value={value}\r\n        onChange={(e) => onChange(type === 'number' ? Number(e.target.value) : e.target.value)}\r\n        placeholder={placeholder}\r\n        className={`w-full px-3 py-2 bg-white border rounded-lg transition-all duration-200 text-gray-900 placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent hover:border-gray-400 ${\r\n          error ? 'border-red-300 bg-red-50' : 'border-gray-300'\r\n        }`}\r\n        {...props}\r\n      />\r\n      {error && (\r\n        <div className=\"flex items-center gap-2 text-sm text-red-600\">\r\n          <AlertCircle className=\"h-4 w-4\" />\r\n          {error}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  const SelectField = ({\r\n    label,\r\n    value,\r\n    onChange,\r\n    options,\r\n    placeholder,\r\n    required = false,\r\n    error,\r\n    className = ''\r\n  }: any) => (\r\n    <div className={`space-y-2 ${className}`}>\r\n      <label className=\"block text-sm font-medium text-gray-800\">\r\n        {label} {required && <span className=\"text-red-500\">*</span>}\r\n      </label>\r\n      <select\r\n        value={value}\r\n        onChange={(e) => onChange(e.target.value)}\r\n        className={`w-full px-3 py-2 bg-white border rounded-lg transition-all duration-200 text-gray-900 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent hover:border-gray-400 ${\r\n          error ? 'border-red-300 bg-red-50' : 'border-gray-300'\r\n        }`}\r\n      >\r\n        <option value=\"\">{placeholder}</option>\r\n        {options.map((option: any) => (\r\n          <option key={option.value} value={option.value}>\r\n            {option.label}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error && (\r\n        <div className=\"flex items-center gap-2 text-sm text-red-600\">\r\n          <AlertCircle className=\"h-4 w-4\" />\r\n          {error}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  const TextAreaField = ({\r\n    label,\r\n    value,\r\n    onChange,\r\n    placeholder,\r\n    rows = 3,\r\n    className = ''\r\n  }: any) => (\r\n    <div className={`space-y-2 ${className}`}>\r\n      <label className=\"block text-sm font-medium text-gray-800\">\r\n        {label}\r\n      </label>\r\n      <textarea\r\n        value={value}\r\n        onChange={(e) => onChange(e.target.value)}\r\n        placeholder={placeholder}\r\n        rows={rows}\r\n        className=\"w-full px-3 py-2 bg-white border border-gray-300 rounded-lg transition-all duration-200 text-gray-900 placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent hover:border-gray-400 resize-none\"\r\n      />\r\n    </div>\r\n  );\r\n\r\n  const FileUploadField = ({\r\n    label,\r\n    value,\r\n    onChange,\r\n    accept,\r\n    className = ''\r\n  }: any) => (\r\n    <div className={`space-y-2 ${className}`}>\r\n      <label className=\"block text-sm font-medium text-gray-800\">\r\n        {label}\r\n      </label>\r\n      <div className=\"relative\">\r\n        <input\r\n          type=\"file\"\r\n          accept={accept}\r\n          onChange={(e) => onChange(e.target.files?.[0] || null)}\r\n          className=\"hidden\"\r\n          id={label.replace(/\\s+/g, '-').toLowerCase()}\r\n        />\r\n        <label\r\n          htmlFor={label.replace(/\\s+/g, '-').toLowerCase()}\r\n          className=\"flex items-center justify-center w-full px-3 py-2 bg-white border-2 border-dashed border-gray-300 rounded-lg transition-all duration-200 cursor-pointer hover:border-blue-400 hover:bg-blue-50 group\"\r\n        >\r\n          <div className=\"flex items-center gap-3 text-gray-600 group-hover:text-blue-600\">\r\n            <Upload className=\"h-5 w-5\" />\r\n            <span className=\"text-sm font-medium\">\r\n              {value ? value.name : `Choose ${label.toLowerCase()}`}\r\n            </span>\r\n          </div>\r\n        </label>\r\n        {value && (\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => onChange(null)}\r\n            className=\"absolute top-2 right-2 p-1 bg-red-100 text-red-600 rounded-full hover:bg-red-200 transition-colors\"\r\n          >\r\n            <X className=\"h-4 w-4\" />\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-64\">\r\n        <div className=\"text-gray-500\">Loading cattle record...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-6 space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex justify-between items-center\">\r\n        <div className=\"flex items-center gap-4\">\r\n          <button\r\n            onClick={handleCancel}\r\n            className=\"flex items-center gap-2 px-4 py-2 text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded-lg transition-colors\"\r\n          >\r\n            <ArrowLeft className=\"h-5 w-5\" />\r\n            <span className=\"font-medium\">Back</span>\r\n          </button>\r\n\r\n          <div className=\"h-8 w-px bg-gray-300\"></div>\r\n\r\n          <div className=\"flex items-center gap-3\">\r\n            <div className=\"h-10 w-10 bg-blue-100 rounded-full flex items-center justify-center\">\r\n              <span className=\"text-2xl\">🐄</span>\r\n            </div>\r\n            <div>\r\n              <h2 className=\"text-2xl font-bold text-gray-900\">Edit Cattle Record</h2>\r\n              <p className=\"text-gray-600\">Update cattle information - ID #{id}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex items-center gap-3\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={handleCancel}\r\n            className=\"px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            type=\"submit\"\r\n            form=\"cattle-form\"\r\n            disabled={isLoading}\r\n            className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 transition-colors\"\r\n          >\r\n            <Save className=\"h-4 w-4\" />\r\n            {isLoading ? 'Updating...' : 'Update Cattle'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Progress Indicator */}\r\n      <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 p-4\">\r\n        <div className=\"flex items-center justify-between overflow-x-auto\">\r\n          {sections.map((section, index) => {\r\n            const Icon = section.icon;\r\n            return (\r\n              <div key={section.id} className=\"flex items-center flex-shrink-0\">\r\n                <div className=\"flex items-center justify-center w-8 h-8 rounded-lg bg-blue-100 text-blue-600\">\r\n                  <Icon className=\"h-4 w-4\" />\r\n                </div>\r\n                <div className=\"ml-2\">\r\n                  <p className=\"text-xs font-medium text-gray-700\">{section.title}</p>\r\n                </div>\r\n                {index < sections.length - 1 && (\r\n                  <div className=\"w-8 h-px bg-gray-300 mx-3\"></div>\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Message Alert */}\r\n      {message && (\r\n        <div className={`p-4 rounded-lg border-l-4 ${\r\n          message.type === 'success'\r\n            ? 'bg-green-50 border-green-400 text-green-800'\r\n            : message.type === 'warning'\r\n            ? 'bg-yellow-50 border-yellow-400 text-yellow-800'\r\n            : 'bg-red-50 border-red-400 text-red-800'\r\n        }`}>\r\n          <div className=\"flex items-center gap-3\">\r\n            {message.type === 'success' ? (\r\n              <CheckCircle className=\"h-5 w-5\" />\r\n            ) : message.type === 'warning' ? (\r\n              <Clock className=\"h-5 w-5\" />\r\n            ) : (\r\n              <AlertCircle className=\"h-5 w-5\" />\r\n            )}\r\n            <span className=\"font-medium\">{message.text}</span>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <form id=\"cattle-form\" onSubmit={handleSubmit} className=\"space-y-6\">\r\n        {/* Main Grid Layout */}\r\n        <div className=\"grid grid-cols-1 xl:grid-cols-4 gap-6\">\r\n\r\n          {/* Left Section - 3 columns */}\r\n          <div className=\"xl:col-span-3 space-y-6\">\r\n\r\n            {/* Basic Identification */}\r\n            <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 p-6\">\r\n              <h2 className=\"text-lg font-semibold text-gray-900 mb-6 flex items-center gap-3\">\r\n                <div className=\"h-10 w-10 bg-blue-100 rounded-full flex items-center justify-center\">\r\n                  <User className=\"h-5 w-5 text-blue-600\" />\r\n                </div>\r\n                🐄 Basic Identification\r\n              </h2>\r\n\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n                  <InputField\r\n                    label=\"Unique Animal ID\"\r\n                    value={formData.uniqueAnimalId}\r\n                    onChange={(value: string) => handleInputChange('uniqueAnimalId', value)}\r\n                    placeholder=\"Enter unique animal ID\"\r\n                    required\r\n                    error={errors.uniqueAnimalId}\r\n                  />\r\n\r\n                  <InputField\r\n                    label=\"Name (Optional)\"\r\n                    value={formData.name}\r\n                    onChange={(value: string) => handleInputChange('name', value)}\r\n                    placeholder=\"Enter cattle name\"\r\n                  />\r\n\r\n                  <SelectField\r\n                    label=\"Breed\"\r\n                    value={formData.breedId}\r\n                    onChange={(value: string) => handleInputChange('breedId', parseInt(value) || 0)}\r\n                    placeholder={masterDataLoading ? 'Loading breeds...' : 'Select Breed'}\r\n                    required\r\n                    error={errors.breedId}\r\n                    options={breeds.map(breed => ({\r\n                      value: breed.id.toString(),\r\n                      label: breed.name\r\n                    }))}\r\n                  />\r\n\r\n                  <SelectField\r\n                    label=\"Species\"\r\n                    value={formData.speciesId}\r\n                    onChange={(value: string) => handleInputChange('speciesId', parseInt(value) || 0)}\r\n                    placeholder={masterDataLoading ? 'Loading species...' : 'Select Species'}\r\n                    required\r\n                    error={errors.speciesId}\r\n                    options={species.map(s => ({\r\n                      value: s.id.toString(),\r\n                      label: s.name\r\n                    }))}\r\n                  />\r\n\r\n                  <SelectField\r\n                    label=\"Gender\"\r\n                    value={formData.genderId}\r\n                    onChange={(value: string) => handleInputChange('genderId', parseInt(value) || 0)}\r\n                    placeholder={masterDataLoading ? 'Loading genders...' : 'Select Gender'}\r\n                    required\r\n                    error={errors.genderId}\r\n                    options={genders.map(gender => ({\r\n                      value: gender.id.toString(),\r\n                      label: gender.name\r\n                    }))}\r\n                  />\r\n\r\n                  <SelectField\r\n                    label=\"Color\"\r\n                    value={formData.colorId}\r\n                    onChange={(value: string) => handleInputChange('colorId', parseInt(value) || 0)}\r\n                    placeholder={masterDataLoading ? 'Loading colors...' : 'Select Color'}\r\n                    error={errors.colorId}\r\n                    options={colors.map(color => ({\r\n                      value: color.id.toString(),\r\n                      label: color.name\r\n                    }))}\r\n                  />\r\n\r\n                  <InputField\r\n                    label=\"Age (Years)\"\r\n                    value={formData.ageYears}\r\n                    onChange={(value: number) => handleInputChange('ageYears', value)}\r\n                    type=\"number\"\r\n                    min=\"0\"\r\n                    placeholder=\"Enter age in years\"\r\n                  />\r\n\r\n                  <InputField\r\n                    label=\"Date of Entry\"\r\n                    value={formData.dateOfEntry}\r\n                    onChange={(value: string) => handleInputChange('dateOfEntry', value)}\r\n                    type=\"date\"\r\n                    required\r\n                    error={errors.dateOfEntry}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n            {/* Gaushala */}\r\n            <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 p-6\">\r\n              <h2 className=\"text-lg font-semibold text-gray-900 mb-6 flex items-center gap-3\">\r\n                <div className=\"h-10 w-10 bg-blue-100 rounded-full flex items-center justify-center\">\r\n                  <Home className=\"h-5 w-5 text-blue-600\" />\r\n                </div>\r\n                🏠 Gaushala\r\n              </h2>\r\n\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n                  <SelectField\r\n                    label=\"Select Gaushala\"\r\n                    value={formData.gaushalaId}\r\n                    onChange={(value: string) => handleInputChange('gaushalaId', parseInt(value) || 0)}\r\n                    placeholder={masterDataLoading ? 'Loading locations...' : 'Select Gaushala'}\r\n                    required\r\n                    error={errors.gaushalaId}\r\n                    options={locations.map(location => ({\r\n                      value: location.id.toString(),\r\n                      label: location.name\r\n                    }))}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n            {/* Physical Characteristics */}\r\n            <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 p-6\">\r\n              <h2 className=\"text-lg font-semibold text-gray-900 mb-6 flex items-center gap-3\">\r\n                <div className=\"h-10 w-10 bg-purple-100 rounded-full flex items-center justify-center\">\r\n                  <Ruler className=\"h-5 w-5 text-purple-600\" />\r\n                </div>\r\n                📏 Physical Characteristics\r\n              </h2>\r\n\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n                  <InputField\r\n                    label=\"Weight (kg)\"\r\n                    value={formData.weight}\r\n                    onChange={(value: string) => handleInputChange('weight', value)}\r\n                    type=\"number\"\r\n                    step=\"0.1\"\r\n                    placeholder=\"Weight in kilograms\"\r\n                  />\r\n\r\n                  <InputField\r\n                    label=\"Height (cm)\"\r\n                    value={formData.height}\r\n                    onChange={(value: string) => handleInputChange('height', value)}\r\n                    type=\"number\"\r\n                    placeholder=\"Height in centimeters\"\r\n                  />\r\n\r\n                  <SelectField\r\n                    label=\"Horn Status\"\r\n                    value={formData.hornStatus}\r\n                    onChange={(value: string) => handleInputChange('hornStatus', value)}\r\n                    placeholder=\"Select Status\"\r\n                    options={[\r\n                      { value: 'horned', label: 'Horned' },\r\n                      { value: 'dehorned', label: 'Dehorned' },\r\n                      { value: 'polled', label: 'Polled (Naturally hornless)' }\r\n                    ]}\r\n                  />\r\n\r\n                  <div className=\"lg:col-span-2\">\r\n                    <label className=\"block text-sm font-medium text-gray-800 mb-2\">\r\n                      RFID Tag Number <span className=\"text-red-500\">*</span>\r\n                    </label>\r\n                    <div className=\"flex gap-3\">\r\n                      <input\r\n                        type=\"text\"\r\n                        value={formData.rfidTagNo}\r\n                        onChange={(e) => handleInputChange('rfidTagNo', e.target.value)}\r\n                        placeholder=\"Scan or enter RFID tag\"\r\n                        className={`flex-1 px-4 py-3.5 bg-white border-2 rounded-xl transition-all duration-200 text-gray-900 placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500/20 focus:border-blue-500 hover:border-gray-300 ${\r\n                          errors.rfidTagNo ? 'border-red-300 bg-red-50' : 'border-gray-200'\r\n                        }`}\r\n                        required\r\n                      />\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={handleScanRfid}\r\n                        disabled={isScanning}\r\n                        className=\"flex items-center gap-2 px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 disabled:opacity-50 transition-colors\"\r\n                      >\r\n                        <Scan className=\"h-5 w-5\" />\r\n                        {isScanning ? 'Scanning...' : 'Scan'}\r\n                      </button>\r\n                    </div>\r\n                    {errors.rfidTagNo && (\r\n                      <div className=\"flex items-center gap-2 text-sm text-red-600 mt-2\">\r\n                        <AlertCircle className=\"h-4 w-4\" />\r\n                        {errors.rfidTagNo}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n\r\n                  <InputField\r\n                    label=\"Ear Tag Number\"\r\n                    value={formData.earTagNumber}\r\n                    onChange={(value: string) => handleInputChange('earTagNumber', value)}\r\n                    placeholder=\"Ear tag number\"\r\n                  />\r\n\r\n                  <InputField\r\n                    label=\"Microchip Number\"\r\n                    value={formData.microchipNumber}\r\n                    onChange={(value: string) => handleInputChange('microchipNumber', value)}\r\n                    placeholder=\"Microchip number\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n            {/* Health & Medical Records */}\r\n            <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 p-6\">\r\n              <h2 className=\"text-lg font-semibold text-gray-900 mb-6 flex items-center gap-3\">\r\n                <div className=\"h-10 w-10 bg-blue-100 rounded-full flex items-center justify-center\">\r\n                  <Activity className=\"h-5 w-5 text-blue-600\" />\r\n                </div>\r\n                🩺 Health & Medical Records\r\n              </h2>\r\n\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n                  <InputField\r\n                    label=\"Vaccination Status\"\r\n                    value={formData.vaccinationStatus}\r\n                    onChange={(value: string) => handleInputChange('vaccinationStatus', value)}\r\n                    placeholder=\"e.g., FMD, HS completed\"\r\n                  />\r\n\r\n                  <InputField\r\n                    label=\"Disability / Injury\"\r\n                    value={formData.disability}\r\n                    onChange={(value: string) => handleInputChange('disability', value)}\r\n                    placeholder=\"Any disabilities or injuries\"\r\n                  />\r\n\r\n                  <InputField\r\n                    label=\"Veterinarian Name\"\r\n                    value={formData.veterinarianName}\r\n                    onChange={(value: string) => handleInputChange('veterinarianName', value)}\r\n                    placeholder=\"Name of attending veterinarian\"\r\n                  />\r\n\r\n                  <InputField\r\n                    label=\"Veterinarian Contact\"\r\n                    value={formData.veterinarianContact}\r\n                    onChange={(value: string) => handleInputChange('veterinarianContact', value)}\r\n                    type=\"tel\"\r\n                    placeholder=\"Phone number\"\r\n                  />\r\n\r\n                  <InputField\r\n                    label=\"Last Health Check-up\"\r\n                    value={formData.lastHealthCheckup}\r\n                    onChange={(value: string) => handleInputChange('lastHealthCheckup', value)}\r\n                    type=\"date\"\r\n                  />\r\n\r\n                  <InputField\r\n                    label=\"Deworming Schedule\"\r\n                    value={formData.dewormingSchedule}\r\n                    onChange={(value: string) => handleInputChange('dewormingSchedule', value)}\r\n                    placeholder=\"e.g., Every 6 months\"\r\n                  />\r\n\r\n                  <TextAreaField\r\n                    label=\"Medical History\"\r\n                    value={formData.medicalHistory}\r\n                    onChange={(value: string) => handleInputChange('medicalHistory', value)}\r\n                    placeholder=\"Previous medical treatments, surgeries, etc.\"\r\n                    className=\"lg:col-span-3\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              {/* Additional Sections Grid */}\r\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n\r\n                {/* Reproductive Details (Female only) */}\r\n                {genders.find(g => g.name.toLowerCase() === 'female' && g.id === formData.genderId) && (\r\n                  <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 p-6\">\r\n                    <h2 className=\"text-lg font-semibold text-gray-900 mb-6 flex items-center gap-3\">\r\n                      <div className=\"h-10 w-10 bg-blue-100 rounded-full flex items-center justify-center\">\r\n                        <Baby className=\"h-5 w-5 text-blue-600\" />\r\n                      </div>\r\n                      🤱 Reproductive Details\r\n                    </h2>\r\n\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                      <SelectField\r\n                        label=\"Milking Status\"\r\n                        value={formData.milkingStatus}\r\n                        onChange={(value: string) => handleInputChange('milkingStatus', value)}\r\n                        placeholder=\"Select Status\"\r\n                        options={[\r\n                          { value: 'lactating', label: 'Lactating' },\r\n                          { value: 'dry', label: 'Dry' },\r\n                          { value: 'pregnant', label: 'Pregnant' },\r\n                          { value: 'not_breeding', label: 'Not for Breeding' }\r\n                        ]}\r\n                      />\r\n\r\n                      <InputField\r\n                        label=\"Milk Yield Per Day (Liters)\"\r\n                        value={formData.milkYieldPerDay}\r\n                        onChange={(value: string) => handleInputChange('milkYieldPerDay', value)}\r\n                        type=\"number\"\r\n                        step=\"0.1\"\r\n                        placeholder=\"Daily milk yield\"\r\n                      />\r\n\r\n                      <InputField\r\n                        label=\"Number of Calves\"\r\n                        value={formData.numberOfCalves}\r\n                        onChange={(value: string) => handleInputChange('numberOfCalves', value)}\r\n                        type=\"number\"\r\n                        placeholder=\"Total calves born\"\r\n                      />\r\n\r\n                      <InputField\r\n                        label=\"Lactation Number\"\r\n                        value={formData.lactationNumber}\r\n                        onChange={(value: string) => handleInputChange('lactationNumber', value)}\r\n                        type=\"number\"\r\n                        placeholder=\"Current lactation number\"\r\n                      />\r\n\r\n                      <InputField\r\n                        label=\"Last Calving Date\"\r\n                        value={formData.lastCalvingDate}\r\n                        onChange={(value: string) => handleInputChange('lastCalvingDate', value)}\r\n                        type=\"date\"\r\n                      />\r\n\r\n                      <SelectField\r\n                        label=\"Pregnancy Status\"\r\n                        value={formData.pregnancyStatus}\r\n                        onChange={(value: string) => handleInputChange('pregnancyStatus', value)}\r\n                        placeholder=\"Select Status\"\r\n                        options={[\r\n                          { value: 'pregnant', label: 'Pregnant' },\r\n                          { value: 'not_pregnant', label: 'Not Pregnant' },\r\n                          { value: 'unknown', label: 'Unknown' }\r\n                        ]}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                {/* Origin & Ownership */}\r\n                <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 p-6\">\r\n                  <h2 className=\"text-lg font-semibold text-gray-900 mb-6 flex items-center gap-3\">\r\n                    <div className=\"h-10 w-10 bg-blue-100 rounded-full flex items-center justify-center\">\r\n                      <Globe className=\"h-5 w-5 text-blue-600\" />\r\n                    </div>\r\n                    🌍 Origin & Ownership\r\n                  </h2>\r\n\r\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                    <SelectField\r\n                      label=\"Source of Acquisition\"\r\n                      value={formData.sourceOfAcquisition}\r\n                      onChange={(value: string) => handleInputChange('sourceOfAcquisition', value)}\r\n                      placeholder=\"Select Source\"\r\n                      options={[\r\n                        { value: 'purchase', label: 'Purchase' },\r\n                        { value: 'donation', label: 'Donation' },\r\n                        { value: 'rescue', label: 'Rescue' },\r\n                        { value: 'transfer', label: 'Transfer' },\r\n                        { value: 'born_here', label: 'Born Here' }\r\n                      ]}\r\n                    />\r\n\r\n                    <InputField\r\n                      label=\"Previous Owner\"\r\n                      value={formData.previousOwner}\r\n                      onChange={(value: string) => handleInputChange('previousOwner', value)}\r\n                      placeholder=\"Name of previous owner\"\r\n                    />\r\n\r\n                    <InputField\r\n                      label=\"Date of Acquisition\"\r\n                      value={formData.dateOfAcquisition}\r\n                      onChange={(value: string) => handleInputChange('dateOfAcquisition', value)}\r\n                      type=\"date\"\r\n                    />\r\n\r\n                    <SelectField\r\n                      label=\"Ownership Status\"\r\n                      value={formData.ownershipStatus}\r\n                      onChange={(value: string) => handleInputChange('ownershipStatus', value)}\r\n                      placeholder=\"Select Status\"\r\n                      options={[\r\n                        { value: 'owned', label: 'Owned by Gaushala' },\r\n                        { value: 'fostered', label: 'Fostered' },\r\n                        { value: 'temporary', label: 'Temporary Care' },\r\n                        { value: 'sponsored', label: 'Sponsored' }\r\n                      ]}\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Shelter & Feeding */}\r\n                <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 p-6\">\r\n                  <h2 className=\"text-lg font-semibold text-gray-900 mb-6 flex items-center gap-3\">\r\n                    <div className=\"h-10 w-10 bg-blue-100 rounded-full flex items-center justify-center\">\r\n                      <Settings className=\"h-5 w-5 text-blue-600\" />\r\n                    </div>\r\n                    🏠 Shelter & Feeding\r\n                  </h2>\r\n\r\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                    <InputField\r\n                      label=\"Shed Number\"\r\n                      value={formData.shedNumber}\r\n                      onChange={(value: string) => handleInputChange('shedNumber', value)}\r\n                      placeholder=\"Assigned shed number\"\r\n                    />\r\n\r\n                    <SelectField\r\n                      label=\"Type of Feed\"\r\n                      value={formData.typeOfFeed}\r\n                      onChange={(value: string) => handleInputChange('typeOfFeed', value)}\r\n                      placeholder=\"Select Feed Type\"\r\n                      options={[\r\n                        { value: 'grass', label: 'Grass' },\r\n                        { value: 'hay', label: 'Hay' },\r\n                        { value: 'silage', label: 'Silage' },\r\n                        { value: 'concentrate', label: 'Concentrate' },\r\n                        { value: 'mixed', label: 'Mixed Feed' }\r\n                      ]}\r\n                    />\r\n\r\n                    <div className=\"md:col-span-2\">\r\n                      <TextAreaField\r\n                        label=\"Feeding Schedule\"\r\n                        value={formData.feedingSchedule}\r\n                        onChange={(value: string) => handleInputChange('feedingSchedule', value)}\r\n                        placeholder=\"Feeding times and quantities\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n          {/* Right Sidebar */}\r\n          <div className=\"xl:col-span-1 space-y-6\">\r\n\r\n            {/* Supporting Documents */}\r\n            <div className=\"bg-white rounded-xl shadow-sm border border-gray-100 p-6 sticky top-4\">\r\n              <h2 className=\"text-lg font-semibold text-gray-900 mb-6 flex items-center gap-3\">\r\n                <div className=\"h-10 w-10 bg-blue-100 rounded-full flex items-center justify-center\">\r\n                  <FileText className=\"h-5 w-5 text-blue-600\" />\r\n                </div>\r\n                📎 Documents\r\n              </h2>\r\n\r\n                <div className=\"space-y-6\">\r\n                  <FileUploadField\r\n                    label=\"Photo\"\r\n                    value={formData.photoFile}\r\n                    onChange={(value: File | null) => handleInputChange('photoFile', value)}\r\n                    accept=\"image/*\"\r\n                  />\r\n\r\n                  <FileUploadField\r\n                    label=\"Health Certificate\"\r\n                    value={formData.healthCertificate}\r\n                    onChange={(value: File | null) => handleInputChange('healthCertificate', value)}\r\n                    accept=\".pdf\"\r\n                  />\r\n\r\n                  <FileUploadField\r\n                    label=\"Vaccination Record\"\r\n                    value={formData.vaccinationRecord}\r\n                    onChange={(value: File | null) => handleInputChange('vaccinationRecord', value)}\r\n                    accept=\".pdf\"\r\n                  />\r\n\r\n                  <FileUploadField\r\n                    label=\"Purchase/Donation Document\"\r\n                    value={formData.purchaseDocument}\r\n                    onChange={(value: File | null) => handleInputChange('purchaseDocument', value)}\r\n                    accept=\".pdf\"\r\n                  />\r\n                </div>\r\n\r\n                {/* Quick Stats */}\r\n                <div className=\"mt-8 pt-6 border-t border-gray-200\">\r\n                  <h3 className=\"text-sm font-medium text-gray-700 mb-4\">Form Progress</h3>\r\n                  <div className=\"space-y-3\">\r\n                    <div className=\"flex justify-between text-sm\">\r\n                      <span className=\"text-gray-600\">Required Fields</span>\r\n                      <span className=\"font-medium text-gray-900\">\r\n                        {Object.keys(errors).length === 0 ? '✓ Complete' : `${Object.keys(errors).length} missing`}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"flex justify-between text-sm\">\r\n                      <span className=\"text-gray-600\">Documents</span>\r\n                      <span className=\"font-medium text-gray-900\">\r\n                        {[formData.photoFile, formData.healthCertificate, formData.vaccinationRecord, formData.purchaseDocument].filter(Boolean).length}/4\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","/**\r\n * View Medicine Page - Display detailed view of a specific medicine record\r\n * Mapped to backend Medicine.java entity with exact field names\r\n */\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { ArrowLeft, Pill, Edit, Trash2, Calendar, Package, AlertCircle } from 'lucide-react';\r\nimport { medicineApi, type Medicine } from '../../services/gaushala/api';\r\n\r\nexport default function ViewMedicine() {\r\n  const navigate = useNavigate();\r\n  const { id } = useParams<{ id: string }>();\r\n  const [medicine, setMedicine] = useState<Medicine | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const fetchMedicine = async () => {\r\n      if (!id) return;\r\n\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      try {\r\n        const result = await medicineApi.getMedicineById(parseInt(id));\r\n\r\n        if (result.success && result.data) {\r\n          setMedicine(result.data);\r\n        } else {\r\n          setError(result.error || 'Medicine not found');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching medicine:', error);\r\n        setError('Failed to load medicine details');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchMedicine();\r\n  }, [id]);\r\n\r\n  const handleEdit = () => {\r\n    navigate(`/gaushala/health-history/edit/${id}`);\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    if (!id || !window.confirm('Are you sure you want to delete this medicine record?')) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const result = await medicineApi.deleteMedicine(parseInt(id));\r\n\r\n      if (result.success) {\r\n        navigate('/gaushala/health-history');\r\n      } else {\r\n        alert(result.error || 'Failed to delete medicine');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting medicine:', error);\r\n      alert('Failed to delete medicine');\r\n    }\r\n  };\r\n\r\n  const handleBack = () => {\r\n    navigate('/gaushala/health-history');\r\n  };\r\n\r\n  const formatDate = (dateString?: string) => {\r\n    if (!dateString) return '-';\r\n    try {\r\n      const date = new Date(dateString);\r\n      return date.toLocaleDateString('en-US', {\r\n        month: 'short',\r\n        day: 'numeric',\r\n        year: 'numeric',\r\n        hour: '2-digit',\r\n        minute: '2-digit'\r\n      });\r\n    } catch {\r\n      return dateString;\r\n    }\r\n  };\r\n\r\n  const formatExpiryDate = (dateString?: string) => {\r\n    if (!dateString) return '-';\r\n    try {\r\n      const date = new Date(dateString);\r\n      return date.toLocaleDateString('en-US', {\r\n        month: 'short',\r\n        day: 'numeric',\r\n        year: 'numeric'\r\n      });\r\n    } catch {\r\n      return dateString;\r\n    }\r\n  };\r\n\r\n  const isExpired = (dateString?: string): boolean => {\r\n    if (!dateString) return false;\r\n    try {\r\n      const expiryDate = new Date(dateString);\r\n      const today = new Date();\r\n      today.setHours(0, 0, 0, 0);\r\n      return expiryDate < today;\r\n    } catch {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const isExpiringSoon = (dateString?: string): boolean => {\r\n    if (!dateString) return false;\r\n    try {\r\n      const expiryDate = new Date(dateString);\r\n      const today = new Date();\r\n      const thirtyDaysFromNow = new Date();\r\n      thirtyDaysFromNow.setDate(today.getDate() + 30);\r\n      return expiryDate >= today && expiryDate <= thirtyDaysFromNow;\r\n    } catch {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const DetailField = ({ label, value, className = '' }: { label: string; value: string | number; className?: string }) => (\r\n    <div className={`space-y-1 ${className}`}>\r\n      <label className=\"block text-sm font-medium text-gray-600\">{label}</label>\r\n      <div className=\"text-gray-900 font-medium\">{value || '-'}</div>\r\n    </div>\r\n  );\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-64\">\r\n        <div className=\"text-gray-500\">Loading medicine details...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error || !medicine) {\r\n    return (\r\n      <div className=\"space-y-6\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <div>\r\n            <h1 className=\"text-2xl font-bold text-gray-900\">Medicine Not Found</h1>\r\n            <p className=\"text-gray-600 mt-1\">{error || 'The requested medicine record could not be found.'}</p>\r\n          </div>\r\n          <button\r\n            onClick={handleBack}\r\n            className=\"flex items-center gap-2 px-4 py-2 text-gray-600 hover:text-gray-800 hover:bg-gray-100 rounded-lg transition-colors\"\r\n          >\r\n            <ArrowLeft className=\"h-4 w-4\" />\r\n            Back to List\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const expired = isExpired(medicine.expiryDate);\r\n  const expiringSoon = isExpiringSoon(medicine.expiryDate);\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-2xl font-bold text-gray-900\">Medicine Details</h1>\r\n          <p className=\"text-gray-600 mt-1\">{medicine.name}</p>\r\n        </div>\r\n        <div className=\"flex items-center gap-3\">\r\n          <button\r\n            onClick={handleEdit}\r\n            className=\"flex items-center gap-2 px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors\"\r\n          >\r\n            <Edit className=\"h-4 w-4\" />\r\n            Edit\r\n          </button>\r\n          <button\r\n            onClick={handleDelete}\r\n            className=\"flex items-center gap-2 px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors\"\r\n          >\r\n            <Trash2 className=\"h-4 w-4\" />\r\n            Delete\r\n          </button>\r\n          <button\r\n            onClick={handleBack}\r\n            className=\"flex items-center gap-2 px-4 py-2 text-gray-600 hover:text-gray-800 hover:bg-gray-100 rounded-lg transition-colors\"\r\n          >\r\n            <ArrowLeft className=\"h-4 w-4\" />\r\n            Back\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Expiry Warning */}\r\n      {expired && (\r\n        <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\r\n          <div className=\"flex items-center gap-2 text-red-800\">\r\n            <AlertCircle className=\"h-5 w-5\" />\r\n            <span className=\"font-semibold\">Medicine Expired</span>\r\n          </div>\r\n          <p className=\"text-red-700 text-sm mt-1\">This medicine has expired and should not be used.</p>\r\n        </div>\r\n      )}\r\n\r\n      {expiringSoon && !expired && (\r\n        <div className=\"bg-amber-50 border border-amber-200 rounded-lg p-4\">\r\n          <div className=\"flex items-center gap-2 text-amber-800\">\r\n            <AlertCircle className=\"h-5 w-5\" />\r\n            <span className=\"font-semibold\">Expiring Soon</span>\r\n          </div>\r\n          <p className=\"text-amber-700 text-sm mt-1\">This medicine will expire within 30 days.</p>\r\n        </div>\r\n      )}\r\n\r\n      {/* Main Content */}\r\n      <div className=\"bg-white rounded-xl shadow-sm border border-gray-100\">\r\n        <div className=\"p-6 border-b border-gray-100\">\r\n          <h2 className=\"text-lg font-semibold text-gray-900 flex items-center gap-3\">\r\n            <div className=\"h-10 w-10 bg-blue-100 rounded-full flex items-center justify-center\">\r\n              <Pill className=\"h-5 w-5 text-blue-600\" />\r\n            </div>\r\n            Medicine Information\r\n          </h2>\r\n        </div>\r\n\r\n        <div className=\"p-6\">\r\n          {/* Basic Information Section */}\r\n          <div className=\"mb-8\">\r\n            <h3 className=\"text-md font-semibold text-gray-800 mb-4 pb-2 border-b border-gray-200\">\r\n              📋 Basic Information\r\n            </h3>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n              <DetailField label=\"Medicine Name\" value={medicine.name} />\r\n              <DetailField label=\"Batch Number\" value={medicine.batchNumber || '-'} />\r\n              <DetailField label=\"Manufacturer\" value={medicine.manufacturer || '-'} />\r\n              <DetailField label=\"Dosage\" value={medicine.dosage} />\r\n              <DetailField label=\"Unit\" value={medicine.unit} />\r\n              <div className=\"space-y-1\">\r\n                <label className=\"block text-sm font-medium text-gray-600\">Stock Quantity</label>\r\n                <div className=\"flex items-center gap-2\">\r\n                  <Package className=\"h-4 w-4 text-gray-400\" />\r\n                  <span className={`text-gray-900 font-medium ${medicine.quantity < 10 ? 'text-red-600' : ''}`}>\r\n                    {medicine.quantity} {medicine.unit}\r\n                  </span>\r\n                  {medicine.quantity < 10 && (\r\n                    <span className=\"text-xs bg-red-100 text-red-700 px-2 py-0.5 rounded\">Low Stock</span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Expiry Information */}\r\n          <div className=\"mb-8\">\r\n            <h3 className=\"text-md font-semibold text-gray-800 mb-4 pb-2 border-b border-gray-200\">\r\n              📅 Expiry Information\r\n            </h3>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n              <div className=\"space-y-1\">\r\n                <label className=\"block text-sm font-medium text-gray-600\">Expiry Date</label>\r\n                <div className=\"flex items-center gap-2\">\r\n                  <Calendar className={`h-4 w-4 ${expired ? 'text-red-400' : expiringSoon ? 'text-amber-400' : 'text-gray-400'}`} />\r\n                  <span className={`font-medium ${expired ? 'text-red-600' : expiringSoon ? 'text-amber-600' : 'text-gray-900'}`}>\r\n                    {formatExpiryDate(medicine.expiryDate)}\r\n                  </span>\r\n                  {expired && <span className=\"text-xs bg-red-100 text-red-700 px-2 py-0.5 rounded\">Expired</span>}\r\n                  {expiringSoon && !expired && <span className=\"text-xs bg-amber-100 text-amber-700 px-2 py-0.5 rounded\">Expiring Soon</span>}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Purpose Section */}\r\n          {medicine.purpose && (\r\n            <div className=\"mb-8\">\r\n              <h3 className=\"text-md font-semibold text-gray-800 mb-4 pb-2 border-b border-gray-200\">\r\n                💊 Purpose & Usage\r\n              </h3>\r\n              <div className=\"bg-blue-50 rounded-lg p-4\">\r\n                <p className=\"text-blue-900\">{medicine.purpose}</p>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Description Section */}\r\n          {medicine.description && (\r\n            <div className=\"mb-8\">\r\n              <h3 className=\"text-md font-semibold text-gray-800 mb-4 pb-2 border-b border-gray-200\">\r\n                📝 Description\r\n              </h3>\r\n              <div className=\"bg-gray-50 rounded-lg p-4\">\r\n                <p className=\"text-gray-900 leading-relaxed\">{medicine.description}</p>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Record Information Section */}\r\n          <div className=\"mb-8\">\r\n            <h3 className=\"text-md font-semibold text-gray-800 mb-4 pb-2 border-b border-gray-200\">\r\n              ℹ️ Record Information\r\n            </h3>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n              {medicine.id && <DetailField label=\"Medicine ID\" value={medicine.id} />}\r\n              {medicine.createdAt && (\r\n                <DetailField label=\"Record Created\" value={formatDate(medicine.createdAt)} />\r\n              )}\r\n              {medicine.updatedAt && (\r\n                <DetailField label=\"Last Updated\" value={formatDate(medicine.updatedAt)} />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Action Buttons */}\r\n      <div className=\"flex justify-start gap-4\">\r\n        <button\r\n          onClick={handleEdit}\r\n          className=\"flex items-center gap-2 px-6 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors\"\r\n        >\r\n          <Edit className=\"h-4 w-4\" />\r\n          Edit Medicine\r\n        </button>\r\n        <button\r\n          onClick={handleBack}\r\n          className=\"flex items-center gap-2 px-6 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors\"\r\n        >\r\n          <ArrowLeft className=\"h-4 w-4\" />\r\n          Back to List\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","/**\r\n * Edit Medicine Page - Update existing medicine records\r\n * Mapped to backend Medicine.java entity with exact field names\r\n */\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { Save, ArrowLeft, Calendar, Pill } from 'lucide-react';\r\nimport { medicineApi, type Medicine } from '../../services/gaushala/api';\r\n\r\ninterface MedicineFormData {\r\n  name: string;\r\n  description: string;\r\n  dosage: string;\r\n  unit: string;\r\n  quantity: number;\r\n  expiryDate: string;\r\n  manufacturer: string;\r\n  batchNumber: string;\r\n  purpose: string;\r\n}\r\n\r\nexport default function EditMedicine() {\r\n  const navigate = useNavigate();\r\n  const { id } = useParams<{ id: string }>();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [message, setMessage] = useState<{ type: 'success' | 'error'; text: string } | null>(null);\r\n\r\n  const [formData, setFormData] = useState<MedicineFormData>({\r\n    name: '',\r\n    description: '',\r\n    dosage: '',\r\n    unit: 'mg',\r\n    quantity: 0,\r\n    expiryDate: '',\r\n    manufacturer: '',\r\n    batchNumber: '',\r\n    purpose: ''\r\n  });\r\n\r\n  const [errors, setErrors] = useState<Partial<MedicineFormData>>({});\r\n\r\n  useEffect(() => {\r\n    const fetchMedicine = async () => {\r\n      if (!id) return;\r\n\r\n      setLoading(true);\r\n      try {\r\n        const result = await medicineApi.getMedicineById(parseInt(id));\r\n\r\n        if (result.success && result.data) {\r\n          const medicine = result.data;\r\n          // Convert ISO date string to YYYY-MM-DD format for date input\r\n          const dateObj = new Date(medicine.expiryDate);\r\n          const formattedDate = dateObj.toISOString().split('T')[0];\r\n\r\n          setFormData({\r\n            name: medicine.name,\r\n            description: medicine.description || '',\r\n            dosage: medicine.dosage,\r\n            unit: medicine.unit,\r\n            quantity: medicine.quantity,\r\n            expiryDate: formattedDate,\r\n            manufacturer: medicine.manufacturer || '',\r\n            batchNumber: medicine.batchNumber || '',\r\n            purpose: medicine.purpose || ''\r\n          });\r\n        } else {\r\n          setMessage({\r\n            type: 'error',\r\n            text: result.error || 'Failed to load medicine record.'\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching medicine record:', error);\r\n        setMessage({\r\n          type: 'error',\r\n          text: 'Failed to load medicine record.'\r\n        });\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchMedicine();\r\n  }, [id]);\r\n\r\n  const handleInputChange = (field: keyof MedicineFormData, value: string | number) => {\r\n    setFormData(prev => ({ ...prev, [field]: value }));\r\n    if (errors[field]) {\r\n      setErrors(prev => ({ ...prev, [field]: '' }));\r\n    }\r\n  };\r\n\r\n  const validateForm = (): boolean => {\r\n    const newErrors: Partial<Record<keyof MedicineFormData, string>> = {};\r\n\r\n    if (!formData.name.trim()) newErrors.name = 'Medicine Name is required';\r\n    if (!formData.dosage.trim()) newErrors.dosage = 'Dosage is required';\r\n    if (!formData.unit.trim()) newErrors.unit = 'Unit is required';\r\n    if (formData.quantity <= 0) newErrors.quantity = 'Quantity must be greater than 0';\r\n    if (!formData.expiryDate.trim()) newErrors.expiryDate = 'Expiry Date is required';\r\n\r\n    // Date validation - expiry date should be in the future\r\n    if (formData.expiryDate) {\r\n      const expiryDate = new Date(formData.expiryDate);\r\n      const today = new Date();\r\n      today.setHours(0, 0, 0, 0);\r\n      if (expiryDate < today) {\r\n        newErrors.expiryDate = 'Expiry Date should be in the future';\r\n      }\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    if (!validateForm()) {\r\n      setMessage({\r\n        type: 'error',\r\n        text: 'Please fill in all required fields and fix validation errors.'\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (!id) {\r\n      setMessage({\r\n        type: 'error',\r\n        text: 'Invalid medicine ID.'\r\n      });\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    setMessage(null);\r\n\r\n    try {\r\n      // Convert date to ISO format for backend LocalDateTime\r\n      const medicineData: Omit<Medicine, 'id' | 'createdAt' | 'updatedAt'> = {\r\n        name: formData.name,\r\n        description: formData.description || undefined,\r\n        dosage: formData.dosage,\r\n        unit: formData.unit,\r\n        quantity: formData.quantity,\r\n        expiryDate: new Date(formData.expiryDate).toISOString(),\r\n        manufacturer: formData.manufacturer || undefined,\r\n        batchNumber: formData.batchNumber || undefined,\r\n        purpose: formData.purpose || undefined\r\n      };\r\n\r\n      const result = await medicineApi.updateMedicine(parseInt(id), medicineData);\r\n\r\n      if (result.success) {\r\n        setMessage({\r\n          type: 'success',\r\n          text: 'Medicine record updated successfully!'\r\n        });\r\n\r\n        // Navigate back after delay\r\n        setTimeout(() => {\r\n          navigate('/gaushala/medicine');\r\n        }, 2000);\r\n      } else {\r\n        setMessage({\r\n          type: 'error',\r\n          text: result.error || 'Failed to update medicine record.'\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating medicine:', error);\r\n      setMessage({\r\n        type: 'error',\r\n        text: 'Failed to update medicine record. Please try again.'\r\n      });\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    navigate('/gaushala/medicine');\r\n  };\r\n\r\n  const InputField = ({\r\n    label,\r\n    value,\r\n    onChange,\r\n    type = 'text',\r\n    placeholder,\r\n    required = false,\r\n    error,\r\n    className = '',\r\n    ...props\r\n  }: any) => (\r\n    <div className={`space-y-2 ${className}`}>\r\n      <label className=\"block text-sm font-medium text-gray-800\">\r\n        {label} {required && <span className=\"text-red-500\">*</span>}\r\n      </label>\r\n      <input\r\n        type={type}\r\n        value={value}\r\n        onChange={(e) => onChange(type === 'number' ? Number(e.target.value) : e.target.value)}\r\n        placeholder={placeholder}\r\n        className={`w-full px-3 py-2 bg-white border rounded-lg transition-all duration-200 text-gray-900 placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent hover:border-gray-400 ${\r\n          error ? 'border-red-300 bg-red-50' : 'border-gray-300'\r\n        }`}\r\n        {...props}\r\n      />\r\n      {error && (\r\n        <div className=\"flex items-center gap-2 text-sm text-red-600\">\r\n          <span className=\"text-red-500\">⚠</span>\r\n          {error}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  const SelectField = ({\r\n    label,\r\n    value,\r\n    onChange,\r\n    placeholder,\r\n    required = false,\r\n    error,\r\n    options,\r\n    className = ''\r\n  }: any) => (\r\n    <div className={`space-y-2 ${className}`}>\r\n      <label className=\"block text-sm font-medium text-gray-800\">\r\n        {label} {required && <span className=\"text-red-500\">*</span>}\r\n      </label>\r\n      <select\r\n        value={value}\r\n        onChange={(e) => onChange(e.target.value)}\r\n        className={`w-full px-3 py-2 bg-white border rounded-lg transition-all duration-200 text-gray-900 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent hover:border-gray-400 ${\r\n          error ? 'border-red-300 bg-red-50' : 'border-gray-300'\r\n        }`}\r\n      >\r\n        <option value=\"\">{placeholder}</option>\r\n        {options.map((option: any) => (\r\n          <option key={option.value} value={option.value}>\r\n            {option.label}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error && (\r\n        <div className=\"flex items-center gap-2 text-sm text-red-600\">\r\n          <span className=\"text-red-500\">⚠</span>\r\n          {error}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  const TextAreaField = ({\r\n    label,\r\n    value,\r\n    onChange,\r\n    placeholder,\r\n    required = false,\r\n    error,\r\n    rows = 3,\r\n    className = ''\r\n  }: any) => (\r\n    <div className={`space-y-2 ${className}`}>\r\n      <label className=\"block text-sm font-medium text-gray-800\">\r\n        {label} {required && <span className=\"text-red-500\">*</span>}\r\n      </label>\r\n      <textarea\r\n        value={value}\r\n        onChange={(e) => onChange(e.target.value)}\r\n        placeholder={placeholder}\r\n        rows={rows}\r\n        className={`w-full px-3 py-2 bg-white border rounded-lg transition-all duration-200 text-gray-900 placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent hover:border-gray-400 resize-vertical ${\r\n          error ? 'border-red-300 bg-red-50' : 'border-gray-300'\r\n        }`}\r\n      />\r\n      {error && (\r\n        <div className=\"flex items-center gap-2 text-sm text-red-600\">\r\n          <span className=\"text-red-500\">⚠</span>\r\n          {error}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-64\">\r\n        <div className=\"text-gray-500\">Loading medicine record...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-2xl font-bold text-gray-900\">Edit Medicine</h1>\r\n          <p className=\"text-gray-600 mt-1\">Update medicine inventory record #{id}</p>\r\n        </div>\r\n        <button\r\n          onClick={handleCancel}\r\n          className=\"flex items-center gap-2 px-4 py-2 text-gray-600 hover:text-gray-800 hover:bg-gray-100 rounded-lg transition-colors\"\r\n        >\r\n          <ArrowLeft className=\"h-4 w-4\" />\r\n          Back\r\n        </button>\r\n      </div>\r\n\r\n      {/* Message */}\r\n      {message && (\r\n        <div className={`p-4 rounded-lg border ${\r\n          message.type === 'success'\r\n            ? 'bg-green-50 border-green-200 text-green-800'\r\n            : 'bg-red-50 border-red-200 text-red-800'\r\n        }`}>\r\n          <div className=\"flex items-center gap-2\">\r\n            {message.type === 'success' ? (\r\n              <span className=\"text-green-500\">✓</span>\r\n            ) : (\r\n              <span className=\"text-red-500\">⚠</span>\r\n            )}\r\n            {message.text}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Main Form */}\r\n      <div className=\"bg-white rounded-xl shadow-sm border border-gray-100\">\r\n        <div className=\"p-6 border-b border-gray-100\">\r\n          <h2 className=\"text-lg font-semibold text-gray-900 flex items-center gap-3\">\r\n            <div className=\"h-10 w-10 bg-blue-100 rounded-full flex items-center justify-center\">\r\n              <Pill className=\"h-5 w-5 text-blue-600\" />\r\n            </div>\r\n            Edit Medicine Information\r\n          </h2>\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit} className=\"p-6\">\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n            {/* Medicine Name */}\r\n            <InputField\r\n              label=\"Medicine Name\"\r\n              value={formData.name}\r\n              onChange={(value: string) => handleInputChange('name', value)}\r\n              placeholder=\"Enter medicine name\"\r\n              required\r\n              error={errors.name}\r\n            />\r\n\r\n            {/* Batch Number */}\r\n            <InputField\r\n              label=\"Batch Number\"\r\n              value={formData.batchNumber}\r\n              onChange={(value: string) => handleInputChange('batchNumber', value)}\r\n              placeholder=\"Enter batch number\"\r\n              error={errors.batchNumber}\r\n            />\r\n\r\n            {/* Dosage */}\r\n            <InputField\r\n              label=\"Dosage\"\r\n              value={formData.dosage}\r\n              onChange={(value: string) => handleInputChange('dosage', value)}\r\n              placeholder=\"e.g., 500mg twice daily\"\r\n              required\r\n              error={errors.dosage}\r\n            />\r\n\r\n            {/* Unit */}\r\n            <SelectField\r\n              label=\"Unit\"\r\n              value={formData.unit}\r\n              onChange={(value: string) => handleInputChange('unit', value)}\r\n              placeholder=\"Select unit\"\r\n              required\r\n              error={errors.unit}\r\n              options={[\r\n                { value: 'mg', label: 'Milligrams (mg)' },\r\n                { value: 'ml', label: 'Milliliters (ml)' },\r\n                { value: 'g', label: 'Grams (g)' },\r\n                { value: 'tablets', label: 'Tablets' },\r\n                { value: 'capsules', label: 'Capsules' },\r\n                { value: 'units', label: 'Units' }\r\n              ]}\r\n            />\r\n\r\n            {/* Quantity */}\r\n            <InputField\r\n              label=\"Quantity\"\r\n              type=\"number\"\r\n              value={formData.quantity}\r\n              onChange={(value: number) => handleInputChange('quantity', value)}\r\n              placeholder=\"Enter quantity in stock\"\r\n              required\r\n              error={errors.quantity}\r\n              min=\"0\"\r\n            />\r\n\r\n            {/* Expiry Date */}\r\n            <div className=\"space-y-2\">\r\n              <label className=\"block text-sm font-medium text-gray-800\">\r\n                Expiry Date <span className=\"text-red-500\">*</span>\r\n              </label>\r\n              <div className=\"relative\">\r\n                <input\r\n                  type=\"date\"\r\n                  value={formData.expiryDate}\r\n                  onChange={(e) => handleInputChange('expiryDate', e.target.value)}\r\n                  className={`w-full px-3 py-2 bg-white border rounded-lg transition-all duration-200 text-gray-900 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent hover:border-gray-400 ${\r\n                    errors.expiryDate ? 'border-red-300 bg-red-50' : 'border-gray-300'\r\n                  }`}\r\n                />\r\n                <Calendar className=\"absolute right-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400 pointer-events-none\" />\r\n              </div>\r\n              {errors.expiryDate && (\r\n                <div className=\"flex items-center gap-2 text-sm text-red-600\">\r\n                  <span className=\"text-red-500\">⚠</span>\r\n                  {errors.expiryDate}\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* Manufacturer */}\r\n            <InputField\r\n              label=\"Manufacturer\"\r\n              value={formData.manufacturer}\r\n              onChange={(value: string) => handleInputChange('manufacturer', value)}\r\n              placeholder=\"Enter manufacturer name\"\r\n              error={errors.manufacturer}\r\n            />\r\n\r\n            {/* Purpose */}\r\n            <TextAreaField\r\n              label=\"Purpose\"\r\n              value={formData.purpose}\r\n              onChange={(value: string) => handleInputChange('purpose', value)}\r\n              placeholder=\"Enter purpose or indication for use\"\r\n              className=\"md:col-span-2\"\r\n              rows={2}\r\n            />\r\n\r\n            {/* Description */}\r\n            <TextAreaField\r\n              label=\"Description\"\r\n              value={formData.description}\r\n              onChange={(value: string) => handleInputChange('description', value)}\r\n              placeholder=\"Enter additional details about the medicine\"\r\n              className=\"md:col-span-2\"\r\n              rows={3}\r\n            />\r\n          </div>\r\n\r\n          {/* Action Buttons */}\r\n          <div className=\"flex justify-start gap-4 mt-8 pt-6 border-t border-gray-100\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={handleCancel}\r\n              className=\"px-6 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors\"\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              disabled={isLoading}\r\n              className=\"flex items-center gap-2 px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\r\n            >\r\n              <Save className=\"h-4 w-4\" />\r\n              {isLoading ? 'Updating...' : 'Update Medicine'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","/**\r\n * Medicine List Page - Shows all medicine inventory with filtering and pagination\r\n * Mapped to backend Medicine.java entity with exact field names\r\n */\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Search, Filter, Eye, Edit, Trash2, Plus, Download, AlertCircle, Package } from 'lucide-react';\r\nimport { medicineApi, type Medicine } from '../../services/gaushala/api';\r\n\r\nexport default function MedicineList() {\r\n  const navigate = useNavigate();\r\n  const [medicines, setMedicines] = useState<Medicine[]>([]);\r\n  const [filteredData, setFilteredData] = useState<Medicine[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [entriesPerPage, setEntriesPerPage] = useState(20);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n  const [totalItems, setTotalItems] = useState(0);\r\n  const [showFilters, setShowFilters] = useState(false);\r\n\r\n  // Filter states\r\n  const [filterName, setFilterName] = useState('');\r\n  const [filterManufacturer, setFilterManufacturer] = useState('');\r\n  const [filterUnit, setFilterUnit] = useState('');\r\n  const [filterExpiry, setFilterExpiry] = useState<'all' | 'expired' | 'expiring_soon' | 'valid'>('all');\r\n\r\n  useEffect(() => {\r\n    fetchMedicines();\r\n  }, [currentPage, entriesPerPage]);\r\n\r\n  const fetchMedicines = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const result = await medicineApi.getAllMedicines(currentPage - 1, entriesPerPage);\r\n\r\n      if (result.success && result.data) {\r\n        setMedicines(result.data.content || []);\r\n        setFilteredData(result.data.content || []);\r\n        setTotalPages(result.data.totalPages || 1);\r\n        setTotalItems(result.data.totalElements || 0);\r\n      } else {\r\n        setError(result.error || 'Failed to load medicines');\r\n        setMedicines([]);\r\n        setFilteredData([]);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching medicines:', error);\r\n      setError('Failed to load medicines');\r\n      setMedicines([]);\r\n      setFilteredData([]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const isExpired = (dateString?: string): boolean => {\r\n    if (!dateString) return false;\r\n    try {\r\n      const expiryDate = new Date(dateString);\r\n      const today = new Date();\r\n      today.setHours(0, 0, 0, 0);\r\n      return expiryDate < today;\r\n    } catch {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const isExpiringSoon = (dateString?: string): boolean => {\r\n    if (!dateString) return false;\r\n    try {\r\n      const expiryDate = new Date(dateString);\r\n      const today = new Date();\r\n      const thirtyDaysFromNow = new Date();\r\n      thirtyDaysFromNow.setDate(today.getDate() + 30);\r\n      return expiryDate >= today && expiryDate <= thirtyDaysFromNow;\r\n    } catch {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let filtered = medicines;\r\n\r\n    // Apply search filter\r\n    if (searchTerm) {\r\n      filtered = filtered.filter(item =>\r\n        item.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        (item.manufacturer && item.manufacturer.toLowerCase().includes(searchTerm.toLowerCase())) ||\r\n        (item.batchNumber && item.batchNumber.toLowerCase().includes(searchTerm.toLowerCase()))\r\n      );\r\n    }\r\n\r\n    // Apply specific filters\r\n    if (filterName) {\r\n      filtered = filtered.filter(item =>\r\n        item.name.toLowerCase().includes(filterName.toLowerCase())\r\n      );\r\n    }\r\n    if (filterManufacturer) {\r\n      filtered = filtered.filter(item =>\r\n        item.manufacturer && item.manufacturer.toLowerCase().includes(filterManufacturer.toLowerCase())\r\n      );\r\n    }\r\n    if (filterUnit) {\r\n      filtered = filtered.filter(item =>\r\n        item.unit.toLowerCase() === filterUnit.toLowerCase()\r\n      );\r\n    }\r\n\r\n    // Apply expiry filter\r\n    if (filterExpiry !== 'all') {\r\n      filtered = filtered.filter(item => {\r\n        if (filterExpiry === 'expired') return isExpired(item.expiryDate);\r\n        if (filterExpiry === 'expiring_soon') return isExpiringSoon(item.expiryDate) && !isExpired(item.expiryDate);\r\n        if (filterExpiry === 'valid') return !isExpired(item.expiryDate) && !isExpiringSoon(item.expiryDate);\r\n        return true;\r\n      });\r\n    }\r\n\r\n    setFilteredData(filtered);\r\n  }, [searchTerm, filterName, filterManufacturer, filterUnit, filterExpiry, medicines]);\r\n\r\n  // Action handlers\r\n  const handleView = (id: number) => {\r\n    navigate(`/gaushala/medicine/view/${id}`);\r\n  };\r\n\r\n  const handleEdit = (id: number) => {\r\n    navigate(`/gaushala/medicine/edit/${id}`);\r\n  };\r\n\r\n  const handleDelete = async (id: number) => {\r\n    if (!window.confirm('Are you sure you want to delete this medicine record?')) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const result = await medicineApi.deleteMedicine(id);\r\n\r\n      if (result.success) {\r\n        // Refresh the list after successful deletion\r\n        fetchMedicines();\r\n      } else {\r\n        alert(result.error || 'Failed to delete medicine record');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting medicine record:', error);\r\n      alert('Failed to delete medicine record');\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString?: string) => {\r\n    if (!dateString) return '-';\r\n    try {\r\n      const date = new Date(dateString);\r\n      return date.toLocaleDateString('en-US', {\r\n        month: 'short',\r\n        day: 'numeric',\r\n        year: 'numeric'\r\n      });\r\n    } catch {\r\n      return dateString;\r\n    }\r\n  };\r\n\r\n  // Calculate display values\r\n  const startIndex = (currentPage - 1) * entriesPerPage;\r\n  const endIndex = Math.min(startIndex + filteredData.length, totalItems);\r\n\r\n  if (loading && medicines.length === 0) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-64\">\r\n        <div className=\"text-gray-500\">Loading medicines...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4\">\r\n        <div>\r\n          <h1 className=\"text-2xl font-bold text-gray-900\">Medicine Inventory</h1>\r\n          <p className=\"text-gray-600 mt-1\">Manage medicine stock and inventory</p>\r\n        </div>\r\n        <div className=\"flex gap-3\">\r\n          <button className=\"flex items-center gap-2 px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors\">\r\n            <Download className=\"h-4 w-4\" />\r\n            Export\r\n          </button>\r\n          <button\r\n            onClick={() => navigate('/gaushala/medicine/add')}\r\n            className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\r\n          >\r\n            <Plus className=\"h-4 w-4\" />\r\n            Add Medicine\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Error Message */}\r\n      {error && (\r\n        <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\r\n          <div className=\"flex items-center gap-2 text-red-800\">\r\n            <span className=\"text-red-500\">⚠</span>\r\n            {error}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Main Content Card */}\r\n      <div className=\"bg-white rounded-xl shadow-sm border border-gray-100\">\r\n        {/* Controls */}\r\n        <div className=\"p-6 border-b border-gray-100\">\r\n          <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between gap-4\">\r\n            {/* Left side - Show entries and Filter */}\r\n            <div className=\"flex items-center gap-4\">\r\n              <div className=\"flex items-center gap-2\">\r\n                <span className=\"text-sm text-gray-600\">Show</span>\r\n                <select\r\n                  value={entriesPerPage}\r\n                  onChange={(e) => {\r\n                    setEntriesPerPage(Number(e.target.value));\r\n                    setCurrentPage(1);\r\n                  }}\r\n                  className=\"px-3 py-1 border border-gray-300 rounded-lg text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                >\r\n                  <option value={10}>10</option>\r\n                  <option value={20}>20</option>\r\n                  <option value={50}>50</option>\r\n                  <option value={100}>100</option>\r\n                </select>\r\n                <span className=\"text-sm text-gray-600\">entries</span>\r\n              </div>\r\n\r\n              <button\r\n                onClick={() => setShowFilters(!showFilters)}\r\n                className=\"flex items-center gap-2 px-3 py-1 border border-gray-300 rounded-lg text-sm hover:bg-gray-50 transition-colors\"\r\n              >\r\n                <Filter className=\"h-4 w-4\" />\r\n                Filter Box\r\n              </button>\r\n            </div>\r\n\r\n            {/* Right side - Search */}\r\n            <div className=\"relative\">\r\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search medicines...\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n                className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-lg text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Filter Box */}\r\n          {showFilters && (\r\n            <div className=\"mt-4 p-4 bg-gray-50 rounded-lg\">\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Filter by Medicine Name\"\r\n                  value={filterName}\r\n                  onChange={(e) => setFilterName(e.target.value)}\r\n                  className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Filter by Manufacturer\"\r\n                  value={filterManufacturer}\r\n                  onChange={(e) => setFilterManufacturer(e.target.value)}\r\n                  className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                />\r\n                <select\r\n                  value={filterUnit}\r\n                  onChange={(e) => setFilterUnit(e.target.value)}\r\n                  className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                >\r\n                  <option value=\"\">All Units</option>\r\n                  <option value=\"mg\">Milligrams (mg)</option>\r\n                  <option value=\"ml\">Milliliters (ml)</option>\r\n                  <option value=\"g\">Grams (g)</option>\r\n                  <option value=\"tablets\">Tablets</option>\r\n                  <option value=\"capsules\">Capsules</option>\r\n                  <option value=\"units\">Units</option>\r\n                </select>\r\n                <select\r\n                  value={filterExpiry}\r\n                  onChange={(e) => setFilterExpiry(e.target.value as any)}\r\n                  className=\"px-3 py-2 border border-gray-300 rounded-lg text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                >\r\n                  <option value=\"all\">All Medicines</option>\r\n                  <option value=\"expired\">Expired Only</option>\r\n                  <option value=\"expiring_soon\">Expiring Soon (30 days)</option>\r\n                  <option value=\"valid\">Valid Only</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Table */}\r\n        <div className=\"overflow-x-auto\">\r\n          <table className=\"w-full\">\r\n            <thead className=\"bg-gray-50 border-b border-gray-100\">\r\n              <tr>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  SL.\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Medicine Name\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Dosage\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Stock Quantity\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Expiry Date\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Manufacturer\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Status\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                  Action\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"bg-white divide-y divide-gray-100\">\r\n              {filteredData.length === 0 ? (\r\n                <tr>\r\n                  <td colSpan={8} className=\"px-6 py-8 text-center text-gray-500\">\r\n                    {loading ? 'Loading...' : 'No medicine records found'}\r\n                  </td>\r\n                </tr>\r\n              ) : (\r\n                filteredData.map((item, index) => {\r\n                  const expired = isExpired(item.expiryDate);\r\n                  const expiringSoon = isExpiringSoon(item.expiryDate);\r\n                  const lowStock = item.quantity < 10;\r\n\r\n                  return (\r\n                    <tr key={item.id} className=\"hover:bg-gray-50 transition-colors\">\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                        {startIndex + index + 1}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 font-medium\">\r\n                        {item.name}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                        {item.dosage}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm\">\r\n                        <div className=\"flex items-center gap-2\">\r\n                          <Package className=\"h-4 w-4 text-gray-400\" />\r\n                          <span className={lowStock ? 'text-red-600 font-semibold' : 'text-gray-900'}>\r\n                            {item.quantity} {item.unit}\r\n                          </span>\r\n                          {lowStock && (\r\n                            <span className=\"text-xs bg-red-100 text-red-700 px-2 py-0.5 rounded\">Low</span>\r\n                          )}\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm\">\r\n                        <span className={expired ? 'text-red-600 font-semibold' : expiringSoon ? 'text-amber-600 font-semibold' : 'text-gray-900'}>\r\n                          {formatDate(item.expiryDate)}\r\n                        </span>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                        {item.manufacturer || '-'}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm\">\r\n                        {expired ? (\r\n                          <span className=\"inline-flex items-center gap-1 px-2 py-1 bg-red-100 text-red-700 rounded-full text-xs font-medium\">\r\n                            <AlertCircle className=\"h-3 w-3\" />\r\n                            Expired\r\n                          </span>\r\n                        ) : expiringSoon ? (\r\n                          <span className=\"inline-flex items-center gap-1 px-2 py-1 bg-amber-100 text-amber-700 rounded-full text-xs font-medium\">\r\n                            <AlertCircle className=\"h-3 w-3\" />\r\n                            Expiring Soon\r\n                          </span>\r\n                        ) : (\r\n                          <span className=\"inline-flex items-center gap-1 px-2 py-1 bg-green-100 text-green-700 rounded-full text-xs font-medium\">\r\n                            ✓ Valid\r\n                          </span>\r\n                        )}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                        <div className=\"flex items-center gap-2\">\r\n                          <button\r\n                            onClick={() => handleView(item.id!)}\r\n                            className=\"p-1 text-blue-600 hover:text-blue-800 hover:bg-blue-50 rounded transition-colors\"\r\n                            title=\"View\"\r\n                          >\r\n                            <Eye className=\"h-4 w-4\" />\r\n                          </button>\r\n                          <button\r\n                            onClick={() => handleEdit(item.id!)}\r\n                            className=\"p-1 text-green-600 hover:text-green-800 hover:bg-green-50 rounded transition-colors\"\r\n                            title=\"Edit\"\r\n                          >\r\n                            <Edit className=\"h-4 w-4\" />\r\n                          </button>\r\n                          <button\r\n                            onClick={() => handleDelete(item.id!)}\r\n                            className=\"p-1 text-red-600 hover:text-red-800 hover:bg-red-50 rounded transition-colors\"\r\n                            title=\"Delete\"\r\n                          >\r\n                            <Trash2 className=\"h-4 w-4\" />\r\n                          </button>\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        {/* Pagination */}\r\n        <div className=\"px-6 py-4 border-t border-gray-100\">\r\n          <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4\">\r\n            <div className=\"text-sm text-gray-700\">\r\n              Showing {filteredData.length > 0 ? startIndex + 1 : 0} to {endIndex} of {totalItems} entries\r\n            </div>\r\n            <div className=\"flex items-center gap-2\">\r\n              <button\r\n                onClick={() => setCurrentPage(Math.max(1, currentPage - 1))}\r\n                disabled={currentPage === 1}\r\n                className=\"px-3 py-1 text-sm border border-gray-300 rounded hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\r\n              >\r\n                Previous\r\n              </button>\r\n              <span className=\"px-3 py-1 text-sm bg-blue-600 text-white rounded\">\r\n                {currentPage}\r\n              </span>\r\n              <span className=\"text-sm text-gray-500\">of {totalPages}</span>\r\n              <button\r\n                onClick={() => setCurrentPage(Math.min(totalPages, currentPage + 1))}\r\n                disabled={currentPage === totalPages}\r\n                className=\"px-3 py-1 text-sm border border-gray-300 rounded hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\r\n              >\r\n                Next\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","/**\r\n * Shed List - Main shed management page with capacity tracking\r\n * 100% API-driven, NO hardcoded data\r\n */\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Plus, Edit, Trash2, Home, Users, AlertCircle } from 'lucide-react';\r\nimport { shedApi, type Shed, type PagedResponse } from '../../../services/gaushala/api';\r\n\r\nexport default function ShedList() {\r\n  const navigate = useNavigate();\r\n  const [sheds, setSheds] = useState<Shed[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n\r\n  useEffect(() => {\r\n    loadSheds();\r\n  }, [currentPage]);\r\n\r\n  const loadSheds = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await shedApi.getAllSheds(currentPage, 20);\r\n      if (response.success && response.data) {\r\n        setSheds(response.data.content);\r\n        setTotalPages(response.data.totalPages);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading sheds:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id: number) => {\r\n    if (!confirm('Delete this shed?')) return;\r\n    try {\r\n      const response = await shedApi.deleteShed(id);\r\n      if (response.success) loadSheds();\r\n    } catch (error) {\r\n      console.error('Error deleting shed:', error);\r\n    }\r\n  };\r\n\r\n  const getOccupancyPercentage = (shed: Shed): number => {\r\n    if (shed.capacity === 0) return 0;\r\n    return (shed.currentOccupancy / shed.capacity) * 100;\r\n  };\r\n\r\n  const getOccupancyColor = (percentage: number): string => {\r\n    if (percentage >= 90) return 'text-red-600 bg-red-100';\r\n    if (percentage >= 70) return 'text-yellow-600 bg-yellow-100';\r\n    return 'text-green-600 bg-green-100';\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"flex justify-center items-center h-screen\"><div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div></div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <div className=\"mb-6 flex items-center justify-between\">\r\n        <h1 className=\"text-2xl font-bold\">Shed Management</h1>\r\n        <button onClick={() => navigate('/gaushala/sheds/add')} className=\"flex items-center gap-2 rounded-lg bg-blue-600 px-4 py-2 text-white hover:bg-blue-700\">\r\n          <Plus size={20} />Add Shed\r\n        </button>\r\n      </div>\r\n\r\n      {sheds.length === 0 ? (\r\n        <div className=\"text-center py-12 bg-white rounded-lg shadow\">\r\n          <Home className=\"mx-auto text-gray-400\" size={48} />\r\n          <p className=\"mt-4 text-gray-600\">No sheds found</p>\r\n        </div>\r\n      ) : (\r\n        <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\r\n          {sheds.map((shed) => {\r\n            const occupancyPercent = getOccupancyPercentage(shed);\r\n            return (\r\n              <div key={shed.id} className=\"bg-white rounded-lg shadow p-6\">\r\n                <div className=\"flex items-center justify-between mb-4\">\r\n                  <div className=\"flex items-center gap-3\">\r\n                    <div className=\"rounded-full bg-blue-100 p-2\">\r\n                      <Home className=\"text-blue-600\" size={20} />\r\n                    </div>\r\n                    <div>\r\n                      <h3 className=\"font-semibold\">{shed.shedName}</h3>\r\n                      <p className=\"text-sm text-gray-500\">{shed.shedNumber}</p>\r\n                    </div>\r\n                  </div>\r\n                  <span className={`px-2 py-1 rounded text-xs font-medium ${shed.status === 'ACTIVE' ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'}`}>\r\n                    {shed.status}\r\n                  </span>\r\n                </div>\r\n\r\n                <div className=\"space-y-3\">\r\n                  <div className=\"flex items-center justify-between text-sm\">\r\n                    <span className=\"text-gray-600\">Capacity:</span>\r\n                    <span className=\"font-medium\">{shed.capacity}</span>\r\n                  </div>\r\n                  <div className=\"flex items-center justify-between text-sm\">\r\n                    <span className=\"text-gray-600\">Occupancy:</span>\r\n                    <span className=\"font-medium\">{shed.currentOccupancy}</span>\r\n                  </div>\r\n                  <div>\r\n                    <div className=\"flex items-center justify-between text-sm mb-1\">\r\n                      <span className=\"text-gray-600\">Utilization:</span>\r\n                      <span className={`font-medium px-2 py-0.5 rounded ${getOccupancyColor(occupancyPercent)}`}>\r\n                        {occupancyPercent.toFixed(1)}%\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"w-full bg-gray-200 rounded-full h-2\">\r\n                      <div className={`h-2 rounded-full ${occupancyPercent >= 90 ? 'bg-red-600' : occupancyPercent >= 70 ? 'bg-yellow-600' : 'bg-green-600'}`} style={{ width: `${Math.min(occupancyPercent, 100)}%` }}></div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"mt-4 flex gap-2\">\r\n                  <button onClick={() => navigate(`/gaushala/sheds/edit/${shed.id}`)} className=\"flex-1 flex items-center justify-center gap-2 rounded-lg bg-gray-100 px-3 py-2 text-sm hover:bg-gray-200\">\r\n                    <Edit size={16} />Edit\r\n                  </button>\r\n                  <button onClick={() => shed.id && handleDelete(shed.id)} className=\"flex items-center justify-center rounded-lg bg-red-100 px-3 py-2 text-red-600 hover:bg-red-200\">\r\n                    <Trash2 size={16} />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n\r\n      {totalPages > 1 && (\r\n        <div className=\"mt-6 flex justify-center gap-2\">\r\n          <button onClick={() => setCurrentPage(Math.max(0, currentPage - 1))} disabled={currentPage === 0} className=\"px-4 py-2 border rounded disabled:opacity-50\">Previous</button>\r\n          <span className=\"px-4 py-2\">Page {currentPage + 1} of {totalPages}</span>\r\n          <button onClick={() => setCurrentPage(Math.min(totalPages - 1, currentPage + 1))} disabled={currentPage >= totalPages - 1} className=\"px-4 py-2 border rounded disabled:opacity-50\">Next</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","/**\r\n * Add Shed - Create new shed with capacity and facilities\r\n * 100% API-driven, NO hardcoded data\r\n */\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ArrowLeft, Save, Home } from 'lucide-react';\r\nimport { shedApi, type Shed } from '../../../services/gaushala/api';\r\nimport { getLoggedInUserGaushalaId } from '../../../utils/auth';\r\n\r\nexport default function AddShed() {\r\n  const navigate = useNavigate();\r\n  const [loading, setLoading] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    gaushalaId: 0,\r\n    shedName: '',\r\n    shedNumber: '',\r\n    capacity: 0,\r\n    currentOccupancy: 0,\r\n    shedType: '',\r\n    areaSqFt: 0,\r\n    ventilationType: '',\r\n    flooringType: '',\r\n    waterFacility: false,\r\n    feedingFacility: false,\r\n    status: 'ACTIVE',\r\n    notes: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    const gaushalaId = getLoggedInUserGaushalaId();\r\n    if (gaushalaId) {\r\n      setFormData(prev => ({ ...prev, gaushalaId }));\r\n    }\r\n  }, []);\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    if (!formData.shedName.trim() || !formData.shedNumber.trim()) {\r\n      alert('Please enter shed name and number');\r\n      return;\r\n    }\r\n    if (formData.capacity <= 0) {\r\n      alert('Capacity must be greater than 0');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      const response = await shedApi.createShed(formData);\r\n      if (response.success) {\r\n        alert('Shed created successfully!');\r\n        navigate('/gaushala/sheds');\r\n      } else {\r\n        alert('Failed to create shed: ' + response.error);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error creating shed:', error);\r\n      alert('Error creating shed');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleChange = (field: keyof typeof formData, value: string | number | boolean) => {\r\n    setFormData(prev => ({ ...prev, [field]: value }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-6 max-w-2xl mx-auto\">\r\n      <button onClick={() => navigate('/gaushala/sheds')} className=\"flex items-center gap-2 text-gray-600 hover:text-gray-900 mb-4\">\r\n        <ArrowLeft size={20} />Back to Sheds\r\n      </button>\r\n\r\n      <div className=\"flex items-center gap-3 mb-6\">\r\n        <div className=\"rounded-full bg-blue-100 p-3\">\r\n          <Home className=\"text-blue-600\" size={24} />\r\n        </div>\r\n        <h1 className=\"text-2xl font-bold\">Add New Shed</h1>\r\n      </div>\r\n\r\n      <form onSubmit={handleSubmit} className=\"bg-white rounded-lg shadow p-6 space-y-4\">\r\n        <div className=\"grid grid-cols-2 gap-4\">\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Shed Name *</label>\r\n            <input type=\"text\" value={formData.shedName} onChange={(e) => handleChange('shedName', e.target.value)} className=\"w-full rounded-lg border px-4 py-2\" required />\r\n          </div>\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Shed Number *</label>\r\n            <input type=\"text\" value={formData.shedNumber} onChange={(e) => handleChange('shedNumber', e.target.value)} className=\"w-full rounded-lg border px-4 py-2\" required />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-2 gap-4\">\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Capacity *</label>\r\n            <input type=\"number\" min=\"1\" value={formData.capacity} onChange={(e) => handleChange('capacity', parseInt(e.target.value) || 0)} className=\"w-full rounded-lg border px-4 py-2\" required />\r\n          </div>\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Current Occupancy</label>\r\n            <input type=\"number\" min=\"0\" value={formData.currentOccupancy} onChange={(e) => handleChange('currentOccupancy', parseInt(e.target.value) || 0)} className=\"w-full rounded-lg border px-4 py-2\" />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-2 gap-4\">\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Shed Type</label>\r\n            <select value={formData.shedType} onChange={(e) => handleChange('shedType', e.target.value)} className=\"w-full rounded-lg border px-4 py-2\">\r\n              <option value=\"\">Select type</option>\r\n              <option value=\"OPEN\">Open</option>\r\n              <option value=\"COVERED\">Covered</option>\r\n              <option value=\"SEMI_COVERED\">Semi-Covered</option>\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Area (sq ft)</label>\r\n            <input type=\"number\" min=\"0\" step=\"0.01\" value={formData.areaSqFt} onChange={(e) => handleChange('areaSqFt', parseFloat(e.target.value) || 0)} className=\"w-full rounded-lg border px-4 py-2\" />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-2 gap-4\">\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Ventilation Type</label>\r\n            <input type=\"text\" value={formData.ventilationType} onChange={(e) => handleChange('ventilationType', e.target.value)} className=\"w-full rounded-lg border px-4 py-2\" placeholder=\"e.g., Natural, Mechanical\" />\r\n          </div>\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Flooring Type</label>\r\n            <input type=\"text\" value={formData.flooringType} onChange={(e) => handleChange('flooringType', e.target.value)} className=\"w-full rounded-lg border px-4 py-2\" placeholder=\"e.g., Concrete, Earthen\" />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-2 gap-4\">\r\n          <div className=\"flex items-center gap-2\">\r\n            <input type=\"checkbox\" id=\"waterFacility\" checked={formData.waterFacility} onChange={(e) => handleChange('waterFacility', e.target.checked)} className=\"rounded\" />\r\n            <label htmlFor=\"waterFacility\" className=\"text-sm font-medium text-gray-700\">Water Facility</label>\r\n          </div>\r\n          <div className=\"flex items-center gap-2\">\r\n            <input type=\"checkbox\" id=\"feedingFacility\" checked={formData.feedingFacility} onChange={(e) => handleChange('feedingFacility', e.target.checked)} className=\"rounded\" />\r\n            <label htmlFor=\"feedingFacility\" className=\"text-sm font-medium text-gray-700\">Feeding Facility</label>\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">Status</label>\r\n          <select value={formData.status} onChange={(e) => handleChange('status', e.target.value)} className=\"w-full rounded-lg border px-4 py-2\">\r\n            <option value=\"ACTIVE\">Active</option>\r\n            <option value=\"MAINTENANCE\">Maintenance</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">Notes</label>\r\n          <textarea value={formData.notes} onChange={(e) => handleChange('notes', e.target.value)} className=\"w-full rounded-lg border px-4 py-2\" rows={3} placeholder=\"Additional notes...\"></textarea>\r\n        </div>\r\n\r\n        <div className=\"flex gap-4 pt-4\">\r\n          <button type=\"submit\" disabled={loading} className=\"flex-1 flex items-center justify-center gap-2 rounded-lg bg-blue-600 px-4 py-2 text-white hover:bg-blue-700 disabled:opacity-50\">\r\n            {loading ? 'Creating...' : <><Save size={20} />Create Shed</>}\r\n          </button>\r\n          <button type=\"button\" onClick={() => navigate('/gaushala/sheds')} className=\"px-6 py-2 border rounded-lg\">Cancel</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","/**\r\n * Edit Shed - Update existing shed details\r\n * Loads data from GET /api/v1/gaushala/sheds/{id} before rendering\r\n */\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { ArrowLeft, Save, Home } from 'lucide-react';\r\nimport { shedApi, type Shed } from '../../../services/gaushala/api';\r\n\r\nexport default function EditShed() {\r\n  const { id } = useParams<{ id: string }>();\r\n  const navigate = useNavigate();\r\n  const [loading, setLoading] = useState(true);\r\n  const [saving, setSaving] = useState(false);\r\n  const [formData, setFormData] = useState<Partial<Shed>>({});\r\n\r\n  useEffect(() => {\r\n    if (id) loadShed();\r\n  }, [id]);\r\n\r\n  const loadShed = async () => {\r\n    if (!id) return;\r\n    setLoading(true);\r\n    try {\r\n      const response = await shedApi.getShedById(parseInt(id));\r\n      if (response.success && response.data) {\r\n        setFormData(response.data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading shed:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!id) return;\r\n\r\n    setSaving(true);\r\n    try {\r\n      const response = await shedApi.updateShed(parseInt(id), formData);\r\n      if (response.success) {\r\n        alert('Shed updated successfully!');\r\n        navigate('/gaushala/sheds');\r\n      } else {\r\n        alert('Failed to update shed: ' + response.error);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating shed:', error);\r\n      alert('Error updating shed');\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  const handleChange = (field: keyof Shed, value: string | number | boolean) => {\r\n    setFormData(prev => ({ ...prev, [field]: value }));\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"flex justify-center items-center h-screen\"><div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div></div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-6 max-w-2xl mx-auto\">\r\n      <button onClick={() => navigate('/gaushala/sheds')} className=\"flex items-center gap-2 text-gray-600 hover:text-gray-900 mb-4\">\r\n        <ArrowLeft size={20} />Back\r\n      </button>\r\n\r\n      <div className=\"flex items-center gap-3 mb-6\">\r\n        <div className=\"rounded-full bg-blue-100 p-3\"><Home className=\"text-blue-600\" size={24} /></div>\r\n        <h1 className=\"text-2xl font-bold\">Edit Shed</h1>\r\n      </div>\r\n\r\n      <form onSubmit={handleSubmit} className=\"bg-white rounded-lg shadow p-6 space-y-4\">\r\n        <div className=\"grid grid-cols-2 gap-4\">\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Shed Name *</label>\r\n            <input type=\"text\" value={formData.shedName || ''} onChange={(e) => handleChange('shedName', e.target.value)} className=\"w-full rounded-lg border px-4 py-2\" required />\r\n          </div>\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Shed Number *</label>\r\n            <input type=\"text\" value={formData.shedNumber || ''} onChange={(e) => handleChange('shedNumber', e.target.value)} className=\"w-full rounded-lg border px-4 py-2\" required />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-2 gap-4\">\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Capacity *</label>\r\n            <input type=\"number\" min=\"1\" value={formData.capacity || 0} onChange={(e) => handleChange('capacity', parseInt(e.target.value))} className=\"w-full rounded-lg border px-4 py-2\" required />\r\n          </div>\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Current Occupancy</label>\r\n            <input type=\"number\" min=\"0\" value={formData.currentOccupancy || 0} onChange={(e) => handleChange('currentOccupancy', parseInt(e.target.value))} className=\"w-full rounded-lg border px-4 py-2\" />\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">Status</label>\r\n          <select value={formData.status || 'ACTIVE'} onChange={(e) => handleChange('status', e.target.value)} className=\"w-full rounded-lg border px-4 py-2\">\r\n            <option value=\"ACTIVE\">Active</option>\r\n            <option value=\"MAINTENANCE\">Maintenance</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">Notes</label>\r\n          <textarea value={formData.notes || ''} onChange={(e) => handleChange('notes', e.target.value)} className=\"w-full rounded-lg border px-4 py-2\" rows={3}></textarea>\r\n        </div>\r\n\r\n        <div className=\"flex gap-4 pt-4\">\r\n          <button type=\"submit\" disabled={saving} className=\"flex-1 flex items-center justify-center gap-2 rounded-lg bg-blue-600 px-4 py-2 text-white hover:bg-blue-700 disabled:opacity-50\">\r\n            <Save size={20} />{saving ? 'Saving...' : 'Save Changes'}\r\n          </button>\r\n          <button type=\"button\" onClick={() => navigate('/gaushala/sheds')} className=\"px-6 py-2 border rounded-lg\">Cancel</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","/**\r\n * Shed Capacity Dashboard - Analytics and utilization metrics\r\n * 100% API-driven, NO hardcoded data\r\n */\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ArrowLeft, Home, AlertCircle, TrendingUp, TrendingDown } from 'lucide-react';\r\nimport { shedApi, type Shed, type ShedCapacity } from '../../../services/gaushala/api';\r\nimport { getLoggedInUserGaushalaId } from '../../../utils/auth';\r\n\r\nexport default function ShedCapacityDashboard() {\r\n  const navigate = useNavigate();\r\n  const [sheds, setSheds] = useState<Shed[]>([]);\r\n  const [capacityData, setCapacityData] = useState<ShedCapacity | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    loadCapacityData();\r\n  }, []);\r\n\r\n  const loadCapacityData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const gaushalaId = getLoggedInUserGaushalaId();\r\n      if (!gaushalaId) {\r\n        console.error('No gaushala ID found');\r\n        return;\r\n      }\r\n\r\n      const [shedsResponse, capacityResponse] = await Promise.all([\r\n        shedApi.getAllSheds(0, 100),\r\n        shedApi.getAvailableCapacity(gaushalaId),\r\n      ]);\r\n\r\n      if (shedsResponse.success && shedsResponse.data) {\r\n        setSheds(shedsResponse.data.content);\r\n      }\r\n\r\n      if (capacityResponse.success && capacityResponse.data) {\r\n        setCapacityData(capacityResponse.data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading capacity data:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getUtilizationPercentage = (shed: Shed): number => {\r\n    if (shed.capacity === 0) return 0;\r\n    return (shed.currentOccupancy / shed.capacity) * 100;\r\n  };\r\n\r\n  const getUtilizationStatus = (percentage: number): { color: string; label: string } => {\r\n    if (percentage >= 90) return { color: 'bg-red-500', label: 'Critical' };\r\n    if (percentage >= 70) return { color: 'bg-yellow-500', label: 'High' };\r\n    if (percentage >= 50) return { color: 'bg-blue-500', label: 'Moderate' };\r\n    return { color: 'bg-green-500', label: 'Low' };\r\n  };\r\n\r\n  const overcrowdedSheds = sheds.filter(shed => getUtilizationPercentage(shed) >= 90);\r\n  const highUtilizationSheds = sheds.filter(shed => {\r\n    const util = getUtilizationPercentage(shed);\r\n    return util >= 70 && util < 90;\r\n  });\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex justify-center items-center h-screen\">\r\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <button\r\n        onClick={() => navigate('/gaushala/sheds')}\r\n        className=\"flex items-center gap-2 text-gray-600 hover:text-gray-900 mb-4\"\r\n      >\r\n        <ArrowLeft size={20} />\r\n        Back to Sheds\r\n      </button>\r\n\r\n      <div className=\"flex items-center gap-3 mb-6\">\r\n        <div className=\"rounded-full bg-blue-100 p-3\">\r\n          <Home className=\"text-blue-600\" size={24} />\r\n        </div>\r\n        <h1 className=\"text-2xl font-bold\">Shed Capacity Analytics</h1>\r\n      </div>\r\n\r\n      {/* Summary Stats */}\r\n      {capacityData && (\r\n        <div className=\"grid gap-4 md:grid-cols-4 mb-6\">\r\n          <div className=\"bg-white rounded-lg shadow p-6\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm text-gray-600\">Total Capacity</p>\r\n                <p className=\"text-2xl font-bold\">{capacityData.totalCapacity}</p>\r\n              </div>\r\n              <div className=\"rounded-full bg-blue-100 p-3\">\r\n                <Home className=\"text-blue-600\" size={20} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-white rounded-lg shadow p-6\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm text-gray-600\">Current Occupancy</p>\r\n                <p className=\"text-2xl font-bold\">{capacityData.totalOccupancy}</p>\r\n              </div>\r\n              <div className=\"rounded-full bg-green-100 p-3\">\r\n                <TrendingUp className=\"text-green-600\" size={20} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-white rounded-lg shadow p-6\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm text-gray-600\">Available Space</p>\r\n                <p className=\"text-2xl font-bold\">{capacityData.availableCapacity}</p>\r\n              </div>\r\n              <div className=\"rounded-full bg-purple-100 p-3\">\r\n                <TrendingDown className=\"text-purple-600\" size={20} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-white rounded-lg shadow p-6\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm text-gray-600\">Utilization Rate</p>\r\n                <p className=\"text-2xl font-bold\">\r\n                  {capacityData.utilizationPercentage.toFixed(1)}%\r\n                </p>\r\n              </div>\r\n              <div\r\n                className={`rounded-full p-3 ${\r\n                  capacityData.utilizationPercentage >= 90\r\n                    ? 'bg-red-100'\r\n                    : capacityData.utilizationPercentage >= 70\r\n                    ? 'bg-yellow-100'\r\n                    : 'bg-green-100'\r\n                }`}\r\n              >\r\n                <AlertCircle\r\n                  className={\r\n                    capacityData.utilizationPercentage >= 90\r\n                      ? 'text-red-600'\r\n                      : capacityData.utilizationPercentage >= 70\r\n                      ? 'text-yellow-600'\r\n                      : 'text-green-600'\r\n                  }\r\n                  size={20}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Alerts Section */}\r\n      {overcrowdedSheds.length > 0 && (\r\n        <div className=\"bg-red-50 border border-red-200 rounded-lg p-4 mb-6\">\r\n          <div className=\"flex items-center gap-2 mb-2\">\r\n            <AlertCircle className=\"text-red-600\" size={20} />\r\n            <h3 className=\"font-semibold text-red-900\">Overcrowded Sheds ({overcrowdedSheds.length})</h3>\r\n          </div>\r\n          <div className=\"space-y-2\">\r\n            {overcrowdedSheds.map(shed => (\r\n              <div key={shed.id} className=\"flex items-center justify-between text-sm\">\r\n                <span className=\"text-red-800\">\r\n                  {shed.shedName} ({shed.shedNumber})\r\n                </span>\r\n                <span className=\"font-medium text-red-900\">\r\n                  {getUtilizationPercentage(shed).toFixed(1)}% - {shed.currentOccupancy}/{shed.capacity}\r\n                </span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {highUtilizationSheds.length > 0 && (\r\n        <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-4 mb-6\">\r\n          <div className=\"flex items-center gap-2 mb-2\">\r\n            <AlertCircle className=\"text-yellow-600\" size={20} />\r\n            <h3 className=\"font-semibold text-yellow-900\">High Utilization Sheds ({highUtilizationSheds.length})</h3>\r\n          </div>\r\n          <div className=\"space-y-2\">\r\n            {highUtilizationSheds.map(shed => (\r\n              <div key={shed.id} className=\"flex items-center justify-between text-sm\">\r\n                <span className=\"text-yellow-800\">\r\n                  {shed.shedName} ({shed.shedNumber})\r\n                </span>\r\n                <span className=\"font-medium text-yellow-900\">\r\n                  {getUtilizationPercentage(shed).toFixed(1)}% - {shed.currentOccupancy}/{shed.capacity}\r\n                </span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Individual Shed Utilization */}\r\n      <div className=\"bg-white rounded-lg shadow p-6\">\r\n        <h3 className=\"font-semibold text-lg mb-4\">Shed Utilization Breakdown</h3>\r\n\r\n        {sheds.length === 0 ? (\r\n          <div className=\"text-center py-12 text-gray-600\">\r\n            <Home className=\"mx-auto text-gray-400 mb-4\" size={48} />\r\n            <p>No sheds found</p>\r\n          </div>\r\n        ) : (\r\n          <div className=\"space-y-4\">\r\n            {sheds.map(shed => {\r\n              const utilization = getUtilizationPercentage(shed);\r\n              const status = getUtilizationStatus(utilization);\r\n\r\n              return (\r\n                <div key={shed.id} className=\"border rounded-lg p-4\">\r\n                  <div className=\"flex items-center justify-between mb-3\">\r\n                    <div>\r\n                      <h4 className=\"font-semibold\">{shed.shedName}</h4>\r\n                      <p className=\"text-sm text-gray-600\">{shed.shedNumber}</p>\r\n                    </div>\r\n                    <div className=\"text-right\">\r\n                      <p className=\"text-sm text-gray-600\">Occupancy</p>\r\n                      <p className=\"font-semibold\">\r\n                        {shed.currentOccupancy} / {shed.capacity}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"mb-2\">\r\n                    <div className=\"flex items-center justify-between text-sm mb-1\">\r\n                      <span className=\"text-gray-600\">Utilization</span>\r\n                      <div className=\"flex items-center gap-2\">\r\n                        <span className={`px-2 py-0.5 rounded text-xs font-medium ${\r\n                          utilization >= 90 ? 'bg-red-100 text-red-800' :\r\n                          utilization >= 70 ? 'bg-yellow-100 text-yellow-800' :\r\n                          'bg-green-100 text-green-800'\r\n                        }`}>\r\n                          {status.label}\r\n                        </span>\r\n                        <span className=\"font-medium\">{utilization.toFixed(1)}%</span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"w-full bg-gray-200 rounded-full h-3\">\r\n                      <div\r\n                        className={`h-3 rounded-full transition-all ${status.color}`}\r\n                        style={{ width: `${Math.min(utilization, 100)}%` }}\r\n                      ></div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"grid grid-cols-3 gap-2 text-sm mt-3 pt-3 border-t\">\r\n                    <div>\r\n                      <p className=\"text-gray-600\">Type</p>\r\n                      <p className=\"font-medium\">{shed.shedType || 'N/A'}</p>\r\n                    </div>\r\n                    <div>\r\n                      <p className=\"text-gray-600\">Area</p>\r\n                      <p className=\"font-medium\">{shed.areaSqFt ? `${shed.areaSqFt} sq ft` : 'N/A'}</p>\r\n                    </div>\r\n                    <div>\r\n                      <p className=\"text-gray-600\">Status</p>\r\n                      <span className={`px-2 py-0.5 rounded text-xs font-medium ${\r\n                        shed.status === 'ACTIVE' ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\r\n                      }`}>\r\n                        {shed.status}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","/**\n * Inventory List - Main inventory management page\n * Displays paginated inventory with search, low-stock alerts, and CRUD operations\n * 100% API-driven with NO hardcoded data\n */\n\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  Search,\n  Plus,\n  Edit,\n  Trash2,\n  AlertTriangle,\n  Package,\n  TrendingDown,\n  ChevronLeft,\n  ChevronRight,\n  History,\n} from 'lucide-react';\nimport {\n  inventoryApi,\n  type Inventory,\n  type InventoryType,\n  type PagedResponse,\n} from '../../../services/gaushala/api';\n\nexport default function InventoryList() {\n  const navigate = useNavigate();\n\n  // State\n  const [inventory, setInventory] = useState<Inventory[]>([]);\n  const [inventoryTypes, setInventoryTypes] = useState<InventoryType[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [currentPage, setCurrentPage] = useState(0);\n  const [pageSize] = useState(20);\n  const [totalPages, setTotalPages] = useState(0);\n  const [totalElements, setTotalElements] = useState(0);\n\n  // Load inventory from API\n  useEffect(() => {\n    loadInventory();\n  }, [currentPage]);\n\n  // Load inventory types from API for filtering/display\n  useEffect(() => {\n    loadInventoryTypes();\n  }, []);\n\n  const loadInventory = async () => {\n    setLoading(true);\n    try {\n      const response = await inventoryApi.getAllInventory(currentPage, pageSize);\n      if (response.success && response.data) {\n        setInventory(response.data.content);\n        setTotalPages(response.data.totalPages);\n        setTotalElements(response.data.totalElements);\n      } else {\n        console.error('Failed to load inventory:', response.error);\n        setInventory([]);\n      }\n    } catch (error) {\n      console.error('Error loading inventory:', error);\n      setInventory([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const loadInventoryTypes = async () => {\n    try {\n      const response = await inventoryApi.getInventoryTypes();\n      if (response.success && response.data) {\n        setInventoryTypes(response.data);\n      }\n    } catch (error) {\n      console.error('Error loading inventory types:', error);\n    }\n  };\n\n  const handleSearch = async () => {\n    if (!searchTerm.trim()) {\n      loadInventory();\n      return;\n    }\n\n    setLoading(true);\n    try {\n      const response = await inventoryApi.searchInventory(searchTerm);\n      if (response.success && response.data) {\n        setInventory(response.data);\n        setTotalPages(1);\n        setTotalElements(response.data.length);\n      }\n    } catch (error) {\n      console.error('Error searching inventory:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDelete = async (id: number) => {\n    if (!confirm('Are you sure you want to delete this inventory item?')) {\n      return;\n    }\n\n    try {\n      const response = await inventoryApi.deleteInventory(id);\n      if (response.success) {\n        loadInventory(); // Reload from backend\n      } else {\n        alert('Failed to delete inventory item: ' + response.error);\n      }\n    } catch (error) {\n      console.error('Error deleting inventory:', error);\n      alert('Error deleting inventory item');\n    }\n  };\n\n  const getInventoryTypeName = (typeId: number): string => {\n    const type = inventoryTypes.find(t => t.id === typeId);\n    return type ? type.name : `Type ${typeId}`;\n  };\n\n  const isLowStock = (item: Inventory): boolean => {\n    return item.quantity <= item.minimumStockLevel || 0;\n  };\n\n  return (\n    <div className=\"p-6\">\n      {/* Header */}\n      <div className=\"mb-6 flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-gray-900\">Inventory Management</h1>\n          <p className=\"mt-1 text-sm text-gray-500\">\n            Manage inventory items, stock levels, and reorder points\n          </p>\n        </div>\n        <button\n          onClick={() => navigate('/gaushala/inventory/add')}\n          className=\"flex items-center gap-2 rounded-lg bg-blue-600 px-4 py-2 text-white hover:bg-blue-700\"\n        >\n          <Plus size={20} />\n          Add Item\n        </button>\n      </div>\n\n      {/* Search Bar */}\n      <div className=\"mb-6 flex gap-4\">\n        <div className=\"flex-1 flex gap-2\">\n          <input\n            type=\"text\"\n            placeholder=\"Search by item name...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            onKeyPress={(e) => e.key === 'Enter' && handleSearch()}\n            className=\"flex-1 rounded-lg border border-gray-300 px-4 py-2\"\n          />\n          <button\n            onClick={handleSearch}\n            className=\"flex items-center gap-2 rounded-lg bg-gray-100 px-4 py-2 hover:bg-gray-200\"\n          >\n            <Search size={20} />\n            Search\n          </button>\n        </div>\n      </div>\n\n      {/* Stats Cards */}\n      <div className=\"mb-6 grid grid-cols-1 md:grid-cols-3 gap-4\">\n        <div className=\"rounded-lg bg-white p-4 shadow border border-gray-200\">\n          <div className=\"flex items-center gap-3\">\n            <div className=\"rounded-full bg-blue-100 p-3\">\n              <Package className=\"text-blue-600\" size={24} />\n            </div>\n            <div>\n              <p className=\"text-sm text-gray-600\">Total Items</p>\n              <p className=\"text-2xl font-bold\">{totalElements}</p>\n            </div>\n          </div>\n        </div>\n        <div className=\"rounded-lg bg-white p-4 shadow border border-gray-200\">\n          <div className=\"flex items-center gap-3\">\n            <div className=\"rounded-full bg-red-100 p-3\">\n              <TrendingDown className=\"text-red-600\" size={24} />\n            </div>\n            <div>\n              <p className=\"text-sm text-gray-600\">Low Stock Items</p>\n              <p className=\"text-2xl font-bold\">{inventory.filter(isLowStock).length}</p>\n            </div>\n          </div>\n        </div>\n        <div className=\"rounded-lg bg-white p-4 shadow border border-gray-200\">\n          <div className=\"flex items-center gap-3\">\n            <div className=\"rounded-full bg-green-100 p-3\">\n              <Package className=\"text-green-600\" size={24} />\n            </div>\n            <div>\n              <p className=\"text-sm text-gray-600\">In Stock</p>\n              <p className=\"text-2xl font-bold\">{inventory.filter(item => !isLowStock(item)).length}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Inventory Table */}\n      {loading ? (\n        <div className=\"flex justify-center items-center py-12\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n        </div>\n      ) : inventory.length === 0 ? (\n        <div className=\"text-center py-12 bg-white rounded-lg shadow\">\n          <Package className=\"mx-auto text-gray-400\" size={48} />\n          <p className=\"mt-4 text-gray-600\">No inventory items found</p>\n          <button\n            onClick={() => navigate('/gaushala/inventory/add')}\n            className=\"mt-4 text-blue-600 hover:text-blue-700\"\n          >\n            Add your first item\n          </button>\n        </div>\n      ) : (\n        <div className=\"bg-white rounded-lg shadow overflow-hidden\">\n          <table className=\"min-w-full divide-y divide-gray-200\">\n            <thead className=\"bg-gray-50\">\n              <tr>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Item Name\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Type\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Quantity\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Reorder Level\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Status\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Actions\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white divide-y divide-gray-200\">\n              {inventory.map((item) => (\n                <tr key={item.id} className=\"hover:bg-gray-50\">\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <div className=\"text-sm font-medium text-gray-900\">{item.itemName || item.description || `Item #${item.id}`}</div>\n                    {item.supplier && (\n                      <div className=\"text-sm text-gray-500\">Supplier: {item.supplier}</div>\n                    )}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <span className=\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-blue-100 text-blue-800\">\n                      {getInventoryTypeName(item.inventoryTypeId)}\n                    </span>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <div className=\"text-sm text-gray-900\">{item.quantity || 0}</div>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <div className=\"text-sm text-gray-900\">{item.minimumStockLevel || 0}</div>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    {isLowStock(item) ? (\n                      <span className=\"flex items-center gap-1 text-red-600\">\n                        <AlertTriangle size={16} />\n                        Low Stock\n                      </span>\n                    ) : (\n                      <span className=\"text-green-600\">In Stock</span>\n                    )}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                    <div className=\"flex items-center gap-2\">\n                      <button\n                        onClick={() => navigate(`/gaushala/inventory/${item.id}/history`)}\n                        className=\"text-gray-600 hover:text-gray-900\"\n                        title=\"View Stock History\"\n                      >\n                        <History size={18} />\n                      </button>\n                      <button\n                        onClick={() => navigate(`/gaushala/inventory/edit/${item.id}`)}\n                        className=\"text-blue-600 hover:text-blue-900\"\n                        title=\"Edit\"\n                      >\n                        <Edit size={18} />\n                      </button>\n                      <button\n                        onClick={() => item.id && handleDelete(item.id)}\n                        className=\"text-red-600 hover:text-red-900\"\n                        title=\"Delete\"\n                      >\n                        <Trash2 size={18} />\n                      </button>\n                    </div>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n\n          {/* Pagination */}\n          <div className=\"bg-white px-4 py-3 flex items-center justify-between border-t border-gray-200 sm:px-6\">\n            <div className=\"flex-1 flex justify-between sm:hidden\">\n              <button\n                onClick={() => setCurrentPage(Math.max(0, currentPage - 1))}\n                disabled={currentPage === 0}\n                className=\"relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 disabled:opacity-50\"\n              >\n                Previous\n              </button>\n              <button\n                onClick={() => setCurrentPage(Math.min(totalPages - 1, currentPage + 1))}\n                disabled={currentPage >= totalPages - 1}\n                className=\"ml-3 relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 disabled:opacity-50\"\n              >\n                Next\n              </button>\n            </div>\n            <div className=\"hidden sm:flex-1 sm:flex sm:items-center sm:justify-between\">\n              <div>\n                <p className=\"text-sm text-gray-700\">\n                  Showing <span className=\"font-medium\">{currentPage * pageSize + 1}</span> to{' '}\n                  <span className=\"font-medium\">\n                    {Math.min((currentPage + 1) * pageSize, totalElements)}\n                  </span>{' '}\n                  of <span className=\"font-medium\">{totalElements}</span> results\n                </p>\n              </div>\n              <div>\n                <nav className=\"relative z-0 inline-flex rounded-md shadow-sm -space-x-px\">\n                  <button\n                    onClick={() => setCurrentPage(Math.max(0, currentPage - 1))}\n                    disabled={currentPage === 0}\n                    className=\"relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 disabled:opacity-50\"\n                  >\n                    <ChevronLeft size={20} />\n                  </button>\n                  <span className=\"relative inline-flex items-center px-4 py-2 border border-gray-300 bg-white text-sm font-medium text-gray-700\">\n                    Page {currentPage + 1} of {totalPages}\n                  </span>\n                  <button\n                    onClick={() => setCurrentPage(Math.min(totalPages - 1, currentPage + 1))}\n                    disabled={currentPage >= totalPages - 1}\n                    className=\"relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 disabled:opacity-50\"\n                  >\n                    <ChevronRight size={20} />\n                  </button>\n                </nav>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","/**\r\n * Add Inventory - Create new inventory item\r\n * Form with master data dropdowns loaded from API\r\n * 100% API-driven with NO hardcoded data\r\n */\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ArrowLeft, Save, Package } from 'lucide-react';\r\nimport {\r\n  inventoryApi,\r\n  type Inventory,\r\n  type InventoryType,\r\n  type InventoryUnit,\r\n} from '../../../services/gaushala/api';\r\nimport { getLoggedInUserGaushalaId } from '../../../utils/auth';\r\n\r\nexport default function AddInventory() {\r\n  const navigate = useNavigate();\r\n\r\n  // State\r\n  const [inventoryTypes, setInventoryTypes] = useState<InventoryType[]>([]);\r\n  const [inventoryUnits, setInventoryUnits] = useState<InventoryUnit[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    itemName: '',\r\n    inventoryTypeId: 0,\r\n    inventoryUnitId: 0,\r\n    quantity: 0,\r\n    minimumStockLevel: 0,  // Changed from reorderLevel to match backend\r\n    supplier: '',\r\n    gaushalaId: 1,  // Default to 1\r\n  });\r\n\r\n  // Load master data from API\r\n  useEffect(() => {\r\n    loadMasterData();\r\n    loadGaushalaId();\r\n  }, []);\r\n\r\n  const loadMasterData = async () => {\r\n    try {\r\n      const [typesResponse, unitsResponse] = await Promise.all([\r\n        inventoryApi.getInventoryTypes(),\r\n        inventoryApi.getInventoryUnits(),\r\n      ]);\r\n\r\n      if (typesResponse.success && typesResponse.data) {\r\n        setInventoryTypes(typesResponse.data);\r\n      }\r\n\r\n      if (unitsResponse.success && unitsResponse.data) {\r\n        setInventoryUnits(unitsResponse.data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading master data:', error);\r\n    }\r\n  };\r\n\r\n  const loadGaushalaId = () => {\r\n    const gaushalaId = getLoggedInUserGaushalaId();\r\n    // Always set gaushalaId - use from token or default to 1\r\n    setFormData(prev => ({ ...prev, gaushalaId: gaushalaId || 1 }));\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    // Validation\r\n    if (!formData.itemName.trim()) {\r\n      alert('Please enter item name');\r\n      return;\r\n    }\r\n    if (formData.inventoryTypeId === 0) {\r\n      alert('Please select inventory type');\r\n      return;\r\n    }\r\n    if (formData.inventoryUnitId === 0) {\r\n      alert('Please select unit');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      const response = await inventoryApi.createInventory(formData);\r\n\r\n      if (response.success) {\r\n        alert('Inventory item created successfully!');\r\n        navigate('/gaushala/inventory');\r\n      } else {\r\n        alert('Failed to create inventory item: ' + response.error);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error creating inventory:', error);\r\n      alert('Error creating inventory item');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleChange = (field: keyof typeof formData, value: string | number) => {\r\n    setFormData(prev => ({ ...prev, [field]: value }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-6 max-w-2xl mx-auto\">\r\n      {/* Header */}\r\n      <div className=\"mb-6\">\r\n        <button\r\n          onClick={() => navigate('/gaushala/inventory')}\r\n          className=\"flex items-center gap-2 text-gray-600 hover:text-gray-900 mb-4\"\r\n        >\r\n          <ArrowLeft size={20} />\r\n          Back to Inventory\r\n        </button>\r\n        <div className=\"flex items-center gap-3\">\r\n          <div className=\"rounded-full bg-blue-100 p-3\">\r\n            <Package className=\"text-blue-600\" size={24} />\r\n          </div>\r\n          <div>\r\n            <h1 className=\"text-2xl font-bold text-gray-900\">Add Inventory Item</h1>\r\n            <p className=\"text-sm text-gray-500\">Create a new inventory item</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Form */}\r\n      <form onSubmit={handleSubmit} className=\"bg-white rounded-lg shadow p-6 space-y-6\">\r\n        {/* Item Name */}\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n            Item Name <span className=\"text-red-500\">*</span>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            value={formData.itemName}\r\n            onChange={(e) => handleChange('itemName', e.target.value)}\r\n            className=\"w-full rounded-lg border border-gray-300 px-4 py-2 focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n            placeholder=\"Enter item name\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        {/* Inventory Type */}\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n            Inventory Type <span className=\"text-red-500\">*</span>\r\n          </label>\r\n          {inventoryTypes.length === 0 ? (\r\n            <div className=\"text-sm text-gray-500\">Loading types...</div>\r\n          ) : (\r\n            <select\r\n              value={formData.inventoryTypeId}\r\n              onChange={(e) => handleChange('inventoryTypeId', parseInt(e.target.value))}\r\n              className=\"w-full rounded-lg border border-gray-300 px-4 py-2 focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n              required\r\n            >\r\n              <option value={0}>Select inventory type</option>\r\n              {inventoryTypes.map((type) => (\r\n                <option key={type.id} value={type.id}>\r\n                  {type.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          )}\r\n        </div>\r\n\r\n        {/* Unit */}\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n            Unit <span className=\"text-red-500\">*</span>\r\n          </label>\r\n          {inventoryUnits.length === 0 ? (\r\n            <div className=\"text-sm text-gray-500\">Loading units...</div>\r\n          ) : (\r\n            <select\r\n              value={formData.inventoryUnitId}\r\n              onChange={(e) => handleChange('inventoryUnitId', parseInt(e.target.value))}\r\n              className=\"w-full rounded-lg border border-gray-300 px-4 py-2 focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n              required\r\n            >\r\n              <option value={0}>Select unit</option>\r\n              {inventoryUnits.map((unit) => (\r\n                <option key={unit.id} value={unit.id}>\r\n                  {unit.unitName} {unit.unitSymbol ? `(${unit.unitSymbol})` : ''}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          )}\r\n        </div>\r\n\r\n        {/* Quantity */}\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n            Initial Quantity <span className=\"text-red-500\">*</span>\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0\"\r\n            step=\"0.01\"\r\n            value={formData.quantity}\r\n            onChange={(e) => handleChange('quantity', parseFloat(e.target.value) || 0)}\r\n            className=\"w-full rounded-lg border border-gray-300 px-4 py-2 focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n            placeholder=\"Enter quantity\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        {/* Reorder Level */}\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n            Reorder Level <span className=\"text-red-500\">*</span>\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0\"\r\n            step=\"0.01\"\r\n            value={formData.minimumStockLevel}\r\n            onChange={(e) => handleChange('minimumStockLevel', parseFloat(e.target.value) || 0)}\r\n            className=\"w-full rounded-lg border border-gray-300 px-4 py-2 focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n            placeholder=\"Enter reorder level\"\r\n            required\r\n          />\r\n          <p className=\"mt-1 text-sm text-gray-500\">\r\n            Alert will be shown when quantity falls below this level\r\n          </p>\r\n        </div>\r\n\r\n        {/* Supplier (Optional) */}\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n            Supplier\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            value={formData.supplier}\r\n            onChange={(e) => handleChange('supplier', e.target.value)}\r\n            className=\"w-full rounded-lg border border-gray-300 px-4 py-2 focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n            placeholder=\"Enter supplier name (optional)\"\r\n          />\r\n        </div>\r\n\r\n        {/* Action Buttons */}\r\n        <div className=\"flex gap-4 pt-4\">\r\n          <button\r\n            type=\"submit\"\r\n            disabled={loading}\r\n            className=\"flex-1 flex items-center justify-center gap-2 rounded-lg bg-blue-600 px-4 py-2 text-white hover:bg-blue-700 disabled:opacity-50\"\r\n          >\r\n            {loading ? (\r\n              <>\r\n                <div className=\"animate-spin rounded-full h-5 w-5 border-b-2 border-white\"></div>\r\n                Creating...\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Save size={20} />\r\n                Create Inventory Item\r\n              </>\r\n            )}\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => navigate('/gaushala/inventory')}\r\n            className=\"px-6 py-2 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50\"\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}","/**\r\n * Edit Inventory - Update existing inventory item\r\n * Loads data from API before rendering form\r\n */\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { ArrowLeft, Save, Package } from 'lucide-react';\r\nimport {\r\n  inventoryApi,\r\n  type Inventory,\r\n  type InventoryType,\r\n  type InventoryUnit,\r\n} from '../../../services/gaushala/api';\r\n\r\nexport default function EditInventory() {\r\n  const { id } = useParams<{ id: string }>();\r\n  const navigate = useNavigate();\r\n\r\n  const [inventoryTypes, setInventoryTypes] = useState<InventoryType[]>([]);\r\n  const [inventoryUnits, setInventoryUnits] = useState<InventoryUnit[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [saving, setSaving] = useState(false);\r\n  const [formData, setFormData] = useState<Partial<Inventory>>({});\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, [id]);\r\n\r\n  const loadData = async () => {\r\n    if (!id) return;\r\n\r\n    setLoading(true);\r\n    try {\r\n      const [inventoryResponse, typesResponse, unitsResponse] = await Promise.all([\r\n        inventoryApi.getInventoryById(parseInt(id)),\r\n        inventoryApi.getInventoryTypes(),\r\n        inventoryApi.getInventoryUnits(),\r\n      ]);\r\n\r\n      if (inventoryResponse.success && inventoryResponse.data) {\r\n        setFormData(inventoryResponse.data);\r\n      }\r\n      if (typesResponse.success && typesResponse.data) {\r\n        setInventoryTypes(typesResponse.data);\r\n      }\r\n      if (unitsResponse.success && unitsResponse.data) {\r\n        setInventoryUnits(unitsResponse.data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading data:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    if (!id) return;\r\n\r\n    setSaving(true);\r\n    try {\r\n      const response = await inventoryApi.updateInventory(parseInt(id), formData);\r\n\r\n      if (response.success) {\r\n        alert('Inventory updated successfully!');\r\n        navigate('/gaushala/inventory');\r\n      } else {\r\n        alert('Failed to update inventory: ' + response.error);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating inventory:', error);\r\n      alert('Error updating inventory');\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  const handleChange = (field: keyof Inventory, value: string | number) => {\r\n    setFormData(prev => ({ ...prev, [field]: value }));\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex justify-center items-center h-screen\">\r\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-6 max-w-2xl mx-auto\">\r\n      <button\r\n        onClick={() => navigate('/gaushala/inventory')}\r\n        className=\"flex items-center gap-2 text-gray-600 hover:text-gray-900 mb-4\"\r\n      >\r\n        <ArrowLeft size={20} />\r\n        Back\r\n      </button>\r\n\r\n      <div className=\"flex items-center gap-3 mb-6\">\r\n        <div className=\"rounded-full bg-blue-100 p-3\">\r\n          <Package className=\"text-blue-600\" size={24} />\r\n        </div>\r\n        <h1 className=\"text-2xl font-bold\">Edit Inventory</h1>\r\n      </div>\r\n\r\n      <form onSubmit={handleSubmit} className=\"bg-white rounded-lg shadow p-6 space-y-4\">\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">Item Name *</label>\r\n          <input\r\n            type=\"text\"\r\n            value={formData.itemName || ''}\r\n            onChange={(e) => handleChange('itemName', e.target.value)}\r\n            className=\"w-full rounded-lg border px-4 py-2\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">Type *</label>\r\n          <select\r\n            value={formData.inventoryTypeId || 0}\r\n            onChange={(e) => handleChange('inventoryTypeId', parseInt(e.target.value))}\r\n            className=\"w-full rounded-lg border px-4 py-2\"\r\n            required\r\n          >\r\n            {inventoryTypes.map((type) => (\r\n              <option key={type.id} value={type.id}>{type.typeName}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">Unit *</label>\r\n          <select\r\n            value={formData.inventoryUnitId || 0}\r\n            onChange={(e) => handleChange('inventoryUnitId', parseInt(e.target.value))}\r\n            className=\"w-full rounded-lg border px-4 py-2\"\r\n            required\r\n          >\r\n            {inventoryUnits.map((unit) => (\r\n              <option key={unit.id} value={unit.id}>{unit.unitName}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">Quantity *</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0\"\r\n            value={formData.quantity || 0}\r\n            onChange={(e) => handleChange('quantity', parseFloat(e.target.value))}\r\n            className=\"w-full rounded-lg border px-4 py-2\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">Reorder Level *</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0\"\r\n            value={formData.reorderLevel || 0}\r\n            onChange={(e) => handleChange('reorderLevel', parseFloat(e.target.value))}\r\n            className=\"w-full rounded-lg border px-4 py-2\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">Supplier</label>\r\n          <input\r\n            type=\"text\"\r\n            value={formData.supplier || ''}\r\n            onChange={(e) => handleChange('supplier', e.target.value)}\r\n            className=\"w-full rounded-lg border px-4 py-2\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"flex gap-4 pt-4\">\r\n          <button\r\n            type=\"submit\"\r\n            disabled={saving}\r\n            className=\"flex-1 flex items-center justify-center gap-2 rounded-lg bg-blue-600 px-4 py-2 text-white hover:bg-blue-700 disabled:opacity-50\"\r\n          >\r\n            <Save size={20} />\r\n            {saving ? 'Saving...' : 'Save Changes'}\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => navigate('/gaushala/inventory')}\r\n            className=\"px-6 py-2 border rounded-lg\"\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","/**\r\n * Inventory Stock History - View stock transactions for an inventory item\r\n * Displays transaction history from backend API with date filtering\r\n */\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { ArrowLeft, TrendingUp, TrendingDown, Calendar } from 'lucide-react';\r\nimport {\r\n  inventoryApi,\r\n  type Inventory,\r\n  type StockTransaction,\r\n} from '../../../services/gaushala/api';\r\n\r\nexport default function InventoryStockHistory() {\r\n  const { id } = useParams<{ id: string }>();\r\n  const navigate = useNavigate();\r\n\r\n  const [inventory, setInventory] = useState<Inventory | null>(null);\r\n  const [transactions, setTransactions] = useState<StockTransaction[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, [id]);\r\n\r\n  const loadData = async () => {\r\n    if (!id) return;\r\n\r\n    setLoading(true);\r\n    try {\r\n      const [inventoryResponse, historyResponse] = await Promise.all([\r\n        inventoryApi.getInventoryById(parseInt(id)),\r\n        inventoryApi.getStockHistory(parseInt(id)),\r\n      ]);\r\n\r\n      if (inventoryResponse.success && inventoryResponse.data) {\r\n        setInventory(inventoryResponse.data);\r\n      }\r\n      if (historyResponse.success && historyResponse.data) {\r\n        setTransactions(historyResponse.data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading data:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex justify-center items-center h-screen\">\r\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <button\r\n        onClick={() => navigate('/gaushala/inventory')}\r\n        className=\"flex items-center gap-2 text-gray-600 hover:text-gray-900 mb-4\"\r\n      >\r\n        <ArrowLeft size={20} />\r\n        Back to Inventory\r\n      </button>\r\n\r\n      {inventory && (\r\n        <div className=\"mb-6\">\r\n          <h1 className=\"text-2xl font-bold\">{inventory.itemName}</h1>\r\n          <p className=\"text-gray-600\">Stock Transaction History</p>\r\n          <div className=\"mt-2 text-sm text-gray-500\">\r\n            Current Stock: <span className=\"font-semibold\">{inventory.quantity}</span>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {transactions.length === 0 ? (\r\n        <div className=\"text-center py-12 bg-white rounded-lg shadow\">\r\n          <Calendar className=\"mx-auto text-gray-400\" size={48} />\r\n          <p className=\"mt-4 text-gray-600\">No transactions found</p>\r\n        </div>\r\n      ) : (\r\n        <div className=\"bg-white rounded-lg shadow overflow-hidden\">\r\n          <table className=\"min-w-full divide-y divide-gray-200\">\r\n            <thead className=\"bg-gray-50\">\r\n              <tr>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Date</th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Type</th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Quantity</th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Performed By</th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">Notes</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"divide-y divide-gray-200\">\r\n              {transactions.map((tx, index) => (\r\n                <tr key={index} className=\"hover:bg-gray-50\">\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                    {new Date(tx.transactionDate).toLocaleDateString()}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                    <div className=\"flex items-center gap-2\">\r\n                      {tx.transactionType === 'IN' ? (\r\n                        <>\r\n                          <TrendingUp className=\"text-green-600\" size={18} />\r\n                          <span className=\"text-green-600 font-medium\">Stock In</span>\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <TrendingDown className=\"text-red-600\" size={18} />\r\n                          <span className=\"text-red-600 font-medium\">Stock Out</span>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                    {tx.quantity}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                    {tx.performedBy || 'N/A'}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 text-sm text-gray-500\">\r\n                    {tx.notes || '-'}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","/**\n * Milk Production List - Display all milk production records\n * 100% API-driven, NO hardcoded data\n */\n\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Plus, Edit, Trash2, Milk, TrendingUp } from 'lucide-react';\nimport { milkProductionApi, type MilkRecord, type PagedResponse } from '../../../services/gaushala/api';\n\nexport default function MilkProductionList() {\n  const navigate = useNavigate();\n  const [records, setRecords] = useState<MilkRecord[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [currentPage, setCurrentPage] = useState(0);\n  const [totalPages, setTotalPages] = useState(0);\n  const [totalElements, setTotalElements] = useState(0);\n  const pageSize = 20;\n\n  useEffect(() => {\n    loadRecords();\n  }, [currentPage]);\n\n  const loadRecords = async () => {\n    setLoading(true);\n    try {\n      const response = await milkProductionApi.getAllMilkRecords(currentPage, pageSize);\n      if (response.success && response.data) {\n        setRecords(response.data.content);\n        setTotalPages(response.data.totalPages);\n        setTotalElements(response.data.totalElements);\n      } else {\n        setRecords([]);\n      }\n    } catch (error) {\n      console.error('Error loading milk records:', error);\n      setRecords([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDelete = async (id: number) => {\n    if (!confirm('Delete this milk production record?')) return;\n    try {\n      const response = await milkProductionApi.deleteMilkRecord(id);\n      if (response.success) {\n        loadRecords();\n      } else {\n        alert('Failed to delete record: ' + response.error);\n      }\n    } catch (error) {\n      console.error('Error deleting record:', error);\n      alert('Error deleting record');\n    }\n  };\n\n  const getQualityBadgeColor = (quality?: string): string => {\n    switch (quality?.toUpperCase()) {\n      case 'EXCELLENT':\n        return 'bg-green-100 text-green-800';\n      case 'GOOD':\n        return 'bg-blue-100 text-blue-800';\n      case 'AVERAGE':\n        return 'bg-yellow-100 text-yellow-800';\n      case 'POOR':\n        return 'bg-red-100 text-red-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const formatDate = (dateString: string): string => {\n    return new Date(dateString).toLocaleDateString('en-IN');\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex justify-center items-center h-screen\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-6\">\n      <div className=\"mb-6 flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-2xl font-bold\">Milk Production Records</h1>\n          <p className=\"text-gray-600 mt-1\">Total: {totalElements} records</p>\n        </div>\n        <button\n          onClick={() => navigate('/gaushala/production/record')}\n          className=\"flex items-center gap-2 rounded-lg bg-blue-600 px-4 py-2 text-white hover:bg-blue-700\"\n        >\n          <Plus size={20} />\n          Record Production\n        </button>\n      </div>\n\n      {records.length === 0 ? (\n        <div className=\"text-center py-12 bg-white rounded-lg shadow\">\n          <Milk className=\"mx-auto text-gray-400\" size={48} />\n          <p className=\"mt-4 text-gray-600\">No milk production records found</p>\n          <button\n            onClick={() => navigate('/gaushala/production/record')}\n            className=\"mt-4 text-blue-600 hover:text-blue-700\"\n          >\n            Record your first production\n          </button>\n        </div>\n      ) : (\n        <>\n          <div className=\"bg-white rounded-lg shadow overflow-hidden\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Date\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Cow ID\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Morning (L)\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Evening (L)\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Total (L)\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Fat %\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Quality\n                  </th>\n                  <th className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Actions\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {records.map((record) => (\n                  <tr key={record.id} className=\"hover:bg-gray-50\">\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                      {record.createdAt && formatDate(record.createdAt)}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                      {record.cowId ? `#${record.cowId}` : '-'}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                      {record.milkQuantity ? (record.milkQuantity / 2).toFixed(2) : '-'}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                      {record.milkQuantity ? (record.milkQuantity / 2).toFixed(2) : '-'}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n                      {record.milkQuantity ? record.milkQuantity.toFixed(2) : '-'}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                      {record.fatPercentage ? `${record.fatPercentage.toFixed(1)}%` : '-'}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      {record.status ? (\n                        <span className={`px-2 py-1 rounded text-xs font-medium ${getQualityBadgeColor(record.status)}`}>\n                          {record.status}\n                        </span>\n                      ) : (\n                        <span className=\"text-gray-400 text-sm\">-</span>\n                      )}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                      <div className=\"flex justify-end gap-2\">\n                        <button\n                          onClick={() => navigate(`/gaushala/production/edit/${record.id}`)}\n                          className=\"text-blue-600 hover:text-blue-900\"\n                        >\n                          <Edit size={16} />\n                        </button>\n                        <button\n                          onClick={() => record.id && handleDelete(record.id)}\n                          className=\"text-red-600 hover:text-red-900\"\n                        >\n                          <Trash2 size={16} />\n                        </button>\n                      </div>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n\n          {totalPages > 1 && (\n            <div className=\"mt-6 flex justify-center items-center gap-4\">\n              <button\n                onClick={() => setCurrentPage(Math.max(0, currentPage - 1))}\n                disabled={currentPage === 0}\n                className=\"px-4 py-2 border rounded disabled:opacity-50 disabled:cursor-not-allowed hover:bg-gray-50\"\n              >\n                Previous\n              </button>\n              <span className=\"text-gray-700\">\n                Page {currentPage + 1} of {totalPages}\n              </span>\n              <button\n                onClick={() => setCurrentPage(Math.min(totalPages - 1, currentPage + 1))}\n                disabled={currentPage >= totalPages - 1}\n                className=\"px-4 py-2 border rounded disabled:opacity-50 disabled:cursor-not-allowed hover:bg-gray-50\"\n              >\n                Next\n              </button>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n","/**\r\n * Record Milk Production - Create new milk production record\r\n * 100% API-driven, NO hardcoded data\r\n */\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ArrowLeft, Save, Milk } from 'lucide-react';\r\nimport { milkProductionApi, cattleApi, type MilkRecord, type Cattle } from '../../../services/gaushala/api';\r\nimport { getLoggedInUserGaushalaId } from '../../../utils/auth';\r\n\r\nexport default function RecordMilkProduction() {\r\n  const navigate = useNavigate();\r\n  const [loading, setLoading] = useState(false);\r\n  const [cattle, setCattle] = useState<Cattle[]>([]);\r\n  const [loadingCattle, setLoadingCattle] = useState(true);\r\n  const [formData, setFormData] = useState<Partial<MilkRecord>>({\r\n    cowId: 0,\r\n    gaushalaId: 0,\r\n    recordDate: new Date().toISOString().split('T')[0],\r\n    morningQuantity: 0,\r\n    eveningQuantity: 0,\r\n    fatPercentage: 0,\r\n    snfPercentage: 0,\r\n    quality: 'GOOD',\r\n    notes: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    const gaushalaId = getLoggedInUserGaushalaId();\r\n    if (gaushalaId) {\r\n      setFormData((prev) => ({ ...prev, gaushalaId }));\r\n      loadCattle();\r\n    }\r\n  }, []);\r\n\r\n  const loadCattle = async () => {\r\n    setLoadingCattle(true);\r\n    try {\r\n      // Load cattle list - filter for milking cows if possible\r\n      const response = await cattleApi.getAllCattle(0, 100);\r\n      if (response.success && response.data) {\r\n        setCattle(response.data.content);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading cattle:', error);\r\n    } finally {\r\n      setLoadingCattle(false);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    if (!formData.cowId || formData.cowId === 0) {\r\n      alert('Please select a cow');\r\n      return;\r\n    }\r\n    if (!formData.recordDate) {\r\n      alert('Please select a date');\r\n      return;\r\n    }\r\n    if (formData.morningQuantity! < 0 || formData.eveningQuantity! < 0) {\r\n      alert('Quantities cannot be negative');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      const response = await milkProductionApi.createMilkRecord(formData as MilkRecord);\r\n      if (response.success) {\r\n        alert('Milk production record created successfully!');\r\n        navigate('/gaushala/production');\r\n      } else {\r\n        alert('Failed to create record: ' + response.error);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error creating record:', error);\r\n      alert('Error creating record');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleChange = (field: keyof MilkRecord, value: string | number) => {\r\n    setFormData((prev) => ({ ...prev, [field]: value }));\r\n  };\r\n\r\n  const calculateTotal = (): number => {\r\n    return (formData.morningQuantity || 0) + (formData.eveningQuantity || 0);\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-6 max-w-2xl mx-auto\">\r\n      <button\r\n        onClick={() => navigate('/gaushala/production')}\r\n        className=\"flex items-center gap-2 text-gray-600 hover:text-gray-900 mb-4\"\r\n      >\r\n        <ArrowLeft size={20} />\r\n        Back to Records\r\n      </button>\r\n\r\n      <div className=\"flex items-center gap-3 mb-6\">\r\n        <div className=\"rounded-full bg-blue-100 p-3\">\r\n          <Milk className=\"text-blue-600\" size={24} />\r\n        </div>\r\n        <h1 className=\"text-2xl font-bold\">Record Milk Production</h1>\r\n      </div>\r\n\r\n      <form onSubmit={handleSubmit} className=\"bg-white rounded-lg shadow p-6 space-y-4\">\r\n        <div className=\"grid grid-cols-2 gap-4\">\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              Select Cow *\r\n            </label>\r\n            {loadingCattle ? (\r\n              <div className=\"text-sm text-gray-500\">Loading cattle...</div>\r\n            ) : (\r\n              <select\r\n                value={formData.cowId}\r\n                onChange={(e) => handleChange('cowId', parseInt(e.target.value))}\r\n                className=\"w-full rounded-lg border px-4 py-2\"\r\n                required\r\n              >\r\n                <option value={0}>Select a cow</option>\r\n                {cattle.map((cow) => (\r\n                  <option key={cow.id} value={cow.id}>\r\n                    {cow.rfidTagNo} - {cow.name || `Cow #${cow.id}`}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            )}\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              Record Date *\r\n            </label>\r\n            <input\r\n              type=\"date\"\r\n              value={formData.recordDate}\r\n              onChange={(e) => handleChange('recordDate', e.target.value)}\r\n              className=\"w-full rounded-lg border px-4 py-2\"\r\n              required\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-2 gap-4\">\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              Morning Quantity (Liters) *\r\n            </label>\r\n            <input\r\n              type=\"number\"\r\n              min=\"0\"\r\n              step=\"0.1\"\r\n              value={formData.morningQuantity}\r\n              onChange={(e) => handleChange('morningQuantity', parseFloat(e.target.value) || 0)}\r\n              className=\"w-full rounded-lg border px-4 py-2\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              Evening Quantity (Liters) *\r\n            </label>\r\n            <input\r\n              type=\"number\"\r\n              min=\"0\"\r\n              step=\"0.1\"\r\n              value={formData.eveningQuantity}\r\n              onChange={(e) => handleChange('eveningQuantity', parseFloat(e.target.value) || 0)}\r\n              className=\"w-full rounded-lg border px-4 py-2\"\r\n              required\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <span className=\"text-sm font-medium text-blue-900\">Total Quantity:</span>\r\n            <span className=\"text-xl font-bold text-blue-900\">{calculateTotal().toFixed(2)} L</span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-2 gap-4\">\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              Fat Percentage\r\n            </label>\r\n            <input\r\n              type=\"number\"\r\n              min=\"0\"\r\n              max=\"100\"\r\n              step=\"0.1\"\r\n              value={formData.fatPercentage}\r\n              onChange={(e) => handleChange('fatPercentage', parseFloat(e.target.value) || 0)}\r\n              className=\"w-full rounded-lg border px-4 py-2\"\r\n              placeholder=\"e.g., 4.5\"\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              SNF Percentage\r\n            </label>\r\n            <input\r\n              type=\"number\"\r\n              min=\"0\"\r\n              max=\"100\"\r\n              step=\"0.1\"\r\n              value={formData.snfPercentage}\r\n              onChange={(e) => handleChange('snfPercentage', parseFloat(e.target.value) || 0)}\r\n              className=\"w-full rounded-lg border px-4 py-2\"\r\n              placeholder=\"e.g., 8.5\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n            Quality\r\n          </label>\r\n          <select\r\n            value={formData.quality}\r\n            onChange={(e) => handleChange('quality', e.target.value)}\r\n            className=\"w-full rounded-lg border px-4 py-2\"\r\n          >\r\n            <option value=\"EXCELLENT\">Excellent</option>\r\n            <option value=\"GOOD\">Good</option>\r\n            <option value=\"AVERAGE\">Average</option>\r\n            <option value=\"POOR\">Poor</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n            Notes\r\n          </label>\r\n          <textarea\r\n            value={formData.notes}\r\n            onChange={(e) => handleChange('notes', e.target.value)}\r\n            className=\"w-full rounded-lg border px-4 py-2\"\r\n            rows={3}\r\n            placeholder=\"Additional notes about this production record...\"\r\n          ></textarea>\r\n        </div>\r\n\r\n        <div className=\"flex gap-4 pt-4\">\r\n          <button\r\n            type=\"submit\"\r\n            disabled={loading}\r\n            className=\"flex-1 flex items-center justify-center gap-2 rounded-lg bg-blue-600 px-4 py-2 text-white hover:bg-blue-700 disabled:opacity-50\"\r\n          >\r\n            {loading ? (\r\n              'Saving...'\r\n            ) : (\r\n              <>\r\n                <Save size={20} />\r\n                Save Record\r\n              </>\r\n            )}\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => navigate('/gaushala/production')}\r\n            className=\"px-6 py-2 border rounded-lg hover:bg-gray-50\"\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","/**\r\n * Milk Analytics - Production statistics and insights\r\n * 100% API-driven, NO hardcoded data\r\n */\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ArrowLeft, TrendingUp, Droplet, Award, Calendar } from 'lucide-react';\r\nimport { milkProductionApi, type MilkProductionStats } from '../../../services/gaushala/api';\r\nimport { getLoggedInUserGaushalaId } from '../../../utils/auth';\r\n\r\nexport default function MilkAnalytics() {\r\n  const navigate = useNavigate();\r\n  const [loading, setLoading] = useState(true);\r\n  const [stats, setStats] = useState<MilkProductionStats | null>(null);\r\n  const [dateRange, setDateRange] = useState({\r\n    startDate: '',\r\n    endDate: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    loadStats();\r\n  }, [dateRange]);\r\n\r\n  const loadStats = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const gaushalaId = getLoggedInUserGaushalaId();\r\n      if (!gaushalaId) {\r\n        console.error('No gaushala ID found');\r\n        return;\r\n      }\r\n\r\n      const response = await milkProductionApi.getMilkProductionStats(\r\n        gaushalaId,\r\n        dateRange.startDate || undefined,\r\n        dateRange.endDate || undefined\r\n      );\r\n\r\n      if (response.success && response.data) {\r\n        setStats(response.data);\r\n      } else {\r\n        setStats(null);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading stats:', error);\r\n      setStats(null);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDateRangeChange = (field: 'startDate' | 'endDate', value: string) => {\r\n    setDateRange((prev) => ({ ...prev, [field]: value }));\r\n  };\r\n\r\n  const clearDateRange = () => {\r\n    setDateRange({ startDate: '', endDate: '' });\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex justify-center items-center h-screen\">\r\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <button\r\n        onClick={() => navigate('/gaushala/production')}\r\n        className=\"flex items-center gap-2 text-gray-600 hover:text-gray-900 mb-4\"\r\n      >\r\n        <ArrowLeft size={20} />\r\n        Back to Records\r\n      </button>\r\n\r\n      <div className=\"flex items-center gap-3 mb-6\">\r\n        <div className=\"rounded-full bg-blue-100 p-3\">\r\n          <TrendingUp className=\"text-blue-600\" size={24} />\r\n        </div>\r\n        <h1 className=\"text-2xl font-bold\">Milk Production Analytics</h1>\r\n      </div>\r\n\r\n      {/* Date Range Filter */}\r\n      <div className=\"bg-white rounded-lg shadow p-6 mb-6\">\r\n        <div className=\"flex items-center gap-4 mb-4\">\r\n          <Calendar className=\"text-gray-600\" size={20} />\r\n          <h3 className=\"font-semibold\">Date Range Filter</h3>\r\n        </div>\r\n        <div className=\"grid grid-cols-3 gap-4\">\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              Start Date\r\n            </label>\r\n            <input\r\n              type=\"date\"\r\n              value={dateRange.startDate}\r\n              onChange={(e) => handleDateRangeChange('startDate', e.target.value)}\r\n              className=\"w-full rounded-lg border px-4 py-2\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              End Date\r\n            </label>\r\n            <input\r\n              type=\"date\"\r\n              value={dateRange.endDate}\r\n              onChange={(e) => handleDateRangeChange('endDate', e.target.value)}\r\n              className=\"w-full rounded-lg border px-4 py-2\"\r\n            />\r\n          </div>\r\n          <div className=\"flex items-end\">\r\n            <button\r\n              onClick={clearDateRange}\r\n              className=\"w-full px-4 py-2 border rounded-lg hover:bg-gray-50\"\r\n            >\r\n              Clear Filter\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Statistics Cards */}\r\n      {stats ? (\r\n        <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-4\">\r\n          <div className=\"bg-white rounded-lg shadow p-6\">\r\n            <div className=\"flex items-center justify-between mb-4\">\r\n              <div className=\"rounded-full bg-blue-100 p-3\">\r\n                <Droplet className=\"text-blue-600\" size={24} />\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <p className=\"text-sm text-gray-600 mb-1\">Total Production</p>\r\n              <p className=\"text-3xl font-bold text-gray-900\">\r\n                {stats.totalQuantity.toFixed(2)} L\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-white rounded-lg shadow p-6\">\r\n            <div className=\"flex items-center justify-between mb-4\">\r\n              <div className=\"rounded-full bg-green-100 p-3\">\r\n                <TrendingUp className=\"text-green-600\" size={24} />\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <p className=\"text-sm text-gray-600 mb-1\">Average Fat %</p>\r\n              <p className=\"text-3xl font-bold text-gray-900\">\r\n                {stats.averageFatPercentage.toFixed(2)}%\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-white rounded-lg shadow p-6\">\r\n            <div className=\"flex items-center justify-between mb-4\">\r\n              <div className=\"rounded-full bg-purple-100 p-3\">\r\n                <Award className=\"text-purple-600\" size={24} />\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <p className=\"text-sm text-gray-600 mb-1\">Average SNF %</p>\r\n              <p className=\"text-3xl font-bold text-gray-900\">\r\n                {stats.averageSnfPercentage.toFixed(2)}%\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-white rounded-lg shadow p-6\">\r\n            <div className=\"flex items-center justify-between mb-4\">\r\n              <div className=\"rounded-full bg-yellow-100 p-3\">\r\n                <Calendar className=\"text-yellow-600\" size={24} />\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <p className=\"text-sm text-gray-600 mb-1\">Total Records</p>\r\n              <p className=\"text-3xl font-bold text-gray-900\">{stats.recordCount}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"text-center py-12 bg-white rounded-lg shadow\">\r\n          <Droplet className=\"mx-auto text-gray-400\" size={48} />\r\n          <p className=\"mt-4 text-gray-600\">No production data available</p>\r\n          {(dateRange.startDate || dateRange.endDate) && (\r\n            <button\r\n              onClick={clearDateRange}\r\n              className=\"mt-4 text-blue-600 hover:text-blue-700\"\r\n            >\r\n              Clear date filter to see all data\r\n            </button>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Additional Insights */}\r\n      {stats && stats.recordCount > 0 && (\r\n        <div className=\"mt-6 bg-white rounded-lg shadow p-6\">\r\n          <h3 className=\"font-semibold text-lg mb-4\">Production Insights</h3>\r\n          <div className=\"grid gap-4 md:grid-cols-2\">\r\n            <div className=\"border rounded-lg p-4\">\r\n              <p className=\"text-sm text-gray-600 mb-2\">Average per Record</p>\r\n              <p className=\"text-2xl font-bold text-blue-600\">\r\n                {(stats.totalQuantity / stats.recordCount).toFixed(2)} L\r\n              </p>\r\n            </div>\r\n            <div className=\"border rounded-lg p-4\">\r\n              <p className=\"text-sm text-gray-600 mb-2\">Quality Index</p>\r\n              <p className=\"text-2xl font-bold text-green-600\">\r\n                {((stats.averageFatPercentage + stats.averageSnfPercentage) / 2).toFixed(2)}%\r\n              </p>\r\n              <p className=\"text-xs text-gray-500 mt-1\">Combined Fat & SNF average</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","/**\r\n * Medical Records List - Display health records with pending vaccinations\r\n * 100% API-driven, NO hardcoded data\r\n */\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { Plus, Heart, AlertCircle, Calendar, Syringe } from 'lucide-react';\r\nimport { healthRecordsApi, type HealthRecord } from '../../../services/gaushala/api';\r\n\r\nexport default function MedicalRecordsList() {\r\n  const { cattleId } = useParams<{ cattleId?: string }>();\r\n  const navigate = useNavigate();\r\n  const [records, setRecords] = useState<HealthRecord[]>([]);\r\n  const [pendingVaccinations, setPendingVaccinations] = useState<HealthRecord[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    loadRecords();\r\n    loadPendingVaccinations();\r\n  }, [cattleId]);\r\n\r\n  const loadRecords = async () => {\r\n    setLoading(true);\r\n    try {\r\n      if (cattleId) {\r\n        const response = await healthRecordsApi.getHealthRecordsByCattle(parseInt(cattleId));\r\n        if (response.success && response.data) {\r\n          setRecords(response.data);\r\n        } else {\r\n          setRecords([]);\r\n        }\r\n      } else {\r\n        const response = await healthRecordsApi.getAllHealthRecords(0, 50);\r\n        if (response.success && response.data) {\r\n          setRecords(response.data.content);\r\n        } else {\r\n          setRecords([]);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading records:', error);\r\n      setRecords([]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const loadPendingVaccinations = async () => {\r\n    try {\r\n      const response = await healthRecordsApi.getPendingVaccinations();\r\n      if (response.success && response.data) {\r\n        setPendingVaccinations(response.data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading pending vaccinations:', error);\r\n    }\r\n  };\r\n\r\n  const getRecordTypeBadge = (type: string): string => {\r\n    switch (type.toUpperCase()) {\r\n      case 'VACCINATION':\r\n        return 'bg-blue-100 text-blue-800';\r\n      case 'TREATMENT':\r\n        return 'bg-green-100 text-green-800';\r\n      case 'CHECKUP':\r\n        return 'bg-purple-100 text-purple-800';\r\n      case 'SURGERY':\r\n        return 'bg-red-100 text-red-800';\r\n      default:\r\n        return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString: string): string => {\r\n    return new Date(dateString).toLocaleDateString('en-IN');\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex justify-center items-center h-screen\">\r\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <div className=\"mb-6 flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-2xl font-bold\">Medical Records</h1>\r\n          {cattleId && <p className=\"text-gray-600 mt-1\">Cattle ID: #{cattleId}</p>}\r\n        </div>\r\n        <button\r\n          onClick={() => navigate('/gaushala/health/add')}\r\n          className=\"flex items-center gap-2 rounded-lg bg-blue-600 px-4 py-2 text-white hover:bg-blue-700\"\r\n        >\r\n          <Plus size={20} />\r\n          Add Record\r\n        </button>\r\n      </div>\r\n\r\n      {/* Pending Vaccinations Alert */}\r\n      {pendingVaccinations.length > 0 && (\r\n        <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-4 mb-6\">\r\n          <div className=\"flex items-center gap-2 mb-3\">\r\n            <AlertCircle className=\"text-yellow-600\" size={20} />\r\n            <h3 className=\"font-semibold text-yellow-900\">\r\n              Pending Vaccinations ({pendingVaccinations.length})\r\n            </h3>\r\n          </div>\r\n          <div className=\"space-y-2\">\r\n            {pendingVaccinations.slice(0, 5).map((vax) => (\r\n              <div key={vax.id} className=\"flex items-center justify-between text-sm bg-white rounded p-2\">\r\n                <div className=\"flex items-center gap-2\">\r\n                  <Syringe className=\"text-yellow-600\" size={16} />\r\n                  <span className=\"font-medium\">Cattle #{vax.cattleId}</span>\r\n                  <span className=\"text-gray-600\">- {vax.vaccineName}</span>\r\n                </div>\r\n                <span className=\"text-yellow-700\">\r\n                  Due: {vax.nextVaccinationDate ? formatDate(vax.nextVaccinationDate) : 'N/A'}\r\n                </span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Medical Records List */}\r\n      {records.length === 0 ? (\r\n        <div className=\"text-center py-12 bg-white rounded-lg shadow\">\r\n          <Heart className=\"mx-auto text-gray-400\" size={48} />\r\n          <p className=\"mt-4 text-gray-600\">No medical records found</p>\r\n          <button\r\n            onClick={() => navigate('/gaushala/health/add')}\r\n            className=\"mt-4 text-blue-600 hover:text-blue-700\"\r\n          >\r\n            Add your first medical record\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <div className=\"bg-white rounded-lg shadow overflow-hidden\">\r\n          <table className=\"min-w-full divide-y divide-gray-200\">\r\n            <thead className=\"bg-gray-50\">\r\n              <tr>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">\r\n                  Date\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">\r\n                  Cattle ID\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">\r\n                  Type\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">\r\n                  Details\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">\r\n                  Veterinarian\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">\r\n                  Next Action\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"bg-white divide-y divide-gray-200\">\r\n              {records.map((record) => (\r\n                <tr key={record.id} className=\"hover:bg-gray-50\">\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                    {formatDate(record.recordDate)}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                    #{record.cattleId}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                    <span\r\n                      className={`px-2 py-1 rounded text-xs font-medium ${getRecordTypeBadge(\r\n                        record.recordType\r\n                      )}`}\r\n                    >\r\n                      {record.recordType}\r\n                    </span>\r\n                  </td>\r\n                  <td className=\"px-6 py-4 text-sm text-gray-900\">\r\n                    {record.recordType === 'VACCINATION' && record.vaccineName ? (\r\n                      <div>\r\n                        <div className=\"font-medium\">{record.vaccineName}</div>\r\n                        {record.vaccineManufacturer && (\r\n                          <div className=\"text-xs text-gray-500\">{record.vaccineManufacturer}</div>\r\n                        )}\r\n                      </div>\r\n                    ) : (\r\n                      <div className=\"max-w-xs truncate\">{record.diagnosis || record.treatment || '-'}</div>\r\n                    )}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 text-sm text-gray-900\">\r\n                    {record.veterinarianName || '-'}\r\n                  </td>\r\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                    {record.nextVaccinationDate ? (\r\n                      <div className=\"flex items-center gap-1 text-blue-600\">\r\n                        <Calendar size={14} />\r\n                        <span>{formatDate(record.nextVaccinationDate)}</span>\r\n                      </div>\r\n                    ) : record.nextCheckupDate ? (\r\n                      <div className=\"flex items-center gap-1 text-purple-600\">\r\n                        <Calendar size={14} />\r\n                        <span>{formatDate(record.nextCheckupDate)}</span>\r\n                      </div>\r\n                    ) : (\r\n                      '-'\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","/**\r\n * Add Medical Record - Create new health record\r\n * 100% API-driven, NO hardcoded data\r\n */\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ArrowLeft, Save, Heart } from 'lucide-react';\r\nimport { healthRecordsApi, cattleApi, type HealthRecord, type Cattle } from '../../../services/gaushala/api';\r\nimport { getLoggedInUserGaushalaId } from '../../../utils/auth';\r\n\r\nexport default function AddMedicalRecord() {\r\n  const navigate = useNavigate();\r\n  const [loading, setLoading] = useState(false);\r\n  const [cattle, setCattle] = useState<Cattle[]>([]);\r\n  const [loadingCattle, setLoadingCattle] = useState(true);\r\n  const [formData, setFormData] = useState<Partial<HealthRecord>>({\r\n    cattleId: 0,\r\n    gaushalaId: 0,\r\n    recordType: 'VACCINATION',\r\n    recordDate: new Date().toISOString().split('T')[0],\r\n    diagnosis: '',\r\n    treatment: '',\r\n    medications: '',\r\n    vaccineName: '',\r\n    vaccineManufacturer: '',\r\n    nextVaccinationDate: '',\r\n    nextCheckupDate: '',\r\n    veterinarianName: '',\r\n    veterinarianContact: '',\r\n    cost: 0,\r\n    notes: '',\r\n    status: 'COMPLETED',\r\n  });\r\n\r\n  useEffect(() => {\r\n    const gaushalaId = getLoggedInUserGaushalaId();\r\n    if (gaushalaId) {\r\n      setFormData((prev) => ({ ...prev, gaushalaId }));\r\n      loadCattle();\r\n    }\r\n  }, []);\r\n\r\n  const loadCattle = async () => {\r\n    setLoadingCattle(true);\r\n    try {\r\n      const response = await cattleApi.getAllCattle(0, 100);\r\n      if (response.success && response.data) {\r\n        setCattle(response.data.content);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading cattle:', error);\r\n    } finally {\r\n      setLoadingCattle(false);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    if (!formData.cattleId || formData.cattleId === 0) {\r\n      alert('Please select a cattle');\r\n      return;\r\n    }\r\n    if (!formData.recordType) {\r\n      alert('Please select a record type');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      const response = await healthRecordsApi.createHealthRecord(formData as HealthRecord);\r\n      if (response.success) {\r\n        alert('Medical record created successfully!');\r\n        navigate('/gaushala/health/records');\r\n      } else {\r\n        alert('Failed to create record: ' + response.error);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error creating record:', error);\r\n      alert('Error creating record');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleChange = (field: keyof HealthRecord, value: string | number) => {\r\n    setFormData((prev) => ({ ...prev, [field]: value }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-6 max-w-3xl mx-auto\">\r\n      <button\r\n        onClick={() => navigate('/gaushala/health/records')}\r\n        className=\"flex items-center gap-2 text-gray-600 hover:text-gray-900 mb-4\"\r\n      >\r\n        <ArrowLeft size={20} />\r\n        Back to Records\r\n      </button>\r\n\r\n      <div className=\"flex items-center gap-3 mb-6\">\r\n        <div className=\"rounded-full bg-blue-100 p-3\">\r\n          <Heart className=\"text-blue-600\" size={24} />\r\n        </div>\r\n        <h1 className=\"text-2xl font-bold\">Add Medical Record</h1>\r\n      </div>\r\n\r\n      <form onSubmit={handleSubmit} className=\"bg-white rounded-lg shadow p-6 space-y-4\">\r\n        <div className=\"grid grid-cols-2 gap-4\">\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Select Cattle *</label>\r\n            {loadingCattle ? (\r\n              <div className=\"text-sm text-gray-500\">Loading cattle...</div>\r\n            ) : (\r\n              <select\r\n                value={formData.cattleId}\r\n                onChange={(e) => handleChange('cattleId', parseInt(e.target.value))}\r\n                className=\"w-full rounded-lg border px-4 py-2\"\r\n                required\r\n              >\r\n                <option value={0}>Select a cattle</option>\r\n                {cattle.map((cow) => (\r\n                  <option key={cow.id} value={cow.id}>\r\n                    {cow.rfidTagNo} - {cow.name || `Cattle #${cow.id}`}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            )}\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Record Type *</label>\r\n            <select\r\n              value={formData.recordType}\r\n              onChange={(e) => handleChange('recordType', e.target.value)}\r\n              className=\"w-full rounded-lg border px-4 py-2\"\r\n              required\r\n            >\r\n              <option value=\"VACCINATION\">Vaccination</option>\r\n              <option value=\"TREATMENT\">Treatment</option>\r\n              <option value=\"CHECKUP\">Checkup</option>\r\n              <option value=\"SURGERY\">Surgery</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">Record Date *</label>\r\n          <input\r\n            type=\"date\"\r\n            value={formData.recordDate}\r\n            onChange={(e) => handleChange('recordDate', e.target.value)}\r\n            className=\"w-full rounded-lg border px-4 py-2\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        {/* Vaccination specific fields */}\r\n        {formData.recordType === 'VACCINATION' && (\r\n          <div className=\"grid grid-cols-2 gap-4\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Vaccine Name</label>\r\n              <input\r\n                type=\"text\"\r\n                value={formData.vaccineName}\r\n                onChange={(e) => handleChange('vaccineName', e.target.value)}\r\n                className=\"w-full rounded-lg border px-4 py-2\"\r\n                placeholder=\"e.g., FMD Vaccine\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Manufacturer</label>\r\n              <input\r\n                type=\"text\"\r\n                value={formData.vaccineManufacturer}\r\n                onChange={(e) => handleChange('vaccineManufacturer', e.target.value)}\r\n                className=\"w-full rounded-lg border px-4 py-2\"\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Treatment/Checkup specific fields */}\r\n        {(formData.recordType === 'TREATMENT' || formData.recordType === 'CHECKUP' || formData.recordType === 'SURGERY') && (\r\n          <>\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Diagnosis</label>\r\n              <textarea\r\n                value={formData.diagnosis}\r\n                onChange={(e) => handleChange('diagnosis', e.target.value)}\r\n                className=\"w-full rounded-lg border px-4 py-2\"\r\n                rows={2}\r\n                placeholder=\"Diagnosis details...\"\r\n              ></textarea>\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Treatment</label>\r\n              <textarea\r\n                value={formData.treatment}\r\n                onChange={(e) => handleChange('treatment', e.target.value)}\r\n                className=\"w-full rounded-lg border px-4 py-2\"\r\n                rows={2}\r\n                placeholder=\"Treatment provided...\"\r\n              ></textarea>\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Medications</label>\r\n              <input\r\n                type=\"text\"\r\n                value={formData.medications}\r\n                onChange={(e) => handleChange('medications', e.target.value)}\r\n                className=\"w-full rounded-lg border px-4 py-2\"\r\n                placeholder=\"Medicines prescribed...\"\r\n              />\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        {/* Veterinarian details */}\r\n        <div className=\"grid grid-cols-2 gap-4\">\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Veterinarian Name</label>\r\n            <input\r\n              type=\"text\"\r\n              value={formData.veterinarianName}\r\n              onChange={(e) => handleChange('veterinarianName', e.target.value)}\r\n              className=\"w-full rounded-lg border px-4 py-2\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Veterinarian Contact</label>\r\n            <input\r\n              type=\"text\"\r\n              value={formData.veterinarianContact}\r\n              onChange={(e) => handleChange('veterinarianContact', e.target.value)}\r\n              className=\"w-full rounded-lg border px-4 py-2\"\r\n              placeholder=\"+91XXXXXXXXXX\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Follow-up dates */}\r\n        <div className=\"grid grid-cols-2 gap-4\">\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Next Vaccination Date</label>\r\n            <input\r\n              type=\"date\"\r\n              value={formData.nextVaccinationDate}\r\n              onChange={(e) => handleChange('nextVaccinationDate', e.target.value)}\r\n              className=\"w-full rounded-lg border px-4 py-2\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Next Checkup Date</label>\r\n            <input\r\n              type=\"date\"\r\n              value={formData.nextCheckupDate}\r\n              onChange={(e) => handleChange('nextCheckupDate', e.target.value)}\r\n              className=\"w-full rounded-lg border px-4 py-2\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-2 gap-4\">\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Cost (₹)</label>\r\n            <input\r\n              type=\"number\"\r\n              min=\"0\"\r\n              step=\"0.01\"\r\n              value={formData.cost}\r\n              onChange={(e) => handleChange('cost', parseFloat(e.target.value) || 0)}\r\n              className=\"w-full rounded-lg border px-4 py-2\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Status</label>\r\n            <select\r\n              value={formData.status}\r\n              onChange={(e) => handleChange('status', e.target.value)}\r\n              className=\"w-full rounded-lg border px-4 py-2\"\r\n            >\r\n              <option value=\"COMPLETED\">Completed</option>\r\n              <option value=\"SCHEDULED\">Scheduled</option>\r\n              <option value=\"CANCELLED\">Cancelled</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">Notes</label>\r\n          <textarea\r\n            value={formData.notes}\r\n            onChange={(e) => handleChange('notes', e.target.value)}\r\n            className=\"w-full rounded-lg border px-4 py-2\"\r\n            rows={3}\r\n            placeholder=\"Additional notes...\"\r\n          ></textarea>\r\n        </div>\r\n\r\n        <div className=\"flex gap-4 pt-4\">\r\n          <button\r\n            type=\"submit\"\r\n            disabled={loading}\r\n            className=\"flex-1 flex items-center justify-center gap-2 rounded-lg bg-blue-600 px-4 py-2 text-white hover:bg-blue-700 disabled:opacity-50\"\r\n          >\r\n            {loading ? (\r\n              'Saving...'\r\n            ) : (\r\n              <>\r\n                <Save size={20} />\r\n                Save Record\r\n              </>\r\n            )}\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => navigate('/gaushala/health/records')}\r\n            className=\"px-6 py-2 border rounded-lg hover:bg-gray-50\"\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","/**\r\n * RFID Scan History - Display all RFID scans with date range filter\r\n * 100% API-driven, NO hardcoded data\r\n */\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Radio, Calendar, Search } from 'lucide-react';\r\nimport { rfidApi, type RFIDScan, type PagedResponse } from '../../../services/gaushala/api';\r\n\r\nexport default function RFIDScanHistory() {\r\n  const navigate = useNavigate();\r\n  const [scans, setScans] = useState<RFIDScan[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const [totalElements, setTotalElements] = useState(0);\r\n  const [dateRange, setDateRange] = useState({\r\n    startDate: '',\r\n    endDate: '',\r\n  });\r\n  const [searchTag, setSearchTag] = useState('');\r\n  const pageSize = 20;\r\n\r\n  useEffect(() => {\r\n    loadScans();\r\n  }, [currentPage, dateRange]);\r\n\r\n  const loadScans = async () => {\r\n    setLoading(true);\r\n    try {\r\n      let response;\r\n\r\n      if (dateRange.startDate && dateRange.endDate) {\r\n        response = await rfidApi.getScansByDateRange(\r\n          dateRange.startDate,\r\n          dateRange.endDate,\r\n          currentPage,\r\n          pageSize\r\n        );\r\n      } else {\r\n        response = await rfidApi.getAllScans(currentPage, pageSize);\r\n      }\r\n\r\n      if (response.success && response.data) {\r\n        setScans(response.data.content);\r\n        setTotalPages(response.data.totalPages);\r\n        setTotalElements(response.data.totalElements);\r\n      } else {\r\n        setScans([]);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading scans:', error);\r\n      setScans([]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDateRangeChange = (field: 'startDate' | 'endDate', value: string) => {\r\n    setDateRange((prev) => ({ ...prev, [field]: value }));\r\n    setCurrentPage(0);\r\n  };\r\n\r\n  const handleSearchTag = async () => {\r\n    if (!searchTag.trim()) {\r\n      alert('Please enter a tag ID');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      const response = await rfidApi.getScansByTag(searchTag, currentPage, pageSize);\r\n      if (response.success && response.data) {\r\n        setScans(response.data.content);\r\n        setTotalPages(response.data.totalPages);\r\n        setTotalElements(response.data.totalElements);\r\n      } else {\r\n        setScans([]);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error searching tag:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const clearFilters = () => {\r\n    setDateRange({ startDate: '', endDate: '' });\r\n    setSearchTag('');\r\n    setCurrentPage(0);\r\n    loadScans();\r\n  };\r\n\r\n  const formatDateTime = (dateString: string): string => {\r\n    return new Date(dateString).toLocaleString('en-IN');\r\n  };\r\n\r\n  const getSignalStrengthColor = (strength?: number): string => {\r\n    if (!strength) return 'text-gray-400';\r\n    if (strength >= 80) return 'text-green-600';\r\n    if (strength >= 50) return 'text-yellow-600';\r\n    return 'text-red-600';\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex justify-center items-center h-screen\">\r\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <div className=\"mb-6 flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-2xl font-bold\">RFID Scan History</h1>\r\n          <p className=\"text-gray-600 mt-1\">Total: {totalElements} scans</p>\r\n        </div>\r\n        <button\r\n          onClick={() => navigate('/gaushala/rfid/analytics')}\r\n          className=\"flex items-center gap-2 rounded-lg bg-blue-600 px-4 py-2 text-white hover:bg-blue-700\"\r\n        >\r\n          View Analytics\r\n        </button>\r\n      </div>\r\n\r\n      {/* Filters */}\r\n      <div className=\"bg-white rounded-lg shadow p-6 mb-6\">\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n          {/* Date Range Filter */}\r\n          <div className=\"md:col-span-2\">\r\n            <div className=\"flex items-center gap-2 mb-2\">\r\n              <Calendar className=\"text-gray-600\" size={16} />\r\n              <label className=\"text-sm font-medium text-gray-700\">Date Range</label>\r\n            </div>\r\n            <div className=\"grid grid-cols-2 gap-2\">\r\n              <input\r\n                type=\"date\"\r\n                value={dateRange.startDate}\r\n                onChange={(e) => handleDateRangeChange('startDate', e.target.value)}\r\n                className=\"w-full rounded-lg border px-3 py-2 text-sm\"\r\n                placeholder=\"Start Date\"\r\n              />\r\n              <input\r\n                type=\"date\"\r\n                value={dateRange.endDate}\r\n                onChange={(e) => handleDateRangeChange('endDate', e.target.value)}\r\n                className=\"w-full rounded-lg border px-3 py-2 text-sm\"\r\n                placeholder=\"End Date\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Tag Search */}\r\n          <div>\r\n            <div className=\"flex items-center gap-2 mb-2\">\r\n              <Search className=\"text-gray-600\" size={16} />\r\n              <label className=\"text-sm font-medium text-gray-700\">Search Tag</label>\r\n            </div>\r\n            <div className=\"flex gap-2\">\r\n              <input\r\n                type=\"text\"\r\n                value={searchTag}\r\n                onChange={(e) => setSearchTag(e.target.value)}\r\n                onKeyPress={(e) => e.key === 'Enter' && handleSearchTag()}\r\n                className=\"flex-1 rounded-lg border px-3 py-2 text-sm\"\r\n                placeholder=\"Enter Tag ID\"\r\n              />\r\n              <button\r\n                onClick={handleSearchTag}\r\n                className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 text-sm\"\r\n              >\r\n                Search\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {(dateRange.startDate || dateRange.endDate || searchTag) && (\r\n          <button\r\n            onClick={clearFilters}\r\n            className=\"mt-4 text-sm text-blue-600 hover:text-blue-700\"\r\n          >\r\n            Clear all filters\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      {/* Scan List */}\r\n      {scans.length === 0 ? (\r\n        <div className=\"text-center py-12 bg-white rounded-lg shadow\">\r\n          <Radio className=\"mx-auto text-gray-400\" size={48} />\r\n          <p className=\"mt-4 text-gray-600\">No RFID scans found</p>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className=\"bg-white rounded-lg shadow overflow-hidden\">\r\n            <table className=\"min-w-full divide-y divide-gray-200\">\r\n              <thead className=\"bg-gray-50\">\r\n                <tr>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">\r\n                    Timestamp\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">\r\n                    Tag ID\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">\r\n                    Cattle ID\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">\r\n                    Location\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">\r\n                    Scanner Device\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">\r\n                    Signal Strength\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                {scans.map((scan) => (\r\n                  <tr key={scan.id} className=\"hover:bg-gray-50\">\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                      {formatDateTime(scan.scanTimestamp)}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-mono text-blue-600\">\r\n                      {scan.tagIdHex}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                      {scan.cattleId ? `#${scan.cattleId}` : '-'}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 text-sm text-gray-900\">\r\n                      {scan.scanLocation || '-'}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                      {scan.scannerDeviceId || '-'}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm\">\r\n                      <span className={`font-medium ${getSignalStrengthColor(scan.signalStrength)}`}>\r\n                        {scan.signalStrength ? `${scan.signalStrength}%` : '-'}\r\n                      </span>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n\r\n          {totalPages > 1 && (\r\n            <div className=\"mt-6 flex justify-center items-center gap-4\">\r\n              <button\r\n                onClick={() => setCurrentPage(Math.max(0, currentPage - 1))}\r\n                disabled={currentPage === 0}\r\n                className=\"px-4 py-2 border rounded disabled:opacity-50 disabled:cursor-not-allowed hover:bg-gray-50\"\r\n              >\r\n                Previous\r\n              </button>\r\n              <span className=\"text-gray-700\">\r\n                Page {currentPage + 1} of {totalPages}\r\n              </span>\r\n              <button\r\n                onClick={() => setCurrentPage(Math.min(totalPages - 1, currentPage + 1))}\r\n                disabled={currentPage >= totalPages - 1}\r\n                className=\"px-4 py-2 border rounded disabled:opacity-50 disabled:cursor-not-allowed hover:bg-gray-50\"\r\n              >\r\n                Next\r\n              </button>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","/**\r\n * RFID Analytics - Scan statistics and insights\r\n * 100% API-driven, NO hardcoded data\r\n */\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ArrowLeft, Radio, TrendingUp, Tag, Clock, BarChart } from 'lucide-react';\r\nimport { rfidApi, type RFIDScanStats } from '../../../services/gaushala/api';\r\nimport { getLoggedInUserGaushalaId } from '../../../utils/auth';\r\n\r\nexport default function RFIDAnalytics() {\r\n  const navigate = useNavigate();\r\n  const [loading, setLoading] = useState(true);\r\n  const [stats, setStats] = useState<RFIDScanStats | null>(null);\r\n  const [tagSearch, setTagSearch] = useState('');\r\n  const [tagStats, setTagStats] = useState<{\r\n    count: number;\r\n    latestScan: string;\r\n  } | null>(null);\r\n  const [dateRange, setDateRange] = useState({\r\n    startDate: '',\r\n    endDate: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    loadStats();\r\n  }, [dateRange]);\r\n\r\n  const loadStats = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const gaushalaId = getLoggedInUserGaushalaId();\r\n      if (!gaushalaId) {\r\n        console.error('No gaushala ID found');\r\n        return;\r\n      }\r\n\r\n      const response = await rfidApi.getScanStats(\r\n        gaushalaId,\r\n        dateRange.startDate || undefined,\r\n        dateRange.endDate || undefined\r\n      );\r\n\r\n      if (response.success && response.data) {\r\n        setStats(response.data);\r\n      } else {\r\n        setStats(null);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading stats:', error);\r\n      setStats(null);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleTagSearch = async () => {\r\n    if (!tagSearch.trim()) {\r\n      alert('Please enter a tag ID');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const [countResponse, latestResponse] = await Promise.all([\r\n        rfidApi.getScanCountByTag(tagSearch),\r\n        rfidApi.getLatestScanByTag(tagSearch),\r\n      ]);\r\n\r\n      if (countResponse.success && latestResponse.success) {\r\n        setTagStats({\r\n          count: countResponse.data || 0,\r\n          latestScan: latestResponse.data?.scanTimestamp || 'Never',\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error searching tag:', error);\r\n      alert('Error searching tag');\r\n    }\r\n  };\r\n\r\n  const handleDateRangeChange = (field: 'startDate' | 'endDate', value: string) => {\r\n    setDateRange((prev) => ({ ...prev, [field]: value }));\r\n  };\r\n\r\n  const clearDateRange = () => {\r\n    setDateRange({ startDate: '', endDate: '' });\r\n  };\r\n\r\n  const formatDateTime = (dateString: string): string => {\r\n    return new Date(dateString).toLocaleString('en-IN');\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex justify-center items-center h-screen\">\r\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <button\r\n        onClick={() => navigate('/gaushala/rfid/scans')}\r\n        className=\"flex items-center gap-2 text-gray-600 hover:text-gray-900 mb-4\"\r\n      >\r\n        <ArrowLeft size={20} />\r\n        Back to Scan History\r\n      </button>\r\n\r\n      <div className=\"flex items-center gap-3 mb-6\">\r\n        <div className=\"rounded-full bg-blue-100 p-3\">\r\n          <BarChart className=\"text-blue-600\" size={24} />\r\n        </div>\r\n        <h1 className=\"text-2xl font-bold\">RFID Analytics</h1>\r\n      </div>\r\n\r\n      {/* Date Range Filter */}\r\n      <div className=\"bg-white rounded-lg shadow p-6 mb-6\">\r\n        <div className=\"flex items-center gap-4 mb-4\">\r\n          <Clock className=\"text-gray-600\" size={20} />\r\n          <h3 className=\"font-semibold\">Date Range Filter</h3>\r\n        </div>\r\n        <div className=\"grid grid-cols-3 gap-4\">\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Start Date</label>\r\n            <input\r\n              type=\"date\"\r\n              value={dateRange.startDate}\r\n              onChange={(e) => handleDateRangeChange('startDate', e.target.value)}\r\n              className=\"w-full rounded-lg border px-4 py-2\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">End Date</label>\r\n            <input\r\n              type=\"date\"\r\n              value={dateRange.endDate}\r\n              onChange={(e) => handleDateRangeChange('endDate', e.target.value)}\r\n              className=\"w-full rounded-lg border px-4 py-2\"\r\n            />\r\n          </div>\r\n          <div className=\"flex items-end\">\r\n            <button\r\n              onClick={clearDateRange}\r\n              className=\"w-full px-4 py-2 border rounded-lg hover:bg-gray-50\"\r\n            >\r\n              Clear Filter\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Overall Statistics */}\r\n      {stats ? (\r\n        <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-4 mb-6\">\r\n          <div className=\"bg-white rounded-lg shadow p-6\">\r\n            <div className=\"flex items-center justify-between mb-4\">\r\n              <div className=\"rounded-full bg-blue-100 p-3\">\r\n                <Radio className=\"text-blue-600\" size={24} />\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <p className=\"text-sm text-gray-600 mb-1\">Total Scans</p>\r\n              <p className=\"text-3xl font-bold text-gray-900\">{stats.totalScans}</p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-white rounded-lg shadow p-6\">\r\n            <div className=\"flex items-center justify-between mb-4\">\r\n              <div className=\"rounded-full bg-green-100 p-3\">\r\n                <Tag className=\"text-green-600\" size={24} />\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <p className=\"text-sm text-gray-600 mb-1\">Unique Tags</p>\r\n              <p className=\"text-3xl font-bold text-gray-900\">{stats.uniqueTags}</p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-white rounded-lg shadow p-6\">\r\n            <div className=\"flex items-center justify-between mb-4\">\r\n              <div className=\"rounded-full bg-purple-100 p-3\">\r\n                <TrendingUp className=\"text-purple-600\" size={24} />\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <p className=\"text-sm text-gray-600 mb-1\">Avg Scans/Day</p>\r\n              <p className=\"text-3xl font-bold text-gray-900\">\r\n                {stats.averageScansPerDay.toFixed(1)}\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-white rounded-lg shadow p-6\">\r\n            <div className=\"flex items-center justify-between mb-4\">\r\n              <div className=\"rounded-full bg-yellow-100 p-3\">\r\n                <Clock className=\"text-yellow-600\" size={24} />\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <p className=\"text-sm text-gray-600 mb-1\">Last Scan</p>\r\n              <p className=\"text-sm font-medium text-gray-900\">\r\n                {formatDateTime(stats.lastScanTime)}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"text-center py-12 bg-white rounded-lg shadow mb-6\">\r\n          <Radio className=\"mx-auto text-gray-400\" size={48} />\r\n          <p className=\"mt-4 text-gray-600\">No scan data available</p>\r\n          {(dateRange.startDate || dateRange.endDate) && (\r\n            <button\r\n              onClick={clearDateRange}\r\n              className=\"mt-4 text-blue-600 hover:text-blue-700\"\r\n            >\r\n              Clear date filter to see all data\r\n            </button>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Tag-specific Search */}\r\n      <div className=\"bg-white rounded-lg shadow p-6\">\r\n        <h3 className=\"font-semibold text-lg mb-4\">Tag-Specific Analytics</h3>\r\n        <div className=\"flex gap-4 mb-4\">\r\n          <input\r\n            type=\"text\"\r\n            value={tagSearch}\r\n            onChange={(e) => setTagSearch(e.target.value)}\r\n            onKeyPress={(e) => e.key === 'Enter' && handleTagSearch()}\r\n            className=\"flex-1 rounded-lg border px-4 py-2\"\r\n            placeholder=\"Enter Tag ID (e.g., A1B2C3D4)\"\r\n          />\r\n          <button\r\n            onClick={handleTagSearch}\r\n            className=\"px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\r\n          >\r\n            Search Tag\r\n          </button>\r\n        </div>\r\n\r\n        {tagStats && (\r\n          <div className=\"grid gap-4 md:grid-cols-2 mt-6\">\r\n            <div className=\"border rounded-lg p-4\">\r\n              <p className=\"text-sm text-gray-600 mb-2\">Total Scans for Tag</p>\r\n              <p className=\"text-2xl font-bold text-blue-600\">{tagStats.count}</p>\r\n            </div>\r\n            <div className=\"border rounded-lg p-4\">\r\n              <p className=\"text-sm text-gray-600 mb-2\">Latest Scan</p>\r\n              <p className=\"text-sm font-medium text-gray-900\">\r\n                {tagStats.latestScan !== 'Never' ? formatDateTime(tagStats.latestScan) : 'Never'}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","/**\n * GauShala Management System - Field Worker Dashboard\n * Comprehensive cattle management, dung collection tracking, and transaction history\n * Uses BaseLayout for consistent UI architecture\n */\n\nimport { useEffect } from 'react';\nimport { Routes, Route, useNavigate, useLocation } from 'react-router-dom';\nimport { Users, Home, Receipt, History, Heart, Package, Warehouse, Milk, Radio } from 'lucide-react';\nimport { usePlatform } from '../contexts/PlatformContext';\nimport BaseLayout, { NavigationItem, BreadcrumbItem } from '@/components/layout/BaseLayout';\nimport GauShalaHome from './gaushala/GauShalaHome';\nimport CattleManagement from './gaushala/CattleManagement';\nimport AddCattle from './gaushala/AddCattle';\nimport CattleDetail from './gaushala/CattleDetail';\nimport AllTransactions from './gaushala/AllTransactions';\nimport FoodHistory from './gaushala/FoodHistory';\nimport AddFoodHistory from './gaushala/AddFoodHistory';\nimport ViewFoodHistory from './gaushala/ViewFoodHistory';\nimport EditFoodHistory from './gaushala/EditFoodHistory';\nimport HealthHistory from './gaushala/HealthHistory';\nimport AddMedicine from './gaushala/AddMedicine';\nimport ViewCattle from './gaushala/ViewCattle';\nimport EditCattle from './gaushala/EditCattle';\nimport ViewMedicine from './gaushala/ViewMedicine';\nimport EditMedicine from './gaushala/EditMedicine';\nimport MedicineList from './gaushala/MedicineList';\nimport ShedList from './gaushala/sheds/ShedList';\nimport AddShed from './gaushala/sheds/AddShed';\nimport EditShed from './gaushala/sheds/EditShed';\nimport ShedCapacityDashboard from './gaushala/sheds/ShedCapacityDashboard';\nimport InventoryList from './gaushala/inventory/InventoryList';\nimport AddInventory from './gaushala/inventory/AddInventory';\nimport EditInventory from './gaushala/inventory/EditInventory';\nimport InventoryStockHistory from './gaushala/inventory/InventoryStockHistory';\nimport MilkProductionList from './gaushala/production/MilkProductionList';\nimport RecordMilkProduction from './gaushala/production/RecordMilkProduction';\nimport MilkAnalytics from './gaushala/production/MilkAnalytics';\nimport MedicalRecordsList from './gaushala/health/MedicalRecordsList';\nimport AddMedicalRecord from './gaushala/health/AddMedicalRecord';\nimport RFIDScanHistory from './gaushala/rfid/RFIDScanHistory';\nimport RFIDAnalytics from './gaushala/rfid/RFIDAnalytics';\n\n// Language Context\ninterface LanguageContextType {\n  language: 'hi' | 'en';\n  setLanguage: (lang: 'hi' | 'en') => void;\n  t: (key: string) => string;\n}\n\nconst translations = {\n  en: {\n    title: 'GauShala Management',\n    subtitle: 'Comprehensive cattle and dung collection management',\n    home: 'Dashboard',\n    cattle: 'Cattle Management',\n    addCattle: 'Add Cattle',\n    cattleDetails: 'Cattle Details',\n    transactions: 'Transaction History',\n    allTransactions: 'All Field Worker Transactions',\n    foodHistory: 'Food History',\n    healthHistory: 'Health History',\n    settings: 'Settings',\n    hindi: 'हिंदी',\n    english: 'English'\n  },\n  hi: {\n    title: 'गौशाला प्रबंधन',\n    subtitle: 'व्यापक पशु और गोबर संग्रह प्रबंधन',\n    home: 'डैशबोर्ड',\n    cattle: 'पशु प्रबंधन',\n    addCattle: 'पशु जोड़ें',\n    cattleDetails: 'पशु विवरण',\n    transactions: 'लेन-देन का इतिहास',\n    allTransactions: 'सभी फील्ड वर्कर लेन-देन',\n    foodHistory: 'भोजन इतिहास',\n    healthHistory: 'स्वास्थ्य इतिहास',\n    settings: 'सेटिंग्स',\n    hindi: 'हिंदी',\n    english: 'English'\n  }\n};\n\nexport default function GauShala() {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { platformSettings, updateBreadcrumbs } = usePlatform();\n\n  const t = (key: string): string => {\n    const keys = key.split('.');\n    let value: any = translations[platformSettings.language];\n    for (const k of keys) {\n      value = value?.[k];\n    }\n    return value || key;\n  };\n\n  const languageContext: LanguageContextType = {\n    language: platformSettings.language,\n    setLanguage: () => {}, // This will be handled by the global platform context\n    t\n  };\n\n  // Get current tab from URL\n  const getCurrentTab = () => {\n    const path = location.pathname;\n    if (path.includes('/cattle/add')) return 'addCattle';\n    if (path.includes('/cattle/edit/')) return 'editCattle';\n    if (path.includes('/cattle/view/')) return 'viewCattle';\n    if (path.includes('/cattle/') && path.split('/').length > 3) return 'cattleDetails';\n    if (path.includes('/cattle')) return 'cattle';\n    if (path.includes('/all-transactions')) return 'allTransactions';\n    if (path.includes('/food-history/add')) return 'addFoodHistory';\n    if (path.includes('/food-history/edit/')) return 'editFoodHistory';\n    if (path.includes('/food-history/view/')) return 'viewFoodHistory';\n    if (path.includes('/food-history')) return 'foodHistory';\n    if (path.includes('/medicine/add')) return 'addMedicine';\n    if (path.includes('/medicine/edit/')) return 'editMedicine';\n    if (path.includes('/medicine/view/')) return 'viewMedicine';\n    if (path.includes('/medicine')) return 'medicineList';\n    if (path.includes('/health-history/add')) return 'addMedicine';\n    if (path.includes('/health-history/edit/')) return 'editMedicine';\n    if (path.includes('/health-history/view/')) return 'viewMedicine';\n    if (path.includes('/health-history')) return 'healthHistory';\n    return 'home';\n  };\n\n  const setActiveTab = (tab: string) => {\n    switch (tab) {\n      case 'home':\n        navigate('/gaushala');\n        updateBreadcrumbs([\n          { label: t('title'), url: '/gaushala', module: 'gaushala' },\n          { label: t('home'), url: '/gaushala', module: 'gaushala' }\n        ]);\n        break;\n      case 'cattle':\n        navigate('/gaushala/cattle');\n        updateBreadcrumbs([\n          { label: t('title'), url: '/gaushala', module: 'gaushala' },\n          { label: t('cattle'), url: '/gaushala/cattle', module: 'gaushala' }\n        ]);\n        break;\n      case 'allTransactions':\n        navigate('/gaushala/all-transactions');\n        updateBreadcrumbs([\n          { label: t('title'), url: '/gaushala', module: 'gaushala' },\n          { label: t('allTransactions'), url: '/gaushala/all-transactions', module: 'gaushala' }\n        ]);\n        break;\n      case 'foodHistory':\n        navigate('/gaushala/food-history');\n        updateBreadcrumbs([\n          { label: t('title'), url: '/gaushala', module: 'gaushala' },\n          { label: t('foodHistory'), url: '/gaushala/food-history', module: 'gaushala' }\n        ]);\n        break;\n      case 'healthHistory':\n        navigate('/gaushala/health-history');\n        updateBreadcrumbs([\n          { label: t('title'), url: '/gaushala', module: 'gaushala' },\n          { label: t('healthHistory'), url: '/gaushala/health-history', module: 'gaushala' }\n        ]);\n        break;\n    }\n  };\n\n  const activeTab = getCurrentTab();\n\n  // Generate breadcrumbs based on current route\n  const getBreadcrumbs = (): BreadcrumbItem[] => {\n    const currentTab = getCurrentTab();\n    switch (currentTab) {\n      case 'home':\n        return [\n          { label: 'Gausakhi', onClick: () => navigate('/gaushala') },\n          { label: 'Dashboard' }\n        ];\n      case 'cattle':\n        return [\n          { label: 'Gausakhi', onClick: () => navigate('/gaushala') },\n          { label: 'Cattle Management' }\n        ];\n      case 'addCattle':\n        return [\n          { label: 'Gausakhi', onClick: () => navigate('/gaushala') },\n          { label: 'Cattle Management', onClick: () => navigate('/gaushala/cattle') },\n          { label: 'Add Cattle' }\n        ];\n      case 'viewCattle':\n        return [\n          { label: 'Gausakhi', onClick: () => navigate('/gaushala') },\n          { label: 'Cattle Management', onClick: () => navigate('/gaushala/cattle') },\n          { label: 'View Cattle' }\n        ];\n      case 'editCattle':\n        return [\n          { label: 'Gausakhi', onClick: () => navigate('/gaushala') },\n          { label: 'Cattle Management', onClick: () => navigate('/gaushala/cattle') },\n          { label: 'Edit Cattle' }\n        ];\n      case 'cattleDetails':\n        return [\n          { label: 'Gausakhi', onClick: () => navigate('/gaushala') },\n          { label: 'Cattle Management', onClick: () => navigate('/gaushala/cattle') },\n          { label: 'Cattle Details' }\n        ];\n      case 'allTransactions':\n        return [\n          { label: 'Gausakhi', onClick: () => navigate('/gaushala') },\n          { label: 'Transaction History' }\n        ];\n      case 'foodHistory':\n        return [\n          { label: 'Gausakhi', onClick: () => navigate('/gaushala') },\n          { label: 'Food History' }\n        ];\n      case 'addFoodHistory':\n        return [\n          { label: 'Gausakhi', onClick: () => navigate('/gaushala') },\n          { label: 'Food History', onClick: () => navigate('/gaushala/food-history') },\n          { label: 'Create Food History' }\n        ];\n      case 'viewFoodHistory':\n        return [\n          { label: 'Gausakhi', onClick: () => navigate('/gaushala') },\n          { label: 'Food History', onClick: () => navigate('/gaushala/food-history') },\n          { label: 'View Details' }\n        ];\n      case 'editFoodHistory':\n        return [\n          { label: 'Gausakhi', onClick: () => navigate('/gaushala') },\n          { label: 'Food History', onClick: () => navigate('/gaushala/food-history') },\n          { label: 'Edit Food History' }\n        ];\n      case 'healthHistory':\n        return [\n          { label: 'Gausakhi', onClick: () => navigate('/gaushala') },\n          { label: 'Health History' }\n        ];\n      case 'addMedicine':\n        return [\n          { label: 'Gausakhi', onClick: () => navigate('/gaushala') },\n          { label: 'Health History', onClick: () => navigate('/gaushala/health-history') },\n          { label: 'Create Medicine' }\n        ];\n      case 'medicineList':\n        return [\n          { label: 'Gausakhi', onClick: () => navigate('/gaushala') },\n          { label: 'Medicine Inventory' }\n        ];\n      case 'viewMedicine':\n        return [\n          { label: 'Gausakhi', onClick: () => navigate('/gaushala') },\n          { label: 'Medicine Inventory', onClick: () => navigate('/gaushala/medicine') },\n          { label: 'View Medicine' }\n        ];\n      case 'editMedicine':\n        return [\n          { label: 'Gausakhi', onClick: () => navigate('/gaushala') },\n          { label: 'Medicine Inventory', onClick: () => navigate('/gaushala/medicine') },\n          { label: 'Edit Medicine' }\n        ];\n      default:\n        return [{ label: 'Gausakhi' }];\n    }\n  };\n\n  // Define navigation items for BaseLayout\n  const navigationItems: NavigationItem[] = [\n    {\n      id: 'home',\n      label: 'Dashboard',\n      icon: <Home className=\"w-4 h-4\" />,\n      onClick: () => setActiveTab('home'),\n      isActive: activeTab === 'home'\n    },\n    {\n      id: 'cattle',\n      label: 'Cattle Management',\n      icon: <Users className=\"w-4 h-4\" />,\n      onClick: () => setActiveTab('cattle'),\n      isActive: activeTab === 'cattle' || activeTab === 'addCattle' || activeTab === 'cattleDetails' || activeTab === 'viewCattle' || activeTab === 'editCattle'\n    },\n    {\n      id: 'allTransactions',\n      label: 'Transaction History',\n      icon: <Receipt className=\"w-4 h-4\" />,\n      onClick: () => setActiveTab('allTransactions'),\n      isActive: activeTab === 'allTransactions'\n    },\n    {\n      id: 'foodHistory',\n      label: 'Food History',\n      icon: <History className=\"w-4 h-4\" />,\n      onClick: () => setActiveTab('foodHistory'),\n      isActive: activeTab === 'foodHistory' || activeTab === 'addFoodHistory' || activeTab === 'viewFoodHistory' || activeTab === 'editFoodHistory'\n    },\n    {\n      id: 'healthHistory',\n      label: 'Health History',\n      icon: <Heart className=\"w-4 h-4\" />,\n      onClick: () => setActiveTab('healthHistory'),\n      isActive: activeTab === 'healthHistory' || activeTab === 'addMedicine' || activeTab === 'viewMedicine' || activeTab === 'editMedicine' || activeTab === 'medicineList'\n    },\n    {\n      id: 'inventory',\n      label: 'Inventory',\n      icon: <Package className=\"w-4 h-4\" />,\n      onClick: () => navigate('/gaushala/inventory'),\n      isActive: location.pathname.includes('/inventory')\n    },\n    {\n      id: 'sheds',\n      label: 'Shed Management',\n      icon: <Warehouse className=\"w-4 h-4\" />,\n      onClick: () => navigate('/gaushala/sheds'),\n      isActive: location.pathname.includes('/sheds')\n    },\n    {\n      id: 'production',\n      label: 'Milk Production',\n      icon: <Milk className=\"w-4 h-4\" />,\n      onClick: () => navigate('/gaushala/production'),\n      isActive: location.pathname.includes('/production')\n    },\n    {\n      id: 'rfid',\n      label: 'RFID Analytics',\n      icon: <Radio className=\"w-4 h-4\" />,\n      onClick: () => navigate('/gaushala/rfid/scans'),\n      isActive: location.pathname.includes('/rfid')\n    }\n  ];\n\n  // Update breadcrumbs when component loads or location changes\n  useEffect(() => {\n    const currentTab = getCurrentTab();\n    switch (currentTab) {\n      case 'home':\n        updateBreadcrumbs([\n          { label: t('title'), url: '/gaushala', module: 'gaushala' },\n          { label: t('home'), url: '/gaushala', module: 'gaushala' }\n        ]);\n        break;\n      case 'cattle':\n        updateBreadcrumbs([\n          { label: t('title'), url: '/gaushala', module: 'gaushala' },\n          { label: t('cattle'), url: '/gaushala/cattle', module: 'gaushala' }\n        ]);\n        break;\n      case 'addCattle':\n        updateBreadcrumbs([\n          { label: t('title'), url: '/gaushala', module: 'gaushala' },\n          { label: t('cattle'), url: '/gaushala/cattle', module: 'gaushala' },\n          { label: t('addCattle'), url: '/gaushala/cattle/add', module: 'gaushala' }\n        ]);\n        break;\n      case 'viewCattle':\n        updateBreadcrumbs([\n          { label: t('title'), url: '/gaushala', module: 'gaushala' },\n          { label: t('cattle'), url: '/gaushala/cattle', module: 'gaushala' },\n          { label: 'View Cattle', url: location.pathname, module: 'gaushala' }\n        ]);\n        break;\n      case 'editCattle':\n        updateBreadcrumbs([\n          { label: t('title'), url: '/gaushala', module: 'gaushala' },\n          { label: t('cattle'), url: '/gaushala/cattle', module: 'gaushala' },\n          { label: 'Edit Cattle', url: location.pathname, module: 'gaushala' }\n        ]);\n        break;\n      case 'cattleDetails':\n        updateBreadcrumbs([\n          { label: t('title'), url: '/gaushala', module: 'gaushala' },\n          { label: t('cattle'), url: '/gaushala/cattle', module: 'gaushala' },\n          { label: t('cattleDetails'), url: location.pathname, module: 'gaushala' }\n        ]);\n        break;\n      case 'allTransactions':\n        updateBreadcrumbs([\n          { label: t('title'), url: '/gaushala', module: 'gaushala' },\n          { label: t('allTransactions'), url: '/gaushala/all-transactions', module: 'gaushala' }\n        ]);\n        break;\n      case 'foodHistory':\n        updateBreadcrumbs([\n          { label: t('title'), url: '/gaushala', module: 'gaushala' },\n          { label: t('foodHistory'), url: '/gaushala/food-history', module: 'gaushala' }\n        ]);\n        break;\n      case 'addFoodHistory':\n        updateBreadcrumbs([\n          { label: t('title'), url: '/gaushala', module: 'gaushala' },\n          { label: t('foodHistory'), url: '/gaushala/food-history', module: 'gaushala' },\n          { label: 'Create Food History', url: '/gaushala/food-history/add', module: 'gaushala' }\n        ]);\n        break;\n      case 'viewFoodHistory':\n        updateBreadcrumbs([\n          { label: t('title'), url: '/gaushala', module: 'gaushala' },\n          { label: t('foodHistory'), url: '/gaushala/food-history', module: 'gaushala' },\n          { label: 'View Details', url: location.pathname, module: 'gaushala' }\n        ]);\n        break;\n      case 'editFoodHistory':\n        updateBreadcrumbs([\n          { label: t('title'), url: '/gaushala', module: 'gaushala' },\n          { label: t('foodHistory'), url: '/gaushala/food-history', module: 'gaushala' },\n          { label: 'Edit Food History', url: location.pathname, module: 'gaushala' }\n        ]);\n        break;\n      case 'healthHistory':\n        updateBreadcrumbs([\n          { label: t('title'), url: '/gaushala', module: 'gaushala' },\n          { label: t('healthHistory'), url: '/gaushala/health-history', module: 'gaushala' }\n        ]);\n        break;\n      case 'addMedicine':\n        updateBreadcrumbs([\n          { label: t('title'), url: '/gaushala', module: 'gaushala' },\n          { label: t('healthHistory'), url: '/gaushala/health-history', module: 'gaushala' },\n          { label: 'Create Medicine', url: '/gaushala/health-history/add', module: 'gaushala' }\n        ]);\n        break;\n    }\n  }, [location.pathname, platformSettings.language]);\n\n  return (\n    <BaseLayout\n      moduleName=\"Gausakhi\"\n      moduleSubtitle=\"Comprehensive cattle and dung collection management\"\n      navigationItems={navigationItems}\n      breadcrumbs={getBreadcrumbs()}\n      userInfo={{\n        name: \"Ramesh Kumar\",\n        role: \"Field Worker\",\n      }}\n    >\n      <Routes>\n        <Route path=\"/\" element={<GauShalaHome languageContext={languageContext} />} />\n        <Route path=\"/dashboard\" element={<GauShalaHome languageContext={languageContext} />} />\n        <Route path=\"/cattle\" element={<CattleManagement languageContext={languageContext} />} />\n        <Route path=\"/cattle/add\" element={<AddCattle languageContext={languageContext} />} />\n        <Route path=\"/cattle/view/:id\" element={<ViewCattle />} />\n        <Route path=\"/cattle/edit/:id\" element={<EditCattle />} />\n        <Route path=\"/cattle/:id\" element={<CattleDetail languageContext={languageContext} />} />\n        <Route path=\"/all-transactions\" element={<AllTransactions />} />\n        <Route path=\"/transactions\" element={<AllTransactions />} />\n        <Route path=\"/food-history\" element={<FoodHistory />} />\n        <Route path=\"/food-history/add\" element={<AddFoodHistory />} />\n        <Route path=\"/food-history/view/:id\" element={<ViewFoodHistory />} />\n        <Route path=\"/food-history/edit/:id\" element={<EditFoodHistory />} />\n        <Route path=\"/health-history\" element={<HealthHistory />} />\n        <Route path=\"/health-history/add\" element={<AddMedicine />} />\n        <Route path=\"/health-history/view/:id\" element={<ViewMedicine />} />\n        <Route path=\"/health-history/edit/:id\" element={<EditMedicine />} />\n        <Route path=\"/medicine\" element={<MedicineList />} />\n        <Route path=\"/medicine/add\" element={<AddMedicine />} />\n        <Route path=\"/medicine/view/:id\" element={<ViewMedicine />} />\n        <Route path=\"/medicine/edit/:id\" element={<EditMedicine />} />\n        <Route path=\"/sheds\" element={<ShedList />} />\n        <Route path=\"/sheds/add\" element={<AddShed />} />\n        <Route path=\"/sheds/edit/:id\" element={<EditShed />} />\n        <Route path=\"/sheds/capacity\" element={<ShedCapacityDashboard />} />\n        <Route path=\"/inventory\" element={<InventoryList />} />\n        <Route path=\"/inventory/add\" element={<AddInventory />} />\n        <Route path=\"/inventory/edit/:id\" element={<EditInventory />} />\n        <Route path=\"/inventory/:id/stock-history\" element={<InventoryStockHistory />} />\n        <Route path=\"/milk-production\" element={<MilkProductionList />} />\n        <Route path=\"/production\" element={<MilkProductionList />} />\n        <Route path=\"/production/record\" element={<RecordMilkProduction />} />\n        <Route path=\"/production/analytics\" element={<MilkAnalytics />} />\n        <Route path=\"/health/records\" element={<MedicalRecordsList />} />\n        <Route path=\"/health/records/:cattleId\" element={<MedicalRecordsList />} />\n        <Route path=\"/health/add\" element={<AddMedicalRecord />} />\n        <Route path=\"/rfid-analytics\" element={<RFIDAnalytics />} />\n        <Route path=\"/rfid/scans\" element={<RFIDScanHistory />} />\n        <Route path=\"/rfid/analytics\" element={<RFIDAnalytics />} />\n      </Routes>\n    </BaseLayout>\n  );\n}","import * as React from \"react\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nexport interface ProgressProps\r\n  extends React.HTMLAttributes<HTMLDivElement> {\r\n  value?: number\r\n  max?: number\r\n}\r\n\r\nconst Progress = React.forwardRef<HTMLDivElement, ProgressProps>(\r\n  ({ className, value = 0, max = 100, ...props }, ref) => (\r\n    <div\r\n      ref={ref}\r\n      className={cn(\r\n        \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      <div\r\n        className=\"h-full w-full flex-1 bg-primary transition-all\"\r\n        style={{ transform: `translateX(-${100 - (value / max) * 100}%)` }}\r\n      />\r\n    </div>\r\n  )\r\n)\r\nProgress.displayName = \"Progress\"\r\n\r\nexport { Progress }","import React from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '../../components/ui/card';\nimport { Badge } from '../../components/ui/badge';\nimport { Button } from '../../components/ui/button';\nimport { Progress } from '../../components/ui/progress';\nimport { Separator } from '../../components/ui/separator';\nimport {\n  Activity,\n  TrendingUp,\n  TrendingDown,\n  Zap,\n  Droplets,\n  BarChart3,\n  Users,\n  Calendar,\n  Clock,\n  ArrowUpRight,\n  Factory,\n  AlertTriangle,\n  CheckCircle2,\n  Thermometer,\n  Gauge,\n  CheckCircle\n} from 'lucide-react';\nimport {\n  LineChart, Line, AreaChart, Area,\n  XAxis, YAxis, CartesianGrid, ResponsiveContainer, Legend, Tooltip,\n  PieChart, Pie, Cell, BarChart, Bar\n} from 'recharts';\n\n// Type definitions for digester data\ninterface DigesterData {\n  id: string;\n  name: string;\n  status: string;\n  temperature: number;\n  pressure: number;\n  methaneLevel: number;\n  dailyProduction: number;\n  efficiency: number;\n  lastUpdated: string;\n  trends?: {\n    methane: number;\n    production: number;\n  };\n}\n\n// Mock data for dashboard overview\nconst overviewData = {\n  totalDigesters: 3,\n  activeDigesters: 2,\n  maintenanceDigesters: 1,\n  totalProduction: 445.5, // m³\n  averageEfficiency: 83.7, // %\n  criticalAlerts: 0,\n  warningAlerts: 1,\n  totalBatches: 156,\n  pendingPayments: 12,\n  scheduledPickups: 8\n};\n\n// Mock digester data\nconst digestersData: DigesterData[] = [\n  {\n    id: 'D001',\n    name: 'Digester Alpha-1',\n    status: 'active',\n    temperature: 35.5,\n    pressure: 1.2,\n    methaneLevel: 65,\n    dailyProduction: 150.5,\n    efficiency: 85,\n    lastUpdated: new Date().toISOString(),\n    trends: { methane: 2, production: 5 }\n  },\n  {\n    id: 'D002',\n    name: 'Digester Alpha-2',\n    status: 'active',\n    temperature: 37.2,\n    pressure: 1.5,\n    methaneLevel: 68,\n    dailyProduction: 175.0,\n    efficiency: 88,\n    lastUpdated: new Date().toISOString(),\n    trends: { methane: 1, production: 3 }\n  },\n  {\n    id: 'D003',\n    name: 'Digester Alpha-3',\n    status: 'maintenance',\n    temperature: 32.1,\n    pressure: 0.8,\n    methaneLevel: 58,\n    dailyProduction: 120.0,\n    efficiency: 78,\n    lastUpdated: new Date().toISOString(),\n    trends: { methane: -1, production: -2 }\n  }\n];\n\nconst productionTrend = [\n  { month: 'Jan', production: 380, efficiency: 85 },\n  { month: 'Feb', production: 420, efficiency: 87 },\n  { month: 'Mar', production: 445, efficiency: 84 },\n  { month: 'Apr', production: 465, efficiency: 88 },\n  { month: 'May', production: 445, efficiency: 86 }\n];\n\nconst statusDistribution = [\n  { name: 'Active', value: 2, color: '#22c55e' },\n  { name: 'Maintenance', value: 1, color: '#f59e0b' },\n  { name: 'Offline', value: 0, color: '#ef4444' }\n];\n\nconst KPICard: React.FC<{\n  title: string;\n  value: string;\n  change: string;\n  trend: 'up' | 'down' | 'neutral';\n  icon: React.ReactNode;\n  className?: string;\n}> = ({ title, value, change, trend, icon, className = '' }) => {\n  const getTrendColor = () => {\n    switch (trend) {\n      case 'up': return 'text-green-600';\n      case 'down': return 'text-red-600';\n      default: return 'text-gray-600';\n    }\n  };\n\n  const getTrendIcon = () => {\n    switch (trend) {\n      case 'up': return <TrendingUp className=\"w-3 h-3\" />;\n      case 'down': return <TrendingDown className=\"w-3 h-3\" />;\n      default: return <Activity className=\"w-3 h-3\" />;\n    }\n  };\n\n  return (\n    <Card className={`relative overflow-hidden ${className}`}>\n      <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n        <CardTitle className=\"text-sm font-medium text-muted-foreground\">{title}</CardTitle>\n        <div className=\"h-8 w-8 rounded-lg bg-primary/10 flex items-center justify-center\">\n          {icon}\n        </div>\n      </CardHeader>\n      <CardContent>\n        <div className=\"text-2xl font-bold tracking-tight\">{value}</div>\n        <div className={`flex items-center gap-1 text-xs ${getTrendColor()}`}>\n          {getTrendIcon()}\n          {change}\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nconst DigesterCard: React.FC<{ digester: DigesterData }> = ({ digester }) => {\n  const statusColor = digester.status === 'active' ? 'bg-green-100 text-green-800 border-green-200' :\n                     digester.status === 'maintenance' ? 'bg-yellow-100 text-yellow-800 border-yellow-200' :\n                     'bg-red-100 text-red-800 border-red-200';\n\n  const statusIcon = digester.status === 'active' ? CheckCircle : AlertTriangle;\n  const StatusIcon = statusIcon;\n\n  return (\n    <Card className=\"hover:shadow-lg transition-all duration-300 border-0 bg-gradient-to-br from-white to-slate-50\">\n      <CardHeader className=\"pb-3\">\n        <div className=\"flex items-center justify-between\">\n          <CardTitle className=\"text-lg font-bold text-slate-800\">{digester.name}</CardTitle>\n          <Badge className={`${statusColor} border font-semibold capitalize flex items-center gap-1`}>\n            <StatusIcon className=\"w-3 h-3\" />\n            {digester.status}\n          </Badge>\n        </div>\n        <p className=\"text-sm text-slate-500 font-medium\">\n          Last Updated: {new Date(digester.lastUpdated).toLocaleTimeString()}\n        </p>\n      </CardHeader>\n      <CardContent className=\"space-y-4\">\n        {/* Metrics Grid */}\n        <div className=\"grid grid-cols-2 gap-4\">\n          <div className=\"bg-gradient-to-br from-orange-50 to-red-50 p-3 rounded-lg\">\n            <div className=\"flex items-center gap-2\">\n              <Thermometer className=\"w-4 h-4 text-orange-600\" />\n              <span className=\"text-sm font-semibold text-orange-700\">Temperature</span>\n            </div>\n            <div className=\"text-lg font-bold text-orange-900\">{digester.temperature}°C</div>\n          </div>\n\n          <div className=\"bg-gradient-to-br from-blue-50 to-indigo-50 p-3 rounded-lg\">\n            <div className=\"flex items-center gap-2\">\n              <Gauge className=\"w-4 h-4 text-blue-600\" />\n              <span className=\"text-sm font-semibold text-blue-700\">Pressure</span>\n            </div>\n            <div className=\"text-lg font-bold text-blue-900\">{digester.pressure} kPa</div>\n          </div>\n        </div>\n\n        {/* Methane Level */}\n        <div className=\"bg-gradient-to-br from-yellow-50 to-orange-50 p-3 rounded-lg\">\n          <div className=\"flex items-center justify-between mb-2\">\n            <div className=\"flex items-center gap-2\">\n              <Zap className=\"w-4 h-4 text-yellow-600\" />\n              <span className=\"text-sm font-semibold text-yellow-700\">Methane</span>\n            </div>\n            <div className=\"flex items-center gap-1\">\n              <span className=\"text-lg font-bold text-yellow-900\">{digester.methaneLevel}%</span>\n              {digester.trends?.methane && digester.trends.methane > 0 ? (\n                <TrendingUp className=\"w-4 h-4 text-green-600\" />\n              ) : (\n                <TrendingDown className=\"w-4 h-4 text-red-600\" />\n              )}\n            </div>\n          </div>\n          <Progress value={digester.methaneLevel} className=\"h-3 bg-yellow-200\" />\n        </div>\n\n        {/* Daily Production */}\n        <div className=\"bg-gradient-to-br from-green-50 to-emerald-50 p-3 rounded-lg\">\n          <div className=\"flex items-center justify-between mb-2\">\n            <div className=\"flex items-center gap-2\">\n              <Droplets className=\"w-4 h-4 text-green-600\" />\n              <span className=\"text-sm font-semibold text-green-700\">Daily Production</span>\n            </div>\n            <div className=\"flex items-center gap-1\">\n              <span className=\"text-lg font-bold text-green-900\">{digester.dailyProduction} m³</span>\n              {digester.trends?.production && digester.trends.production > 0 ? (\n                <TrendingUp className=\"w-4 h-4 text-green-600\" />\n              ) : (\n                <TrendingDown className=\"w-4 h-4 text-red-600\" />\n              )}\n            </div>\n          </div>\n          <Progress value={digester.efficiency} className=\"h-3 bg-green-200\" />\n        </div>\n\n        {/* Efficiency */}\n        <div className=\"flex items-center justify-between pt-3 border-t border-slate-200\">\n          <span className=\"text-sm font-semibold text-slate-700\">Efficiency</span>\n          <span className=\"text-lg font-bold text-emerald-600\">{digester.efficiency}%</span>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nconst StatusBadge: React.FC<{ status: string; count: number }> = ({ status, count }) => {\n  const getStatusColor = () => {\n    switch (status.toLowerCase()) {\n      case 'active': return 'bg-green-100 text-green-800';\n      case 'maintenance': return 'bg-yellow-100 text-yellow-800';\n      case 'offline': return 'bg-red-100 text-red-800';\n      default: return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  return (\n    <Badge className={`${getStatusColor()} px-2 py-1`}>\n      {count} {status}\n    </Badge>\n  );\n};\n\nexport const EnhancedBiogasDashboard: React.FC = () => {\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between -mt-6\">\n        <div>\n          <h1 className=\"text-3xl font-bold tracking-tight\">BiogasSangh Dashboard</h1>\n          <p className=\"text-muted-foreground\">\n            Overview of cluster operations and performance metrics\n          </p>\n        </div>\n        <div className=\"flex gap-2\">\n          <Button variant=\"outline\" size=\"sm\">\n            <Calendar className=\"w-4 h-4 mr-2\" />\n            Filter\n          </Button>\n          <Button size=\"sm\">\n            <ArrowUpRight className=\"w-4 h-4 mr-2\" />\n            Export\n          </Button>\n        </div>\n      </div>\n\n      {/* KPI Overview */}\n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n        <KPICard\n          title=\"Total Production\"\n          value={`${overviewData.totalProduction} m³`}\n          change=\"+12% from last month\"\n          trend=\"up\"\n          icon={<Droplets className=\"h-4 w-4 text-blue-600\" />}\n        />\n        <KPICard\n          title=\"Average Efficiency\"\n          value={`${overviewData.averageEfficiency}%`}\n          change=\"+2.1% from last week\"\n          trend=\"up\"\n          icon={<Zap className=\"h-4 w-4 text-yellow-600\" />}\n        />\n        <KPICard\n          title=\"Active Digesters\"\n          value={`${overviewData.activeDigesters}/${overviewData.totalDigesters}`}\n          change=\"1 in maintenance\"\n          trend=\"neutral\"\n          icon={<Factory className=\"h-4 w-4 text-green-600\" />}\n        />\n        <KPICard\n          title=\"Critical Alerts\"\n          value={overviewData.criticalAlerts.toString()}\n          change={`${overviewData.warningAlerts} warnings`}\n          trend=\"neutral\"\n          icon={<AlertTriangle className=\"h-4 w-4 text-orange-600\" />}\n        />\n      </div>\n\n      {/* 3 Digester Cards Section */}\n      <div>\n        <h2 className=\"text-2xl font-bold tracking-tight mb-4\">Live Digester Status</h2>\n        <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-3\">\n          {digestersData.map((digester) => (\n            <DigesterCard key={digester.id} digester={digester} />\n          ))}\n        </div>\n      </div>\n\n      {/* Main Content Grid */}\n      <div className=\"grid gap-6 lg:grid-cols-7\">\n        {/* Production Trends - Takes up 4 columns */}\n        <Card className=\"lg:col-span-4\">\n          <CardHeader>\n            <CardTitle>Production Trends</CardTitle>\n            <CardDescription>\n              Monthly biogas production and efficiency over time\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <LineChart data={productionTrend}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"month\" />\n                <YAxis yAxisId=\"left\" />\n                <YAxis yAxisId=\"right\" orientation=\"right\" />\n                <Tooltip />\n                <Legend />\n                <Line\n                  yAxisId=\"left\"\n                  type=\"monotone\"\n                  dataKey=\"production\"\n                  stroke=\"#3b82f6\"\n                  strokeWidth={3}\n                  name=\"Production (m³)\"\n                />\n                <Line\n                  yAxisId=\"right\"\n                  type=\"monotone\"\n                  dataKey=\"efficiency\"\n                  stroke=\"#22c55e\"\n                  strokeWidth={3}\n                  name=\"Efficiency (%)\"\n                />\n              </LineChart>\n            </ResponsiveContainer>\n          </CardContent>\n        </Card>\n\n        {/* Status Overview - Takes up 3 columns */}\n        <Card className=\"lg:col-span-3\">\n          <CardHeader>\n            <CardTitle>Digester Status</CardTitle>\n            <CardDescription>\n              Current operational status distribution\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <ResponsiveContainer width=\"100%\" height={200}>\n              <PieChart>\n                <Pie\n                  data={statusDistribution}\n                  cx=\"50%\"\n                  cy=\"50%\"\n                  innerRadius={60}\n                  outerRadius={80}\n                  dataKey=\"value\"\n                  stroke=\"#fff\"\n                  strokeWidth={2}\n                >\n                  {statusDistribution.map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={entry.color} />\n                  ))}\n                </Pie>\n                <Tooltip />\n              </PieChart>\n            </ResponsiveContainer>\n            <div className=\"flex flex-wrap gap-2 mt-4\">\n              {statusDistribution.map((status) => (\n                <StatusBadge\n                  key={status.name}\n                  status={status.name}\n                  count={status.value}\n                />\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Quick Actions & Summaries */}\n      <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-4\">\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Total Batches</CardTitle>\n            <BarChart3 className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{overviewData.totalBatches}</div>\n            <Progress value={75} className=\"mt-2\" />\n            <p className=\"text-xs text-muted-foreground mt-2\">\n              +23 from last month\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Pending Payments</CardTitle>\n            <Clock className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{overviewData.pendingPayments}</div>\n            <Progress value={30} className=\"mt-2\" />\n            <p className=\"text-xs text-muted-foreground mt-2\">\n              2 overdue items\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Scheduled Pickups</CardTitle>\n            <Users className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{overviewData.scheduledPickups}</div>\n            <Progress value={60} className=\"mt-2\" />\n            <p className=\"text-xs text-muted-foreground mt-2\">\n              Next pickup: Today 2:00 PM\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">System Status</CardTitle>\n            <CheckCircle2 className=\"h-4 w-4 text-green-600\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-green-600\">Healthy</div>\n            <Progress value={95} className=\"mt-2\" />\n            <p className=\"text-xs text-muted-foreground mt-2\">\n              All systems operational\n            </p>\n          </CardContent>\n        </Card>\n      </div>\n\n      <Separator />\n\n      {/* Recent Activity */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Recent Activity</CardTitle>\n          <CardDescription>\n            Latest updates and notifications from the cluster\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center gap-4\">\n              <div className=\"w-2 h-2 bg-green-500 rounded-full\"></div>\n              <div className=\"flex-1\">\n                <p className=\"text-sm font-medium\">Digester Alpha-2 efficiency increased to 88%</p>\n                <p className=\"text-xs text-muted-foreground\">2 hours ago</p>\n              </div>\n            </div>\n            <div className=\"flex items-center gap-4\">\n              <div className=\"w-2 h-2 bg-yellow-500 rounded-full\"></div>\n              <div className=\"flex-1\">\n                <p className=\"text-sm font-medium\">Batch #156 scheduled for pickup</p>\n                <p className=\"text-xs text-muted-foreground\">4 hours ago</p>\n              </div>\n            </div>\n            <div className=\"flex items-center gap-4\">\n              <div className=\"w-2 h-2 bg-blue-500 rounded-full\"></div>\n              <div className=\"flex-1\">\n                <p className=\"text-sm font-medium\">Payment reconciliation completed</p>\n                <p className=\"text-xs text-muted-foreground\">6 hours ago</p>\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default EnhancedBiogasDashboard;","import * as React from \"react\"\r\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\r\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Select = SelectPrimitive.Root\r\n\r\nconst SelectGroup = SelectPrimitive.Group\r\n\r\nconst SelectValue = SelectPrimitive.Value\r\n\r\nconst SelectTrigger = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\r\n>(({ className, children, ...props }, ref) => (\r\n  <SelectPrimitive.Trigger\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    {children}\r\n    <SelectPrimitive.Icon asChild>\r\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\r\n    </SelectPrimitive.Icon>\r\n  </SelectPrimitive.Trigger>\r\n))\r\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\r\n\r\nconst SelectScrollUpButton = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.ScrollUpButton\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex cursor-default items-center justify-center py-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ChevronUp className=\"h-4 w-4\" />\r\n  </SelectPrimitive.ScrollUpButton>\r\n))\r\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\r\n\r\nconst SelectScrollDownButton = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.ScrollDownButton\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex cursor-default items-center justify-center py-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ChevronDown className=\"h-4 w-4\" />\r\n  </SelectPrimitive.ScrollDownButton>\r\n))\r\nSelectScrollDownButton.displayName =\r\n  SelectPrimitive.ScrollDownButton.displayName\r\n\r\nconst SelectContent = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\r\n>(({ className, children, position = \"popper\", ...props }, ref) => (\r\n  <SelectPrimitive.Portal>\r\n    <SelectPrimitive.Content\r\n      ref={ref}\r\n      className={cn(\r\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n        position === \"popper\" &&\r\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\r\n        className\r\n      )}\r\n      position={position}\r\n      {...props}\r\n    >\r\n      <SelectScrollUpButton />\r\n      <SelectPrimitive.Viewport\r\n        className={cn(\r\n          \"p-1\",\r\n          position === \"popper\" &&\r\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\r\n        )}\r\n      >\r\n        {children}\r\n      </SelectPrimitive.Viewport>\r\n      <SelectScrollDownButton />\r\n    </SelectPrimitive.Content>\r\n  </SelectPrimitive.Portal>\r\n))\r\nSelectContent.displayName = SelectPrimitive.Content.displayName\r\n\r\nconst SelectLabel = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Label>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.Label\r\n    ref={ref}\r\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\r\n    {...props}\r\n  />\r\n))\r\nSelectLabel.displayName = SelectPrimitive.Label.displayName\r\n\r\nconst SelectItem = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Item>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\r\n>(({ className, children, ...props }, ref) => (\r\n  <SelectPrimitive.Item\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n      <SelectPrimitive.ItemIndicator>\r\n        <Check className=\"h-4 w-4\" />\r\n      </SelectPrimitive.ItemIndicator>\r\n    </span>\r\n\r\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\r\n  </SelectPrimitive.Item>\r\n))\r\nSelectItem.displayName = SelectPrimitive.Item.displayName\r\n\r\nconst SelectSeparator = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Separator>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.Separator\r\n    ref={ref}\r\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\r\n    {...props}\r\n  />\r\n))\r\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\r\n\r\nexport {\r\n  Select,\r\n  SelectGroup,\r\n  SelectValue,\r\n  SelectTrigger,\r\n  SelectContent,\r\n  SelectLabel,\r\n  SelectItem,\r\n  SelectSeparator,\r\n  SelectScrollUpButton,\r\n  SelectScrollDownButton,\r\n}","import React, { useState, useEffect, useCallback } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '../../components/ui/card';\nimport { Badge } from '../../components/ui/badge';\nimport { Button } from '../../components/ui/button';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '../../components/ui/select';\nimport { Separator } from '../../components/ui/separator';\nimport {\n  Activity,\n  Thermometer,\n  Gauge,\n  AlertTriangle,\n  CheckCircle,\n  RefreshCw,\n  TrendingUp,\n  TrendingDown,\n  Zap,\n  Droplets,\n  Wind,\n  Beaker,\n  Settings,\n  Wifi,\n  WifiOff,\n  Radio,\n  Cpu,\n  Monitor,\n  Play,\n  Pause\n} from 'lucide-react';\nimport {\n  LineChart, Line, AreaChart, Area,\n  XAxis, YAxis, CartesianGrid, ResponsiveContainer, Legend, Tooltip\n} from 'recharts';\n\n// Type definitions\ninterface DigesterData {\n  id: string;\n  name: string;\n  status: string;\n  temperature: number;\n  pressure: number;\n  methaneLevel: number;\n  dailyProduction: number;\n  efficiency: number;\n  lastUpdated: string;\n  detailedSensors: {\n    ph: number;\n    humidity: number;\n    co2Level: number;\n    h2sLevel: number;\n    gasFlow: number;\n    liquidLevel: number;\n    stirringSpeed: number;\n    powerConsumption: number;\n  };\n  trends: {\n    methane: number;\n    production: number;\n    temperature: number;\n    pressure: number;\n  };\n}\n\n// Base digester configurations\nconst baseDigesters: DigesterData[] = [\n  {\n    id: 'D001',\n    name: 'Digester Alpha-1',\n    status: 'active',\n    temperature: 35.5,\n    pressure: 1.2,\n    methaneLevel: 65,\n    dailyProduction: 150.5,\n    efficiency: 85,\n    lastUpdated: new Date().toISOString(),\n    detailedSensors: {\n      ph: 7.2,\n      humidity: 82,\n      co2Level: 28,\n      h2sLevel: 0.15,\n      gasFlow: 45.2,\n      liquidLevel: 78,\n      stirringSpeed: 120,\n      powerConsumption: 2.4\n    },\n    trends: { methane: 2, production: 5, temperature: 1, pressure: 0.5 }\n  },\n  {\n    id: 'D002',\n    name: 'Digester Alpha-2',\n    status: 'active',\n    temperature: 37.2,\n    pressure: 1.5,\n    methaneLevel: 68,\n    dailyProduction: 175.0,\n    efficiency: 88,\n    lastUpdated: new Date().toISOString(),\n    detailedSensors: {\n      ph: 7.5,\n      humidity: 85,\n      co2Level: 25,\n      h2sLevel: 0.12,\n      gasFlow: 52.8,\n      liquidLevel: 82,\n      stirringSpeed: 115,\n      powerConsumption: 2.6\n    },\n    trends: { methane: 1, production: 3, temperature: 0.5, pressure: 0.2 }\n  },\n  {\n    id: 'D003',\n    name: 'Digester Alpha-3',\n    status: 'maintenance',\n    temperature: 32.1,\n    pressure: 0.8,\n    methaneLevel: 58,\n    dailyProduction: 120.0,\n    efficiency: 78,\n    lastUpdated: new Date().toISOString(),\n    detailedSensors: {\n      ph: 6.8,\n      humidity: 75,\n      co2Level: 35,\n      h2sLevel: 0.22,\n      gasFlow: 32.1,\n      liquidLevel: 65,\n      stirringSpeed: 0,\n      powerConsumption: 0.8\n    },\n    trends: { methane: -1, production: -2, temperature: -0.5, pressure: -0.1 }\n  }\n];\n\n// Real-time data simulation hook\nconst useRealTimeDigesterData = () => {\n  const [digesters, setDigesters] = useState<DigesterData[]>(baseDigesters);\n  const [isConnected, setIsConnected] = useState(true);\n  const [isRealTimeActive, setIsRealTimeActive] = useState(true);\n  const [lastUpdateTime, setLastUpdateTime] = useState(new Date());\n\n  const generateSensorVariation = useCallback((baseValue: number, variation: number, min?: number, max?: number) => {\n    const change = (Math.random() - 0.5) * variation;\n    const newValue = baseValue + change;\n    if (min !== undefined && max !== undefined) {\n      return Math.max(min, Math.min(max, newValue));\n    }\n    return newValue;\n  }, []);\n\n  const updateDigesterData = useCallback(() => {\n    if (!isRealTimeActive) return;\n\n    setDigesters(prevDigesters =>\n      prevDigesters.map(digester => {\n        if (digester.status === 'maintenance') {\n          return { ...digester, lastUpdated: new Date().toISOString() };\n        }\n\n        const updatedDigester: DigesterData = {\n          ...digester,\n          temperature: Math.round(generateSensorVariation(digester.temperature, 0.5, 30, 42) * 10) / 10,\n          pressure: Math.round(generateSensorVariation(digester.pressure, 0.1, 0.5, 2.0) * 10) / 10,\n          methaneLevel: Math.round(generateSensorVariation(digester.methaneLevel, 2, 50, 80)),\n          efficiency: Math.round(generateSensorVariation(digester.efficiency, 1, 70, 95)),\n          detailedSensors: {\n            ph: Math.round(generateSensorVariation(digester.detailedSensors.ph, 0.1, 6.0, 8.5) * 10) / 10,\n            humidity: Math.round(generateSensorVariation(digester.detailedSensors.humidity, 2, 70, 95)),\n            co2Level: Math.round(generateSensorVariation(digester.detailedSensors.co2Level, 1, 20, 40)),\n            h2sLevel: Math.round(generateSensorVariation(digester.detailedSensors.h2sLevel, 0.02, 0.05, 0.3) * 100) / 100,\n            gasFlow: Math.round(generateSensorVariation(digester.detailedSensors.gasFlow, 2, 30, 70) * 10) / 10,\n            liquidLevel: Math.round(generateSensorVariation(digester.detailedSensors.liquidLevel, 1, 60, 90)),\n            stirringSpeed: digester.status === 'active' ? Math.round(generateSensorVariation(digester.detailedSensors.stirringSpeed, 5, 100, 140)) : 0,\n            powerConsumption: Math.round(generateSensorVariation(digester.detailedSensors.powerConsumption, 0.1, 1.5, 3.5) * 10) / 10\n          },\n          lastUpdated: new Date().toISOString()\n        };\n        return updatedDigester;\n      })\n    );\n    setLastUpdateTime(new Date());\n  }, [generateSensorVariation, isRealTimeActive]);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (Math.random() < 0.05) {\n        setIsConnected(false);\n        setTimeout(() => setIsConnected(true), 2000);\n        return;\n      }\n      updateDigesterData();\n    }, 3000);\n\n    return () => clearInterval(interval);\n  }, [updateDigesterData]);\n\n  const toggleRealTime = () => setIsRealTimeActive(!isRealTimeActive);\n  const refreshData = useCallback(() => updateDigesterData(), [updateDigesterData]);\n\n  return {\n    digesters,\n    refreshData,\n    isLoading: false,\n    isConnected,\n    isRealTimeActive,\n    toggleRealTime,\n    lastUpdateTime\n  };\n};\n\n// Sensor Card matching SAUBHAGYA theme exactly\nconst SensorCard: React.FC<{\n  title: string;\n  value: string | number;\n  unit?: string;\n  icon: React.ReactNode;\n  trend?: number;\n  color: string;\n  status?: 'normal' | 'warning' | 'critical';\n  isUpdating?: boolean;\n}> = ({ title, value, unit = '', icon, trend, color, status = 'normal', isUpdating = false }) => {\n  const getCardStyles = () => {\n    switch (status) {\n      case 'warning': return 'hover:shadow-lg transition-all duration-300 border-0 bg-gradient-to-br from-amber-50 to-orange-50';\n      case 'critical': return 'hover:shadow-lg transition-all duration-300 border-0 bg-gradient-to-br from-red-50 to-pink-50';\n      default: return 'hover:shadow-lg transition-all duration-300 border-0 bg-gradient-to-br from-white to-slate-50';\n    }\n  };\n\n  return (\n    <Card className={`\n      ${getCardStyles()}\n      ${isUpdating ? 'ring-2 ring-blue-400/50' : ''}\n    `}>\n      <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n        <CardTitle className=\"text-sm font-medium text-muted-foreground\">\n          {title}\n        </CardTitle>\n        <div className=\"relative\">\n          <div className={`\n            h-8 w-8 rounded-lg bg-primary/10 flex items-center justify-center\n            ${isUpdating ? 'animate-pulse' : ''}\n          `}>\n            {icon}\n          </div>\n          {isUpdating && (\n            <div className=\"absolute -top-1 -right-1 w-3 h-3 bg-blue-500 rounded-full flex items-center justify-center\">\n              <div className=\"w-2 h-2 bg-white rounded-full animate-pulse\" />\n            </div>\n          )}\n        </div>\n      </CardHeader>\n\n      <CardContent>\n        <div className=\"flex items-center justify-between\">\n          <div className=\"text-2xl font-bold\">\n            {value}{unit}\n          </div>\n          {trend !== undefined && (\n            <div className={`\n              flex items-center justify-center w-6 h-6 rounded-full\n              ${trend > 0 ? 'bg-green-100 text-green-600' : 'bg-red-100 text-red-600'}\n            `}>\n              {trend > 0 ? <TrendingUp className=\"w-3 h-3\" /> : <TrendingDown className=\"w-3 h-3\" />}\n            </div>\n          )}\n        </div>\n\n        {isUpdating && (\n          <div className=\"w-full bg-muted rounded-full h-1 mt-2\">\n            <div className=\"h-full bg-primary rounded-full transition-all duration-1000\" style={{width: '100%'}} />\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\n// Connection Status Component\nconst ConnectionStatus: React.FC<{\n  isConnected: boolean;\n  lastUpdate: Date;\n  isRealTimeActive: boolean;\n  onToggleRealTime: () => void;\n}> = ({ isConnected, lastUpdate, isRealTimeActive, onToggleRealTime }) => {\n  return (\n    <Card>\n      <CardContent className=\"p-4\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center gap-4\">\n            {isConnected ? (\n              <div className=\"flex items-center gap-2 text-green-600\">\n                <div className=\"relative\">\n                  <Wifi className=\"w-4 h-4\" />\n                  <div className=\"absolute -top-1 -right-1 w-2 h-2 bg-green-500 rounded-full animate-pulse\" />\n                </div>\n                <span className=\"text-sm font-medium\">CONNECTED</span>\n              </div>\n            ) : (\n              <div className=\"flex items-center gap-2 text-red-500\">\n                <WifiOff className=\"w-4 h-4\" />\n                <span className=\"text-sm font-medium\">RECONNECTING</span>\n              </div>\n            )}\n            <Separator orientation=\"vertical\" className=\"h-4\" />\n            <span className=\"text-sm text-muted-foreground\">\n              Last Update: {lastUpdate.toLocaleTimeString()}\n            </span>\n          </div>\n\n          <Button\n            onClick={onToggleRealTime}\n            variant={isRealTimeActive ? \"default\" : \"outline\"}\n            size=\"sm\"\n            className=\"gap-2\"\n          >\n            {isRealTimeActive ? (\n              <>\n                <Pause className=\"w-4 h-4\" />\n                Pause Updates\n              </>\n            ) : (\n              <>\n                <Play className=\"w-4 h-4\" />\n                Resume Updates\n              </>\n            )}\n          </Button>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\n// Chart Component\nconst ChartCard: React.FC<{\n  title: string;\n  subtitle: string;\n  children: React.ReactNode;\n  isLive?: boolean;\n}> = ({ title, subtitle, children, isLive = false }) => {\n  return (\n    <Card>\n      <CardHeader>\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <CardTitle className=\"flex items-center gap-3\">\n              {title}\n              {isLive && (\n                <div className=\"flex items-center gap-2\">\n                  <div className=\"w-2 h-2 bg-green-500 rounded-full animate-pulse\" />\n                  <span className=\"text-xs font-medium text-green-600 uppercase tracking-wide\">LIVE</span>\n                </div>\n              )}\n            </CardTitle>\n            <CardDescription>\n              {subtitle}\n            </CardDescription>\n          </div>\n          <div className=\"h-8 w-8 rounded-lg bg-primary/10 flex items-center justify-center\">\n            <Monitor className=\"h-4 w-4 text-muted-foreground\" />\n          </div>\n        </div>\n      </CardHeader>\n\n      <CardContent>\n        {children}\n      </CardContent>\n    </Card>\n  );\n};\n\n// Generate chart data\nconst getDetailedChartData = (digester: DigesterData) => {\n  const hours = Array.from({ length: 24 }, (_, i) => {\n    const hour = i;\n    const timeLabel = `${hour.toString().padStart(2, '0')}:00`;\n    const variation = Math.sin(i * 0.5) * 5;\n\n    return {\n      time: timeLabel,\n      temperature: Math.round((digester.temperature + variation + Math.random() * 2) * 10) / 10,\n      pressure: Math.round((digester.pressure + variation * 0.1 + Math.random() * 0.2) * 10) / 10,\n      methane: Math.round(digester.methaneLevel + variation + Math.random() * 3),\n      ph: Math.round((digester.detailedSensors.ph + variation * 0.1 + Math.random() * 0.2) * 10) / 10,\n      gasFlow: Math.round(digester.detailedSensors.gasFlow + variation + Math.random() * 5),\n      efficiency: Math.round(digester.efficiency + variation * 0.5 + Math.random() * 2)\n    };\n  });\n\n  return hours;\n};\n\n// Main Component\nconst ModernDigesterMonitoring: React.FC = () => {\n  const [selectedDigesterId, setSelectedDigesterId] = useState<string>('D001');\n\n  const {\n    digesters,\n    refreshData,\n    isLoading,\n    isConnected,\n    isRealTimeActive,\n    toggleRealTime,\n    lastUpdateTime\n  } = useRealTimeDigesterData();\n\n  const selectedDigester = digesters.find(d => d.id === selectedDigesterId) || digesters[0];\n  const [isUpdating, setIsUpdating] = useState(false);\n  const chartData = getDetailedChartData(selectedDigester);\n\n  useEffect(() => {\n    if (isConnected && isRealTimeActive) {\n      setIsUpdating(true);\n      const timer = setTimeout(() => setIsUpdating(false), 1000);\n      return () => clearTimeout(timer);\n    }\n  }, [selectedDigester.lastUpdated, isConnected, isRealTimeActive]);\n\n  const statusIcon = selectedDigester.status === 'active' ? CheckCircle : AlertTriangle;\n  const StatusIcon = statusIcon;\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between -mt-6\">\n        <div>\n          <h1 className=\"text-3xl font-bold tracking-tight\">Real-Time Digester Monitoring</h1>\n          <p className=\"text-muted-foreground\">\n            Live sensor data, advanced analytics, continuous monitoring\n          </p>\n        </div>\n        <div className=\"flex items-center gap-4\">\n          <div className=\"flex items-center gap-3\">\n            <label className=\"text-sm font-medium\">Select Digester:</label>\n            <Select value={selectedDigesterId} onValueChange={setSelectedDigesterId}>\n              <SelectTrigger className=\"w-48\">\n                <SelectValue placeholder=\"Choose a digester\" />\n              </SelectTrigger>\n              <SelectContent>\n                {digesters.map((digester) => (\n                  <SelectItem key={digester.id} value={digester.id}>\n                    <div className=\"flex items-center gap-2\">\n                      <div className={`w-2 h-2 rounded-full ${\n                        digester.status === 'active' ? 'bg-green-500' : 'bg-yellow-500'\n                      }`} />\n                      {digester.name}\n                    </div>\n                  </SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n          </div>\n          <Button\n            onClick={refreshData}\n            disabled={isLoading}\n            variant=\"outline\"\n            size=\"sm\"\n            className=\"gap-2\"\n          >\n            <RefreshCw className={`w-4 h-4 ${isLoading ? 'animate-spin' : ''}`} />\n            Refresh\n          </Button>\n        </div>\n      </div>\n\n      {/* Digester Header Card */}\n      <Card>\n        <CardHeader>\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <CardTitle className=\"text-xl font-bold\">\n                {selectedDigester.name}\n              </CardTitle>\n              <CardDescription>\n                Last Updated: {new Date(selectedDigester.lastUpdated).toLocaleString()}\n              </CardDescription>\n            </div>\n            <div className=\"flex items-center gap-4\">\n              <Badge className={`${\n                selectedDigester.status === 'active'\n                  ? 'bg-green-100 text-green-800'\n                  : 'bg-yellow-100 text-yellow-800'\n              } border font-semibold capitalize flex items-center gap-1`}>\n                <StatusIcon className=\"w-3 h-3\" />\n                {selectedDigester.status.toUpperCase()}\n              </Badge>\n            </div>\n          </div>\n        </CardHeader>\n      </Card>\n\n      {/* Connection Status */}\n      <ConnectionStatus\n        isConnected={isConnected}\n        lastUpdate={lastUpdateTime}\n        isRealTimeActive={isRealTimeActive}\n        onToggleRealTime={toggleRealTime}\n      />\n\n      {/* Primary Sensors */}\n      <div>\n        <h2 className=\"text-2xl font-bold tracking-tight mb-4 flex items-center gap-3\">\n          <Cpu className=\"h-4 w-4 text-blue-600\" />\n          Primary Sensors\n        </h2>\n        <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n          <SensorCard\n            title=\"Temperature\"\n            value={selectedDigester.temperature}\n            unit=\"°C\"\n            icon={<Thermometer className=\"h-4 w-4 text-orange-600\" />}\n            trend={selectedDigester.trends?.temperature}\n            color=\"orange\"\n            status={selectedDigester.temperature > 40 ? 'warning' : 'normal'}\n            isUpdating={isUpdating && isConnected && isRealTimeActive}\n          />\n          <SensorCard\n            title=\"Pressure\"\n            value={selectedDigester.pressure}\n            unit=\" kPa\"\n            icon={<Gauge className=\"h-4 w-4 text-blue-600\" />}\n            trend={selectedDigester.trends?.pressure}\n            color=\"blue\"\n            isUpdating={isUpdating && isConnected && isRealTimeActive}\n          />\n          <SensorCard\n            title=\"Methane Level\"\n            value={selectedDigester.methaneLevel}\n            unit=\"%\"\n            icon={<Zap className=\"h-4 w-4 text-yellow-600\" />}\n            trend={selectedDigester.trends?.methane}\n            color=\"yellow\"\n            status={selectedDigester.methaneLevel < 60 ? 'warning' : 'normal'}\n            isUpdating={isUpdating && isConnected && isRealTimeActive}\n          />\n          <SensorCard\n            title=\"Efficiency\"\n            value={selectedDigester.efficiency}\n            unit=\"%\"\n            icon={<Activity className=\"h-4 w-4 text-green-600\" />}\n            trend={selectedDigester.trends?.production}\n            color=\"green\"\n            isUpdating={isUpdating && isConnected && isRealTimeActive}\n          />\n        </div>\n      </div>\n\n      {/* Secondary Sensors */}\n      <div>\n        <h2 className=\"text-2xl font-bold tracking-tight mb-4 flex items-center gap-3\">\n          <Radio className=\"h-4 w-4 text-purple-600\" />\n          Secondary Sensors\n        </h2>\n        <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n          <SensorCard\n            title=\"pH Level\"\n            value={selectedDigester.detailedSensors?.ph}\n            icon={<Beaker className=\"h-4 w-4 text-purple-600\" />}\n            color=\"purple\"\n            status={selectedDigester.detailedSensors?.ph! < 6.5 || selectedDigester.detailedSensors?.ph! > 8 ? 'warning' : 'normal'}\n            isUpdating={isUpdating && isConnected && isRealTimeActive}\n          />\n          <SensorCard\n            title=\"Humidity\"\n            value={selectedDigester.detailedSensors?.humidity}\n            unit=\"%\"\n            icon={<Droplets className=\"h-4 w-4 text-cyan-600\" />}\n            color=\"cyan\"\n            isUpdating={isUpdating && isConnected && isRealTimeActive}\n          />\n          <SensorCard\n            title=\"CO₂ Level\"\n            value={selectedDigester.detailedSensors?.co2Level}\n            unit=\"%\"\n            icon={<Wind className=\"h-4 w-4 text-gray-600\" />}\n            color=\"gray\"\n            isUpdating={isUpdating && isConnected && isRealTimeActive}\n          />\n          <SensorCard\n            title=\"H₂S Level\"\n            value={selectedDigester.detailedSensors?.h2sLevel}\n            unit=\" ppm\"\n            icon={<AlertTriangle className=\"h-4 w-4 text-red-600\" />}\n            color=\"red\"\n            status={selectedDigester.detailedSensors?.h2sLevel! > 0.2 ? 'warning' : 'normal'}\n            isUpdating={isUpdating && isConnected && isRealTimeActive}\n          />\n        </div>\n      </div>\n\n      {/* Operational Metrics */}\n      <div>\n        <h2 className=\"text-2xl font-bold tracking-tight mb-4 flex items-center gap-3\">\n          <Settings className=\"h-4 w-4 text-indigo-600\" />\n          Operational Metrics\n        </h2>\n        <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n          <SensorCard\n            title=\"Gas Flow Rate\"\n            value={selectedDigester.detailedSensors?.gasFlow}\n            unit=\" L/min\"\n            icon={<Wind className=\"h-4 w-4 text-blue-600\" />}\n            color=\"blue\"\n            isUpdating={isUpdating && isConnected && isRealTimeActive}\n          />\n          <SensorCard\n            title=\"Liquid Level\"\n            value={selectedDigester.detailedSensors?.liquidLevel}\n            unit=\"%\"\n            icon={<Gauge className=\"h-4 w-4 text-teal-600\" />}\n            color=\"teal\"\n            status={selectedDigester.detailedSensors?.liquidLevel! < 70 ? 'warning' : 'normal'}\n            isUpdating={isUpdating && isConnected && isRealTimeActive}\n          />\n          <SensorCard\n            title=\"Stirring Speed\"\n            value={selectedDigester.detailedSensors?.stirringSpeed}\n            unit=\" RPM\"\n            icon={<Settings className=\"h-4 w-4 text-indigo-600\" />}\n            color=\"indigo\"\n            status={selectedDigester.status === 'maintenance' && selectedDigester.detailedSensors?.stirringSpeed === 0 ? 'warning' : 'normal'}\n            isUpdating={isUpdating && isConnected && isRealTimeActive}\n          />\n          <SensorCard\n            title=\"Power Consumption\"\n            value={selectedDigester.detailedSensors?.powerConsumption}\n            unit=\" kW\"\n            icon={<Zap className=\"h-4 w-4 text-yellow-600\" />}\n            color=\"yellow\"\n            isUpdating={isUpdating && isConnected && isRealTimeActive}\n          />\n        </div>\n      </div>\n\n      {/* Charts */}\n      <div className=\"grid gap-6 lg:grid-cols-2\">\n        <ChartCard\n          title=\"Live Efficiency Analytics\"\n          subtitle=\"Real-time efficiency and gas flow correlation\"\n          isLive={isConnected && isRealTimeActive}\n        >\n          <ResponsiveContainer width=\"100%\" height={300}>\n            <LineChart data={chartData}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"time\" />\n              <YAxis />\n              <Tooltip />\n              <Legend />\n              <Line\n                type=\"monotone\"\n                dataKey=\"efficiency\"\n                stroke=\"#10b981\"\n                strokeWidth={2}\n                name=\"Efficiency (%)\"\n              />\n              <Line\n                type=\"monotone\"\n                dataKey=\"gasFlow\"\n                stroke=\"#3b82f6\"\n                strokeWidth={2}\n                name=\"Gas Flow (L/min)\"\n              />\n            </LineChart>\n          </ResponsiveContainer>\n        </ChartCard>\n\n        <ChartCard\n          title=\"Environmental Conditions\"\n          subtitle=\"Temperature, pressure, and pH monitoring\"\n          isLive={isConnected && isRealTimeActive}\n        >\n          <ResponsiveContainer width=\"100%\" height={300}>\n            <LineChart data={chartData}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"time\" />\n              <YAxis />\n              <Tooltip />\n              <Legend />\n              <Line\n                type=\"monotone\"\n                dataKey=\"temperature\"\n                stroke=\"#f59e0b\"\n                strokeWidth={2}\n                name=\"Temperature (°C)\"\n              />\n              <Line\n                type=\"monotone\"\n                dataKey=\"pressure\"\n                stroke=\"#8b5cf6\"\n                strokeWidth={2}\n                name=\"Pressure (kPa)\"\n              />\n              <Line\n                type=\"monotone\"\n                dataKey=\"ph\"\n                stroke=\"#ec4899\"\n                strokeWidth={2}\n                name=\"pH Level\"\n              />\n            </LineChart>\n          </ResponsiveContainer>\n        </ChartCard>\n      </div>\n\n      {/* Live Methane Production Stream */}\n      <ChartCard\n        title=\"Live Methane Production Stream\"\n        subtitle=\"Real-time methane concentration monitoring\"\n        isLive={isConnected && isRealTimeActive}\n      >\n        <ResponsiveContainer width=\"100%\" height={300}>\n          <AreaChart data={chartData}>\n            <defs>\n              <linearGradient id=\"methaneGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                <stop offset=\"5%\" stopColor=\"#fbbf24\" stopOpacity={0.3}/>\n                <stop offset=\"95%\" stopColor=\"#fbbf24\" stopOpacity={0.1}/>\n              </linearGradient>\n            </defs>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"time\" />\n            <YAxis />\n            <Tooltip />\n            <Legend />\n            <Area\n              type=\"monotone\"\n              dataKey=\"methane\"\n              stroke=\"#fbbf24\"\n              strokeWidth={2}\n              fillOpacity={1}\n              fill=\"url(#methaneGradient)\"\n              name=\"Methane Level (%)\"\n            />\n          </AreaChart>\n        </ResponsiveContainer>\n      </ChartCard>\n    </div>\n  );\n};\n\nexport default ModernDigesterMonitoring;","import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nexport interface TextareaProps\r\n  extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {}\r\n\r\nconst Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(\r\n  ({ className, ...props }, ref) => {\r\n    return (\r\n      <textarea\r\n        className={cn(\r\n          \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nTextarea.displayName = \"Textarea\"\r\n\r\nexport { Textarea }","import * as React from \"react\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Table = React.forwardRef<\r\n  HTMLTableElement,\r\n  React.HTMLAttributes<HTMLTableElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div className=\"relative w-full overflow-auto\">\r\n    <table\r\n      ref={ref}\r\n      className={cn(\"w-full caption-bottom text-sm\", className)}\r\n      {...props}\r\n    />\r\n  </div>\r\n))\r\nTable.displayName = \"Table\"\r\n\r\nconst TableHeader = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\r\n))\r\nTableHeader.displayName = \"TableHeader\"\r\n\r\nconst TableBody = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tbody\r\n    ref={ref}\r\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nTableBody.displayName = \"TableBody\"\r\n\r\nconst TableFooter = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tfoot\r\n    ref={ref}\r\n    className={cn(\r\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableFooter.displayName = \"TableFooter\"\r\n\r\nconst TableRow = React.forwardRef<\r\n  HTMLTableRowElement,\r\n  React.HTMLAttributes<HTMLTableRowElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tr\r\n    ref={ref}\r\n    className={cn(\r\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableRow.displayName = \"TableRow\"\r\n\r\nconst TableHead = React.forwardRef<\r\n  HTMLTableCellElement,\r\n  React.ThHTMLAttributes<HTMLTableCellElement>\r\n>(({ className, ...props }, ref) => (\r\n  <th\r\n    ref={ref}\r\n    className={cn(\r\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableHead.displayName = \"TableHead\"\r\n\r\nconst TableCell = React.forwardRef<\r\n  HTMLTableCellElement,\r\n  React.TdHTMLAttributes<HTMLTableCellElement>\r\n>(({ className, ...props }, ref) => (\r\n  <td\r\n    ref={ref}\r\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nTableCell.displayName = \"TableCell\"\r\n\r\nconst TableCaption = React.forwardRef<\r\n  HTMLTableCaptionElement,\r\n  React.HTMLAttributes<HTMLTableCaptionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <caption\r\n    ref={ref}\r\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nTableCaption.displayName = \"TableCaption\"\r\n\r\nexport {\r\n  Table,\r\n  TableHeader,\r\n  TableBody,\r\n  TableFooter,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableCaption,\r\n}","/**\r\n * Biogas Service API Client\r\n * Connects to biogas-service backend (port 8082)\r\n * All APIs require JWT authentication\r\n */\r\n\r\nconst BIOGAS_SERVICE_URL = 'http://localhost:8082/biogas-service/api/v1';\r\n\r\n// Helper function to get JWT token\r\nconst getAuthHeaders = (): HeadersInit => {\r\n  const token = localStorage.getItem('saubhagya_jwt_token');\r\n  return {\r\n    'Content-Type': 'application/json',\r\n    'Authorization': `Bearer ${token}`\r\n  };\r\n};\r\n\r\n// API Response type\r\nexport interface ApiResponse<T> {\r\n  success: boolean;\r\n  data?: T;\r\n  message?: string;\r\n  error?: string | null;\r\n}\r\n\r\n// Dashboard Stats Types\r\nexport interface DashboardStatsResponse {\r\n  totalProduction: number;\r\n  totalCollections: number;\r\n  totalWeight: number | null;\r\n  totalPayments: number;\r\n  pendingPayments: number;\r\n  totalBatches: number | null;\r\n  activeBatches: number | null;\r\n}\r\n\r\nexport interface ClusterDashboardResponse {\r\n  clusterId: string;\r\n  clusterName: string;\r\n  totalDigesters: number;\r\n  activeDigesters: number;\r\n  totalProduction: number;\r\n  averageEfficiency: number;\r\n  criticalAlerts: number;\r\n  // Add more fields as needed\r\n}\r\n\r\nexport interface ProductionTrendsResponse {\r\n  trends: Array<{\r\n    date: string;\r\n    production: number;\r\n    efficiency: number;\r\n  }>;\r\n}\r\n\r\nexport interface FarmerPerformanceResponse {\r\n  farmers: Array<{\r\n    farmerId: string;\r\n    farmerName: string;\r\n    totalContribution: number;\r\n    rank: number;\r\n  }>;\r\n}\r\n\r\nexport interface QualityTrendsResponse {\r\n  trends: Array<{\r\n    date: string;\r\n    gradeA: number;\r\n    gradeB: number;\r\n    gradeC: number;\r\n  }>;\r\n}\r\n\r\nexport interface PaymentSummaryResponse {\r\n  totalPayments: number;\r\n  pendingPayments: number;\r\n  completedPayments: number;\r\n  totalAmount: number;\r\n  statusBreakdown: {\r\n    pending: number;\r\n    completed: number;\r\n    failed: number;\r\n  };\r\n}\r\n\r\n// Batch Management Types\r\nexport interface ProductionBatch {\r\n  id: number;\r\n  externalId: string;\r\n  batchNumber: string;\r\n  clusterId: string;\r\n  sourceContributions: string[];\r\n  totalInputWeightKg: number;\r\n  productionStartDate: string;\r\n  productionEndDate?: string;\r\n  biogasProducedCubicMeters?: number;\r\n  methaneContentPercent?: number;\r\n  h2sContentPpm?: number;\r\n  productionEfficiencyPercent?: number;\r\n  qualityGrade?: 'PREMIUM' | 'STANDARD' | 'BASIC';\r\n  batchStatus: 'SCHEDULED' | 'IN_PRODUCTION' | 'COMPLETED' | 'QUALITY_TESTED' | 'READY_FOR_SALE';\r\n  operatorUserId?: string;\r\n  notes?: string;\r\n  carbonCreditGenerated: boolean;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n}\r\n\r\nexport interface CreateBatchRequest {\r\n  clusterId: string;\r\n  sourceContributions: string[];\r\n  totalInputWeightKg: number;\r\n  productionStartDate: string;\r\n  operatorUserId?: string;\r\n  notes?: string;\r\n}\r\n\r\nexport interface CompleteBatchRequest {\r\n  biogasProducedCubicMeters: number;\r\n  methaneContentPercent: number;\r\n  h2sContentPpm: number;\r\n  productionEfficiencyPercent: number;\r\n  qualityGrade: 'PREMIUM' | 'STANDARD' | 'BASIC';\r\n  notes?: string;\r\n}\r\n\r\nexport interface BatchPageResponse {\r\n  content: ProductionBatch[];\r\n  totalElements: number;\r\n  totalPages: number;\r\n  size: number;\r\n  number: number;\r\n}\r\n\r\n/**\r\n * Dashboard Service\r\n */\r\nexport const biogasService = {\r\n  /**\r\n   * AC-70: Get dashboard stats\r\n   * GET /api/v1/dashboard/stats\r\n   */\r\n  async getDashboardStats(clusterId?: string): Promise<ApiResponse<DashboardStatsResponse>> {\r\n    try {\r\n      const url = clusterId\r\n        ? `${BIOGAS_SERVICE_URL}/dashboard/stats?clusterId=${clusterId}`\r\n        : `${BIOGAS_SERVICE_URL}/dashboard/stats`;\r\n\r\n      const response = await fetch(url, {\r\n        method: 'GET',\r\n        headers: getAuthHeaders()\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\r\n      }\r\n\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('Failed to fetch dashboard stats:', error);\r\n      return {\r\n        success: false,\r\n        error: error instanceof Error ? error.message : 'Failed to fetch dashboard stats'\r\n      };\r\n    }\r\n  },\r\n\r\n  /**\r\n   * AC-69: Get cluster dashboard\r\n   * GET /api/v1/dashboard/cluster/{clusterId}\r\n   */\r\n  async getClusterDashboard(clusterId: string): Promise<ApiResponse<ClusterDashboardResponse>> {\r\n    try {\r\n      const response = await fetch(`${BIOGAS_SERVICE_URL}/dashboard/cluster/${clusterId}`, {\r\n        method: 'GET',\r\n        headers: getAuthHeaders()\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\r\n      }\r\n\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('Failed to fetch cluster dashboard:', error);\r\n      return {\r\n        success: false,\r\n        error: error instanceof Error ? error.message : 'Failed to fetch cluster dashboard'\r\n      };\r\n    }\r\n  },\r\n\r\n  /**\r\n   * AC-71: Get production trends\r\n   * GET /api/v1/dashboard/analytics/production-trends\r\n   */\r\n  async getProductionTrends(\r\n    clusterId: string,\r\n    startDate?: string,\r\n    endDate?: string,\r\n    granularity: 'daily' | 'weekly' | 'monthly' = 'daily'\r\n  ): Promise<ApiResponse<ProductionTrendsResponse>> {\r\n    try {\r\n      const params = new URLSearchParams({ clusterId, granularity });\r\n      if (startDate) params.append('startDate', startDate);\r\n      if (endDate) params.append('endDate', endDate);\r\n\r\n      const response = await fetch(\r\n        `${BIOGAS_SERVICE_URL}/dashboard/analytics/production-trends?${params}`,\r\n        {\r\n          method: 'GET',\r\n          headers: getAuthHeaders()\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\r\n      }\r\n\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('Failed to fetch production trends:', error);\r\n      return {\r\n        success: false,\r\n        error: error instanceof Error ? error.message : 'Failed to fetch production trends'\r\n      };\r\n    }\r\n  },\r\n\r\n  /**\r\n   * AC-72: Get farmer performance\r\n   * GET /api/v1/dashboard/analytics/farmer-performance\r\n   */\r\n  async getFarmerPerformance(\r\n    clusterId: string,\r\n    startDate?: string,\r\n    endDate?: string\r\n  ): Promise<ApiResponse<FarmerPerformanceResponse>> {\r\n    try {\r\n      const params = new URLSearchParams({ clusterId });\r\n      if (startDate) params.append('startDate', startDate);\r\n      if (endDate) params.append('endDate', endDate);\r\n\r\n      const response = await fetch(\r\n        `${BIOGAS_SERVICE_URL}/dashboard/analytics/farmer-performance?${params}`,\r\n        {\r\n          method: 'GET',\r\n          headers: getAuthHeaders()\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\r\n      }\r\n\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('Failed to fetch farmer performance:', error);\r\n      return {\r\n        success: false,\r\n        error: error instanceof Error ? error.message : 'Failed to fetch farmer performance'\r\n      };\r\n    }\r\n  },\r\n\r\n  /**\r\n   * AC-73: Get quality trends\r\n   * GET /api/v1/dashboard/analytics/quality-trends\r\n   */\r\n  async getQualityTrends(\r\n    clusterId: string,\r\n    startDate?: string,\r\n    endDate?: string\r\n  ): Promise<ApiResponse<QualityTrendsResponse>> {\r\n    try {\r\n      const params = new URLSearchParams({ clusterId });\r\n      if (startDate) params.append('startDate', startDate);\r\n      if (endDate) params.append('endDate', endDate);\r\n\r\n      const response = await fetch(\r\n        `${BIOGAS_SERVICE_URL}/dashboard/analytics/quality-trends?${params}`,\r\n        {\r\n          method: 'GET',\r\n          headers: getAuthHeaders()\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\r\n      }\r\n\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('Failed to fetch quality trends:', error);\r\n      return {\r\n        success: false,\r\n        error: error instanceof Error ? error.message : 'Failed to fetch quality trends'\r\n      };\r\n    }\r\n  },\r\n\r\n  /**\r\n   * AC-74: Get payment summary\r\n   * GET /api/v1/dashboard/analytics/payment-summary\r\n   */\r\n  async getPaymentSummary(\r\n    clusterId: string,\r\n    startDate?: string,\r\n    endDate?: string\r\n  ): Promise<ApiResponse<PaymentSummaryResponse>> {\r\n    try {\r\n      const params = new URLSearchParams({ clusterId });\r\n      if (startDate) params.append('startDate', startDate);\r\n      if (endDate) params.append('endDate', endDate);\r\n\r\n      const response = await fetch(\r\n        `${BIOGAS_SERVICE_URL}/dashboard/analytics/payment-summary?${params}`,\r\n        {\r\n          method: 'GET',\r\n          headers: getAuthHeaders()\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\r\n      }\r\n\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('Failed to fetch payment summary:', error);\r\n      return {\r\n        success: false,\r\n        error: error instanceof Error ? error.message : 'Failed to fetch payment summary'\r\n      };\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Batch Management APIs\r\n   */\r\n\r\n  /**\r\n   * Get production batches with filtering and pagination\r\n   * GET /api/v1/production/batches\r\n   */\r\n  async getBatches(\r\n    clusterId?: string,\r\n    status?: 'SCHEDULED' | 'IN_PRODUCTION' | 'COMPLETED' | 'QUALITY_TESTED' | 'READY_FOR_SALE',\r\n    page: number = 0,\r\n    size: number = 20\r\n  ): Promise<ApiResponse<BatchPageResponse>> {\r\n    try {\r\n      const params = new URLSearchParams({ page: page.toString(), size: size.toString() });\r\n      if (clusterId) params.append('clusterId', clusterId);\r\n      if (status) params.append('status', status);\r\n\r\n      const response = await fetch(\r\n        `${BIOGAS_SERVICE_URL}/production/batches?${params}`,\r\n        {\r\n          method: 'GET',\r\n          headers: getAuthHeaders()\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\r\n      }\r\n\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('Failed to fetch production batches:', error);\r\n      return {\r\n        success: false,\r\n        error: error instanceof Error ? error.message : 'Failed to fetch production batches'\r\n      };\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Get batch by ID\r\n   * GET /api/v1/production/batches/{id}\r\n   */\r\n  async getBatchById(id: number): Promise<ApiResponse<ProductionBatch>> {\r\n    try {\r\n      const response = await fetch(`${BIOGAS_SERVICE_URL}/production/batches/${id}`, {\r\n        method: 'GET',\r\n        headers: getAuthHeaders()\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\r\n      }\r\n\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('Failed to fetch batch:', error);\r\n      return {\r\n        success: false,\r\n        error: error instanceof Error ? error.message : 'Failed to fetch batch'\r\n      };\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Create new production batch\r\n   * POST /api/v1/production/batches\r\n   */\r\n  async createBatch(request: CreateBatchRequest): Promise<ApiResponse<ProductionBatch>> {\r\n    try {\r\n      const response = await fetch(`${BIOGAS_SERVICE_URL}/production/batches`, {\r\n        method: 'POST',\r\n        headers: getAuthHeaders(),\r\n        body: JSON.stringify(request)\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\r\n      }\r\n\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('Failed to create batch:', error);\r\n      return {\r\n        success: false,\r\n        error: error instanceof Error ? error.message : 'Failed to create batch'\r\n      };\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Start batch production\r\n   * POST /api/v1/production/batches/{id}/start\r\n   */\r\n  async startBatch(id: number): Promise<ApiResponse<ProductionBatch>> {\r\n    try {\r\n      const response = await fetch(`${BIOGAS_SERVICE_URL}/production/batches/${id}/start`, {\r\n        method: 'POST',\r\n        headers: getAuthHeaders()\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\r\n      }\r\n\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('Failed to start batch:', error);\r\n      return {\r\n        success: false,\r\n        error: error instanceof Error ? error.message : 'Failed to start batch'\r\n      };\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Complete batch with quality measurements\r\n   * POST /api/v1/production/batches/{id}/complete\r\n   */\r\n  async completeBatch(id: number, request: CompleteBatchRequest): Promise<ApiResponse<ProductionBatch>> {\r\n    try {\r\n      const response = await fetch(`${BIOGAS_SERVICE_URL}/production/batches/${id}/complete`, {\r\n        method: 'POST',\r\n        headers: getAuthHeaders(),\r\n        body: JSON.stringify(request)\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\r\n      }\r\n\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('Failed to complete batch:', error);\r\n      return {\r\n        success: false,\r\n        error: error instanceof Error ? error.message : 'Failed to complete batch'\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\nexport default biogasService;\r\n","import React, { useState, useEffect } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '../../components/ui/card';\nimport { Badge } from '../../components/ui/badge';\nimport { Button } from '../../components/ui/button';\nimport { Input } from '../../components/ui/input';\nimport { Label } from '../../components/ui/label';\nimport { Textarea } from '../../components/ui/textarea';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '../../components/ui/select';\nimport { Dialog, DialogContent, DialogDescription, DialogFooter, DialogHeader, DialogTitle, DialogTrigger } from '../../components/ui/dialog';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '../../components/ui/table';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '../../components/ui/tabs';\nimport {\n  Plus,\n  Edit,\n  Trash2,\n  Search,\n  Filter,\n  Package,\n  Clock,\n  CheckCircle,\n  AlertCircle,\n  Truck,\n  FileText,\n  Eye,\n  Download\n} from 'lucide-react';\nimport biogasService, { ProductionBatch, CreateBatchRequest, CompleteBatchRequest } from '../../services/biogasService';\n\n// Mock types for BatchManagement (will be replaced with backend types)\ntype BatchStatus = 'processing' | 'ready' | 'transferred' | 'rejected' | 'testing' | 'SCHEDULED' | 'IN_PRODUCTION' | 'COMPLETED' | 'QUALITY_TESTED' | 'READY_FOR_SALE';\n\ninterface BatchData {\n  id: string;\n  digesterId: string;\n  volume: number;\n  methaneContent: number;\n  status: BatchStatus;\n  createdDate: string;\n  transferDate?: string;\n  qualityScore?: number;\n  notes: string;\n  farmerName?: string;\n  source?: string;\n}\n\ninterface QualityCertificate {\n  id: string;\n  batchId: string;\n  issuedDate: string;\n  qualityScore: number;\n  certifiedBy?: string;\n  validUntil?: string;\n}\n\n// Enhanced Mock data with realistic Indian biogas operations\nconst batches: BatchData[] = [\n  {\n    id: 'BATCH-001',\n    digesterId: 'DIG-001',\n    volume: 45.2,\n    methaneContent: 65.8,\n    status: 'ready',\n    createdDate: new Date().toISOString(),\n    transferDate: new Date(Date.now() + 7200000).toISOString(),\n    qualityScore: 92,\n    farmerName: 'राजेश कुमार',\n    source: 'Gokul Gaushala, Mathura',\n    notes: 'Premium quality cow dung batch from Rajesh Kumar. Optimal fermentation achieved with excellent gas composition. Ready for immediate transfer to distribution network. Source: 15 indigenous cows, organic feed only.'\n  },\n  {\n    id: 'BATCH-002',\n    digesterId: 'DIG-002',\n    volume: 38.7,\n    methaneContent: 62.3,\n    status: 'processing',\n    createdDate: new Date(Date.now() - 86400000).toISOString(),\n    qualityScore: 78,\n    farmerName: 'सुनीता देवी',\n    source: 'Vrindavan Organic Farm',\n    notes: 'Mixed dung batch in active fermentation phase. Temperature maintained at 37°C. Expected completion in 48 hours with good quality prospects. Contains cow and buffalo dung mixture from certified organic farm.'\n  },\n  {\n    id: 'BATCH-003',\n    digesterId: 'DIG-003',\n    volume: 52.8,\n    methaneContent: 68.2,\n    status: 'ready',\n    createdDate: new Date(Date.now() - 172800000).toISOString(),\n    transferDate: new Date().toISOString(),\n    qualityScore: 95,\n    farmerName: 'श्याम यादव',\n    source: 'Yamuna Riverside Gaushala',\n    notes: 'Exceptional buffalo dung batch from Shyam Yadav. Highest methane content achieved this quarter. Certified Grade A premium quality. Source: 25 Murrah buffaloes with optimal nutrition and care.'\n  },\n  {\n    id: 'BATCH-004',\n    digesterId: 'DIG-001',\n    volume: 41.3,\n    methaneContent: 58.9,\n    status: 'testing',\n    createdDate: new Date(Date.now() - 259200000).toISOString(),\n    qualityScore: 72,\n    farmerName: 'अमित शर्मा',\n    source: 'Govind Dairy Farm',\n    notes: 'Standard cow dung batch undergoing final quality assessment. Moderate methane levels detected. Awaiting lab confirmation for Grade B classification. Processing time extended due to lower initial moisture content.'\n  },\n  {\n    id: 'BATCH-005',\n    digesterId: 'DIG-004',\n    volume: 29.6,\n    methaneContent: 55.4,\n    status: 'rejected',\n    createdDate: new Date(Date.now() - 345600000).toISOString(),\n    qualityScore: 48,\n    farmerName: 'प्रेम सिंह',\n    source: 'Village Cooperative',\n    notes: 'Batch from contaminated feedstock. Low methane content due to improper storage conditions. Rejected for commercial use, diverted to compost production. Root cause: contamination from non-organic sources and poor collection hygiene.'\n  },\n  {\n    id: 'BATCH-006',\n    digesterId: 'DIG-002',\n    volume: 47.9,\n    methaneContent: 63.7,\n    status: 'transferred',\n    createdDate: new Date(Date.now() - 432000000).toISOString(),\n    transferDate: new Date(Date.now() - 86400000).toISOString(),\n    qualityScore: 86,\n    farmerName: 'गीता देवी',\n    source: 'Krishna Valley Farm',\n    notes: 'High-quality mixed dung batch successfully transferred to Mathura distribution center. Excellent fermentation results with consistent gas output. Customer feedback: exceptional performance in commercial biogas units.'\n  },\n  {\n    id: 'BATCH-007',\n    digesterId: 'DIG-003',\n    volume: 35.1,\n    methaneContent: 71.2,\n    status: 'ready',\n    createdDate: new Date(Date.now() - 518400000).toISOString(),\n    qualityScore: 97,\n    farmerName: 'राम प्रसाद',\n    source: 'Organic Gaushala Trust',\n    notes: 'Premium buffalo dung batch with exceptional methane purity. Sourced from Organic Gaushala cooperative. Meets all export quality standards. Tested for international markets - approved for European biogas facilities.'\n  },\n  {\n    id: 'BATCH-008',\n    digesterId: 'DIG-005',\n    volume: 33.4,\n    methaneContent: 59.8,\n    status: 'processing',\n    createdDate: new Date(Date.now() - 604800000).toISOString(),\n    qualityScore: 74,\n    farmerName: 'लक्ष्मी यादव',\n    source: 'Braj Bhumi Gaushala',\n    notes: 'Cow dung batch from Gita Devi\\'s farm. Processing delayed due to monsoon humidity. Temperature regulation implemented, expecting improvement. Additional heating systems deployed to counter seasonal moisture challenges.'\n  },\n  {\n    id: 'BATCH-009',\n    digesterId: 'DIG-001',\n    volume: 44.7,\n    methaneContent: 66.4,\n    status: 'testing',\n    createdDate: new Date(Date.now() - 691200000).toISOString(),\n    qualityScore: 88,\n    farmerName: 'विकास कुमार',\n    source: 'Vrindavan Heritage Gaushala',\n    notes: 'Large volume cow dung batch from Vrindavan Gaushala. Final quality checks in progress. Preliminary results show excellent commercial viability. Volume sufficient for pilot testing in urban biogas distribution network.'\n  },\n  {\n    id: 'BATCH-010',\n    digesterId: 'DIG-004',\n    volume: 39.8,\n    methaneContent: 64.1,\n    status: 'transferred',\n    createdDate: new Date(Date.now() - 777600000).toISOString(),\n    transferDate: new Date(Date.now() - 259200000).toISOString(),\n    qualityScore: 83,\n    farmerName: 'सुरेश चंद्र',\n    source: 'Radha Krishna Dairy',\n    notes: 'Standard quality mixed dung batch successfully delivered to regional distribution network. Good consistency maintained throughout fermentation cycle. Successfully integrated into 5 commercial biogas plants in the region.'\n  }\n];\n\nconst certificates: QualityCertificate[] = [\n  {\n    id: 'CERT-001',\n    batchId: 'BATCH-001',\n    issuedDate: new Date().toISOString(),\n    qualityScore: 92,\n    certifiedBy: 'Dr. Ravi Sharma, Quality Assurance',\n    validUntil: new Date(Date.now() + 15552000000).toISOString() // 6 months validity\n  },\n  {\n    id: 'CERT-002',\n    batchId: 'BATCH-003',\n    issuedDate: new Date(Date.now() - 86400000).toISOString(),\n    qualityScore: 95,\n    certifiedBy: 'Dr. Priya Gupta, Chief Quality Officer',\n    validUntil: new Date(Date.now() + 15465600000).toISOString()\n  },\n  {\n    id: 'CERT-003',\n    batchId: 'BATCH-006',\n    issuedDate: new Date(Date.now() - 172800000).toISOString(),\n    qualityScore: 86,\n    certifiedBy: 'Dr. Anil Kumar, Senior Analyst',\n    validUntil: new Date(Date.now() + 15379200000).toISOString()\n  },\n  {\n    id: 'CERT-004',\n    batchId: 'BATCH-007',\n    issuedDate: new Date(Date.now() - 259200000).toISOString(),\n    qualityScore: 97,\n    certifiedBy: 'Dr. Sunita Singh, Export Certification',\n    validUntil: new Date(Date.now() + 15292800000).toISOString()\n  },\n  {\n    id: 'CERT-005',\n    batchId: 'BATCH-009',\n    issuedDate: new Date(Date.now() - 345600000).toISOString(),\n    qualityScore: 88,\n    certifiedBy: 'Dr. Manoj Verma, Quality Assurance',\n    validUntil: new Date(Date.now() + 15206400000).toISOString()\n  },\n  {\n    id: 'CERT-006',\n    batchId: 'BATCH-010',\n    issuedDate: new Date(Date.now() - 432000000).toISOString(),\n    qualityScore: 83,\n    certifiedBy: 'Dr. Deepak Mishra, Regional Quality Head',\n    validUntil: new Date(Date.now() + 15120000000).toISOString()\n  }\n];\n\n// Mock functions\nconst createBatch = async (data: Partial<BatchData>) => {\n  console.log('Creating batch:', data);\n  return Promise.resolve();\n};\n\nconst updateBatch = async (id: string, data: Partial<BatchData>) => {\n  console.log('Updating batch:', id, data);\n  return Promise.resolve();\n};\n\nconst deleteBatch = async (id: string) => {\n  console.log('Deleting batch:', id);\n  return Promise.resolve();\n};\n\ninterface BatchManagementProps {\n  languageContext?: {\n    language: 'hi' | 'en';\n    t: (key: string) => string;\n  };\n}\n\nconst translations = {\n  en: {\n    title: 'Batch Management',\n    subtitle: 'Manage biogas batches from production to transfer',\n    createBatch: 'Create New Batch',\n    editBatch: 'Edit Batch',\n    deleteBatch: 'Delete Batch',\n    batchList: 'Batch List',\n    activeQualities: 'Active Quality Tests',\n    certificates: 'Quality Certificates',\n    search: 'Search batches...',\n    filter: 'Filter',\n    batchId: 'Batch ID',\n    digesterId: 'Digester ID',\n    volume: 'Volume (m³)',\n    methaneContent: 'Methane Content (%)',\n    status: 'Status',\n    createdDate: 'Created Date',\n    transferDate: 'Transfer Date',\n    qualityScore: 'Quality Score',\n    notes: 'Notes',\n    actions: 'Actions',\n    create: 'Create',\n    update: 'Update',\n    cancel: 'Cancel',\n    delete: 'Delete',\n    confirm: 'Confirm',\n    processing: 'Processing',\n    ready: 'Ready',\n    transferred: 'Transferred',\n    rejected: 'Rejected',\n    testing: 'Testing',\n    viewDetails: 'View Details',\n    downloadCert: 'Download Certificate',\n    transferBatch: 'Transfer Batch',\n    qualityTest: 'Quality Test',\n    batchDetails: 'Batch Details',\n    transferHistory: 'Transfer History',\n    qualityReports: 'Quality Reports',\n    farmerName: 'Farmer Name',\n    source: 'Source',\n    certifiedBy: 'Certified By',\n    validUntil: 'Valid Until'\n  },\n  hi: {\n    title: 'बैच प्रबंधन',\n    subtitle: 'उत्पादन से स्थानांतरण तक बायोगैस बैचों का प्रबंधन',\n    createBatch: 'नया बैच बनाएं',\n    editBatch: 'बैच संपादित करें',\n    deleteBatch: 'बैच हटाएं',\n    batchList: 'बैच सूची',\n    activeQualities: 'सक्रिय गुणवत्ता परीक्षण',\n    certificates: 'गुणवत्ता प्रमाणपत्र',\n    search: 'बैच खोजें...',\n    filter: 'फिल्टर',\n    batchId: 'बैच आईडी',\n    digesterId: 'डाइजेस्टर आईडी',\n    volume: 'आयतन (m³)',\n    methaneContent: 'मीथेन सामग्री (%)',\n    status: 'स्थिति',\n    createdDate: 'निर्मित दिनांक',\n    transferDate: 'स्थानांतरण दिनांक',\n    qualityScore: 'गुणवत्ता स्कोर',\n    notes: 'टिप्पणियां',\n    actions: 'कार्य',\n    create: 'बनाएं',\n    update: 'अपडेट करें',\n    cancel: 'रद्द करें',\n    delete: 'हटाएं',\n    confirm: 'पुष्टि करें',\n    processing: 'प्रसंस्करण',\n    ready: 'तैयार',\n    transferred: 'स्थानांतरित',\n    rejected: 'अस्वीकृत',\n    testing: 'परीक्षण',\n    viewDetails: 'विवरण देखें',\n    downloadCert: 'प्रमाणपत्र डाउनलोड करें',\n    transferBatch: 'बैच स्थानांतरित करें',\n    qualityTest: 'गुणवत्ता परीक्षण',\n    batchDetails: 'बैच विवरण',\n    transferHistory: 'स्थानांतरण इतिहास',\n    qualityReports: 'गुणवत्ता रिपोर्ट',\n    farmerName: 'किसान का नाम',\n    source: 'स्रोत',\n    certifiedBy: 'प्रमाणित करने वाला',\n    validUntil: 'तक वैध'\n  }\n};\n\nconst getStatusColor = (status: BatchStatus): string => {\n  switch (status) {\n    case 'processing':\n      return 'bg-blue-100 text-blue-800';\n    case 'ready':\n      return 'bg-green-100 text-green-800';\n    case 'transferred':\n      return 'bg-gray-100 text-gray-800';\n    case 'rejected':\n      return 'bg-red-100 text-red-800';\n    case 'testing':\n      return 'bg-yellow-100 text-yellow-800';\n    default:\n      return 'bg-gray-100 text-gray-800';\n  }\n};\n\nconst getStatusIcon = (status: BatchStatus) => {\n  switch (status) {\n    case 'processing':\n    case 'IN_PRODUCTION':\n      return <Clock className=\"w-4 h-4\" />;\n    case 'ready':\n    case 'READY_FOR_SALE':\n      return <CheckCircle className=\"w-4 h-4\" />;\n    case 'transferred':\n    case 'COMPLETED':\n      return <Truck className=\"w-4 h-4\" />;\n    case 'rejected':\n      return <AlertCircle className=\"w-4 h-4\" />;\n    case 'testing':\n    case 'QUALITY_TESTED':\n      return <Package className=\"w-4 h-4\" />;\n    case 'SCHEDULED':\n      return <Clock className=\"w-4 h-4\" />;\n    default:\n      return <Package className=\"w-4 h-4\" />;\n  }\n};\n\n// Helper function to map backend batch status to frontend\nconst mapBackendStatusToFrontend = (backendStatus: string): BatchStatus => {\n  switch (backendStatus) {\n    case 'SCHEDULED':\n      return 'testing';\n    case 'IN_PRODUCTION':\n      return 'processing';\n    case 'COMPLETED':\n      return 'transferred';\n    case 'QUALITY_TESTED':\n      return 'testing';\n    case 'READY_FOR_SALE':\n      return 'ready';\n    default:\n      return 'processing';\n  }\n};\n\n// Helper function to calculate quality score from batch data\nconst calculateQualityScore = (batch: ProductionBatch): number => {\n  if (!batch.methaneContentPercent) return 0;\n\n  // Simple quality calculation based on methane content and efficiency\n  const methaneScore = (batch.methaneContentPercent / 70) * 60; // Max 60 points\n  const efficiencyScore = ((batch.productionEfficiencyPercent || 0) / 100) * 40; // Max 40 points\n\n  return Math.min(100, Math.round(methaneScore + efficiencyScore));\n};\n\nconst BatchForm: React.FC<{\n  batch?: BatchData;\n  onSubmit: (data: Partial<BatchData>) => void;\n  onCancel: () => void;\n  t: (key: string) => string;\n}> = ({ batch, onSubmit, onCancel, t }) => {\n  const [formData, setFormData] = useState({\n    digesterId: batch?.digesterId || '',\n    volume: batch?.volume?.toString() || '',\n    methaneContent: batch?.methaneContent?.toString() || '',\n    notes: batch?.notes || '',\n    farmerName: batch?.farmerName || '',\n    source: batch?.source || ''\n  });\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    onSubmit({\n      ...formData,\n      volume: parseFloat(formData.volume),\n      methaneContent: parseFloat(formData.methaneContent)\n    });\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"space-y-4\">\n      <div className=\"space-y-2\">\n        <Label htmlFor=\"digesterId\">{t('digesterId')}</Label>\n        <Select value={formData.digesterId} onValueChange={(value) => setFormData(prev => ({ ...prev, digesterId: value }))}>\n          <SelectTrigger>\n            <SelectValue placeholder=\"Select digester\" />\n          </SelectTrigger>\n          <SelectContent>\n            <SelectItem value=\"DIG-001\">Digester 001 - Main Unit</SelectItem>\n            <SelectItem value=\"DIG-002\">Digester 002 - Secondary Unit</SelectItem>\n            <SelectItem value=\"DIG-003\">Digester 003 - Buffalo Unit</SelectItem>\n            <SelectItem value=\"DIG-004\">Digester 004 - Mixed Feed</SelectItem>\n            <SelectItem value=\"DIG-005\">Digester 005 - Experimental</SelectItem>\n          </SelectContent>\n        </Select>\n      </div>\n\n      <div className=\"grid grid-cols-2 gap-4\">\n        <div className=\"space-y-2\">\n          <Label htmlFor=\"farmerName\">{t('farmerName')}</Label>\n          <Input\n            id=\"farmerName\"\n            value={formData.farmerName}\n            onChange={(e) => setFormData(prev => ({ ...prev, farmerName: e.target.value }))}\n            placeholder=\"राजेश कुमार\"\n          />\n        </div>\n        <div className=\"space-y-2\">\n          <Label htmlFor=\"source\">{t('source')}</Label>\n          <Input\n            id=\"source\"\n            value={formData.source}\n            onChange={(e) => setFormData(prev => ({ ...prev, source: e.target.value }))}\n            placeholder=\"Gokul Gaushala, Mathura\"\n          />\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-2 gap-4\">\n        <div className=\"space-y-2\">\n          <Label htmlFor=\"volume\">{t('volume')}</Label>\n          <Input\n            id=\"volume\"\n            type=\"number\"\n            step=\"0.1\"\n            value={formData.volume}\n            onChange={(e) => setFormData(prev => ({ ...prev, volume: e.target.value }))}\n            placeholder=\"0.0\"\n            required\n          />\n        </div>\n        <div className=\"space-y-2\">\n          <Label htmlFor=\"methaneContent\">{t('methaneContent')}</Label>\n          <Input\n            id=\"methaneContent\"\n            type=\"number\"\n            step=\"0.1\"\n            value={formData.methaneContent}\n            onChange={(e) => setFormData(prev => ({ ...prev, methaneContent: e.target.value }))}\n            placeholder=\"0.0\"\n            required\n          />\n        </div>\n      </div>\n\n      <div className=\"space-y-2\">\n        <Label htmlFor=\"notes\">{t('notes')}</Label>\n        <Textarea\n          id=\"notes\"\n          value={formData.notes}\n          onChange={(e) => setFormData(prev => ({ ...prev, notes: e.target.value }))}\n          placeholder=\"Detailed batch information including source details, quality parameters, and special notes...\"\n          rows={4}\n        />\n      </div>\n\n      <DialogFooter>\n        <Button type=\"button\" variant=\"outline\" onClick={onCancel}>\n          {t('cancel')}\n        </Button>\n        <Button type=\"submit\">\n          {batch ? t('update') : t('create')}\n        </Button>\n      </DialogFooter>\n    </form>\n  );\n};\n\nexport const BatchManagement: React.FC<BatchManagementProps> = ({ languageContext }) => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [statusFilter, setStatusFilter] = useState<BatchStatus | 'all'>('all');\n  const [isCreateDialogOpen, setIsCreateDialogOpen] = useState(false);\n  const [editingBatch, setEditingBatch] = useState<BatchData | null>(null);\n  const [deletingBatch, setDeletingBatch] = useState<BatchData | null>(null);\n\n  // Backend integration state\n  const [backendBatches, setBackendBatches] = useState<ProductionBatch[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const clusterId = 'a1b2c3d4-e5f6-4a5b-8c9d-0e1f2a3b4c5d'; // From seed data\n\n  const lang = languageContext?.language || 'en';\n  const t = (key: string): string => {\n    return languageContext?.t(key) || translations[lang][key as keyof typeof translations[typeof lang]] || key;\n  };\n\n  // Fetch batches from backend\n  useEffect(() => {\n    const fetchBatches = async () => {\n      setLoading(true);\n      try {\n        const response = await biogasService.getBatches(clusterId, undefined, 0, 50);\n        if (response.success && response.data) {\n          setBackendBatches(response.data.content);\n          setError(null);\n        } else {\n          console.error('Failed to fetch batches:', response.error);\n          setError(response.error || 'Failed to fetch batches');\n        }\n      } catch (err) {\n        console.error('Error fetching batches:', err);\n        setError('Network error while fetching batches');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchBatches();\n  }, [clusterId]);\n\n  // Map backend batches to frontend format\n  const mappedBatches: BatchData[] = backendBatches.map(batch => ({\n    id: batch.batchNumber,\n    digesterId: `DIG-${batch.id}`,\n    volume: batch.biogasProducedCubicMeters || 0,\n    methaneContent: batch.methaneContentPercent || 0,\n    status: mapBackendStatusToFrontend(batch.batchStatus),\n    createdDate: batch.productionStartDate,\n    transferDate: batch.productionEndDate,\n    qualityScore: calculateQualityScore(batch),\n    farmerName: 'Farmer', // TODO: Get from contributions\n    source: `Cluster ${batch.clusterId}`,\n    notes: batch.notes || ''\n  }));\n\n  // Use mapped batches or fallback to mock data\n  const batchesToDisplay = backendBatches.length > 0 ? mappedBatches : batches;\n\n  const filteredBatches = batchesToDisplay.filter(batch => {\n    const matchesSearch = batch.id.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         batch.digesterId.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         batch.farmerName?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         batch.source?.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesStatus = statusFilter === 'all' || batch.status === statusFilter;\n    return matchesSearch && matchesStatus;\n  });\n\n  const handleCreateBatch = async (data: Partial<BatchData>) => {\n    try {\n      const request: CreateBatchRequest = {\n        clusterId: clusterId,\n        sourceContributions: [], // TODO: Add contribution IDs\n        totalInputWeightKg: data.volume || 0,\n        productionStartDate: new Date().toISOString(),\n        notes: data.notes\n      };\n\n      const response = await biogasService.createBatch(request);\n      if (response.success) {\n        setIsCreateDialogOpen(false);\n        // Refresh batches\n        const refreshResponse = await biogasService.getBatches(clusterId);\n        if (refreshResponse.success && refreshResponse.data) {\n          setBackendBatches(refreshResponse.data.content);\n        }\n      } else {\n        setError(response.error || 'Failed to create batch');\n      }\n    } catch (err) {\n      console.error('Error creating batch:', err);\n      setError('Network error while creating batch');\n    }\n  };\n\n  const handleUpdateBatch = async (data: Partial<BatchData>) => {\n    if (editingBatch) {\n      // TODO: Implement update batch API\n      console.log('Update batch:', editingBatch.id, data);\n      setEditingBatch(null);\n    }\n  };\n\n  const handleDeleteBatch = async () => {\n    if (deletingBatch) {\n      // TODO: Implement delete batch API\n      console.log('Delete batch:', deletingBatch.id);\n      setDeletingBatch(null);\n    }\n  };\n\n  const activeBatches = batchesToDisplay.filter(b => b.status === 'processing' || b.status === 'testing' || b.status === 'IN_PRODUCTION');\n  const readyBatches = batchesToDisplay.filter(b => b.status === 'ready' || b.status === 'READY_FOR_SALE');\n  const transferredBatches = batchesToDisplay.filter(b => b.status === 'transferred' || b.status === 'COMPLETED');\n  const totalVolume = batchesToDisplay.reduce((sum, b) => sum + b.volume, 0);\n  const averageQuality = batchesToDisplay.filter(b => b.qualityScore).reduce((sum, b) => sum + (b.qualityScore || 0), 0) / batchesToDisplay.filter(b => b.qualityScore).length || 0;\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between -mt-6\">\n        <div>\n          <h1 className=\"text-3xl font-bold tracking-tight\">{t('title')}</h1>\n          <p className=\"text-muted-foreground\">{t('subtitle')}</p>\n        </div>\n        <Dialog open={isCreateDialogOpen} onOpenChange={setIsCreateDialogOpen}>\n          <DialogTrigger asChild>\n            <Button className=\"gap-2\">\n              <Plus className=\"w-4 h-4\" />\n              {t('createBatch')}\n            </Button>\n          </DialogTrigger>\n          <DialogContent className=\"sm:max-w-[525px]\">\n            <DialogHeader>\n              <DialogTitle>{t('createBatch')}</DialogTitle>\n              <DialogDescription>\n                Create a new biogas batch from digester output with detailed source information\n              </DialogDescription>\n            </DialogHeader>\n            <BatchForm\n              onSubmit={handleCreateBatch}\n              onCancel={() => setIsCreateDialogOpen(false)}\n              t={t}\n            />\n          </DialogContent>\n        </Dialog>\n      </div>\n\n      {/* Enhanced Statistics Cards */}\n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-5\">\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Active Batches</CardTitle>\n            <Package className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{activeBatches.length}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              Currently processing\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Ready for Transfer</CardTitle>\n            <CheckCircle className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{readyBatches.length}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              Quality approved\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Total Volume</CardTitle>\n            <Truck className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{totalVolume.toFixed(1)} m³</div>\n            <p className=\"text-xs text-muted-foreground\">\n              All batches combined\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Average Quality</CardTitle>\n            <FileText className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{averageQuality.toFixed(1)}/100</div>\n            <p className=\"text-xs text-muted-foreground\">\n              Quality score average\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Certificates</CardTitle>\n            <FileText className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{certificates.length}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              Available for download\n            </p>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Main Content */}\n      <Tabs defaultValue=\"batches\" className=\"space-y-6\">\n        <TabsList>\n          <TabsTrigger value=\"batches\">{t('batchList')}</TabsTrigger>\n          <TabsTrigger value=\"quality\">{t('activeQualities')}</TabsTrigger>\n          <TabsTrigger value=\"certificates\">{t('certificates')}</TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"batches\">\n          <Card>\n            <CardHeader>\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <CardTitle>{t('batchList')}</CardTitle>\n                  <CardDescription>\n                    Manage all biogas batches and their lifecycle with detailed source tracking\n                  </CardDescription>\n                </div>\n                <div className=\"flex gap-2\">\n                  <div className=\"relative\">\n                    <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-muted-foreground\" />\n                    <Input\n                      placeholder={t('search')}\n                      value={searchTerm}\n                      onChange={(e) => setSearchTerm(e.target.value)}\n                      className=\"pl-10 w-64\"\n                    />\n                  </div>\n                  <Select value={statusFilter} onValueChange={(value) => setStatusFilter(value as BatchStatus | 'all')}>\n                    <SelectTrigger className=\"w-32\">\n                      <SelectValue />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"all\">All Status</SelectItem>\n                      <SelectItem value=\"processing\">Processing</SelectItem>\n                      <SelectItem value=\"testing\">Testing</SelectItem>\n                      <SelectItem value=\"ready\">Ready</SelectItem>\n                      <SelectItem value=\"transferred\">Transferred</SelectItem>\n                      <SelectItem value=\"rejected\">Rejected</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n              </div>\n            </CardHeader>\n            <CardContent>\n              <Table>\n                <TableHeader>\n                  <TableRow>\n                    <TableHead>{t('batchId')}</TableHead>\n                    <TableHead>{t('farmerName')}</TableHead>\n                    <TableHead>{t('source')}</TableHead>\n                    <TableHead>{t('volume')}</TableHead>\n                    <TableHead>{t('methaneContent')}</TableHead>\n                    <TableHead>{t('status')}</TableHead>\n                    <TableHead>{t('qualityScore')}</TableHead>\n                    <TableHead>{t('createdDate')}</TableHead>\n                    <TableHead>{t('actions')}</TableHead>\n                  </TableRow>\n                </TableHeader>\n                <TableBody>\n                  {filteredBatches.map((batch) => (\n                    <TableRow key={batch.id}>\n                      <TableCell className=\"font-medium\">{batch.id}</TableCell>\n                      <TableCell>{batch.farmerName || 'N/A'}</TableCell>\n                      <TableCell className=\"max-w-32 truncate\" title={batch.source}>\n                        {batch.source || 'N/A'}\n                      </TableCell>\n                      <TableCell>{batch.volume.toFixed(1)} m³</TableCell>\n                      <TableCell>{batch.methaneContent.toFixed(1)}%</TableCell>\n                      <TableCell>\n                        <Badge className={getStatusColor(batch.status)}>\n                          <div className=\"flex items-center gap-1\">\n                            {getStatusIcon(batch.status)}\n                            {t(batch.status)}\n                          </div>\n                        </Badge>\n                      </TableCell>\n                      <TableCell>\n                        {batch.qualityScore ? (\n                          <span className={`font-medium ${\n                            batch.qualityScore >= 90 ? 'text-green-600' :\n                            batch.qualityScore >= 70 ? 'text-yellow-600' :\n                            'text-red-600'\n                          }`}>\n                            {batch.qualityScore}/100\n                          </span>\n                        ) : (\n                          <span className=\"text-muted-foreground\">Pending</span>\n                        )}\n                      </TableCell>\n                      <TableCell>{new Date(batch.createdDate).toLocaleDateString()}</TableCell>\n                      <TableCell>\n                        <div className=\"flex gap-2\">\n                          <Button\n                            size=\"sm\"\n                            variant=\"outline\"\n                            onClick={() => setEditingBatch(batch)}\n                          >\n                            <Edit className=\"w-4 h-4\" />\n                          </Button>\n                          <Button\n                            size=\"sm\"\n                            variant=\"outline\"\n                            onClick={() => setDeletingBatch(batch)}\n                          >\n                            <Trash2 className=\"w-4 h-4\" />\n                          </Button>\n                          <Button\n                            size=\"sm\"\n                            variant=\"outline\"\n                            title={batch.notes}\n                          >\n                            <Eye className=\"w-4 h-4\" />\n                          </Button>\n                        </div>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"quality\">\n          <Card>\n            <CardHeader>\n              <CardTitle>{t('activeQualities')}</CardTitle>\n              <CardDescription>\n                Monitor ongoing quality testing processes with detailed progress tracking\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-4\">\n                {batches.filter(b => b.status === 'testing').map((batch) => (\n                  <div key={batch.id} className=\"flex items-center justify-between p-4 border rounded-lg\">\n                    <div className=\"space-y-1\">\n                      <h4 className=\"font-semibold\">{batch.id}</h4>\n                      <p className=\"text-sm text-muted-foreground\">\n                        Farmer: {batch.farmerName} | Volume: {batch.volume.toFixed(1)} m³\n                      </p>\n                      <p className=\"text-sm text-muted-foreground\">\n                        Source: {batch.source}\n                      </p>\n                    </div>\n                    <div className=\"flex items-center gap-4\">\n                      <Badge className={getStatusColor(batch.status)}>\n                        {t('testing')}\n                      </Badge>\n                      <Button size=\"sm\" variant=\"outline\">\n                        View Progress\n                      </Button>\n                    </div>\n                  </div>\n                ))}\n                {batches.filter(b => b.status === 'testing').length === 0 && (\n                  <div className=\"text-center py-8 text-muted-foreground\">\n                    <Package className=\"w-12 h-12 mx-auto mb-2\" />\n                    <p>No active quality tests</p>\n                  </div>\n                )}\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"certificates\">\n          <Card>\n            <CardHeader>\n              <CardTitle>{t('certificates')}</CardTitle>\n              <CardDescription>\n                Download and manage quality certificates with detailed certification information\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-4\">\n                {certificates.map((cert) => {\n                  const batch = batches.find(b => b.id === cert.batchId);\n                  return (\n                    <div key={cert.id} className=\"flex items-center justify-between p-4 border rounded-lg\">\n                      <div className=\"space-y-1\">\n                        <h4 className=\"font-semibold\">{cert.batchId}</h4>\n                        <p className=\"text-sm text-muted-foreground\">\n                          Farmer: {batch?.farmerName} | Score: {cert.qualityScore}/100\n                        </p>\n                        <p className=\"text-sm text-muted-foreground\">\n                          Certified by: {cert.certifiedBy}\n                        </p>\n                        <p className=\"text-sm text-muted-foreground\">\n                          Issued: {new Date(cert.issuedDate).toLocaleDateString()} |\n                          Valid until: {cert.validUntil ? new Date(cert.validUntil).toLocaleDateString() : 'N/A'}\n                        </p>\n                      </div>\n                      <div className=\"flex items-center gap-4\">\n                        <Badge className=\"bg-green-100 text-green-800\">\n                          Certified\n                        </Badge>\n                        <Button size=\"sm\" variant=\"outline\">\n                          <Download className=\"w-4 h-4 mr-2\" />\n                          Download\n                        </Button>\n                      </div>\n                    </div>\n                  );\n                })}\n                {certificates.length === 0 && (\n                  <div className=\"text-center py-8 text-muted-foreground\">\n                    <FileText className=\"w-12 h-12 mx-auto mb-2\" />\n                    <p>No certificates available</p>\n                  </div>\n                )}\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n\n      {/* Edit Dialog */}\n      <Dialog open={!!editingBatch} onOpenChange={() => setEditingBatch(null)}>\n        <DialogContent className=\"sm:max-w-[525px]\">\n          <DialogHeader>\n            <DialogTitle>{t('editBatch')}</DialogTitle>\n            <DialogDescription>\n              Update batch information and status with detailed source tracking\n            </DialogDescription>\n          </DialogHeader>\n          {editingBatch && (\n            <BatchForm\n              batch={editingBatch}\n              onSubmit={handleUpdateBatch}\n              onCancel={() => setEditingBatch(null)}\n              t={t}\n            />\n          )}\n        </DialogContent>\n      </Dialog>\n\n      {/* Delete Dialog */}\n      <Dialog open={!!deletingBatch} onOpenChange={() => setDeletingBatch(null)}>\n        <DialogContent>\n          <DialogHeader>\n            <DialogTitle>{t('deleteBatch')}</DialogTitle>\n            <DialogDescription>\n              Are you sure you want to delete batch {deletingBatch?.id}? This action cannot be undone.\n            </DialogDescription>\n          </DialogHeader>\n          <DialogFooter>\n            <Button variant=\"outline\" onClick={() => setDeletingBatch(null)}>\n              {t('cancel')}\n            </Button>\n            <Button variant=\"destructive\" onClick={handleDeleteBatch}>\n              {t('delete')}\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default BatchManagement;","import React, { useState, useEffect } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '../../components/ui/card';\nimport { Button } from '../../components/ui/button';\nimport { Badge } from '../../components/ui/badge';\nimport { AlertTriangle, Camera, Scale, Clock, CheckCircle, XCircle, Eye } from 'lucide-react';\n\n// Mock types for DisputeResolution\ntype DisputeStatus = 'OPEN' | 'INVESTIGATING' | 'RESOLVED' | 'ESCALATED';\ntype DisputeType = 'WEIGHT_MISMATCH' | 'QUALITY_ISSUE' | 'PAYMENT_DELAY' | 'COLLECTION_MISSED';\n\ninterface DisputeClaim {\n  weight: number;\n  quality: string;\n  timestamp: string;\n  photoproof?: string;\n}\n\ninterface IoTReading {\n  weight: number;\n  quality: string;\n  deviceId: string;\n  confidence: number;\n  timestamp: string;\n}\n\ninterface Dispute {\n  id: string;\n  type: DisputeType;\n  status: DisputeStatus;\n  farmerClaim: DisputeClaim;\n  iotReading: IoTReading;\n  createdAt: string;\n  resolution?: string;\n  resolvedAt?: string;\n}\n\n// Mock data\nconst disputes: Dispute[] = [\n  {\n    id: 'DISP-001',\n    type: 'WEIGHT_MISMATCH',\n    status: 'OPEN',\n    farmerClaim: {\n      weight: 45.2,\n      quality: 'A',\n      timestamp: new Date(Date.now() - 3600000).toISOString(),\n      photoproof: 'photo_001.jpg'\n    },\n    iotReading: {\n      weight: 42.8,\n      quality: 'A',\n      deviceId: 'SCALE-001',\n      confidence: 0.95,\n      timestamp: new Date(Date.now() - 3600000).toISOString()\n    },\n    createdAt: new Date(Date.now() - 3600000).toISOString()\n  },\n  {\n    id: 'DISP-002',\n    type: 'QUALITY_ISSUE',\n    status: 'INVESTIGATING',\n    farmerClaim: {\n      weight: 38.5,\n      quality: 'A',\n      timestamp: new Date(Date.now() - 7200000).toISOString()\n    },\n    iotReading: {\n      weight: 38.7,\n      quality: 'B',\n      deviceId: 'SENSOR-002',\n      confidence: 0.88,\n      timestamp: new Date(Date.now() - 7200000).toISOString()\n    },\n    createdAt: new Date(Date.now() - 7200000).toISOString()\n  },\n  {\n    id: 'DISP-003',\n    type: 'PAYMENT_DELAY',\n    status: 'RESOLVED',\n    farmerClaim: {\n      weight: 52.0,\n      quality: 'A',\n      timestamp: new Date(Date.now() - 86400000).toISOString()\n    },\n    iotReading: {\n      weight: 51.8,\n      quality: 'A',\n      deviceId: 'SCALE-003',\n      confidence: 0.97,\n      timestamp: new Date(Date.now() - 86400000).toISOString()\n    },\n    createdAt: new Date(Date.now() - 86400000).toISOString(),\n    resolution: 'Payment processed after verification. Minor weight difference within acceptable tolerance.',\n    resolvedAt: new Date(Date.now() - 43200000).toISOString()\n  }\n];\n\nconst loading = {\n  disputes: false\n};\n\n// Mock functions\nconst resolveDispute = async (disputeId: string, resolutionData: any) => {\n  console.log(`Resolving dispute ${disputeId}:`, resolutionData);\n  // Mock API call\n  return new Promise(resolve => setTimeout(resolve, 1000));\n};\n\nconst escalateDispute = async (disputeId: string, reason: string) => {\n  console.log(`Escalating dispute ${disputeId}:`, reason);\n  // Mock API call\n  return new Promise(resolve => setTimeout(resolve, 1000));\n};\n\nconst DisputeResolution: React.FC = () => {\n  const [selectedDispute, setSelectedDispute] = useState<Dispute | null>(null);\n  const [filter, setFilter] = useState<'ALL' | 'OPEN' | 'INVESTIGATING' | 'RESOLVED'>('ALL');\n\n  const filteredDisputes = disputes.filter(dispute =>\n    filter === 'ALL' || dispute.status === filter\n  );\n\n  const handleResolveDispute = async (disputeId: string, resolution: string, favorFarmer: boolean) => {\n    try {\n      await resolveDispute(disputeId, {\n        resolution,\n        favorFarmer,\n        resolvedBy: 'CLUSTER_MANAGER',\n        timestamp: new Date().toISOString()\n      });\n      setSelectedDispute(null);\n    } catch (error) {\n      console.error('Error resolving dispute:', error);\n    }\n  };\n\n  const getDisputeTypeLabel = (type: string) => {\n    const labels = {\n      'WEIGHT_MISMATCH': 'Weight Mismatch',\n      'QUALITY_ISSUE': 'Quality Issue',\n      'PAYMENT_DELAY': 'Payment Delay',\n      'COLLECTION_MISSED': 'Collection Missed'\n    };\n    return labels[type as keyof typeof labels] || type;\n  };\n\n  const getStatusColor = (status: string) => {\n    const colors = {\n      'OPEN': 'destructive',\n      'INVESTIGATING': 'secondary',\n      'RESOLVED': 'default',\n      'ESCALATED': 'outline'\n    };\n    return colors[status as keyof typeof colors] || 'outline';\n  };\n\n  if (loading.disputes) {\n    return (\n      <div className=\"flex items-center justify-center min-h-64\">\n        <div className=\"text-center\">\n          <AlertTriangle className=\"h-8 w-8 animate-spin mx-auto mb-4\" />\n          <p>Loading disputes...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex justify-between items-center -mt-6\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-gray-900\">Dispute Resolution</h1>\n          <p className=\"text-gray-600 mt-2\">\n            Resolve farmer disputes with side-by-side evidence comparison\n          </p>\n        </div>\n        <div className=\"flex space-x-2\">\n          {['ALL', 'OPEN', 'INVESTIGATING', 'RESOLVED'].map((status) => (\n            <Button\n              key={status}\n              variant={filter === status ? \"default\" : \"outline\"}\n              size=\"sm\"\n              onClick={() => setFilter(status as any)}\n            >\n              {status}\n            </Button>\n          ))}\n        </div>\n      </div>\n\n      {/* Disputes List */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center space-x-2\">\n              <AlertTriangle className=\"h-5 w-5\" />\n              <span>Active Disputes ({filteredDisputes.length})</span>\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-3\">\n              {filteredDisputes.map((dispute) => (\n                <div\n                  key={dispute.id}\n                  className={`border rounded-lg p-4 cursor-pointer transition-colors ${\n                    selectedDispute?.id === dispute.id ? 'border-blue-500 bg-blue-50' : 'hover:bg-gray-50'\n                  }`}\n                  onClick={() => setSelectedDispute(dispute)}\n                >\n                  <div className=\"flex justify-between items-start mb-2\">\n                    <div>\n                      <h3 className=\"font-semibold\">{getDisputeTypeLabel(dispute.type)}</h3>\n                      <p className=\"text-sm text-gray-600\">Dispute #{dispute.id}</p>\n                    </div>\n                    <Badge variant={getStatusColor(dispute.status) as any}>\n                      {dispute.status}\n                    </Badge>\n                  </div>\n\n                  <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                    <div>\n                      <p className=\"font-medium text-green-700\">Farmer Claim:</p>\n                      <p>Weight: {dispute.farmerClaim.weight} kg</p>\n                      <p>Quality: Grade {dispute.farmerClaim.quality}</p>\n                    </div>\n                    <div>\n                      <p className=\"font-medium text-blue-700\">IoT Reading:</p>\n                      <p>Weight: {dispute.iotReading.weight} kg</p>\n                      <p>Quality: Grade {dispute.iotReading.quality}</p>\n                      <p>Confidence: {(dispute.iotReading.confidence * 100).toFixed(1)}%</p>\n                    </div>\n                  </div>\n\n                  <div className=\"mt-3 flex items-center justify-between\">\n                    <div className=\"text-xs text-gray-500 flex items-center space-x-1\">\n                      <Clock className=\"h-3 w-3\" />\n                      <span>Created: {new Date(dispute.createdAt).toLocaleDateString()}</span>\n                    </div>\n                    <Button variant=\"ghost\" size=\"sm\">\n                      <Eye className=\"h-4 w-4\" />\n                    </Button>\n                  </div>\n                </div>\n              ))}\n\n              {filteredDisputes.length === 0 && (\n                <div className=\"text-center py-8 text-gray-500\">\n                  <AlertTriangle className=\"h-12 w-12 mx-auto mb-4 opacity-50\" />\n                  <p>No disputes found for selected filter</p>\n                </div>\n              )}\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Dispute Details & Resolution */}\n        <Card>\n          <CardHeader>\n            <CardTitle>Dispute Resolution</CardTitle>\n          </CardHeader>\n          <CardContent>\n            {selectedDispute ? (\n              <div className=\"space-y-6\">\n                {/* Side-by-side Evidence Comparison */}\n                <div className=\"grid grid-cols-2 gap-4\">\n                  {/* Farmer Evidence */}\n                  <div className=\"border rounded-lg p-4 bg-green-50\">\n                    <h3 className=\"font-semibold text-green-800 mb-3 flex items-center space-x-2\">\n                      <Scale className=\"h-4 w-4\" />\n                      <span>Farmer Evidence</span>\n                    </h3>\n                    <div className=\"space-y-2 text-sm\">\n                      <div className=\"flex justify-between\">\n                        <span>Weight:</span>\n                        <span className=\"font-medium\">{selectedDispute.farmerClaim.weight} kg</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span>Quality:</span>\n                        <span className=\"font-medium\">Grade {selectedDispute.farmerClaim.quality}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span>Time:</span>\n                        <span className=\"font-medium\">\n                          {new Date(selectedDispute.farmerClaim.timestamp).toLocaleTimeString()}\n                        </span>\n                      </div>\n                      {selectedDispute.farmerClaim.photoproof && (\n                        <div className=\"mt-3\">\n                          <p className=\"text-xs text-gray-600 mb-2\">Photo Proof:</p>\n                          <div className=\"w-full h-24 bg-gray-200 rounded flex items-center justify-center\">\n                            <Camera className=\"h-8 w-8 text-gray-400\" />\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n\n                  {/* IoT Evidence */}\n                  <div className=\"border rounded-lg p-4 bg-blue-50\">\n                    <h3 className=\"font-semibold text-blue-800 mb-3 flex items-center space-x-2\">\n                      <AlertTriangle className=\"h-4 w-4\" />\n                      <span>IoT Evidence</span>\n                    </h3>\n                    <div className=\"space-y-2 text-sm\">\n                      <div className=\"flex justify-between\">\n                        <span>Weight:</span>\n                        <span className=\"font-medium\">{selectedDispute.iotReading.weight} kg</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span>Quality:</span>\n                        <span className=\"font-medium\">Grade {selectedDispute.iotReading.quality}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span>Device:</span>\n                        <span className=\"font-medium\">{selectedDispute.iotReading.deviceId}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span>Confidence:</span>\n                        <span className=\"font-medium\">\n                          {(selectedDispute.iotReading.confidence * 100).toFixed(1)}%\n                        </span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span>Time:</span>\n                        <span className=\"font-medium\">\n                          {new Date(selectedDispute.iotReading.timestamp).toLocaleTimeString()}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Variance Analysis */}\n                <div className=\"border rounded-lg p-4 bg-yellow-50\">\n                  <h3 className=\"font-semibold text-yellow-800 mb-3\">Variance Analysis</h3>\n                  <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                    <div className=\"flex justify-between\">\n                      <span>Weight Difference:</span>\n                      <span className=\"font-medium\">\n                        {Math.abs(selectedDispute.farmerClaim.weight - selectedDispute.iotReading.weight).toFixed(1)} kg\n                      </span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span>Quality Match:</span>\n                      <span className=\"font-medium\">\n                        {selectedDispute.farmerClaim.quality === selectedDispute.iotReading.quality ? '✓ Match' : '✗ Mismatch'}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Resolution Actions */}\n                {selectedDispute.status === 'OPEN' && (\n                  <div className=\"space-y-3\">\n                    <h3 className=\"font-semibold\">Resolution Actions</h3>\n                    <div className=\"grid grid-cols-2 gap-3\">\n                      <Button\n                        className=\"flex items-center space-x-2\"\n                        onClick={() => handleResolveDispute(\n                          selectedDispute.id,\n                          'Resolved in favor of farmer based on evidence review',\n                          true\n                        )}\n                      >\n                        <CheckCircle className=\"h-4 w-4\" />\n                        <span>Favor Farmer</span>\n                      </Button>\n                      <Button\n                        variant=\"outline\"\n                        className=\"flex items-center space-x-2\"\n                        onClick={() => handleResolveDispute(\n                          selectedDispute.id,\n                          'Resolved in favor of IoT reading based on device confidence',\n                          false\n                        )}\n                      >\n                        <XCircle className=\"h-4 w-4\" />\n                        <span>Favor IoT</span>\n                      </Button>\n                    </div>\n                    <Button\n                      variant=\"destructive\"\n                      className=\"w-full\"\n                      onClick={() => escalateDispute(selectedDispute.id, 'Escalated for manual investigation')}\n                    >\n                      Escalate to Higher Authority\n                    </Button>\n                  </div>\n                )}\n\n                {/* Resolution History */}\n                {selectedDispute.resolution && (\n                  <div className=\"border rounded-lg p-4 bg-gray-50\">\n                    <h3 className=\"font-semibold mb-2\">Resolution</h3>\n                    <p className=\"text-sm text-gray-700\">{selectedDispute.resolution}</p>\n                    {selectedDispute.resolvedAt && (\n                      <p className=\"text-xs text-gray-500 mt-2\">\n                        Resolved on: {new Date(selectedDispute.resolvedAt).toLocaleString()}\n                      </p>\n                    )}\n                  </div>\n                )}\n              </div>\n            ) : (\n              <div className=\"text-center py-12 text-gray-500\">\n                <AlertTriangle className=\"h-12 w-12 mx-auto mb-4 opacity-50\" />\n                <p>Select a dispute to view details and resolution options</p>\n              </div>\n            )}\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n};\n\nexport default DisputeResolution;","import React, { useState } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '../../components/ui/card';\nimport { Button } from '../../components/ui/button';\nimport { Badge } from '../../components/ui/badge';\nimport { DollarSign, Receipt, Shield, Hash, CheckCircle, AlertCircle } from 'lucide-react';\n\n// Mock types for PaymentReconciliation\ninterface Payment {\n  id: string;\n  farmerId: string;\n  amount: number;\n  type: string;\n  status: string;\n  createdAt: string;\n  transactionId?: string;\n  auditHash: string;\n  batchIds: string[];\n}\n\ninterface Farmer {\n  id: string;\n  name: string;\n}\n\n// Mock data\nconst payments: Payment[] = [\n  {\n    id: 'PAY-001',\n    farmerId: 'FARM-001',\n    amount: 412.25,\n    type: 'CASH',\n    status: 'COMPLETED',\n    createdAt: new Date().toISOString(),\n    transactionId: 'TXN-001',\n    auditHash: 'sha256:a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456',\n    batchIds: ['BATCH-001']\n  },\n  {\n    id: 'PAY-002',\n    farmerId: 'FARM-002',\n    amount: 325.80,\n    type: 'UPI',\n    status: 'PENDING',\n    createdAt: new Date(Date.now() - 86400000).toISOString(),\n    auditHash: 'sha256:b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef1234567',\n    batchIds: ['BATCH-002']\n  }\n];\n\nconst farmers: Farmer[] = [\n  { id: 'FARM-001', name: 'राम कुमार' },\n  { id: 'FARM-002', name: 'श्याम यादव' }\n];\n\nconst loading = {\n  payments: false\n};\n\nconst PaymentReconciliation: React.FC = () => {\n  const [selectedPayment, setSelectedPayment] = useState<Payment | null>(null);\n\n  const getStatusColor = (status: string) => {\n    const colors = {\n      'PENDING': 'secondary',\n      'PROCESSING': 'outline',\n      'COMPLETED': 'default',\n      'FAILED': 'destructive'\n    };\n    return colors[status as keyof typeof colors] || 'outline';\n  };\n\n  const getPaymentTypeIcon = (type: string) => {\n    switch (type) {\n      case 'CASH': return '💵';\n      case 'UPI': return '📱';\n      case 'BANK_TRANSFER': return '🏦';\n      case 'CHEQUE': return '📝';\n      default: return '💳';\n    }\n  };\n\n  const getFarmerName = (farmerId: string) => {\n    const farmer = farmers.find(f => f.id === farmerId);\n    return farmer?.name || `Farmer ${farmerId}`;\n  };\n\n  if (loading.payments) {\n    return (\n      <div className=\"flex items-center justify-center min-h-64\">\n        <div className=\"text-center\">\n          <DollarSign className=\"h-8 w-8 animate-spin mx-auto mb-4\" />\n          <p>Loading payments...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"-mt-6\">\n        <h1 className=\"text-2xl font-bold text-gray-900\">Payment Reconciliation</h1>\n        <p className=\"text-gray-600 mt-1\">\n          Track and reconcile farmer payments with immutable audit log\n        </p>\n      </div>\n\n      {/* Payment Summary */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center space-x-2\">\n              <Receipt className=\"h-5 w-5 text-green-600\" />\n              <div>\n                <p className=\"text-sm text-gray-600\">Total Payments</p>\n                <p className=\"text-xl font-bold\">{payments.length}</p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center space-x-2\">\n              <CheckCircle className=\"h-5 w-5 text-green-600\" />\n              <div>\n                <p className=\"text-sm text-gray-600\">Completed</p>\n                <p className=\"text-xl font-bold\">\n                  {payments.filter(p => p.status === 'COMPLETED').length}\n                </p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center space-x-2\">\n              <AlertCircle className=\"h-5 w-5 text-orange-600\" />\n              <div>\n                <p className=\"text-sm text-gray-600\">Pending</p>\n                <p className=\"text-xl font-bold\">\n                  {payments.filter(p => p.status === 'PENDING').length}\n                </p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center space-x-2\">\n              <DollarSign className=\"h-5 w-5 text-blue-600\" />\n              <div>\n                <p className=\"text-sm text-gray-600\">Total Amount</p>\n                <p className=\"text-xl font-bold\">\n                  ₹{payments.reduce((sum, p) => sum + p.amount, 0).toLocaleString()}\n                </p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Payments List & Details */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\n        {/* Payments List */}\n        <Card>\n          <CardHeader>\n            <CardTitle>Payment Records</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-3 max-h-96 overflow-y-auto\">\n              {payments.map((payment) => (\n                <div\n                  key={payment.id}\n                  className={`border rounded-lg p-4 cursor-pointer transition-colors ${\n                    selectedPayment?.id === payment.id ? 'border-blue-500 bg-blue-50' : 'hover:bg-gray-50'\n                  }`}\n                  onClick={() => setSelectedPayment(payment)}\n                >\n                  <div className=\"flex justify-between items-start mb-2\">\n                    <div>\n                      <h3 className=\"font-semibold\">{getFarmerName(payment.farmerId)}</h3>\n                      <p className=\"text-sm text-gray-600\">₹{payment.amount.toLocaleString()}</p>\n                    </div>\n                    <div className=\"text-right\">\n                      <Badge variant={getStatusColor(payment.status) as any}>\n                        {payment.status}\n                      </Badge>\n                      <p className=\"text-xs text-gray-500 mt-1\">\n                        {getPaymentTypeIcon(payment.type)} {payment.type}\n                      </p>\n                    </div>\n                  </div>\n\n                  <div className=\"flex justify-between items-center text-xs text-gray-500\">\n                    <span>#{payment.id}</span>\n                    <span>{new Date(payment.createdAt).toLocaleDateString()}</span>\n                  </div>\n\n                  {payment.transactionId && (\n                    <div className=\"mt-2 text-xs font-mono bg-gray-100 p-1 rounded\">\n                      TXN: {payment.transactionId}\n                    </div>\n                  )}\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Payment Details & Audit */}\n        <Card>\n          <CardHeader>\n            <CardTitle>Payment Details & Audit Trail</CardTitle>\n          </CardHeader>\n          <CardContent>\n            {selectedPayment ? (\n              <div className=\"space-y-4\">\n                {/* Payment Information */}\n                <div className=\"border rounded-lg p-4 bg-gray-50\">\n                  <h3 className=\"font-semibold mb-3\">Payment Information</h3>\n                  <div className=\"grid grid-cols-2 gap-3 text-sm\">\n                    <div>\n                      <span className=\"text-gray-600\">Payment ID:</span>\n                      <p className=\"font-medium\">{selectedPayment.id}</p>\n                    </div>\n                    <div>\n                      <span className=\"text-gray-600\">Amount:</span>\n                      <p className=\"font-medium\">₹{selectedPayment.amount.toLocaleString()}</p>\n                    </div>\n                    <div>\n                      <span className=\"text-gray-600\">Farmer:</span>\n                      <p className=\"font-medium\">{getFarmerName(selectedPayment.farmerId)}</p>\n                    </div>\n                    <div>\n                      <span className=\"text-gray-600\">Type:</span>\n                      <p className=\"font-medium\">\n                        {getPaymentTypeIcon(selectedPayment.type)} {selectedPayment.type}\n                      </p>\n                    </div>\n                    <div>\n                      <span className=\"text-gray-600\">Status:</span>\n                      <Badge variant={getStatusColor(selectedPayment.status) as any}>\n                        {selectedPayment.status}\n                      </Badge>\n                    </div>\n                    <div>\n                      <span className=\"text-gray-600\">Created:</span>\n                      <p className=\"font-medium\">\n                        {new Date(selectedPayment.createdAt).toLocaleString()}\n                      </p>\n                    </div>\n                  </div>\n\n                  {selectedPayment.transactionId && (\n                    <div className=\"mt-3\">\n                      <span className=\"text-gray-600\">Transaction ID:</span>\n                      <p className=\"font-mono text-sm bg-white p-2 rounded border\">\n                        {selectedPayment.transactionId}\n                      </p>\n                    </div>\n                  )}\n                </div>\n\n                {/* Audit Hash */}\n                <div className=\"border rounded-lg p-4 bg-green-50\">\n                  <h3 className=\"font-semibold mb-3 flex items-center space-x-2\">\n                    <Shield className=\"h-4 w-4\" />\n                    <span>Audit Hash (Immutable)</span>\n                  </h3>\n                  <div className=\"flex items-center space-x-2\">\n                    <Hash className=\"h-4 w-4 text-gray-500\" />\n                    <p className=\"font-mono text-xs bg-white p-2 rounded border flex-1\">\n                      {selectedPayment.auditHash}\n                    </p>\n                  </div>\n                  <p className=\"text-xs text-gray-600 mt-2\">\n                    This cryptographic hash ensures payment record integrity and prevents tampering.\n                  </p>\n                </div>\n\n                {/* Related Batches */}\n                <div className=\"border rounded-lg p-4\">\n                  <h3 className=\"font-semibold mb-3\">Related Batches</h3>\n                  <div className=\"space-y-2\">\n                    {selectedPayment.batchIds.map((batchId) => (\n                      <div key={batchId} className=\"flex items-center justify-between text-sm\">\n                        <span>Batch {batchId}</span>\n                        <Badge variant=\"outline\">Linked</Badge>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n\n                {/* Actions */}\n                {selectedPayment.status === 'PENDING' && (\n                  <div className=\"space-y-2\">\n                    <Button className=\"w-full\">\n                      <CheckCircle className=\"h-4 w-4 mr-2\" />\n                      Mark as Completed\n                    </Button>\n                    <Button variant=\"outline\" className=\"w-full\">\n                      Process Payment\n                    </Button>\n                  </div>\n                )}\n\n                {selectedPayment.status === 'FAILED' && (\n                  <Button variant=\"outline\" className=\"w-full\">\n                    Retry Payment\n                  </Button>\n                )}\n              </div>\n            ) : (\n              <div className=\"text-center py-12 text-gray-500\">\n                <DollarSign className=\"h-12 w-12 mx-auto mb-4 opacity-50\" />\n                <p>Select a payment to view details and audit trail</p>\n              </div>\n            )}\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n};\n\nexport default PaymentReconciliation;","/**\n * Time zone name format.\n */\n\n/**\n * The function returns the time zone name for the given date in the specified\n * time zone.\n *\n * It uses the `Intl.DateTimeFormat` API and by default outputs the time zone\n * name in a long format, e.g. \"Pacific Standard Time\" or\n * \"Singapore Standard Time\".\n *\n * It is possible to specify the format as the third argument using one of the following options\n *\n * - \"short\": e.g. \"EDT\" or \"GMT+8\".\n * - \"long\": e.g. \"Eastern Daylight Time\".\n * - \"shortGeneric\": e.g. \"ET\" or \"Singapore Time\".\n * - \"longGeneric\": e.g. \"Eastern Time\" or \"Singapore Standard Time\".\n *\n * These options correspond to TR35 tokens `z..zzz`, `zzzz`, `v`, and `vvvv` respectively: https://www.unicode.org/reports/tr35/tr35-dates.html#dfst-zone\n *\n * @param timeZone - Time zone name (IANA or UTC offset)\n * @param date - Date object to get the time zone name for\n * @param format - Optional format of the time zone name. Defaults to \"long\". Can be \"short\", \"long\", \"shortGeneric\", or \"longGeneric\".\n *\n * @returns Time zone name (e.g. \"Singapore Standard Time\")\n */\nexport function tzName(timeZone, date, format = \"long\") {\n  return new Intl.DateTimeFormat(\"en-US\", {\n    // Enforces engine to render the time. Without the option JavaScriptCore omits it.\n    hour: \"numeric\",\n    timeZone: timeZone,\n    timeZoneName: format\n  }).format(date).split(/\\s/g) // Format.JS uses non-breaking spaces\n  .slice(2) // Skip the hour and AM/PM parts\n  .join(\" \");\n}","const offsetFormatCache = {};\nconst offsetCache = {};\n\n/**\n * The function extracts UTC offset in minutes from the given date in specified\n * time zone.\n *\n * Unlike `Date.prototype.getTimezoneOffset`, this function returns the value\n * mirrored to the sign of the offset in the time zone. For Asia/Singapore\n * (UTC+8), `tzOffset` returns 480, while `getTimezoneOffset` returns -480.\n *\n * @param timeZone - Time zone name (IANA or UTC offset)\n * @param date - Date to check the offset for\n *\n * @returns UTC offset in minutes\n */\nexport function tzOffset(timeZone, date) {\n  try {\n    const format = offsetFormatCache[timeZone] ||= new Intl.DateTimeFormat(\"en-US\", {\n      timeZone,\n      timeZoneName: \"longOffset\"\n    }).format;\n    const offsetStr = format(date).split(\"GMT\")[1];\n    if (offsetStr in offsetCache) return offsetCache[offsetStr];\n    return calcOffset(offsetStr, offsetStr.split(\":\"));\n  } catch {\n    // Fallback to manual parsing if the runtime doesn't support ±HH:MM/±HHMM/±HH\n    // See: https://github.com/nodejs/node/issues/53419\n    if (timeZone in offsetCache) return offsetCache[timeZone];\n    const captures = timeZone?.match(offsetRe);\n    if (captures) return calcOffset(timeZone, captures.slice(1));\n    return NaN;\n  }\n}\nconst offsetRe = /([+-]\\d\\d):?(\\d\\d)?/;\nfunction calcOffset(cacheStr, values) {\n  const hours = +(values[0] || 0);\n  const minutes = +(values[1] || 0);\n  // Convert seconds to minutes by dividing by 60 to keep the function return in minutes.\n  const seconds = +(values[2] || 0) / 60;\n  return offsetCache[cacheStr] = hours * 60 + minutes > 0 ? hours * 60 + minutes + seconds : hours * 60 - minutes - seconds;\n}","import { tzOffset } from \"../tzOffset/index.js\";\nexport class TZDateMini extends Date {\n  //#region static\n\n  constructor(...args) {\n    super();\n    if (args.length > 1 && typeof args[args.length - 1] === \"string\") {\n      this.timeZone = args.pop();\n    }\n    this.internal = new Date();\n    if (isNaN(tzOffset(this.timeZone, this))) {\n      this.setTime(NaN);\n    } else {\n      if (!args.length) {\n        this.setTime(Date.now());\n      } else if (typeof args[0] === \"number\" && (args.length === 1 || args.length === 2 && typeof args[1] !== \"number\")) {\n        this.setTime(args[0]);\n      } else if (typeof args[0] === \"string\") {\n        this.setTime(+new Date(args[0]));\n      } else if (args[0] instanceof Date) {\n        this.setTime(+args[0]);\n      } else {\n        this.setTime(+new Date(...args));\n        adjustToSystemTZ(this, NaN);\n        syncToInternal(this);\n      }\n    }\n  }\n  static tz(tz, ...args) {\n    return args.length ? new TZDateMini(...args, tz) : new TZDateMini(Date.now(), tz);\n  }\n\n  //#endregion\n\n  //#region time zone\n\n  withTimeZone(timeZone) {\n    return new TZDateMini(+this, timeZone);\n  }\n  getTimezoneOffset() {\n    const offset = -tzOffset(this.timeZone, this);\n    // Remove the seconds offset\n    // use Math.floor for negative GMT timezones and Math.ceil for positive GMT timezones.\n    return offset > 0 ? Math.floor(offset) : Math.ceil(offset);\n  }\n\n  //#endregion\n\n  //#region time\n\n  setTime(time) {\n    Date.prototype.setTime.apply(this, arguments);\n    syncToInternal(this);\n    return +this;\n  }\n\n  //#endregion\n\n  //#region date-fns integration\n\n  [Symbol.for(\"constructDateFrom\")](date) {\n    return new TZDateMini(+new Date(date), this.timeZone);\n  }\n\n  //#endregion\n}\n\n// Assign getters and setters\nconst re = /^(get|set)(?!UTC)/;\nObject.getOwnPropertyNames(Date.prototype).forEach(method => {\n  if (!re.test(method)) return;\n  const utcMethod = method.replace(re, \"$1UTC\");\n  // Filter out methods without UTC counterparts\n  if (!TZDateMini.prototype[utcMethod]) return;\n  if (method.startsWith(\"get\")) {\n    // Delegate to internal date's UTC method\n    TZDateMini.prototype[method] = function () {\n      return this.internal[utcMethod]();\n    };\n  } else {\n    // Assign regular setter\n    TZDateMini.prototype[method] = function () {\n      Date.prototype[utcMethod].apply(this.internal, arguments);\n      syncFromInternal(this);\n      return +this;\n    };\n\n    // Assign UTC setter\n    TZDateMini.prototype[utcMethod] = function () {\n      Date.prototype[utcMethod].apply(this, arguments);\n      syncToInternal(this);\n      return +this;\n    };\n  }\n});\n\n/**\n * Function syncs time to internal date, applying the time zone offset.\n *\n * @param {Date} date - Date to sync\n */\nfunction syncToInternal(date) {\n  date.internal.setTime(+date);\n  date.internal.setUTCSeconds(date.internal.getUTCSeconds() - Math.round(-tzOffset(date.timeZone, date) * 60));\n}\n\n/**\n * Function syncs the internal date UTC values to the date. It allows to get\n * accurate timestamp value.\n *\n * @param {Date} date - The date to sync\n */\nfunction syncFromInternal(date) {\n  // First we transpose the internal values\n  Date.prototype.setFullYear.call(date, date.internal.getUTCFullYear(), date.internal.getUTCMonth(), date.internal.getUTCDate());\n  Date.prototype.setHours.call(date, date.internal.getUTCHours(), date.internal.getUTCMinutes(), date.internal.getUTCSeconds(), date.internal.getUTCMilliseconds());\n\n  // Now we have to adjust the date to the system time zone\n  adjustToSystemTZ(date);\n}\n\n/**\n * Function adjusts the date to the system time zone. It uses the time zone\n * differences to calculate the offset and adjust the date.\n *\n * @param {Date} date - Date to adjust\n */\nfunction adjustToSystemTZ(date) {\n  // Save the time zone offset before all the adjustments\n  const baseOffset = tzOffset(date.timeZone, date);\n  // Remove the seconds offset\n  // use Math.floor for negative GMT timezones and Math.ceil for positive GMT timezones.\n  const offset = baseOffset > 0 ? Math.floor(baseOffset) : Math.ceil(baseOffset);\n  //#region System DST adjustment\n\n  // The biggest problem with using the system time zone is that when we create\n  // a date from internal values stored in UTC, the system time zone might end\n  // up on the DST hour:\n  //\n  //   $ TZ=America/New_York node\n  //   > new Date(2020, 2, 8, 1).toString()\n  //   'Sun Mar 08 2020 01:00:00 GMT-0500 (Eastern Standard Time)'\n  //   > new Date(2020, 2, 8, 2).toString()\n  //   'Sun Mar 08 2020 03:00:00 GMT-0400 (Eastern Daylight Time)'\n  //   > new Date(2020, 2, 8, 3).toString()\n  //   'Sun Mar 08 2020 03:00:00 GMT-0400 (Eastern Daylight Time)'\n  //   > new Date(2020, 2, 8, 4).toString()\n  //   'Sun Mar 08 2020 04:00:00 GMT-0400 (Eastern Daylight Time)'\n  //\n  // Here we get the same hour for both 2 and 3, because the system time zone\n  // has DST beginning at 8 March 2020, 2 a.m. and jumps to 3 a.m. So we have\n  // to adjust the internal date to reflect that.\n  //\n  // However we want to adjust only if that's the DST hour the change happenes,\n  // not the hour where DST moves to.\n\n  // We calculate the previous hour to see if the time zone offset has changed\n  // and we have landed on the DST hour.\n  const prevHour = new Date(+date);\n  // We use UTC methods here as we don't want to land on the same hour again\n  // in case of DST.\n  prevHour.setUTCHours(prevHour.getUTCHours() - 1);\n\n  // Calculate if we are on the system DST hour.\n  const systemOffset = -new Date(+date).getTimezoneOffset();\n  const prevHourSystemOffset = -new Date(+prevHour).getTimezoneOffset();\n  const systemDSTChange = systemOffset - prevHourSystemOffset;\n  // Detect the DST shift. System DST change will occur both on\n  const dstShift = Date.prototype.getHours.apply(date) !== date.internal.getUTCHours();\n\n  // Move the internal date when we are on the system DST hour.\n  if (systemDSTChange && dstShift) date.internal.setUTCMinutes(date.internal.getUTCMinutes() + systemDSTChange);\n\n  //#endregion\n\n  //#region System diff adjustment\n\n  // Now we need to adjust the date, since we just applied internal values.\n  // We need to calculate the difference between the system and date time zones\n  // and apply it to the date.\n\n  const offsetDiff = systemOffset - offset;\n  if (offsetDiff) Date.prototype.setUTCMinutes.call(date, Date.prototype.getUTCMinutes.call(date) + offsetDiff);\n\n  //#endregion\n\n  //#region Seconds System diff adjustment\n\n  const systemDate = new Date(+date);\n  // Set the UTC seconds to 0 to isolate the timezone offset in seconds.\n  systemDate.setUTCSeconds(0);\n  // For negative systemOffset, invert the seconds.\n  const systemSecondsOffset = systemOffset > 0 ? systemDate.getSeconds() : (systemDate.getSeconds() - 60) % 60;\n\n  // Calculate the seconds offset based on the timezone offset.\n  const secondsOffset = Math.round(-(tzOffset(date.timeZone, date) * 60)) % 60;\n  if (secondsOffset || systemSecondsOffset) {\n    date.internal.setUTCSeconds(date.internal.getUTCSeconds() + secondsOffset);\n    Date.prototype.setUTCSeconds.call(date, Date.prototype.getUTCSeconds.call(date) + secondsOffset + systemSecondsOffset);\n  }\n\n  //#endregion\n\n  //#region Post-adjustment DST fix\n\n  const postBaseOffset = tzOffset(date.timeZone, date);\n  // Remove the seconds offset\n  // use Math.floor for negative GMT timezones and Math.ceil for positive GMT timezones.\n  const postOffset = postBaseOffset > 0 ? Math.floor(postBaseOffset) : Math.ceil(postBaseOffset);\n  const postSystemOffset = -new Date(+date).getTimezoneOffset();\n  const postOffsetDiff = postSystemOffset - postOffset;\n  const offsetChanged = postOffset !== offset;\n  const postDiff = postOffsetDiff - offsetDiff;\n  if (offsetChanged && postDiff) {\n    Date.prototype.setUTCMinutes.call(date, Date.prototype.getUTCMinutes.call(date) + postDiff);\n\n    // Now we need to check if got offset change during the post-adjustment.\n    // If so, we also need both dates to reflect that.\n\n    const newBaseOffset = tzOffset(date.timeZone, date);\n    // Remove the seconds offset\n    // use Math.floor for negative GMT timezones and Math.ceil for positive GMT timezones.\n    const newOffset = newBaseOffset > 0 ? Math.floor(newBaseOffset) : Math.ceil(newBaseOffset);\n    const offsetChange = postOffset - newOffset;\n    if (offsetChange) {\n      date.internal.setUTCMinutes(date.internal.getUTCMinutes() + offsetChange);\n      Date.prototype.setUTCMinutes.call(date, Date.prototype.getUTCMinutes.call(date) + offsetChange);\n    }\n  }\n\n  //#endregion\n}","import { tzName } from \"../tzName/index.js\";\nimport { TZDateMini } from \"./mini.js\";\nexport class TZDate extends TZDateMini {\n  //#region static\n\n  static tz(tz, ...args) {\n    return args.length ? new TZDate(...args, tz) : new TZDate(Date.now(), tz);\n  }\n\n  //#endregion\n\n  //#region representation\n\n  toISOString() {\n    const [sign, hours, minutes] = this.tzComponents();\n    const tz = `${sign}${hours}:${minutes}`;\n    return this.internal.toISOString().slice(0, -1) + tz;\n  }\n  toString() {\n    // \"Tue Aug 13 2024 07:50:19 GMT+0800 (Singapore Standard Time)\";\n    return `${this.toDateString()} ${this.toTimeString()}`;\n  }\n  toDateString() {\n    // toUTCString returns RFC 7231 (\"Mon, 12 Aug 2024 23:36:08 GMT\")\n    const [day, date, month, year] = this.internal.toUTCString().split(\" \");\n    // \"Tue Aug 13 2024\"\n    return `${day?.slice(0, -1) /* Remove \",\" */} ${month} ${date} ${year}`;\n  }\n  toTimeString() {\n    // toUTCString returns RFC 7231 (\"Mon, 12 Aug 2024 23:36:08 GMT\")\n    const time = this.internal.toUTCString().split(\" \")[4];\n    const [sign, hours, minutes] = this.tzComponents();\n    // \"07:42:23 GMT+0800 (Singapore Standard Time)\"\n    return `${time} GMT${sign}${hours}${minutes} (${tzName(this.timeZone, this)})`;\n  }\n  toLocaleString(locales, options) {\n    return Date.prototype.toLocaleString.call(this, locales, {\n      ...options,\n      timeZone: options?.timeZone || this.timeZone\n    });\n  }\n  toLocaleDateString(locales, options) {\n    return Date.prototype.toLocaleDateString.call(this, locales, {\n      ...options,\n      timeZone: options?.timeZone || this.timeZone\n    });\n  }\n  toLocaleTimeString(locales, options) {\n    return Date.prototype.toLocaleTimeString.call(this, locales, {\n      ...options,\n      timeZone: options?.timeZone || this.timeZone\n    });\n  }\n\n  //#endregion\n\n  //#region private\n\n  tzComponents() {\n    const offset = this.getTimezoneOffset();\n    const sign = offset > 0 ? \"-\" : \"+\";\n    const hours = String(Math.floor(Math.abs(offset) / 60)).padStart(2, \"0\");\n    const minutes = String(Math.abs(offset) % 60).padStart(2, \"0\");\n    return [sign, hours, minutes];\n  }\n\n  //#endregion\n\n  withTimeZone(timeZone) {\n    return new TZDate(+this, timeZone);\n  }\n\n  //#region date-fns integration\n\n  [Symbol.for(\"constructDateFrom\")](date) {\n    return new TZDate(+new Date(date), this.timeZone);\n  }\n\n  //#endregion\n}","/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nexport const daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occurs every 4 years, except for years that are divisible by 100 and not divisible by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nexport const daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nexport const maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nexport const minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nexport const millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nexport const millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nexport const millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nexport const millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nexport const millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nexport const minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nexport const minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nexport const minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nexport const minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nexport const monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nexport const monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nexport const quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nexport const secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nexport const secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nexport const secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nexport const secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nexport const secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nexport const secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nexport const secondsInQuarter = secondsInMonth * 3;\n\n/**\n * @constant\n * @name constructFromSymbol\n * @summary Symbol enabling Date extensions to inherit properties from the reference date.\n *\n * The symbol is used to enable the `constructFrom` function to construct a date\n * using a reference date and a value. It allows to transfer extra properties\n * from the reference date to the new date. It's useful for extensions like\n * [`TZDate`](https://github.com/date-fns/tz) that accept a time zone as\n * a constructor argument.\n */\nexport const constructFromSymbol = Symbol.for(\"constructDateFrom\");\n","import { constructFromSymbol } from \"./constants.js\";\n\n/**\n * @name constructFrom\n * @category Generic Helpers\n * @summary Constructs a date using the reference date and the value\n *\n * @description\n * The function constructs a new date using the constructor from the reference\n * date and the given value. It helps to build generic functions that accept\n * date extensions.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * Starting from v3.7.0, it allows to construct a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n * @param value - The value to create the date\n *\n * @returns Date initialized using the given date and value\n *\n * @example\n * import { constructFrom } from \"./constructFrom/date-fns\";\n *\n * // A function that clones a date preserving the original type\n * function cloneDate<DateType extends Date>(date: DateType): DateType {\n *   return constructFrom(\n *     date, // Use constructor from the given date\n *     date.getTime() // Use the date value to create a new date\n *   );\n * }\n */\nexport function constructFrom(date, value) {\n  if (typeof date === \"function\") return date(value);\n\n  if (date && typeof date === \"object\" && constructFromSymbol in date)\n    return date[constructFromSymbol](value);\n\n  if (date instanceof Date) return new date.constructor(value);\n\n  return new Date(value);\n}\n\n// Fallback for modularized imports:\nexport default constructFrom;\n","import { constructFrom } from \"./constructFrom.js\";\n\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * Starting from v3.7.0, it clones a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument, context) {\n  // [TODO] Get rid of `toDate` or `constructFrom`?\n  return constructFrom(context || argument, argument);\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link addDays} function options.\n */\n\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param amount - The amount of days to be added.\n * @param options - An object with options\n *\n * @returns The new date with the days added\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\nexport function addDays(date, amount, options) {\n  const _date = toDate(date, options?.in);\n  if (isNaN(amount)) return constructFrom(options?.in || date, NaN);\n\n  // If 0 days, no-op to avoid changing times in the hour before end of DST\n  if (!amount) return _date;\n\n  _date.setDate(_date.getDate() + amount);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default addDays;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link addMonths} function options.\n */\n\n/**\n * @name addMonths\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param amount - The amount of months to be added.\n * @param options - The options object\n *\n * @returns The new date with the months added\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * const result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n *\n * // Add one month to 30 January 2023:\n * const result = addMonths(new Date(2023, 0, 30), 1)\n * //=> Tue Feb 28 2023 00:00:00\n */\nexport function addMonths(date, amount, options) {\n  const _date = toDate(date, options?.in);\n  if (isNaN(amount)) return constructFrom(options?.in || date, NaN);\n  if (!amount) {\n    // If 0 months, no-op to avoid changing times in the hour before end of DST\n    return _date;\n  }\n  const dayOfMonth = _date.getDate();\n\n  // The JS Date object supports date math by accepting out-of-bounds values for\n  // month, day, etc. For example, new Date(2020, 0, 0) returns 31 Dec 2019 and\n  // new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we\n  // want except that dates will wrap around the end of a month, meaning that\n  // new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So\n  // we'll default to the end of the desired month by adding 1 to the desired\n  // month and using a date of 0 to back up one day to the end of the desired\n  // month.\n  const endOfDesiredMonth = constructFrom(options?.in || date, _date.getTime());\n  endOfDesiredMonth.setMonth(_date.getMonth() + amount + 1, 0);\n  const daysInMonth = endOfDesiredMonth.getDate();\n  if (dayOfMonth >= daysInMonth) {\n    // If we're already at the end of the month, then this is the correct date\n    // and we're done.\n    return endOfDesiredMonth;\n  } else {\n    // Otherwise, we now know that setting the original day-of-month value won't\n    // cause an overflow, so set the desired day-of-month. Note that we can't\n    // just set the date of `endOfDesiredMonth` because that object may have had\n    // its time changed in the unusual case where where a DST transition was on\n    // the last day of the month and its local time was in the hour skipped or\n    // repeated next to a DST transition.  So we use `date` instead which is\n    // guaranteed to still have the original time.\n    _date.setFullYear(\n      endOfDesiredMonth.getFullYear(),\n      endOfDesiredMonth.getMonth(),\n      dayOfMonth,\n    );\n    return _date;\n  }\n}\n\n// Fallback for modularized imports:\nexport default addMonths;\n","let defaultOptions = {};\n\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\n\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfWeek} function options.\n */\n\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date, options?.in);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n\n  _date.setDate(_date.getDate() - diff);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeek;\n","import { startOfWeek } from \"./startOfWeek.js\";\n\n/**\n * The {@link startOfISOWeek} function options.\n */\n\n/**\n * @name startOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of an ISO week\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * const result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfISOWeek(date, options) {\n  return startOfWeek(date, { ...options, weekStartsOn: 1 });\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeek;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getISOWeekYear} function options.\n */\n\n/**\n * @name getISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n *\n * @returns The ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * const result = getISOWeekYear(new Date(2005, 0, 2))\n * //=> 2004\n */\nexport function getISOWeekYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n\n  const fourthOfJanuaryOfNextYear = constructFrom(_date, 0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n\n  const fourthOfJanuaryOfThisYear = constructFrom(_date, 0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getISOWeekYear;\n","import { toDate } from \"../toDate.js\";\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport function getTimezoneOffsetInMilliseconds(date) {\n  const _date = toDate(date);\n  const utcDate = new Date(\n    Date.UTC(\n      _date.getFullYear(),\n      _date.getMonth(),\n      _date.getDate(),\n      _date.getHours(),\n      _date.getMinutes(),\n      _date.getSeconds(),\n      _date.getMilliseconds(),\n    ),\n  );\n  utcDate.setUTCFullYear(_date.getFullYear());\n  return +date - +utcDate;\n}\n","import { constructFrom } from \"../constructFrom.js\";\n\nexport function normalizeDates(context, ...dates) {\n  const normalize = constructFrom.bind(\n    null,\n    context || dates.find((date) => typeof date === \"object\"),\n  );\n  return dates.map(normalize);\n}\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfDay} function options.\n */\n\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nexport function startOfDay(date, options) {\n  const _date = toDate(date, options?.in);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfDay;\n","import { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.js\";\nimport { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { millisecondsInDay } from \"./constants.js\";\nimport { startOfDay } from \"./startOfDay.js\";\n\n/**\n * The {@link differenceInCalendarDays} function options.\n */\n\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - The options object\n *\n * @returns The number of calendar days\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\nexport function differenceInCalendarDays(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n\n  const laterStartOfDay = startOfDay(laterDate_);\n  const earlierStartOfDay = startOfDay(earlierDate_);\n\n  const laterTimestamp =\n    +laterStartOfDay - getTimezoneOffsetInMilliseconds(laterStartOfDay);\n  const earlierTimestamp =\n    +earlierStartOfDay - getTimezoneOffsetInMilliseconds(earlierStartOfDay);\n\n  // Round the number of days to the nearest integer because the number of\n  // milliseconds in a day is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round((laterTimestamp - earlierTimestamp) / millisecondsInDay);\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarDays;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { getISOWeekYear } from \"./getISOWeekYear.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\n\n/**\n * The {@link startOfISOWeekYear} function options.\n */\n\n/**\n * @name startOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of an ISO week-numbering year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * const result = startOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfISOWeekYear(date, options) {\n  const year = getISOWeekYear(date, options);\n  const fourthOfJanuary = constructFrom(options?.in || date, 0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  return startOfISOWeek(fourthOfJanuary);\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeekYear;\n","import { addDays } from \"./addDays.js\";\n\n/**\n * The {@link addWeeks} function options.\n */\n\n/**\n * @name addWeeks\n * @category Week Helpers\n * @summary Add the specified number of weeks to the given date.\n *\n * @description\n * Add the specified number of weeks to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param amount - The amount of weeks to be added.\n * @param options - An object with options\n *\n * @returns The new date with the weeks added\n *\n * @example\n * // Add 4 weeks to 1 September 2014:\n * const result = addWeeks(new Date(2014, 8, 1), 4)\n * //=> Mon Sep 29 2014 00:00:00\n */\nexport function addWeeks(date, amount, options) {\n  return addDays(date, amount * 7, options);\n}\n\n// Fallback for modularized imports:\nexport default addWeeks;\n","import { addMonths } from \"./addMonths.js\";\n\n/**\n * The {@link addYears} function options.\n */\n\n/**\n * @name addYears\n * @category Year Helpers\n * @summary Add the specified number of years to the given date.\n *\n * @description\n * Add the specified number of years to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type.\n *\n * @param date - The date to be changed\n * @param amount - The amount of years to be added.\n * @param options - The options\n *\n * @returns The new date with the years added\n *\n * @example\n * // Add 5 years to 1 September 2014:\n * const result = addYears(new Date(2014, 8, 1), 5)\n * //=> Sun Sep 01 2019 00:00:00\n */\nexport function addYears(date, amount, options) {\n  return addMonths(date, amount * 12, options);\n}\n\n// Fallback for modularized imports:\nexport default addYears;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link max} function options.\n */\n\n/**\n * @name max\n * @category Common Helpers\n * @summary Return the latest of the given dates.\n *\n * @description\n * Return the latest of the given dates.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param dates - The dates to compare\n *\n * @returns The latest of the dates\n *\n * @example\n * // Which of these dates is the latest?\n * const result = max([\n *   new Date(1989, 6, 10),\n *   new Date(1987, 1, 11),\n *   new Date(1995, 6, 2),\n *   new Date(1990, 0, 1)\n * ])\n * //=> Sun Jul 02 1995 00:00:00\n */\nexport function max(dates, options) {\n  let result;\n  let context = options?.in;\n\n  dates.forEach((date) => {\n    // Use the first date object as the context function\n    if (!context && typeof date === \"object\")\n      context = constructFrom.bind(null, date);\n\n    const date_ = toDate(date, context);\n    if (!result || result < date_ || isNaN(+date_)) result = date_;\n  });\n\n  return constructFrom(context, result || NaN);\n}\n\n// Fallback for modularized imports:\nexport default max;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link min} function options.\n */\n\n/**\n * @name min\n * @category Common Helpers\n * @summary Returns the earliest of the given dates.\n *\n * @description\n * Returns the earliest of the given dates.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param dates - The dates to compare\n *\n * @returns The earliest of the dates\n *\n * @example\n * // Which of these dates is the earliest?\n * const result = min([\n *   new Date(1989, 6, 10),\n *   new Date(1987, 1, 11),\n *   new Date(1995, 6, 2),\n *   new Date(1990, 0, 1)\n * ])\n * //=> Wed Feb 11 1987 00:00:00\n */\nexport function min(dates, options) {\n  let result;\n  let context = options?.in;\n\n  dates.forEach((date) => {\n    // Use the first date object as the context function\n    if (!context && typeof date === \"object\")\n      context = constructFrom.bind(null, date);\n\n    const date_ = toDate(date, context);\n    if (!result || result > date_ || isNaN(+date_)) result = date_;\n  });\n\n  return constructFrom(context, result || NaN);\n}\n\n// Fallback for modularized imports:\nexport default min;\n","import { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { startOfDay } from \"./startOfDay.js\";\n\n/**\n * The {@link isSameDay} function options.\n */\n\n/**\n * @name isSameDay\n * @category Day Helpers\n * @summary Are the given dates in the same day (and year and month)?\n *\n * @description\n * Are the given dates in the same day (and year and month)?\n *\n * @param laterDate - The first date to check\n * @param earlierDate - The second date to check\n * @param options - An object with options\n *\n * @returns The dates are in the same day (and year and month)\n *\n * @example\n * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?\n * const result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))\n * //=> true\n *\n * @example\n * // Are 4 September and 4 October in the same day?\n * const result = isSameDay(new Date(2014, 8, 4), new Date(2014, 9, 4))\n * //=> false\n *\n * @example\n * // Are 4 September, 2014 and 4 September, 2015 in the same day?\n * const result = isSameDay(new Date(2014, 8, 4), new Date(2015, 8, 4))\n * //=> false\n */\nexport function isSameDay(laterDate, earlierDate, options) {\n  const [dateLeft_, dateRight_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n  return +startOfDay(dateLeft_) === +startOfDay(dateRight_);\n}\n\n// Fallback for modularized imports:\nexport default isSameDay;\n","/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * @param value - The value to check\n *\n * @returns True if the given value is a date\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\nexport function isDate(value) {\n  return (\n    value instanceof Date ||\n    (typeof value === \"object\" &&\n      Object.prototype.toString.call(value) === \"[object Date]\")\n  );\n}\n\n// Fallback for modularized imports:\nexport default isDate;\n","import { isDate } from \"./isDate.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate](https://date-fns.org/docs/toDate)\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @param date - The date to check\n *\n * @returns The date is valid\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertible into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\nexport function isValid(date) {\n  return !((!isDate(date) && typeof date !== \"number\") || isNaN(+toDate(date)));\n}\n\n// Fallback for modularized imports:\nexport default isValid;\n","import { normalizeDates } from \"./_lib/normalizeDates.js\";\n\n/**\n * The {@link differenceInCalendarMonths} function options.\n */\n\n/**\n * @name differenceInCalendarMonths\n * @category Month Helpers\n * @summary Get the number of calendar months between the given dates.\n *\n * @description\n * Get the number of calendar months between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - An object with options\n *\n * @returns The number of calendar months\n *\n * @example\n * // How many calendar months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInCalendarMonths(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 0, 31)\n * )\n * //=> 8\n */\nexport function differenceInCalendarMonths(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n\n  const yearsDiff = laterDate_.getFullYear() - earlierDate_.getFullYear();\n  const monthsDiff = laterDate_.getMonth() - earlierDate_.getMonth();\n\n  return yearsDiff * 12 + monthsDiff;\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarMonths;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link endOfMonth} function options.\n */\n\n/**\n * @name endOfMonth\n * @category Month Helpers\n * @summary Return the end of a month for the given date.\n *\n * @description\n * Return the end of a month for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The end of a month\n *\n * @example\n * // The end of a month for 2 September 2014 11:55:00:\n * const result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\nexport function endOfMonth(date, options) {\n  const _date = toDate(date, options?.in);\n  const month = _date.getMonth();\n  _date.setFullYear(_date.getFullYear(), month + 1, 0);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfMonth;\n","import { normalizeDates } from \"./normalizeDates.js\";\n\nexport function normalizeInterval(context, interval) {\n  const [start, end] = normalizeDates(context, interval.start, interval.end);\n  return { start, end };\n}\n","import { normalizeInterval } from \"./_lib/normalizeInterval.js\";\nimport { constructFrom } from \"./constructFrom.js\";\n\n/**\n * The {@link eachMonthOfInterval} function options.\n */\n\n/**\n * The {@link eachMonthOfInterval} function result type. It resolves the proper data type.\n */\n\n/**\n * @name eachMonthOfInterval\n * @category Interval Helpers\n * @summary Return the array of months within the specified time interval.\n *\n * @description\n * Return the array of months within the specified time interval.\n *\n * @typeParam IntervalType - Interval type.\n * @typeParam Options - Options type.\n *\n * @param interval - The interval.\n * @param options - An object with options.\n *\n * @returns The array with starts of months from the month of the interval start to the month of the interval end\n *\n * @example\n * // Each month between 6 February 2014 and 10 August 2014:\n * const result = eachMonthOfInterval({\n *   start: new Date(2014, 1, 6),\n *   end: new Date(2014, 7, 10)\n * })\n * //=> [\n * //   Sat Feb 01 2014 00:00:00,\n * //   Sat Mar 01 2014 00:00:00,\n * //   Tue Apr 01 2014 00:00:00,\n * //   Thu May 01 2014 00:00:00,\n * //   Sun Jun 01 2014 00:00:00,\n * //   Tue Jul 01 2014 00:00:00,\n * //   Fri Aug 01 2014 00:00:00\n * // ]\n */\nexport function eachMonthOfInterval(interval, options) {\n  const { start, end } = normalizeInterval(options?.in, interval);\n\n  let reversed = +start > +end;\n  const endTime = reversed ? +start : +end;\n  const date = reversed ? end : start;\n  date.setHours(0, 0, 0, 0);\n  date.setDate(1);\n\n  let step = options?.step ?? 1;\n  if (!step) return [];\n  if (step < 0) {\n    step = -step;\n    reversed = !reversed;\n  }\n\n  const dates = [];\n\n  while (+date <= endTime) {\n    dates.push(constructFrom(start, date));\n    date.setMonth(date.getMonth() + step);\n  }\n\n  return reversed ? dates.reverse() : dates;\n}\n\n// Fallback for modularized imports:\nexport default eachMonthOfInterval;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfMonth} function options.\n */\n\n/**\n * @name startOfMonth\n * @category Month Helpers\n * @summary Return the start of a month for the given date.\n *\n * @description\n * Return the start of a month for the given date. The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments.\n * Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed,\n * or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a month\n *\n * @example\n * // The start of a month for 2 September 2014 11:55:00:\n * const result = startOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfMonth(date, options) {\n  const _date = toDate(date, options?.in);\n  _date.setDate(1);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfMonth;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link endOfYear} function options.\n */\n\n/**\n * @name endOfYear\n * @category Year Helpers\n * @summary Return the end of a year for the given date.\n *\n * @description\n * Return the end of a year for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The end of a year\n *\n * @example\n * // The end of a year for 2 September 2014 11:55:00:\n * const result = endOfYear(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Wed Dec 31 2014 23:59:59.999\n */\nexport function endOfYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n  _date.setFullYear(year + 1, 0, 0);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfYear;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfYear} function options.\n */\n\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\nexport function startOfYear(date, options) {\n  const date_ = toDate(date, options?.in);\n  date_.setFullYear(date_.getFullYear(), 0, 1);\n  date_.setHours(0, 0, 0, 0);\n  return date_;\n}\n\n// Fallback for modularized imports:\nexport default startOfYear;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link endOfWeek} function options.\n */\n\n/**\n * @name endOfWeek\n * @category Week Helpers\n * @summary Return the end of a week for the given date.\n *\n * @description\n * Return the end of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The end of a week\n *\n * @example\n * // The end of a week for 2 September 2014 11:55:00:\n * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sat Sep 06 2014 23:59:59.999\n *\n * @example\n * // If the week starts on Monday, the end of the week for 2 September 2014 11:55:00:\n * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 23:59:59.999\n */\nexport function endOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date, options?.in);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);\n\n  _date.setDate(_date.getDate() + diff);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfWeek;\n","import { endOfWeek } from \"./endOfWeek.js\";\n\n/**\n * The {@link endOfISOWeek} function options.\n */\n\n/**\n * @name endOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the end of an ISO week for the given date.\n *\n * @description\n * Return the end of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The end of an ISO week\n *\n * @example\n * // The end of an ISO week for 2 September 2014 11:55:00:\n * const result = endOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Sep 07 2014 23:59:59.999\n */\nexport function endOfISOWeek(date, options) {\n  return endOfWeek(date, { ...options, weekStartsOn: 1 });\n}\n\n// Fallback for modularized imports:\nexport default endOfISOWeek;\n","const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\",\n  },\n\n  xSeconds: {\n    one: \"1 second\",\n    other: \"{{count}} seconds\",\n  },\n\n  halfAMinute: \"half a minute\",\n\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\",\n  },\n\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\",\n  },\n\n  aboutXHours: {\n    one: \"about 1 hour\",\n    other: \"about {{count}} hours\",\n  },\n\n  xHours: {\n    one: \"1 hour\",\n    other: \"{{count}} hours\",\n  },\n\n  xDays: {\n    one: \"1 day\",\n    other: \"{{count}} days\",\n  },\n\n  aboutXWeeks: {\n    one: \"about 1 week\",\n    other: \"about {{count}} weeks\",\n  },\n\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weeks\",\n  },\n\n  aboutXMonths: {\n    one: \"about 1 month\",\n    other: \"about {{count}} months\",\n  },\n\n  xMonths: {\n    one: \"1 month\",\n    other: \"{{count}} months\",\n  },\n\n  aboutXYears: {\n    one: \"about 1 year\",\n    other: \"about {{count}} years\",\n  },\n\n  xYears: {\n    one: \"1 year\",\n    other: \"{{count}} years\",\n  },\n\n  overXYears: {\n    one: \"over 1 year\",\n    other: \"over {{count}} years\",\n  },\n\n  almostXYears: {\n    one: \"almost 1 year\",\n    other: \"almost {{count}} years\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n\n  return result;\n};\n","export function buildFormatLongFn(args) {\n  return (options = {}) => {\n    // TODO: Remove String()\n    const width = options.width ? String(options.width) : args.defaultWidth;\n    const format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}\n","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n","const formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n","/**\n * The localize function argument callback which allows to convert raw value to\n * the actual type.\n *\n * @param value - The value to convert\n *\n * @returns The converted value\n */\n\n/**\n * The map of localized values for each width.\n */\n\n/**\n * The index type of the locale unit value. It types conversion of units of\n * values that don't start at 0 (i.e. quarters).\n */\n\n/**\n * Converts the unit value to the tuple of values.\n */\n\n/**\n * The tuple of localized era values. The first element represents BC,\n * the second element represents AD.\n */\n\n/**\n * The tuple of localized quarter values. The first element represents Q1.\n */\n\n/**\n * The tuple of localized day values. The first element represents Sunday.\n */\n\n/**\n * The tuple of localized month values. The first element represents January.\n */\n\nexport function buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = options?.context ? String(options.context) : \"standalone\";\n\n    let valuesArray;\n    if (context === \"formatting\" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = options?.width ? String(options.width) : defaultWidth;\n\n      valuesArray =\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = options?.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\n\n    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"B\", \"A\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"Before Christ\", \"Anno Domini\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ],\n\n  wide: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n  short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  wide: [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n    }\n  }\n  return number + \"th\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n","export function buildMatchFn(args) {\n  return (string, options = {}) => {\n    const width = options.width;\n\n    const matchPattern =\n      (width && args.matchPatterns[width]) ||\n      args.matchPatterns[args.defaultMatchWidth];\n    const matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n    const matchedString = matchResult[0];\n\n    const parsePatterns =\n      (width && args.parsePatterns[width]) ||\n      args.parsePatterns[args.defaultParseWidth];\n\n    const key = Array.isArray(parsePatterns)\n      ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString))\n      : // [TODO] -- I challenge you to fix the type\n        findKey(parsePatterns, (pattern) => pattern.test(matchedString));\n\n    let value;\n\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback\n      ? // [TODO] -- I challenge you to fix the type\n        options.valueCallback(value)\n      : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (const key in object) {\n    if (\n      Object.prototype.hasOwnProperty.call(object, key) &&\n      predicate(object[key])\n    ) {\n      return key;\n    }\n  }\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (let key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\n","export function buildMatchPatternFn(args) {\n  return (string, options = {}) => {\n    const matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    const matchedString = matchResult[0];\n\n    const parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    let value = args.valueCallback\n      ? args.valueCallback(parseResult[0])\n      : parseResult[0];\n\n    // [TODO] I challenge you to fix the type\n    value = options.valueCallback ? options.valueCallback(value) : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n","import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i,\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","import { formatDistance } from \"./en-US/_lib/formatDistance.js\";\nimport { formatLong } from \"./en-US/_lib/formatLong.js\";\nimport { formatRelative } from \"./en-US/_lib/formatRelative.js\";\nimport { localize } from \"./en-US/_lib/localize.js\";\nimport { match } from \"./en-US/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)\n * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)\n */\nexport const enUS = {\n  code: \"en-US\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default enUS;\n","import { differenceInCalendarDays } from \"./differenceInCalendarDays.js\";\nimport { startOfYear } from \"./startOfYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getDayOfYear} function options.\n */\n\n/**\n * @name getDayOfYear\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * @param date - The given date\n * @param options - The options\n *\n * @returns The day of year\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * const result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\nexport function getDayOfYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = differenceInCalendarDays(_date, startOfYear(_date));\n  const dayOfYear = diff + 1;\n  return dayOfYear;\n}\n\n// Fallback for modularized imports:\nexport default getDayOfYear;\n","import { millisecondsInWeek } from \"./constants.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\nimport { startOfISOWeekYear } from \"./startOfISOWeekYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getISOWeek} function options.\n */\n\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n * @param options - The options\n *\n * @returns The ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * const result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\nexport function getISOWeek(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = +startOfISOWeek(_date) - +startOfISOWeekYear(_date);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getISOWeek;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getWeekYear} function options.\n */\n\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @param date - The given date\n * @param options - An object with options.\n *\n * @returns The local week-numbering year\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * const result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\nexport function getWeekYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const firstWeekOfNextYear = constructFrom(options?.in || date, 0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfWeek(firstWeekOfNextYear, options);\n\n  const firstWeekOfThisYear = constructFrom(options?.in || date, 0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfWeek(firstWeekOfThisYear, options);\n\n  if (+_date >= +startOfNextYear) {\n    return year + 1;\n  } else if (+_date >= +startOfThisYear) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getWeekYear;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { getWeekYear } from \"./getWeekYear.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\n\n/**\n * The {@link startOfWeekYear} function options.\n */\n\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week-numbering year\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * const result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * const result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfWeekYear(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const year = getWeekYear(date, options);\n  const firstWeek = constructFrom(options?.in || date, 0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  const _date = startOfWeek(firstWeek, options);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeekYear;\n","import { millisecondsInWeek } from \"./constants.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\nimport { startOfWeekYear } from \"./startOfWeekYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getWeek} function options.\n */\n\n/**\n * @name getWeek\n * @category Week Helpers\n * @summary Get the local week index of the given date.\n *\n * @description\n * Get the local week index of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The week\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005 with default options?\n * const result = getWeek(new Date(2005, 0, 2))\n * //=> 2\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January?\n * const result = getWeek(new Date(2005, 0, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> 53\n */\nexport function getWeek(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = +startOfWeek(_date, options) - +startOfWeekYear(_date, options);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getWeek;\n","export function addLeadingZeros(number, targetLength) {\n  const sign = number < 0 ? \"-\" : \"\";\n  const output = Math.abs(number).toString().padStart(targetLength, \"0\");\n  return sign + output;\n}\n","import { addLeadingZeros } from \"../addLeadingZeros.js\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nexport const lightFormatters = {\n  // Year\n  y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    const signedYear = date.getFullYear();\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === \"yy\" ? year % 100 : year, token.length);\n  },\n\n  // Month\n  M(date, token) {\n    const month = date.getMonth();\n    return token === \"M\" ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n\n  // Day of the month\n  d(date, token) {\n    return addLeadingZeros(date.getDate(), token.length);\n  },\n\n  // AM or PM\n  a(date, token) {\n    const dayPeriodEnumValue = date.getHours() / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return dayPeriodEnumValue.toUpperCase();\n      case \"aaa\":\n        return dayPeriodEnumValue;\n      case \"aaaaa\":\n        return dayPeriodEnumValue[0];\n      case \"aaaa\":\n      default:\n        return dayPeriodEnumValue === \"am\" ? \"a.m.\" : \"p.m.\";\n    }\n  },\n\n  // Hour [1-12]\n  h(date, token) {\n    return addLeadingZeros(date.getHours() % 12 || 12, token.length);\n  },\n\n  // Hour [0-23]\n  H(date, token) {\n    return addLeadingZeros(date.getHours(), token.length);\n  },\n\n  // Minute\n  m(date, token) {\n    return addLeadingZeros(date.getMinutes(), token.length);\n  },\n\n  // Second\n  s(date, token) {\n    return addLeadingZeros(date.getSeconds(), token.length);\n  },\n\n  // Fraction of second\n  S(date, token) {\n    const numberOfDigits = token.length;\n    const milliseconds = date.getMilliseconds();\n    const fractionalSeconds = Math.trunc(\n      milliseconds * Math.pow(10, numberOfDigits - 3),\n    );\n    return addLeadingZeros(fractionalSeconds, token.length);\n  },\n};\n","import { getDayOfYear } from \"../../getDayOfYear.js\";\nimport { getISOWeek } from \"../../getISOWeek.js\";\nimport { getISOWeekYear } from \"../../getISOWeekYear.js\";\nimport { getWeek } from \"../../getWeek.js\";\nimport { getWeekYear } from \"../../getWeekYear.js\";\n\nimport { addLeadingZeros } from \"../addLeadingZeros.js\";\nimport { lightFormatters } from \"./lightFormatters.js\";\n\nconst dayPeriodEnum = {\n  am: \"am\",\n  pm: \"pm\",\n  midnight: \"midnight\",\n  noon: \"noon\",\n  morning: \"morning\",\n  afternoon: \"afternoon\",\n  evening: \"evening\",\n  night: \"night\",\n};\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nexport const formatters = {\n  // Era\n  G: function (date, token, localize) {\n    const era = date.getFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return localize.era(era, { width: \"abbreviated\" });\n      // A, B\n      case \"GGGGG\":\n        return localize.era(era, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return localize.era(era, { width: \"wide\" });\n    }\n  },\n\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === \"yo\") {\n      const signedYear = date.getFullYear();\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\n      const year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, { unit: \"year\" });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    const signedWeekYear = getWeekYear(date, options);\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n\n    // Two digit year\n    if (token === \"YY\") {\n      const twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    }\n\n    // Ordinal number\n    if (token === \"Yo\") {\n      return localize.ordinalNumber(weekYear, { unit: \"year\" });\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length);\n  },\n\n  // ISO week-numbering year\n  R: function (date, token) {\n    const isoWeekYear = getISOWeekYear(date);\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    const year = date.getFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n\n  // Quarter\n  Q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"QQ\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"qq\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // Month\n  M: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      case \"M\":\n      case \"MM\":\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // J, F, ..., D\n      case \"MMMMM\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"formatting\" });\n    }\n  },\n\n  // Stand-alone month\n  L: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case \"LL\":\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // J, F, ..., D\n      case \"LLLLL\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"standalone\" });\n    }\n  },\n\n  // Local week of year\n  w: function (date, token, localize, options) {\n    const week = getWeek(date, options);\n\n    if (token === \"wo\") {\n      return localize.ordinalNumber(week, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n\n  // ISO week of year\n  I: function (date, token, localize) {\n    const isoWeek = getISOWeek(date);\n\n    if (token === \"Io\") {\n      return localize.ordinalNumber(isoWeek, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === \"do\") {\n      return localize.ordinalNumber(date.getDate(), { unit: \"date\" });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n\n  // Day of year\n  D: function (date, token, localize) {\n    const dayOfYear = getDayOfYear(date);\n\n    if (token === \"Do\") {\n      return localize.ordinalNumber(dayOfYear, { unit: \"dayOfYear\" });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n\n  // Day of week\n  E: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"EEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"EEEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Local day of week\n  e: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case \"e\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"ee\":\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n      case \"eo\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"eee\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"eeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"eeeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"eeee\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case \"c\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"cc\":\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n      case \"co\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"ccc\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // T\n      case \"ccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"standalone\",\n        });\n      // Tuesday\n      case \"cccc\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // ISO day of week\n  i: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    const isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case \"i\":\n        return String(isoDayOfWeek);\n      // 02\n      case \"ii\":\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n      case \"io\":\n        return localize.ordinalNumber(isoDayOfWeek, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"iiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"iiiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"iiii\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM or PM\n  a: function (date, token, localize) {\n    const hours = date.getHours();\n    const dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"aaa\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"aaaaa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"aaaa\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n    }\n\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"bbb\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"bbbbb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"BBBBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === \"ho\") {\n      let hours = date.getHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === \"Ho\") {\n      return localize.ordinalNumber(date.getHours(), { unit: \"hour\" });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    const hours = date.getHours() % 12;\n\n    if (token === \"Ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    let hours = date.getHours();\n    if (hours === 0) hours = 24;\n\n    if (token === \"ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Minute\n  m: function (date, token, localize) {\n    if (token === \"mo\") {\n      return localize.ordinalNumber(date.getMinutes(), { unit: \"minute\" });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n\n  // Second\n  s: function (date, token, localize) {\n    if (token === \"so\") {\n      return localize.ordinalNumber(date.getSeconds(), { unit: \"second\" });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return \"Z\";\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"X\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case \"XXXX\":\n      case \"XX\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case \"XXXXX\":\n      case \"XXX\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"x\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case \"xxxx\":\n      case \"xx\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case \"xxxxx\":\n      case \"xxx\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (GMT)\n  O: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"O\":\n      case \"OO\":\n      case \"OOO\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"OOOO\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (specific non-location)\n  z: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"z\":\n      case \"zz\":\n      case \"zzz\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"zzzz\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Seconds timestamp\n  t: function (date, token, _localize) {\n    const timestamp = Math.trunc(+date / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n\n  // Milliseconds timestamp\n  T: function (date, token, _localize) {\n    return addLeadingZeros(+date, token.length);\n  },\n};\n\nfunction formatTimezoneShort(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = Math.trunc(absOffset / 60);\n  const minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, delimiter) {\n  if (offset % 60 === 0) {\n    const sign = offset > 0 ? \"-\" : \"+\";\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, delimiter);\n}\n\nfunction formatTimezone(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = addLeadingZeros(Math.trunc(absOffset / 60), 2);\n  const minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n","const dateLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"P\":\n      return formatLong.date({ width: \"short\" });\n    case \"PP\":\n      return formatLong.date({ width: \"medium\" });\n    case \"PPP\":\n      return formatLong.date({ width: \"long\" });\n    case \"PPPP\":\n    default:\n      return formatLong.date({ width: \"full\" });\n  }\n};\n\nconst timeLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"p\":\n      return formatLong.time({ width: \"short\" });\n    case \"pp\":\n      return formatLong.time({ width: \"medium\" });\n    case \"ppp\":\n      return formatLong.time({ width: \"long\" });\n    case \"pppp\":\n    default:\n      return formatLong.time({ width: \"full\" });\n  }\n};\n\nconst dateTimeLongFormatter = (pattern, formatLong) => {\n  const matchResult = pattern.match(/(P+)(p+)?/) || [];\n  const datePattern = matchResult[1];\n  const timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  let dateTimeFormat;\n\n  switch (datePattern) {\n    case \"P\":\n      dateTimeFormat = formatLong.dateTime({ width: \"short\" });\n      break;\n    case \"PP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"medium\" });\n      break;\n    case \"PPP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"long\" });\n      break;\n    case \"PPPP\":\n    default:\n      dateTimeFormat = formatLong.dateTime({ width: \"full\" });\n      break;\n  }\n\n  return dateTimeFormat\n    .replace(\"{{date}}\", dateLongFormatter(datePattern, formatLong))\n    .replace(\"{{time}}\", timeLongFormatter(timePattern, formatLong));\n};\n\nexport const longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter,\n};\n","const dayOfYearTokenRE = /^D+$/;\nconst weekYearTokenRE = /^Y+$/;\n\nconst throwTokens = [\"D\", \"DD\", \"YY\", \"YYYY\"];\n\nexport function isProtectedDayOfYearToken(token) {\n  return dayOfYearTokenRE.test(token);\n}\n\nexport function isProtectedWeekYearToken(token) {\n  return weekYearTokenRE.test(token);\n}\n\nexport function warnOrThrowProtectedError(token, format, input) {\n  const _message = message(token, format, input);\n  console.warn(_message);\n  if (throwTokens.includes(token)) throw new RangeError(_message);\n}\n\nfunction message(token, format, input) {\n  const subject = token[0] === \"Y\" ? \"years\" : \"days of the month\";\n  return `Use \\`${token.toLowerCase()}\\` instead of \\`${token}\\` (in \\`${format}\\`) for formatting ${subject} to the input \\`${input}\\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`;\n}\n","import { defaultLocale } from \"./_lib/defaultLocale.js\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { formatters } from \"./_lib/format/formatters.js\";\nimport { longFormatters } from \"./_lib/format/longFormatters.js\";\nimport {\n  isProtectedDayOfYearToken,\n  isProtectedWeekYearToken,\n  warnOrThrowProtectedError,\n} from \"./_lib/protectedTokens.js\";\nimport { isValid } from \"./isValid.js\";\nimport { toDate } from \"./toDate.js\";\n\n// Rexports of internal for libraries to use.\n// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874\nexport { formatters, longFormatters };\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp =\n  /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nconst longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\nexport { format as formatDate };\n\n/**\n * The {@link format} function options.\n */\n\n/**\n * @name format\n * @alias formatDate\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear](https://date-fns.org/docs/getISOWeekYear)\n *    and [getWeekYear](https://date-fns.org/docs/getWeekYear)).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @param date - The original date\n * @param format - The string of tokens\n * @param options - An object with options\n *\n * @returns The formatted date string\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `localize` property\n * @throws `options.locale` must contain `formatLong` property\n * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * const result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\nexport function format(date, formatStr, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const originalDate = toDate(date, options?.in);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n\n  let parts = formatStr\n    .match(longFormattingTokensRegExp)\n    .map((substring) => {\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"p\" || firstCharacter === \"P\") {\n        const longFormatter = longFormatters[firstCharacter];\n        return longFormatter(substring, locale.formatLong);\n      }\n      return substring;\n    })\n    .join(\"\")\n    .match(formattingTokensRegExp)\n    .map((substring) => {\n      // Replace two single quote characters with one single quote character\n      if (substring === \"''\") {\n        return { isToken: false, value: \"'\" };\n      }\n\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"'\") {\n        return { isToken: false, value: cleanEscapedString(substring) };\n      }\n\n      if (formatters[firstCharacter]) {\n        return { isToken: true, value: substring };\n      }\n\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          \"Format string contains an unescaped latin alphabet character `\" +\n            firstCharacter +\n            \"`\",\n        );\n      }\n\n      return { isToken: false, value: substring };\n    });\n\n  // invoke localize preprocessor (only for french locales at the moment)\n  if (locale.localize.preprocessor) {\n    parts = locale.localize.preprocessor(originalDate, parts);\n  }\n\n  const formatterOptions = {\n    firstWeekContainsDate,\n    weekStartsOn,\n    locale,\n  };\n\n  return parts\n    .map((part) => {\n      if (!part.isToken) return part.value;\n\n      const token = part.value;\n\n      if (\n        (!options?.useAdditionalWeekYearTokens &&\n          isProtectedWeekYearToken(token)) ||\n        (!options?.useAdditionalDayOfYearTokens &&\n          isProtectedDayOfYearToken(token))\n      ) {\n        warnOrThrowProtectedError(token, formatStr, String(date));\n      }\n\n      const formatter = formatters[token[0]];\n      return formatter(originalDate, token, locale.localize, formatterOptions);\n    })\n    .join(\"\");\n}\n\nfunction cleanEscapedString(input) {\n  const matched = input.match(escapedStringRegExp);\n\n  if (!matched) {\n    return input;\n  }\n\n  return matched[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default format;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getDaysInMonth} function options.\n */\n\n/**\n * @name getDaysInMonth\n * @category Month Helpers\n * @summary Get the number of days in a month of the given date.\n *\n * @description\n * Get the number of days in a month of the given date, considering the context if provided.\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The number of days in a month\n *\n * @example\n * // How many days are in February 2000?\n * const result = getDaysInMonth(new Date(2000, 1))\n * //=> 29\n */\nexport function getDaysInMonth(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n  const monthIndex = _date.getMonth();\n  const lastDayOfMonth = constructFrom(_date, 0);\n  lastDayOfMonth.setFullYear(year, monthIndex + 1, 0);\n  lastDayOfMonth.setHours(0, 0, 0, 0);\n  return lastDayOfMonth.getDate();\n}\n\n// Fallback for modularized imports:\nexport default getDaysInMonth;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getMonth} function options.\n */\n\n/**\n * @name getMonth\n * @category Month Helpers\n * @summary Get the month of the given date.\n *\n * @description\n * Get the month of the given date.\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The month index (0-11)\n *\n * @example\n * // Which month is 29 February 2012?\n * const result = getMonth(new Date(2012, 1, 29))\n * //=> 1\n */\nexport function getMonth(date, options) {\n  return toDate(date, options?.in).getMonth();\n}\n\n// Fallback for modularized imports:\nexport default getMonth;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getYear} function options.\n */\n\n/**\n * @name getYear\n * @category Year Helpers\n * @summary Get the year of the given date.\n *\n * @description\n * Get the year of the given date.\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The year\n *\n * @example\n * // Which year is 2 July 2014?\n * const result = getYear(new Date(2014, 6, 2))\n * //=> 2014\n */\nexport function getYear(date, options) {\n  return toDate(date, options?.in).getFullYear();\n}\n\n// Fallback for modularized imports:\nexport default getYear;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * @name isAfter\n * @category Common Helpers\n * @summary Is the first date after the second one?\n *\n * @description\n * Is the first date after the second one?\n *\n * @param date - The date that should be after the other one to return true\n * @param dateToCompare - The date to compare with\n *\n * @returns The first date is after the second date\n *\n * @example\n * // Is 10 July 1989 after 11 February 1987?\n * const result = isAfter(new Date(1989, 6, 10), new Date(1987, 1, 11))\n * //=> true\n */\nexport function isAfter(date, dateToCompare) {\n  return +toDate(date) > +toDate(dateToCompare);\n}\n\n// Fallback for modularized imports:\nexport default isAfter;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * @name isBefore\n * @category Common Helpers\n * @summary Is the first date before the second one?\n *\n * @description\n * Is the first date before the second one?\n *\n * @param date - The date that should be before the other one to return true\n * @param dateToCompare - The date to compare with\n *\n * @returns The first date is before the second date\n *\n * @example\n * // Is 10 July 1989 before 11 February 1987?\n * const result = isBefore(new Date(1989, 6, 10), new Date(1987, 1, 11))\n * //=> false\n */\nexport function isBefore(date, dateToCompare) {\n  return +toDate(date) < +toDate(dateToCompare);\n}\n\n// Fallback for modularized imports:\nexport default isBefore;\n","import { normalizeDates } from \"./_lib/normalizeDates.js\";\n\n/**\n * The {@link isSameMonth} function options.\n */\n\n/**\n * @name isSameMonth\n * @category Month Helpers\n * @summary Are the given dates in the same month (and year)?\n *\n * @description\n * Are the given dates in the same month (and year)?\n *\n * @param laterDate - The first date to check\n * @param earlierDate - The second date to check\n * @param options - An object with options\n *\n * @returns The dates are in the same month (and year)\n *\n * @example\n * // Are 2 September 2014 and 25 September 2014 in the same month?\n * const result = isSameMonth(new Date(2014, 8, 2), new Date(2014, 8, 25))\n * //=> true\n *\n * @example\n * // Are 2 September 2014 and 25 September 2015 in the same month?\n * const result = isSameMonth(new Date(2014, 8, 2), new Date(2015, 8, 25))\n * //=> false\n */\nexport function isSameMonth(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n  return (\n    laterDate_.getFullYear() === earlierDate_.getFullYear() &&\n    laterDate_.getMonth() === earlierDate_.getMonth()\n  );\n}\n\n// Fallback for modularized imports:\nexport default isSameMonth;\n","import { normalizeDates } from \"./_lib/normalizeDates.js\";\n\n/**\n * The {@link isSameYear} function options.\n */\n\n/**\n * @name isSameYear\n * @category Year Helpers\n * @summary Are the given dates in the same year?\n *\n * @description\n * Are the given dates in the same year?\n *\n * @param laterDate - The first date to check\n * @param earlierDate - The second date to check\n * @param options - An object with options\n *\n * @returns The dates are in the same year\n *\n * @example\n * // Are 2 September 2014 and 25 September 2014 in the same year?\n * const result = isSameYear(new Date(2014, 8, 2), new Date(2014, 8, 25))\n * //=> true\n */\nexport function isSameYear(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n  return laterDate_.getFullYear() === earlierDate_.getFullYear();\n}\n\n// Fallback for modularized imports:\nexport default isSameYear;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { getDaysInMonth } from \"./getDaysInMonth.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link setMonth} function options.\n */\n\n/**\n * @name setMonth\n * @category Month Helpers\n * @summary Set the month to the given date.\n *\n * @description\n * Set the month to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param month - The month index to set (0-11)\n * @param options - The options\n *\n * @returns The new date with the month set\n *\n * @example\n * // Set February to 1 September 2014:\n * const result = setMonth(new Date(2014, 8, 1), 1)\n * //=> Sat Feb 01 2014 00:00:00\n */\nexport function setMonth(date, month, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n  const day = _date.getDate();\n\n  const midMonth = constructFrom(options?.in || date, 0);\n  midMonth.setFullYear(year, month, 15);\n  midMonth.setHours(0, 0, 0, 0);\n  const daysInMonth = getDaysInMonth(midMonth);\n\n  // Set the earlier date, allows to wrap Jan 31 to Feb 28\n  _date.setMonth(month, Math.min(day, daysInMonth));\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default setMonth;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link setYear} function options.\n */\n\n/**\n * @name setYear\n * @category Year Helpers\n * @summary Set the year to the given date.\n *\n * @description\n * Set the year to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The date to be changed\n * @param year - The year of the new date\n * @param options - An object with options.\n *\n * @returns The new date with the year set\n *\n * @example\n * // Set year 2013 to 1 September 2014:\n * const result = setYear(new Date(2014, 8, 1), 2013)\n * //=> Sun Sep 01 2013 00:00:00\n */\nexport function setYear(date, year, options) {\n  const date_ = toDate(date, options?.in);\n\n  // Check if date is Invalid Date because Date.prototype.setFullYear ignores the value of Invalid Date\n  if (isNaN(+date_)) return constructFrom(options?.in || date, NaN);\n\n  date_.setFullYear(year);\n  return date_;\n}\n\n// Fallback for modularized imports:\nexport default setYear;\n","const FIVE_WEEKS = 5;\nconst FOUR_WEEKS = 4;\n/**\n * Returns the number of weeks to display in the broadcast calendar for a given\n * month.\n *\n * The broadcast calendar may have either 4 or 5 weeks in a month, depending on\n * the start and end dates of the broadcast weeks.\n *\n * @since 9.4.0\n * @param month The month for which to calculate the number of weeks.\n * @param dateLib The date library to use for date manipulation.\n * @returns The number of weeks in the broadcast calendar (4 or 5).\n */\nexport function getBroadcastWeeksInMonth(month, dateLib) {\n    // Get the first day of the month\n    const firstDayOfMonth = dateLib.startOfMonth(month);\n    // Get the day of the week for the first day of the month (1-7, where 1 is Monday)\n    const firstDayOfWeek = firstDayOfMonth.getDay() > 0 ? firstDayOfMonth.getDay() : 7;\n    const broadcastStartDate = dateLib.addDays(month, -firstDayOfWeek + 1);\n    const lastDateOfLastWeek = dateLib.addDays(broadcastStartDate, FIVE_WEEKS * 7 - 1);\n    const numberOfWeeks = dateLib.getMonth(month) === dateLib.getMonth(lastDateOfLastWeek)\n        ? FIVE_WEEKS\n        : FOUR_WEEKS;\n    return numberOfWeeks;\n}\n","/**\n * Returns the start date of the week in the broadcast calendar.\n *\n * The broadcast week starts on Monday. If the first day of the month is not a\n * Monday, this function calculates the previous Monday as the start of the\n * broadcast week.\n *\n * @since 9.4.0\n * @param date The date for which to calculate the start of the broadcast week.\n * @param dateLib The date library to use for date manipulation.\n * @returns The start date of the broadcast week.\n */\nexport function startOfBroadcastWeek(date, dateLib) {\n    const firstOfMonth = dateLib.startOfMonth(date);\n    const dayOfWeek = firstOfMonth.getDay();\n    if (dayOfWeek === 1) {\n        return firstOfMonth;\n    }\n    else if (dayOfWeek === 0) {\n        return dateLib.addDays(firstOfMonth, -1 * 6);\n    }\n    else {\n        return dateLib.addDays(firstOfMonth, -1 * (dayOfWeek - 1));\n    }\n}\n","import { getBroadcastWeeksInMonth } from \"./getBroadcastWeeksInMonth.js\";\nimport { startOfBroadcastWeek } from \"./startOfBroadcastWeek.js\";\n/**\n * Returns the end date of the week in the broadcast calendar.\n *\n * The broadcast week ends on the last day of the last broadcast week for the\n * given date.\n *\n * @since 9.4.0\n * @param date The date for which to calculate the end of the broadcast week.\n * @param dateLib The date library to use for date manipulation.\n * @returns The end date of the broadcast week.\n */\nexport function endOfBroadcastWeek(date, dateLib) {\n    const startDate = startOfBroadcastWeek(date, dateLib);\n    const numberOfWeeks = getBroadcastWeeksInMonth(date, dateLib);\n    const endDate = dateLib.addDays(startDate, numberOfWeeks * 7 - 1);\n    return endDate;\n}\n","import { TZDate } from \"@date-fns/tz\";\nimport { addDays, addMonths, addWeeks, addYears, differenceInCalendarDays, differenceInCalendarMonths, eachMonthOfInterval, endOfISOWeek, endOfMonth, endOfWeek, endOfYear, format, getISOWeek, getMonth, getWeek, getYear, isAfter, isBefore, isDate, isSameDay, isSameMonth, isSameYear, max, min, setMonth, setYear, startOfDay, startOfISOWeek, startOfMonth, startOfWeek, startOfYear, } from \"date-fns\";\nimport { enUS } from \"date-fns/locale/en-US\";\nimport { endOfBroadcastWeek } from \"../helpers/endOfBroadcastWeek.js\";\nimport { startOfBroadcastWeek } from \"../helpers/startOfBroadcastWeek.js\";\n/**\n * A wrapper class around [date-fns](http://date-fns.org) that provides utility\n * methods for date manipulation and formatting.\n *\n * @since 9.2.0\n * @example\n *   const dateLib = new DateLib({ locale: es });\n *   const newDate = dateLib.addDays(new Date(), 5);\n */\nexport class DateLib {\n    /**\n     * Creates an instance of `DateLib`.\n     *\n     * @param options Configuration options for the date library.\n     * @param overrides Custom overrides for the date library functions.\n     */\n    constructor(options, overrides) {\n        /**\n         * Reference to the built-in Date constructor.\n         *\n         * @deprecated Use `newDate()` or `today()`.\n         */\n        this.Date = Date;\n        /**\n         * Creates a new `Date` object representing today's date.\n         *\n         * @since 9.5.0\n         * @returns A `Date` object for today's date.\n         */\n        this.today = () => {\n            if (this.overrides?.today) {\n                return this.overrides.today();\n            }\n            if (this.options.timeZone) {\n                return TZDate.tz(this.options.timeZone);\n            }\n            return new this.Date();\n        };\n        /**\n         * Creates a new `Date` object with the specified year, month, and day.\n         *\n         * @since 9.5.0\n         * @param year The year.\n         * @param monthIndex The month (0-11).\n         * @param date The day of the month.\n         * @returns A new `Date` object.\n         */\n        this.newDate = (year, monthIndex, date) => {\n            if (this.overrides?.newDate) {\n                return this.overrides.newDate(year, monthIndex, date);\n            }\n            if (this.options.timeZone) {\n                return new TZDate(year, monthIndex, date, this.options.timeZone);\n            }\n            return new Date(year, monthIndex, date);\n        };\n        /**\n         * Adds the specified number of days to the given date.\n         *\n         * @param date The date to add days to.\n         * @param amount The number of days to add.\n         * @returns The new date with the days added.\n         */\n        this.addDays = (date, amount) => {\n            return this.overrides?.addDays\n                ? this.overrides.addDays(date, amount)\n                : addDays(date, amount);\n        };\n        /**\n         * Adds the specified number of months to the given date.\n         *\n         * @param date The date to add months to.\n         * @param amount The number of months to add.\n         * @returns The new date with the months added.\n         */\n        this.addMonths = (date, amount) => {\n            return this.overrides?.addMonths\n                ? this.overrides.addMonths(date, amount)\n                : addMonths(date, amount);\n        };\n        /**\n         * Adds the specified number of weeks to the given date.\n         *\n         * @param date The date to add weeks to.\n         * @param amount The number of weeks to add.\n         * @returns The new date with the weeks added.\n         */\n        this.addWeeks = (date, amount) => {\n            return this.overrides?.addWeeks\n                ? this.overrides.addWeeks(date, amount)\n                : addWeeks(date, amount);\n        };\n        /**\n         * Adds the specified number of years to the given date.\n         *\n         * @param date The date to add years to.\n         * @param amount The number of years to add.\n         * @returns The new date with the years added.\n         */\n        this.addYears = (date, amount) => {\n            return this.overrides?.addYears\n                ? this.overrides.addYears(date, amount)\n                : addYears(date, amount);\n        };\n        /**\n         * Returns the number of calendar days between the given dates.\n         *\n         * @param dateLeft The later date.\n         * @param dateRight The earlier date.\n         * @returns The number of calendar days between the dates.\n         */\n        this.differenceInCalendarDays = (dateLeft, dateRight) => {\n            return this.overrides?.differenceInCalendarDays\n                ? this.overrides.differenceInCalendarDays(dateLeft, dateRight)\n                : differenceInCalendarDays(dateLeft, dateRight);\n        };\n        /**\n         * Returns the number of calendar months between the given dates.\n         *\n         * @param dateLeft The later date.\n         * @param dateRight The earlier date.\n         * @returns The number of calendar months between the dates.\n         */\n        this.differenceInCalendarMonths = (dateLeft, dateRight) => {\n            return this.overrides?.differenceInCalendarMonths\n                ? this.overrides.differenceInCalendarMonths(dateLeft, dateRight)\n                : differenceInCalendarMonths(dateLeft, dateRight);\n        };\n        /**\n         * Returns the months between the given dates.\n         *\n         * @param interval The interval to get the months for.\n         */\n        this.eachMonthOfInterval = (interval) => {\n            return this.overrides?.eachMonthOfInterval\n                ? this.overrides.eachMonthOfInterval(interval)\n                : eachMonthOfInterval(interval);\n        };\n        /**\n         * Returns the end of the broadcast week for the given date.\n         *\n         * @param date The original date.\n         * @returns The end of the broadcast week.\n         */\n        this.endOfBroadcastWeek = (date) => {\n            return this.overrides?.endOfBroadcastWeek\n                ? this.overrides.endOfBroadcastWeek(date)\n                : endOfBroadcastWeek(date, this);\n        };\n        /**\n         * Returns the end of the ISO week for the given date.\n         *\n         * @param date The original date.\n         * @returns The end of the ISO week.\n         */\n        this.endOfISOWeek = (date) => {\n            return this.overrides?.endOfISOWeek\n                ? this.overrides.endOfISOWeek(date)\n                : endOfISOWeek(date);\n        };\n        /**\n         * Returns the end of the month for the given date.\n         *\n         * @param date The original date.\n         * @returns The end of the month.\n         */\n        this.endOfMonth = (date) => {\n            return this.overrides?.endOfMonth\n                ? this.overrides.endOfMonth(date)\n                : endOfMonth(date);\n        };\n        /**\n         * Returns the end of the week for the given date.\n         *\n         * @param date The original date.\n         * @returns The end of the week.\n         */\n        this.endOfWeek = (date, options) => {\n            return this.overrides?.endOfWeek\n                ? this.overrides.endOfWeek(date, options)\n                : endOfWeek(date, this.options);\n        };\n        /**\n         * Returns the end of the year for the given date.\n         *\n         * @param date The original date.\n         * @returns The end of the year.\n         */\n        this.endOfYear = (date) => {\n            return this.overrides?.endOfYear\n                ? this.overrides.endOfYear(date)\n                : endOfYear(date);\n        };\n        /**\n         * Formats the given date using the specified format string.\n         *\n         * @param date The date to format.\n         * @param formatStr The format string.\n         * @returns The formatted date string.\n         */\n        this.format = (date, formatStr, _options) => {\n            const formatted = this.overrides?.format\n                ? this.overrides.format(date, formatStr, this.options)\n                : format(date, formatStr, this.options);\n            if (this.options.numerals && this.options.numerals !== \"latn\") {\n                return this.replaceDigits(formatted);\n            }\n            return formatted;\n        };\n        /**\n         * Returns the ISO week number for the given date.\n         *\n         * @param date The date to get the ISO week number for.\n         * @returns The ISO week number.\n         */\n        this.getISOWeek = (date) => {\n            return this.overrides?.getISOWeek\n                ? this.overrides.getISOWeek(date)\n                : getISOWeek(date);\n        };\n        /**\n         * Returns the month of the given date.\n         *\n         * @param date The date to get the month for.\n         * @returns The month.\n         */\n        this.getMonth = (date, _options) => {\n            return this.overrides?.getMonth\n                ? this.overrides.getMonth(date, this.options)\n                : getMonth(date, this.options);\n        };\n        /**\n         * Returns the year of the given date.\n         *\n         * @param date The date to get the year for.\n         * @returns The year.\n         */\n        this.getYear = (date, _options) => {\n            return this.overrides?.getYear\n                ? this.overrides.getYear(date, this.options)\n                : getYear(date, this.options);\n        };\n        /**\n         * Returns the local week number for the given date.\n         *\n         * @param date The date to get the week number for.\n         * @returns The week number.\n         */\n        this.getWeek = (date, _options) => {\n            return this.overrides?.getWeek\n                ? this.overrides.getWeek(date, this.options)\n                : getWeek(date, this.options);\n        };\n        /**\n         * Checks if the first date is after the second date.\n         *\n         * @param date The date to compare.\n         * @param dateToCompare The date to compare with.\n         * @returns True if the first date is after the second date.\n         */\n        this.isAfter = (date, dateToCompare) => {\n            return this.overrides?.isAfter\n                ? this.overrides.isAfter(date, dateToCompare)\n                : isAfter(date, dateToCompare);\n        };\n        /**\n         * Checks if the first date is before the second date.\n         *\n         * @param date The date to compare.\n         * @param dateToCompare The date to compare with.\n         * @returns True if the first date is before the second date.\n         */\n        this.isBefore = (date, dateToCompare) => {\n            return this.overrides?.isBefore\n                ? this.overrides.isBefore(date, dateToCompare)\n                : isBefore(date, dateToCompare);\n        };\n        /**\n         * Checks if the given value is a Date object.\n         *\n         * @param value The value to check.\n         * @returns True if the value is a Date object.\n         */\n        this.isDate = (value) => {\n            return this.overrides?.isDate\n                ? this.overrides.isDate(value)\n                : isDate(value);\n        };\n        /**\n         * Checks if the given dates are on the same day.\n         *\n         * @param dateLeft The first date to compare.\n         * @param dateRight The second date to compare.\n         * @returns True if the dates are on the same day.\n         */\n        this.isSameDay = (dateLeft, dateRight) => {\n            return this.overrides?.isSameDay\n                ? this.overrides.isSameDay(dateLeft, dateRight)\n                : isSameDay(dateLeft, dateRight);\n        };\n        /**\n         * Checks if the given dates are in the same month.\n         *\n         * @param dateLeft The first date to compare.\n         * @param dateRight The second date to compare.\n         * @returns True if the dates are in the same month.\n         */\n        this.isSameMonth = (dateLeft, dateRight) => {\n            return this.overrides?.isSameMonth\n                ? this.overrides.isSameMonth(dateLeft, dateRight)\n                : isSameMonth(dateLeft, dateRight);\n        };\n        /**\n         * Checks if the given dates are in the same year.\n         *\n         * @param dateLeft The first date to compare.\n         * @param dateRight The second date to compare.\n         * @returns True if the dates are in the same year.\n         */\n        this.isSameYear = (dateLeft, dateRight) => {\n            return this.overrides?.isSameYear\n                ? this.overrides.isSameYear(dateLeft, dateRight)\n                : isSameYear(dateLeft, dateRight);\n        };\n        /**\n         * Returns the latest date in the given array of dates.\n         *\n         * @param dates The array of dates to compare.\n         * @returns The latest date.\n         */\n        this.max = (dates) => {\n            return this.overrides?.max ? this.overrides.max(dates) : max(dates);\n        };\n        /**\n         * Returns the earliest date in the given array of dates.\n         *\n         * @param dates The array of dates to compare.\n         * @returns The earliest date.\n         */\n        this.min = (dates) => {\n            return this.overrides?.min ? this.overrides.min(dates) : min(dates);\n        };\n        /**\n         * Sets the month of the given date.\n         *\n         * @param date The date to set the month on.\n         * @param month The month to set (0-11).\n         * @returns The new date with the month set.\n         */\n        this.setMonth = (date, month) => {\n            return this.overrides?.setMonth\n                ? this.overrides.setMonth(date, month)\n                : setMonth(date, month);\n        };\n        /**\n         * Sets the year of the given date.\n         *\n         * @param date The date to set the year on.\n         * @param year The year to set.\n         * @returns The new date with the year set.\n         */\n        this.setYear = (date, year) => {\n            return this.overrides?.setYear\n                ? this.overrides.setYear(date, year)\n                : setYear(date, year);\n        };\n        /**\n         * Returns the start of the broadcast week for the given date.\n         *\n         * @param date The original date.\n         * @returns The start of the broadcast week.\n         */\n        this.startOfBroadcastWeek = (date, _dateLib) => {\n            return this.overrides?.startOfBroadcastWeek\n                ? this.overrides.startOfBroadcastWeek(date, this)\n                : startOfBroadcastWeek(date, this);\n        };\n        /**\n         * Returns the start of the day for the given date.\n         *\n         * @param date The original date.\n         * @returns The start of the day.\n         */\n        this.startOfDay = (date) => {\n            return this.overrides?.startOfDay\n                ? this.overrides.startOfDay(date)\n                : startOfDay(date);\n        };\n        /**\n         * Returns the start of the ISO week for the given date.\n         *\n         * @param date The original date.\n         * @returns The start of the ISO week.\n         */\n        this.startOfISOWeek = (date) => {\n            return this.overrides?.startOfISOWeek\n                ? this.overrides.startOfISOWeek(date)\n                : startOfISOWeek(date);\n        };\n        /**\n         * Returns the start of the month for the given date.\n         *\n         * @param date The original date.\n         * @returns The start of the month.\n         */\n        this.startOfMonth = (date) => {\n            return this.overrides?.startOfMonth\n                ? this.overrides.startOfMonth(date)\n                : startOfMonth(date);\n        };\n        /**\n         * Returns the start of the week for the given date.\n         *\n         * @param date The original date.\n         * @returns The start of the week.\n         */\n        this.startOfWeek = (date, _options) => {\n            return this.overrides?.startOfWeek\n                ? this.overrides.startOfWeek(date, this.options)\n                : startOfWeek(date, this.options);\n        };\n        /**\n         * Returns the start of the year for the given date.\n         *\n         * @param date The original date.\n         * @returns The start of the year.\n         */\n        this.startOfYear = (date) => {\n            return this.overrides?.startOfYear\n                ? this.overrides.startOfYear(date)\n                : startOfYear(date);\n        };\n        this.options = { locale: enUS, ...options };\n        this.overrides = overrides;\n    }\n    /**\n     * Generates a mapping of Arabic digits (0-9) to the target numbering system\n     * digits.\n     *\n     * @since 9.5.0\n     * @returns A record mapping Arabic digits to the target numerals.\n     */\n    getDigitMap() {\n        const { numerals = \"latn\" } = this.options;\n        // Use Intl.NumberFormat to create a formatter with the specified numbering system\n        const formatter = new Intl.NumberFormat(\"en-US\", {\n            numberingSystem: numerals,\n        });\n        // Map Arabic digits (0-9) to the target numerals\n        const digitMap = {};\n        for (let i = 0; i < 10; i++) {\n            digitMap[i.toString()] = formatter.format(i);\n        }\n        return digitMap;\n    }\n    /**\n     * Replaces Arabic digits in a string with the target numbering system digits.\n     *\n     * @since 9.5.0\n     * @param input The string containing Arabic digits.\n     * @returns The string with digits replaced.\n     */\n    replaceDigits(input) {\n        const digitMap = this.getDigitMap();\n        return input.replace(/\\d/g, (digit) => digitMap[digit] || digit);\n    }\n    /**\n     * Formats a number using the configured numbering system.\n     *\n     * @since 9.5.0\n     * @param value The number to format.\n     * @returns The formatted number as a string.\n     */\n    formatNumber(value) {\n        return this.replaceDigits(value.toString());\n    }\n    /**\n     * Returns the preferred ordering for month and year labels for the current\n     * locale.\n     */\n    getMonthYearOrder() {\n        const code = this.options.locale?.code;\n        if (!code) {\n            return \"month-first\";\n        }\n        return DateLib.yearFirstLocales.has(code) ? \"year-first\" : \"month-first\";\n    }\n    /**\n     * Formats the month/year pair respecting locale conventions.\n     *\n     * @since 9.11.0\n     */\n    formatMonthYear(date) {\n        const { locale, timeZone, numerals } = this.options;\n        const localeCode = locale?.code;\n        if (localeCode && DateLib.yearFirstLocales.has(localeCode)) {\n            try {\n                const intl = new Intl.DateTimeFormat(localeCode, {\n                    month: \"long\",\n                    year: \"numeric\",\n                    timeZone,\n                    numberingSystem: numerals,\n                });\n                const formatted = intl.format(date);\n                return formatted;\n            }\n            catch {\n                // Fallback to date-fns formatting below.\n            }\n        }\n        const pattern = this.getMonthYearOrder() === \"year-first\" ? \"y LLLL\" : \"LLLL y\";\n        return this.format(date, pattern);\n    }\n}\nDateLib.yearFirstLocales = new Set([\n    \"eu\",\n    \"hu\",\n    \"ja\",\n    \"ja-Hira\",\n    \"ja-JP\",\n    \"ko\",\n    \"ko-KR\",\n    \"lt\",\n    \"lt-LT\",\n    \"lv\",\n    \"lv-LV\",\n    \"mn\",\n    \"mn-MN\",\n    \"zh\",\n    \"zh-CN\",\n    \"zh-HK\",\n    \"zh-TW\",\n]);\n/** The default locale (English). */\nexport { enUS as defaultLocale } from \"date-fns/locale/en-US\";\n/**\n * The default date library with English locale.\n *\n * @since 9.2.0\n */\nexport const defaultDateLib = new DateLib();\n/**\n * @ignore\n * @deprecated Use `defaultDateLib`.\n */\nexport const dateLib = defaultDateLib;\n","import { defaultDateLib } from \"./DateLib.js\";\n/**\n * Represents a day displayed in the calendar.\n *\n * In DayPicker, a `CalendarDay` is a wrapper around a `Date` object that\n * provides additional information about the day, such as whether it belongs to\n * the displayed month.\n */\nexport class CalendarDay {\n    constructor(date, displayMonth, dateLib = defaultDateLib) {\n        this.date = date;\n        this.displayMonth = displayMonth;\n        this.outside = Boolean(displayMonth && !dateLib.isSameMonth(date, displayMonth));\n        this.dateLib = dateLib;\n    }\n    /**\n     * Checks if this day is equal to another `CalendarDay`, considering both the\n     * date and the displayed month.\n     *\n     * @param day The `CalendarDay` to compare with.\n     * @returns `true` if the days are equal, otherwise `false`.\n     */\n    isEqualTo(day) {\n        return (this.dateLib.isSameDay(day.date, this.date) &&\n            this.dateLib.isSameMonth(day.displayMonth, this.displayMonth));\n    }\n}\n","/**\n * Represents a month in a calendar year.\n *\n * A `CalendarMonth` contains the weeks within the month and the date of the\n * month.\n */\nexport class CalendarMonth {\n    constructor(month, weeks) {\n        this.date = month;\n        this.weeks = weeks;\n    }\n}\n","/**\n * Represents a week in a calendar month.\n *\n * A `CalendarWeek` contains the days within the week and the week number.\n */\nexport class CalendarWeek {\n    constructor(weekNumber, days) {\n        this.days = days;\n        this.weekNumber = weekNumber;\n    }\n}\n","import React from \"react\";\n/**\n * Render the button elements in the calendar.\n *\n * @private\n * @deprecated Use `PreviousMonthButton` or `@link NextMonthButton` instead.\n */\nexport function Button(props) {\n    return React.createElement(\"button\", { ...props });\n}\n","import React from \"react\";\n/**\n * Render the label in the month caption.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function CaptionLabel(props) {\n    return React.createElement(\"span\", { ...props });\n}\n","import React from \"react\";\n/**\n * Render the chevron icon used in the navigation buttons and dropdowns.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function Chevron(props) {\n    const { size = 24, orientation = \"left\", className } = props;\n    return (\n    // biome-ignore lint/a11y/noSvgWithoutTitle: handled by the parent component\n    React.createElement(\"svg\", { className: className, width: size, height: size, viewBox: \"0 0 24 24\" },\n        orientation === \"up\" && (React.createElement(\"polygon\", { points: \"6.77 17 12.5 11.43 18.24 17 20 15.28 12.5 8 5 15.28\" })),\n        orientation === \"down\" && (React.createElement(\"polygon\", { points: \"6.77 8 12.5 13.57 18.24 8 20 9.72 12.5 17 5 9.72\" })),\n        orientation === \"left\" && (React.createElement(\"polygon\", { points: \"16 18.112 9.81111111 12 16 5.87733333 14.0888889 4 6 12 14.0888889 20\" })),\n        orientation === \"right\" && (React.createElement(\"polygon\", { points: \"8 18.112 14.18888889 12 8 5.87733333 9.91111111 4 18 12 9.91111111 20\" }))));\n}\n","import React from \"react\";\n/**\n * Render a grid cell for a specific day in the calendar.\n *\n * Handles interaction and focus for the day. If you only need to change the\n * content of the day cell, consider swapping the `DayButton` component\n * instead.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function Day(props) {\n    const { day, modifiers, ...tdProps } = props;\n    return React.createElement(\"td\", { ...tdProps });\n}\n","import React from \"react\";\n/**\n * Render a button for a specific day in the calendar.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function DayButton(props) {\n    const { day, modifiers, ...buttonProps } = props;\n    const ref = React.useRef(null);\n    React.useEffect(() => {\n        if (modifiers.focused)\n            ref.current?.focus();\n    }, [modifiers.focused]);\n    return React.createElement(\"button\", { ref: ref, ...buttonProps });\n}\n","/**\n * Enum representing the UI elements composing DayPicker. These elements are\n * mapped to {@link CustomComponents}, {@link ClassNames}, and {@link Styles}.\n *\n * Some elements are extended by flags and modifiers.\n */\nexport var UI;\n(function (UI) {\n    /** The root component displaying the months and the navigation bar. */\n    UI[\"Root\"] = \"root\";\n    /** The Chevron SVG element used by navigation buttons and dropdowns. */\n    UI[\"Chevron\"] = \"chevron\";\n    /**\n     * The grid cell with the day's date. Extended by {@link DayFlag} and\n     * {@link SelectionState}.\n     */\n    UI[\"Day\"] = \"day\";\n    /** The button containing the formatted day's date, inside the grid cell. */\n    UI[\"DayButton\"] = \"day_button\";\n    /** The caption label of the month (when not showing the dropdown navigation). */\n    UI[\"CaptionLabel\"] = \"caption_label\";\n    /** The container of the dropdown navigation (when enabled). */\n    UI[\"Dropdowns\"] = \"dropdowns\";\n    /** The dropdown element to select for years and months. */\n    UI[\"Dropdown\"] = \"dropdown\";\n    /** The container element of the dropdown. */\n    UI[\"DropdownRoot\"] = \"dropdown_root\";\n    /** The root element of the footer. */\n    UI[\"Footer\"] = \"footer\";\n    /** The month grid. */\n    UI[\"MonthGrid\"] = \"month_grid\";\n    /** Contains the dropdown navigation or the caption label. */\n    UI[\"MonthCaption\"] = \"month_caption\";\n    /** The dropdown with the months. */\n    UI[\"MonthsDropdown\"] = \"months_dropdown\";\n    /** Wrapper of the month grid. */\n    UI[\"Month\"] = \"month\";\n    /** The container of the displayed months. */\n    UI[\"Months\"] = \"months\";\n    /** The navigation bar with the previous and next buttons. */\n    UI[\"Nav\"] = \"nav\";\n    /**\n     * The next month button in the navigation. *\n     *\n     * @since 9.1.0\n     */\n    UI[\"NextMonthButton\"] = \"button_next\";\n    /**\n     * The previous month button in the navigation.\n     *\n     * @since 9.1.0\n     */\n    UI[\"PreviousMonthButton\"] = \"button_previous\";\n    /** The row containing the week. */\n    UI[\"Week\"] = \"week\";\n    /** The group of row weeks in a month (`tbody`). */\n    UI[\"Weeks\"] = \"weeks\";\n    /** The column header with the weekday. */\n    UI[\"Weekday\"] = \"weekday\";\n    /** The row grouping the weekdays in the column headers. */\n    UI[\"Weekdays\"] = \"weekdays\";\n    /** The cell containing the week number. */\n    UI[\"WeekNumber\"] = \"week_number\";\n    /** The cell header of the week numbers column. */\n    UI[\"WeekNumberHeader\"] = \"week_number_header\";\n    /** The dropdown with the years. */\n    UI[\"YearsDropdown\"] = \"years_dropdown\";\n})(UI || (UI = {}));\n/** Enum representing flags for the {@link UI.Day} element. */\nexport var DayFlag;\n(function (DayFlag) {\n    /** The day is disabled. */\n    DayFlag[\"disabled\"] = \"disabled\";\n    /** The day is hidden. */\n    DayFlag[\"hidden\"] = \"hidden\";\n    /** The day is outside the current month. */\n    DayFlag[\"outside\"] = \"outside\";\n    /** The day is focused. */\n    DayFlag[\"focused\"] = \"focused\";\n    /** The day is today. */\n    DayFlag[\"today\"] = \"today\";\n})(DayFlag || (DayFlag = {}));\n/**\n * Enum representing selection states that can be applied to the {@link UI.Day}\n * element in selection mode.\n */\nexport var SelectionState;\n(function (SelectionState) {\n    /** The day is at the end of a selected range. */\n    SelectionState[\"range_end\"] = \"range_end\";\n    /** The day is at the middle of a selected range. */\n    SelectionState[\"range_middle\"] = \"range_middle\";\n    /** The day is at the start of a selected range. */\n    SelectionState[\"range_start\"] = \"range_start\";\n    /** The day is selected. */\n    SelectionState[\"selected\"] = \"selected\";\n})(SelectionState || (SelectionState = {}));\n/**\n * Enum representing different animation states for transitioning between\n * months.\n */\nexport var Animation;\n(function (Animation) {\n    /** The entering weeks when they appear before the exiting month. */\n    Animation[\"weeks_before_enter\"] = \"weeks_before_enter\";\n    /** The exiting weeks when they disappear before the entering month. */\n    Animation[\"weeks_before_exit\"] = \"weeks_before_exit\";\n    /** The entering weeks when they appear after the exiting month. */\n    Animation[\"weeks_after_enter\"] = \"weeks_after_enter\";\n    /** The exiting weeks when they disappear after the entering month. */\n    Animation[\"weeks_after_exit\"] = \"weeks_after_exit\";\n    /** The entering caption when it appears after the exiting month. */\n    Animation[\"caption_after_enter\"] = \"caption_after_enter\";\n    /** The exiting caption when it disappears after the entering month. */\n    Animation[\"caption_after_exit\"] = \"caption_after_exit\";\n    /** The entering caption when it appears before the exiting month. */\n    Animation[\"caption_before_enter\"] = \"caption_before_enter\";\n    /** The exiting caption when it disappears before the entering month. */\n    Animation[\"caption_before_exit\"] = \"caption_before_exit\";\n})(Animation || (Animation = {}));\n","import React from \"react\";\nimport { UI } from \"../UI.js\";\n/**\n * Render a dropdown component for navigation in the calendar.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function Dropdown(props) {\n    const { options, className, components, classNames, ...selectProps } = props;\n    const cssClassSelect = [classNames[UI.Dropdown], className].join(\" \");\n    const selectedOption = options?.find(({ value }) => value === selectProps.value);\n    return (React.createElement(\"span\", { \"data-disabled\": selectProps.disabled, className: classNames[UI.DropdownRoot] },\n        React.createElement(components.Select, { className: cssClassSelect, ...selectProps }, options?.map(({ value, label, disabled }) => (React.createElement(components.Option, { key: value, value: value, disabled: disabled }, label)))),\n        React.createElement(\"span\", { className: classNames[UI.CaptionLabel], \"aria-hidden\": true },\n            selectedOption?.label,\n            React.createElement(components.Chevron, { orientation: \"down\", size: 18, className: classNames[UI.Chevron] }))));\n}\n","import React from \"react\";\n/**\n * Render the navigation dropdowns for the calendar.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function DropdownNav(props) {\n    return React.createElement(\"div\", { ...props });\n}\n","import React from \"react\";\n/**\n * Render the footer of the calendar.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function Footer(props) {\n    return React.createElement(\"div\", { ...props });\n}\n","import React from \"react\";\n/**\n * Render the grid with the weekday header row and the weeks for a specific\n * month.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function Month(props) {\n    const { calendarMonth, displayIndex, ...divProps } = props;\n    return React.createElement(\"div\", { ...divProps }, props.children);\n}\n","import React from \"react\";\n/**\n * Render the caption for a month in the calendar.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function MonthCaption(props) {\n    const { calendarMonth, displayIndex, ...divProps } = props;\n    return React.createElement(\"div\", { ...divProps });\n}\n","import React from \"react\";\n/**\n * Render the grid of days for a specific month.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function MonthGrid(props) {\n    return React.createElement(\"table\", { ...props });\n}\n","import React from \"react\";\n/**\n * Render a container wrapping the month grids.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function Months(props) {\n    return React.createElement(\"div\", { ...props });\n}\n","import { createContext, useContext } from \"react\";\n/** @ignore */\nexport const dayPickerContext = createContext(undefined);\n/**\n * Provides access to the DayPicker context, which includes properties and\n * methods to interact with the DayPicker component. This hook must be used\n * within a custom component.\n *\n * @template T - Use this type to refine the returned context type with a\n *   specific selection mode.\n * @returns The context to work with DayPicker.\n * @throws {Error} If the hook is used outside of a DayPicker provider.\n * @group Hooks\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function useDayPicker() {\n    const context = useContext(dayPickerContext);\n    if (context === undefined) {\n        throw new Error(\"useDayPicker() must be used within a custom component.\");\n    }\n    return context;\n}\n","import React from \"react\";\nimport { useDayPicker } from \"../useDayPicker.js\";\n/**\n * Render a dropdown to navigate between months in the calendar.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function MonthsDropdown(props) {\n    const { components } = useDayPicker();\n    return React.createElement(components.Dropdown, { ...props });\n}\n","import React, { useCallback, } from \"react\";\nimport { UI } from \"../UI.js\";\nimport { useDayPicker } from \"../useDayPicker.js\";\n/**\n * Render the navigation toolbar with buttons to navigate between months.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function Nav(props) {\n    const { onPreviousClick, onNextClick, previousMonth, nextMonth, ...navProps } = props;\n    const { components, classNames, labels: { labelPrevious, labelNext }, } = useDayPicker();\n    const handleNextClick = useCallback((e) => {\n        if (nextMonth) {\n            onNextClick?.(e);\n        }\n    }, [nextMonth, onNextClick]);\n    const handlePreviousClick = useCallback((e) => {\n        if (previousMonth) {\n            onPreviousClick?.(e);\n        }\n    }, [previousMonth, onPreviousClick]);\n    return (React.createElement(\"nav\", { ...navProps },\n        React.createElement(components.PreviousMonthButton, { type: \"button\", className: classNames[UI.PreviousMonthButton], tabIndex: previousMonth ? undefined : -1, \"aria-disabled\": previousMonth ? undefined : true, \"aria-label\": labelPrevious(previousMonth), onClick: handlePreviousClick },\n            React.createElement(components.Chevron, { disabled: previousMonth ? undefined : true, className: classNames[UI.Chevron], orientation: \"left\" })),\n        React.createElement(components.NextMonthButton, { type: \"button\", className: classNames[UI.NextMonthButton], tabIndex: nextMonth ? undefined : -1, \"aria-disabled\": nextMonth ? undefined : true, \"aria-label\": labelNext(nextMonth), onClick: handleNextClick },\n            React.createElement(components.Chevron, { disabled: nextMonth ? undefined : true, orientation: \"right\", className: classNames[UI.Chevron] }))));\n}\n","import React from \"react\";\nimport { useDayPicker } from \"../useDayPicker.js\";\n/**\n * Render the button to navigate to the next month in the calendar.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function NextMonthButton(props) {\n    const { components } = useDayPicker();\n    return React.createElement(components.Button, { ...props });\n}\n","import React from \"react\";\n/**\n * Render an `option` element.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function Option(props) {\n    return React.createElement(\"option\", { ...props });\n}\n","import React from \"react\";\nimport { useDayPicker } from \"../useDayPicker.js\";\n/**\n * Render the button to navigate to the previous month in the calendar.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function PreviousMonthButton(props) {\n    const { components } = useDayPicker();\n    return React.createElement(components.Button, { ...props });\n}\n","import React from \"react\";\n/**\n * Render the root element of the calendar.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function Root(props) {\n    const { rootRef, ...rest } = props;\n    return React.createElement(\"div\", { ...rest, ref: rootRef });\n}\n","import React from \"react\";\n/**\n * Render a `select` element.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function Select(props) {\n    return React.createElement(\"select\", { ...props });\n}\n","import React from \"react\";\n/**\n * Render a table row representing a week in the calendar.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function Week(props) {\n    const { week, ...trProps } = props;\n    return React.createElement(\"tr\", { ...trProps });\n}\n","import React from \"react\";\n/**\n * Render a table header cell with the name of a weekday (e.g., \"Mo\", \"Tu\").\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function Weekday(props) {\n    return React.createElement(\"th\", { ...props });\n}\n","import React from \"react\";\n/**\n * Render the table row containing the weekday names.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function Weekdays(props) {\n    return (React.createElement(\"thead\", { \"aria-hidden\": true },\n        React.createElement(\"tr\", { ...props })));\n}\n","import React from \"react\";\n/**\n * Render a table cell displaying the number of the week.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function WeekNumber(props) {\n    const { week, ...thProps } = props;\n    return React.createElement(\"th\", { ...thProps });\n}\n","import React from \"react\";\n/**\n * Render the header cell for the week numbers column.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function WeekNumberHeader(props) {\n    return React.createElement(\"th\", { ...props });\n}\n","import React from \"react\";\n/**\n * Render the container for the weeks in the month grid.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function Weeks(props) {\n    return React.createElement(\"tbody\", { ...props });\n}\n","import React from \"react\";\nimport { useDayPicker } from \"../useDayPicker.js\";\n/**\n * Render a dropdown to navigate between years in the calendar.\n *\n * @group Components\n * @see https://daypicker.dev/guides/custom-components\n */\nexport function YearsDropdown(props) {\n    const { components } = useDayPicker();\n    return React.createElement(components.Dropdown, { ...props });\n}\n","import { defaultDateLib } from \"../classes/index.js\";\n/**\n * Checks if a given date is within a specified date range.\n *\n * @since 9.0.0\n * @param range - The date range to check against.\n * @param date - The date to check.\n * @param excludeEnds - If `true`, the range's start and end dates are excluded.\n * @param dateLib - The date utility library instance.\n * @returns `true` if the date is within the range, otherwise `false`.\n * @group Utilities\n */\nexport function rangeIncludesDate(range, date, excludeEnds = false, dateLib = defaultDateLib) {\n    let { from, to } = range;\n    const { differenceInCalendarDays, isSameDay } = dateLib;\n    if (from && to) {\n        const isRangeInverted = differenceInCalendarDays(to, from) < 0;\n        if (isRangeInverted) {\n            [from, to] = [to, from];\n        }\n        const isInRange = differenceInCalendarDays(date, from) >= (excludeEnds ? 1 : 0) &&\n            differenceInCalendarDays(to, date) >= (excludeEnds ? 1 : 0);\n        return isInRange;\n    }\n    if (!excludeEnds && to) {\n        return isSameDay(to, date);\n    }\n    if (!excludeEnds && from) {\n        return isSameDay(from, date);\n    }\n    return false;\n}\n/**\n * @private\n * @deprecated Use {@link rangeIncludesDate} instead.\n */\nexport const isDateInRange = (range, date) => rangeIncludesDate(range, date, false, defaultDateLib);\n","/**\n * Checks if the given value is of type {@link DateInterval}.\n *\n * @param matcher - The value to check.\n * @returns `true` if the value is a {@link DateInterval}, otherwise `false`.\n * @group Utilities\n */\nexport function isDateInterval(matcher) {\n    return Boolean(matcher &&\n        typeof matcher === \"object\" &&\n        \"before\" in matcher &&\n        \"after\" in matcher);\n}\n/**\n * Checks if the given value is of type {@link DateRange}.\n *\n * @param value - The value to check.\n * @returns `true` if the value is a {@link DateRange}, otherwise `false`.\n * @group Utilities\n */\nexport function isDateRange(value) {\n    return Boolean(value && typeof value === \"object\" && \"from\" in value);\n}\n/**\n * Checks if the given value is of type {@link DateAfter}.\n *\n * @param value - The value to check.\n * @returns `true` if the value is a {@link DateAfter}, otherwise `false`.\n * @group Utilities\n */\nexport function isDateAfterType(value) {\n    return Boolean(value && typeof value === \"object\" && \"after\" in value);\n}\n/**\n * Checks if the given value is of type {@link DateBefore}.\n *\n * @param value - The value to check.\n * @returns `true` if the value is a {@link DateBefore}, otherwise `false`.\n * @group Utilities\n */\nexport function isDateBeforeType(value) {\n    return Boolean(value && typeof value === \"object\" && \"before\" in value);\n}\n/**\n * Checks if the given value is of type {@link DayOfWeek}.\n *\n * @param value - The value to check.\n * @returns `true` if the value is a {@link DayOfWeek}, otherwise `false`.\n * @group Utilities\n */\nexport function isDayOfWeekType(value) {\n    return Boolean(value && typeof value === \"object\" && \"dayOfWeek\" in value);\n}\n/**\n * Checks if the given value is an array of valid dates.\n *\n * @private\n * @param value - The value to check.\n * @param dateLib - The date utility library instance.\n * @returns `true` if the value is an array of valid dates, otherwise `false`.\n */\nexport function isDatesArray(value, dateLib) {\n    return Array.isArray(value) && value.every(dateLib.isDate);\n}\n","import { defaultDateLib } from \"../classes/DateLib.js\";\nimport { rangeIncludesDate } from \"./rangeIncludesDate.js\";\nimport { isDateAfterType, isDateBeforeType, isDateInterval, isDateRange, isDatesArray, isDayOfWeekType, } from \"./typeguards.js\";\n/**\n * Checks if a given date matches at least one of the specified {@link Matcher}.\n *\n * @param date - The date to check.\n * @param matchers - The matchers to check against.\n * @param dateLib - The date utility library instance.\n * @returns `true` if the date matches any of the matchers, otherwise `false`.\n * @group Utilities\n */\nexport function dateMatchModifiers(date, matchers, dateLib = defaultDateLib) {\n    const matchersArr = !Array.isArray(matchers) ? [matchers] : matchers;\n    const { isSameDay, differenceInCalendarDays, isAfter } = dateLib;\n    return matchersArr.some((matcher) => {\n        if (typeof matcher === \"boolean\") {\n            return matcher;\n        }\n        if (dateLib.isDate(matcher)) {\n            return isSameDay(date, matcher);\n        }\n        if (isDatesArray(matcher, dateLib)) {\n            return matcher.includes(date);\n        }\n        if (isDateRange(matcher)) {\n            return rangeIncludesDate(matcher, date, false, dateLib);\n        }\n        if (isDayOfWeekType(matcher)) {\n            if (!Array.isArray(matcher.dayOfWeek)) {\n                return matcher.dayOfWeek === date.getDay();\n            }\n            return matcher.dayOfWeek.includes(date.getDay());\n        }\n        if (isDateInterval(matcher)) {\n            const diffBefore = differenceInCalendarDays(matcher.before, date);\n            const diffAfter = differenceInCalendarDays(matcher.after, date);\n            const isDayBefore = diffBefore > 0;\n            const isDayAfter = diffAfter < 0;\n            const isClosedInterval = isAfter(matcher.before, matcher.after);\n            if (isClosedInterval) {\n                return isDayAfter && isDayBefore;\n            }\n            else {\n                return isDayBefore || isDayAfter;\n            }\n        }\n        if (isDateAfterType(matcher)) {\n            return differenceInCalendarDays(date, matcher.after) > 0;\n        }\n        if (isDateBeforeType(matcher)) {\n            return differenceInCalendarDays(matcher.before, date) > 0;\n        }\n        if (typeof matcher === \"function\") {\n            return matcher(date);\n        }\n        return false;\n    });\n}\n/**\n * @private\n * @deprecated Use {@link dateMatchModifiers} instead.\n */\nexport const isMatch = dateMatchModifiers;\n","import { DayFlag } from \"../UI.js\";\nimport { dateMatchModifiers } from \"../utils/dateMatchModifiers.js\";\n/**\n * Creates a function to retrieve the modifiers for a given day.\n *\n * This function calculates both internal and custom modifiers for each day\n * based on the provided calendar days and DayPicker props.\n *\n * @private\n * @param days The array of `CalendarDay` objects to process.\n * @param props The DayPicker props, including modifiers and configuration\n *   options.\n * @param dateLib The date library to use for date manipulation.\n * @returns A function that retrieves the modifiers for a given `CalendarDay`.\n */\nexport function createGetModifiers(days, props, navStart, navEnd, dateLib) {\n    const { disabled, hidden, modifiers, showOutsideDays, broadcastCalendar, today, } = props;\n    const { isSameDay, isSameMonth, startOfMonth, isBefore, endOfMonth, isAfter, } = dateLib;\n    const computedNavStart = navStart && startOfMonth(navStart);\n    const computedNavEnd = navEnd && endOfMonth(navEnd);\n    const internalModifiersMap = {\n        [DayFlag.focused]: [],\n        [DayFlag.outside]: [],\n        [DayFlag.disabled]: [],\n        [DayFlag.hidden]: [],\n        [DayFlag.today]: [],\n    };\n    const customModifiersMap = {};\n    for (const day of days) {\n        const { date, displayMonth } = day;\n        const isOutside = Boolean(displayMonth && !isSameMonth(date, displayMonth));\n        const isBeforeNavStart = Boolean(computedNavStart && isBefore(date, computedNavStart));\n        const isAfterNavEnd = Boolean(computedNavEnd && isAfter(date, computedNavEnd));\n        const isDisabled = Boolean(disabled && dateMatchModifiers(date, disabled, dateLib));\n        const isHidden = Boolean(hidden && dateMatchModifiers(date, hidden, dateLib)) ||\n            isBeforeNavStart ||\n            isAfterNavEnd ||\n            // Broadcast calendar will show outside days as default\n            (!broadcastCalendar && !showOutsideDays && isOutside) ||\n            (broadcastCalendar && showOutsideDays === false && isOutside);\n        const isToday = isSameDay(date, today ?? dateLib.today());\n        if (isOutside)\n            internalModifiersMap.outside.push(day);\n        if (isDisabled)\n            internalModifiersMap.disabled.push(day);\n        if (isHidden)\n            internalModifiersMap.hidden.push(day);\n        if (isToday)\n            internalModifiersMap.today.push(day);\n        // Add custom modifiers\n        if (modifiers) {\n            Object.keys(modifiers).forEach((name) => {\n                const modifierValue = modifiers?.[name];\n                const isMatch = modifierValue\n                    ? dateMatchModifiers(date, modifierValue, dateLib)\n                    : false;\n                if (!isMatch)\n                    return;\n                if (customModifiersMap[name]) {\n                    customModifiersMap[name].push(day);\n                }\n                else {\n                    customModifiersMap[name] = [day];\n                }\n            });\n        }\n    }\n    return (day) => {\n        // Initialize all the modifiers to false\n        const dayFlags = {\n            [DayFlag.focused]: false,\n            [DayFlag.disabled]: false,\n            [DayFlag.hidden]: false,\n            [DayFlag.outside]: false,\n            [DayFlag.today]: false,\n        };\n        const customModifiers = {};\n        // Find the modifiers for the given day\n        for (const name in internalModifiersMap) {\n            const days = internalModifiersMap[name];\n            dayFlags[name] = days.some((d) => d === day);\n        }\n        for (const name in customModifiersMap) {\n            customModifiers[name] = customModifiersMap[name].some((d) => d === day);\n        }\n        return {\n            ...dayFlags,\n            // custom modifiers should override all the previous ones\n            ...customModifiers,\n        };\n    };\n}\n","import { DayFlag, SelectionState, UI } from \"../UI.js\";\n/**\n * Returns the class names for a day based on its modifiers.\n *\n * This function combines the base class name for the day with any class names\n * associated with active modifiers.\n *\n * @param modifiers The modifiers applied to the day.\n * @param classNames The base class names for the calendar elements.\n * @param modifiersClassNames The class names associated with specific\n *   modifiers.\n * @returns An array of class names for the day.\n */\nexport function getClassNamesForModifiers(modifiers, classNames, modifiersClassNames = {}) {\n    const modifierClassNames = Object.entries(modifiers)\n        .filter(([, active]) => active === true)\n        .reduce((previousValue, [key]) => {\n        if (modifiersClassNames[key]) {\n            previousValue.push(modifiersClassNames[key]);\n        }\n        else if (classNames[DayFlag[key]]) {\n            previousValue.push(classNames[DayFlag[key]]);\n        }\n        else if (classNames[SelectionState[key]]) {\n            previousValue.push(classNames[SelectionState[key]]);\n        }\n        return previousValue;\n    }, [classNames[UI.Day]]);\n    return modifierClassNames;\n}\n","import * as components from \"../components/custom-components.js\";\n/**\n * Merges custom components from the props with the default components.\n *\n * This function ensures that any custom components provided in the props\n * override the default components.\n *\n * @param customComponents The custom components provided in the DayPicker\n *   props.\n * @returns An object containing the merged components.\n */\nexport function getComponents(customComponents) {\n    return {\n        ...components,\n        ...customComponents,\n    };\n}\n","/**\n * Extracts `data-` attributes from the DayPicker props.\n *\n * This function collects all `data-` attributes from the props and adds\n * additional attributes based on the DayPicker configuration.\n *\n * @param props The DayPicker props.\n * @returns An object containing the `data-` attributes.\n */\nexport function getDataAttributes(props) {\n    const dataAttributes = {\n        \"data-mode\": props.mode ?? undefined,\n        \"data-required\": \"required\" in props ? props.required : undefined,\n        \"data-multiple-months\": (props.numberOfMonths && props.numberOfMonths > 1) || undefined,\n        \"data-week-numbers\": props.showWeekNumber || undefined,\n        \"data-broadcast-calendar\": props.broadcastCalendar || undefined,\n        \"data-nav-layout\": props.navLayout || undefined,\n    };\n    Object.entries(props).forEach(([key, val]) => {\n        if (key.startsWith(\"data-\")) {\n            dataAttributes[key] = val;\n        }\n    });\n    return dataAttributes;\n}\n","import { Animation, DayFlag, SelectionState, UI } from \"../UI.js\";\n/**\n * Returns the default class names for the UI elements.\n *\n * This function generates a mapping of default class names for various UI\n * elements, day flags, selection states, and animations.\n *\n * @returns An object containing the default class names.\n * @group Utilities\n */\nexport function getDefaultClassNames() {\n    const classNames = {};\n    for (const key in UI) {\n        classNames[UI[key]] =\n            `rdp-${UI[key]}`;\n    }\n    for (const key in DayFlag) {\n        classNames[DayFlag[key]] =\n            `rdp-${DayFlag[key]}`;\n    }\n    for (const key in SelectionState) {\n        classNames[SelectionState[key]] =\n            `rdp-${SelectionState[key]}`;\n    }\n    for (const key in Animation) {\n        classNames[Animation[key]] =\n            `rdp-${Animation[key]}`;\n    }\n    return classNames;\n}\n","import { DateLib } from \"../classes/DateLib.js\";\n/**\n * Formats the caption of the month.\n *\n * @defaultValue Locale-specific month/year order (e.g., \"November 2022\").\n * @param month The date representing the month.\n * @param options Configuration options for the date library.\n * @param dateLib The date library to use for formatting. If not provided, a new\n *   instance is created.\n * @returns The formatted caption as a string.\n * @group Formatters\n * @see https://daypicker.dev/docs/translation#custom-formatters\n */\nexport function formatCaption(month, options, dateLib) {\n    const lib = dateLib ?? new DateLib(options);\n    return lib.formatMonthYear(month);\n}\n/**\n * @private\n * @deprecated Use {@link formatCaption} instead.\n * @group Formatters\n */\nexport const formatMonthCaption = formatCaption;\n","import { DateLib } from \"../classes/DateLib.js\";\n/**\n * Formats the day date shown in the day cell.\n *\n * @defaultValue `d` (e.g., \"1\").\n * @param date The date to format.\n * @param options Configuration options for the date library.\n * @param dateLib The date library to use for formatting. If not provided, a new\n *   instance is created.\n * @returns The formatted day as a string.\n * @group Formatters\n * @see https://daypicker.dev/docs/translation#custom-formatters\n */\nexport function formatDay(date, options, dateLib) {\n    return (dateLib ?? new DateLib(options)).format(date, \"d\");\n}\n","import { defaultDateLib } from \"../classes/DateLib.js\";\n/**\n * Formats the month for the dropdown option label.\n *\n * @defaultValue The localized full month name.\n * @param month The date representing the month.\n * @param dateLib The date library to use for formatting. Defaults to\n *   `defaultDateLib`.\n * @returns The formatted month name as a string.\n * @group Formatters\n * @see https://daypicker.dev/docs/translation#custom-formatters\n */\nexport function formatMonthDropdown(month, dateLib = defaultDateLib) {\n    return dateLib.format(month, \"LLLL\");\n}\n","import { DateLib } from \"../classes/DateLib.js\";\n/**\n * Formats the name of a weekday to be displayed in the weekdays header.\n *\n * @defaultValue `cccccc` (e.g., \"Mo\" for Monday).\n * @param weekday The date representing the weekday.\n * @param options Configuration options for the date library.\n * @param dateLib The date library to use for formatting. If not provided, a new\n *   instance is created.\n * @returns The formatted weekday name as a string.\n * @group Formatters\n * @see https://daypicker.dev/docs/translation#custom-formatters\n */\nexport function formatWeekdayName(weekday, options, dateLib) {\n    return (dateLib ?? new DateLib(options)).format(weekday, \"cccccc\");\n}\n","import { defaultDateLib } from \"../classes/DateLib.js\";\n/**\n * Formats the week number.\n *\n * @defaultValue The week number as a string, with a leading zero for single-digit numbers.\n * @param weekNumber The week number to format.\n * @param dateLib The date library to use for formatting. Defaults to\n *   `defaultDateLib`.\n * @returns The formatted week number as a string.\n * @group Formatters\n * @see https://daypicker.dev/docs/translation#custom-formatters\n */\nexport function formatWeekNumber(weekNumber, dateLib = defaultDateLib) {\n    if (weekNumber < 10) {\n        return dateLib.formatNumber(`0${weekNumber.toLocaleString()}`);\n    }\n    return dateLib.formatNumber(`${weekNumber.toLocaleString()}`);\n}\n","/**\n * Formats the header for the week number column.\n *\n * @defaultValue An empty string `\"\"`.\n * @returns The formatted week number header as a string.\n * @group Formatters\n * @see https://daypicker.dev/docs/translation#custom-formatters\n */\nexport function formatWeekNumberHeader() {\n    return ``;\n}\n","import { defaultDateLib } from \"../classes/DateLib.js\";\n/**\n * Formats the year for the dropdown option label.\n *\n * @param year The year to format.\n * @param dateLib The date library to use for formatting. Defaults to\n *   `defaultDateLib`.\n * @returns The formatted year as a string.\n * @group Formatters\n * @see https://daypicker.dev/docs/translation#custom-formatters\n */\nexport function formatYearDropdown(year, dateLib = defaultDateLib) {\n    return dateLib.format(year, \"yyyy\");\n}\n/**\n * @private\n * @deprecated Use `formatYearDropdown` instead.\n * @group Formatters\n */\nexport const formatYearCaption = formatYearDropdown;\n","import * as defaultFormatters from \"../formatters/index.js\";\n/**\n * Merges custom formatters from the props with the default formatters.\n *\n * @param customFormatters The custom formatters provided in the DayPicker\n *   props.\n * @returns The merged formatters object.\n */\nexport function getFormatters(customFormatters) {\n    if (customFormatters?.formatMonthCaption && !customFormatters.formatCaption) {\n        customFormatters.formatCaption = customFormatters.formatMonthCaption;\n    }\n    if (customFormatters?.formatYearCaption &&\n        !customFormatters.formatYearDropdown) {\n        customFormatters.formatYearDropdown = customFormatters.formatYearCaption;\n    }\n    return {\n        ...defaultFormatters,\n        ...customFormatters,\n    };\n}\n","/**\n * Returns the months to show in the dropdown.\n *\n * This function generates a list of months for the current year, formatted\n * using the provided formatter, and determines whether each month should be\n * disabled based on the navigation range.\n *\n * @param displayMonth The currently displayed month.\n * @param navStart The start date for navigation.\n * @param navEnd The end date for navigation.\n * @param formatters The formatters to use for formatting the month labels.\n * @param dateLib The date library to use for date manipulation.\n * @returns An array of dropdown options representing the months, or `undefined`\n *   if no months are available.\n */\nexport function getMonthOptions(displayMonth, navStart, navEnd, formatters, dateLib) {\n    const { startOfMonth, startOfYear, endOfYear, eachMonthOfInterval, getMonth, } = dateLib;\n    const months = eachMonthOfInterval({\n        start: startOfYear(displayMonth),\n        end: endOfYear(displayMonth),\n    });\n    const options = months.map((month) => {\n        const label = formatters.formatMonthDropdown(month, dateLib);\n        const value = getMonth(month);\n        const disabled = (navStart && month < startOfMonth(navStart)) ||\n            (navEnd && month > startOfMonth(navEnd)) ||\n            false;\n        return { value, label, disabled };\n    });\n    return options;\n}\n","import { UI } from \"../UI.js\";\n/**\n * Returns the computed style for a day based on its modifiers.\n *\n * This function merges the base styles for the day with any styles associated\n * with active modifiers.\n *\n * @param dayModifiers The modifiers applied to the day.\n * @param styles The base styles for the calendar elements.\n * @param modifiersStyles The styles associated with specific modifiers.\n * @returns The computed style for the day.\n */\nexport function getStyleForModifiers(dayModifiers, styles = {}, modifiersStyles = {}) {\n    let style = { ...styles?.[UI.Day] };\n    Object.entries(dayModifiers)\n        .filter(([, active]) => active === true)\n        .forEach(([modifier]) => {\n        style = {\n            ...style,\n            ...modifiersStyles?.[modifier],\n        };\n    });\n    return style;\n}\n","/**\n * Generates a series of 7 days, starting from the beginning of the week, to use\n * for formatting weekday names (e.g., Monday, Tuesday, etc.).\n *\n * @param dateLib The date library to use for date manipulation.\n * @param ISOWeek Whether to use ISO week numbering (weeks start on Monday).\n * @param broadcastCalendar Whether to use the broadcast calendar (weeks start\n *   on Monday, but may include adjustments for broadcast-specific rules).\n * @returns An array of 7 dates representing the weekdays.\n */\nexport function getWeekdays(dateLib, ISOWeek, broadcastCalendar) {\n    const today = dateLib.today();\n    const start = broadcastCalendar\n        ? dateLib.startOfBroadcastWeek(today, dateLib)\n        : ISOWeek\n            ? dateLib.startOfISOWeek(today)\n            : dateLib.startOfWeek(today);\n    const days = [];\n    for (let i = 0; i < 7; i++) {\n        const day = dateLib.addDays(start, i);\n        days.push(day);\n    }\n    return days;\n}\n","/**\n * Returns the years to display in the dropdown.\n *\n * This function generates a list of years between the navigation start and end\n * dates, formatted using the provided formatter.\n *\n * @param navStart The start date for navigation.\n * @param navEnd The end date for navigation.\n * @param formatters The formatters to use for formatting the year labels.\n * @param dateLib The date library to use for date manipulation.\n * @param reverse If true, reverses the order of the years (descending).\n * @returns An array of dropdown options representing the years, or `undefined`\n *   if `navStart` or `navEnd` is not provided.\n */\nexport function getYearOptions(navStart, navEnd, formatters, dateLib, reverse = false) {\n    if (!navStart)\n        return undefined;\n    if (!navEnd)\n        return undefined;\n    const { startOfYear, endOfYear, addYears, getYear, isBefore, isSameYear } = dateLib;\n    const firstNavYear = startOfYear(navStart);\n    const lastNavYear = endOfYear(navEnd);\n    const years = [];\n    let year = firstNavYear;\n    while (isBefore(year, lastNavYear) || isSameYear(year, lastNavYear)) {\n        years.push(year);\n        year = addYears(year, 1);\n    }\n    if (reverse)\n        years.reverse();\n    return years.map((year) => {\n        const label = formatters.formatYearDropdown(year, dateLib);\n        return {\n            value: getYear(year),\n            label,\n            disabled: false,\n        };\n    });\n}\n","import { DateLib } from \"../classes/DateLib.js\";\n/**\n * Generates the ARIA label for a day button.\n *\n * Use the `modifiers` argument to provide additional context for the label,\n * such as indicating if the day is \"today\" or \"selected.\"\n *\n * @defaultValue The formatted date.\n * @param date - The date to format.\n * @param modifiers - The modifiers providing context for the day.\n * @param options - Optional configuration for the date formatting library.\n * @param dateLib - An optional instance of the date formatting library.\n * @returns The ARIA label for the day button.\n * @group Labels\n * @see https://daypicker.dev/docs/translation#aria-labels\n */\nexport function labelDayButton(date, modifiers, options, dateLib) {\n    let label = (dateLib ?? new DateLib(options)).format(date, \"PPPP\");\n    if (modifiers.today)\n        label = `Today, ${label}`;\n    if (modifiers.selected)\n        label = `${label}, selected`;\n    return label;\n}\n/**\n * @ignore\n * @deprecated Use `labelDayButton` instead.\n */\nexport const labelDay = labelDayButton;\n","import { DateLib } from \"../classes/DateLib.js\";\n/**\n * Generates the ARIA label for the month grid, which is announced when entering\n * the grid.\n *\n * @defaultValue Locale-specific month/year order (e.g., \"November 2022\").\n * @param date - The date representing the month.\n * @param options - Optional configuration for the date formatting library.\n * @param dateLib - An optional instance of the date formatting library.\n * @returns The ARIA label for the month grid.\n * @group Labels\n * @see https://daypicker.dev/docs/translation#aria-labels\n */\nexport function labelGrid(date, options, dateLib) {\n    const lib = dateLib ?? new DateLib(options);\n    return lib.formatMonthYear(date);\n}\n/**\n * @ignore\n * @deprecated Use {@link labelGrid} instead.\n */\nexport const labelCaption = labelGrid;\n","import { DateLib } from \"../classes/DateLib.js\";\n/**\n * Generates the label for a day grid cell when the calendar is not interactive.\n *\n * @param date - The date to format.\n * @param modifiers - Optional modifiers providing context for the day.\n * @param options - Optional configuration for the date formatting library.\n * @param dateLib - An optional instance of the date formatting library.\n * @returns The label for the day grid cell.\n * @group Labels\n * @see https://daypicker.dev/docs/translation#aria-labels\n */\nexport function labelGridcell(date, modifiers, options, dateLib) {\n    let label = (dateLib ?? new DateLib(options)).format(date, \"PPPP\");\n    if (modifiers?.today) {\n        label = `Today, ${label}`;\n    }\n    return label;\n}\n","/**\n * Generates the ARIA label for the months dropdown.\n *\n * @defaultValue `\"Choose the Month\"`\n * @param options - Optional configuration for the date formatting library.\n * @returns The ARIA label for the months dropdown.\n * @group Labels\n * @see https://daypicker.dev/docs/translation#aria-labels\n */\nexport function labelMonthDropdown(_options) {\n    return \"Choose the Month\";\n}\n","/**\n * Generates the ARIA label for the navigation toolbar.\n *\n * @defaultValue `\"\"`\n * @returns The ARIA label for the navigation toolbar.\n * @group Labels\n * @see https://daypicker.dev/docs/translation#aria-labels\n */\nexport function labelNav() {\n    return \"\";\n}\n","/**\n * Generates the ARIA label for the \"next month\" button.\n *\n * @defaultValue `\"Go to the Next Month\"`\n * @param month - The date representing the next month, or `undefined` if there\n *   is no next month.\n * @returns The ARIA label for the \"next month\" button.\n * @group Labels\n * @see https://daypicker.dev/docs/translation#aria-labels\n */\nexport function labelNext(_month) {\n    return \"Go to the Next Month\";\n}\n","/**\n * Generates the ARIA label for the \"previous month\" button.\n *\n * @defaultValue `\"Go to the Previous Month\"`\n * @param month - The date representing the previous month, or `undefined` if\n *   there is no previous month.\n * @returns The ARIA label for the \"previous month\" button.\n * @group Labels\n * @see https://daypicker.dev/docs/translation#aria-labels\n */\nexport function labelPrevious(_month) {\n    return \"Go to the Previous Month\";\n}\n","import { DateLib } from \"../classes/DateLib.js\";\n/**\n * Generates the ARIA label for a weekday column header.\n *\n * @defaultValue `\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"`\n * @param date - The date representing the weekday.\n * @param options - Optional configuration for the date formatting library.\n * @param dateLib - An optional instance of the date formatting library.\n * @returns The ARIA label for the weekday column header.\n * @group Labels\n * @see https://daypicker.dev/docs/translation#aria-labels\n */\nexport function labelWeekday(date, options, dateLib) {\n    return (dateLib ?? new DateLib(options)).format(date, \"cccc\");\n}\n","/**\n * Generates the ARIA label for the week number cell (the first cell in a row).\n *\n * @defaultValue `Week ${weekNumber}`\n * @param weekNumber - The number of the week.\n * @param options - Optional configuration for the date formatting library.\n * @returns The ARIA label for the week number cell.\n * @group Labels\n * @see https://daypicker.dev/docs/translation#aria-labels\n */\nexport function labelWeekNumber(weekNumber, _options) {\n    return `Week ${weekNumber}`;\n}\n","/**\n * Generates the ARIA label for the week number header element.\n *\n * @defaultValue `\"Week Number\"`\n * @param options - Optional configuration for the date formatting library.\n * @returns The ARIA label for the week number header.\n * @group Labels\n * @see https://daypicker.dev/docs/translation#aria-labels\n */\nexport function labelWeekNumberHeader(_options) {\n    return \"Week Number\";\n}\n","/**\n * Generates the ARIA label for the years dropdown.\n *\n * @defaultValue `\"Choose the Year\"`\n * @param options - Optional configuration for the date formatting library.\n * @returns The ARIA label for the years dropdown.\n * @group Labels\n * @see https://daypicker.dev/docs/translation#aria-labels\n */\nexport function labelYearDropdown(_options) {\n    return \"Choose the Year\";\n}\n","import { useLayoutEffect, useRef } from \"react\";\nimport { Animation } from \"./UI.js\";\nconst asHtmlElement = (element) => {\n    if (element instanceof HTMLElement)\n        return element;\n    return null;\n};\nconst queryMonthEls = (element) => [\n    ...(element.querySelectorAll(\"[data-animated-month]\") ?? []),\n];\nconst queryMonthEl = (element) => asHtmlElement(element.querySelector(\"[data-animated-month]\"));\nconst queryCaptionEl = (element) => asHtmlElement(element.querySelector(\"[data-animated-caption]\"));\nconst queryWeeksEl = (element) => asHtmlElement(element.querySelector(\"[data-animated-weeks]\"));\nconst queryNavEl = (element) => asHtmlElement(element.querySelector(\"[data-animated-nav]\"));\nconst queryWeekdaysEl = (element) => asHtmlElement(element.querySelector(\"[data-animated-weekdays]\"));\n/**\n * Handles animations for transitioning between months in the DayPicker\n * component.\n *\n * @private\n * @param rootElRef - A reference to the root element of the DayPicker\n *   component.\n * @param enabled - Whether animations are enabled.\n * @param options - Configuration options for the animation, including class\n *   names, months, focused day, and the date utility library.\n */\nexport function useAnimation(rootElRef, enabled, { classNames, months, focused, dateLib, }) {\n    const previousRootElSnapshotRef = useRef(null);\n    const previousMonthsRef = useRef(months);\n    const animatingRef = useRef(false);\n    useLayoutEffect(() => {\n        // get previous months before updating the previous months ref\n        const previousMonths = previousMonthsRef.current;\n        // update previous months ref for next effect trigger\n        previousMonthsRef.current = months;\n        if (!enabled ||\n            !rootElRef.current ||\n            // safety check because the ref can be set to anything by consumers\n            !(rootElRef.current instanceof HTMLElement) ||\n            // validation required for the animation to work as expected\n            months.length === 0 ||\n            previousMonths.length === 0 ||\n            months.length !== previousMonths.length) {\n            return;\n        }\n        const isSameMonth = dateLib.isSameMonth(months[0].date, previousMonths[0].date);\n        const isAfterPreviousMonth = dateLib.isAfter(months[0].date, previousMonths[0].date);\n        const captionAnimationClass = isAfterPreviousMonth\n            ? classNames[Animation.caption_after_enter]\n            : classNames[Animation.caption_before_enter];\n        const weeksAnimationClass = isAfterPreviousMonth\n            ? classNames[Animation.weeks_after_enter]\n            : classNames[Animation.weeks_before_enter];\n        // get previous root element snapshot before updating the snapshot ref\n        const previousRootElSnapshot = previousRootElSnapshotRef.current;\n        // update snapshot for next effect trigger\n        const rootElSnapshot = rootElRef.current.cloneNode(true);\n        if (rootElSnapshot instanceof HTMLElement) {\n            // if this effect is triggered while animating, we need to clean up the new root snapshot\n            // to put it in the same state as when not animating, to correctly animate the next month change\n            const currentMonthElsSnapshot = queryMonthEls(rootElSnapshot);\n            currentMonthElsSnapshot.forEach((currentMonthElSnapshot) => {\n                if (!(currentMonthElSnapshot instanceof HTMLElement))\n                    return;\n                // remove the old month snapshots from the new root snapshot\n                const previousMonthElSnapshot = queryMonthEl(currentMonthElSnapshot);\n                if (previousMonthElSnapshot &&\n                    currentMonthElSnapshot.contains(previousMonthElSnapshot)) {\n                    currentMonthElSnapshot.removeChild(previousMonthElSnapshot);\n                }\n                // remove animation classes from the new month snapshots\n                const captionEl = queryCaptionEl(currentMonthElSnapshot);\n                if (captionEl) {\n                    captionEl.classList.remove(captionAnimationClass);\n                }\n                const weeksEl = queryWeeksEl(currentMonthElSnapshot);\n                if (weeksEl) {\n                    weeksEl.classList.remove(weeksAnimationClass);\n                }\n            });\n            previousRootElSnapshotRef.current = rootElSnapshot;\n        }\n        else {\n            previousRootElSnapshotRef.current = null;\n        }\n        if (animatingRef.current ||\n            isSameMonth ||\n            // skip animation if a day is focused because it can cause issues to the animation and is better for a11y\n            focused) {\n            return;\n        }\n        const previousMonthEls = previousRootElSnapshot instanceof HTMLElement\n            ? queryMonthEls(previousRootElSnapshot)\n            : [];\n        const currentMonthEls = queryMonthEls(rootElRef.current);\n        if (currentMonthEls?.every((el) => el instanceof HTMLElement) &&\n            previousMonthEls &&\n            previousMonthEls.every((el) => el instanceof HTMLElement)) {\n            animatingRef.current = true;\n            const cleanUpFunctions = [];\n            // set isolation to isolate to isolate the stacking context during animation\n            rootElRef.current.style.isolation = \"isolate\";\n            // set z-index to 1 to ensure the nav is clickable over the other elements being animated\n            const navEl = queryNavEl(rootElRef.current);\n            if (navEl) {\n                navEl.style.zIndex = \"1\";\n            }\n            currentMonthEls.forEach((currentMonthEl, index) => {\n                const previousMonthEl = previousMonthEls[index];\n                if (!previousMonthEl) {\n                    return;\n                }\n                // animate new displayed month\n                currentMonthEl.style.position = \"relative\";\n                currentMonthEl.style.overflow = \"hidden\";\n                const captionEl = queryCaptionEl(currentMonthEl);\n                if (captionEl) {\n                    captionEl.classList.add(captionAnimationClass);\n                }\n                const weeksEl = queryWeeksEl(currentMonthEl);\n                if (weeksEl) {\n                    weeksEl.classList.add(weeksAnimationClass);\n                }\n                // animate new displayed month end\n                const cleanUp = () => {\n                    animatingRef.current = false;\n                    if (rootElRef.current) {\n                        rootElRef.current.style.isolation = \"\";\n                    }\n                    if (navEl) {\n                        navEl.style.zIndex = \"\";\n                    }\n                    if (captionEl) {\n                        captionEl.classList.remove(captionAnimationClass);\n                    }\n                    if (weeksEl) {\n                        weeksEl.classList.remove(weeksAnimationClass);\n                    }\n                    currentMonthEl.style.position = \"\";\n                    currentMonthEl.style.overflow = \"\";\n                    if (currentMonthEl.contains(previousMonthEl)) {\n                        currentMonthEl.removeChild(previousMonthEl);\n                    }\n                };\n                cleanUpFunctions.push(cleanUp);\n                // animate old displayed month\n                previousMonthEl.style.pointerEvents = \"none\";\n                previousMonthEl.style.position = \"absolute\";\n                previousMonthEl.style.overflow = \"hidden\";\n                previousMonthEl.setAttribute(\"aria-hidden\", \"true\");\n                // hide the weekdays container of the old month and only the new one\n                const previousWeekdaysEl = queryWeekdaysEl(previousMonthEl);\n                if (previousWeekdaysEl) {\n                    previousWeekdaysEl.style.opacity = \"0\";\n                }\n                const previousCaptionEl = queryCaptionEl(previousMonthEl);\n                if (previousCaptionEl) {\n                    previousCaptionEl.classList.add(isAfterPreviousMonth\n                        ? classNames[Animation.caption_before_exit]\n                        : classNames[Animation.caption_after_exit]);\n                    previousCaptionEl.addEventListener(\"animationend\", cleanUp);\n                }\n                const previousWeeksEl = queryWeeksEl(previousMonthEl);\n                if (previousWeeksEl) {\n                    previousWeeksEl.classList.add(isAfterPreviousMonth\n                        ? classNames[Animation.weeks_before_exit]\n                        : classNames[Animation.weeks_after_exit]);\n                }\n                currentMonthEl.insertBefore(previousMonthEl, currentMonthEl.firstChild);\n            });\n        }\n    });\n}\n","/**\n * Returns all the dates to display in the calendar.\n *\n * This function calculates the range of dates to display based on the provided\n * display months, constraints, and calendar configuration.\n *\n * @param displayMonths The months to display in the calendar.\n * @param maxDate The maximum date to include in the range.\n * @param props The DayPicker props, including calendar configuration options.\n * @param dateLib The date library to use for date manipulation.\n * @returns An array of dates to display in the calendar.\n */\nexport function getDates(displayMonths, maxDate, props, dateLib) {\n    const firstMonth = displayMonths[0];\n    const lastMonth = displayMonths[displayMonths.length - 1];\n    const { ISOWeek, fixedWeeks, broadcastCalendar } = props ?? {};\n    const { addDays, differenceInCalendarDays, differenceInCalendarMonths, endOfBroadcastWeek, endOfISOWeek, endOfMonth, endOfWeek, isAfter, startOfBroadcastWeek, startOfISOWeek, startOfWeek, } = dateLib;\n    const startWeekFirstDate = broadcastCalendar\n        ? startOfBroadcastWeek(firstMonth, dateLib)\n        : ISOWeek\n            ? startOfISOWeek(firstMonth)\n            : startOfWeek(firstMonth);\n    const endWeekLastDate = broadcastCalendar\n        ? endOfBroadcastWeek(lastMonth)\n        : ISOWeek\n            ? endOfISOWeek(endOfMonth(lastMonth))\n            : endOfWeek(endOfMonth(lastMonth));\n    const nOfDays = differenceInCalendarDays(endWeekLastDate, startWeekFirstDate);\n    const nOfMonths = differenceInCalendarMonths(lastMonth, firstMonth) + 1;\n    const dates = [];\n    for (let i = 0; i <= nOfDays; i++) {\n        const date = addDays(startWeekFirstDate, i);\n        if (maxDate && isAfter(date, maxDate)) {\n            break;\n        }\n        dates.push(date);\n    }\n    // If fixed weeks is enabled, add the extra dates to the array\n    const nrOfDaysWithFixedWeeks = broadcastCalendar ? 35 : 42;\n    const extraDates = nrOfDaysWithFixedWeeks * nOfMonths;\n    if (fixedWeeks && dates.length < extraDates) {\n        const daysToAdd = extraDates - dates.length;\n        for (let i = 0; i < daysToAdd; i++) {\n            const date = addDays(dates[dates.length - 1], 1);\n            dates.push(date);\n        }\n    }\n    return dates;\n}\n","/**\n * Returns all the days belonging to the calendar by merging the days in the\n * weeks for each month.\n *\n * @param calendarMonths The array of calendar months.\n * @returns An array of `CalendarDay` objects representing all the days in the\n *   calendar.\n */\nexport function getDays(calendarMonths) {\n    const initialDays = [];\n    return calendarMonths.reduce((days, month) => {\n        const weekDays = month.weeks.reduce((weekDays, week) => {\n            return weekDays.concat(week.days.slice());\n        }, initialDays.slice());\n        return days.concat(weekDays.slice());\n    }, initialDays.slice());\n}\n","/**\n * Returns the months to display in the calendar.\n *\n * @param firstDisplayedMonth The first month currently displayed in the\n *   calendar.\n * @param calendarEndMonth The latest month the user can navigate to.\n * @param props The DayPicker props, including `numberOfMonths`.\n * @param dateLib The date library to use for date manipulation.\n * @returns An array of dates representing the months to display.\n */\nexport function getDisplayMonths(firstDisplayedMonth, calendarEndMonth, props, dateLib) {\n    const { numberOfMonths = 1 } = props;\n    const months = [];\n    for (let i = 0; i < numberOfMonths; i++) {\n        const month = dateLib.addMonths(firstDisplayedMonth, i);\n        if (calendarEndMonth && month > calendarEndMonth) {\n            break;\n        }\n        months.push(month);\n    }\n    return months;\n}\n","/**\n * Determines the initial month to display in the calendar based on the provided\n * props.\n *\n * This function calculates the starting month, considering constraints such as\n * `startMonth`, `endMonth`, and the number of months to display.\n *\n * @param props The DayPicker props, including navigation and date constraints.\n * @param dateLib The date library to use for date manipulation.\n * @returns The initial month to display.\n */\nexport function getInitialMonth(props, navStart, navEnd, dateLib) {\n    const { month, defaultMonth, today = dateLib.today(), numberOfMonths = 1, } = props;\n    let initialMonth = month || defaultMonth || today;\n    const { differenceInCalendarMonths, addMonths, startOfMonth } = dateLib;\n    if (navEnd &&\n        differenceInCalendarMonths(navEnd, initialMonth) < numberOfMonths - 1) {\n        const offset = -1 * (numberOfMonths - 1);\n        initialMonth = addMonths(navEnd, offset);\n    }\n    if (navStart && differenceInCalendarMonths(initialMonth, navStart) < 0) {\n        initialMonth = navStart;\n    }\n    return startOfMonth(initialMonth);\n}\n","import { CalendarDay, CalendarMonth, CalendarWeek } from \"../classes/index.js\";\n/**\n * Returns the months to display in the calendar.\n *\n * This function generates `CalendarMonth` objects for each month to be\n * displayed, including their weeks and days, based on the provided display\n * months and dates.\n *\n * @param displayMonths The months (as dates) to display in the calendar.\n * @param dates The dates to display in the calendar.\n * @param props Options from the DayPicker props context.\n * @param dateLib The date library to use for date manipulation.\n * @returns An array of `CalendarMonth` objects representing the months to\n *   display.\n */\nexport function getMonths(displayMonths, dates, props, dateLib) {\n    const { addDays, endOfBroadcastWeek, endOfISOWeek, endOfMonth, endOfWeek, getISOWeek, getWeek, startOfBroadcastWeek, startOfISOWeek, startOfWeek, } = dateLib;\n    const dayPickerMonths = displayMonths.reduce((months, month) => {\n        const firstDateOfFirstWeek = props.broadcastCalendar\n            ? startOfBroadcastWeek(month, dateLib)\n            : props.ISOWeek\n                ? startOfISOWeek(month)\n                : startOfWeek(month);\n        const lastDateOfLastWeek = props.broadcastCalendar\n            ? endOfBroadcastWeek(month)\n            : props.ISOWeek\n                ? endOfISOWeek(endOfMonth(month))\n                : endOfWeek(endOfMonth(month));\n        /** The dates to display in the month. */\n        const monthDates = dates.filter((date) => {\n            return date >= firstDateOfFirstWeek && date <= lastDateOfLastWeek;\n        });\n        const nrOfDaysWithFixedWeeks = props.broadcastCalendar ? 35 : 42;\n        if (props.fixedWeeks && monthDates.length < nrOfDaysWithFixedWeeks) {\n            const extraDates = dates.filter((date) => {\n                const daysToAdd = nrOfDaysWithFixedWeeks - monthDates.length;\n                return (date > lastDateOfLastWeek &&\n                    date <= addDays(lastDateOfLastWeek, daysToAdd));\n            });\n            monthDates.push(...extraDates);\n        }\n        const weeks = monthDates.reduce((weeks, date) => {\n            const weekNumber = props.ISOWeek ? getISOWeek(date) : getWeek(date);\n            const week = weeks.find((week) => week.weekNumber === weekNumber);\n            const day = new CalendarDay(date, month, dateLib);\n            if (!week) {\n                weeks.push(new CalendarWeek(weekNumber, [day]));\n            }\n            else {\n                week.days.push(day);\n            }\n            return weeks;\n        }, []);\n        const dayPickerMonth = new CalendarMonth(month, weeks);\n        months.push(dayPickerMonth);\n        return months;\n    }, []);\n    if (!props.reverseMonths) {\n        return dayPickerMonths;\n    }\n    else {\n        return dayPickerMonths.reverse();\n    }\n}\n","/**\n * Returns the start and end months for calendar navigation.\n *\n * @param props The DayPicker props, including navigation and layout options.\n * @param dateLib The date library to use for date manipulation.\n * @returns A tuple containing the start and end months for navigation.\n */\nexport function getNavMonths(props, dateLib) {\n    let { startMonth, endMonth } = props;\n    const { startOfYear, startOfDay, startOfMonth, endOfMonth, addYears, endOfYear, newDate, today, } = dateLib;\n    // Handle deprecated code\n    const { fromYear, toYear, fromMonth, toMonth } = props;\n    if (!startMonth && fromMonth) {\n        startMonth = fromMonth;\n    }\n    if (!startMonth && fromYear) {\n        startMonth = dateLib.newDate(fromYear, 0, 1);\n    }\n    if (!endMonth && toMonth) {\n        endMonth = toMonth;\n    }\n    if (!endMonth && toYear) {\n        endMonth = newDate(toYear, 11, 31);\n    }\n    const hasYearDropdown = props.captionLayout === \"dropdown\" ||\n        props.captionLayout === \"dropdown-years\";\n    if (startMonth) {\n        startMonth = startOfMonth(startMonth);\n    }\n    else if (fromYear) {\n        startMonth = newDate(fromYear, 0, 1);\n    }\n    else if (!startMonth && hasYearDropdown) {\n        startMonth = startOfYear(addYears(props.today ?? today(), -100));\n    }\n    if (endMonth) {\n        endMonth = endOfMonth(endMonth);\n    }\n    else if (toYear) {\n        endMonth = newDate(toYear, 11, 31);\n    }\n    else if (!endMonth && hasYearDropdown) {\n        endMonth = endOfYear(props.today ?? today());\n    }\n    return [\n        startMonth ? startOfDay(startMonth) : startMonth,\n        endMonth ? startOfDay(endMonth) : endMonth,\n    ];\n}\n","/**\n * Returns the next month the user can navigate to, based on the given options.\n *\n * The next month is not always the next calendar month:\n *\n * - If it is after the `calendarEndMonth`, it returns `undefined`.\n * - If paged navigation is enabled, it skips forward by the number of displayed\n *   months.\n *\n * @param firstDisplayedMonth The first month currently displayed in the\n *   calendar.\n * @param calendarEndMonth The latest month the user can navigate to.\n * @param options Navigation options, including `numberOfMonths` and\n *   `pagedNavigation`.\n * @param dateLib The date library to use for date manipulation.\n * @returns The next month, or `undefined` if navigation is not possible.\n */\nexport function getNextMonth(firstDisplayedMonth, calendarEndMonth, options, dateLib) {\n    if (options.disableNavigation) {\n        return undefined;\n    }\n    const { pagedNavigation, numberOfMonths = 1 } = options;\n    const { startOfMonth, addMonths, differenceInCalendarMonths } = dateLib;\n    const offset = pagedNavigation ? numberOfMonths : 1;\n    const month = startOfMonth(firstDisplayedMonth);\n    if (!calendarEndMonth) {\n        return addMonths(month, offset);\n    }\n    const monthsDiff = differenceInCalendarMonths(calendarEndMonth, firstDisplayedMonth);\n    if (monthsDiff < numberOfMonths) {\n        return undefined;\n    }\n    return addMonths(month, offset);\n}\n","/**\n * Returns the previous month the user can navigate to, based on the given\n * options.\n *\n * The previous month is not always the previous calendar month:\n *\n * - If it is before the `calendarStartMonth`, it returns `undefined`.\n * - If paged navigation is enabled, it skips back by the number of displayed\n *   months.\n *\n * @param firstDisplayedMonth The first month currently displayed in the\n *   calendar.\n * @param calendarStartMonth The earliest month the user can navigate to.\n * @param options Navigation options, including `numberOfMonths` and\n *   `pagedNavigation`.\n * @param dateLib The date library to use for date manipulation.\n * @returns The previous month, or `undefined` if navigation is not possible.\n */\nexport function getPreviousMonth(firstDisplayedMonth, calendarStartMonth, options, dateLib) {\n    if (options.disableNavigation) {\n        return undefined;\n    }\n    const { pagedNavigation, numberOfMonths } = options;\n    const { startOfMonth, addMonths, differenceInCalendarMonths } = dateLib;\n    const offset = pagedNavigation ? (numberOfMonths ?? 1) : 1;\n    const month = startOfMonth(firstDisplayedMonth);\n    if (!calendarStartMonth) {\n        return addMonths(month, -offset);\n    }\n    const monthsDiff = differenceInCalendarMonths(month, calendarStartMonth);\n    if (monthsDiff <= 0) {\n        return undefined;\n    }\n    return addMonths(month, -offset);\n}\n","/**\n * Returns an array of calendar weeks from an array of calendar months.\n *\n * @param months The array of calendar months.\n * @returns An array of calendar weeks.\n */\nexport function getWeeks(months) {\n    const initialWeeks = [];\n    return months.reduce((weeks, month) => {\n        return weeks.concat(month.weeks.slice());\n    }, initialWeeks.slice());\n}\n","import { useState } from \"react\";\n/**\n * A custom hook for managing both controlled and uncontrolled component states.\n *\n * This hook allows a component to support both controlled and uncontrolled\n * states by determining whether the `controlledValue` is provided. If it is\n * undefined, the hook falls back to using the internal state.\n *\n * @example\n *   // Uncontrolled usage\n *   const [value, setValue] = useControlledValue(0, undefined);\n *\n *   // Controlled usage\n *   const [value, setValue] = useControlledValue(0, props.value);\n *\n * @template T - The type of the value.\n * @param defaultValue The initial value for the uncontrolled state.\n * @param controlledValue The value for the controlled state. If undefined, the\n *   component will use the uncontrolled state.\n * @returns A tuple where the first element is the current value (either\n *   controlled or uncontrolled) and the second element is a setter function to\n *   update the value.\n */\nexport function useControlledValue(defaultValue, controlledValue) {\n    const [uncontrolledValue, setValue] = useState(defaultValue);\n    const value = controlledValue === undefined ? uncontrolledValue : controlledValue;\n    return [value, setValue];\n}\n","import { useEffect } from \"react\";\nimport { getDates } from \"./helpers/getDates.js\";\nimport { getDays } from \"./helpers/getDays.js\";\nimport { getDisplayMonths } from \"./helpers/getDisplayMonths.js\";\nimport { getInitialMonth } from \"./helpers/getInitialMonth.js\";\nimport { getMonths } from \"./helpers/getMonths.js\";\nimport { getNavMonths } from \"./helpers/getNavMonth.js\";\nimport { getNextMonth } from \"./helpers/getNextMonth.js\";\nimport { getPreviousMonth } from \"./helpers/getPreviousMonth.js\";\nimport { getWeeks } from \"./helpers/getWeeks.js\";\nimport { useControlledValue } from \"./helpers/useControlledValue.js\";\n/**\n * Provides the calendar object to work with the calendar in custom components.\n *\n * @private\n * @param props - The DayPicker props related to calendar configuration.\n * @param dateLib - The date utility library instance.\n * @returns The calendar object containing displayed days, weeks, months, and\n *   navigation methods.\n */\nexport function useCalendar(props, dateLib) {\n    const [navStart, navEnd] = getNavMonths(props, dateLib);\n    const { startOfMonth, endOfMonth } = dateLib;\n    const initialMonth = getInitialMonth(props, navStart, navEnd, dateLib);\n    const [firstMonth, setFirstMonth] = useControlledValue(initialMonth, \n    // initialMonth is always computed from props.month if provided\n    props.month ? initialMonth : undefined);\n    // biome-ignore lint/correctness/useExhaustiveDependencies: change the initial month when the time zone changes.\n    useEffect(() => {\n        const newInitialMonth = getInitialMonth(props, navStart, navEnd, dateLib);\n        setFirstMonth(newInitialMonth);\n    }, [props.timeZone]);\n    /** The months displayed in the calendar. */\n    const displayMonths = getDisplayMonths(firstMonth, navEnd, props, dateLib);\n    /** The dates displayed in the calendar. */\n    const dates = getDates(displayMonths, props.endMonth ? endOfMonth(props.endMonth) : undefined, props, dateLib);\n    /** The Months displayed in the calendar. */\n    const months = getMonths(displayMonths, dates, props, dateLib);\n    /** The Weeks displayed in the calendar. */\n    const weeks = getWeeks(months);\n    /** The Days displayed in the calendar. */\n    const days = getDays(months);\n    const previousMonth = getPreviousMonth(firstMonth, navStart, props, dateLib);\n    const nextMonth = getNextMonth(firstMonth, navEnd, props, dateLib);\n    const { disableNavigation, onMonthChange } = props;\n    const isDayInCalendar = (day) => weeks.some((week) => week.days.some((d) => d.isEqualTo(day)));\n    const goToMonth = (date) => {\n        if (disableNavigation) {\n            return;\n        }\n        let newMonth = startOfMonth(date);\n        // if month is before start, use the first month instead\n        if (navStart && newMonth < startOfMonth(navStart)) {\n            newMonth = startOfMonth(navStart);\n        }\n        // if month is after endMonth, use the last month instead\n        if (navEnd && newMonth > startOfMonth(navEnd)) {\n            newMonth = startOfMonth(navEnd);\n        }\n        setFirstMonth(newMonth);\n        onMonthChange?.(newMonth);\n    };\n    const goToDay = (day) => {\n        // is this check necessary?\n        if (isDayInCalendar(day)) {\n            return;\n        }\n        goToMonth(day.date);\n    };\n    const calendar = {\n        months,\n        weeks,\n        days,\n        navStart,\n        navEnd,\n        previousMonth,\n        nextMonth,\n        goToMonth,\n        goToDay,\n    };\n    return calendar;\n}\n","import { DayFlag } from \"../UI.js\";\nvar FocusTargetPriority;\n(function (FocusTargetPriority) {\n    FocusTargetPriority[FocusTargetPriority[\"Today\"] = 0] = \"Today\";\n    FocusTargetPriority[FocusTargetPriority[\"Selected\"] = 1] = \"Selected\";\n    FocusTargetPriority[FocusTargetPriority[\"LastFocused\"] = 2] = \"LastFocused\";\n    FocusTargetPriority[FocusTargetPriority[\"FocusedModifier\"] = 3] = \"FocusedModifier\";\n})(FocusTargetPriority || (FocusTargetPriority = {}));\n/**\n * Determines if a day is focusable based on its modifiers.\n *\n * A day is considered focusable if it is not disabled, hidden, or outside the\n * displayed month.\n *\n * @param modifiers The modifiers applied to the day.\n * @returns `true` if the day is focusable, otherwise `false`.\n */\nfunction isFocusableDay(modifiers) {\n    return (!modifiers[DayFlag.disabled] &&\n        !modifiers[DayFlag.hidden] &&\n        !modifiers[DayFlag.outside]);\n}\n/**\n * Calculates the focus target day based on priority.\n *\n * This function determines the day that should receive focus in the calendar,\n * prioritizing days with specific modifiers (e.g., \"focused\", \"today\") or\n * selection states.\n *\n * @param days The array of `CalendarDay` objects to evaluate.\n * @param getModifiers A function to retrieve the modifiers for a given day.\n * @param isSelected A function to determine if a day is selected.\n * @param lastFocused The last focused day, if any.\n * @returns The `CalendarDay` that should receive focus, or `undefined` if no\n *   focusable day is found.\n */\nexport function calculateFocusTarget(days, getModifiers, isSelected, lastFocused) {\n    let focusTarget;\n    let foundFocusTargetPriority = -1;\n    for (const day of days) {\n        const modifiers = getModifiers(day);\n        if (isFocusableDay(modifiers)) {\n            if (modifiers[DayFlag.focused] &&\n                foundFocusTargetPriority < FocusTargetPriority.FocusedModifier) {\n                focusTarget = day;\n                foundFocusTargetPriority = FocusTargetPriority.FocusedModifier;\n            }\n            else if (lastFocused?.isEqualTo(day) &&\n                foundFocusTargetPriority < FocusTargetPriority.LastFocused) {\n                focusTarget = day;\n                foundFocusTargetPriority = FocusTargetPriority.LastFocused;\n            }\n            else if (isSelected(day.date) &&\n                foundFocusTargetPriority < FocusTargetPriority.Selected) {\n                focusTarget = day;\n                foundFocusTargetPriority = FocusTargetPriority.Selected;\n            }\n            else if (modifiers[DayFlag.today] &&\n                foundFocusTargetPriority < FocusTargetPriority.Today) {\n                focusTarget = day;\n                foundFocusTargetPriority = FocusTargetPriority.Today;\n            }\n        }\n    }\n    if (!focusTarget) {\n        // Return the first day that is focusable\n        focusTarget = days.find((day) => isFocusableDay(getModifiers(day)));\n    }\n    return focusTarget;\n}\n","/**\n * Calculates the next date that should be focused in the calendar.\n *\n * This function determines the next focusable date based on the movement\n * direction, constraints, and calendar configuration.\n *\n * @param moveBy The unit of movement (e.g., \"day\", \"week\").\n * @param moveDir The direction of movement (\"before\" or \"after\").\n * @param refDate The reference date from which to calculate the next focusable\n *   date.\n * @param navStart The earliest date the user can navigate to.\n * @param navEnd The latest date the user can navigate to.\n * @param props The DayPicker props, including calendar configuration options.\n * @param dateLib The date library to use for date manipulation.\n * @returns The next focusable date.\n */\nexport function getFocusableDate(moveBy, moveDir, refDate, navStart, navEnd, props, dateLib) {\n    const { ISOWeek, broadcastCalendar } = props;\n    const { addDays, addMonths, addWeeks, addYears, endOfBroadcastWeek, endOfISOWeek, endOfWeek, max, min, startOfBroadcastWeek, startOfISOWeek, startOfWeek, } = dateLib;\n    const moveFns = {\n        day: addDays,\n        week: addWeeks,\n        month: addMonths,\n        year: addYears,\n        startOfWeek: (date) => broadcastCalendar\n            ? startOfBroadcastWeek(date, dateLib)\n            : ISOWeek\n                ? startOfISOWeek(date)\n                : startOfWeek(date),\n        endOfWeek: (date) => broadcastCalendar\n            ? endOfBroadcastWeek(date)\n            : ISOWeek\n                ? endOfISOWeek(date)\n                : endOfWeek(date),\n    };\n    let focusableDate = moveFns[moveBy](refDate, moveDir === \"after\" ? 1 : -1);\n    if (moveDir === \"before\" && navStart) {\n        focusableDate = max([navStart, focusableDate]);\n    }\n    else if (moveDir === \"after\" && navEnd) {\n        focusableDate = min([navEnd, focusableDate]);\n    }\n    return focusableDate;\n}\n","import { CalendarDay } from \"../classes/index.js\";\nimport { dateMatchModifiers } from \"../utils/dateMatchModifiers.js\";\nimport { getFocusableDate } from \"./getFocusableDate.js\";\n/**\n * Determines the next focusable day in the calendar.\n *\n * This function recursively calculates the next focusable day based on the\n * movement direction and modifiers applied to the days.\n *\n * @param moveBy The unit of movement (e.g., \"day\", \"week\").\n * @param moveDir The direction of movement (\"before\" or \"after\").\n * @param refDay The currently focused day.\n * @param calendarStartMonth The earliest month the user can navigate to.\n * @param calendarEndMonth The latest month the user can navigate to.\n * @param props The DayPicker props, including modifiers and configuration\n *   options.\n * @param dateLib The date library to use for date manipulation.\n * @param attempt The current recursion attempt (used to limit recursion depth).\n * @returns The next focusable day, or `undefined` if no focusable day is found.\n */\nexport function getNextFocus(moveBy, moveDir, refDay, calendarStartMonth, calendarEndMonth, props, dateLib, attempt = 0) {\n    if (attempt > 365) {\n        // Limit the recursion to 365 attempts\n        return undefined;\n    }\n    const focusableDate = getFocusableDate(moveBy, moveDir, refDay.date, calendarStartMonth, calendarEndMonth, props, dateLib);\n    const isDisabled = Boolean(props.disabled &&\n        dateMatchModifiers(focusableDate, props.disabled, dateLib));\n    const isHidden = Boolean(props.hidden && dateMatchModifiers(focusableDate, props.hidden, dateLib));\n    const targetMonth = focusableDate;\n    const focusDay = new CalendarDay(focusableDate, targetMonth, dateLib);\n    if (!isDisabled && !isHidden) {\n        return focusDay;\n    }\n    // Recursively attempt to find the next focusable date\n    return getNextFocus(moveBy, moveDir, focusDay, calendarStartMonth, calendarEndMonth, props, dateLib, attempt + 1);\n}\n","import { useState } from \"react\";\nimport { calculateFocusTarget } from \"./helpers/calculateFocusTarget.js\";\nimport { getNextFocus } from \"./helpers/getNextFocus.js\";\n/**\n * Manages focus behavior for the DayPicker component, including setting,\n * moving, and blurring focus on calendar days.\n *\n * @template T - The type of DayPicker props.\n * @param props - The DayPicker props.\n * @param calendar - The calendar object containing the displayed days and\n *   months.\n * @param getModifiers - A function to retrieve modifiers for a given day.\n * @param isSelected - A function to check if a date is selected.\n * @param dateLib - The date utility library instance.\n * @returns An object containing focus-related methods and the currently focused\n *   day.\n */\nexport function useFocus(props, calendar, getModifiers, isSelected, dateLib) {\n    const { autoFocus } = props;\n    const [lastFocused, setLastFocused] = useState();\n    const focusTarget = calculateFocusTarget(calendar.days, getModifiers, isSelected || (() => false), lastFocused);\n    const [focusedDay, setFocused] = useState(autoFocus ? focusTarget : undefined);\n    const blur = () => {\n        setLastFocused(focusedDay);\n        setFocused(undefined);\n    };\n    const moveFocus = (moveBy, moveDir) => {\n        if (!focusedDay)\n            return;\n        const nextFocus = getNextFocus(moveBy, moveDir, focusedDay, calendar.navStart, calendar.navEnd, props, dateLib);\n        if (!nextFocus)\n            return;\n        calendar.goToDay(nextFocus);\n        setFocused(nextFocus);\n    };\n    const isFocusTarget = (day) => {\n        return Boolean(focusTarget?.isEqualTo(day));\n    };\n    const useFocus = {\n        isFocusTarget,\n        setFocused,\n        focused: focusedDay,\n        blur,\n        moveFocus,\n    };\n    return useFocus;\n}\n","import { useControlledValue } from \"../helpers/useControlledValue.js\";\n/**\n * Hook to manage multiple-date selection in the DayPicker component.\n *\n * @template T - The type of DayPicker props.\n * @param props - The DayPicker props.\n * @param dateLib - The date utility library instance.\n * @returns An object containing the selected dates, a function to select dates,\n *   and a function to check if a date is selected.\n */\nexport function useMulti(props, dateLib) {\n    const { selected: initiallySelected, required, onSelect, } = props;\n    const [internallySelected, setSelected] = useControlledValue(initiallySelected, onSelect ? initiallySelected : undefined);\n    const selected = !onSelect ? internallySelected : initiallySelected;\n    const { isSameDay } = dateLib;\n    const isSelected = (date) => {\n        return selected?.some((d) => isSameDay(d, date)) ?? false;\n    };\n    const { min, max } = props;\n    const select = (triggerDate, modifiers, e) => {\n        let newDates = [...(selected ?? [])];\n        if (isSelected(triggerDate)) {\n            if (selected?.length === min) {\n                // Min value reached, do nothing\n                return;\n            }\n            if (required && selected?.length === 1) {\n                // Required value already selected do nothing\n                return;\n            }\n            newDates = selected?.filter((d) => !isSameDay(d, triggerDate));\n        }\n        else {\n            if (selected?.length === max) {\n                // Max value reached, reset the selection to date\n                newDates = [triggerDate];\n            }\n            else {\n                // Add the date to the selection\n                newDates = [...newDates, triggerDate];\n            }\n        }\n        if (!onSelect) {\n            setSelected(newDates);\n        }\n        onSelect?.(newDates, triggerDate, modifiers, e);\n        return newDates;\n    };\n    return {\n        selected,\n        select,\n        isSelected,\n    };\n}\n","import { defaultDateLib } from \"../classes/DateLib.js\";\n/**\n * Adds a date to an existing range, considering constraints like minimum and\n * maximum range size.\n *\n * @param date - The date to add to the range.\n * @param initialRange - The initial range to which the date will be added.\n * @param min - The minimum number of days in the range.\n * @param max - The maximum number of days in the range.\n * @param required - Whether the range must always include at least one date.\n * @param dateLib - The date utility library instance.\n * @returns The updated date range, or `undefined` if the range is cleared.\n * @group Utilities\n */\nexport function addToRange(date, initialRange, min = 0, max = 0, required = false, dateLib = defaultDateLib) {\n    const { from, to } = initialRange || {};\n    const { isSameDay, isAfter, isBefore } = dateLib;\n    let range;\n    if (!from && !to) {\n        // the range is empty, add the date\n        range = { from: date, to: min > 0 ? undefined : date };\n    }\n    else if (from && !to) {\n        // adding date to an incomplete range\n        if (isSameDay(from, date)) {\n            // adding a date equal to the start of the range\n            if (min === 0) {\n                range = { from, to: date };\n            }\n            else if (required) {\n                range = { from, to: undefined };\n            }\n            else {\n                range = undefined;\n            }\n        }\n        else if (isBefore(date, from)) {\n            // adding a date before the start of the range\n            range = { from: date, to: from };\n        }\n        else {\n            // adding a date after the start of the range\n            range = { from, to: date };\n        }\n    }\n    else if (from && to) {\n        // adding date to a complete range\n        if (isSameDay(from, date) && isSameDay(to, date)) {\n            // adding a date that is equal to both start and end of the range\n            if (required) {\n                range = { from, to };\n            }\n            else {\n                range = undefined;\n            }\n        }\n        else if (isSameDay(from, date)) {\n            // adding a date equal to the the start of the range\n            range = { from, to: min > 0 ? undefined : date };\n        }\n        else if (isSameDay(to, date)) {\n            // adding a dare equal to the end of the range\n            range = { from: date, to: min > 0 ? undefined : date };\n        }\n        else if (isBefore(date, from)) {\n            // adding a date before the start of the range\n            range = { from: date, to: to };\n        }\n        else if (isAfter(date, from)) {\n            // adding a date after the start of the range\n            range = { from, to: date };\n        }\n        else if (isAfter(date, to)) {\n            // adding a date after the end of the range\n            range = { from, to: date };\n        }\n        else {\n            throw new Error(\"Invalid range\");\n        }\n    }\n    // check for min / max\n    if (range?.from && range?.to) {\n        const diff = dateLib.differenceInCalendarDays(range.to, range.from);\n        if (max > 0 && diff > max) {\n            range = { from: date, to: undefined };\n        }\n        else if (min > 1 && diff < min) {\n            range = { from: date, to: undefined };\n        }\n    }\n    return range;\n}\n","import { defaultDateLib } from \"../classes/DateLib.js\";\n/**\n * Checks if a date range contains one or more specified days of the week.\n *\n * @since 9.2.2\n * @param range - The date range to check.\n * @param dayOfWeek - The day(s) of the week to check for (`0-6`, where `0` is\n *   Sunday).\n * @param dateLib - The date utility library instance.\n * @returns `true` if the range contains the specified day(s) of the week,\n *   otherwise `false`.\n * @group Utilities\n */\nexport function rangeContainsDayOfWeek(range, dayOfWeek, dateLib = defaultDateLib) {\n    const dayOfWeekArr = !Array.isArray(dayOfWeek) ? [dayOfWeek] : dayOfWeek;\n    let date = range.from;\n    const totalDays = dateLib.differenceInCalendarDays(range.to, range.from);\n    // iterate at maximum one week or the total days if the range is shorter than one week\n    const totalDaysLimit = Math.min(totalDays, 6);\n    for (let i = 0; i <= totalDaysLimit; i++) {\n        if (dayOfWeekArr.includes(date.getDay())) {\n            return true;\n        }\n        date = dateLib.addDays(date, 1);\n    }\n    return false;\n}\n","import { defaultDateLib } from \"../classes/index.js\";\nimport { rangeIncludesDate } from \"./rangeIncludesDate.js\";\n/**\n * Determines if two date ranges overlap.\n *\n * @since 9.2.2\n * @param rangeLeft - The first date range.\n * @param rangeRight - The second date range.\n * @param dateLib - The date utility library instance.\n * @returns `true` if the ranges overlap, otherwise `false`.\n * @group Utilities\n */\nexport function rangeOverlaps(rangeLeft, rangeRight, dateLib = defaultDateLib) {\n    return (rangeIncludesDate(rangeLeft, rangeRight.from, false, dateLib) ||\n        rangeIncludesDate(rangeLeft, rangeRight.to, false, dateLib) ||\n        rangeIncludesDate(rangeRight, rangeLeft.from, false, dateLib) ||\n        rangeIncludesDate(rangeRight, rangeLeft.to, false, dateLib));\n}\n","import { defaultDateLib } from \"../classes/DateLib.js\";\nimport { dateMatchModifiers } from \"./dateMatchModifiers.js\";\nimport { rangeContainsDayOfWeek } from \"./rangeContainsDayOfWeek.js\";\nimport { rangeIncludesDate } from \"./rangeIncludesDate.js\";\nimport { rangeOverlaps } from \"./rangeOverlaps.js\";\nimport { isDateAfterType, isDateBeforeType, isDateInterval, isDateRange, isDatesArray, isDayOfWeekType, } from \"./typeguards.js\";\n/**\n * Checks if a date range contains dates that match the given modifiers.\n *\n * @since 9.2.2\n * @param range - The date range to check.\n * @param modifiers - The modifiers to match against.\n * @param dateLib - The date utility library instance.\n * @returns `true` if the range contains matching dates, otherwise `false`.\n * @group Utilities\n */\nexport function rangeContainsModifiers(range, modifiers, dateLib = defaultDateLib) {\n    const matchers = Array.isArray(modifiers) ? modifiers : [modifiers];\n    // Defer function matchers evaluation as they are the least performant.\n    const nonFunctionMatchers = matchers.filter((matcher) => typeof matcher !== \"function\");\n    const nonFunctionMatchersResult = nonFunctionMatchers.some((matcher) => {\n        if (typeof matcher === \"boolean\")\n            return matcher;\n        if (dateLib.isDate(matcher)) {\n            return rangeIncludesDate(range, matcher, false, dateLib);\n        }\n        if (isDatesArray(matcher, dateLib)) {\n            return matcher.some((date) => rangeIncludesDate(range, date, false, dateLib));\n        }\n        if (isDateRange(matcher)) {\n            if (matcher.from && matcher.to) {\n                return rangeOverlaps(range, { from: matcher.from, to: matcher.to }, dateLib);\n            }\n            return false;\n        }\n        if (isDayOfWeekType(matcher)) {\n            return rangeContainsDayOfWeek(range, matcher.dayOfWeek, dateLib);\n        }\n        if (isDateInterval(matcher)) {\n            const isClosedInterval = dateLib.isAfter(matcher.before, matcher.after);\n            if (isClosedInterval) {\n                return rangeOverlaps(range, {\n                    from: dateLib.addDays(matcher.after, 1),\n                    to: dateLib.addDays(matcher.before, -1),\n                }, dateLib);\n            }\n            return (dateMatchModifiers(range.from, matcher, dateLib) ||\n                dateMatchModifiers(range.to, matcher, dateLib));\n        }\n        if (isDateAfterType(matcher) || isDateBeforeType(matcher)) {\n            return (dateMatchModifiers(range.from, matcher, dateLib) ||\n                dateMatchModifiers(range.to, matcher, dateLib));\n        }\n        return false;\n    });\n    if (nonFunctionMatchersResult) {\n        return true;\n    }\n    const functionMatchers = matchers.filter((matcher) => typeof matcher === \"function\");\n    if (functionMatchers.length) {\n        let date = range.from;\n        const totalDays = dateLib.differenceInCalendarDays(range.to, range.from);\n        for (let i = 0; i <= totalDays; i++) {\n            if (functionMatchers.some((matcher) => matcher(date))) {\n                return true;\n            }\n            date = dateLib.addDays(date, 1);\n        }\n    }\n    return false;\n}\n","import { useControlledValue } from \"../helpers/useControlledValue.js\";\nimport { addToRange, rangeContainsModifiers } from \"../utils/index.js\";\nimport { rangeIncludesDate } from \"../utils/rangeIncludesDate.js\";\n/**\n * Hook to manage range selection in the DayPicker component.\n *\n * @template T - The type of DayPicker props.\n * @param props - The DayPicker props.\n * @param dateLib - The date utility library instance.\n * @returns An object containing the selected range, a function to select a\n *   range, and a function to check if a date is within the range.\n */\nexport function useRange(props, dateLib) {\n    const { disabled, excludeDisabled, selected: initiallySelected, required, onSelect, } = props;\n    const [internallySelected, setSelected] = useControlledValue(initiallySelected, onSelect ? initiallySelected : undefined);\n    const selected = !onSelect ? internallySelected : initiallySelected;\n    const isSelected = (date) => selected && rangeIncludesDate(selected, date, false, dateLib);\n    const select = (triggerDate, modifiers, e) => {\n        const { min, max } = props;\n        const newRange = triggerDate\n            ? addToRange(triggerDate, selected, min, max, required, dateLib)\n            : undefined;\n        if (excludeDisabled && disabled && newRange?.from && newRange.to) {\n            if (rangeContainsModifiers({ from: newRange.from, to: newRange.to }, disabled, dateLib)) {\n                // if a disabled days is found, the range is reset\n                newRange.from = triggerDate;\n                newRange.to = undefined;\n            }\n        }\n        if (!onSelect) {\n            setSelected(newRange);\n        }\n        onSelect?.(newRange, triggerDate, modifiers, e);\n        return newRange;\n    };\n    return {\n        selected,\n        select,\n        isSelected,\n    };\n}\n","import { useControlledValue } from \"../helpers/useControlledValue.js\";\n/**\n * Hook to manage single-date selection in the DayPicker component.\n *\n * @template T - The type of DayPicker props.\n * @param props - The DayPicker props.\n * @param dateLib - The date utility library instance.\n * @returns An object containing the selected date, a function to select a date,\n *   and a function to check if a date is selected.\n */\nexport function useSingle(props, dateLib) {\n    const { selected: initiallySelected, required, onSelect, } = props;\n    const [internallySelected, setSelected] = useControlledValue(initiallySelected, onSelect ? initiallySelected : undefined);\n    const selected = !onSelect ? internallySelected : initiallySelected;\n    const { isSameDay } = dateLib;\n    const isSelected = (compareDate) => {\n        return selected ? isSameDay(selected, compareDate) : false;\n    };\n    const select = (triggerDate, modifiers, e) => {\n        let newDate = triggerDate;\n        if (!required && selected && selected && isSameDay(triggerDate, selected)) {\n            // If the date is the same, clear the selection.\n            newDate = undefined;\n        }\n        if (!onSelect) {\n            setSelected(newDate);\n        }\n        if (required) {\n            onSelect?.(newDate, triggerDate, modifiers, e);\n        }\n        else {\n            onSelect?.(newDate, triggerDate, modifiers, e);\n        }\n        return newDate;\n    };\n    return {\n        selected,\n        select,\n        isSelected,\n    };\n}\n","import { useMulti } from \"./selection/useMulti.js\";\nimport { useRange } from \"./selection/useRange.js\";\nimport { useSingle } from \"./selection/useSingle.js\";\n/**\n * Determines the appropriate selection hook to use based on the selection mode\n * and returns the corresponding selection object.\n *\n * @template T - The type of DayPicker props.\n * @param props - The DayPicker props.\n * @param dateLib - The date utility library instance.\n * @returns The selection object for the specified mode, or `undefined` if no\n *   mode is set.\n */\nexport function useSelection(props, dateLib) {\n    const single = useSingle(props, dateLib);\n    const multi = useMulti(props, dateLib);\n    const range = useRange(props, dateLib);\n    switch (props.mode) {\n        case \"single\":\n            return single;\n        case \"multiple\":\n            return multi;\n        case \"range\":\n            return range;\n        default:\n            return undefined;\n    }\n}\n","import { TZDate } from \"@date-fns/tz\";\nimport React, { useCallback, useMemo, useRef } from \"react\";\nimport { DateLib, defaultLocale } from \"./classes/DateLib.js\";\nimport { createGetModifiers } from \"./helpers/createGetModifiers.js\";\nimport { getClassNamesForModifiers } from \"./helpers/getClassNamesForModifiers.js\";\nimport { getComponents } from \"./helpers/getComponents.js\";\nimport { getDataAttributes } from \"./helpers/getDataAttributes.js\";\nimport { getDefaultClassNames } from \"./helpers/getDefaultClassNames.js\";\nimport { getFormatters } from \"./helpers/getFormatters.js\";\nimport { getMonthOptions } from \"./helpers/getMonthOptions.js\";\nimport { getStyleForModifiers } from \"./helpers/getStyleForModifiers.js\";\nimport { getWeekdays } from \"./helpers/getWeekdays.js\";\nimport { getYearOptions } from \"./helpers/getYearOptions.js\";\nimport * as defaultLabels from \"./labels/index.js\";\nimport { DayFlag, SelectionState, UI } from \"./UI.js\";\nimport { useAnimation } from \"./useAnimation.js\";\nimport { useCalendar } from \"./useCalendar.js\";\nimport { dayPickerContext } from \"./useDayPicker.js\";\nimport { useFocus } from \"./useFocus.js\";\nimport { useSelection } from \"./useSelection.js\";\nimport { rangeIncludesDate } from \"./utils/rangeIncludesDate.js\";\nimport { isDateRange } from \"./utils/typeguards.js\";\n/**\n * Renders the DayPicker calendar component.\n *\n * @param initialProps - The props for the DayPicker component.\n * @returns The rendered DayPicker component.\n * @group DayPicker\n * @see https://daypicker.dev\n */\nexport function DayPicker(initialProps) {\n    let props = initialProps;\n    if (props.timeZone) {\n        props = {\n            ...initialProps,\n        };\n        if (props.today) {\n            props.today = new TZDate(props.today, props.timeZone);\n        }\n        if (props.month) {\n            props.month = new TZDate(props.month, props.timeZone);\n        }\n        if (props.defaultMonth) {\n            props.defaultMonth = new TZDate(props.defaultMonth, props.timeZone);\n        }\n        if (props.startMonth) {\n            props.startMonth = new TZDate(props.startMonth, props.timeZone);\n        }\n        if (props.endMonth) {\n            props.endMonth = new TZDate(props.endMonth, props.timeZone);\n        }\n        if (props.mode === \"single\" && props.selected) {\n            props.selected = new TZDate(props.selected, props.timeZone);\n        }\n        else if (props.mode === \"multiple\" && props.selected) {\n            props.selected = props.selected?.map((date) => new TZDate(date, props.timeZone));\n        }\n        else if (props.mode === \"range\" && props.selected) {\n            props.selected = {\n                from: props.selected.from\n                    ? new TZDate(props.selected.from, props.timeZone)\n                    : undefined,\n                to: props.selected.to\n                    ? new TZDate(props.selected.to, props.timeZone)\n                    : undefined,\n            };\n        }\n    }\n    const { components, formatters, labels, dateLib, locale, classNames } = useMemo(() => {\n        const locale = { ...defaultLocale, ...props.locale };\n        const dateLib = new DateLib({\n            locale,\n            weekStartsOn: props.broadcastCalendar ? 1 : props.weekStartsOn,\n            firstWeekContainsDate: props.firstWeekContainsDate,\n            useAdditionalWeekYearTokens: props.useAdditionalWeekYearTokens,\n            useAdditionalDayOfYearTokens: props.useAdditionalDayOfYearTokens,\n            timeZone: props.timeZone,\n            numerals: props.numerals,\n        }, props.dateLib);\n        return {\n            dateLib,\n            components: getComponents(props.components),\n            formatters: getFormatters(props.formatters),\n            labels: { ...defaultLabels, ...props.labels },\n            locale,\n            classNames: { ...getDefaultClassNames(), ...props.classNames },\n        };\n    }, [\n        props.locale,\n        props.broadcastCalendar,\n        props.weekStartsOn,\n        props.firstWeekContainsDate,\n        props.useAdditionalWeekYearTokens,\n        props.useAdditionalDayOfYearTokens,\n        props.timeZone,\n        props.numerals,\n        props.dateLib,\n        props.components,\n        props.formatters,\n        props.labels,\n        props.classNames,\n    ]);\n    const { captionLayout, mode, navLayout, numberOfMonths = 1, onDayBlur, onDayClick, onDayFocus, onDayKeyDown, onDayMouseEnter, onDayMouseLeave, onNextClick, onPrevClick, showWeekNumber, styles, } = props;\n    const { formatCaption, formatDay, formatMonthDropdown, formatWeekNumber, formatWeekNumberHeader, formatWeekdayName, formatYearDropdown, } = formatters;\n    const calendar = useCalendar(props, dateLib);\n    const { days, months, navStart, navEnd, previousMonth, nextMonth, goToMonth, } = calendar;\n    const getModifiers = createGetModifiers(days, props, navStart, navEnd, dateLib);\n    const { isSelected, select, selected: selectedValue, } = useSelection(props, dateLib) ?? {};\n    const { blur, focused, isFocusTarget, moveFocus, setFocused } = useFocus(props, calendar, getModifiers, isSelected ?? (() => false), dateLib);\n    const { labelDayButton, labelGridcell, labelGrid, labelMonthDropdown, labelNav, labelPrevious, labelNext, labelWeekday, labelWeekNumber, labelWeekNumberHeader, labelYearDropdown, } = labels;\n    const weekdays = useMemo(() => getWeekdays(dateLib, props.ISOWeek), [dateLib, props.ISOWeek]);\n    const isInteractive = mode !== undefined || onDayClick !== undefined;\n    const handlePreviousClick = useCallback(() => {\n        if (!previousMonth)\n            return;\n        goToMonth(previousMonth);\n        onPrevClick?.(previousMonth);\n    }, [previousMonth, goToMonth, onPrevClick]);\n    const handleNextClick = useCallback(() => {\n        if (!nextMonth)\n            return;\n        goToMonth(nextMonth);\n        onNextClick?.(nextMonth);\n    }, [goToMonth, nextMonth, onNextClick]);\n    const handleDayClick = useCallback((day, m) => (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        setFocused(day);\n        select?.(day.date, m, e);\n        onDayClick?.(day.date, m, e);\n    }, [select, onDayClick, setFocused]);\n    const handleDayFocus = useCallback((day, m) => (e) => {\n        setFocused(day);\n        onDayFocus?.(day.date, m, e);\n    }, [onDayFocus, setFocused]);\n    const handleDayBlur = useCallback((day, m) => (e) => {\n        blur();\n        onDayBlur?.(day.date, m, e);\n    }, [blur, onDayBlur]);\n    const handleDayKeyDown = useCallback((day, modifiers) => (e) => {\n        const keyMap = {\n            ArrowLeft: [\n                e.shiftKey ? \"month\" : \"day\",\n                props.dir === \"rtl\" ? \"after\" : \"before\",\n            ],\n            ArrowRight: [\n                e.shiftKey ? \"month\" : \"day\",\n                props.dir === \"rtl\" ? \"before\" : \"after\",\n            ],\n            ArrowDown: [e.shiftKey ? \"year\" : \"week\", \"after\"],\n            ArrowUp: [e.shiftKey ? \"year\" : \"week\", \"before\"],\n            PageUp: [e.shiftKey ? \"year\" : \"month\", \"before\"],\n            PageDown: [e.shiftKey ? \"year\" : \"month\", \"after\"],\n            Home: [\"startOfWeek\", \"before\"],\n            End: [\"endOfWeek\", \"after\"],\n        };\n        if (keyMap[e.key]) {\n            e.preventDefault();\n            e.stopPropagation();\n            const [moveBy, moveDir] = keyMap[e.key];\n            moveFocus(moveBy, moveDir);\n        }\n        onDayKeyDown?.(day.date, modifiers, e);\n    }, [moveFocus, onDayKeyDown, props.dir]);\n    const handleDayMouseEnter = useCallback((day, modifiers) => (e) => {\n        onDayMouseEnter?.(day.date, modifiers, e);\n    }, [onDayMouseEnter]);\n    const handleDayMouseLeave = useCallback((day, modifiers) => (e) => {\n        onDayMouseLeave?.(day.date, modifiers, e);\n    }, [onDayMouseLeave]);\n    const handleMonthChange = useCallback((date) => (e) => {\n        const selectedMonth = Number(e.target.value);\n        const month = dateLib.setMonth(dateLib.startOfMonth(date), selectedMonth);\n        goToMonth(month);\n    }, [dateLib, goToMonth]);\n    const handleYearChange = useCallback((date) => (e) => {\n        const selectedYear = Number(e.target.value);\n        const month = dateLib.setYear(dateLib.startOfMonth(date), selectedYear);\n        goToMonth(month);\n    }, [dateLib, goToMonth]);\n    const { className, style } = useMemo(() => ({\n        className: [classNames[UI.Root], props.className]\n            .filter(Boolean)\n            .join(\" \"),\n        style: { ...styles?.[UI.Root], ...props.style },\n    }), [classNames, props.className, props.style, styles]);\n    const dataAttributes = getDataAttributes(props);\n    const rootElRef = useRef(null);\n    useAnimation(rootElRef, Boolean(props.animate), {\n        classNames,\n        months,\n        focused,\n        dateLib,\n    });\n    const contextValue = {\n        dayPickerProps: props,\n        selected: selectedValue,\n        select: select,\n        isSelected,\n        months,\n        nextMonth,\n        previousMonth,\n        goToMonth,\n        getModifiers,\n        components,\n        classNames,\n        styles,\n        labels,\n        formatters,\n    };\n    return (React.createElement(dayPickerContext.Provider, { value: contextValue },\n        React.createElement(components.Root, { rootRef: props.animate ? rootElRef : undefined, className: className, style: style, dir: props.dir, id: props.id, lang: props.lang, nonce: props.nonce, title: props.title, role: props.role, \"aria-label\": props[\"aria-label\"], \"aria-labelledby\": props[\"aria-labelledby\"], ...dataAttributes },\n            React.createElement(components.Months, { className: classNames[UI.Months], style: styles?.[UI.Months] },\n                !props.hideNavigation && !navLayout && (React.createElement(components.Nav, { \"data-animated-nav\": props.animate ? \"true\" : undefined, className: classNames[UI.Nav], style: styles?.[UI.Nav], \"aria-label\": labelNav(), onPreviousClick: handlePreviousClick, onNextClick: handleNextClick, previousMonth: previousMonth, nextMonth: nextMonth })),\n                months.map((calendarMonth, displayIndex) => {\n                    return (React.createElement(components.Month, { \"data-animated-month\": props.animate ? \"true\" : undefined, className: classNames[UI.Month], style: styles?.[UI.Month], \n                        // biome-ignore lint/suspicious/noArrayIndexKey: breaks animation\n                        key: displayIndex, displayIndex: displayIndex, calendarMonth: calendarMonth },\n                        navLayout === \"around\" &&\n                            !props.hideNavigation &&\n                            displayIndex === 0 && (React.createElement(components.PreviousMonthButton, { type: \"button\", className: classNames[UI.PreviousMonthButton], tabIndex: previousMonth ? undefined : -1, \"aria-disabled\": previousMonth ? undefined : true, \"aria-label\": labelPrevious(previousMonth), onClick: handlePreviousClick, \"data-animated-button\": props.animate ? \"true\" : undefined },\n                            React.createElement(components.Chevron, { disabled: previousMonth ? undefined : true, className: classNames[UI.Chevron], orientation: props.dir === \"rtl\" ? \"right\" : \"left\" }))),\n                        React.createElement(components.MonthCaption, { \"data-animated-caption\": props.animate ? \"true\" : undefined, className: classNames[UI.MonthCaption], style: styles?.[UI.MonthCaption], calendarMonth: calendarMonth, displayIndex: displayIndex }, captionLayout?.startsWith(\"dropdown\") ? (React.createElement(components.DropdownNav, { className: classNames[UI.Dropdowns], style: styles?.[UI.Dropdowns] },\n                            (() => {\n                                const monthControl = captionLayout === \"dropdown\" ||\n                                    captionLayout === \"dropdown-months\" ? (React.createElement(components.MonthsDropdown, { key: \"month\", className: classNames[UI.MonthsDropdown], \"aria-label\": labelMonthDropdown(), classNames: classNames, components: components, disabled: Boolean(props.disableNavigation), onChange: handleMonthChange(calendarMonth.date), options: getMonthOptions(calendarMonth.date, navStart, navEnd, formatters, dateLib), style: styles?.[UI.Dropdown], value: dateLib.getMonth(calendarMonth.date) })) : (React.createElement(\"span\", { key: \"month\" }, formatMonthDropdown(calendarMonth.date, dateLib)));\n                                const yearControl = captionLayout === \"dropdown\" ||\n                                    captionLayout === \"dropdown-years\" ? (React.createElement(components.YearsDropdown, { key: \"year\", className: classNames[UI.YearsDropdown], \"aria-label\": labelYearDropdown(dateLib.options), classNames: classNames, components: components, disabled: Boolean(props.disableNavigation), onChange: handleYearChange(calendarMonth.date), options: getYearOptions(navStart, navEnd, formatters, dateLib, Boolean(props.reverseYears)), style: styles?.[UI.Dropdown], value: dateLib.getYear(calendarMonth.date) })) : (React.createElement(\"span\", { key: \"year\" }, formatYearDropdown(calendarMonth.date, dateLib)));\n                                const controls = dateLib.getMonthYearOrder() === \"year-first\"\n                                    ? [yearControl, monthControl]\n                                    : [monthControl, yearControl];\n                                return controls;\n                            })(),\n                            React.createElement(\"span\", { role: \"status\", \"aria-live\": \"polite\", style: {\n                                    border: 0,\n                                    clip: \"rect(0 0 0 0)\",\n                                    height: \"1px\",\n                                    margin: \"-1px\",\n                                    overflow: \"hidden\",\n                                    padding: 0,\n                                    position: \"absolute\",\n                                    width: \"1px\",\n                                    whiteSpace: \"nowrap\",\n                                    wordWrap: \"normal\",\n                                } }, formatCaption(calendarMonth.date, dateLib.options, dateLib)))) : (\n                        // biome-ignore lint/a11y/useSemanticElements: breaking change\n                        React.createElement(components.CaptionLabel, { className: classNames[UI.CaptionLabel], role: \"status\", \"aria-live\": \"polite\" }, formatCaption(calendarMonth.date, dateLib.options, dateLib)))),\n                        navLayout === \"around\" &&\n                            !props.hideNavigation &&\n                            displayIndex === numberOfMonths - 1 && (React.createElement(components.NextMonthButton, { type: \"button\", className: classNames[UI.NextMonthButton], tabIndex: nextMonth ? undefined : -1, \"aria-disabled\": nextMonth ? undefined : true, \"aria-label\": labelNext(nextMonth), onClick: handleNextClick, \"data-animated-button\": props.animate ? \"true\" : undefined },\n                            React.createElement(components.Chevron, { disabled: nextMonth ? undefined : true, className: classNames[UI.Chevron], orientation: props.dir === \"rtl\" ? \"left\" : \"right\" }))),\n                        displayIndex === numberOfMonths - 1 &&\n                            navLayout === \"after\" &&\n                            !props.hideNavigation && (React.createElement(components.Nav, { \"data-animated-nav\": props.animate ? \"true\" : undefined, className: classNames[UI.Nav], style: styles?.[UI.Nav], \"aria-label\": labelNav(), onPreviousClick: handlePreviousClick, onNextClick: handleNextClick, previousMonth: previousMonth, nextMonth: nextMonth })),\n                        React.createElement(components.MonthGrid, { role: \"grid\", \"aria-multiselectable\": mode === \"multiple\" || mode === \"range\", \"aria-label\": labelGrid(calendarMonth.date, dateLib.options, dateLib) ||\n                                undefined, className: classNames[UI.MonthGrid], style: styles?.[UI.MonthGrid] },\n                            !props.hideWeekdays && (React.createElement(components.Weekdays, { \"data-animated-weekdays\": props.animate ? \"true\" : undefined, className: classNames[UI.Weekdays], style: styles?.[UI.Weekdays] },\n                                showWeekNumber && (React.createElement(components.WeekNumberHeader, { \"aria-label\": labelWeekNumberHeader(dateLib.options), className: classNames[UI.WeekNumberHeader], style: styles?.[UI.WeekNumberHeader], scope: \"col\" }, formatWeekNumberHeader())),\n                                weekdays.map((weekday) => (React.createElement(components.Weekday, { \"aria-label\": labelWeekday(weekday, dateLib.options, dateLib), className: classNames[UI.Weekday], key: String(weekday), style: styles?.[UI.Weekday], scope: \"col\" }, formatWeekdayName(weekday, dateLib.options, dateLib)))))),\n                            React.createElement(components.Weeks, { \"data-animated-weeks\": props.animate ? \"true\" : undefined, className: classNames[UI.Weeks], style: styles?.[UI.Weeks] }, calendarMonth.weeks.map((week) => {\n                                return (React.createElement(components.Week, { className: classNames[UI.Week], key: week.weekNumber, style: styles?.[UI.Week], week: week },\n                                    showWeekNumber && (\n                                    // biome-ignore lint/a11y/useSemanticElements: react component\n                                    React.createElement(components.WeekNumber, { week: week, style: styles?.[UI.WeekNumber], \"aria-label\": labelWeekNumber(week.weekNumber, {\n                                            locale,\n                                        }), className: classNames[UI.WeekNumber], scope: \"row\", role: \"rowheader\" }, formatWeekNumber(week.weekNumber, dateLib))),\n                                    week.days.map((day) => {\n                                        const { date } = day;\n                                        const modifiers = getModifiers(day);\n                                        modifiers[DayFlag.focused] =\n                                            !modifiers.hidden &&\n                                                Boolean(focused?.isEqualTo(day));\n                                        modifiers[SelectionState.selected] =\n                                            isSelected?.(date) || modifiers.selected;\n                                        if (isDateRange(selectedValue)) {\n                                            // add range modifiers\n                                            const { from, to } = selectedValue;\n                                            modifiers[SelectionState.range_start] = Boolean(from && to && dateLib.isSameDay(date, from));\n                                            modifiers[SelectionState.range_end] = Boolean(from && to && dateLib.isSameDay(date, to));\n                                            modifiers[SelectionState.range_middle] =\n                                                rangeIncludesDate(selectedValue, date, true, dateLib);\n                                        }\n                                        const style = getStyleForModifiers(modifiers, styles, props.modifiersStyles);\n                                        const className = getClassNamesForModifiers(modifiers, classNames, props.modifiersClassNames);\n                                        const ariaLabel = !isInteractive && !modifiers.hidden\n                                            ? labelGridcell(date, modifiers, dateLib.options, dateLib)\n                                            : undefined;\n                                        return (\n                                        // biome-ignore lint/a11y/useSemanticElements: react component\n                                        React.createElement(components.Day, { key: `${dateLib.format(date, \"yyyy-MM-dd\")}_${dateLib.format(day.displayMonth, \"yyyy-MM\")}`, day: day, modifiers: modifiers, className: className.join(\" \"), style: style, role: \"gridcell\", \"aria-selected\": modifiers.selected || undefined, \"aria-label\": ariaLabel, \"data-day\": dateLib.format(date, \"yyyy-MM-dd\"), \"data-month\": day.outside\n                                                ? dateLib.format(date, \"yyyy-MM\")\n                                                : undefined, \"data-selected\": modifiers.selected || undefined, \"data-disabled\": modifiers.disabled || undefined, \"data-hidden\": modifiers.hidden || undefined, \"data-outside\": day.outside || undefined, \"data-focused\": modifiers.focused || undefined, \"data-today\": modifiers.today || undefined }, !modifiers.hidden && isInteractive ? (React.createElement(components.DayButton, { className: classNames[UI.DayButton], style: styles?.[UI.DayButton], type: \"button\", day: day, modifiers: modifiers, disabled: modifiers.disabled || undefined, tabIndex: isFocusTarget(day) ? 0 : -1, \"aria-label\": labelDayButton(date, modifiers, dateLib.options, dateLib), onClick: handleDayClick(day, modifiers), onBlur: handleDayBlur(day, modifiers), onFocus: handleDayFocus(day, modifiers), onKeyDown: handleDayKeyDown(day, modifiers), onMouseEnter: handleDayMouseEnter(day, modifiers), onMouseLeave: handleDayMouseLeave(day, modifiers) }, formatDay(date, dateLib.options, dateLib))) : (!modifiers.hidden &&\n                                            formatDay(day.date, dateLib.options, dateLib))));\n                                    })));\n                            })))));\n                })),\n            props.footer && (\n            // biome-ignore lint/a11y/useSemanticElements: react component\n            React.createElement(components.Footer, { className: classNames[UI.Footer], style: styles?.[UI.Footer], role: \"status\", \"aria-live\": \"polite\" }, props.footer)))));\n}\n","import * as React from \"react\"\nimport {\n  ChevronDownIcon,\n  ChevronLeftIcon,\n  ChevronRightIcon,\n} from \"lucide-react\"\nimport { DayButton, DayPicker, getDefaultClassNames } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button, buttonVariants } from \"@/components/ui/button\"\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  captionLayout = \"label\",\n  buttonVariant = \"ghost\",\n  formatters,\n  components,\n  ...props\n}: React.ComponentProps<typeof DayPicker> & {\n  buttonVariant?: React.ComponentProps<typeof Button>[\"variant\"]\n}) {\n  const defaultClassNames = getDefaultClassNames()\n\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\n        \"bg-background group/calendar p-3 [--cell-size:2rem] [[data-slot=card-content]_&]:bg-transparent [[data-slot=popover-content]_&]:bg-transparent\",\n        String.raw`rtl:**:[.rdp-button\\_next>svg]:rotate-180`,\n        String.raw`rtl:**:[.rdp-button\\_previous>svg]:rotate-180`,\n        className\n      )}\n      captionLayout={captionLayout}\n      formatters={{\n        formatMonthDropdown: (date) =>\n          date.toLocaleString(\"default\", { month: \"short\" }),\n        ...formatters,\n      }}\n      classNames={{\n        root: cn(\"w-fit\", defaultClassNames.root),\n        months: cn(\n          \"relative flex flex-col gap-4 md:flex-row\",\n          defaultClassNames.months\n        ),\n        month: cn(\"flex w-full flex-col gap-4\", defaultClassNames.month),\n        nav: cn(\n          \"absolute inset-x-0 top-0 flex w-full items-center justify-between gap-1\",\n          defaultClassNames.nav\n        ),\n        button_previous: cn(\n          buttonVariants({ variant: buttonVariant }),\n          \"h-[--cell-size] w-[--cell-size] select-none p-0 aria-disabled:opacity-50\",\n          defaultClassNames.button_previous\n        ),\n        button_next: cn(\n          buttonVariants({ variant: buttonVariant }),\n          \"h-[--cell-size] w-[--cell-size] select-none p-0 aria-disabled:opacity-50\",\n          defaultClassNames.button_next\n        ),\n        month_caption: cn(\n          \"flex h-[--cell-size] w-full items-center justify-center px-[--cell-size]\",\n          defaultClassNames.month_caption\n        ),\n        dropdowns: cn(\n          \"flex h-[--cell-size] w-full items-center justify-center gap-1.5 text-sm font-medium\",\n          defaultClassNames.dropdowns\n        ),\n        dropdown_root: cn(\n          \"has-focus:border-ring border-input shadow-xs has-focus:ring-ring/50 has-focus:ring-[3px] relative rounded-md border\",\n          defaultClassNames.dropdown_root\n        ),\n        dropdown: cn(\n          \"bg-popover absolute inset-0 opacity-0\",\n          defaultClassNames.dropdown\n        ),\n        caption_label: cn(\n          \"select-none font-medium\",\n          captionLayout === \"label\"\n            ? \"text-sm\"\n            : \"[&>svg]:text-muted-foreground flex h-8 items-center gap-1 rounded-md pl-2 pr-1 text-sm [&>svg]:size-3.5\",\n          defaultClassNames.caption_label\n        ),\n        table: \"w-full border-collapse\",\n        weekdays: cn(\"flex\", defaultClassNames.weekdays),\n        weekday: cn(\n          \"text-muted-foreground flex-1 select-none rounded-md text-[0.8rem] font-normal\",\n          defaultClassNames.weekday\n        ),\n        week: cn(\"mt-2 flex w-full\", defaultClassNames.week),\n        week_number_header: cn(\n          \"w-[--cell-size] select-none\",\n          defaultClassNames.week_number_header\n        ),\n        week_number: cn(\n          \"text-muted-foreground select-none text-[0.8rem]\",\n          defaultClassNames.week_number\n        ),\n        day: cn(\n          \"group/day relative aspect-square h-full w-full select-none p-0 text-center [&:first-child[data-selected=true]_button]:rounded-l-md [&:last-child[data-selected=true]_button]:rounded-r-md\",\n          defaultClassNames.day\n        ),\n        range_start: cn(\n          \"bg-accent rounded-l-md\",\n          defaultClassNames.range_start\n        ),\n        range_middle: cn(\"rounded-none\", defaultClassNames.range_middle),\n        range_end: cn(\"bg-accent rounded-r-md\", defaultClassNames.range_end),\n        today: cn(\n          \"bg-accent text-accent-foreground rounded-md data-[selected=true]:rounded-none\",\n          defaultClassNames.today\n        ),\n        outside: cn(\n          \"text-muted-foreground aria-selected:text-muted-foreground\",\n          defaultClassNames.outside\n        ),\n        disabled: cn(\n          \"text-muted-foreground opacity-50\",\n          defaultClassNames.disabled\n        ),\n        hidden: cn(\"invisible\", defaultClassNames.hidden),\n        ...classNames,\n      }}\n      components={{\n        Root: ({ className, rootRef, ...props }) => {\n          return (\n            <div\n              data-slot=\"calendar\"\n              ref={rootRef}\n              className={cn(className)}\n              {...props}\n            />\n          )\n        },\n        Chevron: ({ className, orientation, ...props }) => {\n          if (orientation === \"left\") {\n            return (\n              <ChevronLeftIcon className={cn(\"size-4\", className)} {...props} />\n            )\n          }\n\n          if (orientation === \"right\") {\n            return (\n              <ChevronRightIcon\n                className={cn(\"size-4\", className)}\n                {...props}\n              />\n            )\n          }\n\n          return (\n            <ChevronDownIcon className={cn(\"size-4\", className)} {...props} />\n          )\n        },\n        DayButton: CalendarDayButton,\n        WeekNumber: ({ children, ...props }) => {\n          return (\n            <td {...props}>\n              <div className=\"flex size-[--cell-size] items-center justify-center text-center\">\n                {children}\n              </div>\n            </td>\n          )\n        },\n        ...components,\n      }}\n      {...props}\n    />\n  )\n}\n\nfunction CalendarDayButton({\n  className,\n  day,\n  modifiers,\n  ...props\n}: React.ComponentProps<typeof DayButton>) {\n  const defaultClassNames = getDefaultClassNames()\n\n  const ref = React.useRef<HTMLButtonElement>(null)\n  React.useEffect(() => {\n    if (modifiers.focused) ref.current?.focus()\n  }, [modifiers.focused])\n\n  return (\n    <Button\n      ref={ref}\n      variant=\"ghost\"\n      size=\"icon\"\n      data-day={day.date.toLocaleDateString()}\n      data-selected-single={\n        modifiers.selected &&\n        !modifiers.range_start &&\n        !modifiers.range_end &&\n        !modifiers.range_middle\n      }\n      data-range-start={modifiers.range_start}\n      data-range-end={modifiers.range_end}\n      data-range-middle={modifiers.range_middle}\n      className={cn(\n        \"data-[selected-single=true]:bg-primary data-[selected-single=true]:text-primary-foreground data-[range-middle=true]:bg-accent data-[range-middle=true]:text-accent-foreground data-[range-start=true]:bg-primary data-[range-start=true]:text-primary-foreground data-[range-end=true]:bg-primary data-[range-end=true]:text-primary-foreground group-data-[focused=true]/day:border-ring group-data-[focused=true]/day:ring-ring/50 flex aspect-square h-auto w-full min-w-[--cell-size] flex-col gap-1 font-normal leading-none data-[range-end=true]:rounded-md data-[range-middle=true]:rounded-none data-[range-start=true]:rounded-md group-data-[focused=true]/day:relative group-data-[focused=true]/day:z-10 group-data-[focused=true]/day:ring-[3px] [&>span]:text-xs [&>span]:opacity-70\",\n        defaultClassNames.day,\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Calendar, CalendarDayButton }\n","import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","import React, { useState, useEffect } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '../../components/ui/card';\nimport { Badge } from '../../components/ui/badge';\nimport { Button } from '../../components/ui/button';\nimport { Input } from '../../components/ui/input';\nimport { Label } from '../../components/ui/label';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '../../components/ui/select';\nimport { Dialog, DialogContent, DialogDescription, DialogFooter, DialogHeader, DialogTitle, DialogTrigger } from '../../components/ui/dialog';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '../../components/ui/table';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '../../components/ui/tabs';\nimport { Calendar } from '../../components/ui/calendar';\nimport { Popover, PopoverContent, PopoverTrigger } from '../../components/ui/popover';\nimport {\n  Calendar as CalendarIcon,\n  Clock,\n  MapPin,\n  Truck,\n  User,\n  Route,\n  Plus,\n  Edit,\n  Trash2,\n  Navigation,\n  AlertCircle,\n  CheckCircle,\n  Timer,\n  Users,\n  Phone,\n  Map\n} from 'lucide-react';\n// Removed date-fns dependency - using native Date methods\n\n// Define PickupStatus type locally since the interface uses a different format\ntype PickupStatus = 'SCHEDULED' | 'IN_TRANSIT' | 'COLLECTED' | 'CANCELLED';\ninterface PickupSchedule {\n  id: string;\n  farmerId: string;\n  farmerName: string;\n  location: string;\n  scheduledDate: string;\n  scheduledTime: string;\n  assignedWorker: string;\n  vehicleId: string;\n  priority: string;\n  notes: string;\n  status: 'scheduled' | 'inProgress' | 'completed' | 'delayed' | 'cancelled';\n  estimatedDuration?: number;\n  estimatedDistance?: number;\n}\n\n// Mock data\nconst schedules: PickupSchedule[] = [\n  {\n    id: 'SCH-001',\n    farmerId: 'FARM-001',\n    farmerName: 'राम कुमार',\n    location: 'Village A, District B',\n    scheduledDate: new Date().toISOString(),\n    scheduledTime: '09:00',\n    assignedWorker: 'W001',\n    vehicleId: 'V001',\n    priority: 'high',\n    notes: 'Regular pickup',\n    status: 'scheduled',\n    estimatedDuration: 45,\n    estimatedDistance: 12.5\n  },\n  {\n    id: 'SCH-002',\n    farmerId: 'FARM-002',\n    farmerName: 'श्याम यादव',\n    location: 'Village C, District B',\n    scheduledDate: new Date(Date.now() + 86400000).toISOString(),\n    scheduledTime: '10:30',\n    assignedWorker: 'W002',\n    vehicleId: 'V002',\n    priority: 'medium',\n    notes: 'Buffalo dung collection',\n    status: 'scheduled',\n    estimatedDuration: 30,\n    estimatedDistance: 8.2\n  }\n];\n\n// Mock functions\nconst createSchedule = async (data: Partial<PickupSchedule>) => {\n  console.log('Creating schedule:', data);\n  return Promise.resolve();\n};\n\nconst updateSchedule = async (id: string, data: Partial<PickupSchedule>) => {\n  console.log('Updating schedule:', id, data);\n  return Promise.resolve();\n};\n\nconst deleteSchedule = async (id: string) => {\n  console.log('Deleting schedule:', id);\n  return Promise.resolve();\n};\n\n\ninterface PickupSchedulerProps {\n  languageContext?: {\n    language: 'hi' | 'en';\n    t: (key: string) => string;\n  };\n}\n\nconst translations = {\n  en: {\n    title: 'Pickup Scheduler',\n    subtitle: 'Route planning and farmer assignment management',\n    createSchedule: 'Create Schedule',\n    editSchedule: 'Edit Schedule',\n    deleteSchedule: 'Delete Schedule',\n    scheduleList: 'Schedule List',\n    routeOptimization: 'Route Optimization',\n    farmerAssignments: 'Farmer Assignments',\n    todaysPickups: 'Today\\'s Pickups',\n    upcomingSchedules: 'Upcoming Schedules',\n    routeHistory: 'Route History',\n    farmerId: 'Farmer ID',\n    farmerName: 'Farmer Name',\n    location: 'Location',\n    scheduledTime: 'Scheduled Time',\n    estimatedDuration: 'Est. Duration',\n    status: 'Status',\n    assignedWorker: 'Assigned Worker',\n    vehicleId: 'Vehicle ID',\n    priority: 'Priority',\n    notes: 'Notes',\n    actions: 'Actions',\n    create: 'Create',\n    update: 'Update',\n    cancel: 'Cancel',\n    delete: 'Delete',\n    scheduled: 'Scheduled',\n    inProgress: 'In Progress',\n    completed: 'Completed',\n    delayed: 'Delayed',\n    cancelled: 'Cancelled',\n    high: 'High',\n    medium: 'Medium',\n    low: 'Low',\n    selectDate: 'Select date',\n    selectTime: 'Select time',\n    selectWorker: 'Select worker',\n    selectVehicle: 'Select vehicle',\n    optimizeRoute: 'Optimize Route',\n    viewMap: 'View Map',\n    contactFarmer: 'Contact Farmer',\n    estimatedTime: 'ETA',\n    distance: 'Distance',\n    totalDistance: 'Total Distance',\n    totalDuration: 'Total Duration',\n    numberOfStops: 'Number of Stops',\n    efficiency: 'Route Efficiency'\n  },\n  hi: {\n    title: 'पिकअप शेड्यूलर',\n    subtitle: 'रूट प्लानिंग और किसान असाइनमेंट प्रबंधन',\n    createSchedule: 'शेड्यूल बनाएं',\n    editSchedule: 'शेड्यूल संपादित करें',\n    deleteSchedule: 'शेड्यूल हटाएं',\n    scheduleList: 'शेड्यूल सूची',\n    routeOptimization: 'रूट ऑप्टिमाइज़ेशन',\n    farmerAssignments: 'किसान असाइनमेंट',\n    todaysPickups: 'आज के पिकअप',\n    upcomingSchedules: 'आने वाले शेड्यूल',\n    routeHistory: 'रूट इतिहास',\n    farmerId: 'किसान आईडी',\n    farmerName: 'किसान का नाम',\n    location: 'स्थान',\n    scheduledTime: 'निर्धारित समय',\n    estimatedDuration: 'अनुमानित अवधि',\n    status: 'स्थिति',\n    assignedWorker: 'असाइन किया गया कार्यकर्ता',\n    vehicleId: 'वाहन आईडी',\n    priority: 'प्राथमिकता',\n    notes: 'टिप्पणियां',\n    actions: 'कार्य',\n    create: 'बनाएं',\n    update: 'अपडेट करें',\n    cancel: 'रद्द करें',\n    delete: 'हटाएं',\n    scheduled: 'निर्धारित',\n    inProgress: 'प्रगति में',\n    completed: 'पूर्ण',\n    delayed: 'विलंबित',\n    cancelled: 'रद्द',\n    high: 'उच्च',\n    medium: 'मध्यम',\n    low: 'निम्न',\n    selectDate: 'दिनांक चुनें',\n    selectTime: 'समय चुनें',\n    selectWorker: 'कार्यकर्ता चुनें',\n    selectVehicle: 'वाहन चुनें',\n    optimizeRoute: 'रूट ऑप्टिमाइज़ करें',\n    viewMap: 'मैप देखें',\n    contactFarmer: 'किसान से संपर्क करें',\n    estimatedTime: 'अनुमानित पहुंच समय',\n    distance: 'दूरी',\n    totalDistance: 'कुल दूरी',\n    totalDuration: 'कुल अवधि',\n    numberOfStops: 'स्टॉप की संख्या',\n    efficiency: 'रूट दक्षता'\n  }\n};\n\nconst getStatusColor = (status: PickupStatus): string => {\n  switch (status) {\n    case 'scheduled':\n      return 'bg-blue-100 text-blue-800';\n    case 'inProgress':\n      return 'bg-yellow-100 text-yellow-800';\n    case 'completed':\n      return 'bg-green-100 text-green-800';\n    case 'delayed':\n      return 'bg-orange-100 text-orange-800';\n    case 'cancelled':\n      return 'bg-red-100 text-red-800';\n    default:\n      return 'bg-gray-100 text-gray-800';\n  }\n};\n\nconst getPriorityColor = (priority: string): string => {\n  switch (priority) {\n    case 'high':\n      return 'bg-red-100 text-red-800';\n    case 'medium':\n      return 'bg-yellow-100 text-yellow-800';\n    case 'low':\n      return 'bg-green-100 text-green-800';\n    default:\n      return 'bg-gray-100 text-gray-800';\n  }\n};\n\nconst getStatusIcon = (status: PickupStatus) => {\n  switch (status) {\n    case 'scheduled':\n      return <Clock className=\"w-4 h-4\" />;\n    case 'inProgress':\n      return <Truck className=\"w-4 h-4\" />;\n    case 'completed':\n      return <CheckCircle className=\"w-4 h-4\" />;\n    case 'delayed':\n      return <AlertCircle className=\"w-4 h-4\" />;\n    case 'cancelled':\n      return <AlertCircle className=\"w-4 h-4\" />;\n    default:\n      return <Clock className=\"w-4 h-4\" />;\n  }\n};\n\nconst ScheduleForm: React.FC<{\n  schedule?: PickupSchedule;\n  onSubmit: (data: Partial<PickupSchedule>) => void;\n  onCancel: () => void;\n  t: (key: string) => string;\n}> = ({ schedule, onSubmit, onCancel, t }) => {\n  const [formData, setFormData] = useState({\n    farmerId: schedule?.farmerId || '',\n    farmerName: schedule?.farmerName || '',\n    location: schedule?.location || '',\n    scheduledDate: schedule?.scheduledDate ? new Date(schedule.scheduledDate) : new Date(),\n    scheduledTime: schedule?.scheduledTime || '',\n    assignedWorker: schedule?.assignedWorker || '',\n    vehicleId: schedule?.vehicleId || '',\n    priority: schedule?.priority || 'medium',\n    notes: schedule?.notes || ''\n  });\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    onSubmit({\n      ...formData,\n      scheduledDate: formData.scheduledDate.toISOString()\n    });\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"space-y-4\">\n      <div className=\"grid grid-cols-2 gap-4\">\n        <div className=\"space-y-2\">\n          <Label htmlFor=\"farmerId\">{t('farmerId')}</Label>\n          <Input\n            id=\"farmerId\"\n            value={formData.farmerId}\n            onChange={(e) => setFormData(prev => ({ ...prev, farmerId: e.target.value }))}\n            placeholder=\"FARM-001\"\n            required\n          />\n        </div>\n        <div className=\"space-y-2\">\n          <Label htmlFor=\"farmerName\">{t('farmerName')}</Label>\n          <Input\n            id=\"farmerName\"\n            value={formData.farmerName}\n            onChange={(e) => setFormData(prev => ({ ...prev, farmerName: e.target.value }))}\n            placeholder=\"Farmer name\"\n            required\n          />\n        </div>\n      </div>\n\n      <div className=\"space-y-2\">\n        <Label htmlFor=\"location\">{t('location')}</Label>\n        <Input\n          id=\"location\"\n          value={formData.location}\n          onChange={(e) => setFormData(prev => ({ ...prev, location: e.target.value }))}\n          placeholder=\"Village, District\"\n          required\n        />\n      </div>\n\n      <div className=\"grid grid-cols-2 gap-4\">\n        <div className=\"space-y-2\">\n          <Label>{t('selectDate')}</Label>\n          <Popover>\n            <PopoverTrigger asChild>\n              <Button variant=\"outline\" className=\"w-full justify-start text-left font-normal\">\n                <CalendarIcon className=\"mr-2 h-4 w-4\" />\n                {formData.scheduledDate.toLocaleDateString()}\n              </Button>\n            </PopoverTrigger>\n            <PopoverContent className=\"w-auto p-0\">\n              <Calendar\n                mode=\"single\"\n                selected={formData.scheduledDate}\n                onSelect={(date) => date && setFormData(prev => ({ ...prev, scheduledDate: date }))}\n                initialFocus\n              />\n            </PopoverContent>\n          </Popover>\n        </div>\n        <div className=\"space-y-2\">\n          <Label htmlFor=\"scheduledTime\">{t('selectTime')}</Label>\n          <Input\n            id=\"scheduledTime\"\n            type=\"time\"\n            value={formData.scheduledTime}\n            onChange={(e) => setFormData(prev => ({ ...prev, scheduledTime: e.target.value }))}\n            required\n          />\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-2 gap-4\">\n        <div className=\"space-y-2\">\n          <Label htmlFor=\"assignedWorker\">{t('selectWorker')}</Label>\n          <Select value={formData.assignedWorker} onValueChange={(value) => setFormData(prev => ({ ...prev, assignedWorker: value }))}>\n            <SelectTrigger>\n              <SelectValue placeholder=\"Select worker\" />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"W001\">राजेश कुमार</SelectItem>\n              <SelectItem value=\"W002\">सुनील यादव</SelectItem>\n              <SelectItem value=\"W003\">अमित शर्मा</SelectItem>\n            </SelectContent>\n          </Select>\n        </div>\n        <div className=\"space-y-2\">\n          <Label htmlFor=\"vehicleId\">{t('selectVehicle')}</Label>\n          <Select value={formData.vehicleId} onValueChange={(value) => setFormData(prev => ({ ...prev, vehicleId: value }))}>\n            <SelectTrigger>\n              <SelectValue placeholder=\"Select vehicle\" />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"V001\">Truck - RJ14-AB-1234</SelectItem>\n              <SelectItem value=\"V002\">Van - RJ14-CD-5678</SelectItem>\n              <SelectItem value=\"V003\">Pickup - RJ14-EF-9012</SelectItem>\n            </SelectContent>\n          </Select>\n        </div>\n      </div>\n\n      <div className=\"space-y-2\">\n        <Label htmlFor=\"priority\">{t('priority')}</Label>\n        <Select value={formData.priority} onValueChange={(value) => setFormData(prev => ({ ...prev, priority: value }))}>\n          <SelectTrigger>\n            <SelectValue />\n          </SelectTrigger>\n          <SelectContent>\n            <SelectItem value=\"high\">{t('high')}</SelectItem>\n            <SelectItem value=\"medium\">{t('medium')}</SelectItem>\n            <SelectItem value=\"low\">{t('low')}</SelectItem>\n          </SelectContent>\n        </Select>\n      </div>\n\n      <div className=\"space-y-2\">\n        <Label htmlFor=\"notes\">{t('notes')}</Label>\n        <Input\n          id=\"notes\"\n          value={formData.notes}\n          onChange={(e) => setFormData(prev => ({ ...prev, notes: e.target.value }))}\n          placeholder=\"Additional notes...\"\n        />\n      </div>\n\n      <DialogFooter>\n        <Button type=\"button\" variant=\"outline\" onClick={onCancel}>\n          {t('cancel')}\n        </Button>\n        <Button type=\"submit\">\n          {schedule ? t('update') : t('create')}\n        </Button>\n      </DialogFooter>\n    </form>\n  );\n};\n\nexport const PickupScheduler: React.FC<PickupSchedulerProps> = ({ languageContext }) => {\n  const [isCreateDialogOpen, setIsCreateDialogOpen] = useState(false);\n  const [editingSchedule, setEditingSchedule] = useState<PickupSchedule | null>(null);\n  const [deletingSchedule, setDeletingSchedule] = useState<PickupSchedule | null>(null);\n\n  const lang = languageContext?.language || 'en';\n  const t = (key: string): string => {\n    return languageContext?.t(key) || translations[lang][key as keyof typeof translations[typeof lang]] || key;\n  };\n\n  const handleCreateSchedule = async (data: Partial<PickupSchedule>) => {\n    await createSchedule(data);\n    setIsCreateDialogOpen(false);\n  };\n\n  const handleUpdateSchedule = async (data: Partial<PickupSchedule>) => {\n    if (editingSchedule) {\n      await updateSchedule(editingSchedule.id, data);\n      setEditingSchedule(null);\n    }\n  };\n\n  const handleDeleteSchedule = async () => {\n    if (deletingSchedule) {\n      await deleteSchedule(deletingSchedule.id);\n      setDeletingSchedule(null);\n    }\n  };\n\n  const todaysSchedules = schedules.filter(s =>\n    new Date(s.scheduledDate).toDateString() === new Date().toDateString()\n  );\n  const upcomingSchedules = schedules.filter(s =>\n    new Date(s.scheduledDate) > new Date() &&\n    new Date(s.scheduledDate).toDateString() !== new Date().toDateString()\n  );\n  const inProgressSchedules = schedules.filter(s => s.status === 'inProgress');\n  const completedSchedules = schedules.filter(s => s.status === 'completed');\n\n  const totalDistance = schedules.reduce((sum, s) => sum + (s.estimatedDistance || 0), 0);\n  const averageEfficiency = schedules.length > 0 ?\n    (completedSchedules.length / schedules.length) * 100 : 0;\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between -mt-6\">\n        <div>\n          <h1 className=\"text-3xl font-bold tracking-tight\">{t('title')}</h1>\n          <p className=\"text-muted-foreground\">{t('subtitle')}</p>\n        </div>\n        <div className=\"flex gap-2\">\n          <Button variant=\"outline\" className=\"gap-2\">\n            <Route className=\"w-4 h-4\" />\n            {t('optimizeRoute')}\n          </Button>\n          <Dialog open={isCreateDialogOpen} onOpenChange={setIsCreateDialogOpen}>\n            <DialogTrigger asChild>\n              <Button className=\"gap-2\">\n                <Plus className=\"w-4 h-4\" />\n                {t('createSchedule')}\n              </Button>\n            </DialogTrigger>\n            <DialogContent className=\"sm:max-w-[500px]\">\n              <DialogHeader>\n                <DialogTitle>{t('createSchedule')}</DialogTitle>\n                <DialogDescription>\n                  Create a new pickup schedule for farmer dung collection\n                </DialogDescription>\n              </DialogHeader>\n              <ScheduleForm\n                onSubmit={handleCreateSchedule}\n                onCancel={() => setIsCreateDialogOpen(false)}\n                t={t}\n              />\n            </DialogContent>\n          </Dialog>\n        </div>\n      </div>\n\n      {/* Statistics Cards */}\n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">{t('todaysPickups')}</CardTitle>\n            <Clock className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{todaysSchedules.length}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              {inProgressSchedules.length} in progress\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Active Routes</CardTitle>\n            <Truck className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{inProgressSchedules.length}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              Workers on field\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">{t('totalDistance')}</CardTitle>\n            <Navigation className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{totalDistance.toFixed(1)} km</div>\n            <p className=\"text-xs text-muted-foreground\">\n              Total planned distance\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">{t('efficiency')}</CardTitle>\n            <CheckCircle className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{averageEfficiency.toFixed(1)}%</div>\n            <p className=\"text-xs text-muted-foreground\">\n              Completion rate\n            </p>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Main Content */}\n      <Tabs defaultValue=\"today\" className=\"space-y-6\">\n        <TabsList className=\"grid w-full grid-cols-4\">\n          <TabsTrigger value=\"today\">{t('todaysPickups')}</TabsTrigger>\n          <TabsTrigger value=\"upcoming\">{t('upcomingSchedules')}</TabsTrigger>\n          <TabsTrigger value=\"routes\">{t('routeOptimization')}</TabsTrigger>\n          <TabsTrigger value=\"assignments\">{t('farmerAssignments')}</TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"today\">\n          <Card>\n            <CardHeader>\n              <CardTitle>{t('todaysPickups')}</CardTitle>\n              <CardDescription>\n                Today's scheduled pickups and their current status\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <Table>\n                <TableHeader>\n                  <TableRow>\n                    <TableHead>{t('farmerName')}</TableHead>\n                    <TableHead>{t('location')}</TableHead>\n                    <TableHead>{t('scheduledTime')}</TableHead>\n                    <TableHead>{t('status')}</TableHead>\n                    <TableHead>{t('assignedWorker')}</TableHead>\n                    <TableHead>{t('estimatedTime')}</TableHead>\n                    <TableHead>{t('actions')}</TableHead>\n                  </TableRow>\n                </TableHeader>\n                <TableBody>\n                  {todaysSchedules.map((schedule) => (\n                    <TableRow key={schedule.id}>\n                      <TableCell className=\"font-medium\">\n                        <div className=\"flex items-center gap-2\">\n                          <User className=\"w-4 h-4\" />\n                          {schedule.farmerName}\n                        </div>\n                      </TableCell>\n                      <TableCell>\n                        <div className=\"flex items-center gap-2\">\n                          <MapPin className=\"w-4 h-4\" />\n                          {schedule.location}\n                        </div>\n                      </TableCell>\n                      <TableCell>{schedule.scheduledTime}</TableCell>\n                      <TableCell>\n                        <Badge className={getStatusColor(schedule.status)}>\n                          <div className=\"flex items-center gap-1\">\n                            {getStatusIcon(schedule.status)}\n                            {t(schedule.status)}\n                          </div>\n                        </Badge>\n                      </TableCell>\n                      <TableCell>{schedule.assignedWorker}</TableCell>\n                      <TableCell>\n                        {schedule.estimatedDuration ? `${schedule.estimatedDuration} min` : 'N/A'}\n                      </TableCell>\n                      <TableCell>\n                        <div className=\"flex gap-2\">\n                          <Button size=\"sm\" variant=\"outline\">\n                            <Map className=\"w-4 h-4\" />\n                          </Button>\n                          <Button size=\"sm\" variant=\"outline\">\n                            <Phone className=\"w-4 h-4\" />\n                          </Button>\n                          <Button\n                            size=\"sm\"\n                            variant=\"outline\"\n                            onClick={() => setEditingSchedule(schedule)}\n                          >\n                            <Edit className=\"w-4 h-4\" />\n                          </Button>\n                        </div>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n              {todaysSchedules.length === 0 && (\n                <div className=\"text-center py-8 text-muted-foreground\">\n                  <Clock className=\"w-12 h-12 mx-auto mb-2\" />\n                  <p>No pickups scheduled for today</p>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"upcoming\">\n          <Card>\n            <CardHeader>\n              <CardTitle>{t('upcomingSchedules')}</CardTitle>\n              <CardDescription>\n                Scheduled pickups for the coming days\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-4\">\n                {upcomingSchedules.map((schedule) => (\n                  <div key={schedule.id} className=\"flex items-center justify-between p-4 border rounded-lg\">\n                    <div className=\"space-y-1\">\n                      <div className=\"flex items-center gap-4\">\n                        <h4 className=\"font-semibold\">{schedule.farmerName}</h4>\n                        <Badge className={getPriorityColor(schedule.priority)}>\n                          {t(schedule.priority)}\n                        </Badge>\n                      </div>\n                      <div className=\"flex items-center gap-4 text-sm text-muted-foreground\">\n                        <span className=\"flex items-center gap-1\">\n                          <MapPin className=\"w-3 h-3\" />\n                          {schedule.location}\n                        </span>\n                        <span className=\"flex items-center gap-1\">\n                          <CalendarIcon className=\"w-3 h-3\" />\n                          {new Date(schedule.scheduledDate).toLocaleDateString()}\n                        </span>\n                        <span className=\"flex items-center gap-1\">\n                          <Clock className=\"w-3 h-3\" />\n                          {schedule.scheduledTime}\n                        </span>\n                      </div>\n                    </div>\n                    <div className=\"flex items-center gap-2\">\n                      <Badge className={getStatusColor(schedule.status)}>\n                        {t(schedule.status)}\n                      </Badge>\n                      <Button size=\"sm\" variant=\"outline\" onClick={() => setEditingSchedule(schedule)}>\n                        <Edit className=\"w-4 h-4\" />\n                      </Button>\n                      <Button size=\"sm\" variant=\"outline\" onClick={() => setDeletingSchedule(schedule)}>\n                        <Trash2 className=\"w-4 h-4\" />\n                      </Button>\n                    </div>\n                  </div>\n                ))}\n                {upcomingSchedules.length === 0 && (\n                  <div className=\"text-center py-8 text-muted-foreground\">\n                    <CalendarIcon className=\"w-12 h-12 mx-auto mb-2\" />\n                    <p>No upcoming schedules</p>\n                  </div>\n                )}\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"routes\">\n          <div className=\"grid gap-6 lg:grid-cols-2\">\n            <Card>\n              <CardHeader>\n                <CardTitle>{t('routeOptimization')}</CardTitle>\n                <CardDescription>\n                  Optimize pickup routes for maximum efficiency\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-4\">\n                  <div className=\"grid grid-cols-2 gap-4\">\n                    <div className=\"text-center p-4 border rounded-lg\">\n                      <div className=\"text-2xl font-bold text-blue-600\">{schedules.length}</div>\n                      <div className=\"text-sm text-muted-foreground\">{t('numberOfStops')}</div>\n                    </div>\n                    <div className=\"text-center p-4 border rounded-lg\">\n                      <div className=\"text-2xl font-bold text-green-600\">{totalDistance.toFixed(1)} km</div>\n                      <div className=\"text-sm text-muted-foreground\">{t('totalDistance')}</div>\n                    </div>\n                  </div>\n                  <Button className=\"w-full gap-2\">\n                    <Route className=\"w-4 h-4\" />\n                    {t('optimizeRoute')}\n                  </Button>\n                </div>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader>\n                <CardTitle>Route Efficiency</CardTitle>\n                <CardDescription>\n                  Current route performance metrics\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-4\">\n                  <div className=\"space-y-2\">\n                    <div className=\"flex justify-between text-sm\">\n                      <span>Completion Rate</span>\n                      <span>{averageEfficiency.toFixed(1)}%</span>\n                    </div>\n                    <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                      <div\n                        className=\"bg-green-600 h-2 rounded-full\"\n                        style={{ width: `${averageEfficiency}%` }}\n                      ></div>\n                    </div>\n                  </div>\n                  <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                    <div>\n                      <span className=\"text-muted-foreground\">Avg. Duration:</span>\n                      <span className=\"ml-2 font-medium\">45 min</span>\n                    </div>\n                    <div>\n                      <span className=\"text-muted-foreground\">Fuel Efficiency:</span>\n                      <span className=\"ml-2 font-medium\">12 km/L</span>\n                    </div>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"assignments\">\n          <Card>\n            <CardHeader>\n              <CardTitle>{t('farmerAssignments')}</CardTitle>\n              <CardDescription>\n                Manage farmer-worker assignments and contact information\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-4\">\n                {schedules.slice(0, 10).map((schedule) => (\n                  <div key={schedule.id} className=\"flex items-center justify-between p-4 border rounded-lg\">\n                    <div className=\"space-y-1\">\n                      <div className=\"flex items-center gap-4\">\n                        <div className=\"flex items-center gap-2\">\n                          <User className=\"w-4 h-4\" />\n                          <span className=\"font-semibold\">{schedule.farmerName}</span>\n                        </div>\n                        <span className=\"text-sm text-muted-foreground\">({schedule.farmerId})</span>\n                      </div>\n                      <div className=\"flex items-center gap-4 text-sm text-muted-foreground\">\n                        <span className=\"flex items-center gap-1\">\n                          <MapPin className=\"w-3 h-3\" />\n                          {schedule.location}\n                        </span>\n                        <span className=\"flex items-center gap-1\">\n                          <Users className=\"w-3 h-3\" />\n                          {schedule.assignedWorker}\n                        </span>\n                      </div>\n                    </div>\n                    <div className=\"flex items-center gap-2\">\n                      <Button size=\"sm\" variant=\"outline\">\n                        <Phone className=\"w-4 h-4\" />\n                      </Button>\n                      <Button size=\"sm\" variant=\"outline\">\n                        <MapPin className=\"w-4 h-4\" />\n                      </Button>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n\n      {/* Edit Dialog */}\n      <Dialog open={!!editingSchedule} onOpenChange={() => setEditingSchedule(null)}>\n        <DialogContent className=\"sm:max-w-[500px]\">\n          <DialogHeader>\n            <DialogTitle>{t('editSchedule')}</DialogTitle>\n            <DialogDescription>\n              Update schedule information and assignments\n            </DialogDescription>\n          </DialogHeader>\n          {editingSchedule && (\n            <ScheduleForm\n              schedule={editingSchedule}\n              onSubmit={handleUpdateSchedule}\n              onCancel={() => setEditingSchedule(null)}\n              t={t}\n            />\n          )}\n        </DialogContent>\n      </Dialog>\n\n      {/* Delete Dialog */}\n      <Dialog open={!!deletingSchedule} onOpenChange={() => setDeletingSchedule(null)}>\n        <DialogContent>\n          <DialogHeader>\n            <DialogTitle>{t('deleteSchedule')}</DialogTitle>\n            <DialogDescription>\n              Are you sure you want to delete this pickup schedule? This action cannot be undone.\n            </DialogDescription>\n          </DialogHeader>\n          <DialogFooter>\n            <Button variant=\"outline\" onClick={() => setDeletingSchedule(null)}>\n              {t('cancel')}\n            </Button>\n            <Button variant=\"destructive\" onClick={handleDeleteSchedule}>\n              {t('delete')}\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default PickupScheduler;","import React, { useState, useRef, useCallback } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '../../components/ui/card';\nimport { Badge } from '../../components/ui/badge';\nimport { Button } from '../../components/ui/button';\nimport { Input } from '../../components/ui/input';\nimport { Label } from '../../components/ui/label';\nimport { Textarea } from '../../components/ui/textarea';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '../../components/ui/select';\nimport { Alert, AlertDescription } from '../../components/ui/alert';\nimport { Progress } from '../../components/ui/progress';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '../../components/ui/tabs';\nimport {\n  Camera,\n  Scale,\n  Upload,\n  CheckCircle,\n  AlertCircle,\n  Clock,\n  User,\n  MapPin,\n  Truck,\n  Save,\n  RefreshCw,\n  FileImage,\n  Download,\n  Eye,\n  Calendar,\n  Weight,\n  QrCode,\n  Smartphone,\n  Shield,\n  TrendingUp,\n  CreditCard,\n  Receipt,\n  Verified\n} from 'lucide-react';\n\n// Enhanced types for TransactionEntry with IoT verification\ntype TransactionStatus = 'pending' | 'completed' | 'cancelled' | 'verified' | 'quality_check' | 'payment_pending';\ntype PaymentMethod = 'cash' | 'online' | 'bank_transfer' | 'upi';\ntype PaymentStatus = 'pending' | 'partial' | 'completed' | 'failed' | 'cancelled';\ntype QualityVerificationStatus = 'pending' | 'approved' | 'rejected' | 'requires_recheck';\n\ninterface IoTVerificationData {\n  deviceId: string;\n  deviceName: string;\n  timestamp: string;\n  temperature: number;\n  humidity: number;\n  ph_level: number;\n  gas_content: number;\n  rfid_tag: string;\n  gps_coordinates: string;\n  verification_score: number;\n  sensor_readings: {\n    weight_sensor: number;\n    quality_sensor: number;\n    moisture_sensor: number;\n  };\n}\n\ninterface BatchReference {\n  batchId: string;\n  digesterId: string;\n  expectedYield: number;\n  fermentationDays: number;\n  qualityPrediction: string;\n}\n\ninterface TransactionData {\n  id: string;\n  farmerId: string;\n  farmerName: string;\n  farmerAadhaar: string;\n  location: string;\n  phoneNumber: string;\n  dungType: string;\n  measuredWeight: number;\n  qualityGrade: string;\n  moistureContent: number;\n  paymentMethod: PaymentMethod;\n  paymentStatus: PaymentStatus;\n  ratePerKg: number;\n  totalAmount: number;\n  advanceAmount: number;\n  balanceAmount: number;\n  notes: string;\n  photos: string[];\n  measurementDate: string;\n  collectionDate: string;\n  status: TransactionStatus;\n  qualityVerificationStatus: QualityVerificationStatus;\n  iotVerification: IoTVerificationData;\n  batchReference: BatchReference;\n  transportDetails: {\n    vehicleNumber: string;\n    driverName: string;\n    routeId: string;\n    estimatedDelivery: string;\n  };\n  inspector: {\n    name: string;\n    id: string;\n    signature: boolean;\n  };\n  certificates: string[];\n  verificationPhotos: string[];\n  qrCode: string;\n  receiptNumber: string;\n  gstDetails: {\n    gstNumber: string;\n    taxAmount: number;\n    cgst: number;\n    sgst: number;\n  };\n}\n\n// Enhanced comprehensive demo data with realistic Indian biogas operation scenarios\nconst transactions: TransactionData[] = [\n  {\n    id: 'TXN-2024-001',\n    farmerId: 'FARM-MH-001',\n    farmerName: 'राजेश कुमार शर्मा',\n    farmerAadhaar: '****-****-2156',\n    location: 'गोकुल गौशाला, मथुरा, उत्तर प्रदेश',\n    phoneNumber: '+91 98765 43210',\n    dungType: 'cow',\n    measuredWeight: 52.8,\n    qualityGrade: 'gradeA',\n    moistureContent: 12,\n    paymentMethod: 'upi',\n    paymentStatus: 'completed',\n    ratePerKg: 9.5,\n    totalAmount: 501.60,\n    advanceAmount: 250.00,\n    balanceAmount: 251.60,\n    notes: 'प्रीमियम गुणवत्ता गाय का गोबर। जैविक खाद से पोषित 18 गायों से संग्रह। श्रेष्ठ किण्वन क्षमता के साथ उच्च मीथेन सामग्री की अपेक्षा।',\n    photos: ['photo1.jpg', 'photo2.jpg', 'photo3.jpg'],\n    measurementDate: '2024-01-15T08:30:00Z',\n    collectionDate: '2024-01-15T09:00:00Z',\n    status: 'verified',\n    qualityVerificationStatus: 'approved',\n    iotVerification: {\n      deviceId: 'IOT-SCALE-001',\n      deviceName: 'Smart Scale Alpha-1',\n      timestamp: '2024-01-15T08:32:15Z',\n      temperature: 28.5,\n      humidity: 65,\n      ph_level: 7.2,\n      gas_content: 68.5,\n      rfid_tag: 'RFID-001-ABC123',\n      gps_coordinates: '27.4924, 77.6737',\n      verification_score: 95.8,\n      sensor_readings: {\n        weight_sensor: 52.8,\n        quality_sensor: 94.2,\n        moisture_sensor: 12.1\n      }\n    },\n    batchReference: {\n      batchId: 'BATCH-2024-001',\n      digesterId: 'DIG-MAIN-001',\n      expectedYield: 42.5,\n      fermentationDays: 28,\n      qualityPrediction: 'excellent'\n    },\n    transportDetails: {\n      vehicleNumber: 'UP-80-AB-1234',\n      driverName: 'मोहन यादव',\n      routeId: 'ROUTE-MTH-001',\n      estimatedDelivery: '2024-01-15T11:00:00Z'\n    },\n    inspector: {\n      name: 'डॉ. सुरेश गुप्ता',\n      id: 'INS-001',\n      signature: true\n    },\n    certificates: ['ORGANIC-CERT-001', 'QUALITY-CERT-001'],\n    verificationPhotos: ['verify1.jpg', 'verify2.jpg'],\n    qrCode: 'QR-TXN-2024-001-ABC123',\n    receiptNumber: 'RCP-2024-000001',\n    gstDetails: {\n      gstNumber: 'GST09ABCDE1234F1Z5',\n      taxAmount: 25.08,\n      cgst: 12.54,\n      sgst: 12.54\n    }\n  },\n  {\n    id: 'TXN-2024-002',\n    farmerId: 'FARM-UP-002',\n    farmerName: 'श्याम लाल यादव',\n    farmerAadhaar: '****-****-3487',\n    location: 'वृंदावन डेयरी फार्म, मथुरा',\n    phoneNumber: '+91 87654 32109',\n    dungType: 'buffalo',\n    measuredWeight: 48.3,\n    qualityGrade: 'gradeB',\n    moistureContent: 15,\n    paymentMethod: 'cash',\n    paymentStatus: 'pending',\n    ratePerKg: 8.5,\n    totalAmount: 410.55,\n    advanceAmount: 200.00,\n    balanceAmount: 210.55,\n    notes: 'भैंस का गोबर - उच्च नाइट्रोजन सामग्री। 12 भैंसों से दैनिक संग्रह। अगली डिलीवरी के समय भुगतान शेष।',\n    photos: ['photo4.jpg', 'photo5.jpg'],\n    measurementDate: '2024-01-14T16:45:00Z',\n    collectionDate: '2024-01-14T17:15:00Z',\n    status: 'payment_pending',\n    qualityVerificationStatus: 'approved',\n    iotVerification: {\n      deviceId: 'IOT-SCALE-002',\n      deviceName: 'Smart Scale Beta-2',\n      timestamp: '2024-01-14T16:47:22Z',\n      temperature: 26.8,\n      humidity: 72,\n      ph_level: 6.9,\n      gas_content: 62.3,\n      rfid_tag: 'RFID-002-DEF456',\n      gps_coordinates: '27.5204, 77.6839',\n      verification_score: 87.5,\n      sensor_readings: {\n        weight_sensor: 48.3,\n        quality_sensor: 85.6,\n        moisture_sensor: 15.2\n      }\n    },\n    batchReference: {\n      batchId: 'BATCH-2024-002',\n      digesterId: 'DIG-SEC-002',\n      expectedYield: 38.2,\n      fermentationDays: 30,\n      qualityPrediction: 'good'\n    },\n    transportDetails: {\n      vehicleNumber: 'UP-80-CD-5678',\n      driverName: 'राम प्रसाद',\n      routeId: 'ROUTE-VRN-001',\n      estimatedDelivery: '2024-01-14T19:00:00Z'\n    },\n    inspector: {\n      name: 'इंजी. अमित सिंह',\n      id: 'INS-002',\n      signature: true\n    },\n    certificates: ['QUALITY-CERT-002'],\n    verificationPhotos: ['verify3.jpg'],\n    qrCode: 'QR-TXN-2024-002-DEF456',\n    receiptNumber: 'RCP-2024-000002',\n    gstDetails: {\n      gstNumber: 'GST09ABCDE1234F1Z5',\n      taxAmount: 20.53,\n      cgst: 10.26,\n      sgst: 10.27\n    }\n  },\n  {\n    id: 'TXN-2024-003',\n    farmerId: 'FARM-RJ-003',\n    farmerName: 'गीता देवी',\n    farmerAadhaar: '****-****-5692',\n    location: 'आदर्श गौशाला, अलवर, राजस्थान',\n    phoneNumber: '+91 96543 21087',\n    dungType: 'mixed',\n    measuredWeight: 65.7,\n    qualityGrade: 'gradeA',\n    moistureContent: 10,\n    paymentMethod: 'bank_transfer',\n    paymentStatus: 'completed',\n    ratePerKg: 10.0,\n    totalAmount: 657.00,\n    advanceAmount: 300.00,\n    balanceAmount: 357.00,\n    notes: 'मिश्रित गोबर - गाय और भैंस का संयोजन। उत्कृष्ट किण्वन गुणवत्ता। सबसे बड़ी दैनिक आपूर्ति। 25 पशुओं से एकत्रित।',\n    photos: ['photo6.jpg', 'photo7.jpg', 'photo8.jpg', 'photo9.jpg'],\n    measurementDate: '2024-01-13T07:15:00Z',\n    collectionDate: '2024-01-13T07:45:00Z',\n    status: 'verified',\n    qualityVerificationStatus: 'approved',\n    iotVerification: {\n      deviceId: 'IOT-SCALE-003',\n      deviceName: 'Smart Scale Gamma-3',\n      timestamp: '2024-01-13T07:17:45Z',\n      temperature: 29.2,\n      humidity: 58,\n      ph_level: 7.4,\n      gas_content: 71.2,\n      rfid_tag: 'RFID-003-GHI789',\n      gps_coordinates: '27.5525, 76.6346',\n      verification_score: 97.2,\n      sensor_readings: {\n        weight_sensor: 65.7,\n        quality_sensor: 96.8,\n        moisture_sensor: 10.3\n      }\n    },\n    batchReference: {\n      batchId: 'BATCH-2024-003',\n      digesterId: 'DIG-MAIN-001',\n      expectedYield: 52.8,\n      fermentationDays: 25,\n      qualityPrediction: 'excellent'\n    },\n    transportDetails: {\n      vehicleNumber: 'RJ-14-EF-9012',\n      driverName: 'लखन सिंह',\n      routeId: 'ROUTE-ALW-001',\n      estimatedDelivery: '2024-01-13T10:30:00Z'\n    },\n    inspector: {\n      name: 'डॉ. प्रिया शर्मा',\n      id: 'INS-003',\n      signature: true\n    },\n    certificates: ['ORGANIC-CERT-002', 'QUALITY-CERT-003', 'ISO-CERT-001'],\n    verificationPhotos: ['verify4.jpg', 'verify5.jpg'],\n    qrCode: 'QR-TXN-2024-003-GHI789',\n    receiptNumber: 'RCP-2024-000003',\n    gstDetails: {\n      gstNumber: 'GST08FGHIJ5678K2A6',\n      taxAmount: 32.85,\n      cgst: 16.42,\n      sgst: 16.43\n    }\n  },\n  {\n    id: 'TXN-2024-004',\n    farmerId: 'FARM-HR-004',\n    farmerName: 'विक्रम सिंह',\n    farmerAadhaar: '****-****-7834',\n    location: 'हरियाणा डेयरी कोऑपरेटिव, गुरुग्राम',\n    phoneNumber: '+91 85432 10976',\n    dungType: 'cow',\n    measuredWeight: 42.1,\n    qualityGrade: 'gradeB',\n    moistureContent: 14,\n    paymentMethod: 'upi',\n    paymentStatus: 'partial',\n    ratePerKg: 8.75,\n    totalAmount: 368.37,\n    advanceAmount: 150.00,\n    balanceAmount: 218.37,\n    notes: 'देसी गाय का गोबर। जैविक चारा उपयोग। मध्यम गुणवत्ता लेकिन स्थिर आपूर्ति। 14 देसी गायों से संग्रह।',\n    photos: ['photo10.jpg', 'photo11.jpg'],\n    measurementDate: '2024-01-12T14:20:00Z',\n    collectionDate: '2024-01-12T15:00:00Z',\n    status: 'quality_check',\n    qualityVerificationStatus: 'pending',\n    iotVerification: {\n      deviceId: 'IOT-SCALE-004',\n      deviceName: 'Smart Scale Delta-4',\n      timestamp: '2024-01-12T14:22:18Z',\n      temperature: 31.1,\n      humidity: 55,\n      ph_level: 6.8,\n      gas_content: 59.7,\n      rfid_tag: 'RFID-004-JKL012',\n      gps_coordinates: '28.4595, 77.0266',\n      verification_score: 82.3,\n      sensor_readings: {\n        weight_sensor: 42.1,\n        quality_sensor: 78.9,\n        moisture_sensor: 14.1\n      }\n    },\n    batchReference: {\n      batchId: 'BATCH-2024-004',\n      digesterId: 'DIG-SEC-003',\n      expectedYield: 32.8,\n      fermentationDays: 32,\n      qualityPrediction: 'average'\n    },\n    transportDetails: {\n      vehicleNumber: 'HR-26-GH-3456',\n      driverName: 'सुरेश कुमार',\n      routeId: 'ROUTE-GGN-001',\n      estimatedDelivery: '2024-01-12T17:30:00Z'\n    },\n    inspector: {\n      name: 'तकनीशियन राज कुमार',\n      id: 'INS-004',\n      signature: false\n    },\n    certificates: ['QUALITY-CERT-004'],\n    verificationPhotos: ['verify6.jpg'],\n    qrCode: 'QR-TXN-2024-004-JKL012',\n    receiptNumber: 'RCP-2024-000004',\n    gstDetails: {\n      gstNumber: 'GST06MNOPQ9012L3B7',\n      taxAmount: 18.42,\n      cgst: 9.21,\n      sgst: 9.21\n    }\n  },\n  {\n    id: 'TXN-2024-005',\n    farmerId: 'FARM-PB-005',\n    farmerName: 'जसप्रीत कौर',\n    farmerAadhaar: '****-****-9156',\n    location: 'पंजाब मिल्क फेडरेशन, लुधियाना',\n    phoneNumber: '+91 74321 09865',\n    dungType: 'buffalo',\n    measuredWeight: 58.9,\n    qualityGrade: 'gradeA',\n    moistureContent: 11,\n    paymentMethod: 'online',\n    paymentStatus: 'completed',\n    ratePerKg: 9.25,\n    totalAmount: 544.82,\n    advanceAmount: 0.00,\n    balanceAmount: 544.82,\n    notes: 'उच्च गुणवत्ता भैंस का गोबर। पंजाब की उन्नत नस्ल से। उत्कृष्ट कार्बन-नाइट्रोजन अनुपात। 20 मुर्रा भैंसों से दैनिक संग्रह।',\n    photos: ['photo12.jpg', 'photo13.jpg', 'photo14.jpg'],\n    measurementDate: '2024-01-11T09:30:00Z',\n    collectionDate: '2024-01-11T10:00:00Z',\n    status: 'verified',\n    qualityVerificationStatus: 'approved',\n    iotVerification: {\n      deviceId: 'IOT-SCALE-005',\n      deviceName: 'Smart Scale Epsilon-5',\n      timestamp: '2024-01-11T09:32:55Z',\n      temperature: 25.6,\n      humidity: 68,\n      ph_level: 7.1,\n      gas_content: 69.8,\n      rfid_tag: 'RFID-005-MNO345',\n      gps_coordinates: '30.9010, 75.8573',\n      verification_score: 93.7,\n      sensor_readings: {\n        weight_sensor: 58.9,\n        quality_sensor: 92.4,\n        moisture_sensor: 11.2\n      }\n    },\n    batchReference: {\n      batchId: 'BATCH-2024-005',\n      digesterId: 'DIG-MAIN-002',\n      expectedYield: 47.3,\n      fermentationDays: 26,\n      qualityPrediction: 'excellent'\n    },\n    transportDetails: {\n      vehicleNumber: 'PB-10-IJ-7890',\n      driverName: 'गुरदीप सिंह',\n      routeId: 'ROUTE-LDH-001',\n      estimatedDelivery: '2024-01-11T12:45:00Z'\n    },\n    inspector: {\n      name: 'डॉ. हरप्रीत कौर',\n      id: 'INS-005',\n      signature: true\n    },\n    certificates: ['ORGANIC-CERT-003', 'QUALITY-CERT-005'],\n    verificationPhotos: ['verify7.jpg', 'verify8.jpg'],\n    qrCode: 'QR-TXN-2024-005-MNO345',\n    receiptNumber: 'RCP-2024-000005',\n    gstDetails: {\n      gstNumber: 'GST03PQRST3456M4C8',\n      taxAmount: 27.24,\n      cgst: 13.62,\n      sgst: 13.62\n    }\n  },\n  {\n    id: 'TXN-2024-006',\n    farmerId: 'FARM-MP-006',\n    farmerName: 'रामेश्वर प्रसाद',\n    farmerAadhaar: '****-****-2479',\n    location: 'मध्यप्रदेश गौशाला, इंदौर',\n    phoneNumber: '+91 93210 87654',\n    dungType: 'cow',\n    measuredWeight: 35.6,\n    qualityGrade: 'gradeC',\n    moistureContent: 18,\n    paymentMethod: 'cash',\n    paymentStatus: 'pending',\n    ratePerKg: 7.50,\n    totalAmount: 267.00,\n    advanceAmount: 100.00,\n    balanceAmount: 167.00,\n    notes: 'मिश्रित नस्ल की गायों से गोबर। कुछ नमी अधिक होने के कारण Grade C। सुधार की संभावना। 10 गायों से संग्रह।',\n    photos: ['photo15.jpg'],\n    measurementDate: '2024-01-10T11:15:00Z',\n    collectionDate: '2024-01-10T11:45:00Z',\n    status: 'pending',\n    qualityVerificationStatus: 'requires_recheck',\n    iotVerification: {\n      deviceId: 'IOT-SCALE-006',\n      deviceName: 'Smart Scale Zeta-6',\n      timestamp: '2024-01-10T11:17:33Z',\n      temperature: 33.2,\n      humidity: 78,\n      ph_level: 6.5,\n      gas_content: 52.4,\n      rfid_tag: 'RFID-006-PQR678',\n      gps_coordinates: '22.7196, 75.8577',\n      verification_score: 68.9,\n      sensor_readings: {\n        weight_sensor: 35.6,\n        quality_sensor: 65.2,\n        moisture_sensor: 18.3\n      }\n    },\n    batchReference: {\n      batchId: 'BATCH-2024-006',\n      digesterId: 'DIG-SEC-004',\n      expectedYield: 26.2,\n      fermentationDays: 35,\n      qualityPrediction: 'below_average'\n    },\n    transportDetails: {\n      vehicleNumber: 'MP-09-KL-2345',\n      driverName: 'अशोक यादव',\n      routeId: 'ROUTE-IND-001',\n      estimatedDelivery: '2024-01-10T14:00:00Z'\n    },\n    inspector: {\n      name: 'तकनीशियन मनोज त्रिवेदी',\n      id: 'INS-006',\n      signature: false\n    },\n    certificates: [],\n    verificationPhotos: ['verify9.jpg'],\n    qrCode: 'QR-TXN-2024-006-PQR678',\n    receiptNumber: 'RCP-2024-000006',\n    gstDetails: {\n      gstNumber: 'GST23STUVW7890N5D9',\n      taxAmount: 13.35,\n      cgst: 6.67,\n      sgst: 6.68\n    }\n  },\n  {\n    id: 'TXN-2024-007',\n    farmerId: 'FARM-GJ-007',\n    farmerName: 'કિશોર ભાઈ પટેલ',\n    farmerAadhaar: '****-****-5813',\n    location: 'અમુલ ડેરી કોઓપરેટિવ, આણંદ, ગુજરાત',\n    phoneNumber: '+91 82109 76543',\n    dungType: 'mixed',\n    measuredWeight: 71.4,\n    qualityGrade: 'gradeA',\n    moistureContent: 9,\n    paymentMethod: 'bank_transfer',\n    paymentStatus: 'completed',\n    ratePerKg: 10.50,\n    totalAmount: 749.70,\n    advanceAmount: 400.00,\n    balanceAmount: 349.70,\n    notes: 'ગુજરાતની શ્રેષ્ઠ ગુણવત્તાનું મિશ્રિત ગોબર। અમુલ ડેરીના ઉચ્ચ ધોરણ પ્રમાણે. 30 પશુઓથી દૈનિક સંગ્રહ। સર્વોત્તમ કિણ્વન ક્ષમતા।',\n    photos: ['photo16.jpg', 'photo17.jpg', 'photo18.jpg', 'photo19.jpg'],\n    measurementDate: '2024-01-09T06:45:00Z',\n    collectionDate: '2024-01-09T07:15:00Z',\n    status: 'verified',\n    qualityVerificationStatus: 'approved',\n    iotVerification: {\n      deviceId: 'IOT-SCALE-007',\n      deviceName: 'Smart Scale Eta-7',\n      timestamp: '2024-01-09T06:47:42Z',\n      temperature: 27.8,\n      humidity: 62,\n      ph_level: 7.6,\n      gas_content: 74.1,\n      rfid_tag: 'RFID-007-STU901',\n      gps_coordinates: '22.5645, 72.9289',\n      verification_score: 98.5,\n      sensor_readings: {\n        weight_sensor: 71.4,\n        quality_sensor: 97.8,\n        moisture_sensor: 9.1\n      }\n    },\n    batchReference: {\n      batchId: 'BATCH-2024-007',\n      digesterId: 'DIG-MAIN-003',\n      expectedYield: 58.6,\n      fermentationDays: 24,\n      qualityPrediction: 'outstanding'\n    },\n    transportDetails: {\n      vehicleNumber: 'GJ-01-MN-4567',\n      driverName: 'રવિ ભાઈ શાહ',\n      routeId: 'ROUTE-AND-001',\n      estimatedDelivery: '2024-01-09T09:30:00Z'\n    },\n    inspector: {\n      name: 'ડૉ. જયશ્રી પટેલ',\n      id: 'INS-007',\n      signature: true\n    },\n    certificates: ['ORGANIC-CERT-004', 'QUALITY-CERT-006', 'ISO-CERT-002', 'AMUL-CERT-001'],\n    verificationPhotos: ['verify10.jpg', 'verify11.jpg'],\n    qrCode: 'QR-TXN-2024-007-STU901',\n    receiptNumber: 'RCP-2024-000007',\n    gstDetails: {\n      gstNumber: 'GST24VWXYZ1234O6E0',\n      taxAmount: 37.48,\n      cgst: 18.74,\n      sgst: 18.74\n    }\n  },\n  {\n    id: 'TXN-2024-008',\n    farmerId: 'FARM-TN-008',\n    farmerName: 'முருகன் செட்டியார்',\n    farmerAadhaar: '****-****-7926',\n    location: 'தமிழ்நாடு பால் கூட்டுறவு, கோயம்புத்தூர்',\n    phoneNumber: '+91 76543 21098',\n    dungType: 'buffalo',\n    measuredWeight: 46.8,\n    qualityGrade: 'gradeB',\n    moistureContent: 16,\n    paymentMethod: 'upi',\n    paymentStatus: 'completed',\n    ratePerKg: 8.25,\n    totalAmount: 386.10,\n    advanceAmount: 150.00,\n    balanceAmount: 236.10,\n    notes: 'தமிழ்நாட்டு எருமையின் சாணம். நல்ல தரம். தென்னிந்திய காலநிலைக்கு ஏற்ற கிளர்வித்தல் குணங்கள். 16 எருமைகளில் இருந்து சேகரிப்பு.',\n    photos: ['photo20.jpg', 'photo21.jpg'],\n    measurementDate: '2024-01-08T15:30:00Z',\n    collectionDate: '2024-01-08T16:00:00Z',\n    status: 'completed',\n    qualityVerificationStatus: 'approved',\n    iotVerification: {\n      deviceId: 'IOT-SCALE-008',\n      deviceName: 'Smart Scale Theta-8',\n      timestamp: '2024-01-08T15:32:28Z',\n      temperature: 32.4,\n      humidity: 75,\n      ph_level: 6.7,\n      gas_content: 61.9,\n      rfid_tag: 'RFID-008-VWX234',\n      gps_coordinates: '11.0168, 76.9558',\n      verification_score: 84.6,\n      sensor_readings: {\n        weight_sensor: 46.8,\n        quality_sensor: 82.3,\n        moisture_sensor: 16.1\n      }\n    },\n    batchReference: {\n      batchId: 'BATCH-2024-008',\n      digesterId: 'DIG-SOUTH-001',\n      expectedYield: 36.4,\n      fermentationDays: 29,\n      qualityPrediction: 'good'\n    },\n    transportDetails: {\n      vehicleNumber: 'TN-38-OP-6789',\n      driverName: 'குமார் ராஜு',\n      routeId: 'ROUTE-CBE-001',\n      estimatedDelivery: '2024-01-08T18:15:00Z'\n    },\n    inspector: {\n      name: 'இன்ஜி. வெங்கடேஷ்',\n      id: 'INS-008',\n      signature: true\n    },\n    certificates: ['QUALITY-CERT-007', 'SOUTH-CERT-001'],\n    verificationPhotos: ['verify12.jpg'],\n    qrCode: 'QR-TXN-2024-008-VWX234',\n    receiptNumber: 'RCP-2024-000008',\n    gstDetails: {\n      gstNumber: 'GST33ABCDE5678P7F1',\n      taxAmount: 19.30,\n      cgst: 9.65,\n      sgst: 9.65\n    }\n  },\n  {\n    id: 'TXN-2024-009',\n    farmerId: 'FARM-KA-009',\n    farmerName: 'ಶ್ರೀನಿವಾಸ ರೆಡ್ಡಿ',\n    farmerAadhaar: '****-****-4051',\n    location: 'ಕರ್ನಾಟಕ ಮಿಲ್ಕ್ ಫೆಡರೇಶನ್, ಬೆಂಗಳೂರು',\n    phoneNumber: '+91 65432 10987',\n    dungType: 'cow',\n    measuredWeight: 39.7,\n    qualityGrade: 'gradeA',\n    moistureContent: 13,\n    paymentMethod: 'online',\n    paymentStatus: 'partial',\n    ratePerKg: 9.00,\n    totalAmount: 357.30,\n    advanceAmount: 200.00,\n    balanceAmount: 157.30,\n    notes: 'ಕರ್ನಾಟಕದ ಸ್ಥಳೀಯ ಹಸುಗಳ ಸಗಣಿ। ಉತ್ತಮ ಗುಣಮಟ್ಟ ಮತ್ತು ಜೈವಿಕ ಸಂಯೋಜನೆ। 12 ಸ್ಥಳೀಯ ಹಸುಗಳಿಂದ ಸಂಗ್ರಹ।',\n    photos: ['photo22.jpg', 'photo23.jpg'],\n    measurementDate: '2024-01-07T10:00:00Z',\n    collectionDate: '2024-01-07T10:30:00Z',\n    status: 'payment_pending',\n    qualityVerificationStatus: 'approved',\n    iotVerification: {\n      deviceId: 'IOT-SCALE-009',\n      deviceName: 'Smart Scale Iota-9',\n      timestamp: '2024-01-07T10:02:15Z',\n      temperature: 24.9,\n      humidity: 69,\n      ph_level: 7.3,\n      gas_content: 66.7,\n      rfid_tag: 'RFID-009-YZA567',\n      gps_coordinates: '12.9716, 77.5946',\n      verification_score: 91.2,\n      sensor_readings: {\n        weight_sensor: 39.7,\n        quality_sensor: 89.8,\n        moisture_sensor: 13.2\n      }\n    },\n    batchReference: {\n      batchId: 'BATCH-2024-009',\n      digesterId: 'DIG-SOUTH-002',\n      expectedYield: 31.8,\n      fermentationDays: 27,\n      qualityPrediction: 'excellent'\n    },\n    transportDetails: {\n      vehicleNumber: 'KA-03-QR-8901',\n      driverName: 'ರಮೇಶ್ ಕುಮಾರ್',\n      routeId: 'ROUTE-BLR-001',\n      estimatedDelivery: '2024-01-07T13:00:00Z'\n    },\n    inspector: {\n      name: 'ಡಾ. ಪ್ರಮೋದ್ ಶೆಟ್ಟಿ',\n      id: 'INS-009',\n      signature: true\n    },\n    certificates: ['ORGANIC-CERT-005', 'QUALITY-CERT-008'],\n    verificationPhotos: ['verify13.jpg', 'verify14.jpg'],\n    qrCode: 'QR-TXN-2024-009-YZA567',\n    receiptNumber: 'RCP-2024-000009',\n    gstDetails: {\n      gstNumber: 'GST29FGHIJ9012Q8G2',\n      taxAmount: 17.86,\n      cgst: 8.93,\n      sgst: 8.93\n    }\n  },\n  {\n    id: 'TXN-2024-010',\n    farmerId: 'FARM-WB-010',\n    farmerName: 'অমিত চক্রবর্তী',\n    farmerAadhaar: '****-****-8394',\n    location: 'পশ্চিমবঙ্গ দুগ্ধ সমবায়, কলকাতা',\n    phoneNumber: '+91 54321 09876',\n    dungType: 'mixed',\n    measuredWeight: 55.2,\n    qualityGrade: 'gradeB',\n    moistureContent: 17,\n    paymentMethod: 'bank_transfer',\n    paymentStatus: 'completed',\n    ratePerKg: 8.00,\n    totalAmount: 441.60,\n    advanceAmount: 250.00,\n    balanceAmount: 191.60,\n    notes: 'পশ্চিমবঙ্গের মিশ্র গোবর। ভালো গুণমান এবং আর্দ্রতা কিছুটা বেশি। ১৮টি গরু ও মহিষ থেকে সংগ্রহ। বর্ষাকালের কারণে কিছুটা আর্দ্রতা।',\n    photos: ['photo24.jpg', 'photo25.jpg', 'photo26.jpg'],\n    measurementDate: '2024-01-06T13:45:00Z',\n    collectionDate: '2024-01-06T14:15:00Z',\n    status: 'completed',\n    qualityVerificationStatus: 'approved',\n    iotVerification: {\n      deviceId: 'IOT-SCALE-010',\n      deviceName: 'Smart Scale Kappa-10',\n      timestamp: '2024-01-06T13:47:51Z',\n      temperature: 30.5,\n      humidity: 82,\n      ph_level: 6.9,\n      gas_content: 58.3,\n      rfid_tag: 'RFID-010-BCD890',\n      gps_coordinates: '22.5726, 88.3639',\n      verification_score: 79.4,\n      sensor_readings: {\n        weight_sensor: 55.2,\n        quality_sensor: 76.8,\n        moisture_sensor: 17.3\n      }\n    },\n    batchReference: {\n      batchId: 'BATCH-2024-010',\n      digesterId: 'DIG-EAST-001',\n      expectedYield: 42.1,\n      fermentationDays: 31,\n      qualityPrediction: 'average'\n    },\n    transportDetails: {\n      vehicleNumber: 'WB-06-ST-2345',\n      driverName: 'সুভাষ দাস',\n      routeId: 'ROUTE-KOL-001',\n      estimatedDelivery: '2024-01-06T16:30:00Z'\n    },\n    inspector: {\n      name: 'ইঞ্জি. রাজীব ঘোষ',\n      id: 'INS-010',\n      signature: true\n    },\n    certificates: ['QUALITY-CERT-009'],\n    verificationPhotos: ['verify15.jpg'],\n    qrCode: 'QR-TXN-2024-010-BCD890',\n    receiptNumber: 'RCP-2024-000010',\n    gstDetails: {\n      gstNumber: 'GST19KLMNO3456R9H3',\n      taxAmount: 22.08,\n      cgst: 11.04,\n      sgst: 11.04\n    }\n  }\n];\n\n// Mock functions with enhanced logging\nconst createTransaction = async (data: Partial<TransactionData>) => {\n  console.log('Creating enhanced transaction with IoT verification:', data);\n  // Simulate API call with comprehensive transaction data\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      console.log('Transaction created with ID:', `TXN-${Date.now()}`);\n      resolve(data);\n    }, 1500);\n  });\n};\n\ninterface TransactionEntryProps {\n  languageContext?: {\n    language: 'hi' | 'en';\n    t: (key: string) => string;\n  };\n}\n\nconst translations = {\n  en: {\n    title: 'Transaction Entry',\n    subtitle: 'IoT weight capture and photo proof documentation',\n    newTransaction: 'New Transaction',\n    iotWeightCapture: 'IoT Weight Capture',\n    photoProof: 'Photo Proof',\n    transactionHistory: 'Transaction History',\n    farmerDetails: 'Farmer Details',\n    weightMeasurement: 'Weight Measurement',\n    paymentDetails: 'Payment Details',\n    farmerId: 'Farmer ID',\n    farmerName: 'Farmer Name',\n    farmerAadhaar: 'Aadhaar (Masked)',\n    location: 'Location',\n    phoneNumber: 'Phone Number',\n    dungType: 'Dung Type',\n    measurementDate: 'Measurement Date',\n    collectionDate: 'Collection Date',\n    measuredWeight: 'Measured Weight (kg)',\n    qualityGrade: 'Quality Grade',\n    moistureContent: 'Moisture Content (%)',\n    paymentMethod: 'Payment Method',\n    paymentStatus: 'Payment Status',\n    ratePerKg: 'Rate per kg (₹)',\n    totalAmount: 'Total Amount (₹)',\n    advanceAmount: 'Advance Amount (₹)',\n    balanceAmount: 'Balance Amount (₹)',\n    notes: 'Notes',\n    captureWeight: 'Capture Weight from IoT',\n    takePhoto: 'Take Photo',\n    uploadPhoto: 'Upload Photo',\n    saveTransaction: 'Save Transaction',\n    weighingInProgress: 'Weighing in Progress...',\n    weightCaptured: 'Weight Captured Successfully',\n    photoRequired: 'Photo proof is required',\n    transactionSaved: 'Transaction saved successfully',\n    cash: 'Cash',\n    online: 'Online',\n    bank_transfer: 'Bank Transfer',\n    upi: 'UPI',\n    pending: 'Pending',\n    partial: 'Partial',\n    completed: 'Completed',\n    failed: 'Failed',\n    cancelled: 'Cancelled',\n    verified: 'Verified',\n    quality_check: 'Quality Check',\n    payment_pending: 'Payment Pending',\n    gradeA: 'Grade A (Premium)',\n    gradeB: 'Grade B (Standard)',\n    gradeC: 'Grade C (Basic)',\n    cow: 'Cow Dung',\n    buffalo: 'Buffalo Dung',\n    mixed: 'Mixed Dung',\n    connecting: 'Connecting to IoT scale...',\n    connected: 'Connected to IoT scale',\n    connectionFailed: 'Failed to connect to IoT scale',\n    retryConnection: 'Retry Connection',\n    manualEntry: 'Manual Entry',\n    autoCapture: 'Auto Capture',\n    calibrateScale: 'Calibrate Scale',\n    viewDetails: 'View Details',\n    printReceipt: 'Print Receipt',\n    status: 'Status',\n    amount: 'Amount',\n    date: 'Date',\n    actions: 'Actions',\n    iotVerification: 'IoT Verification',\n    batchReference: 'Batch Reference',\n    transportDetails: 'Transport Details',\n    inspector: 'Inspector',\n    certificates: 'Certificates',\n    qrCode: 'QR Code',\n    receiptNumber: 'Receipt Number',\n    gstDetails: 'GST Details',\n    deviceId: 'Device ID',\n    temperature: 'Temperature (°C)',\n    humidity: 'Humidity (%)',\n    phLevel: 'pH Level',\n    gasContent: 'Gas Content (%)',\n    rfidTag: 'RFID Tag',\n    gpsCoordinates: 'GPS Coordinates',\n    verificationScore: 'Verification Score',\n    batchId: 'Batch ID',\n    digesterId: 'Digester ID',\n    expectedYield: 'Expected Yield (L)',\n    fermentationDays: 'Fermentation Days',\n    qualityPrediction: 'Quality Prediction',\n    vehicleNumber: 'Vehicle Number',\n    driverName: 'Driver Name',\n    routeId: 'Route ID',\n    estimatedDelivery: 'Estimated Delivery',\n    gstNumber: 'GST Number',\n    taxAmount: 'Tax Amount (₹)',\n    cgst: 'CGST (₹)',\n    sgst: 'SGST (₹)',\n    approved: 'Approved',\n    rejected: 'Rejected',\n    requires_recheck: 'Requires Recheck'\n  },\n  hi: {\n    title: 'लेन-देन प्रविष्टि',\n    subtitle: 'IoT वजन कैप्चर और फोटो प्रूफ दस्तावेजीकरण',\n    newTransaction: 'नया लेन-देन',\n    iotWeightCapture: 'IoT वजन कैप्चर',\n    photoProof: 'फोटो प्रूफ',\n    transactionHistory: 'लेन-देन इतिहास',\n    farmerDetails: 'किसान विवरण',\n    weightMeasurement: 'वजन माप',\n    paymentDetails: 'भुगतान विवरण',\n    farmerId: 'किसान आईडी',\n    farmerName: 'किसान का नाम',\n    farmerAadhaar: 'आधार (मास्क्ड)',\n    location: 'स्थान',\n    phoneNumber: 'फोन नंबर',\n    dungType: 'गोबर का प्रकार',\n    measurementDate: 'माप की तारीख',\n    collectionDate: 'संग्रह की तारीख',\n    measuredWeight: 'मापा गया वजन (किलो)',\n    qualityGrade: 'गुणवत्ता ग्रेड',\n    moistureContent: 'नमी की मात्रा (%)',\n    paymentMethod: 'भुगतान विधि',\n    paymentStatus: 'भुगतान स्थिति',\n    ratePerKg: 'प्रति किलो दर (₹)',\n    totalAmount: 'कुल राशि (₹)',\n    advanceAmount: 'अग्रिम राशि (₹)',\n    balanceAmount: 'शेष राशि (₹)',\n    notes: 'टिप्पणियां',\n    captureWeight: 'IoT से वजन कैप्चर करें',\n    takePhoto: 'फोटो लें',\n    uploadPhoto: 'फोटो अपलोड करें',\n    saveTransaction: 'लेन-देन सेव करें',\n    weighingInProgress: 'तौलना प्रगति में...',\n    weightCaptured: 'वजन सफलतापूर्वक कैप्चर किया गया',\n    photoRequired: 'फोटो प्रूफ आवश्यक है',\n    transactionSaved: 'लेन-देन सफलतापूर्वक सेव किया गया',\n    cash: 'नकद',\n    online: 'ऑनलाइन',\n    bank_transfer: 'बैंक ट्रांसफर',\n    upi: 'UPI',\n    pending: 'लंबित',\n    partial: 'आंशिक',\n    completed: 'पूर्ण',\n    failed: 'असफल',\n    cancelled: 'रद्द',\n    verified: 'सत्यापित',\n    quality_check: 'गुणवत्ता जांच',\n    payment_pending: 'भुगतान लंबित',\n    gradeA: 'ग्रेड A (प्रीमियम)',\n    gradeB: 'ग्रेड B (मानक)',\n    gradeC: 'ग्रेड C (बेसिक)',\n    cow: 'गाय का गोबर',\n    buffalo: 'भैंस का गोबर',\n    mixed: 'मिश्रित गोबर',\n    connecting: 'IoT स्केल से कनेक्ट हो रहा है...',\n    connected: 'IoT स्केल से कनेक्ट हो गया',\n    connectionFailed: 'IoT स्केल से कनेक्ट नहीं हो सका',\n    retryConnection: 'फिर से कोशिश करें',\n    manualEntry: 'मैन्युअल एंट्री',\n    autoCapture: 'ऑटो कैप्चर',\n    calibrateScale: 'स्केल कैलिब्रेट करें',\n    viewDetails: 'विवरण देखें',\n    printReceipt: 'रसीद प्रिंट करें',\n    status: 'स्थिति',\n    amount: 'राशि',\n    date: 'तारीख',\n    actions: 'कार्य',\n    iotVerification: 'IoT सत्यापन',\n    batchReference: 'बैच संदर्भ',\n    transportDetails: 'परिवहन विवरण',\n    inspector: 'निरीक्षक',\n    certificates: 'प्रमाणपत्र',\n    qrCode: 'QR कोड',\n    receiptNumber: 'रसीद संख्या',\n    gstDetails: 'GST विवरण',\n    deviceId: 'डिवाइस आईडी',\n    temperature: 'तापमान (°C)',\n    humidity: 'आर्द्रता (%)',\n    phLevel: 'pH स्तर',\n    gasContent: 'गैस सामग्री (%)',\n    rfidTag: 'RFID टैग',\n    gpsCoordinates: 'GPS निर्देशांक',\n    verificationScore: 'सत्यापन स्कोर',\n    batchId: 'बैच आईडी',\n    digesterId: 'डाइजेस्टर आईडी',\n    expectedYield: 'अपेक्षित उत्पादन (L)',\n    fermentationDays: 'किण्वन दिन',\n    qualityPrediction: 'गुणवत्ता भविष्यवाणी',\n    vehicleNumber: 'वाहन संख्या',\n    driverName: 'चालक का नाम',\n    routeId: 'मार्ग आईडी',\n    estimatedDelivery: 'अनुमानित डिलीवरी',\n    gstNumber: 'GST संख्या',\n    taxAmount: 'कर राशि (₹)',\n    cgst: 'CGST (₹)',\n    sgst: 'SGST (₹)',\n    approved: 'अनुमोदित',\n    rejected: 'अस्वीकृत',\n    requires_recheck: 'पुनः जांच आवश्यक'\n  }\n};\n\nconst getStatusColor = (status: TransactionStatus): string => {\n  switch (status) {\n    case 'pending':\n      return 'bg-yellow-100 text-yellow-800';\n    case 'completed':\n      return 'bg-green-100 text-green-800';\n    case 'cancelled':\n      return 'bg-red-100 text-red-800';\n    case 'verified':\n      return 'bg-blue-100 text-blue-800';\n    case 'quality_check':\n      return 'bg-orange-100 text-orange-800';\n    case 'payment_pending':\n      return 'bg-purple-100 text-purple-800';\n    default:\n      return 'bg-gray-100 text-gray-800';\n  }\n};\n\nconst getPaymentStatusColor = (status: PaymentStatus): string => {\n  switch (status) {\n    case 'completed':\n      return 'bg-green-100 text-green-800';\n    case 'partial':\n      return 'bg-yellow-100 text-yellow-800';\n    case 'pending':\n      return 'bg-orange-100 text-orange-800';\n    case 'failed':\n      return 'bg-red-100 text-red-800';\n    case 'cancelled':\n      return 'bg-gray-100 text-gray-800';\n    default:\n      return 'bg-gray-100 text-gray-800';\n  }\n};\n\nconst getQualityStatusColor = (status: QualityVerificationStatus): string => {\n  switch (status) {\n    case 'approved':\n      return 'bg-green-100 text-green-800';\n    case 'rejected':\n      return 'bg-red-100 text-red-800';\n    case 'pending':\n      return 'bg-yellow-100 text-yellow-800';\n    case 'requires_recheck':\n      return 'bg-orange-100 text-orange-800';\n    default:\n      return 'bg-gray-100 text-gray-800';\n  }\n};\n\n// Enhanced IoT Weight Capture Component\nconst IoTWeightCapture: React.FC<{\n  onWeightCaptured: (weight: number) => void;\n  t: (key: string) => string;\n}> = ({ onWeightCaptured, t }) => {\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [isConnected, setIsConnected] = useState(false);\n  const [isWeighing, setIsWeighing] = useState(false);\n  const [currentWeight, setCurrentWeight] = useState(0);\n  const [connectionError, setConnectionError] = useState(false);\n  const [iotData, setIotData] = useState<Partial<IoTVerificationData> | null>(null);\n\n  const simulateConnection = useCallback(() => {\n    setIsConnecting(true);\n    setConnectionError(false);\n\n    setTimeout(() => {\n      setIsConnecting(false);\n      const success = Math.random() > 0.2; // 80% success rate\n      if (success) {\n        setIsConnected(true);\n\n        // Simulate IoT device data\n        const mockIotData: Partial<IoTVerificationData> = {\n          deviceId: `IOT-SCALE-${Math.floor(Math.random() * 10) + 1}`.padStart(3, '0'),\n          deviceName: 'Smart Scale Alpha-Pro',\n          timestamp: new Date().toISOString(),\n          temperature: 25 + Math.random() * 10,\n          humidity: 55 + Math.random() * 25,\n          ph_level: 6.5 + Math.random() * 1.5,\n          gas_content: 55 + Math.random() * 20,\n          verification_score: 80 + Math.random() * 20\n        };\n        setIotData(mockIotData);\n\n        // Simulate real-time weight updates\n        const interval = setInterval(() => {\n          setCurrentWeight(prev => {\n            const newWeight = 45 + Math.random() * 10; // Simulate weight between 45-55 kg\n            return Math.round(newWeight * 10) / 10;\n          });\n        }, 500);\n\n        return () => clearInterval(interval);\n      } else {\n        setConnectionError(true);\n      }\n    }, 2000);\n  }, []);\n\n  const captureWeight = () => {\n    setIsWeighing(true);\n    setTimeout(() => {\n      setIsWeighing(false);\n      onWeightCaptured(currentWeight);\n    }, 1500);\n  };\n\n  const simulateManualWeight = () => {\n    const manualWeight = 48.5 + Math.random() * 5; // Random weight between 48.5-53.5\n    onWeightCaptured(Math.round(manualWeight * 10) / 10);\n  };\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          <Scale className=\"w-5 h-5\" />\n          {t('iotWeightCapture')}\n        </CardTitle>\n        <CardDescription>\n          Connect to IoT scale for automatic weight measurement with verification\n        </CardDescription>\n      </CardHeader>\n      <CardContent className=\"space-y-4\">\n        {!isConnected && !connectionError && (\n          <div className=\"text-center space-y-4\">\n            <div className=\"w-16 h-16 mx-auto bg-gray-100 rounded-full flex items-center justify-center\">\n              <Scale className=\"w-8 h-8 text-gray-400\" />\n            </div>\n            <Button\n              onClick={simulateConnection}\n              disabled={isConnecting}\n              className=\"w-full\"\n            >\n              {isConnecting ? (\n                <>\n                  <RefreshCw className=\"w-4 h-4 mr-2 animate-spin\" />\n                  {t('connecting')}\n                </>\n              ) : (\n                'Connect to IoT Scale'\n              )}\n            </Button>\n          </div>\n        )}\n\n        {connectionError && (\n          <div className=\"text-center space-y-4\">\n            <Alert>\n              <AlertCircle className=\"h-4 w-4\" />\n              <AlertDescription>\n                {t('connectionFailed')}\n              </AlertDescription>\n            </Alert>\n            <div className=\"space-y-2\">\n              <Button\n                onClick={simulateConnection}\n                variant=\"outline\"\n                className=\"w-full\"\n              >\n                {t('retryConnection')}\n              </Button>\n              <Button\n                onClick={simulateManualWeight}\n                variant=\"secondary\"\n                className=\"w-full\"\n              >\n                {t('manualEntry')}\n              </Button>\n            </div>\n          </div>\n        )}\n\n        {isConnected && (\n          <div className=\"space-y-4\">\n            <div className=\"text-center\">\n              <div className=\"text-sm text-green-600 mb-2\">\n                <CheckCircle className=\"w-4 h-4 inline mr-1\" />\n                {t('connected')}\n              </div>\n              <div className=\"text-4xl font-bold text-blue-600\">\n                {currentWeight.toFixed(1)} kg\n              </div>\n              <div className=\"text-sm text-muted-foreground\">\n                Real-time weight reading\n              </div>\n            </div>\n\n            {/* IoT Device Information */}\n            {iotData && (\n              <div className=\"grid grid-cols-2 gap-2 text-xs bg-blue-50 p-3 rounded\">\n                <div>Device: {iotData.deviceName}</div>\n                <div>Score: {iotData.verification_score?.toFixed(1)}%</div>\n                <div>Temp: {iotData.temperature?.toFixed(1)}°C</div>\n                <div>Humidity: {iotData.humidity?.toFixed(0)}%</div>\n                <div>pH: {iotData.ph_level?.toFixed(1)}</div>\n                <div>Gas: {iotData.gas_content?.toFixed(1)}%</div>\n              </div>\n            )}\n\n            {isWeighing && (\n              <div className=\"space-y-2\">\n                <Progress value={75} className=\"w-full\" />\n                <div className=\"text-center text-sm text-muted-foreground\">\n                  {t('weighingInProgress')}\n                </div>\n              </div>\n            )}\n\n            <div className=\"grid grid-cols-2 gap-2\">\n              <Button\n                onClick={captureWeight}\n                disabled={isWeighing}\n                className=\"w-full\"\n              >\n                {isWeighing ? (\n                  <>\n                    <Clock className=\"w-4 h-4 mr-2\" />\n                    Capturing...\n                  </>\n                ) : (\n                  <>\n                    <Weight className=\"w-4 h-4 mr-2\" />\n                    {t('captureWeight')}\n                  </>\n                )}\n              </Button>\n              <Button\n                onClick={() => {/* Calibrate scale */}}\n                variant=\"outline\"\n                className=\"w-full\"\n              >\n                {t('calibrateScale')}\n              </Button>\n            </div>\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\n// Enhanced Photo Capture Component\nconst PhotoCapture: React.FC<{\n  onPhotoAdded: (photo: string) => void;\n  photos: string[];\n  t: (key: string) => string;\n}> = ({ onPhotoAdded, photos, t }) => {\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  const handleFileUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        const result = e.target?.result as string;\n        onPhotoAdded(result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const simulatePhotoCapture = () => {\n    // Simulate camera photo with placeholder\n    const placeholderPhoto = `data:image/svg+xml;base64,${btoa(`\n      <svg width=\"300\" height=\"200\" xmlns=\"http://www.w3.org/2000/svg\">\n        <rect width=\"100%\" height=\"100%\" fill=\"#f3f4f6\"/>\n        <text x=\"50%\" y=\"40%\" text-anchor=\"middle\" dy=\".3em\" font-family=\"Arial\" font-size=\"14\" fill=\"#6b7280\">\n          Dung Sample Photo ${photos.length + 1}\n        </text>\n        <text x=\"50%\" y=\"60%\" text-anchor=\"middle\" dy=\".3em\" font-family=\"Arial\" font-size=\"10\" fill=\"#9ca3af\">\n          Timestamp: ${new Date().toLocaleString()}\n        </text>\n      </svg>\n    `)}`;\n    onPhotoAdded(placeholderPhoto);\n  };\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          <Camera className=\"w-5 h-5\" />\n          {t('photoProof')}\n        </CardTitle>\n        <CardDescription>\n          Capture photos of dung samples for quality verification and compliance\n        </CardDescription>\n      </CardHeader>\n      <CardContent className=\"space-y-4\">\n        <div className=\"grid grid-cols-2 gap-2\">\n          <Button\n            onClick={simulatePhotoCapture}\n            variant=\"outline\"\n            className=\"w-full\"\n          >\n            <Camera className=\"w-4 h-4 mr-2\" />\n            {t('takePhoto')}\n          </Button>\n          <Button\n            onClick={() => fileInputRef.current?.click()}\n            variant=\"outline\"\n            className=\"w-full\"\n          >\n            <Upload className=\"w-4 h-4 mr-2\" />\n            {t('uploadPhoto')}\n          </Button>\n        </div>\n\n        <input\n          ref={fileInputRef}\n          type=\"file\"\n          accept=\"image/*\"\n          onChange={handleFileUpload}\n          className=\"hidden\"\n        />\n\n        {photos.length > 0 && (\n          <div>\n            <div className=\"text-sm font-medium mb-2\">\n              Captured Photos ({photos.length})\n            </div>\n            <div className=\"grid grid-cols-2 gap-2\">\n              {photos.map((photo, index) => (\n                <div key={index} className=\"relative\">\n                  <img\n                    src={photo}\n                    alt={`Sample ${index + 1}`}\n                    className=\"w-full h-24 object-cover rounded border\"\n                  />\n                  <div className=\"absolute top-1 right-1\">\n                    <Badge variant=\"secondary\" className=\"text-xs\">\n                      {index + 1}\n                    </Badge>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {photos.length === 0 && (\n          <div className=\"text-center py-8 text-muted-foreground\">\n            <FileImage className=\"w-12 h-12 mx-auto mb-2\" />\n            <p className=\"text-sm\">No photos captured yet</p>\n            <p className=\"text-xs\">{t('photoRequired')}</p>\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport const TransactionEntry: React.FC<TransactionEntryProps> = ({ languageContext }) => {\n  const [activeTab, setActiveTab] = useState('new');\n\n  // Enhanced form state with additional fields\n  const [formData, setFormData] = useState({\n    farmerId: '',\n    farmerName: '',\n    farmerAadhaar: '',\n    location: '',\n    phoneNumber: '',\n    dungType: 'cow',\n    measuredWeight: 0,\n    qualityGrade: 'gradeB',\n    moistureContent: 15,\n    paymentMethod: 'cash' as PaymentMethod,\n    paymentStatus: 'pending' as PaymentStatus,\n    ratePerKg: 8.50,\n    advanceAmount: 0,\n    notes: ''\n  });\n\n  const [capturedPhotos, setCapturedPhotos] = useState<string[]>([]);\n  const [isSaving, setIsSaving] = useState(false);\n  const [saveSuccess, setSaveSuccess] = useState(false);\n\n  const lang = languageContext?.language || 'en';\n  const t = (key: string): string => {\n    return languageContext?.t(key) || translations[lang][key as keyof typeof translations[typeof lang]] || key;\n  };\n\n  const handleWeightCaptured = (weight: number) => {\n    setFormData(prev => ({ ...prev, measuredWeight: weight }));\n  };\n\n  const handlePhotoAdded = (photo: string) => {\n    setCapturedPhotos(prev => [...prev, photo]);\n  };\n\n  const calculateTotalAmount = () => {\n    return formData.measuredWeight * formData.ratePerKg;\n  };\n\n  const calculateBalanceAmount = () => {\n    return calculateTotalAmount() - formData.advanceAmount;\n  };\n\n  const handleSaveTransaction = async () => {\n    if (formData.measuredWeight === 0) {\n      alert('Please capture weight first');\n      return;\n    }\n\n    if (capturedPhotos.length === 0) {\n      alert(t('photoRequired'));\n      return;\n    }\n\n    setIsSaving(true);\n\n    try {\n      const transactionData: Partial<TransactionData> = {\n        ...formData,\n        totalAmount: calculateTotalAmount(),\n        balanceAmount: calculateBalanceAmount(),\n        photos: capturedPhotos,\n        measurementDate: new Date().toISOString(),\n        collectionDate: new Date().toISOString(),\n        status: 'pending' as TransactionStatus,\n        qualityVerificationStatus: 'pending' as QualityVerificationStatus\n      };\n\n      await createTransaction(transactionData);\n\n      setSaveSuccess(true);\n      setTimeout(() => {\n        setSaveSuccess(false);\n        // Reset form\n        setFormData({\n          farmerId: '',\n          farmerName: '',\n          farmerAadhaar: '',\n          location: '',\n          phoneNumber: '',\n          dungType: 'cow',\n          measuredWeight: 0,\n          qualityGrade: 'gradeB',\n          moistureContent: 15,\n          paymentMethod: 'cash' as PaymentMethod,\n          paymentStatus: 'pending' as PaymentStatus,\n          ratePerKg: 8.50,\n          advanceAmount: 0,\n          notes: ''\n        });\n        setCapturedPhotos([]);\n      }, 2000);\n\n    } catch (error) {\n      console.error('Failed to save transaction:', error);\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n  const recentTransactions = transactions.slice(0, 10);\n  const pendingTransactions = transactions.filter(t => t.status === 'pending' || t.status === 'payment_pending');\n  const todaysTransactions = transactions.filter(t =>\n    new Date(t.measurementDate).toDateString() === new Date().toDateString()\n  );\n  const verifiedTransactions = transactions.filter(t => t.status === 'verified');\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between -mt-6\">\n        <div>\n          <h1 className=\"text-3xl font-bold tracking-tight\">{t('title')}</h1>\n          <p className=\"text-muted-foreground\">{t('subtitle')}</p>\n        </div>\n        {saveSuccess && (\n          <Alert className=\"w-auto\">\n            <CheckCircle className=\"h-4 w-4\" />\n            <AlertDescription>\n              {t('transactionSaved')}\n            </AlertDescription>\n          </Alert>\n        )}\n      </div>\n\n      {/* Enhanced Statistics Cards */}\n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Today's Transactions</CardTitle>\n            <Calendar className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{todaysTransactions.length}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              {todaysTransactions.reduce((sum, t) => sum + t.measuredWeight, 0).toFixed(1)} kg total\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Pending Verification</CardTitle>\n            <Clock className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{pendingTransactions.length}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              Awaiting approval\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Verified Transactions</CardTitle>\n            <Verified className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{verifiedTransactions.length}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              IoT verified entries\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Total Value</CardTitle>\n            <TrendingUp className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">\n              ₹{transactions.reduce((sum, t) => sum + t.totalAmount, 0).toFixed(2)}\n            </div>\n            <p className=\"text-xs text-muted-foreground\">\n              All transactions\n            </p>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Main Content */}\n      <Tabs value={activeTab} onValueChange={setActiveTab}>\n        <TabsList className=\"grid w-full grid-cols-3\">\n          <TabsTrigger value=\"new\">{t('newTransaction')}</TabsTrigger>\n          <TabsTrigger value=\"iot\">{t('iotWeightCapture')}</TabsTrigger>\n          <TabsTrigger value=\"history\">{t('transactionHistory')}</TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"new\" className=\"space-y-6\">\n          <div className=\"grid gap-6 lg:grid-cols-2\">\n            {/* Enhanced Farmer Details */}\n            <Card>\n              <CardHeader>\n                <CardTitle>{t('farmerDetails')}</CardTitle>\n                <CardDescription>\n                  Basic farmer information and contact details\n                </CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"farmerId\">{t('farmerId')}</Label>\n                    <Input\n                      id=\"farmerId\"\n                      value={formData.farmerId}\n                      onChange={(e) => setFormData(prev => ({ ...prev, farmerId: e.target.value }))}\n                      placeholder=\"FARM-001\"\n                    />\n                  </div>\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"farmerName\">{t('farmerName')}</Label>\n                    <Input\n                      id=\"farmerName\"\n                      value={formData.farmerName}\n                      onChange={(e) => setFormData(prev => ({ ...prev, farmerName: e.target.value }))}\n                      placeholder=\"राम कुमार\"\n                    />\n                  </div>\n                </div>\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"farmerAadhaar\">{t('farmerAadhaar')}</Label>\n                  <Input\n                    id=\"farmerAadhaar\"\n                    value={formData.farmerAadhaar}\n                    onChange={(e) => setFormData(prev => ({ ...prev, farmerAadhaar: e.target.value }))}\n                    placeholder=\"****-****-1234\"\n                  />\n                </div>\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"location\">{t('location')}</Label>\n                  <Input\n                    id=\"location\"\n                    value={formData.location}\n                    onChange={(e) => setFormData(prev => ({ ...prev, location: e.target.value }))}\n                    placeholder=\"Village, District\"\n                  />\n                </div>\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"phoneNumber\">{t('phoneNumber')}</Label>\n                  <Input\n                    id=\"phoneNumber\"\n                    value={formData.phoneNumber}\n                    onChange={(e) => setFormData(prev => ({ ...prev, phoneNumber: e.target.value }))}\n                    placeholder=\"+91 98765 43210\"\n                  />\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Weight Measurement */}\n            <Card>\n              <CardHeader>\n                <CardTitle>{t('weightMeasurement')}</CardTitle>\n                <CardDescription>\n                  Dung quality and weight measurement details\n                </CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"dungType\">{t('dungType')}</Label>\n                    <Select value={formData.dungType} onValueChange={(value) => setFormData(prev => ({ ...prev, dungType: value }))}>\n                      <SelectTrigger>\n                        <SelectValue />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"cow\">{t('cow')}</SelectItem>\n                        <SelectItem value=\"buffalo\">{t('buffalo')}</SelectItem>\n                        <SelectItem value=\"mixed\">{t('mixed')}</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"qualityGrade\">{t('qualityGrade')}</Label>\n                    <Select value={formData.qualityGrade} onValueChange={(value) => setFormData(prev => ({ ...prev, qualityGrade: value }))}>\n                      <SelectTrigger>\n                        <SelectValue />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"gradeA\">{t('gradeA')}</SelectItem>\n                        <SelectItem value=\"gradeB\">{t('gradeB')}</SelectItem>\n                        <SelectItem value=\"gradeC\">{t('gradeC')}</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                </div>\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"measuredWeight\">{t('measuredWeight')}</Label>\n                    <Input\n                      id=\"measuredWeight\"\n                      type=\"number\"\n                      step=\"0.1\"\n                      value={formData.measuredWeight}\n                      onChange={(e) => setFormData(prev => ({ ...prev, measuredWeight: parseFloat(e.target.value) || 0 }))}\n                      placeholder=\"0.0\"\n                    />\n                    {formData.measuredWeight > 0 && (\n                      <div className=\"text-sm text-green-600\">\n                        <CheckCircle className=\"w-4 h-4 inline mr-1\" />\n                        {t('weightCaptured')}\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"moistureContent\">{t('moistureContent')}</Label>\n                    <Input\n                      id=\"moistureContent\"\n                      type=\"number\"\n                      value={formData.moistureContent}\n                      onChange={(e) => setFormData(prev => ({ ...prev, moistureContent: parseInt(e.target.value) || 0 }))}\n                      placeholder=\"15\"\n                    />\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Enhanced Payment Details */}\n            <Card>\n              <CardHeader>\n                <CardTitle>{t('paymentDetails')}</CardTitle>\n                <CardDescription>\n                  Payment method and amount calculation\n                </CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"paymentMethod\">{t('paymentMethod')}</Label>\n                    <Select value={formData.paymentMethod} onValueChange={(value) => setFormData(prev => ({ ...prev, paymentMethod: value as PaymentMethod }))}>\n                      <SelectTrigger>\n                        <SelectValue />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"cash\">{t('cash')}</SelectItem>\n                        <SelectItem value=\"online\">{t('online')}</SelectItem>\n                        <SelectItem value=\"bank_transfer\">{t('bank_transfer')}</SelectItem>\n                        <SelectItem value=\"upi\">{t('upi')}</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"paymentStatus\">{t('paymentStatus')}</Label>\n                    <Select value={formData.paymentStatus} onValueChange={(value) => setFormData(prev => ({ ...prev, paymentStatus: value as PaymentStatus }))}>\n                      <SelectTrigger>\n                        <SelectValue />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"pending\">{t('pending')}</SelectItem>\n                        <SelectItem value=\"partial\">{t('partial')}</SelectItem>\n                        <SelectItem value=\"completed\">{t('completed')}</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                </div>\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"ratePerKg\">{t('ratePerKg')}</Label>\n                  <Input\n                    id=\"ratePerKg\"\n                    type=\"number\"\n                    step=\"0.50\"\n                    value={formData.ratePerKg}\n                    onChange={(e) => setFormData(prev => ({ ...prev, ratePerKg: parseFloat(e.target.value) || 0 }))}\n                  />\n                </div>\n                <div className=\"grid grid-cols-3 gap-4\">\n                  <div className=\"space-y-2\">\n                    <Label>{t('totalAmount')}</Label>\n                    <div className=\"text-lg font-bold text-green-600\">\n                      ₹{calculateTotalAmount().toFixed(2)}\n                    </div>\n                  </div>\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"advanceAmount\">{t('advanceAmount')}</Label>\n                    <Input\n                      id=\"advanceAmount\"\n                      type=\"number\"\n                      step=\"0.50\"\n                      value={formData.advanceAmount}\n                      onChange={(e) => setFormData(prev => ({ ...prev, advanceAmount: parseFloat(e.target.value) || 0 }))}\n                    />\n                  </div>\n                  <div className=\"space-y-2\">\n                    <Label>{t('balanceAmount')}</Label>\n                    <div className=\"text-lg font-bold text-blue-600\">\n                      ₹{calculateBalanceAmount().toFixed(2)}\n                    </div>\n                  </div>\n                </div>\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"notes\">{t('notes')}</Label>\n                  <Textarea\n                    id=\"notes\"\n                    value={formData.notes}\n                    onChange={(e) => setFormData(prev => ({ ...prev, notes: e.target.value }))}\n                    placeholder=\"Additional notes...\"\n                    rows={2}\n                  />\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Photo Capture */}\n            <PhotoCapture\n              onPhotoAdded={handlePhotoAdded}\n              photos={capturedPhotos}\n              t={t}\n            />\n          </div>\n\n          {/* Save Button */}\n          <div className=\"flex justify-end\">\n            <Button\n              onClick={handleSaveTransaction}\n              disabled={isSaving || formData.measuredWeight === 0 || capturedPhotos.length === 0}\n              className=\"w-48\"\n            >\n              {isSaving ? (\n                <>\n                  <RefreshCw className=\"w-4 h-4 mr-2 animate-spin\" />\n                  Saving...\n                </>\n              ) : (\n                <>\n                  <Save className=\"w-4 h-4 mr-2\" />\n                  {t('saveTransaction')}\n                </>\n              )}\n            </Button>\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"iot\">\n          <IoTWeightCapture\n            onWeightCaptured={handleWeightCaptured}\n            t={t}\n          />\n        </TabsContent>\n\n        <TabsContent value=\"history\">\n          <Card>\n            <CardHeader>\n              <CardTitle>{t('transactionHistory')}</CardTitle>\n              <CardDescription>\n                Comprehensive transaction records with IoT verification and batch tracking\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-4\">\n                {recentTransactions.map((transaction) => (\n                  <div key={transaction.id} className=\"border rounded-lg p-4 space-y-3\">\n                    {/* Transaction Header */}\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"space-y-1\">\n                        <div className=\"flex items-center gap-4\">\n                          <h4 className=\"font-semibold\">{transaction.farmerName}</h4>\n                          <Badge className={getStatusColor(transaction.status)}>\n                            {t(transaction.status)}\n                          </Badge>\n                          <Badge className={getPaymentStatusColor(transaction.paymentStatus)}>\n                            {t(transaction.paymentStatus)}\n                          </Badge>\n                          <Badge className={getQualityStatusColor(transaction.qualityVerificationStatus)}>\n                            {t(transaction.qualityVerificationStatus)}\n                          </Badge>\n                        </div>\n                        <div className=\"flex items-center gap-4 text-sm text-muted-foreground\">\n                          <span className=\"flex items-center gap-1\">\n                            <User className=\"w-3 h-3\" />\n                            {transaction.farmerId}\n                          </span>\n                          <span className=\"flex items-center gap-1\">\n                            <MapPin className=\"w-3 h-3\" />\n                            {transaction.location}\n                          </span>\n                          <span className=\"flex items-center gap-1\">\n                            <Weight className=\"w-3 h-3\" />\n                            {transaction.measuredWeight} kg\n                          </span>\n                          <span className=\"flex items-center gap-1\">\n                            <Calendar className=\"w-3 h-3\" />\n                            {new Date(transaction.measurementDate).toLocaleDateString()}\n                          </span>\n                        </div>\n                      </div>\n                      <div className=\"text-right\">\n                        <div className=\"text-lg font-bold\">₹{transaction.totalAmount.toFixed(2)}</div>\n                        <div className=\"text-sm text-muted-foreground\">\n                          {transaction.receiptNumber}\n                        </div>\n                      </div>\n                    </div>\n\n                    {/* IoT Verification Info */}\n                    <div className=\"grid grid-cols-2 lg:grid-cols-4 gap-4 bg-blue-50 p-3 rounded text-xs\">\n                      <div>\n                        <div className=\"font-medium flex items-center gap-1\">\n                          <Smartphone className=\"w-3 h-3\" />\n                          IoT Device\n                        </div>\n                        <div>{transaction.iotVerification.deviceName}</div>\n                        <div className=\"text-muted-foreground\">{transaction.iotVerification.deviceId}</div>\n                      </div>\n                      <div>\n                        <div className=\"font-medium flex items-center gap-1\">\n                          <Shield className=\"w-3 h-3\" />\n                          Verification Score\n                        </div>\n                        <div className=\"text-green-600 font-bold\">\n                          {transaction.iotVerification.verification_score.toFixed(1)}%\n                        </div>\n                      </div>\n                      <div>\n                        <div className=\"font-medium\">Batch Reference</div>\n                        <div>{transaction.batchReference.batchId}</div>\n                        <div className=\"text-muted-foreground\">\n                          Yield: {transaction.batchReference.expectedYield}L\n                        </div>\n                      </div>\n                      <div>\n                        <div className=\"font-medium flex items-center gap-1\">\n                          <QrCode className=\"w-3 h-3\" />\n                          QR Code\n                        </div>\n                        <div className=\"font-mono\">{transaction.qrCode}</div>\n                      </div>\n                    </div>\n\n                    {/* Additional Details */}\n                    <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-4 text-xs\">\n                      <div>\n                        <div className=\"font-medium mb-1\">Transport Details</div>\n                        <div>{transaction.transportDetails.vehicleNumber}</div>\n                        <div>{transaction.transportDetails.driverName}</div>\n                      </div>\n                      <div>\n                        <div className=\"font-medium mb-1\">Quality Inspector</div>\n                        <div>{transaction.inspector.name}</div>\n                        <div className=\"flex items-center gap-1\">\n                          {transaction.inspector.signature ? (\n                            <CheckCircle className=\"w-3 h-3 text-green-600\" />\n                          ) : (\n                            <Clock className=\"w-3 h-3 text-orange-600\" />\n                          )}\n                          {transaction.inspector.signature ? 'Signed' : 'Pending Signature'}\n                        </div>\n                      </div>\n                      <div>\n                        <div className=\"font-medium mb-1\">Certificates</div>\n                        <div className=\"flex flex-wrap gap-1\">\n                          {transaction.certificates.map((cert, index) => (\n                            <Badge key={index} variant=\"outline\" className=\"text-xs\">\n                              {cert}\n                            </Badge>\n                          ))}\n                        </div>\n                      </div>\n                    </div>\n\n                    {/* Action Buttons */}\n                    <div className=\"flex items-center gap-2 pt-2\">\n                      <Button size=\"sm\" variant=\"outline\">\n                        <Eye className=\"w-4 h-4 mr-1\" />\n                        {t('viewDetails')}\n                      </Button>\n                      <Button size=\"sm\" variant=\"outline\">\n                        <Receipt className=\"w-4 h-4 mr-1\" />\n                        {t('printReceipt')}\n                      </Button>\n                      <Button size=\"sm\" variant=\"outline\">\n                        <Download className=\"w-4 h-4 mr-1\" />\n                        Download\n                      </Button>\n                    </div>\n                  </div>\n                ))}\n                {recentTransactions.length === 0 && (\n                  <div className=\"text-center py-8 text-muted-foreground\">\n                    <FileImage className=\"w-12 h-12 mx-auto mb-2\" />\n                    <p>No transactions found</p>\n                  </div>\n                )}\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n};\n\nexport default TransactionEntry;","import * as React from \"react\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nexport interface SwitchProps\r\n  extends Omit<React.ButtonHTMLAttributes<HTMLButtonElement>, 'onChange'> {\r\n  checked?: boolean\r\n  onCheckedChange?: (checked: boolean) => void\r\n}\r\n\r\nconst Switch = React.forwardRef<HTMLButtonElement, SwitchProps>(\r\n  ({ className, checked, onCheckedChange, disabled, ...props }, ref) => {\r\n    const [internalChecked, setInternalChecked] = React.useState(false)\r\n    const isChecked = checked !== undefined ? checked : internalChecked\r\n    const handleChange = onCheckedChange || setInternalChecked\r\n\r\n    return (\r\n      <button\r\n        type=\"button\"\r\n        role=\"switch\"\r\n        aria-checked={isChecked}\r\n        ref={ref}\r\n        className={cn(\r\n          \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50\",\r\n          isChecked ? \"bg-primary\" : \"bg-input\",\r\n          className\r\n        )}\r\n        disabled={disabled}\r\n        onClick={() => handleChange(!isChecked)}\r\n        {...props}\r\n      >\r\n        <span\r\n          className={cn(\r\n            \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform\",\r\n            isChecked ? \"translate-x-5\" : \"translate-x-0\"\r\n          )}\r\n        />\r\n      </button>\r\n    )\r\n  }\r\n)\r\nSwitch.displayName = \"Switch\"\r\n\r\nexport { Switch }","import React, { useState, useEffect } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '../../components/ui/card';\nimport { Badge } from '../../components/ui/badge';\nimport { Button } from '../../components/ui/button';\nimport { Input } from '../../components/ui/input';\nimport { Label } from '../../components/ui/label';\nimport { Textarea } from '../../components/ui/textarea';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '../../components/ui/select';\nimport { Switch } from '../../components/ui/switch';\nimport { Dialog, DialogContent, DialogDescription, DialogFooter, DialogHeader, DialogTitle, DialogTrigger } from '../../components/ui/dialog';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '../../components/ui/tabs';\nimport { Alert, AlertDescription } from '../../components/ui/alert';\nimport {\n  Bell,\n  AlertTriangle,\n  CheckCircle,\n  Clock,\n  Settings,\n  Volume2,\n  VolumeX,\n  Thermometer,\n  Gauge,\n  Zap,\n  Trash2,\n  Eye,\n  Plus,\n  Filter,\n  RotateCcw,\n  BellRing,\n  Info,\n  AlertCircle,\n  XCircle,\n  Play,\n  Pause,\n  RefreshCw,\n  Shield,\n  Wrench,\n  Activity,\n  Wifi,\n  WifiOff\n} from 'lucide-react';\n\n// Mock types for AlertsManagement\ntype AlertLevel = 'critical' | 'warning' | 'info' | 'success';\ntype AlertType = 'temperature' | 'pressure' | 'methane' | 'gasProduction' | 'efficiency' | 'connectivity' | 'safety' | 'maintenance';\n\ninterface AlertData {\n  id: string;\n  level: AlertLevel;\n  type: AlertType;\n  title: string;\n  message: string;\n  digesterId: string;\n  timestamp: string;\n  status: 'active' | 'acknowledged' | 'resolved';\n  value?: string;\n  severity?: number;\n  location?: string;\n  assignedTo?: string;\n  estimatedResolution?: string;\n}\n\ninterface ThresholdConfig {\n  type: AlertType;\n  enabled: boolean;\n  minThreshold: number;\n  maxThreshold: number;\n  unit?: string;\n  description?: string;\n}\n\n// Enhanced Mock data with comprehensive Indian biogas operations alerts\nconst alerts: AlertData[] = [\n  {\n    id: 'A001',\n    level: 'warning',\n    type: 'temperature',\n    title: 'High Temperature Alert - Digester 001',\n    message: 'Temperature exceeds optimal range at 42°C. Recommended range: 35-40°C. Automatic cooling system activated.',\n    digesterId: 'DIG-001',\n    timestamp: new Date().toISOString(),\n    status: 'active',\n    value: '42.3°C',\n    severity: 3,\n    location: 'Gokul Gaushala Main Unit',\n    assignedTo: 'राजेश कुमार',\n    estimatedResolution: '2 hours'\n  },\n  {\n    id: 'A002',\n    level: 'critical',\n    type: 'pressure',\n    title: 'Critical Pressure Level - Buffalo Unit',\n    message: 'Pressure levels dangerously high at 2.1 kPa. Immediate attention required. Safety valve may trigger.',\n    digesterId: 'DIG-003',\n    timestamp: new Date(Date.now() - 3600000).toISOString(),\n    status: 'active',\n    value: '2.1 kPa',\n    severity: 5,\n    location: 'Yamuna Riverside Buffalo Unit',\n    assignedTo: 'सुनील यादव',\n    estimatedResolution: 'Immediate'\n  },\n  {\n    id: 'A003',\n    level: 'warning',\n    type: 'methane',\n    title: 'Low Methane Content - Secondary Unit',\n    message: 'Methane levels dropped to 58%. Expected range: 60-70%. Check feedstock quality and pH levels.',\n    digesterId: 'DIG-002',\n    timestamp: new Date(Date.now() - 7200000).toISOString(),\n    status: 'active',\n    value: '58.2%',\n    severity: 3,\n    location: 'Vrindavan Organic Farm',\n    assignedTo: 'अमित शर्मा',\n    estimatedResolution: '4 hours'\n  },\n  {\n    id: 'A004',\n    level: 'critical',\n    type: 'connectivity',\n    title: 'IoT Sensor Connection Lost',\n    message: 'Temperature and pressure sensors offline for Digester 005. Last reading 45 minutes ago. Manual monitoring required.',\n    digesterId: 'DIG-005',\n    timestamp: new Date(Date.now() - 2700000).toISOString(),\n    status: 'active',\n    value: 'Offline 45min',\n    severity: 4,\n    location: 'Experimental Unit',\n    assignedTo: 'तकनीकी टीम',\n    estimatedResolution: '1 hour'\n  },\n  {\n    id: 'A005',\n    level: 'warning',\n    type: 'gasProduction',\n    title: 'Reduced Gas Production - Main Unit',\n    message: 'Daily production down 15% from average. Current: 128 m³/day, Expected: 150 m³/day. Check feeding schedule.',\n    digesterId: 'DIG-001',\n    timestamp: new Date(Date.now() - 10800000).toISOString(),\n    status: 'active',\n    value: '128 m³/day',\n    severity: 2,\n    location: 'Gokul Gaushala Main Unit',\n    assignedTo: 'गीता देवी',\n    estimatedResolution: '6 hours'\n  },\n  {\n    id: 'A006',\n    level: 'info',\n    type: 'maintenance',\n    title: 'Scheduled Maintenance Due - Mixed Feed Unit',\n    message: 'Routine maintenance scheduled for Digester 004 tomorrow at 10:00 AM. Expected downtime: 4 hours.',\n    digesterId: 'DIG-004',\n    timestamp: new Date(Date.now() - 14400000).toISOString(),\n    status: 'active',\n    value: 'Tomorrow 10:00 AM',\n    severity: 1,\n    location: 'Mixed Feed Processing',\n    assignedTo: 'रखरखाव टीम',\n    estimatedResolution: '24 hours'\n  },\n  {\n    id: 'A007',\n    level: 'critical',\n    type: 'safety',\n    title: 'Gas Leak Detection - Safety Alert',\n    message: 'Potential gas leak detected near Digester 002. Area evacuated. Emergency response team notified. Safety protocols activated.',\n    digesterId: 'DIG-002',\n    timestamp: new Date(Date.now() - 18000000).toISOString(),\n    status: 'active',\n    value: 'Level 3 Alert',\n    severity: 5,\n    location: 'Vrindavan Organic Farm',\n    assignedTo: 'आपातकालीन टीम',\n    estimatedResolution: 'Immediate'\n  },\n  {\n    id: 'A008',\n    level: 'warning',\n    type: 'efficiency',\n    title: 'Efficiency Drop - Buffalo Unit',\n    message: 'Overall efficiency decreased to 78%. Normal range: 85-92%. Consider feedstock optimization and pH adjustment.',\n    digesterId: 'DIG-003',\n    timestamp: new Date(Date.now() - 21600000).toISOString(),\n    status: 'acknowledged',\n    value: '78%',\n    severity: 3,\n    location: 'Yamuna Riverside Buffalo Unit',\n    assignedTo: 'विकास कुमार',\n    estimatedResolution: '8 hours'\n  },\n  {\n    id: 'A009',\n    level: 'warning',\n    type: 'temperature',\n    title: 'Low Temperature - Experimental Unit',\n    message: 'Temperature dropped to 32°C due to ambient weather. Heating system activated. Monitoring bacterial activity.',\n    digesterId: 'DIG-005',\n    timestamp: new Date(Date.now() - 25200000).toISOString(),\n    status: 'resolved',\n    value: '32.1°C',\n    severity: 2,\n    location: 'Experimental Unit',\n    assignedTo: 'लक्ष्मी यादव',\n    estimatedResolution: 'Resolved'\n  },\n  {\n    id: 'A010',\n    level: 'info',\n    type: 'gasProduction',\n    title: 'Optimal Production - Main Unit',\n    message: 'Excellent gas production recorded. 165 m³/day achieved - 10% above target. Feeding schedule optimized.',\n    digesterId: 'DIG-001',\n    timestamp: new Date(Date.now() - 28800000).toISOString(),\n    status: 'resolved',\n    value: '165 m³/day',\n    severity: 1,\n    location: 'Gokul Gaushala Main Unit',\n    assignedTo: 'राजेश कुमार',\n    estimatedResolution: 'Resolved'\n  },\n  {\n    id: 'A011',\n    level: 'critical',\n    type: 'pressure',\n    title: 'Pressure Relief Valve Triggered',\n    message: 'Automatic pressure relief activated on Digester 004. System stabilized. Check for blockages in gas outlet lines.',\n    digesterId: 'DIG-004',\n    timestamp: new Date(Date.now() - 32400000).toISOString(),\n    status: 'acknowledged',\n    value: '2.3 kPa',\n    severity: 4,\n    location: 'Mixed Feed Processing',\n    assignedTo: 'सुरेश चंद्र',\n    estimatedResolution: '3 hours'\n  },\n  {\n    id: 'A012',\n    level: 'warning',\n    type: 'maintenance',\n    title: 'Cleaning Cycle Overdue - Secondary Unit',\n    message: 'Digester cleaning overdue by 3 days. Efficiency may be impacted. Schedule cleaning within 24 hours.',\n    digesterId: 'DIG-002',\n    timestamp: new Date(Date.now() - 36000000).toISOString(),\n    status: 'active',\n    value: '3 days overdue',\n    severity: 3,\n    location: 'Vrindavan Organic Farm',\n    assignedTo: 'रखरखाव टीम',\n    estimatedResolution: '12 hours'\n  },\n  {\n    id: 'A013',\n    level: 'info',\n    type: 'connectivity',\n    title: 'IoT System Upgrade Complete',\n    message: 'Sensor firmware updated successfully on all digesters. New features: enhanced accuracy and predictive maintenance alerts.',\n    digesterId: 'ALL',\n    timestamp: new Date(Date.now() - 43200000).toISOString(),\n    status: 'resolved',\n    value: 'v2.1.3',\n    severity: 1,\n    location: 'All Units',\n    assignedTo: 'तकनीकी टीम',\n    estimatedResolution: 'Completed'\n  },\n  {\n    id: 'A014',\n    level: 'warning',\n    type: 'methane',\n    title: 'Methane Purity Concern - Mixed Feed',\n    message: 'Methane purity at 61% with higher CO2 content. Check feedstock composition and pH balance. Consider additives.',\n    digesterId: 'DIG-004',\n    timestamp: new Date(Date.now() - 46800000).toISOString(),\n    status: 'acknowledged',\n    value: '61.3%',\n    severity: 3,\n    location: 'Mixed Feed Processing',\n    assignedTo: 'अमित शर्मा',\n    estimatedResolution: '6 hours'\n  },\n  {\n    id: 'A015',\n    level: 'critical',\n    type: 'safety',\n    title: 'Emergency Shutdown - Buffalo Unit',\n    message: 'Emergency shutdown triggered due to multiple sensor failures. Unit isolated. Technical team dispatched for inspection.',\n    digesterId: 'DIG-003',\n    timestamp: new Date(Date.now() - 50400000).toISOString(),\n    status: 'resolved',\n    value: 'System Isolated',\n    severity: 5,\n    location: 'Yamuna Riverside Buffalo Unit',\n    assignedTo: 'आपातकालीन टीम',\n    estimatedResolution: 'Resolved'\n  }\n];\n\nconst thresholds: ThresholdConfig[] = [\n  {\n    type: 'temperature',\n    enabled: true,\n    minThreshold: 35,\n    maxThreshold: 40,\n    unit: '°C',\n    description: 'Optimal temperature range for methanogenic bacteria activity'\n  },\n  {\n    type: 'pressure',\n    enabled: true,\n    minThreshold: 0.8,\n    maxThreshold: 1.8,\n    unit: 'kPa',\n    description: 'Safe operating pressure range for biogas digester'\n  },\n  {\n    type: 'methane',\n    enabled: true,\n    minThreshold: 60,\n    maxThreshold: 75,\n    unit: '%',\n    description: 'Methane content percentage in biogas output'\n  },\n  {\n    type: 'gasProduction',\n    enabled: true,\n    minThreshold: 100,\n    maxThreshold: 200,\n    unit: 'm³/day',\n    description: 'Daily biogas production volume'\n  },\n  {\n    type: 'efficiency',\n    enabled: true,\n    minThreshold: 80,\n    maxThreshold: 95,\n    unit: '%',\n    description: 'Overall digester efficiency percentage'\n  },\n  {\n    type: 'connectivity',\n    enabled: true,\n    minThreshold: 95,\n    maxThreshold: 100,\n    unit: '%',\n    description: 'IoT sensor connectivity and data availability'\n  },\n  {\n    type: 'safety',\n    enabled: true,\n    minThreshold: 0,\n    maxThreshold: 0,\n    unit: 'level',\n    description: 'Safety alert threshold (0 = no tolerance for safety issues)'\n  },\n  {\n    type: 'maintenance',\n    enabled: true,\n    minThreshold: 0,\n    maxThreshold: 7,\n    unit: 'days',\n    description: 'Maintenance schedule adherence (max 7 days overdue)'\n  }\n];\n\n// Mock functions\nconst resolveAlert = async (alertId: string) => {\n  console.log('Resolving alert:', alertId);\n  return Promise.resolve();\n};\n\nconst dismissAlert = async (alertId: string) => {\n  console.log('Dismissing alert:', alertId);\n  return Promise.resolve();\n};\n\nconst updateThreshold = async (config: ThresholdConfig) => {\n  console.log('Updating threshold:', config);\n  return Promise.resolve();\n};\n\ninterface AlertsManagementProps {\n  languageContext?: {\n    language: 'hi' | 'en';\n    t: (key: string) => string;\n  };\n}\n\nconst translations = {\n  en: {\n    title: 'Alerts Management',\n    subtitle: 'Real-time monitoring and threshold management',\n    activeAlerts: 'Active Alerts',\n    alertHistory: 'Alert History',\n    thresholdSettings: 'Threshold Settings',\n    notificationSettings: 'Notification Settings',\n    createAlert: 'Create Alert',\n    critical: 'Critical',\n    warning: 'Warning',\n    info: 'Info',\n    success: 'Success',\n    temperature: 'Temperature',\n    pressure: 'Pressure',\n    methane: 'Methane Level',\n    gasProduction: 'Gas Production',\n    efficiency: 'Efficiency',\n    connectivity: 'Connectivity',\n    safety: 'Safety',\n    maintenance: 'Maintenance',\n    digesterId: 'Digester ID',\n    alertType: 'Alert Type',\n    level: 'Level',\n    message: 'Message',\n    timestamp: 'Timestamp',\n    status: 'Status',\n    actions: 'Actions',\n    resolve: 'Resolve',\n    dismiss: 'Dismiss',\n    viewDetails: 'View Details',\n    soundAlerts: 'Sound Alerts',\n    emailNotifications: 'Email Notifications',\n    smsNotifications: 'SMS Notifications',\n    pushNotifications: 'Push Notifications',\n    acknowledgeAll: 'Acknowledge All',\n    clearHistory: 'Clear History',\n    exportAlerts: 'Export Alerts',\n    minThreshold: 'Minimum Threshold',\n    maxThreshold: 'Maximum Threshold',\n    enabled: 'Enabled',\n    disabled: 'Disabled',\n    acknowledged: 'Acknowledged',\n    resolved: 'Resolved',\n    active: 'Active',\n    temperatureThresholds: 'Temperature Thresholds',\n    pressureThresholds: 'Pressure Thresholds',\n    methaneThresholds: 'Methane Thresholds',\n    productionThresholds: 'Production Thresholds',\n    alertCount: 'Total Alerts',\n    criticalCount: 'Critical Alerts',\n    warningCount: 'Warning Alerts',\n    resolvedToday: 'Resolved Today',\n    alertFrequency: 'Alert Frequency',\n    responseTime: 'Avg Response Time',\n    systemStatus: 'System Status',\n    monitoringActive: 'Monitoring Active',\n    allSystems: 'All Systems Operational',\n    someIssues: 'Some Issues Detected',\n    criticalIssues: 'Critical Issues Present',\n    location: 'Location',\n    assignedTo: 'Assigned To',\n    estimatedResolution: 'Est. Resolution',\n    severity: 'Severity',\n    value: 'Current Value',\n    unit: 'Unit',\n    description: 'Description'\n  },\n  hi: {\n    title: 'अलर्ट प्रबंधन',\n    subtitle: 'रियल-टाइम निगरानी और थ्रेशोल्ड प्रबंधन',\n    activeAlerts: 'सक्रिय अलर्ट',\n    alertHistory: 'अलर्ट इतिहास',\n    thresholdSettings: 'थ्रेशोल्ड सेटिंग्स',\n    notificationSettings: 'नोटिफिकेशन सेटिंग्स',\n    createAlert: 'अलर्ट बनाएं',\n    critical: 'गंभीर',\n    warning: 'चेतावनी',\n    info: 'जानकारी',\n    success: 'सफलता',\n    temperature: 'तापमान',\n    pressure: 'दबाव',\n    methane: 'मीथेन स्तर',\n    gasProduction: 'गैस उत्पादन',\n    efficiency: 'दक्षता',\n    connectivity: 'कनेक्टिविटी',\n    safety: 'सुरक्षा',\n    maintenance: 'रखरखाव',\n    digesterId: 'डाइजेस्टर आईडी',\n    alertType: 'अलर्ट प्रकार',\n    level: 'स्तर',\n    message: 'संदेश',\n    timestamp: 'समयमुहर',\n    status: 'स्थिति',\n    actions: 'कार्य',\n    resolve: 'हल करें',\n    dismiss: 'खारिज करें',\n    viewDetails: 'विवरण देखें',\n    soundAlerts: 'ध्वनि अलर्ट',\n    emailNotifications: 'ईमेल नोटिफिकेशन',\n    smsNotifications: 'SMS नोटिफिकेशन',\n    pushNotifications: 'पुश नोटिफिकेशन',\n    acknowledgeAll: 'सभी स्वीकार करें',\n    clearHistory: 'इतिहास साफ करें',\n    exportAlerts: 'अलर्ट निर्यात करें',\n    minThreshold: 'न्यूनतम थ्रेशोल्ड',\n    maxThreshold: 'अधिकतम थ्रेशोल्ड',\n    enabled: 'सक्षम',\n    disabled: 'अक्षम',\n    acknowledged: 'स्वीकृत',\n    resolved: 'हल किया गया',\n    active: 'सक्रिय',\n    temperatureThresholds: 'तापमान थ्रेशोल्ड',\n    pressureThresholds: 'दबाव थ्रेशोल्ड',\n    methaneThresholds: 'मीथेन थ्रेशोल्ड',\n    productionThresholds: 'उत्पादन थ्रेशोल्ड',\n    alertCount: 'कुल अलर्ट',\n    criticalCount: 'गंभीर अलर्ट',\n    warningCount: 'चेतावनी अलर्ट',\n    resolvedToday: 'आज हल किए गए',\n    alertFrequency: 'अलर्ट आवृत्ति',\n    responseTime: 'औसत प्रतिक्रिया समय',\n    systemStatus: 'सिस्टम स्थिति',\n    monitoringActive: 'निगरानी सक्रिय',\n    allSystems: 'सभी सिस्टम चालू',\n    someIssues: 'कुछ समस्याएं मिलीं',\n    criticalIssues: 'गंभीर समस्याएं मौजूद',\n    location: 'स्थान',\n    assignedTo: 'सौंपा गया',\n    estimatedResolution: 'अनुमानित समाधान',\n    severity: 'गंभीरता',\n    value: 'वर्तमान मान',\n    unit: 'इकाई',\n    description: 'विवरण'\n  }\n};\n\nconst getAlertLevelColor = (level: AlertLevel): string => {\n  switch (level) {\n    case 'critical':\n      return 'bg-red-100 text-red-800';\n    case 'warning':\n      return 'bg-yellow-100 text-yellow-800';\n    case 'info':\n      return 'bg-blue-100 text-blue-800';\n    case 'success':\n      return 'bg-green-100 text-green-800';\n    default:\n      return 'bg-gray-100 text-gray-800';\n  }\n};\n\nconst getAlertIcon = (level: AlertLevel) => {\n  switch (level) {\n    case 'critical':\n      return <AlertTriangle className=\"w-4 h-4 text-red-500\" />;\n    case 'warning':\n      return <AlertCircle className=\"w-4 h-4 text-yellow-500\" />;\n    case 'info':\n      return <Info className=\"w-4 h-4 text-blue-500\" />;\n    case 'success':\n      return <CheckCircle className=\"w-4 h-4 text-green-500\" />;\n    default:\n      return <Bell className=\"w-4 h-4 text-gray-500\" />;\n  }\n};\n\nconst getTypeIcon = (type: AlertType) => {\n  switch (type) {\n    case 'temperature':\n      return <Thermometer className=\"w-4 h-4\" />;\n    case 'pressure':\n      return <Gauge className=\"w-4 h-4\" />;\n    case 'methane':\n      return <Zap className=\"w-4 h-4\" />;\n    case 'gasProduction':\n      return <Activity className=\"w-4 h-4\" />;\n    case 'efficiency':\n      return <CheckCircle className=\"w-4 h-4\" />;\n    case 'connectivity':\n      return <Wifi className=\"w-4 h-4\" />;\n    case 'safety':\n      return <Shield className=\"w-4 h-4\" />;\n    case 'maintenance':\n      return <Wrench className=\"w-4 h-4\" />;\n    default:\n      return <Bell className=\"w-4 h-4\" />;\n  }\n};\n\nconst getSeverityIcon = (severity: number) => {\n  if (severity >= 5) return <AlertTriangle className=\"w-4 h-4 text-red-500\" />;\n  if (severity >= 4) return <AlertCircle className=\"w-4 h-4 text-orange-500\" />;\n  if (severity >= 3) return <AlertCircle className=\"w-4 h-4 text-yellow-500\" />;\n  if (severity >= 2) return <Info className=\"w-4 h-4 text-blue-500\" />;\n  return <CheckCircle className=\"w-4 h-4 text-green-500\" />;\n};\n\nconst AlertCard: React.FC<{\n  alert: AlertData;\n  onResolve: (id: string) => void;\n  onDismiss: (id: string) => void;\n  t: (key: string) => string;\n}> = ({ alert, onResolve, onDismiss, t }) => {\n  return (\n    <Card className={`border-l-4 ${\n      alert.level === 'critical' ? 'border-l-red-500' :\n      alert.level === 'warning' ? 'border-l-yellow-500' :\n      alert.level === 'info' ? 'border-l-blue-500' :\n      'border-l-green-500'\n    }`}>\n      <CardContent className=\"p-4\">\n        <div className=\"flex items-start justify-between\">\n          <div className=\"space-y-2 flex-1\">\n            <div className=\"flex items-center gap-2\">\n              {getAlertIcon(alert.level)}\n              <Badge className={getAlertLevelColor(alert.level)}>\n                {t(alert.level)}\n              </Badge>\n              <Badge variant=\"outline\">\n                {getTypeIcon(alert.type)}\n                <span className=\"ml-1\">{t(alert.type)}</span>\n              </Badge>\n              {alert.severity && (\n                <div className=\"flex items-center gap-1\">\n                  {getSeverityIcon(alert.severity)}\n                  <span className=\"text-xs\">{alert.severity}/5</span>\n                </div>\n              )}\n            </div>\n            <h4 className=\"font-semibold\">{alert.title}</h4>\n            <p className=\"text-sm text-muted-foreground\">{alert.message}</p>\n            <div className=\"grid grid-cols-2 gap-4 text-xs text-muted-foreground\">\n              <div>\n                <span className=\"font-medium\">Location:</span> {alert.location}\n              </div>\n              <div>\n                <span className=\"font-medium\">Assigned:</span> {alert.assignedTo}\n              </div>\n              <div>\n                <span className=\"font-medium\">Digester:</span> {alert.digesterId}\n              </div>\n              <div>\n                <span className=\"font-medium\">ETA:</span> {alert.estimatedResolution}\n              </div>\n              <div className=\"col-span-2\">\n                <span className=\"font-medium\">Time:</span> {new Date(alert.timestamp).toLocaleString()}\n              </div>\n              {alert.value && (\n                <div className=\"col-span-2\">\n                  <span className=\"font-medium\">Value:</span> {alert.value}\n                </div>\n              )}\n            </div>\n          </div>\n          <div className=\"flex gap-2 ml-4\">\n            <Button\n              size=\"sm\"\n              variant=\"outline\"\n              onClick={() => onResolve(alert.id)}\n              disabled={alert.status === 'resolved'}\n            >\n              <CheckCircle className=\"w-4 h-4\" />\n            </Button>\n            <Button\n              size=\"sm\"\n              variant=\"outline\"\n              onClick={() => onDismiss(alert.id)}\n              disabled={alert.status === 'resolved'}\n            >\n              <XCircle className=\"w-4 h-4\" />\n            </Button>\n            <Button\n              size=\"sm\"\n              variant=\"outline\"\n            >\n              <Eye className=\"w-4 h-4\" />\n            </Button>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nconst ThresholdConfigCard: React.FC<{\n  config: ThresholdConfig;\n  onUpdate: (config: ThresholdConfig) => void;\n  t: (key: string) => string;\n}> = ({ config, onUpdate, t }) => {\n  const [localConfig, setLocalConfig] = useState(config);\n\n  const handleSave = () => {\n    onUpdate(localConfig);\n  };\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          {getTypeIcon(config.type)}\n          {t(config.type)} {t('thresholds')}\n        </CardTitle>\n        <CardDescription>\n          {config.description} ({config.unit})\n        </CardDescription>\n      </CardHeader>\n      <CardContent className=\"space-y-4\">\n        <div className=\"flex items-center justify-between\">\n          <Label htmlFor={`${config.type}-enabled`}>Enable Monitoring</Label>\n          <Switch\n            id={`${config.type}-enabled`}\n            checked={localConfig.enabled}\n            onCheckedChange={(checked) => setLocalConfig(prev => ({ ...prev, enabled: checked }))}\n          />\n        </div>\n\n        {localConfig.enabled && (\n          <>\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div className=\"space-y-2\">\n                <Label htmlFor={`${config.type}-min`}>{t('minThreshold')} ({config.unit})</Label>\n                <Input\n                  id={`${config.type}-min`}\n                  type=\"number\"\n                  value={localConfig.minThreshold}\n                  onChange={(e) => setLocalConfig(prev => ({\n                    ...prev,\n                    minThreshold: parseFloat(e.target.value) || 0\n                  }))}\n                />\n              </div>\n              <div className=\"space-y-2\">\n                <Label htmlFor={`${config.type}-max`}>{t('maxThreshold')} ({config.unit})</Label>\n                <Input\n                  id={`${config.type}-max`}\n                  type=\"number\"\n                  value={localConfig.maxThreshold}\n                  onChange={(e) => setLocalConfig(prev => ({\n                    ...prev,\n                    maxThreshold: parseFloat(e.target.value) || 0\n                  }))}\n                />\n              </div>\n            </div>\n            <Button onClick={handleSave} className=\"w-full\">\n              Save Configuration\n            </Button>\n          </>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport const AlertsManagement: React.FC<AlertsManagementProps> = ({ languageContext }) => {\n  const [alertFilter, setAlertFilter] = useState<'all' | AlertLevel>('all');\n  const [typeFilter, setTypeFilter] = useState<'all' | AlertType>('all');\n  const [statusFilter, setStatusFilter] = useState<'all' | 'active' | 'acknowledged' | 'resolved'>('all');\n  const [isMonitoringActive, setIsMonitoringActive] = useState(true);\n  const [notificationSettings, setNotificationSettings] = useState({\n    sound: true,\n    email: true,\n    sms: false,\n    push: true\n  });\n\n  const lang = languageContext?.language || 'en';\n  const t = (key: string): string => {\n    return languageContext?.t(key) || translations[lang][key as keyof typeof translations[typeof lang]] || key;\n  };\n\n  // Real-time simulation\n  useEffect(() => {\n    if (!isMonitoringActive) return;\n\n    const interval = setInterval(() => {\n      // Simulate real-time monitoring updates\n      console.log('Real-time monitoring active...');\n    }, 5000);\n\n    return () => clearInterval(interval);\n  }, [isMonitoringActive]);\n\n  const filteredAlerts = alerts.filter(alert => {\n    const matchesLevel = alertFilter === 'all' || alert.level === alertFilter;\n    const matchesType = typeFilter === 'all' || alert.type === typeFilter;\n    const matchesStatus = statusFilter === 'all' || alert.status === statusFilter;\n    return matchesLevel && matchesType && matchesStatus;\n  });\n\n  const activeAlerts = alerts.filter(alert => alert.status === 'active');\n  const criticalAlerts = activeAlerts.filter(alert => alert.level === 'critical');\n  const warningAlerts = activeAlerts.filter(alert => alert.level === 'warning');\n  const resolvedToday = alerts.filter(alert =>\n    alert.status === 'resolved' &&\n    new Date(alert.timestamp).toDateString() === new Date().toDateString()\n  );\n\n  const systemStatus = criticalAlerts.length > 0 ? 'critical' :\n                     warningAlerts.length > 0 ? 'warning' : 'normal';\n\n  const handleResolveAlert = async (alertId: string) => {\n    await resolveAlert(alertId);\n  };\n\n  const handleDismissAlert = async (alertId: string) => {\n    await dismissAlert(alertId);\n  };\n\n  const handleAcknowledgeAll = async () => {\n    for (const alert of activeAlerts) {\n      await resolveAlert(alert.id);\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between -mt-6\">\n        <div>\n          <h1 className=\"text-3xl font-bold tracking-tight\">{t('title')}</h1>\n          <p className=\"text-muted-foreground\">{t('subtitle')}</p>\n        </div>\n        <div className=\"flex items-center gap-4\">\n          <div className=\"flex items-center gap-2\">\n            <Label htmlFor=\"monitoring-toggle\">{t('monitoringActive')}</Label>\n            <Switch\n              id=\"monitoring-toggle\"\n              checked={isMonitoringActive}\n              onCheckedChange={setIsMonitoringActive}\n            />\n          </div>\n          <Button\n            onClick={handleAcknowledgeAll}\n            disabled={activeAlerts.length === 0}\n            variant=\"outline\"\n          >\n            <CheckCircle className=\"w-4 h-4 mr-2\" />\n            {t('acknowledgeAll')} ({activeAlerts.length})\n          </Button>\n        </div>\n      </div>\n\n      {/* System Status Alert */}\n      {systemStatus !== 'normal' && (\n        <Alert className={`${\n          systemStatus === 'critical' ? 'border-red-200 bg-red-50' : 'border-yellow-200 bg-yellow-50'\n        }`}>\n          <AlertTriangle className={`h-4 w-4 ${\n            systemStatus === 'critical' ? 'text-red-600' : 'text-yellow-600'\n          }`} />\n          <AlertDescription className={`${\n            systemStatus === 'critical' ? 'text-red-800' : 'text-yellow-800'\n          }`}>\n            {systemStatus === 'critical' ? t('criticalIssues') : t('someIssues')}\n            {systemStatus === 'critical' && ` - ${criticalAlerts.length} critical alerts require immediate attention.`}\n          </AlertDescription>\n        </Alert>\n      )}\n\n      {/* Enhanced Statistics Cards */}\n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-5\">\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">{t('alertCount')}</CardTitle>\n            <Bell className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{alerts.length}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              {activeAlerts.length} active\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">{t('criticalCount')}</CardTitle>\n            <AlertTriangle className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-red-600\">{criticalAlerts.length}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              Require immediate action\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">{t('warningCount')}</CardTitle>\n            <AlertCircle className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-yellow-600\">{warningAlerts.length}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              Need attention\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">{t('resolvedToday')}</CardTitle>\n            <CheckCircle className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-green-600\">{resolvedToday.length}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              Issues resolved\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">{t('responseTime')}</CardTitle>\n            <Clock className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">2.4h</div>\n            <p className=\"text-xs text-muted-foreground\">\n              Average resolution time\n            </p>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Main Content */}\n      <Tabs defaultValue=\"active\" className=\"space-y-6\">\n        <TabsList className=\"grid w-full grid-cols-4\">\n          <TabsTrigger value=\"active\">{t('activeAlerts')}</TabsTrigger>\n          <TabsTrigger value=\"history\">{t('alertHistory')}</TabsTrigger>\n          <TabsTrigger value=\"thresholds\">{t('thresholdSettings')}</TabsTrigger>\n          <TabsTrigger value=\"notifications\">{t('notificationSettings')}</TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"active\" className=\"space-y-6\">\n          {/* Enhanced Filter Controls */}\n          <div className=\"flex items-center gap-4 flex-wrap\">\n            <div className=\"flex items-center gap-2\">\n              <Filter className=\"w-4 h-4\" />\n              <Label>Filters:</Label>\n            </div>\n            <Select value={alertFilter} onValueChange={(value) => setAlertFilter(value as 'all' | AlertLevel)}>\n              <SelectTrigger className=\"w-40\">\n                <SelectValue placeholder=\"Level\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"all\">All Levels</SelectItem>\n                <SelectItem value=\"critical\">{t('critical')}</SelectItem>\n                <SelectItem value=\"warning\">{t('warning')}</SelectItem>\n                <SelectItem value=\"info\">{t('info')}</SelectItem>\n              </SelectContent>\n            </Select>\n            <Select value={typeFilter} onValueChange={(value) => setTypeFilter(value as 'all' | AlertType)}>\n              <SelectTrigger className=\"w-40\">\n                <SelectValue placeholder=\"Type\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"all\">All Types</SelectItem>\n                <SelectItem value=\"temperature\">{t('temperature')}</SelectItem>\n                <SelectItem value=\"pressure\">{t('pressure')}</SelectItem>\n                <SelectItem value=\"methane\">{t('methane')}</SelectItem>\n                <SelectItem value=\"gasProduction\">{t('gasProduction')}</SelectItem>\n                <SelectItem value=\"efficiency\">{t('efficiency')}</SelectItem>\n                <SelectItem value=\"connectivity\">{t('connectivity')}</SelectItem>\n                <SelectItem value=\"safety\">{t('safety')}</SelectItem>\n                <SelectItem value=\"maintenance\">{t('maintenance')}</SelectItem>\n              </SelectContent>\n            </Select>\n            <Select value={statusFilter} onValueChange={(value) => setStatusFilter(value as any)}>\n              <SelectTrigger className=\"w-40\">\n                <SelectValue placeholder=\"Status\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"all\">All Status</SelectItem>\n                <SelectItem value=\"active\">{t('active')}</SelectItem>\n                <SelectItem value=\"acknowledged\">{t('acknowledged')}</SelectItem>\n                <SelectItem value=\"resolved\">{t('resolved')}</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n\n          {/* Active Alerts */}\n          <div className=\"space-y-4\">\n            {filteredAlerts.length === 0 ? (\n              <Card>\n                <CardContent className=\"flex flex-col items-center justify-center py-16\">\n                  <CheckCircle className=\"w-16 h-16 text-green-500 mb-4\" />\n                  <h3 className=\"text-lg font-semibold text-green-600 mb-2\">\n                    {t('allSystems')}\n                  </h3>\n                  <p className=\"text-muted-foreground text-center\">\n                    No alerts match the current filter criteria. All monitored systems are operating within normal parameters.\n                  </p>\n                </CardContent>\n              </Card>\n            ) : (\n              filteredAlerts.map((alert) => (\n                <AlertCard\n                  key={alert.id}\n                  alert={alert}\n                  onResolve={handleResolveAlert}\n                  onDismiss={handleDismissAlert}\n                  t={t}\n                />\n              ))\n            )}\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"history\">\n          <Card>\n            <CardHeader>\n              <CardTitle>{t('alertHistory')}</CardTitle>\n              <CardDescription>\n                Historical alert data and resolution tracking with detailed analysis\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-4\">\n                {alerts.slice(0, 20).map((alert) => (\n                  <div key={alert.id} className=\"flex items-center justify-between p-4 border rounded-lg\">\n                    <div className=\"space-y-1\">\n                      <div className=\"flex items-center gap-2\">\n                        {getAlertIcon(alert.level)}\n                        <Badge className={getAlertLevelColor(alert.level)}>\n                          {t(alert.level)}\n                        </Badge>\n                        <Badge variant=\"outline\">\n                          {getTypeIcon(alert.type)}\n                          <span className=\"ml-1\">{t(alert.type)}</span>\n                        </Badge>\n                        <Badge variant={alert.status === 'resolved' ? 'default' : 'secondary'}>\n                          {t(alert.status)}\n                        </Badge>\n                      </div>\n                      <h4 className=\"font-semibold\">{alert.title}</h4>\n                      <div className=\"flex items-center gap-4 text-sm text-muted-foreground\">\n                        <span>Location: {alert.location}</span>\n                        <span>Assigned: {alert.assignedTo}</span>\n                        <span>{new Date(alert.timestamp).toLocaleString()}</span>\n                      </div>\n                    </div>\n                    <Button size=\"sm\" variant=\"outline\">\n                      <Eye className=\"w-4 h-4\" />\n                    </Button>\n                  </div>\n                ))}\n                {alerts.length === 0 && (\n                  <div className=\"text-center py-8 text-muted-foreground\">\n                    <Clock className=\"w-12 h-12 mx-auto mb-2\" />\n                    <p>No alert history available</p>\n                  </div>\n                )}\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"thresholds\">\n          <div className=\"grid gap-6 md:grid-cols-2\">\n            {thresholds.map((threshold) => (\n              <ThresholdConfigCard\n                key={threshold.type}\n                config={threshold}\n                onUpdate={updateThreshold}\n                t={t}\n              />\n            ))}\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"notifications\">\n          <div className=\"grid gap-6 md:grid-cols-2\">\n            <Card>\n              <CardHeader>\n                <CardTitle>{t('notificationSettings')}</CardTitle>\n                <CardDescription>\n                  Configure how you receive alert notifications\n                </CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-6\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"space-y-0.5\">\n                    <Label htmlFor=\"sound-alerts\" className=\"flex items-center gap-2\">\n                      {notificationSettings.sound ? <Volume2 className=\"w-4 h-4\" /> : <VolumeX className=\"w-4 h-4\" />}\n                      {t('soundAlerts')}\n                    </Label>\n                    <p className=\"text-sm text-muted-foreground\">\n                      Play sound when new alerts arrive\n                    </p>\n                  </div>\n                  <Switch\n                    id=\"sound-alerts\"\n                    checked={notificationSettings.sound}\n                    onCheckedChange={(checked) => setNotificationSettings(prev => ({ ...prev, sound: checked }))}\n                  />\n                </div>\n\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"space-y-0.5\">\n                    <Label htmlFor=\"email-notifications\">{t('emailNotifications')}</Label>\n                    <p className=\"text-sm text-muted-foreground\">\n                      Send alerts via email\n                    </p>\n                  </div>\n                  <Switch\n                    id=\"email-notifications\"\n                    checked={notificationSettings.email}\n                    onCheckedChange={(checked) => setNotificationSettings(prev => ({ ...prev, email: checked }))}\n                  />\n                </div>\n\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"space-y-0.5\">\n                    <Label htmlFor=\"sms-notifications\">{t('smsNotifications')}</Label>\n                    <p className=\"text-sm text-muted-foreground\">\n                      Send critical alerts via SMS\n                    </p>\n                  </div>\n                  <Switch\n                    id=\"sms-notifications\"\n                    checked={notificationSettings.sms}\n                    onCheckedChange={(checked) => setNotificationSettings(prev => ({ ...prev, sms: checked }))}\n                  />\n                </div>\n\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"space-y-0.5\">\n                    <Label htmlFor=\"push-notifications\">{t('pushNotifications')}</Label>\n                    <p className=\"text-sm text-muted-foreground\">\n                      Browser push notifications\n                    </p>\n                  </div>\n                  <Switch\n                    id=\"push-notifications\"\n                    checked={notificationSettings.push}\n                    onCheckedChange={(checked) => setNotificationSettings(prev => ({ ...prev, push: checked }))}\n                  />\n                </div>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader>\n                <CardTitle>Alert Management</CardTitle>\n                <CardDescription>\n                  Bulk actions and system controls\n                </CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <Button\n                  onClick={handleAcknowledgeAll}\n                  disabled={activeAlerts.length === 0}\n                  className=\"w-full\"\n                >\n                  <CheckCircle className=\"w-4 h-4 mr-2\" />\n                  {t('acknowledgeAll')} ({activeAlerts.length})\n                </Button>\n\n                <Button variant=\"outline\" className=\"w-full\">\n                  <RotateCcw className=\"w-4 h-4 mr-2\" />\n                  {t('clearHistory')}\n                </Button>\n\n                <Button variant=\"outline\" className=\"w-full\">\n                  <Settings className=\"w-4 h-4 mr-2\" />\n                  {t('exportAlerts')}\n                </Button>\n\n                <div className=\"pt-4 border-t\">\n                  <div className=\"flex items-center justify-between\">\n                    <Label>Real-time Monitoring</Label>\n                    <div className=\"flex items-center gap-2\">\n                      {isMonitoringActive ? (\n                        <Play className=\"w-4 h-4 text-green-500\" />\n                      ) : (\n                        <Pause className=\"w-4 h-4 text-gray-500\" />\n                      )}\n                      <Switch\n                        checked={isMonitoringActive}\n                        onCheckedChange={setIsMonitoringActive}\n                      />\n                    </div>\n                  </div>\n                  <p className=\"text-sm text-muted-foreground mt-1\">\n                    {isMonitoringActive ? 'Monitoring system is active' : 'Monitoring is paused'}\n                  </p>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n};\n\nexport default AlertsManagement;","import { useNavigate, useLocation } from 'react-router-dom'\r\nimport { BarChart3, Factory, Weight, Gavel, CreditCard, Clock, Receipt, Bell } from 'lucide-react'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport BaseLayout from '../components/layout/BaseLayout'\r\n\r\n// Import the actual page components\r\nimport EnhancedBiogasDashboard from '../pages/biogassangh/EnhancedBiogasDashboard'\r\nimport ModernDigesterMonitoring from '../pages/biogassangh/ModernDigesterMonitoring'\r\nimport BatchManagement from '../pages/biogassangh/BatchManagement'\r\nimport DisputeResolution from '../pages/biogassangh/DisputeResolution'\r\nimport PaymentReconciliation from '../pages/biogassangh/PaymentReconciliation'\r\nimport PickupScheduler from '../pages/biogassangh/PickupScheduler'\r\nimport TransactionEntry from '../pages/biogassangh/TransactionEntry'\r\nimport AlertsManagement from '../pages/biogassangh/AlertsManagement'\r\n\r\n\r\nconst BiogasSangh = () => {\r\n  const { user } = useAuth()\r\n  const navigate = useNavigate()\r\n  const location = useLocation()\r\n\r\n  // Navigation items for the BiogasSangh module\r\n  const navigationItems = [\r\n    {\r\n      id: 'dashboard',\r\n      label: 'Dashboard',\r\n      icon: <BarChart3 className=\"w-4 h-4\" />,\r\n      onClick: () => navigate('/cluster'),\r\n      isActive: location.pathname === '/cluster'\r\n    },\r\n    {\r\n      id: 'digesters',\r\n      label: 'Digester Monitoring',\r\n      icon: <Factory className=\"w-4 h-4\" />,\r\n      onClick: () => navigate('/cluster/digesters'),\r\n      isActive: location.pathname === '/cluster/digesters'\r\n    },\r\n    {\r\n      id: 'batches',\r\n      label: 'Batch Management',\r\n      icon: <Weight className=\"w-4 h-4\" />,\r\n      onClick: () => navigate('/cluster/batches'),\r\n      isActive: location.pathname === '/cluster/batches'\r\n    },\r\n    {\r\n      id: 'disputes',\r\n      label: 'Dispute Resolution',\r\n      icon: <Gavel className=\"w-4 h-4\" />,\r\n      onClick: () => navigate('/cluster/disputes'),\r\n      isActive: location.pathname === '/cluster/disputes'\r\n    },\r\n    {\r\n      id: 'payments',\r\n      label: 'Payment Reconciliation',\r\n      icon: <CreditCard className=\"w-4 h-4\" />,\r\n      onClick: () => navigate('/cluster/payments'),\r\n      isActive: location.pathname === '/cluster/payments'\r\n    },\r\n    {\r\n      id: 'scheduler',\r\n      label: 'Pickup Scheduler',\r\n      icon: <Clock className=\"w-4 h-4\" />,\r\n      onClick: () => navigate('/cluster/scheduler'),\r\n      isActive: location.pathname === '/cluster/scheduler'\r\n    },\r\n    {\r\n      id: 'transactions',\r\n      label: 'Transaction Entry',\r\n      icon: <Receipt className=\"w-4 h-4\" />,\r\n      onClick: () => navigate('/cluster/transactions'),\r\n      isActive: location.pathname === '/cluster/transactions'\r\n    },\r\n    {\r\n      id: 'alerts',\r\n      label: 'Alerts Management',\r\n      icon: <Bell className=\"w-4 h-4\" />,\r\n      onClick: () => navigate('/cluster/alerts'),\r\n      isActive: location.pathname === '/cluster/alerts'\r\n    }\r\n  ]\r\n\r\n  // Breadcrumbs\r\n  const breadcrumbs = [\r\n    { label: 'SAUBHAGYA', onClick: () => navigate('/') },\r\n    { label: 'BiogasSangh Cluster', onClick: () => navigate('/cluster') }\r\n  ]\r\n\r\n  // Page content based on current route\r\n  const renderPageContent = () => {\r\n    const currentPath = location.pathname\r\n\r\n    if (currentPath === '/cluster/digesters') {\r\n      return <ModernDigesterMonitoring />\r\n    }\r\n\r\n    if (currentPath === '/cluster/batches') {\r\n      return <BatchManagement />\r\n    }\r\n\r\n    if (currentPath === '/cluster/disputes') {\r\n      return <DisputeResolution />\r\n    }\r\n\r\n    if (currentPath === '/cluster/payments') {\r\n      return <PaymentReconciliation />\r\n    }\r\n\r\n    if (currentPath === '/cluster/scheduler') {\r\n      return <PickupScheduler />\r\n    }\r\n\r\n    if (currentPath === '/cluster/transactions') {\r\n      return <TransactionEntry />\r\n    }\r\n\r\n    if (currentPath === '/cluster/alerts') {\r\n      return <AlertsManagement />\r\n    }\r\n\r\n    // Default dashboard - use the enhanced dashboard\r\n    return <EnhancedBiogasDashboard />\r\n  }\r\n\r\n  return (\r\n    <BaseLayout\r\n      moduleName=\"BiogasSangh\"\r\n      moduleSubtitle=\"Cluster Management & Operations\"\r\n      navigationItems={navigationItems}\r\n      userInfo={{ name: user?.name || \"Cluster Manager\", role: \"CLUSTER_MANAGER\" }}\r\n      breadcrumbs={breadcrumbs}\r\n      contentClassName=\"!pt-16 !mt-2\"\r\n    >\r\n      {renderPageContent()}\r\n    </BaseLayout>\r\n  )\r\n}\r\n\r\nexport default BiogasSangh","import {\r\n  Customer,\r\n  Contract,\r\n  InventoryItem,\r\n  Order,\r\n  Invoice,\r\n  Payment,\r\n  Delivery,\r\n  PriceData,\r\n  ComplianceRecord,\r\n  SalesMetrics,\r\n  VoiceInvoiceData,\r\n  ApiResponse,\r\n  PaginatedResponse,\r\n  CustomerFilters,\r\n  OrderFilters,\r\n  InventoryFilters\r\n} from '../types';\r\n\r\n// Mock data generators\r\nconst generateMockCustomers = (): Customer[] => [\r\n  {\r\n    id: 'cust_001',\r\n    name: 'Green Energy Industries',\r\n    type: 'industrial',\r\n    contactPerson: 'Rajesh Kumar',\r\n    phone: '+91-9876543210',\r\n    email: 'rajesh@greenenergy.com',\r\n    address: {\r\n      street: '123 Industrial Area, Phase 2',\r\n      city: 'Noida',\r\n      state: 'Uttar Pradesh',\r\n      pincode: '201301',\r\n      coordinates: { lat: 28.5355, lng: 77.3910 }\r\n    },\r\n    creditLimit: 5000000,\r\n    creditUsed: 1250000,\r\n    paymentTerms: 30,\r\n    gstNumber: '09ABCDE1234F1Z5',\r\n    panNumber: 'ABCDE1234F',\r\n    status: 'active',\r\n    registrationDate: new Date('2023-01-15'),\r\n    lastOrderDate: new Date('2024-09-15'),\r\n    totalOrders: 45,\r\n    totalRevenue: 12500000,\r\n    riskCategory: 'low'\r\n  },\r\n  {\r\n    id: 'cust_002',\r\n    name: 'Sunrise Hotel Chain',\r\n    type: 'commercial',\r\n    contactPerson: 'Priya Sharma',\r\n    phone: '+91-9876543211',\r\n    email: 'priya@sunrisehotels.com',\r\n    address: {\r\n      street: '45 MG Road',\r\n      city: 'Bangalore',\r\n      state: 'Karnataka',\r\n      pincode: '560001',\r\n      coordinates: { lat: 12.9716, lng: 77.5946 }\r\n    },\r\n    creditLimit: 1000000,\r\n    creditUsed: 150000,\r\n    paymentTerms: 15,\r\n    gstNumber: '29FGHIJ5678K2L6',\r\n    panNumber: 'FGHIJ5678K',\r\n    status: 'active',\r\n    registrationDate: new Date('2023-03-20'),\r\n    lastOrderDate: new Date('2024-09-20'),\r\n    totalOrders: 32,\r\n    totalRevenue: 2800000,\r\n    riskCategory: 'low'\r\n  },\r\n  {\r\n    id: 'cust_003',\r\n    name: 'Residential Society - Emerald Heights',\r\n    type: 'residential',\r\n    contactPerson: 'Amit Verma',\r\n    phone: '+91-9876543212',\r\n    email: 'amit@emeraldheights.com',\r\n    address: {\r\n      street: 'Emerald Heights, Sector 65',\r\n      city: 'Gurgaon',\r\n      state: 'Haryana',\r\n      pincode: '122018',\r\n      coordinates: { lat: 28.4089, lng: 77.0507 }\r\n    },\r\n    creditLimit: 500000,\r\n    creditUsed: 75000,\r\n    paymentTerms: 7,\r\n    status: 'active',\r\n    registrationDate: new Date('2023-06-10'),\r\n    lastOrderDate: new Date('2024-09-18'),\r\n    totalOrders: 28,\r\n    totalRevenue: 850000,\r\n    riskCategory: 'medium'\r\n  }\r\n];\r\n\r\nconst generateMockContracts = (): Contract[] => [\r\n  {\r\n    id: 'cont_001',\r\n    customerId: 'cust_001',\r\n    contractNumber: 'SB-2024-001',\r\n    type: 'supply',\r\n    status: 'active',\r\n    startDate: new Date('2024-01-01'),\r\n    endDate: new Date('2024-12-31'),\r\n    gasType: 'biogas',\r\n    quantity: 10000,\r\n    pricePerUnit: 45,\r\n    totalValue: 5400000,\r\n    paymentTerms: {\r\n      advancePercentage: 20,\r\n      creditDays: 30,\r\n      penaltyRate: 2\r\n    },\r\n    deliveryTerms: {\r\n      location: 'Customer Site',\r\n      frequency: 'monthly',\r\n      transportMode: 'pipeline'\r\n    },\r\n    version: 1,\r\n    signedDate: new Date('2023-12-15'),\r\n    signedBy: {\r\n      customer: { name: 'Rajesh Kumar', designation: 'CEO', signature: 'digital_signature_1' },\r\n      company: { name: 'Saubhagya Representative', designation: 'Sales Manager', signature: 'digital_signature_2' }\r\n    },\r\n    documents: [\r\n      {\r\n        id: 'doc_001',\r\n        name: 'Supply Agreement.pdf',\r\n        type: 'contract',\r\n        url: '/documents/supply_agreement_001.pdf',\r\n        uploadDate: new Date('2023-12-15')\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\nconst generateMockInventory = (): InventoryItem[] => [\r\n  {\r\n    id: 'inv_001',\r\n    gasType: 'biogas',\r\n    batchNumber: 'BG-2024-001',\r\n    productionDate: new Date('2024-09-15'),\r\n    quantity: 5000,\r\n    availableQuantity: 3500,\r\n    unit: 'cubic_meters',\r\n    quality: {\r\n      methaneContent: 65,\r\n      purity: 98.5,\r\n      pressure: 15,\r\n      temperature: 25\r\n    },\r\n    location: {\r\n      plantId: 'plant_001',\r\n      tankId: 'tank_A1',\r\n      coordinates: { lat: 28.7041, lng: 77.1025 }\r\n    },\r\n    pesoCompliance: {\r\n      certificateNumber: 'PESO-2024-001',\r\n      issueDate: new Date('2024-01-15'),\r\n      expiryDate: new Date('2025-01-15'),\r\n      status: 'valid',\r\n      inspector: 'Dr. Rajesh Gupta'\r\n    },\r\n    pricePerUnit: 45,\r\n    reservedQuantity: 1500,\r\n    status: 'available'\r\n  },\r\n  {\r\n    id: 'inv_002',\r\n    gasType: 'compressed',\r\n    batchNumber: 'CG-2024-005',\r\n    productionDate: new Date('2024-09-20'),\r\n    quantity: 2000,\r\n    availableQuantity: 1800,\r\n    unit: 'kg',\r\n    quality: {\r\n      methaneContent: 95,\r\n      purity: 99.2,\r\n      pressure: 200,\r\n      temperature: 20\r\n    },\r\n    location: {\r\n      plantId: 'plant_002',\r\n      tankId: 'tank_B2',\r\n      coordinates: { lat: 28.6139, lng: 77.2090 }\r\n    },\r\n    pesoCompliance: {\r\n      certificateNumber: 'PESO-2024-002',\r\n      issueDate: new Date('2024-02-01'),\r\n      expiryDate: new Date('2025-02-01'),\r\n      status: 'valid',\r\n      inspector: 'Mr. Suresh Yadav'\r\n    },\r\n    pricePerUnit: 65,\r\n    reservedQuantity: 200,\r\n    status: 'available'\r\n  }\r\n];\r\n\r\nconst generateMockOrders = (): Order[] => [\r\n  {\r\n    id: 'ord_001',\r\n    orderNumber: 'ORD-2024-001',\r\n    customerId: 'cust_001',\r\n    contractId: 'cont_001',\r\n    orderDate: new Date('2024-09-15'),\r\n    requestedDeliveryDate: new Date('2024-09-25'),\r\n    status: 'confirmed',\r\n    items: [\r\n      {\r\n        inventoryId: 'inv_001',\r\n        gasType: 'biogas',\r\n        quantity: 1000,\r\n        pricePerUnit: 45,\r\n        totalAmount: 45000,\r\n        batchNumber: 'BG-2024-001'\r\n      }\r\n    ],\r\n    totalQuantity: 1000,\r\n    totalAmount: 45000,\r\n    discountPercentage: 5,\r\n    discountAmount: 2250,\r\n    taxAmount: 7695,\r\n    finalAmount: 50445,\r\n    deliveryAddress: {\r\n      street: '123 Industrial Area, Phase 2',\r\n      city: 'Noida',\r\n      state: 'Uttar Pradesh',\r\n      pincode: '201301',\r\n      coordinates: { lat: 28.5355, lng: 77.3910 }\r\n    },\r\n    deliveryInstructions: 'Delivery during business hours only',\r\n    invoiceGenerated: true,\r\n    invoiceNumber: 'INV-2024-001',\r\n    paymentStatus: 'pending',\r\n    createdBy: 'sales_user_001',\r\n    lastModifiedBy: 'sales_user_001',\r\n    lastModifiedDate: new Date('2024-09-15')\r\n  }\r\n];\r\n\r\nconst generateMockInvoices = (): Invoice[] => [\r\n  {\r\n    id: 'inv_001',\r\n    invoiceNumber: 'INV-2024-001',\r\n    orderId: 'ord_001',\r\n    customerId: 'cust_001',\r\n    invoiceDate: new Date('2024-09-15'),\r\n    dueDate: new Date('2024-10-15'),\r\n    status: 'sent',\r\n    items: [\r\n      {\r\n        description: 'Biogas Supply - BG-2024-001',\r\n        quantity: 1000,\r\n        unit: 'cubic meters',\r\n        pricePerUnit: 45,\r\n        totalAmount: 45000,\r\n        taxRate: 18,\r\n        taxAmount: 8100\r\n      }\r\n    ],\r\n    subtotal: 45000,\r\n    discountAmount: 2250,\r\n    taxAmount: 7695,\r\n    totalAmount: 50445,\r\n    paidAmount: 0,\r\n    balanceAmount: 50445,\r\n    paymentTerms: 'Net 30 days',\r\n    bankDetails: {\r\n      accountName: 'Saubhagya Energy Solutions',\r\n      accountNumber: '1234567890',\r\n      ifscCode: 'SBIN0001234',\r\n      bankName: 'State Bank of India'\r\n    },\r\n    notes: 'Payment due within 30 days of invoice date',\r\n    generatedBy: 'manual'\r\n  }\r\n];\r\n\r\n// Service functions\r\nexport const salesService = {\r\n  // Customer Management\r\n  async getCustomers(filters?: CustomerFilters): Promise<PaginatedResponse<Customer>> {\r\n    const customers = generateMockCustomers();\r\n    return {\r\n      success: true,\r\n      data: customers,\r\n      pagination: {\r\n        page: 1,\r\n        limit: 10,\r\n        total: customers.length,\r\n        totalPages: 1\r\n      }\r\n    };\r\n  },\r\n\r\n  async getCustomerById(id: string): Promise<ApiResponse<Customer>> {\r\n    const customers = generateMockCustomers();\r\n    const customer = customers.find(c => c.id === id);\r\n    return {\r\n      success: !!customer,\r\n      data: customer!,\r\n      message: customer ? 'Customer found' : 'Customer not found'\r\n    };\r\n  },\r\n\r\n  async createCustomer(customer: Omit<Customer, 'id'>): Promise<ApiResponse<Customer>> {\r\n    const newCustomer: Customer = {\r\n      ...customer,\r\n      id: `cust_${Date.now()}`\r\n    };\r\n    return {\r\n      success: true,\r\n      data: newCustomer,\r\n      message: 'Customer created successfully'\r\n    };\r\n  },\r\n\r\n  async updateCustomer(id: string, updates: Partial<Customer>): Promise<ApiResponse<Customer>> {\r\n    const customers = generateMockCustomers();\r\n    const customer = customers.find(c => c.id === id);\r\n    if (!customer) {\r\n      return { success: false, data: null as any, message: 'Customer not found' };\r\n    }\r\n    const updatedCustomer = { ...customer, ...updates };\r\n    return {\r\n      success: true,\r\n      data: updatedCustomer,\r\n      message: 'Customer updated successfully'\r\n    };\r\n  },\r\n\r\n  // Contract Management\r\n  async getContracts(): Promise<PaginatedResponse<Contract>> {\r\n    const contracts = generateMockContracts();\r\n    return {\r\n      success: true,\r\n      data: contracts,\r\n      pagination: {\r\n        page: 1,\r\n        limit: 10,\r\n        total: contracts.length,\r\n        totalPages: 1\r\n      }\r\n    };\r\n  },\r\n\r\n  async getContractById(id: string): Promise<ApiResponse<Contract>> {\r\n    const contracts = generateMockContracts();\r\n    const contract = contracts.find(c => c.id === id);\r\n    return {\r\n      success: !!contract,\r\n      data: contract!,\r\n      message: contract ? 'Contract found' : 'Contract not found'\r\n    };\r\n  },\r\n\r\n  async createContract(contract: Omit<Contract, 'id'>): Promise<ApiResponse<Contract>> {\r\n    const newContract: Contract = {\r\n      ...contract,\r\n      id: `cont_${Date.now()}`\r\n    };\r\n    return {\r\n      success: true,\r\n      data: newContract,\r\n      message: 'Contract created successfully'\r\n    };\r\n  },\r\n\r\n  // Inventory Management\r\n  async getInventory(filters?: InventoryFilters): Promise<PaginatedResponse<InventoryItem>> {\r\n    const inventory = generateMockInventory();\r\n    return {\r\n      success: true,\r\n      data: inventory,\r\n      pagination: {\r\n        page: 1,\r\n        limit: 10,\r\n        total: inventory.length,\r\n        totalPages: 1\r\n      }\r\n    };\r\n  },\r\n\r\n  async updateInventoryItem(id: string, updates: Partial<InventoryItem>): Promise<ApiResponse<InventoryItem>> {\r\n    const inventory = generateMockInventory();\r\n    const item = inventory.find(i => i.id === id);\r\n    if (!item) {\r\n      return { success: false, data: null as any, message: 'Inventory item not found' };\r\n    }\r\n    const updatedItem = { ...item, ...updates };\r\n    return {\r\n      success: true,\r\n      data: updatedItem,\r\n      message: 'Inventory item updated successfully'\r\n    };\r\n  },\r\n\r\n  // Order Management\r\n  async getOrders(filters?: OrderFilters): Promise<PaginatedResponse<Order>> {\r\n    const orders = generateMockOrders();\r\n    return {\r\n      success: true,\r\n      data: orders,\r\n      pagination: {\r\n        page: 1,\r\n        limit: 10,\r\n        total: orders.length,\r\n        totalPages: 1\r\n      }\r\n    };\r\n  },\r\n\r\n  async createOrder(order: Omit<Order, 'id' | 'orderNumber'>): Promise<ApiResponse<Order>> {\r\n    const newOrder: Order = {\r\n      ...order,\r\n      id: `ord_${Date.now()}`,\r\n      orderNumber: `ORD-${new Date().getFullYear()}-${Date.now().toString().slice(-6)}`\r\n    };\r\n    return {\r\n      success: true,\r\n      data: newOrder,\r\n      message: 'Order created successfully'\r\n    };\r\n  },\r\n\r\n  // Invoice Management\r\n  async getInvoices(): Promise<PaginatedResponse<Invoice>> {\r\n    const invoices = generateMockInvoices();\r\n    return {\r\n      success: true,\r\n      data: invoices,\r\n      pagination: {\r\n        page: 1,\r\n        limit: 10,\r\n        total: invoices.length,\r\n        totalPages: 1\r\n      }\r\n    };\r\n  },\r\n\r\n  async generateInvoice(orderId: string): Promise<ApiResponse<Invoice>> {\r\n    const invoice: Invoice = {\r\n      id: `inv_${Date.now()}`,\r\n      invoiceNumber: `INV-${new Date().getFullYear()}-${Date.now().toString().slice(-6)}`,\r\n      orderId,\r\n      customerId: 'cust_001',\r\n      invoiceDate: new Date(),\r\n      dueDate: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000),\r\n      status: 'draft',\r\n      items: [],\r\n      subtotal: 0,\r\n      discountAmount: 0,\r\n      taxAmount: 0,\r\n      totalAmount: 0,\r\n      paidAmount: 0,\r\n      balanceAmount: 0,\r\n      paymentTerms: 'Net 30 days',\r\n      bankDetails: {\r\n        accountName: 'Saubhagya Energy Solutions',\r\n        accountNumber: '1234567890',\r\n        ifscCode: 'SBIN0001234',\r\n        bankName: 'State Bank of India'\r\n      },\r\n      generatedBy: 'manual'\r\n    };\r\n    return {\r\n      success: true,\r\n      data: invoice,\r\n      message: 'Invoice generated successfully'\r\n    };\r\n  },\r\n\r\n  // Voice Invoicing\r\n  async startVoiceSession(language: 'hindi' | 'english'): Promise<ApiResponse<VoiceInvoiceData>> {\r\n    const session: VoiceInvoiceData = {\r\n      id: `voice_${Date.now()}`,\r\n      sessionId: `session_${Date.now()}`,\r\n      startTime: new Date(),\r\n      language,\r\n      transcription: '',\r\n      confidence: 0,\r\n      extractedData: { items: [] },\r\n      status: 'recording',\r\n      validationErrors: []\r\n    };\r\n    return {\r\n      success: true,\r\n      data: session,\r\n      message: 'Voice session started'\r\n    };\r\n  },\r\n\r\n  async processVoiceData(sessionId: string, audioData: string): Promise<ApiResponse<VoiceInvoiceData>> {\r\n    // Mock processing\r\n    const processedData: VoiceInvoiceData = {\r\n      id: sessionId,\r\n      sessionId,\r\n      startTime: new Date(Date.now() - 60000),\r\n      endTime: new Date(),\r\n      language: 'hindi',\r\n      transcription: 'ग्रीन एनर्जी इंडस्ट्रीज के लिए एक हजार क्यूबिक मीटर बायो गैस, पैंतालीस रुपए प्रति यूनिट',\r\n      confidence: 0.85,\r\n      extractedData: {\r\n        customerName: 'Green Energy Industries',\r\n        customerId: 'cust_001',\r\n        items: [\r\n          {\r\n            description: 'Biogas',\r\n            quantity: 1000,\r\n            unit: 'cubic meters',\r\n            pricePerUnit: 45\r\n          }\r\n        ],\r\n        totalAmount: 45000\r\n      },\r\n      status: 'completed',\r\n      validationErrors: []\r\n    };\r\n    return {\r\n      success: true,\r\n      data: processedData,\r\n      message: 'Voice data processed successfully'\r\n    };\r\n  },\r\n\r\n  // Payment Management\r\n  async getPayments(): Promise<PaginatedResponse<Payment>> {\r\n    const payments: Payment[] = [];\r\n    return {\r\n      success: true,\r\n      data: payments,\r\n      pagination: {\r\n        page: 1,\r\n        limit: 10,\r\n        total: 0,\r\n        totalPages: 0\r\n      }\r\n    };\r\n  },\r\n\r\n  // Delivery Management\r\n  async getDeliveries(): Promise<PaginatedResponse<Delivery>> {\r\n    const deliveries: Delivery[] = [];\r\n    return {\r\n      success: true,\r\n      data: deliveries,\r\n      pagination: {\r\n        page: 1,\r\n        limit: 10,\r\n        total: 0,\r\n        totalPages: 0\r\n      }\r\n    };\r\n  },\r\n\r\n  // Price Management\r\n  async getPriceData(): Promise<ApiResponse<PriceData[]>> {\r\n    const priceData: PriceData[] = [];\r\n    return {\r\n      success: true,\r\n      data: priceData,\r\n      message: 'Price data retrieved successfully'\r\n    };\r\n  },\r\n\r\n  // Compliance\r\n  async getComplianceRecords(): Promise<PaginatedResponse<ComplianceRecord>> {\r\n    const records: ComplianceRecord[] = [];\r\n    return {\r\n      success: true,\r\n      data: records,\r\n      pagination: {\r\n        page: 1,\r\n        limit: 10,\r\n        total: 0,\r\n        totalPages: 0\r\n      }\r\n    };\r\n  },\r\n\r\n  // Dashboard Metrics\r\n  async getSalesMetrics(): Promise<ApiResponse<SalesMetrics>> {\r\n    const metrics: SalesMetrics = {\r\n      totalRevenue: 15000000,\r\n      totalOrders: 105,\r\n      averageOrderValue: 142857,\r\n      totalCustomers: 25,\r\n      activeContracts: 8,\r\n      inventoryValue: 2500000,\r\n      pendingPayments: 750000,\r\n      deliverySuccess: 98.5,\r\n      customerSatisfaction: 4.6,\r\n      periodComparison: {\r\n        revenue: { current: 15000000, previous: 12000000, change: 25 },\r\n        orders: { current: 105, previous: 85, change: 23.5 },\r\n        customers: { current: 25, previous: 20, change: 25 }\r\n      }\r\n    };\r\n    return {\r\n      success: true,\r\n      data: metrics,\r\n      message: 'Metrics retrieved successfully'\r\n    };\r\n  }\r\n};\r\n\r\nexport default salesService;","import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Progress } from '@/components/ui/progress';\r\nimport {\r\n  TrendingUp,\r\n  TrendingDown,\r\n  Users,\r\n  FileText,\r\n  Package,\r\n  DollarSign,\r\n  AlertTriangle,\r\n  Calendar,\r\n  Truck,\r\n  RefreshCw,\r\n  BarChart3,\r\n  PieChart,\r\n  Activity\r\n} from 'lucide-react';\r\nimport { salesService } from '../services/salesService';\r\nimport { SalesMetrics, InventoryItem, Order, Customer } from '../types';\r\n\r\ninterface MetricCardProps {\r\n  title: string;\r\n  value: string | number;\r\n  change?: number;\r\n  icon: React.ReactNode;\r\n  description?: string;\r\n  status?: 'positive' | 'negative' | 'neutral';\r\n}\r\n\r\nconst MetricCard: React.FC<MetricCardProps> = ({ title, value, change, icon, description, status = 'neutral' }) => {\r\n  const getChangeColor = () => {\r\n    if (change === undefined) return 'text-gray-500';\r\n    return change >= 0 ? 'text-green-600' : 'text-red-600';\r\n  };\r\n\r\n  const getChangeIcon = () => {\r\n    if (change === undefined) return null;\r\n    return change >= 0 ? <TrendingUp className=\"w-4 h-4\" /> : <TrendingDown className=\"w-4 h-4\" />;\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n        <CardTitle className=\"text-sm font-medium\">{title}</CardTitle>\r\n        {icon}\r\n      </CardHeader>\r\n      <CardContent>\r\n        <div className=\"text-2xl font-bold\">{value}</div>\r\n        {change !== undefined && (\r\n          <div className={`flex items-center space-x-1 text-xs ${getChangeColor()}`}>\r\n            {getChangeIcon()}\r\n            <span>{Math.abs(change)}% from last month</span>\r\n          </div>\r\n        )}\r\n        {description && (\r\n          <p className=\"text-xs text-muted-foreground mt-1\">{description}</p>\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\ninterface RecentOrderProps {\r\n  order: Order;\r\n}\r\n\r\nconst RecentOrderItem: React.FC<RecentOrderProps> = ({ order }) => {\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'confirmed': return 'bg-green-100 text-green-800';\r\n      case 'pending': return 'bg-yellow-100 text-yellow-800';\r\n      case 'processing': return 'bg-blue-100 text-blue-800';\r\n      case 'delivered': return 'bg-green-100 text-green-800';\r\n      case 'cancelled': return 'bg-red-100 text-red-800';\r\n      default: return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex items-center justify-between p-3 border rounded-lg\">\r\n      <div className=\"space-y-1\">\r\n        <div className=\"flex items-center space-x-2\">\r\n          <span className=\"font-medium\">{order.orderNumber}</span>\r\n          <Badge className={getStatusColor(order.status)}>{order.status}</Badge>\r\n        </div>\r\n        <div className=\"text-sm text-gray-600\">\r\n          {order.items[0]?.gasType} • {order.totalQuantity.toLocaleString()} units\r\n        </div>\r\n        <div className=\"text-xs text-gray-500\">\r\n          {order.orderDate.toLocaleDateString()}\r\n        </div>\r\n      </div>\r\n      <div className=\"text-right\">\r\n        <div className=\"font-semibold\">₹{order.finalAmount.toLocaleString()}</div>\r\n        <div className=\"text-sm text-gray-600\">\r\n          Due: {order.requestedDeliveryDate.toLocaleDateString()}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface InventoryAlertProps {\r\n  item: InventoryItem;\r\n}\r\n\r\nconst InventoryAlert: React.FC<InventoryAlertProps> = ({ item }) => {\r\n  const getAlertType = () => {\r\n    const usagePercentage = ((item.quantity - item.availableQuantity) / item.quantity) * 100;\r\n    if (usagePercentage > 80) return { color: 'text-red-600', level: 'Critical' };\r\n    if (usagePercentage > 60) return { color: 'text-yellow-600', level: 'Warning' };\r\n    return { color: 'text-blue-600', level: 'Info' };\r\n  };\r\n\r\n  const alert = getAlertType();\r\n\r\n  return (\r\n    <div className=\"flex items-center justify-between p-3 border rounded-lg\">\r\n      <div className=\"flex items-center space-x-3\">\r\n        <AlertTriangle className={`w-5 h-5 ${alert.color}`} />\r\n        <div>\r\n          <div className=\"font-medium\">{item.batchNumber}</div>\r\n          <div className=\"text-sm text-gray-600\">\r\n            {item.gasType} • Available: {item.availableQuantity.toLocaleString()} {item.unit}\r\n          </div>\r\n          <div className=\"text-xs text-gray-500\">\r\n            PESO: {item.pesoCompliance.status}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"text-right\">\r\n        <Badge className={alert.color.includes('red') ? 'bg-red-100 text-red-800' :\r\n                          alert.color.includes('yellow') ? 'bg-yellow-100 text-yellow-800' :\r\n                          'bg-blue-100 text-blue-800'}>\r\n          {alert.level}\r\n        </Badge>\r\n        <div className=\"text-sm text-gray-600 mt-1\">\r\n          ₹{(item.availableQuantity * item.pricePerUnit).toLocaleString()}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Performance data with varied statuses for realistic dashboard\r\nconst performanceData = [\r\n  { metric: \"Delivery Success\", current: 98.5, target: 98 }, // Green - Target Achieved\r\n  { metric: \"Customer Satisfaction\", current: 87, target: 90 }, // Yellow - Near Target\r\n  { metric: \"Order Fulfillment\", current: 95.2, target: 95 }, // Green - Target Achieved\r\n  { metric: \"Payment Collection\", current: 82, target: 95 }, // Red - Below Target\r\n];\r\n\r\n// Sample data for simple charts - Realistic revenue figures in thousands\r\nconst revenueData = [\r\n  { month: \"Jan\", value: 1850 },\r\n  { month: \"Feb\", value: 2305 },\r\n  { month: \"Mar\", value: 1870 },\r\n  { month: \"Apr\", value: 2450 },\r\n  { month: \"May\", value: 2890 },\r\n  { month: \"Jun\", value: 3140 },\r\n];\r\n\r\nconst gasTypeData = [\r\n  { type: \"Biogas\", percentage: 45, color: \"bg-blue-500\" },\r\n  { type: \"CBG\", percentage: 30, color: \"bg-green-500\" },\r\n  { type: \"Methane\", percentage: 25, color: \"bg-purple-500\" },\r\n];\r\n\r\nconst customerGrowthData = [\r\n  { month: \"Jan\", customers: 12 },\r\n  { month: \"Feb\", customers: 18 },\r\n  { month: \"Mar\", customers: 15 },\r\n  { month: \"Apr\", customers: 22 },\r\n  { month: \"May\", customers: 25 },\r\n  { month: \"Jun\", customers: 28 },\r\n];\r\n\r\n// Simple Bar Chart Component\r\nconst SimpleBarChart: React.FC<{ data: any[], title: string }> = ({ data, title }) => {\r\n  const maxValue = Math.max(...data.map(d => d.value || d.customers));\r\n\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <div className=\"relative h-48 flex items-end justify-between space-x-1 bg-gray-50 p-4 rounded-lg\">\r\n        {data.map((item, index) => {\r\n          const value = item.value || item.customers;\r\n          const height = (value / maxValue) * 80; // Use 80% of container height\r\n          const isRevenue = item.value !== undefined;\r\n          const displayValue = isRevenue ? `₹${(value/1000).toFixed(1)}K` : value.toString();\r\n\r\n          return (\r\n            <div key={index} className=\"flex-1 flex flex-col items-center relative\">\r\n              {/* Value label above bar */}\r\n              <div className=\"text-xs font-semibold text-gray-700 mb-2 absolute -top-6\">\r\n                {displayValue}\r\n              </div>\r\n\r\n              {/* Bar container */}\r\n              <div className=\"w-full flex flex-col items-center\">\r\n                {/* Actual bar */}\r\n                <div\r\n                  className=\"w-8 bg-gradient-to-t from-blue-600 to-blue-400 rounded-t-md transition-all duration-300 hover:from-blue-700 hover:to-blue-500 shadow-md border border-blue-300\"\r\n                  style={{\r\n                    height: `${Math.max(height, 12)}px`,\r\n                    minHeight: '12px'\r\n                  }}\r\n                  title={`${item.month}: ${displayValue}`}\r\n                />\r\n\r\n                {/* Month label */}\r\n                <span className=\"text-xs text-gray-600 font-medium mt-2\">{item.month}</span>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      {/* Chart info */}\r\n      <div className=\"text-xs text-gray-500 text-center\">\r\n        Peak: {title.includes('Revenue') ? `₹${(maxValue/1000).toFixed(1)}K` : maxValue} •\r\n        Growth: {title.includes('Revenue') ? '+69.7%' : '+133%'} vs Jan\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Simple Pie Chart Component (using simple bars for reliability)\r\nconst SimplePieChart: React.FC<{ data: any[], title: string }> = ({ data, title }) => {\r\n  return (\r\n    <div className=\"space-y-3\">\r\n      <h4 className=\"text-sm font-medium text-gray-700\">{title}</h4>\r\n      <div className=\"space-y-3\">\r\n        {data.map((item, index) => (\r\n          <div key={index} className=\"space-y-1\">\r\n            <div className=\"flex items-center justify-between text-sm\">\r\n              <div className=\"flex items-center space-x-2\">\r\n                <div className={`w-3 h-3 rounded-full ${item.color}`} />\r\n                <span className=\"text-gray-600\">{item.type}</span>\r\n              </div>\r\n              <span className=\"font-medium\">{item.percentage}%</span>\r\n            </div>\r\n            <div className=\"w-full bg-gray-200 rounded-full h-2\">\r\n              <div\r\n                className={`h-2 rounded-full ${item.color} transition-all duration-300`}\r\n                style={{ width: `${item.percentage}%` }}\r\n              />\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SalesDashboard: React.FC = () => {\r\n  const [metrics, setMetrics] = useState<SalesMetrics | null>(null);\r\n  const [recentOrders, setRecentOrders] = useState<Order[]>([]);\r\n  const [inventoryAlerts, setInventoryAlerts] = useState<InventoryItem[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [lastUpdated, setLastUpdated] = useState<Date>(new Date());\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'confirmed': return 'bg-green-100 text-green-800';\r\n      case 'pending': return 'bg-yellow-100 text-yellow-800';\r\n      case 'processing': return 'bg-blue-100 text-blue-800';\r\n      case 'delivered': return 'bg-green-100 text-green-800';\r\n      case 'cancelled': return 'bg-red-100 text-red-800';\r\n      default: return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  const loadDashboardData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const [metricsResponse, ordersResponse, inventoryResponse] = await Promise.all([\r\n        salesService.getSalesMetrics(),\r\n        salesService.getOrders(),\r\n        salesService.getInventory()\r\n      ]);\r\n\r\n      if (metricsResponse.success) {\r\n        setMetrics(metricsResponse.data);\r\n      }\r\n\r\n      if (ordersResponse.success) {\r\n        setRecentOrders(ordersResponse.data.slice(0, 5));\r\n      }\r\n\r\n      if (inventoryResponse.success) {\r\n        // Filter for items that need attention\r\n        const alertItems = inventoryResponse.data.filter(item => {\r\n          const usagePercentage = ((item.quantity - item.availableQuantity) / item.quantity) * 100;\r\n          return usagePercentage > 60 || item.pesoCompliance.status !== 'valid';\r\n        });\r\n        setInventoryAlerts(alertItems.slice(0, 5));\r\n      }\r\n\r\n      setLastUpdated(new Date());\r\n    } catch (error) {\r\n      console.error('Error loading dashboard data:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadDashboardData();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center h-64\">\r\n        <RefreshCw className=\"w-8 h-8 animate-spin\" />\r\n        <span className=\"ml-2\">Loading dashboard...</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-6 space-y-6\">\r\n      {/* Simple Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold tracking-tight\">Sales Dashboard</h1>\r\n          <p className=\"text-muted-foreground\">\r\n            Overview of your biogas sales performance and operations\r\n          </p>\r\n        </div>\r\n        <div className=\"flex items-center space-x-3\">\r\n          <div className=\"text-right text-sm\">\r\n            <div className=\"text-muted-foreground\">Last updated</div>\r\n            <div className=\"font-semibold\">{lastUpdated.toLocaleTimeString()}</div>\r\n          </div>\r\n          <Button\r\n            variant=\"outline\"\r\n            size=\"sm\"\r\n            onClick={loadDashboardData}\r\n          >\r\n            <RefreshCw className=\"w-4 h-4 mr-2\" />\r\n            Refresh\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Key Metrics */}\r\n      {metrics && (\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n          <MetricCard\r\n            title=\"Total Revenue\"\r\n            value={`₹${(metrics.totalRevenue / 1000000).toFixed(1)}M`}\r\n            change={metrics.periodComparison.revenue.change}\r\n            icon={<DollarSign className=\"w-5 h-5 text-green-600\" />}\r\n            description=\"Monthly revenue growth\"\r\n          />\r\n          <MetricCard\r\n            title=\"Total Orders\"\r\n            value={metrics.totalOrders}\r\n            change={metrics.periodComparison.orders.change}\r\n            icon={<FileText className=\"w-5 h-5 text-blue-600\" />}\r\n            description=\"Orders processed\"\r\n          />\r\n          <MetricCard\r\n            title=\"Active Customers\"\r\n            value={metrics.totalCustomers}\r\n            change={metrics.periodComparison.customers.change}\r\n            icon={<Users className=\"w-5 h-5 text-purple-600\" />}\r\n            description=\"Customer base growth\"\r\n          />\r\n          <MetricCard\r\n            title=\"Avg Order Value\"\r\n            value={`₹${(metrics.averageOrderValue / 1000).toFixed(0)}K`}\r\n            icon={<Package className=\"w-5 h-5 text-orange-600\" />}\r\n            description=\"Per order average\"\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {/* Performance Metrics and Revenue Trend in Half Layout */}\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n        {/* Half-size Performance Metrics */}\r\n        <Card>\r\n          <CardHeader className=\"pb-3\">\r\n            <CardTitle className=\"flex items-center space-x-2 text-base\">\r\n              <Activity className=\"w-4 h-4 text-indigo-600\" />\r\n              <span>Performance Metrics</span>\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardContent className=\"space-y-3\">\r\n            {performanceData.map((item) => {\r\n              const percentage = (item.current / item.target) * 100;\r\n              const isOnTarget = item.current >= item.target;\r\n              const isNearTarget = item.current >= item.target * 0.9;\r\n\r\n              return (\r\n                <div key={item.metric} className=\"space-y-1\">\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <span className=\"text-xs font-medium text-gray-700\">{item.metric}</span>\r\n                    <div className=\"flex items-center space-x-1\">\r\n                      <span className=\"text-xs text-gray-500\">\r\n                        {item.current}% / {item.target}%\r\n                      </span>\r\n                      <div className={`w-3 h-3 rounded-full flex items-center justify-center text-xs ${\r\n                        isOnTarget\r\n                          ? 'bg-green-100 text-green-700'\r\n                          : isNearTarget\r\n                          ? 'bg-yellow-100 text-yellow-700'\r\n                          : 'bg-red-100 text-red-700'\r\n                      }`}>\r\n                        {isOnTarget ? '✓' : isNearTarget ? '!' : '⚠'}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Mini Progress bar */}\r\n                  <div className=\"relative w-full bg-gray-200 rounded-full h-1.5\">\r\n                    <div\r\n                      className={`h-1.5 rounded-full transition-all duration-300 ${\r\n                        isOnTarget\r\n                          ? 'bg-green-500'\r\n                          : isNearTarget\r\n                          ? 'bg-yellow-500'\r\n                          : 'bg-red-500'\r\n                      }`}\r\n                      style={{ width: `${Math.min(percentage, 100)}%` }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Revenue Trend Chart */}\r\n        <Card>\r\n          <CardHeader className=\"pb-3\">\r\n            <CardTitle className=\"flex items-center space-x-2 text-base\">\r\n              <BarChart3 className=\"w-4 h-4 text-blue-600\" />\r\n              <span>Revenue Trend</span>\r\n            </CardTitle>\r\n            <CardDescription className=\"text-xs\">6-month revenue performance</CardDescription>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <SimpleBarChart data={revenueData} title=\"Monthly Revenue\" />\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      {/* Other Charts Section */}\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n        {/* Gas Type Distribution */}\r\n        <Card>\r\n          <CardHeader className=\"pb-3\">\r\n            <CardTitle className=\"flex items-center space-x-2 text-base\">\r\n              <PieChart className=\"w-4 h-4 text-green-600\" />\r\n              <span>Gas Type Mix</span>\r\n            </CardTitle>\r\n            <CardDescription className=\"text-xs\">Distribution by gas type</CardDescription>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <SimplePieChart data={gasTypeData} title=\"Gas Types\" />\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Customer Growth */}\r\n        <Card>\r\n          <CardHeader className=\"pb-3\">\r\n            <CardTitle className=\"flex items-center space-x-2 text-base\">\r\n              <Activity className=\"w-4 h-4 text-purple-600\" />\r\n              <span>Customer Growth</span>\r\n            </CardTitle>\r\n            <CardDescription className=\"text-xs\">New customers per month</CardDescription>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <SimpleBarChart data={customerGrowthData} title=\"New Customers\" />\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      {/* Recent Orders and Inventory Alerts */}\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n        {/* Recent Orders */}\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle className=\"flex items-center space-x-2\">\r\n              <FileText className=\"w-5 h-5\" />\r\n              <span>Recent Orders</span>\r\n            </CardTitle>\r\n            <CardDescription>Latest order activity</CardDescription>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"space-y-4\">\r\n              {recentOrders.length > 0 ? (\r\n                recentOrders.map((order) => (\r\n                  <RecentOrderItem key={order.id} order={order} />\r\n                ))\r\n              ) : (\r\n                <p className=\"text-muted-foreground text-center py-4\">\r\n                  No recent orders available\r\n                </p>\r\n              )}\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Inventory Alerts */}\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle className=\"flex items-center space-x-2\">\r\n              <AlertTriangle className=\"w-5 h-5\" />\r\n              <span>Inventory Alerts</span>\r\n            </CardTitle>\r\n            <CardDescription>Items requiring attention</CardDescription>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"space-y-4\">\r\n              {inventoryAlerts.length > 0 ? (\r\n                inventoryAlerts.map((item) => (\r\n                  <InventoryAlert key={item.id} item={item} />\r\n                ))\r\n              ) : (\r\n                <p className=\"text-muted-foreground text-center py-4\">\r\n                  No inventory alerts at this time\r\n                </p>\r\n              )}\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SalesDashboard;","import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Textarea } from '@/components/ui/textarea';\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\r\nimport { Dialog, DialogContent, DialogDescription, DialogFooter, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog';\r\nimport { Progress } from '@/components/ui/progress';\r\nimport {\r\n  Users,\r\n  Search,\r\n  Filter,\r\n  Plus,\r\n  Edit,\r\n  MapPin,\r\n  Phone,\r\n  Mail,\r\n  Building,\r\n  CreditCard,\r\n  TrendingUp,\r\n  TrendingDown,\r\n  AlertTriangle,\r\n  Calendar,\r\n  FileText,\r\n  MoreHorizontal\r\n} from 'lucide-react';\r\nimport { salesService } from '../services/salesService';\r\nimport { Customer, CustomerFilters } from '../types';\r\n\r\ninterface CustomerCardProps {\r\n  customer: Customer;\r\n  onEdit: (customer: Customer) => void;\r\n  onViewDetails: (customer: Customer) => void;\r\n}\r\n\r\nconst CustomerCard: React.FC<CustomerCardProps> = ({ customer, onEdit, onViewDetails }) => {\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'active': return 'bg-green-100 text-green-800';\r\n      case 'inactive': return 'bg-gray-100 text-gray-800';\r\n      case 'suspended': return 'bg-red-100 text-red-800';\r\n      default: return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  const getTypeColor = (type: string) => {\r\n    switch (type) {\r\n      case 'commercial': return 'bg-blue-100 text-blue-800';\r\n      case 'industrial': return 'bg-purple-100 text-purple-800';\r\n      case 'residential': return 'bg-green-100 text-green-800';\r\n      default: return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  const getRiskColor = (risk: string) => {\r\n    switch (risk) {\r\n      case 'low': return 'text-green-600';\r\n      case 'medium': return 'text-yellow-600';\r\n      case 'high': return 'text-red-600';\r\n      default: return 'text-gray-600';\r\n    }\r\n  };\r\n\r\n  const creditUtilization = (customer.creditUsed / customer.creditLimit) * 100;\r\n\r\n  return (\r\n    <Card className=\"hover:shadow-md transition-shadow\">\r\n      <CardHeader className=\"pb-3\">\r\n        <div className=\"flex items-start justify-between\">\r\n          <div className=\"space-y-1\">\r\n            <CardTitle className=\"text-lg\">{customer.name}</CardTitle>\r\n            <div className=\"flex items-center space-x-2\">\r\n              <Badge className={getStatusColor(customer.status)}>{customer.status}</Badge>\r\n              <Badge className={getTypeColor(customer.type)}>{customer.type}</Badge>\r\n            </div>\r\n          </div>\r\n          <Button variant=\"ghost\" size=\"sm\">\r\n            <MoreHorizontal className=\"w-4 h-4\" />\r\n          </Button>\r\n        </div>\r\n      </CardHeader>\r\n      <CardContent className=\"space-y-4\">\r\n        {/* Contact Information */}\r\n        <div className=\"space-y-2\">\r\n          <div className=\"flex items-center text-sm text-gray-600\">\r\n            <Building className=\"w-4 h-4 mr-2\" />\r\n            {customer.contactPerson}\r\n          </div>\r\n          <div className=\"flex items-center text-sm text-gray-600\">\r\n            <Phone className=\"w-4 h-4 mr-2\" />\r\n            {customer.phone}\r\n          </div>\r\n          <div className=\"flex items-center text-sm text-gray-600\">\r\n            <Mail className=\"w-4 h-4 mr-2\" />\r\n            {customer.email}\r\n          </div>\r\n          <div className=\"flex items-center text-sm text-gray-600\">\r\n            <MapPin className=\"w-4 h-4 mr-2\" />\r\n            {customer.address.city}, {customer.address.state}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Credit Information */}\r\n        <div className=\"space-y-2\">\r\n          <div className=\"flex items-center justify-between text-sm\">\r\n            <span>Credit Utilization</span>\r\n            <span className={getRiskColor(customer.riskCategory)}>\r\n              {creditUtilization.toFixed(1)}%\r\n            </span>\r\n          </div>\r\n          <Progress value={creditUtilization} className=\"h-2\" />\r\n          <div className=\"flex justify-between text-xs text-gray-500\">\r\n            <span>Used: ₹{(customer.creditUsed / 1000).toFixed(0)}K</span>\r\n            <span>Limit: ₹{(customer.creditLimit / 1000).toFixed(0)}K</span>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Performance Metrics */}\r\n        <div className=\"grid grid-cols-2 gap-4 pt-2 border-t\">\r\n          <div className=\"text-center\">\r\n            <div className=\"text-lg font-semibold\">{customer.totalOrders}</div>\r\n            <div className=\"text-xs text-gray-500\">Total Orders</div>\r\n          </div>\r\n          <div className=\"text-center\">\r\n            <div className=\"text-lg font-semibold\">₹{(customer.totalRevenue / 1000).toFixed(0)}K</div>\r\n            <div className=\"text-xs text-gray-500\">Revenue</div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Action Buttons */}\r\n        <div className=\"flex space-x-2 pt-2\">\r\n          <Button variant=\"outline\" size=\"sm\" className=\"flex-1\" onClick={() => onViewDetails(customer)}>\r\n            View Details\r\n          </Button>\r\n          <Button variant=\"outline\" size=\"sm\" className=\"flex-1\" onClick={() => onEdit(customer)}>\r\n            <Edit className=\"w-4 h-4 mr-1\" />\r\n            Edit\r\n          </Button>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\ninterface CustomerFormProps {\r\n  customer?: Customer;\r\n  onSave: (customer: Customer) => void;\r\n  onCancel: () => void;\r\n}\r\n\r\nconst CustomerForm: React.FC<CustomerFormProps> = ({ customer, onSave, onCancel }) => {\r\n  const [formData, setFormData] = useState<Partial<Customer>>(\r\n    customer || {\r\n      name: '',\r\n      type: 'commercial',\r\n      contactPerson: '',\r\n      phone: '',\r\n      email: '',\r\n      address: {\r\n        street: '',\r\n        city: '',\r\n        state: '',\r\n        pincode: ''\r\n      },\r\n      creditLimit: 0,\r\n      paymentTerms: 30,\r\n      gstNumber: '',\r\n      panNumber: '',\r\n      status: 'active'\r\n    }\r\n  );\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    onSave(formData as Customer);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n      <div className=\"grid grid-cols-2 gap-4\">\r\n        <div className=\"space-y-2\">\r\n          <Label htmlFor=\"name\">Company/Customer Name</Label>\r\n          <Input\r\n            id=\"name\"\r\n            value={formData.name}\r\n            onChange={(e) => setFormData({ ...formData, name: e.target.value })}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"space-y-2\">\r\n          <Label htmlFor=\"type\">Customer Type</Label>\r\n          <Select value={formData.type} onValueChange={(value) => setFormData({ ...formData, type: value as any })}>\r\n            <SelectTrigger>\r\n              <SelectValue />\r\n            </SelectTrigger>\r\n            <SelectContent>\r\n              <SelectItem value=\"commercial\">Commercial</SelectItem>\r\n              <SelectItem value=\"industrial\">Industrial</SelectItem>\r\n              <SelectItem value=\"residential\">Residential</SelectItem>\r\n            </SelectContent>\r\n          </Select>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-2 gap-4\">\r\n        <div className=\"space-y-2\">\r\n          <Label htmlFor=\"contactPerson\">Contact Person</Label>\r\n          <Input\r\n            id=\"contactPerson\"\r\n            value={formData.contactPerson}\r\n            onChange={(e) => setFormData({ ...formData, contactPerson: e.target.value })}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"space-y-2\">\r\n          <Label htmlFor=\"phone\">Phone Number</Label>\r\n          <Input\r\n            id=\"phone\"\r\n            value={formData.phone}\r\n            onChange={(e) => setFormData({ ...formData, phone: e.target.value })}\r\n            required\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"space-y-2\">\r\n        <Label htmlFor=\"email\">Email Address</Label>\r\n        <Input\r\n          id=\"email\"\r\n          type=\"email\"\r\n          value={formData.email}\r\n          onChange={(e) => setFormData({ ...formData, email: e.target.value })}\r\n          required\r\n        />\r\n      </div>\r\n\r\n      <div className=\"space-y-2\">\r\n        <Label htmlFor=\"street\">Street Address</Label>\r\n        <Textarea\r\n          id=\"street\"\r\n          value={formData.address?.street}\r\n          onChange={(e) => setFormData({\r\n            ...formData,\r\n            address: { ...formData.address!, street: e.target.value }\r\n          })}\r\n          required\r\n        />\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-3 gap-4\">\r\n        <div className=\"space-y-2\">\r\n          <Label htmlFor=\"city\">City</Label>\r\n          <Input\r\n            id=\"city\"\r\n            value={formData.address?.city}\r\n            onChange={(e) => setFormData({\r\n              ...formData,\r\n              address: { ...formData.address!, city: e.target.value }\r\n            })}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"space-y-2\">\r\n          <Label htmlFor=\"state\">State</Label>\r\n          <Input\r\n            id=\"state\"\r\n            value={formData.address?.state}\r\n            onChange={(e) => setFormData({\r\n              ...formData,\r\n              address: { ...formData.address!, state: e.target.value }\r\n            })}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"space-y-2\">\r\n          <Label htmlFor=\"pincode\">PIN Code</Label>\r\n          <Input\r\n            id=\"pincode\"\r\n            value={formData.address?.pincode}\r\n            onChange={(e) => setFormData({\r\n              ...formData,\r\n              address: { ...formData.address!, pincode: e.target.value }\r\n            })}\r\n            required\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-2 gap-4\">\r\n        <div className=\"space-y-2\">\r\n          <Label htmlFor=\"creditLimit\">Credit Limit (₹)</Label>\r\n          <Input\r\n            id=\"creditLimit\"\r\n            type=\"number\"\r\n            value={formData.creditLimit}\r\n            onChange={(e) => setFormData({ ...formData, creditLimit: Number(e.target.value) })}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"space-y-2\">\r\n          <Label htmlFor=\"paymentTerms\">Payment Terms (Days)</Label>\r\n          <Input\r\n            id=\"paymentTerms\"\r\n            type=\"number\"\r\n            value={formData.paymentTerms}\r\n            onChange={(e) => setFormData({ ...formData, paymentTerms: Number(e.target.value) })}\r\n            required\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-2 gap-4\">\r\n        <div className=\"space-y-2\">\r\n          <Label htmlFor=\"gstNumber\">GST Number (Optional)</Label>\r\n          <Input\r\n            id=\"gstNumber\"\r\n            value={formData.gstNumber}\r\n            onChange={(e) => setFormData({ ...formData, gstNumber: e.target.value })}\r\n          />\r\n        </div>\r\n        <div className=\"space-y-2\">\r\n          <Label htmlFor=\"panNumber\">PAN Number (Optional)</Label>\r\n          <Input\r\n            id=\"panNumber\"\r\n            value={formData.panNumber}\r\n            onChange={(e) => setFormData({ ...formData, panNumber: e.target.value })}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <DialogFooter>\r\n        <Button type=\"button\" variant=\"outline\" onClick={onCancel}>\r\n          Cancel\r\n        </Button>\r\n        <Button type=\"submit\">\r\n          {customer ? 'Update Customer' : 'Create Customer'}\r\n        </Button>\r\n      </DialogFooter>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst CustomerManagement: React.FC = () => {\r\n  const [customers, setCustomers] = useState<Customer[]>([]);\r\n  const [filteredCustomers, setFilteredCustomers] = useState<Customer[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [filters, setFilters] = useState<CustomerFilters>({});\r\n  const [selectedCustomer, setSelectedCustomer] = useState<Customer | null>(null);\r\n  const [showCustomerForm, setShowCustomerForm] = useState(false);\r\n  const [showCustomerDetails, setShowCustomerDetails] = useState(false);\r\n\r\n  const loadCustomers = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await salesService.getCustomers(filters);\r\n      if (response.success) {\r\n        setCustomers(response.data);\r\n        setFilteredCustomers(response.data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading customers:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadCustomers();\r\n  }, [filters]);\r\n\r\n  useEffect(() => {\r\n    const filtered = customers.filter(customer =>\r\n      customer.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      customer.contactPerson.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      customer.email.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      customer.phone.includes(searchTerm)\r\n    );\r\n    setFilteredCustomers(filtered);\r\n  }, [customers, searchTerm]);\r\n\r\n  const handleCreateCustomer = () => {\r\n    setSelectedCustomer(null);\r\n    setShowCustomerForm(true);\r\n  };\r\n\r\n  const handleEditCustomer = (customer: Customer) => {\r\n    setSelectedCustomer(customer);\r\n    setShowCustomerForm(true);\r\n  };\r\n\r\n  const handleViewCustomerDetails = (customer: Customer) => {\r\n    setSelectedCustomer(customer);\r\n    setShowCustomerDetails(true);\r\n  };\r\n\r\n  const handleSaveCustomer = async (customerData: Customer) => {\r\n    try {\r\n      if (selectedCustomer) {\r\n        // Update existing customer\r\n        await salesService.updateCustomer(selectedCustomer.id, customerData);\r\n      } else {\r\n        // Create new customer\r\n        await salesService.createCustomer(customerData);\r\n      }\r\n      setShowCustomerForm(false);\r\n      loadCustomers();\r\n    } catch (error) {\r\n      console.error('Error saving customer:', error);\r\n    }\r\n  };\r\n\r\n  const getCustomerStats = () => {\r\n    const total = customers.length;\r\n    const active = customers.filter(c => c.status === 'active').length;\r\n    const highRisk = customers.filter(c => c.riskCategory === 'high').length;\r\n    const totalRevenue = customers.reduce((sum, c) => sum + c.totalRevenue, 0);\r\n\r\n    return { total, active, highRisk, totalRevenue };\r\n  };\r\n\r\n  const stats = getCustomerStats();\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold\">Customer Management</h1>\r\n          <p className=\"text-gray-600\">\r\n            Manage customer profiles, credit limits, and relationships\r\n          </p>\r\n        </div>\r\n        <Button onClick={handleCreateCustomer}>\r\n          <Plus className=\"w-4 h-4 mr-2\" />\r\n          Add Customer\r\n        </Button>\r\n      </div>\r\n\r\n      {/* Statistics Cards */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\r\n        <Card>\r\n          <CardContent className=\"p-6\">\r\n            <div className=\"flex items-center\">\r\n              <Users className=\"w-8 h-8 text-blue-600\" />\r\n              <div className=\"ml-4\">\r\n                <p className=\"text-sm font-medium text-gray-600\">Total Customers</p>\r\n                <p className=\"text-2xl font-bold\">{stats.total}</p>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n        <Card>\r\n          <CardContent className=\"p-6\">\r\n            <div className=\"flex items-center\">\r\n              <TrendingUp className=\"w-8 h-8 text-green-600\" />\r\n              <div className=\"ml-4\">\r\n                <p className=\"text-sm font-medium text-gray-600\">Active Customers</p>\r\n                <p className=\"text-2xl font-bold\">{stats.active}</p>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n        <Card>\r\n          <CardContent className=\"p-6\">\r\n            <div className=\"flex items-center\">\r\n              <AlertTriangle className=\"w-8 h-8 text-red-600\" />\r\n              <div className=\"ml-4\">\r\n                <p className=\"text-sm font-medium text-gray-600\">High Risk</p>\r\n                <p className=\"text-2xl font-bold\">{stats.highRisk}</p>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n        <Card>\r\n          <CardContent className=\"p-6\">\r\n            <div className=\"flex items-center\">\r\n              <CreditCard className=\"w-8 h-8 text-purple-600\" />\r\n              <div className=\"ml-4\">\r\n                <p className=\"text-sm font-medium text-gray-600\">Total Revenue</p>\r\n                <p className=\"text-2xl font-bold\">₹{(stats.totalRevenue / 1000000).toFixed(1)}M</p>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      {/* Search and Filters */}\r\n      <Card>\r\n        <CardContent className=\"p-6\">\r\n          <div className=\"flex flex-col md:flex-row gap-4\">\r\n            <div className=\"relative flex-1\">\r\n              <Search className=\"absolute left-3 top-3 h-4 w-4 text-gray-400\" />\r\n              <Input\r\n                placeholder=\"Search customers by name, contact, email, or phone...\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n                className=\"pl-10\"\r\n              />\r\n            </div>\r\n            <div className=\"flex gap-2\">\r\n              <Select value={filters.status?.[0] || 'all'} onValueChange={(value) =>\r\n                setFilters({ ...filters, status: value === 'all' ? undefined : [value] })\r\n              }>\r\n                <SelectTrigger className=\"w-40\">\r\n                  <SelectValue placeholder=\"Status\" />\r\n                </SelectTrigger>\r\n                <SelectContent>\r\n                  <SelectItem value=\"all\">All Status</SelectItem>\r\n                  <SelectItem value=\"active\">Active</SelectItem>\r\n                  <SelectItem value=\"inactive\">Inactive</SelectItem>\r\n                  <SelectItem value=\"suspended\">Suspended</SelectItem>\r\n                </SelectContent>\r\n              </Select>\r\n              <Select value={filters.type?.[0] || 'all'} onValueChange={(value) =>\r\n                setFilters({ ...filters, type: value === 'all' ? undefined : [value] })\r\n              }>\r\n                <SelectTrigger className=\"w-40\">\r\n                  <SelectValue placeholder=\"Type\" />\r\n                </SelectTrigger>\r\n                <SelectContent>\r\n                  <SelectItem value=\"all\">All Types</SelectItem>\r\n                  <SelectItem value=\"commercial\">Commercial</SelectItem>\r\n                  <SelectItem value=\"industrial\">Industrial</SelectItem>\r\n                  <SelectItem value=\"residential\">Residential</SelectItem>\r\n                </SelectContent>\r\n              </Select>\r\n              <Button variant=\"outline\">\r\n                <Filter className=\"w-4 h-4 mr-2\" />\r\n                More Filters\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Customer Grid */}\r\n      {loading ? (\r\n        <div className=\"text-center py-8\">Loading customers...</div>\r\n      ) : (\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n          {filteredCustomers.map((customer) => (\r\n            <CustomerCard\r\n              key={customer.id}\r\n              customer={customer}\r\n              onEdit={handleEditCustomer}\r\n              onViewDetails={handleViewCustomerDetails}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {/* Customer Form Dialog */}\r\n      <Dialog open={showCustomerForm} onOpenChange={setShowCustomerForm}>\r\n        <DialogContent className=\"max-w-2xl max-h-[80vh] overflow-y-auto\">\r\n          <DialogHeader>\r\n            <DialogTitle>\r\n              {selectedCustomer ? 'Edit Customer' : 'Add New Customer'}\r\n            </DialogTitle>\r\n            <DialogDescription>\r\n              {selectedCustomer ? 'Update customer information and settings.' : 'Create a new customer profile with contact and credit information.'}\r\n            </DialogDescription>\r\n          </DialogHeader>\r\n          <CustomerForm\r\n            customer={selectedCustomer || undefined}\r\n            onSave={handleSaveCustomer}\r\n            onCancel={() => setShowCustomerForm(false)}\r\n          />\r\n        </DialogContent>\r\n      </Dialog>\r\n\r\n      {/* Customer Details Dialog */}\r\n      <Dialog open={showCustomerDetails} onOpenChange={setShowCustomerDetails}>\r\n        <DialogContent className=\"max-w-4xl max-h-[80vh] overflow-y-auto\">\r\n          <DialogHeader>\r\n            <DialogTitle>{selectedCustomer?.name}</DialogTitle>\r\n            <DialogDescription>Complete customer profile and history</DialogDescription>\r\n          </DialogHeader>\r\n          {selectedCustomer && (\r\n            <Tabs defaultValue=\"profile\" className=\"w-full\">\r\n              <TabsList>\r\n                <TabsTrigger value=\"profile\">Profile</TabsTrigger>\r\n                <TabsTrigger value=\"orders\">Orders</TabsTrigger>\r\n                <TabsTrigger value=\"payments\">Payments</TabsTrigger>\r\n                <TabsTrigger value=\"analytics\">Analytics</TabsTrigger>\r\n              </TabsList>\r\n              <TabsContent value=\"profile\" className=\"space-y-4\">\r\n                <div className=\"grid grid-cols-2 gap-4\">\r\n                  <Card>\r\n                    <CardHeader>\r\n                      <CardTitle className=\"text-sm\">Contact Information</CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent className=\"space-y-2\">\r\n                      <div><strong>Contact Person:</strong> {selectedCustomer.contactPerson}</div>\r\n                      <div><strong>Phone:</strong> {selectedCustomer.phone}</div>\r\n                      <div><strong>Email:</strong> {selectedCustomer.email}</div>\r\n                      <div><strong>Address:</strong> {selectedCustomer.address.street}, {selectedCustomer.address.city}</div>\r\n                    </CardContent>\r\n                  </Card>\r\n                  <Card>\r\n                    <CardHeader>\r\n                      <CardTitle className=\"text-sm\">Business Information</CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent className=\"space-y-2\">\r\n                      <div><strong>Type:</strong> {selectedCustomer.type}</div>\r\n                      <div><strong>GST Number:</strong> {selectedCustomer.gstNumber || 'N/A'}</div>\r\n                      <div><strong>PAN Number:</strong> {selectedCustomer.panNumber || 'N/A'}</div>\r\n                      <div><strong>Registration Date:</strong> {selectedCustomer.registrationDate.toLocaleDateString()}</div>\r\n                    </CardContent>\r\n                  </Card>\r\n                </div>\r\n              </TabsContent>\r\n              <TabsContent value=\"orders\">\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle>Order History</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    <div className=\"text-center py-8 text-gray-500\">\r\n                      Order history will be displayed here\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              </TabsContent>\r\n              <TabsContent value=\"payments\">\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle>Payment History</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    <div className=\"text-center py-8 text-gray-500\">\r\n                      Payment history will be displayed here\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              </TabsContent>\r\n              <TabsContent value=\"analytics\">\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle>Customer Analytics</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    <div className=\"text-center py-8 text-gray-500\">\r\n                      Customer analytics will be displayed here\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              </TabsContent>\r\n            </Tabs>\r\n          )}\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomerManagement;","import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Textarea } from '@/components/ui/textarea';\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\r\nimport { Dialog, DialogContent, DialogDescription, DialogFooter, DialogHeader, DialogTitle } from '@/components/ui/dialog';\r\nimport { Progress } from '@/components/ui/progress';\r\nimport { Separator } from '@/components/ui/separator';\r\nimport {\r\n  FileText,\r\n  Plus,\r\n  Edit,\r\n  Eye,\r\n  Download,\r\n  Upload,\r\n  Calendar,\r\n  DollarSign,\r\n  Users,\r\n  Package,\r\n  Truck,\r\n  Clock,\r\n  CheckCircle,\r\n  AlertTriangle,\r\n  XCircle,\r\n  MoreHorizontal,\r\n  PenTool,\r\n  History,\r\n  Send\r\n} from 'lucide-react';\r\nimport { salesService } from '../services/salesService';\r\nimport { Contract, Customer } from '../types';\r\n\r\ninterface ContractCardProps {\r\n  contract: Contract;\r\n  customer?: Customer;\r\n  onEdit: (contract: Contract) => void;\r\n  onView: (contract: Contract) => void;\r\n  onSign: (contract: Contract) => void;\r\n}\r\n\r\nconst ContractCard: React.FC<ContractCardProps> = ({ contract, customer, onEdit, onView, onSign }) => {\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'active': return 'bg-green-100 text-green-800';\r\n      case 'draft': return 'bg-yellow-100 text-yellow-800';\r\n      case 'expired': return 'bg-red-100 text-red-800';\r\n      case 'terminated': return 'bg-gray-100 text-gray-800';\r\n      default: return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  const getTypeColor = (type: string) => {\r\n    switch (type) {\r\n      case 'supply': return 'bg-blue-100 text-blue-800';\r\n      case 'bulk': return 'bg-purple-100 text-purple-800';\r\n      case 'subscription': return 'bg-indigo-100 text-indigo-800';\r\n      default: return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  const getDaysRemaining = () => {\r\n    const today = new Date();\r\n    const endDate = new Date(contract.endDate);\r\n    const diffTime = endDate.getTime() - today.getTime();\r\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n    return diffDays;\r\n  };\r\n\r\n  const daysRemaining = getDaysRemaining();\r\n  const contractProgress = (() => {\r\n    const start = new Date(contract.startDate).getTime();\r\n    const end = new Date(contract.endDate).getTime();\r\n    const now = new Date().getTime();\r\n    const total = end - start;\r\n    const elapsed = now - start;\r\n    return Math.min(Math.max((elapsed / total) * 100, 0), 100);\r\n  })();\r\n\r\n  return (\r\n    <Card className=\"hover:shadow-md transition-shadow\">\r\n      <CardHeader className=\"pb-3\">\r\n        <div className=\"flex items-start justify-between\">\r\n          <div className=\"space-y-1\">\r\n            <CardTitle className=\"text-lg\">{contract.contractNumber}</CardTitle>\r\n            <div className=\"flex items-center space-x-2\">\r\n              <Badge className={getStatusColor(contract.status)}>{contract.status}</Badge>\r\n              <Badge className={getTypeColor(contract.type)}>{contract.type}</Badge>\r\n              {contract.version > 1 && (\r\n                <Badge variant=\"outline\">v{contract.version}</Badge>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <Button variant=\"ghost\" size=\"sm\">\r\n            <MoreHorizontal className=\"w-4 h-4\" />\r\n          </Button>\r\n        </div>\r\n      </CardHeader>\r\n      <CardContent className=\"space-y-4\">\r\n        {/* Customer Information */}\r\n        {customer && (\r\n          <div className=\"flex items-center text-sm text-gray-600\">\r\n            <Users className=\"w-4 h-4 mr-2\" />\r\n            {customer.name}\r\n          </div>\r\n        )}\r\n\r\n        {/* Contract Details */}\r\n        <div className=\"grid grid-cols-2 gap-4 text-sm\">\r\n          <div className=\"space-y-1\">\r\n            <div className=\"flex items-center text-gray-600\">\r\n              <Package className=\"w-4 h-4 mr-1\" />\r\n              {contract.gasType}\r\n            </div>\r\n            <div className=\"flex items-center text-gray-600\">\r\n              <DollarSign className=\"w-4 h-4 mr-1\" />\r\n              ₹{contract.pricePerUnit}/unit\r\n            </div>\r\n          </div>\r\n          <div className=\"space-y-1\">\r\n            <div className=\"flex items-center text-gray-600\">\r\n              <Truck className=\"w-4 h-4 mr-1\" />\r\n              {contract.deliveryTerms.frequency}\r\n            </div>\r\n            <div className=\"flex items-center text-gray-600\">\r\n              <Calendar className=\"w-4 h-4 mr-1\" />\r\n              {daysRemaining > 0 ? `${daysRemaining} days left` : 'Expired'}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Contract Progress */}\r\n        <div className=\"space-y-2\">\r\n          <div className=\"flex justify-between text-sm\">\r\n            <span>Contract Progress</span>\r\n            <span>{contractProgress.toFixed(0)}%</span>\r\n          </div>\r\n          <Progress value={contractProgress} className=\"h-2\" />\r\n          <div className=\"flex justify-between text-xs text-gray-500\">\r\n            <span>Start: {new Date(contract.startDate).toLocaleDateString()}</span>\r\n            <span>End: {new Date(contract.endDate).toLocaleDateString()}</span>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Financial Summary */}\r\n        <div className=\"grid grid-cols-2 gap-4 pt-2 border-t text-center\">\r\n          <div>\r\n            <div className=\"text-lg font-semibold\">₹{(contract.totalValue / 1000000).toFixed(1)}M</div>\r\n            <div className=\"text-xs text-gray-500\">Total Value</div>\r\n          </div>\r\n          <div>\r\n            <div className=\"text-lg font-semibold\">{contract.quantity.toLocaleString()}</div>\r\n            <div className=\"text-xs text-gray-500\">Quantity/Month</div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Action Buttons */}\r\n        <div className=\"flex space-x-2 pt-2\">\r\n          <Button variant=\"outline\" size=\"sm\" className=\"flex-1\" onClick={() => onView(contract)}>\r\n            <Eye className=\"w-4 h-4 mr-1\" />\r\n            View\r\n          </Button>\r\n          {contract.status === 'draft' && (\r\n            <Button variant=\"outline\" size=\"sm\" className=\"flex-1\" onClick={() => onSign(contract)}>\r\n              <PenTool className=\"w-4 h-4 mr-1\" />\r\n              Sign\r\n            </Button>\r\n          )}\r\n          <Button variant=\"outline\" size=\"sm\" className=\"flex-1\" onClick={() => onEdit(contract)}>\r\n            <Edit className=\"w-4 h-4 mr-1\" />\r\n            Edit\r\n          </Button>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\ninterface ContractFormProps {\r\n  contract?: Contract;\r\n  customers: Customer[];\r\n  onSave: (contract: Partial<Contract>) => void;\r\n  onCancel: () => void;\r\n}\r\n\r\nconst ContractForm: React.FC<ContractFormProps> = ({ contract, customers, onSave, onCancel }) => {\r\n  const [formData, setFormData] = useState<Partial<Contract>>(\r\n    contract || {\r\n      customerId: '',\r\n      contractNumber: `SB-${new Date().getFullYear()}-${Date.now().toString().slice(-6)}`,\r\n      type: 'supply',\r\n      status: 'draft',\r\n      startDate: new Date(),\r\n      endDate: new Date(Date.now() + 365 * 24 * 60 * 60 * 1000),\r\n      gasType: 'biogas',\r\n      quantity: 0,\r\n      pricePerUnit: 0,\r\n      paymentTerms: {\r\n        advancePercentage: 20,\r\n        creditDays: 30,\r\n        penaltyRate: 2\r\n      },\r\n      deliveryTerms: {\r\n        location: '',\r\n        frequency: 'monthly',\r\n        transportMode: 'pipeline'\r\n      },\r\n      version: 1,\r\n      documents: []\r\n    }\r\n  );\r\n\r\n  const calculateTotalValue = () => {\r\n    return (formData.quantity || 0) * (formData.pricePerUnit || 0) * 12; // Annual value\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    const contractData = {\r\n      ...formData,\r\n      totalValue: calculateTotalValue()\r\n    };\r\n    onSave(contractData);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n      {/* Basic Information */}\r\n      <div className=\"space-y-4\">\r\n        <h3 className=\"text-lg font-semibold\">Basic Information</h3>\r\n        <div className=\"grid grid-cols-2 gap-4\">\r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"contractNumber\">Contract Number</Label>\r\n            <Input\r\n              id=\"contractNumber\"\r\n              value={formData.contractNumber}\r\n              onChange={(e) => setFormData({ ...formData, contractNumber: e.target.value })}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"customerId\">Customer</Label>\r\n            <Select value={formData.customerId} onValueChange={(value) => setFormData({ ...formData, customerId: value })}>\r\n              <SelectTrigger>\r\n                <SelectValue placeholder=\"Select customer\" />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                {customers.map((customer) => (\r\n                  <SelectItem key={customer.id} value={customer.id}>\r\n                    {customer.name}\r\n                  </SelectItem>\r\n                ))}\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-2 gap-4\">\r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"type\">Contract Type</Label>\r\n            <Select value={formData.type} onValueChange={(value) => setFormData({ ...formData, type: value as any })}>\r\n              <SelectTrigger>\r\n                <SelectValue />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                <SelectItem value=\"supply\">Supply Agreement</SelectItem>\r\n                <SelectItem value=\"bulk\">Bulk Purchase</SelectItem>\r\n                <SelectItem value=\"subscription\">Subscription</SelectItem>\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"gasType\">Gas Type</Label>\r\n            <Select value={formData.gasType} onValueChange={(value) => setFormData({ ...formData, gasType: value as any })}>\r\n              <SelectTrigger>\r\n                <SelectValue />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                <SelectItem value=\"biogas\">Biogas</SelectItem>\r\n                <SelectItem value=\"compressed\">Compressed Gas</SelectItem>\r\n                <SelectItem value=\"liquefied\">Liquefied Gas</SelectItem>\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-2 gap-4\">\r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"startDate\">Start Date</Label>\r\n            <Input\r\n              id=\"startDate\"\r\n              type=\"date\"\r\n              value={formData.startDate?.toISOString().split('T')[0]}\r\n              onChange={(e) => setFormData({ ...formData, startDate: new Date(e.target.value) })}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"endDate\">End Date</Label>\r\n            <Input\r\n              id=\"endDate\"\r\n              type=\"date\"\r\n              value={formData.endDate?.toISOString().split('T')[0]}\r\n              onChange={(e) => setFormData({ ...formData, endDate: new Date(e.target.value) })}\r\n              required\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Separator />\r\n\r\n      {/* Commercial Terms */}\r\n      <div className=\"space-y-4\">\r\n        <h3 className=\"text-lg font-semibold\">Commercial Terms</h3>\r\n        <div className=\"grid grid-cols-2 gap-4\">\r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"quantity\">Monthly Quantity</Label>\r\n            <Input\r\n              id=\"quantity\"\r\n              type=\"number\"\r\n              value={formData.quantity}\r\n              onChange={(e) => setFormData({ ...formData, quantity: Number(e.target.value) })}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"pricePerUnit\">Price per Unit (₹)</Label>\r\n            <Input\r\n              id=\"pricePerUnit\"\r\n              type=\"number\"\r\n              step=\"0.01\"\r\n              value={formData.pricePerUnit}\r\n              onChange={(e) => setFormData({ ...formData, pricePerUnit: Number(e.target.value) })}\r\n              required\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"p-4 bg-gray-50 rounded-lg\">\r\n          <div className=\"text-sm text-gray-600\">Total Annual Value</div>\r\n          <div className=\"text-2xl font-bold\">₹{calculateTotalValue().toLocaleString()}</div>\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-3 gap-4\">\r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"advancePercentage\">Advance Percentage (%)</Label>\r\n            <Input\r\n              id=\"advancePercentage\"\r\n              type=\"number\"\r\n              value={formData.paymentTerms?.advancePercentage}\r\n              onChange={(e) => setFormData({\r\n                ...formData,\r\n                paymentTerms: { ...formData.paymentTerms!, advancePercentage: Number(e.target.value) }\r\n              })}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"creditDays\">Credit Days</Label>\r\n            <Input\r\n              id=\"creditDays\"\r\n              type=\"number\"\r\n              value={formData.paymentTerms?.creditDays}\r\n              onChange={(e) => setFormData({\r\n                ...formData,\r\n                paymentTerms: { ...formData.paymentTerms!, creditDays: Number(e.target.value) }\r\n              })}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"penaltyRate\">Penalty Rate (%)</Label>\r\n            <Input\r\n              id=\"penaltyRate\"\r\n              type=\"number\"\r\n              step=\"0.1\"\r\n              value={formData.paymentTerms?.penaltyRate}\r\n              onChange={(e) => setFormData({\r\n                ...formData,\r\n                paymentTerms: { ...formData.paymentTerms!, penaltyRate: Number(e.target.value) }\r\n              })}\r\n              required\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Separator />\r\n\r\n      {/* Delivery Terms */}\r\n      <div className=\"space-y-4\">\r\n        <h3 className=\"text-lg font-semibold\">Delivery Terms</h3>\r\n        <div className=\"space-y-2\">\r\n          <Label htmlFor=\"deliveryLocation\">Delivery Location</Label>\r\n          <Textarea\r\n            id=\"deliveryLocation\"\r\n            value={formData.deliveryTerms?.location}\r\n            onChange={(e) => setFormData({\r\n              ...formData,\r\n              deliveryTerms: { ...formData.deliveryTerms!, location: e.target.value }\r\n            })}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-2 gap-4\">\r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"frequency\">Delivery Frequency</Label>\r\n            <Select\r\n              value={formData.deliveryTerms?.frequency}\r\n              onValueChange={(value) => setFormData({\r\n                ...formData,\r\n                deliveryTerms: { ...formData.deliveryTerms!, frequency: value as any }\r\n              })}\r\n            >\r\n              <SelectTrigger>\r\n                <SelectValue />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                <SelectItem value=\"daily\">Daily</SelectItem>\r\n                <SelectItem value=\"weekly\">Weekly</SelectItem>\r\n                <SelectItem value=\"monthly\">Monthly</SelectItem>\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"transportMode\">Transport Mode</Label>\r\n            <Select\r\n              value={formData.deliveryTerms?.transportMode}\r\n              onValueChange={(value) => setFormData({\r\n                ...formData,\r\n                deliveryTerms: { ...formData.deliveryTerms!, transportMode: value as any }\r\n              })}\r\n            >\r\n              <SelectTrigger>\r\n                <SelectValue />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                <SelectItem value=\"pipeline\">Pipeline</SelectItem>\r\n                <SelectItem value=\"cylinder\">Cylinder</SelectItem>\r\n                <SelectItem value=\"tanker\">Tanker</SelectItem>\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <DialogFooter>\r\n        <Button type=\"button\" variant=\"outline\" onClick={onCancel}>\r\n          Cancel\r\n        </Button>\r\n        <Button type=\"submit\">\r\n          {contract ? 'Update Contract' : 'Create Contract'}\r\n        </Button>\r\n      </DialogFooter>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ContractManagement: React.FC = () => {\r\n  const [contracts, setContracts] = useState<Contract[]>([]);\r\n  const [customers, setCustomers] = useState<Customer[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedContract, setSelectedContract] = useState<Contract | null>(null);\r\n  const [showContractForm, setShowContractForm] = useState(false);\r\n  const [showContractDetails, setShowContractDetails] = useState(false);\r\n  const [showSigningInterface, setShowSigningInterface] = useState(false);\r\n\r\n  const loadData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const [contractsResponse, customersResponse] = await Promise.all([\r\n        salesService.getContracts(),\r\n        salesService.getCustomers()\r\n      ]);\r\n\r\n      if (contractsResponse.success) {\r\n        setContracts(contractsResponse.data);\r\n      }\r\n\r\n      if (customersResponse.success) {\r\n        setCustomers(customersResponse.data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading data:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, []);\r\n\r\n  const handleCreateContract = () => {\r\n    setSelectedContract(null);\r\n    setShowContractForm(true);\r\n  };\r\n\r\n  const handleEditContract = (contract: Contract) => {\r\n    setSelectedContract(contract);\r\n    setShowContractForm(true);\r\n  };\r\n\r\n  const handleViewContract = (contract: Contract) => {\r\n    setSelectedContract(contract);\r\n    setShowContractDetails(true);\r\n  };\r\n\r\n  const handleSignContract = (contract: Contract) => {\r\n    setSelectedContract(contract);\r\n    setShowSigningInterface(true);\r\n  };\r\n\r\n  const handleSaveContract = async (contractData: Partial<Contract>) => {\r\n    try {\r\n      if (selectedContract) {\r\n        // Update existing contract - create new version\r\n        const newVersion: Contract = {\r\n          ...selectedContract,\r\n          ...contractData,\r\n          version: selectedContract.version + 1,\r\n          parentContractId: selectedContract.id,\r\n          id: `cont_${Date.now()}`\r\n        };\r\n        await salesService.createContract(newVersion);\r\n      } else {\r\n        // Create new contract\r\n        await salesService.createContract(contractData as Omit<Contract, 'id'>);\r\n      }\r\n      setShowContractForm(false);\r\n      loadData();\r\n    } catch (error) {\r\n      console.error('Error saving contract:', error);\r\n    }\r\n  };\r\n\r\n  const getCustomerById = (id: string) => {\r\n    return customers.find(c => c.id === id);\r\n  };\r\n\r\n  const getContractStats = () => {\r\n    const total = contracts.length;\r\n    const active = contracts.filter(c => c.status === 'active').length;\r\n    const draft = contracts.filter(c => c.status === 'draft').length;\r\n    const expiringSoon = contracts.filter(c => {\r\n      const daysToExpiry = Math.ceil((new Date(c.endDate).getTime() - new Date().getTime()) / (1000 * 60 * 60 * 24));\r\n      return daysToExpiry <= 30 && daysToExpiry > 0;\r\n    }).length;\r\n    const totalValue = contracts\r\n      .filter(c => c.status === 'active')\r\n      .reduce((sum, c) => sum + c.totalValue, 0);\r\n\r\n    return { total, active, draft, expiringSoon, totalValue };\r\n  };\r\n\r\n  const stats = getContractStats();\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold\">Contract Management</h1>\r\n          <p className=\"text-gray-600\">\r\n            Manage supply contracts, agreements, and e-signatures\r\n          </p>\r\n        </div>\r\n        <Button onClick={handleCreateContract}>\r\n          <Plus className=\"w-4 h-4 mr-2\" />\r\n          New Contract\r\n        </Button>\r\n      </div>\r\n\r\n      {/* Statistics Cards */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-5 gap-6\">\r\n        <Card>\r\n          <CardContent className=\"p-6\">\r\n            <div className=\"flex items-center\">\r\n              <FileText className=\"w-8 h-8 text-blue-600\" />\r\n              <div className=\"ml-4\">\r\n                <p className=\"text-sm font-medium text-gray-600\">Total Contracts</p>\r\n                <p className=\"text-2xl font-bold\">{stats.total}</p>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n        <Card>\r\n          <CardContent className=\"p-6\">\r\n            <div className=\"flex items-center\">\r\n              <CheckCircle className=\"w-8 h-8 text-green-600\" />\r\n              <div className=\"ml-4\">\r\n                <p className=\"text-sm font-medium text-gray-600\">Active</p>\r\n                <p className=\"text-2xl font-bold\">{stats.active}</p>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n        <Card>\r\n          <CardContent className=\"p-6\">\r\n            <div className=\"flex items-center\">\r\n              <Edit className=\"w-8 h-8 text-yellow-600\" />\r\n              <div className=\"ml-4\">\r\n                <p className=\"text-sm font-medium text-gray-600\">Draft</p>\r\n                <p className=\"text-2xl font-bold\">{stats.draft}</p>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n        <Card>\r\n          <CardContent className=\"p-6\">\r\n            <div className=\"flex items-center\">\r\n              <AlertTriangle className=\"w-8 h-8 text-orange-600\" />\r\n              <div className=\"ml-4\">\r\n                <p className=\"text-sm font-medium text-gray-600\">Expiring Soon</p>\r\n                <p className=\"text-2xl font-bold\">{stats.expiringSoon}</p>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n        <Card>\r\n          <CardContent className=\"p-6\">\r\n            <div className=\"flex items-center\">\r\n              <DollarSign className=\"w-8 h-8 text-purple-600\" />\r\n              <div className=\"ml-4\">\r\n                <p className=\"text-sm font-medium text-gray-600\">Total Value</p>\r\n                <p className=\"text-2xl font-bold\">₹{(stats.totalValue / 1000000).toFixed(1)}M</p>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      {/* Contracts Grid */}\r\n      {loading ? (\r\n        <div className=\"text-center py-8\">Loading contracts...</div>\r\n      ) : (\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n          {contracts.map((contract) => (\r\n            <ContractCard\r\n              key={contract.id}\r\n              contract={contract}\r\n              customer={getCustomerById(contract.customerId)}\r\n              onEdit={handleEditContract}\r\n              onView={handleViewContract}\r\n              onSign={handleSignContract}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {/* Contract Form Dialog */}\r\n      <Dialog open={showContractForm} onOpenChange={setShowContractForm}>\r\n        <DialogContent className=\"max-w-4xl max-h-[90vh] overflow-y-auto\">\r\n          <DialogHeader>\r\n            <DialogTitle>\r\n              {selectedContract ? 'Edit Contract (New Version)' : 'Create New Contract'}\r\n            </DialogTitle>\r\n            <DialogDescription>\r\n              {selectedContract ? 'Creating a new version will preserve the original contract history.' : 'Create a new supply contract with detailed terms and conditions.'}\r\n            </DialogDescription>\r\n          </DialogHeader>\r\n          <ContractForm\r\n            contract={selectedContract || undefined}\r\n            customers={customers}\r\n            onSave={handleSaveContract}\r\n            onCancel={() => setShowContractForm(false)}\r\n          />\r\n        </DialogContent>\r\n      </Dialog>\r\n\r\n      {/* Contract Details Dialog */}\r\n      <Dialog open={showContractDetails} onOpenChange={setShowContractDetails}>\r\n        <DialogContent className=\"max-w-4xl max-h-[90vh] overflow-y-auto\">\r\n          <DialogHeader>\r\n            <DialogTitle>{selectedContract?.contractNumber}</DialogTitle>\r\n            <DialogDescription>Complete contract details and documentation</DialogDescription>\r\n          </DialogHeader>\r\n          {selectedContract && (\r\n            <Tabs defaultValue=\"details\" className=\"w-full\">\r\n              <TabsList>\r\n                <TabsTrigger value=\"details\">Details</TabsTrigger>\r\n                <TabsTrigger value=\"terms\">Terms</TabsTrigger>\r\n                <TabsTrigger value=\"documents\">Documents</TabsTrigger>\r\n                <TabsTrigger value=\"history\">History</TabsTrigger>\r\n              </TabsList>\r\n              <TabsContent value=\"details\" className=\"space-y-4\">\r\n                <div className=\"grid grid-cols-2 gap-4\">\r\n                  <Card>\r\n                    <CardHeader>\r\n                      <CardTitle className=\"text-sm\">Contract Information</CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent className=\"space-y-2\">\r\n                      <div><strong>Type:</strong> {selectedContract.type}</div>\r\n                      <div><strong>Status:</strong> {selectedContract.status}</div>\r\n                      <div><strong>Version:</strong> {selectedContract.version}</div>\r\n                      <div><strong>Gas Type:</strong> {selectedContract.gasType}</div>\r\n                    </CardContent>\r\n                  </Card>\r\n                  <Card>\r\n                    <CardHeader>\r\n                      <CardTitle className=\"text-sm\">Commercial Terms</CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent className=\"space-y-2\">\r\n                      <div><strong>Monthly Quantity:</strong> {selectedContract.quantity.toLocaleString()}</div>\r\n                      <div><strong>Price per Unit:</strong> ₹{selectedContract.pricePerUnit}</div>\r\n                      <div><strong>Total Value:</strong> ₹{selectedContract.totalValue.toLocaleString()}</div>\r\n                      <div><strong>Payment Terms:</strong> {selectedContract.paymentTerms.creditDays} days</div>\r\n                    </CardContent>\r\n                  </Card>\r\n                </div>\r\n              </TabsContent>\r\n              <TabsContent value=\"terms\">\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle>Terms and Conditions</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    <div className=\"space-y-4\">\r\n                      <div>\r\n                        <h4 className=\"font-semibold\">Payment Terms</h4>\r\n                        <p>Advance: {selectedContract.paymentTerms.advancePercentage}%</p>\r\n                        <p>Credit Period: {selectedContract.paymentTerms.creditDays} days</p>\r\n                        <p>Penalty Rate: {selectedContract.paymentTerms.penaltyRate}% per month</p>\r\n                      </div>\r\n                      <div>\r\n                        <h4 className=\"font-semibold\">Delivery Terms</h4>\r\n                        <p>Location: {selectedContract.deliveryTerms.location}</p>\r\n                        <p>Frequency: {selectedContract.deliveryTerms.frequency}</p>\r\n                        <p>Transport Mode: {selectedContract.deliveryTerms.transportMode}</p>\r\n                      </div>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              </TabsContent>\r\n              <TabsContent value=\"documents\">\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle>Contract Documents</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    <div className=\"space-y-3\">\r\n                      {selectedContract.documents.map((doc) => (\r\n                        <div key={doc.id} className=\"flex items-center justify-between p-3 border rounded\">\r\n                          <div>\r\n                            <div className=\"font-medium\">{doc.name}</div>\r\n                            <div className=\"text-sm text-gray-500\">Uploaded: {doc.uploadDate.toLocaleDateString()}</div>\r\n                          </div>\r\n                          <Button variant=\"outline\" size=\"sm\">\r\n                            <Download className=\"w-4 h-4 mr-1\" />\r\n                            Download\r\n                          </Button>\r\n                        </div>\r\n                      ))}\r\n                      <Button variant=\"outline\" className=\"w-full\">\r\n                        <Upload className=\"w-4 h-4 mr-2\" />\r\n                        Upload Document\r\n                      </Button>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              </TabsContent>\r\n              <TabsContent value=\"history\">\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle>Contract History</CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    <div className=\"space-y-3\">\r\n                      <div className=\"flex items-center space-x-3 p-3 border-l-4 border-green-500 bg-green-50\">\r\n                        <CheckCircle className=\"w-5 h-5 text-green-600\" />\r\n                        <div>\r\n                          <div className=\"font-medium\">Contract Created</div>\r\n                          <div className=\"text-sm text-gray-500\">Version {selectedContract.version} • {selectedContract.startDate.toLocaleDateString()}</div>\r\n                        </div>\r\n                      </div>\r\n                      {selectedContract.signedDate && (\r\n                        <div className=\"flex items-center space-x-3 p-3 border-l-4 border-blue-500 bg-blue-50\">\r\n                          <PenTool className=\"w-5 h-5 text-blue-600\" />\r\n                          <div>\r\n                            <div className=\"font-medium\">Contract Signed</div>\r\n                            <div className=\"text-sm text-gray-500\">{selectedContract.signedDate.toLocaleDateString()}</div>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              </TabsContent>\r\n            </Tabs>\r\n          )}\r\n        </DialogContent>\r\n      </Dialog>\r\n\r\n      {/* E-Signature Dialog */}\r\n      <Dialog open={showSigningInterface} onOpenChange={setShowSigningInterface}>\r\n        <DialogContent className=\"max-w-2xl\">\r\n          <DialogHeader>\r\n            <DialogTitle>E-Signature Interface</DialogTitle>\r\n            <DialogDescription>\r\n              Sign the contract electronically to activate the agreement\r\n            </DialogDescription>\r\n          </DialogHeader>\r\n          <div className=\"space-y-4\">\r\n            <Card>\r\n              <CardContent className=\"p-6\">\r\n                <div className=\"text-center space-y-4\">\r\n                  <PenTool className=\"w-16 h-16 mx-auto text-blue-600\" />\r\n                  <h3 className=\"text-lg font-semibold\">Digital Signature Required</h3>\r\n                  <p className=\"text-gray-600\">\r\n                    This contract requires digital signatures from both parties to become active.\r\n                  </p>\r\n                  <div className=\"space-y-2\">\r\n                    <Button className=\"w-full\">\r\n                      <PenTool className=\"w-4 h-4 mr-2\" />\r\n                      Sign with Digital Certificate\r\n                    </Button>\r\n                    <Button variant=\"outline\" className=\"w-full\">\r\n                      <Send className=\"w-4 h-4 mr-2\" />\r\n                      Send for Customer Signature\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContractManagement;","import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Progress } from '@/components/ui/progress';\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\r\nimport {\r\n  Package, Search, Filter, Plus, Edit, MapPin, Calendar, AlertTriangle,\r\n  CheckCircle, Clock, BarChart3, TrendingUp, Shield\r\n} from 'lucide-react';\r\nimport { salesService } from '../services/salesService';\r\nimport { InventoryItem, InventoryFilters } from '../types';\r\n\r\nconst InventoryCard: React.FC<{ item: InventoryItem }> = ({ item }) => {\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'available': return 'bg-green-100 text-green-800';\r\n      case 'reserved': return 'bg-yellow-100 text-yellow-800';\r\n      case 'sold': return 'bg-blue-100 text-blue-800';\r\n      case 'expired': return 'bg-red-100 text-red-800';\r\n      default: return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  const availabilityPercentage = (item.availableQuantity / item.quantity) * 100;\r\n  const isLowStock = availabilityPercentage < 20;\r\n  const isPesoExpiring = new Date(item.pesoCompliance.expiryDate) < new Date(Date.now() + 30 * 24 * 60 * 60 * 1000);\r\n\r\n  return (\r\n    <Card className=\"hover:shadow-md transition-shadow\">\r\n      <CardHeader className=\"pb-3\">\r\n        <div className=\"flex items-start justify-between\">\r\n          <div className=\"space-y-1\">\r\n            <CardTitle className=\"text-lg\">{item.batchNumber}</CardTitle>\r\n            <div className=\"flex items-center space-x-2\">\r\n              <Badge className={getStatusColor(item.status)}>{item.status}</Badge>\r\n              <Badge variant=\"outline\">{item.gasType}</Badge>\r\n              {isPesoExpiring && <Badge className=\"bg-orange-100 text-orange-800\">PESO Expiring</Badge>}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </CardHeader>\r\n      <CardContent className=\"space-y-4\">\r\n        <div className=\"grid grid-cols-2 gap-4 text-sm\">\r\n          <div>\r\n            <div className=\"text-gray-600\">Available</div>\r\n            <div className=\"font-semibold\">{item.availableQuantity.toLocaleString()} {item.unit}</div>\r\n          </div>\r\n          <div>\r\n            <div className=\"text-gray-600\">Total</div>\r\n            <div className=\"font-semibold\">{item.quantity.toLocaleString()} {item.unit}</div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"space-y-2\">\r\n          <div className=\"flex justify-between text-sm\">\r\n            <span>Availability</span>\r\n            <span className={isLowStock ? 'text-red-600' : 'text-green-600'}>\r\n              {availabilityPercentage.toFixed(1)}%\r\n            </span>\r\n          </div>\r\n          <Progress value={availabilityPercentage} className=\"h-2\" />\r\n        </div>\r\n\r\n        <div className=\"space-y-2 text-sm\">\r\n          <div className=\"flex items-center text-gray-600\">\r\n            <Shield className=\"w-4 h-4 mr-2\" />\r\n            PESO: {item.pesoCompliance.status} (Exp: {new Date(item.pesoCompliance.expiryDate).toLocaleDateString()})\r\n          </div>\r\n          <div className=\"flex items-center text-gray-600\">\r\n            <MapPin className=\"w-4 h-4 mr-2\" />\r\n            {item.location.plantId} - {item.location.tankId}\r\n          </div>\r\n          <div className=\"flex items-center text-gray-600\">\r\n            <Calendar className=\"w-4 h-4 mr-2\" />\r\n            Produced: {new Date(item.productionDate).toLocaleDateString()}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"pt-2 border-t\">\r\n          <div className=\"flex justify-between items-center\">\r\n            <span className=\"text-sm text-gray-600\">Value</span>\r\n            <span className=\"font-semibold\">₹{(item.availableQuantity * item.pricePerUnit).toLocaleString()}</span>\r\n          </div>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst InventoryManagement: React.FC = () => {\r\n  const [inventory, setInventory] = useState<InventoryItem[]>([]);\r\n  const [filteredInventory, setFilteredInventory] = useState<InventoryItem[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [filters, setFilters] = useState<InventoryFilters>({});\r\n\r\n  useEffect(() => {\r\n    const loadInventory = async () => {\r\n      try {\r\n        const response = await salesService.getInventory(filters);\r\n        if (response.success) {\r\n          setInventory(response.data);\r\n          setFilteredInventory(response.data);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error loading inventory:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    loadInventory();\r\n  }, [filters]);\r\n\r\n  useEffect(() => {\r\n    const filtered = inventory.filter(item =>\r\n      item.batchNumber.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      item.gasType.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      item.location.plantId.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n    setFilteredInventory(filtered);\r\n  }, [inventory, searchTerm]);\r\n\r\n  const getInventoryStats = () => {\r\n    const totalItems = inventory.length;\r\n    const totalValue = inventory.reduce((sum, item) => sum + (item.availableQuantity * item.pricePerUnit), 0);\r\n    const lowStockItems = inventory.filter(item => (item.availableQuantity / item.quantity) < 0.2).length;\r\n    const pesoExpiringItems = inventory.filter(item =>\r\n      new Date(item.pesoCompliance.expiryDate) < new Date(Date.now() + 30 * 24 * 60 * 60 * 1000)\r\n    ).length;\r\n\r\n    return { totalItems, totalValue, lowStockItems, pesoExpiringItems };\r\n  };\r\n\r\n  const stats = getInventoryStats();\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold\">Inventory Management</h1>\r\n          <p className=\"text-gray-600\">Monitor gas inventory, batches, and PESO compliance</p>\r\n        </div>\r\n        <Button>\r\n          <Plus className=\"w-4 h-4 mr-2\" />\r\n          Add Batch\r\n        </Button>\r\n      </div>\r\n\r\n      {/* Statistics */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\r\n        <Card>\r\n          <CardContent className=\"p-6\">\r\n            <div className=\"flex items-center\">\r\n              <Package className=\"w-8 h-8 text-blue-600\" />\r\n              <div className=\"ml-4\">\r\n                <p className=\"text-sm font-medium text-gray-600\">Total Items</p>\r\n                <p className=\"text-2xl font-bold\">{stats.totalItems}</p>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n        <Card>\r\n          <CardContent className=\"p-6\">\r\n            <div className=\"flex items-center\">\r\n              <BarChart3 className=\"w-8 h-8 text-green-600\" />\r\n              <div className=\"ml-4\">\r\n                <p className=\"text-sm font-medium text-gray-600\">Inventory Value</p>\r\n                <p className=\"text-2xl font-bold\">₹{(stats.totalValue / 1000000).toFixed(1)}M</p>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n        <Card>\r\n          <CardContent className=\"p-6\">\r\n            <div className=\"flex items-center\">\r\n              <AlertTriangle className=\"w-8 h-8 text-red-600\" />\r\n              <div className=\"ml-4\">\r\n                <p className=\"text-sm font-medium text-gray-600\">Low Stock</p>\r\n                <p className=\"text-2xl font-bold\">{stats.lowStockItems}</p>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n        <Card>\r\n          <CardContent className=\"p-6\">\r\n            <div className=\"flex items-center\">\r\n              <Shield className=\"w-8 h-8 text-orange-600\" />\r\n              <div className=\"ml-4\">\r\n                <p className=\"text-sm font-medium text-gray-600\">PESO Expiring</p>\r\n                <p className=\"text-2xl font-bold\">{stats.pesoExpiringItems}</p>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      {/* Search and Filters */}\r\n      <Card>\r\n        <CardContent className=\"p-6\">\r\n          <div className=\"flex gap-4\">\r\n            <div className=\"relative flex-1\">\r\n              <Search className=\"absolute left-3 top-3 h-4 w-4 text-gray-400\" />\r\n              <Input\r\n                placeholder=\"Search by batch number, gas type, or location...\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n                className=\"pl-10\"\r\n              />\r\n            </div>\r\n            <Button variant=\"outline\">\r\n              <Filter className=\"w-4 h-4 mr-2\" />\r\n              Filters\r\n            </Button>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Inventory Grid */}\r\n      <Tabs defaultValue=\"grid\" className=\"w-full\">\r\n        <TabsList>\r\n          <TabsTrigger value=\"grid\">Grid View</TabsTrigger>\r\n          <TabsTrigger value=\"table\">Table View</TabsTrigger>\r\n          <TabsTrigger value=\"alerts\">Alerts</TabsTrigger>\r\n        </TabsList>\r\n\r\n        <TabsContent value=\"grid\" className=\"space-y-6\">\r\n          {loading ? (\r\n            <div className=\"text-center py-8\">Loading inventory...</div>\r\n          ) : (\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n              {filteredInventory.map((item) => (\r\n                <InventoryCard key={item.id} item={item} />\r\n              ))}\r\n            </div>\r\n          )}\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"table\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Inventory Table</CardTitle>\r\n              <CardDescription>Detailed inventory listing</CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"text-center py-8 text-gray-500\">\r\n                Table view will be implemented here\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"alerts\">\r\n          <div className=\"space-y-4\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center\">\r\n                  <AlertTriangle className=\"w-5 h-5 mr-2 text-red-600\" />\r\n                  Critical Alerts\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"space-y-3\">\r\n                  {inventory.filter(item => (item.availableQuantity / item.quantity) < 0.1).map(item => (\r\n                    <div key={item.id} className=\"flex items-center justify-between p-3 border rounded bg-red-50\">\r\n                      <div>\r\n                        <div className=\"font-medium\">{item.batchNumber}</div>\r\n                        <div className=\"text-sm text-gray-600\">Critical low stock: {item.availableQuantity} {item.unit} remaining</div>\r\n                      </div>\r\n                      <Badge className=\"bg-red-100 text-red-800\">Critical</Badge>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </TabsContent>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InventoryManagement;","import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\r\nimport { FileText, Plus, Search, Filter, Eye, Edit, Download, Calendar, DollarSign, Package, Users } from 'lucide-react';\r\nimport { salesService } from '../services/salesService';\r\nimport { Order, Invoice } from '../types';\r\n\r\nconst OrderCard: React.FC<{ order: Order }> = ({ order }) => {\r\n  const getStatusColor = (status: string) => {\r\n    const colors = {\r\n      pending: 'bg-yellow-100 text-yellow-800',\r\n      confirmed: 'bg-blue-100 text-blue-800',\r\n      processing: 'bg-purple-100 text-purple-800',\r\n      ready: 'bg-green-100 text-green-800',\r\n      dispatched: 'bg-indigo-100 text-indigo-800',\r\n      delivered: 'bg-green-100 text-green-800',\r\n      cancelled: 'bg-red-100 text-red-800'\r\n    };\r\n    return colors[status as keyof typeof colors] || 'bg-gray-100 text-gray-800';\r\n  };\r\n\r\n  return (\r\n    <Card className=\"hover:shadow-md transition-shadow\">\r\n      <CardHeader className=\"pb-3\">\r\n        <div className=\"flex items-start justify-between\">\r\n          <div className=\"space-y-1\">\r\n            <div className=\"flex items-center space-x-2\">\r\n              <span className=\"font-semibold\">{order.orderNumber}</span>\r\n              <Badge className={getStatusColor(order.status)}>{order.status}</Badge>\r\n            </div>\r\n            <div className=\"text-sm text-gray-600\">\r\n              Order Date: {order.orderDate.toLocaleDateString()}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </CardHeader>\r\n      <CardContent className=\"space-y-3\">\r\n        <div className=\"grid grid-cols-2 gap-4 text-sm\">\r\n          <div>\r\n            <div className=\"text-gray-600\">Quantity</div>\r\n            <div className=\"font-semibold\">{order.totalQuantity.toLocaleString()} units</div>\r\n          </div>\r\n          <div>\r\n            <div className=\"text-gray-600\">Amount</div>\r\n            <div className=\"font-semibold\">₹{order.finalAmount.toLocaleString()}</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex items-center text-sm text-gray-600\">\r\n          <Calendar className=\"w-4 h-4 mr-1\" />\r\n          Delivery: {order.requestedDeliveryDate.toLocaleDateString()}\r\n        </div>\r\n        <div className=\"flex space-x-2 pt-2\">\r\n          <Button variant=\"outline\" size=\"sm\" className=\"flex-1\">\r\n            <Eye className=\"w-4 h-4 mr-1\" />\r\n            View\r\n          </Button>\r\n          <Button variant=\"outline\" size=\"sm\" className=\"flex-1\">\r\n            <Edit className=\"w-4 h-4 mr-1\" />\r\n            Edit\r\n          </Button>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst OrderManagement: React.FC = () => {\r\n  const [orders, setOrders] = useState<Order[]>([]);\r\n  const [filteredOrders, setFilteredOrders] = useState<Order[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  useEffect(() => {\r\n    const loadOrders = async () => {\r\n      try {\r\n        const response = await salesService.getOrders();\r\n        if (response.success) {\r\n          setOrders(response.data);\r\n          setFilteredOrders(response.data);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error loading orders:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    loadOrders();\r\n  }, []);\r\n\r\n  const stats = {\r\n    total: orders.length,\r\n    pending: orders.filter(o => o.status === 'pending').length,\r\n    confirmed: orders.filter(o => o.status === 'confirmed').length,\r\n    totalValue: orders.reduce((sum, o) => sum + o.finalAmount, 0)\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold\">Order & Invoice Management</h1>\r\n          <p className=\"text-gray-600\">Manage orders and generate invoices</p>\r\n        </div>\r\n        <Button>\r\n          <Plus className=\"w-4 h-4 mr-2\" />\r\n          New Order\r\n        </Button>\r\n      </div>\r\n\r\n      {/* Statistics */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\r\n        <Card><CardContent className=\"p-6\">\r\n          <div className=\"flex items-center\">\r\n            <FileText className=\"w-8 h-8 text-blue-600\" />\r\n            <div className=\"ml-4\">\r\n              <p className=\"text-sm font-medium text-gray-600\">Total Orders</p>\r\n              <p className=\"text-2xl font-bold\">{stats.total}</p>\r\n            </div>\r\n          </div>\r\n        </CardContent></Card>\r\n        <Card><CardContent className=\"p-6\">\r\n          <div className=\"flex items-center\">\r\n            <Package className=\"w-8 h-8 text-yellow-600\" />\r\n            <div className=\"ml-4\">\r\n              <p className=\"text-sm font-medium text-gray-600\">Pending</p>\r\n              <p className=\"text-2xl font-bold\">{stats.pending}</p>\r\n            </div>\r\n          </div>\r\n        </CardContent></Card>\r\n        <Card><CardContent className=\"p-6\">\r\n          <div className=\"flex items-center\">\r\n            <FileText className=\"w-8 h-8 text-green-600\" />\r\n            <div className=\"ml-4\">\r\n              <p className=\"text-sm font-medium text-gray-600\">Confirmed</p>\r\n              <p className=\"text-2xl font-bold\">{stats.confirmed}</p>\r\n            </div>\r\n          </div>\r\n        </CardContent></Card>\r\n        <Card><CardContent className=\"p-6\">\r\n          <div className=\"flex items-center\">\r\n            <DollarSign className=\"w-8 h-8 text-purple-600\" />\r\n            <div className=\"ml-4\">\r\n              <p className=\"text-sm font-medium text-gray-600\">Total Value</p>\r\n              <p className=\"text-2xl font-bold\">₹{(stats.totalValue / 1000000).toFixed(1)}M</p>\r\n            </div>\r\n          </div>\r\n        </CardContent></Card>\r\n      </div>\r\n\r\n      {/* Search and Filters */}\r\n      <Card>\r\n        <CardContent className=\"p-6\">\r\n          <div className=\"flex gap-4\">\r\n            <div className=\"relative flex-1\">\r\n              <Search className=\"absolute left-3 top-3 h-4 w-4 text-gray-400\" />\r\n              <Input placeholder=\"Search orders...\" value={searchTerm} onChange={(e) => setSearchTerm(e.target.value)} className=\"pl-10\" />\r\n            </div>\r\n            <Select><SelectTrigger className=\"w-40\"><SelectValue placeholder=\"Status\" /></SelectTrigger>\r\n              <SelectContent>\r\n                <SelectItem value=\"all\">All Status</SelectItem>\r\n                <SelectItem value=\"pending\">Pending</SelectItem>\r\n                <SelectItem value=\"confirmed\">Confirmed</SelectItem>\r\n                <SelectItem value=\"delivered\">Delivered</SelectItem>\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Orders Grid */}\r\n      {loading ? (\r\n        <div className=\"text-center py-8\">Loading orders...</div>\r\n      ) : (\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n          {filteredOrders.map((order) => (\r\n            <OrderCard key={order.id} order={order} />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderManagement;","import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\r\nimport { Textarea } from '@/components/ui/textarea';\r\nimport { Progress } from '@/components/ui/progress';\r\nimport { Mic, MicOff, Play, Pause, Square, Languages, FileText, CheckCircle, AlertTriangle } from 'lucide-react';\r\nimport { salesService } from '../services/salesService';\r\nimport { VoiceInvoiceData } from '../types';\r\n\r\nconst VoiceInvoicing: React.FC = () => {\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [language, setLanguage] = useState<'hindi' | 'english'>('hindi');\r\n  const [currentSession, setCurrentSession] = useState<VoiceInvoiceData | null>(null);\r\n  const [transcription, setTranscription] = useState('');\r\n  const [confidence, setConfidence] = useState(0);\r\n\r\n  const startRecording = async () => {\r\n    try {\r\n      const response = await salesService.startVoiceSession(language);\r\n      if (response.success) {\r\n        setCurrentSession(response.data);\r\n        setIsRecording(true);\r\n        // Mock recording simulation\r\n        setTimeout(() => {\r\n          stopRecording();\r\n        }, 5000);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error starting voice session:', error);\r\n    }\r\n  };\r\n\r\n  const stopRecording = async () => {\r\n    setIsRecording(false);\r\n    if (currentSession) {\r\n      // Mock audio processing\r\n      const response = await salesService.processVoiceData(currentSession.sessionId, 'mock-audio-data');\r\n      if (response.success) {\r\n        setCurrentSession(response.data);\r\n        setTranscription(response.data.transcription);\r\n        setConfidence(response.data.confidence * 100);\r\n      }\r\n    }\r\n  };\r\n\r\n  const generateInvoice = async () => {\r\n    if (currentSession?.extractedData.customerId) {\r\n      // Create order and generate invoice\r\n      console.log('Generating invoice from voice data...');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold\">Voice Invoicing</h1>\r\n          <p className=\"text-gray-600\">Create invoices using voice commands in Hindi or English</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n        {/* Voice Recording Interface */}\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle className=\"flex items-center\">\r\n              <Mic className=\"w-5 h-5 mr-2\" />\r\n              Voice Input\r\n            </CardTitle>\r\n            <CardDescription>Record voice commands to create invoices</CardDescription>\r\n          </CardHeader>\r\n          <CardContent className=\"space-y-6\">\r\n            <div className=\"space-y-4\">\r\n              <div>\r\n                <label className=\"text-sm font-medium\">Language</label>\r\n                <Select value={language} onValueChange={(value) => setLanguage(value as 'hindi' | 'english')}>\r\n                  <SelectTrigger>\r\n                    <SelectValue />\r\n                  </SelectTrigger>\r\n                  <SelectContent>\r\n                    <SelectItem value=\"hindi\">हिंदी (Hindi)</SelectItem>\r\n                    <SelectItem value=\"english\">English</SelectItem>\r\n                  </SelectContent>\r\n                </Select>\r\n              </div>\r\n\r\n              <div className=\"text-center space-y-4\">\r\n                <div className={`w-32 h-32 mx-auto rounded-full flex items-center justify-center ${isRecording ? 'bg-red-100 animate-pulse' : 'bg-gray-100'}`}>\r\n                  {isRecording ? (\r\n                    <MicOff className=\"w-16 h-16 text-red-600\" />\r\n                  ) : (\r\n                    <Mic className=\"w-16 h-16 text-gray-600\" />\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"space-y-2\">\r\n                  {!isRecording ? (\r\n                    <Button onClick={startRecording} className=\"w-full\">\r\n                      <Mic className=\"w-4 h-4 mr-2\" />\r\n                      Start Recording\r\n                    </Button>\r\n                  ) : (\r\n                    <Button onClick={stopRecording} variant=\"destructive\" className=\"w-full\">\r\n                      <Square className=\"w-4 h-4 mr-2\" />\r\n                      Stop Recording\r\n                    </Button>\r\n                  )}\r\n                </div>\r\n\r\n                {isRecording && (\r\n                  <div className=\"space-y-2\">\r\n                    <div className=\"text-sm text-gray-600\">Recording in progress...</div>\r\n                    <Progress value={75} className=\"w-full\" />\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Sample Voice Commands */}\r\n            <div className=\"space-y-3\">\r\n              <h4 className=\"font-medium\">Sample Voice Commands:</h4>\r\n              <div className=\"space-y-2 text-sm\">\r\n                <div className=\"p-2 bg-blue-50 rounded\">\r\n                  <strong>Hindi:</strong> \"ग्रीन एनर्जी इंडस्ट्रीज के लिए एक हजार क्यूबिक मीटर बायो गैस, पैंतालीस रुपए प्रति यूनिट\"\r\n                </div>\r\n                <div className=\"p-2 bg-green-50 rounded\">\r\n                  <strong>English:</strong> \"Create invoice for Green Energy Industries, one thousand cubic meters biogas at forty-five rupees per unit\"\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Transcription and Processing */}\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle className=\"flex items-center\">\r\n              <Languages className=\"w-5 h-5 mr-2\" />\r\n              Transcription & Processing\r\n            </CardTitle>\r\n            <CardDescription>Voice-to-text conversion and data extraction</CardDescription>\r\n          </CardHeader>\r\n          <CardContent className=\"space-y-6\">\r\n            {transcription && (\r\n              <div className=\"space-y-4\">\r\n                <div>\r\n                  <label className=\"text-sm font-medium\">Transcription</label>\r\n                  <Textarea value={transcription} readOnly className=\"mt-1\" rows={3} />\r\n                  <div className=\"flex items-center mt-2 space-x-2\">\r\n                    <span className=\"text-sm text-gray-600\">Confidence:</span>\r\n                    <Progress value={confidence} className=\"flex-1 max-w-32\" />\r\n                    <span className=\"text-sm font-medium\">{confidence.toFixed(1)}%</span>\r\n                  </div>\r\n                </div>\r\n\r\n                {currentSession?.extractedData && (\r\n                  <div className=\"space-y-3\">\r\n                    <h4 className=\"font-medium\">Extracted Information:</h4>\r\n                    <div className=\"space-y-2 text-sm\">\r\n                      {currentSession.extractedData.customerName && (\r\n                        <div className=\"flex justify-between\">\r\n                          <span>Customer:</span>\r\n                          <span className=\"font-medium\">{currentSession.extractedData.customerName}</span>\r\n                        </div>\r\n                      )}\r\n                      {currentSession.extractedData.items.map((item, index) => (\r\n                        <div key={index} className=\"p-2 border rounded\">\r\n                          <div className=\"flex justify-between\">\r\n                            <span>Item:</span>\r\n                            <span className=\"font-medium\">{item.description}</span>\r\n                          </div>\r\n                          <div className=\"flex justify-between\">\r\n                            <span>Quantity:</span>\r\n                            <span className=\"font-medium\">{item.quantity} {item.unit}</span>\r\n                          </div>\r\n                          {item.pricePerUnit && (\r\n                            <div className=\"flex justify-between\">\r\n                              <span>Price:</span>\r\n                              <span className=\"font-medium\">₹{item.pricePerUnit}/{item.unit}</span>\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      ))}\r\n                      {currentSession.extractedData.totalAmount && (\r\n                        <div className=\"flex justify-between font-semibold\">\r\n                          <span>Total Amount:</span>\r\n                          <span>₹{currentSession.extractedData.totalAmount.toLocaleString()}</span>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n\r\n                    {currentSession.validationErrors.length === 0 ? (\r\n                      <div className=\"flex items-center space-x-2 text-green-600\">\r\n                        <CheckCircle className=\"w-4 h-4\" />\r\n                        <span className=\"text-sm\">Data validation successful</span>\r\n                      </div>\r\n                    ) : (\r\n                      <div className=\"space-y-2\">\r\n                        <div className=\"flex items-center space-x-2 text-red-600\">\r\n                          <AlertTriangle className=\"w-4 h-4\" />\r\n                          <span className=\"text-sm\">Validation errors found</span>\r\n                        </div>\r\n                        <ul className=\"text-sm text-red-600 space-y-1\">\r\n                          {currentSession.validationErrors.map((error, index) => (\r\n                            <li key={index}>• {error}</li>\r\n                          ))}\r\n                        </ul>\r\n                      </div>\r\n                    )}\r\n\r\n                    <Button onClick={generateInvoice} className=\"w-full\" disabled={currentSession.validationErrors.length > 0}>\r\n                      <FileText className=\"w-4 h-4 mr-2\" />\r\n                      Generate Invoice\r\n                    </Button>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n\r\n            {!transcription && (\r\n              <div className=\"text-center py-8 text-gray-500\">\r\n                Start recording to see transcription and extracted data\r\n              </div>\r\n            )}\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      {/* Recent Voice Sessions */}\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Recent Voice Sessions</CardTitle>\r\n          <CardDescription>History of voice invoicing sessions</CardDescription>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"space-y-3\">\r\n            <div className=\"flex items-center justify-between p-3 border rounded\">\r\n              <div>\r\n                <div className=\"font-medium\">Session #001</div>\r\n                <div className=\"text-sm text-gray-600\">Green Energy Industries • ₹45,000 • Hindi</div>\r\n                <div className=\"text-xs text-gray-500\">2 minutes ago</div>\r\n              </div>\r\n              <div className=\"flex items-center space-x-2\">\r\n                <Badge className=\"bg-green-100 text-green-800\">Completed</Badge>\r\n                <Button variant=\"outline\" size=\"sm\">\r\n                  <Play className=\"w-4 h-4 mr-1\" />\r\n                  Replay\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VoiceInvoicing;","import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Button } from '@/components/ui/button';\r\nimport { DollarSign, CreditCard, TrendingUp, AlertTriangle, CheckCircle, Clock } from 'lucide-react';\r\nimport { salesService } from '../services/salesService';\r\nimport { Payment } from '../types';\r\n\r\nconst PaymentTracking: React.FC = () => {\r\n  const [payments, setPayments] = useState<Payment[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const loadPayments = async () => {\r\n      try {\r\n        const response = await salesService.getPayments();\r\n        if (response.success) {\r\n          setPayments(response.data);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error loading payments:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    loadPayments();\r\n  }, []);\r\n\r\n  const mockPayments = [\r\n    { id: '1', amount: 50445, status: 'confirmed', method: 'bank_transfer', date: new Date(), customer: 'Green Energy Industries' },\r\n    { id: '2', amount: 25000, status: 'pending', method: 'cheque', date: new Date(), customer: 'Sunrise Hotels' },\r\n    { id: '3', amount: 75000, status: 'failed', method: 'upi', date: new Date(), customer: 'Emerald Heights' }\r\n  ];\r\n\r\n  const getStatusColor = (status: string) => {\r\n    const colors = {\r\n      confirmed: 'bg-green-100 text-green-800',\r\n      pending: 'bg-yellow-100 text-yellow-800',\r\n      failed: 'bg-red-100 text-red-800',\r\n      refunded: 'bg-blue-100 text-blue-800'\r\n    };\r\n    return colors[status as keyof typeof colors] || 'bg-gray-100 text-gray-800';\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold\">Payment Tracking</h1>\r\n          <p className=\"text-gray-600\">Monitor payments and reconciliation</p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Statistics */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\r\n        <Card><CardContent className=\"p-6\">\r\n          <div className=\"flex items-center\">\r\n            <DollarSign className=\"w-8 h-8 text-green-600\" />\r\n            <div className=\"ml-4\">\r\n              <p className=\"text-sm font-medium text-gray-600\">Total Received</p>\r\n              <p className=\"text-2xl font-bold\">₹2.4M</p>\r\n            </div>\r\n          </div>\r\n        </CardContent></Card>\r\n        <Card><CardContent className=\"p-6\">\r\n          <div className=\"flex items-center\">\r\n            <Clock className=\"w-8 h-8 text-yellow-600\" />\r\n            <div className=\"ml-4\">\r\n              <p className=\"text-sm font-medium text-gray-600\">Pending</p>\r\n              <p className=\"text-2xl font-bold\">₹150K</p>\r\n            </div>\r\n          </div>\r\n        </CardContent></Card>\r\n        <Card><CardContent className=\"p-6\">\r\n          <div className=\"flex items-center\">\r\n            <AlertTriangle className=\"w-8 h-8 text-red-600\" />\r\n            <div className=\"ml-4\">\r\n              <p className=\"text-sm font-medium text-gray-600\">Overdue</p>\r\n              <p className=\"text-2xl font-bold\">₹75K</p>\r\n            </div>\r\n          </div>\r\n        </CardContent></Card>\r\n        <Card><CardContent className=\"p-6\">\r\n          <div className=\"flex items-center\">\r\n            <TrendingUp className=\"w-8 h-8 text-blue-600\" />\r\n            <div className=\"ml-4\">\r\n              <p className=\"text-sm font-medium text-gray-600\">Collection Rate</p>\r\n              <p className=\"text-2xl font-bold\">94%</p>\r\n            </div>\r\n          </div>\r\n        </CardContent></Card>\r\n      </div>\r\n\r\n      {/* Recent Payments */}\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Recent Payments</CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"space-y-3\">\r\n            {mockPayments.map((payment) => (\r\n              <div key={payment.id} className=\"flex items-center justify-between p-4 border rounded\">\r\n                <div className=\"space-y-1\">\r\n                  <div className=\"font-medium\">{payment.customer}</div>\r\n                  <div className=\"text-sm text-gray-600\">\r\n                    {payment.method} • {payment.date.toLocaleDateString()}\r\n                  </div>\r\n                </div>\r\n                <div className=\"text-right space-y-1\">\r\n                  <div className=\"font-semibold\">₹{payment.amount.toLocaleString()}</div>\r\n                  <Badge className={getStatusColor(payment.status)}>{payment.status}</Badge>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Payment Reconciliation */}\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Bank Reconciliation</CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"text-center py-8 text-gray-500\">\r\n            Bank reconciliation interface will be displayed here\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentTracking;","import React, { useState } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Calendar, Truck, MapPin, Clock, Route, Package } from 'lucide-react';\r\n\r\nconst DeliveryScheduling: React.FC = () => {\r\n  const mockDeliveries = [\r\n    { id: '1', order: 'ORD-2024-001', customer: 'Green Energy Industries', date: '2024-09-25', status: 'scheduled', driver: 'Rajesh Kumar' },\r\n    { id: '2', order: 'ORD-2024-002', customer: 'Sunrise Hotels', date: '2024-09-26', status: 'in_transit', driver: 'Suresh Yadav' },\r\n    { id: '3', order: 'ORD-2024-003', customer: 'Emerald Heights', date: '2024-09-27', status: 'delivered', driver: 'Amit Sharma' }\r\n  ];\r\n\r\n  const getStatusColor = (status: string) => {\r\n    const colors = {\r\n      scheduled: 'bg-blue-100 text-blue-800',\r\n      in_transit: 'bg-yellow-100 text-yellow-800',\r\n      delivered: 'bg-green-100 text-green-800',\r\n      failed: 'bg-red-100 text-red-800'\r\n    };\r\n    return colors[status as keyof typeof colors] || 'bg-gray-100 text-gray-800';\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold\">Delivery Scheduling</h1>\r\n          <p className=\"text-gray-600\">Schedule and track deliveries with route optimization</p>\r\n        </div>\r\n        <Button>\r\n          <Truck className=\"w-4 h-4 mr-2\" />\r\n          Schedule Delivery\r\n        </Button>\r\n      </div>\r\n\r\n      {/* Statistics */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\r\n        <Card><CardContent className=\"p-6\">\r\n          <div className=\"flex items-center\">\r\n            <Package className=\"w-8 h-8 text-blue-600\" />\r\n            <div className=\"ml-4\">\r\n              <p className=\"text-sm font-medium text-gray-600\">Scheduled</p>\r\n              <p className=\"text-2xl font-bold\">12</p>\r\n            </div>\r\n          </div>\r\n        </CardContent></Card>\r\n        <Card><CardContent className=\"p-6\">\r\n          <div className=\"flex items-center\">\r\n            <Truck className=\"w-8 h-8 text-yellow-600\" />\r\n            <div className=\"ml-4\">\r\n              <p className=\"text-sm font-medium text-gray-600\">In Transit</p>\r\n              <p className=\"text-2xl font-bold\">5</p>\r\n            </div>\r\n          </div>\r\n        </CardContent></Card>\r\n        <Card><CardContent className=\"p-6\">\r\n          <div className=\"flex items-center\">\r\n            <Route className=\"w-8 h-8 text-green-600\" />\r\n            <div className=\"ml-4\">\r\n              <p className=\"text-sm font-medium text-gray-600\">Delivered</p>\r\n              <p className=\"text-2xl font-bold\">28</p>\r\n            </div>\r\n          </div>\r\n        </CardContent></Card>\r\n        <Card><CardContent className=\"p-6\">\r\n          <div className=\"flex items-center\">\r\n            <Clock className=\"w-8 h-8 text-purple-600\" />\r\n            <div className=\"ml-4\">\r\n              <p className=\"text-sm font-medium text-gray-600\">On Time %</p>\r\n              <p className=\"text-2xl font-bold\">96%</p>\r\n            </div>\r\n          </div>\r\n        </CardContent></Card>\r\n      </div>\r\n\r\n      {/* Delivery Calendar */}\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle className=\"flex items-center\">\r\n            <Calendar className=\"w-5 h-5 mr-2\" />\r\n            Delivery Calendar\r\n          </CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"text-center py-8 text-gray-500\">\r\n            Interactive delivery calendar will be displayed here\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Active Deliveries */}\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Active Deliveries</CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"space-y-3\">\r\n            {mockDeliveries.map((delivery) => (\r\n              <div key={delivery.id} className=\"flex items-center justify-between p-4 border rounded\">\r\n                <div className=\"space-y-1\">\r\n                  <div className=\"font-medium\">{delivery.order}</div>\r\n                  <div className=\"text-sm text-gray-600\">{delivery.customer}</div>\r\n                  <div className=\"flex items-center text-sm text-gray-500\">\r\n                    <Truck className=\"w-4 h-4 mr-1\" />\r\n                    {delivery.driver}\r\n                  </div>\r\n                </div>\r\n                <div className=\"text-right space-y-1\">\r\n                  <div className=\"text-sm\">{delivery.date}</div>\r\n                  <Badge className={getStatusColor(delivery.status)}>{delivery.status}</Badge>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Route Optimization */}\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle className=\"flex items-center\">\r\n            <Route className=\"w-5 h-5 mr-2\" />\r\n            Route Optimization\r\n          </CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"text-center py-8 text-gray-500\">\r\n            Route optimization and mapping interface will be displayed here\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeliveryScheduling;","import React, { useState } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Button } from '@/components/ui/button';\r\nimport { TrendingUp, TrendingDown, BarChart3, DollarSign, Target, Zap } from 'lucide-react';\r\n\r\nconst PriceBenchmarking: React.FC = () => {\r\n  const mockPriceData = [\r\n    { gasType: 'Biogas', ourPrice: 45, marketAvg: 48, change: -6.25, competitive: 'advantage' },\r\n    { gasType: 'Compressed', ourPrice: 65, marketAvg: 62, change: 4.84, competitive: 'premium' },\r\n    { gasType: 'Liquefied', ourPrice: 85, marketAvg: 83, change: 2.41, competitive: 'premium' }\r\n  ];\r\n\r\n  const getCompetitiveColor = (status: string) => {\r\n    const colors = {\r\n      advantage: 'bg-green-100 text-green-800',\r\n      premium: 'bg-blue-100 text-blue-800',\r\n      disadvantage: 'bg-red-100 text-red-800'\r\n    };\r\n    return colors[status as keyof typeof colors] || 'bg-gray-100 text-gray-800';\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold\">Price Benchmarking</h1>\r\n          <p className=\"text-gray-600\">Market price analysis and dynamic pricing engine</p>\r\n        </div>\r\n        <Button>\r\n          <Zap className=\"w-4 h-4 mr-2\" />\r\n          Update Prices\r\n        </Button>\r\n      </div>\r\n\r\n      {/* Price Comparison */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n        {mockPriceData.map((item) => (\r\n          <Card key={item.gasType}>\r\n            <CardHeader className=\"pb-3\">\r\n              <CardTitle className=\"text-lg\">{item.gasType}</CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-4\">\r\n              <div className=\"grid grid-cols-2 gap-4\">\r\n                <div>\r\n                  <div className=\"text-sm text-gray-600\">Our Price</div>\r\n                  <div className=\"text-xl font-bold\">₹{item.ourPrice}</div>\r\n                </div>\r\n                <div>\r\n                  <div className=\"text-sm text-gray-600\">Market Avg</div>\r\n                  <div className=\"text-xl font-bold\">₹{item.marketAvg}</div>\r\n                </div>\r\n              </div>\r\n              <div className=\"flex items-center justify-between\">\r\n                <div className=\"flex items-center space-x-1\">\r\n                  {item.change > 0 ? (\r\n                    <TrendingUp className=\"w-4 h-4 text-red-600\" />\r\n                  ) : (\r\n                    <TrendingDown className=\"w-4 h-4 text-green-600\" />\r\n                  )}\r\n                  <span className={`text-sm ${item.change > 0 ? 'text-red-600' : 'text-green-600'}`}>\r\n                    {Math.abs(item.change)}%\r\n                  </span>\r\n                </div>\r\n                <Badge className={getCompetitiveColor(item.competitive)}>\r\n                  {item.competitive}\r\n                </Badge>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Market Analysis */}\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle className=\"flex items-center\">\r\n            <BarChart3 className=\"w-5 h-5 mr-2\" />\r\n            Market Analysis\r\n          </CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"text-center py-8 text-gray-500\">\r\n            Market price trends and competitor analysis will be displayed here\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Dynamic Pricing Engine */}\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle className=\"flex items-center\">\r\n            <Target className=\"w-5 h-5 mr-2\" />\r\n            Dynamic Pricing Engine\r\n          </CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n            <div className=\"space-y-4\">\r\n              <h4 className=\"font-medium\">Pricing Factors</h4>\r\n              <div className=\"space-y-2\">\r\n                <div className=\"flex justify-between items-center\">\r\n                  <span className=\"text-sm\">Raw Material Cost</span>\r\n                  <span className=\"font-medium\">₹15/unit</span>\r\n                </div>\r\n                <div className=\"flex justify-between items-center\">\r\n                  <span className=\"text-sm\">Production Cost</span>\r\n                  <span className=\"font-medium\">₹8/unit</span>\r\n                </div>\r\n                <div className=\"flex justify-between items-center\">\r\n                  <span className=\"text-sm\">Transport Cost</span>\r\n                  <span className=\"font-medium\">₹5/unit</span>\r\n                </div>\r\n                <div className=\"flex justify-between items-center\">\r\n                  <span className=\"text-sm\">Margin (30%)</span>\r\n                  <span className=\"font-medium\">₹12/unit</span>\r\n                </div>\r\n                <div className=\"flex justify-between items-center\">\r\n                  <span className=\"text-sm\">Taxes</span>\r\n                  <span className=\"font-medium\">₹5/unit</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"space-y-4\">\r\n              <h4 className=\"font-medium\">Recommended Prices</h4>\r\n              <div className=\"space-y-2\">\r\n                <div className=\"p-3 border rounded\">\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <span className=\"font-medium\">Biogas</span>\r\n                    <span className=\"text-lg font-bold text-green-600\">₹45/unit</span>\r\n                  </div>\r\n                  <div className=\"text-sm text-gray-600\">Competitive advantage maintained</div>\r\n                </div>\r\n                <div className=\"p-3 border rounded\">\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <span className=\"font-medium\">Compressed</span>\r\n                    <span className=\"text-lg font-bold text-blue-600\">₹63/unit</span>\r\n                  </div>\r\n                  <div className=\"text-sm text-gray-600\">Slight price reduction recommended</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PriceBenchmarking;","import React, { useState } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\r\nimport { Shield, FileText, AlertTriangle, CheckCircle, Download, Calendar, BarChart3 } from 'lucide-react';\r\n\r\nconst ComplianceReports: React.FC = () => {\r\n  const mockComplianceData = [\r\n    { type: 'PESO', certificate: 'PESO-2024-001', status: 'valid', expiry: '2025-01-15', authority: 'PESO Delhi' },\r\n    { type: 'GST', certificate: 'GST-REG-001', status: 'valid', expiry: '2025-03-31', authority: 'GST Department' },\r\n    { type: 'Environmental', certificate: 'ENV-2024-001', status: 'pending_renewal', expiry: '2024-12-01', authority: 'Pollution Control Board' },\r\n    { type: 'Safety', certificate: 'SAFETY-001', status: 'valid', expiry: '2025-06-15', authority: 'Factory Inspector' }\r\n  ];\r\n\r\n  const getStatusColor = (status: string) => {\r\n    const colors = {\r\n      valid: 'bg-green-100 text-green-800',\r\n      pending_renewal: 'bg-yellow-100 text-yellow-800',\r\n      expired: 'bg-red-100 text-red-800',\r\n      suspended: 'bg-gray-100 text-gray-800'\r\n    };\r\n    return colors[status as keyof typeof colors] || 'bg-gray-100 text-gray-800';\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold\">Compliance & Reports</h1>\r\n          <p className=\"text-gray-600\">PESO compliance, GST reports, and regulatory management</p>\r\n        </div>\r\n        <Button>\r\n          <Download className=\"w-4 h-4 mr-2\" />\r\n          Generate Report\r\n        </Button>\r\n      </div>\r\n\r\n      {/* Compliance Overview */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\r\n        <Card><CardContent className=\"p-6\">\r\n          <div className=\"flex items-center\">\r\n            <Shield className=\"w-8 h-8 text-green-600\" />\r\n            <div className=\"ml-4\">\r\n              <p className=\"text-sm font-medium text-gray-600\">PESO Valid</p>\r\n              <p className=\"text-2xl font-bold\">3</p>\r\n            </div>\r\n          </div>\r\n        </CardContent></Card>\r\n        <Card><CardContent className=\"p-6\">\r\n          <div className=\"flex items-center\">\r\n            <AlertTriangle className=\"w-8 h-8 text-yellow-600\" />\r\n            <div className=\"ml-4\">\r\n              <p className=\"text-sm font-medium text-gray-600\">Expiring Soon</p>\r\n              <p className=\"text-2xl font-bold\">1</p>\r\n            </div>\r\n          </div>\r\n        </CardContent></Card>\r\n        <Card><CardContent className=\"p-6\">\r\n          <div className=\"flex items-center\">\r\n            <FileText className=\"w-8 h-8 text-blue-600\" />\r\n            <div className=\"ml-4\">\r\n              <p className=\"text-sm font-medium text-gray-600\">GST Returns</p>\r\n              <p className=\"text-2xl font-bold\">12</p>\r\n            </div>\r\n          </div>\r\n        </CardContent></Card>\r\n        <Card><CardContent className=\"p-6\">\r\n          <div className=\"flex items-center\">\r\n            <BarChart3 className=\"w-8 h-8 text-purple-600\" />\r\n            <div className=\"ml-4\">\r\n              <p className=\"text-sm font-medium text-gray-600\">Compliance %</p>\r\n              <p className=\"text-2xl font-bold\">98%</p>\r\n            </div>\r\n          </div>\r\n        </CardContent></Card>\r\n      </div>\r\n\r\n      <Tabs defaultValue=\"peso\" className=\"w-full\">\r\n        <TabsList>\r\n          <TabsTrigger value=\"peso\">PESO Compliance</TabsTrigger>\r\n          <TabsTrigger value=\"gst\">GST Reports</TabsTrigger>\r\n          <TabsTrigger value=\"environmental\">Environmental</TabsTrigger>\r\n          <TabsTrigger value=\"safety\">Safety</TabsTrigger>\r\n        </TabsList>\r\n\r\n        <TabsContent value=\"peso\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center\">\r\n                <Shield className=\"w-5 h-5 mr-2\" />\r\n                PESO Certificates\r\n              </CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-3\">\r\n                {mockComplianceData.filter(item => item.type === 'PESO').map((cert) => (\r\n                  <div key={cert.certificate} className=\"flex items-center justify-between p-4 border rounded\">\r\n                    <div className=\"space-y-1\">\r\n                      <div className=\"font-medium\">{cert.certificate}</div>\r\n                      <div className=\"text-sm text-gray-600\">Issued by: {cert.authority}</div>\r\n                      <div className=\"text-sm text-gray-500\">Expires: {cert.expiry}</div>\r\n                    </div>\r\n                    <div className=\"flex items-center space-x-3\">\r\n                      <Badge className={getStatusColor(cert.status)}>{cert.status}</Badge>\r\n                      <Button variant=\"outline\" size=\"sm\">\r\n                        <Download className=\"w-4 h-4 mr-1\" />\r\n                        Download\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>PESO Inspection Schedule</CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-3\">\r\n                <div className=\"flex items-center justify-between p-3 border rounded\">\r\n                  <div>\r\n                    <div className=\"font-medium\">Plant A - Tank Inspection</div>\r\n                    <div className=\"text-sm text-gray-600\">Next inspection due: 15 Nov 2024</div>\r\n                  </div>\r\n                  <Badge className=\"bg-blue-100 text-blue-800\">Scheduled</Badge>\r\n                </div>\r\n                <div className=\"flex items-center justify-between p-3 border rounded\">\r\n                  <div>\r\n                    <div className=\"font-medium\">Plant B - Safety Audit</div>\r\n                    <div className=\"text-sm text-gray-600\">Next inspection due: 30 Dec 2024</div>\r\n                  </div>\r\n                  <Badge className=\"bg-green-100 text-green-800\">Compliant</Badge>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"gst\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>GST Returns & Reports</CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-3\">\r\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                  <div className=\"p-4 border rounded\">\r\n                    <div className=\"text-center\">\r\n                      <div className=\"text-2xl font-bold\">₹2.4M</div>\r\n                      <div className=\"text-sm text-gray-600\">Total GST Collected</div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"p-4 border rounded\">\r\n                    <div className=\"text-center\">\r\n                      <div className=\"text-2xl font-bold\">₹450K</div>\r\n                      <div className=\"text-sm text-gray-600\">GST Paid</div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"p-4 border rounded\">\r\n                    <div className=\"text-center\">\r\n                      <div className=\"text-2xl font-bold\">12</div>\r\n                      <div className=\"text-sm text-gray-600\">Returns Filed</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <div className=\"flex items-center justify-between p-3 border rounded\">\r\n                    <div>\r\n                      <div className=\"font-medium\">GSTR-1 - September 2024</div>\r\n                      <div className=\"text-sm text-gray-600\">Filed on: 10 Oct 2024</div>\r\n                    </div>\r\n                    <Badge className=\"bg-green-100 text-green-800\">Filed</Badge>\r\n                  </div>\r\n                  <div className=\"flex items-center justify-between p-3 border rounded\">\r\n                    <div>\r\n                      <div className=\"font-medium\">GSTR-3B - September 2024</div>\r\n                      <div className=\"text-sm text-gray-600\">Due: 20 Oct 2024</div>\r\n                    </div>\r\n                    <Badge className=\"bg-yellow-100 text-yellow-800\">Pending</Badge>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"environmental\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Environmental Compliance</CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"text-center py-8 text-gray-500\">\r\n                Environmental compliance reports and certificates will be displayed here\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"safety\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Safety Compliance</CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"text-center py-8 text-gray-500\">\r\n                Safety compliance reports and training records will be displayed here\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ComplianceReports;","import React from 'react';\r\nimport { Routes, Route, useNavigate, useLocation } from 'react-router-dom';\r\nimport BaseLayout from '@/components/layout/BaseLayout';\r\nimport SalesDashboard from './pages/SalesDashboard';\r\nimport CustomerManagement from './pages/CustomerManagement';\r\nimport ContractManagement from './pages/ContractManagement';\r\nimport InventoryManagement from './pages/InventoryManagement';\r\nimport OrderManagement from './pages/OrderManagement';\r\nimport VoiceInvoicing from './pages/VoiceInvoicing';\r\nimport PaymentTracking from './pages/PaymentTracking';\r\nimport DeliveryScheduling from './pages/DeliveryScheduling';\r\nimport PriceBenchmarking from './pages/PriceBenchmarking';\r\nimport ComplianceReports from './pages/ComplianceReports';\r\nimport {\r\n  LayoutDashboard,\r\n  Users,\r\n  FileText,\r\n  Package,\r\n  ShoppingCart,\r\n  Mic,\r\n  CreditCard,\r\n  Truck,\r\n  TrendingUp,\r\n  Shield\r\n} from 'lucide-react';\r\n\r\nconst SalesModule: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  const navigationItems = [\r\n    {\r\n      id: 'dashboard',\r\n      label: 'Sales Dashboard',\r\n      icon: <LayoutDashboard className=\"w-5 h-5\" />,\r\n      onClick: () => navigate('/sales'),\r\n      isActive: location.pathname === '/sales'\r\n    },\r\n    {\r\n      id: 'customers',\r\n      label: 'Customer Management',\r\n      icon: <Users className=\"w-5 h-5\" />,\r\n      onClick: () => navigate('/sales/customers'),\r\n      isActive: location.pathname === '/sales/customers'\r\n    },\r\n    {\r\n      id: 'contracts',\r\n      label: 'Contract Management',\r\n      icon: <FileText className=\"w-5 h-5\" />,\r\n      onClick: () => navigate('/sales/contracts'),\r\n      isActive: location.pathname === '/sales/contracts'\r\n    },\r\n    {\r\n      id: 'inventory',\r\n      label: 'Inventory Management',\r\n      icon: <Package className=\"w-5 h-5\" />,\r\n      onClick: () => navigate('/sales/inventory'),\r\n      isActive: location.pathname === '/sales/inventory'\r\n    },\r\n    {\r\n      id: 'orders',\r\n      label: 'Order & Invoice',\r\n      icon: <ShoppingCart className=\"w-5 h-5\" />,\r\n      onClick: () => navigate('/sales/orders'),\r\n      isActive: location.pathname === '/sales/orders'\r\n    },\r\n    {\r\n      id: 'voice-invoice',\r\n      label: 'Voice Invoicing',\r\n      icon: <Mic className=\"w-5 h-5\" />,\r\n      onClick: () => navigate('/sales/voice-invoice'),\r\n      isActive: location.pathname === '/sales/voice-invoice'\r\n    },\r\n    {\r\n      id: 'payments',\r\n      label: 'Payment Tracking',\r\n      icon: <CreditCard className=\"w-5 h-5\" />,\r\n      onClick: () => navigate('/sales/payments'),\r\n      isActive: location.pathname === '/sales/payments'\r\n    },\r\n    {\r\n      id: 'delivery',\r\n      label: 'Delivery Scheduling',\r\n      icon: <Truck className=\"w-5 h-5\" />,\r\n      onClick: () => navigate('/sales/delivery'),\r\n      isActive: location.pathname === '/sales/delivery'\r\n    },\r\n    {\r\n      id: 'pricing',\r\n      label: 'Price Benchmarking',\r\n      icon: <TrendingUp className=\"w-5 h-5\" />,\r\n      onClick: () => navigate('/sales/pricing'),\r\n      isActive: location.pathname === '/sales/pricing'\r\n    },\r\n    {\r\n      id: 'compliance',\r\n      label: 'Compliance & Reports',\r\n      icon: <Shield className=\"w-5 h-5\" />,\r\n      onClick: () => navigate('/sales/compliance'),\r\n      isActive: location.pathname === '/sales/compliance'\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <BaseLayout\r\n      moduleName=\"UrjaVyapar Sales\"\r\n      moduleSubtitle=\"Comprehensive Sales Management System\"\r\n      navigationItems={navigationItems}\r\n      userInfo={{\r\n        name: \"Sales Manager\",\r\n        role: \"Sales Operations\"\r\n      }}\r\n    >\r\n      <Routes>\r\n        <Route path=\"/\" element={<SalesDashboard />} />\r\n        <Route path=\"/customers\" element={<CustomerManagement />} />\r\n        <Route path=\"/contracts\" element={<ContractManagement />} />\r\n        <Route path=\"/inventory\" element={<InventoryManagement />} />\r\n        <Route path=\"/orders\" element={<OrderManagement />} />\r\n        <Route path=\"/voice-invoice\" element={<VoiceInvoicing />} />\r\n        <Route path=\"/payments\" element={<PaymentTracking />} />\r\n        <Route path=\"/delivery\" element={<DeliveryScheduling />} />\r\n        <Route path=\"/pricing\" element={<PriceBenchmarking />} />\r\n        <Route path=\"/compliance\" element={<ComplianceReports />} />\r\n      </Routes>\r\n    </BaseLayout>\r\n  );\r\n};\r\n\r\nexport default SalesModule;","/**\r\n * ShuddhiDoot Purification Module Container\r\n * SAUB-FE-003: Complete Purification Enhancement with Modern UI\r\n */\r\n\r\nimport React, { Suspense } from 'react';\r\nimport { Routes, Route, useNavigate, useLocation } from 'react-router-dom';\r\nimport BaseLayout from '@/components/layout/BaseLayout';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Alert, AlertDescription } from '@/components/ui/alert';\r\nimport {\r\n  BarChart3,\r\n  RotateCcw,\r\n  CheckCircle,\r\n  Wrench,\r\n  Package,\r\n  Droplets,\r\n  Activity,\r\n  Gauge,\r\n  Factory,\r\n  AlertTriangle,\r\n  TrendingUp,\r\n  Users,\r\n  Settings\r\n} from 'lucide-react';\r\n\r\n// Lazy loaded page components for better performance\r\nconst Dashboard = React.lazy(() => import('./pages/Dashboard/Dashboard'));\r\n\r\nconst CycleManagement = React.lazy(() =>\r\n  import('./pages/CycleManagement/CycleManagement').then(module => ({\r\n    default: module.CycleManagement\r\n  }))\r\n);\r\n\r\nconst QualityControl = React.lazy(() =>\r\n  import('./pages/QualityControl/QualityControl').then(module => ({\r\n    default: module.QualityControl\r\n  }))\r\n);\r\n\r\nconst MaintenanceManagement = React.lazy(() =>\r\n  import('./pages/MaintenanceManagement/MaintenanceManagement').then(module => ({\r\n    default: module.MaintenanceManagement\r\n  }))\r\n);\r\n\r\nconst InventoryTransfer = React.lazy(() =>\r\n  import('./pages/InventoryTransfer/InventoryTransfer').then(module => ({\r\n    default: module.InventoryTransferPage\r\n  }))\r\n);\r\n\r\nconst SlurryManagement = React.lazy(() =>\r\n  import('./pages/SlurryManagement/SlurryManagement').then(module => ({\r\n    default: module.SlurryManagement\r\n  }))\r\n);\r\n\r\nconst RealTimeMonitoring = React.lazy(() =>\r\n  import('./pages/RealTimeMonitoring/RealTimeMonitoring').then(module => ({\r\n    default: module.RealTimeMonitoring\r\n  }))\r\n);\r\n\r\n// Enhanced loading component with modern design\r\nconst PageLoader: React.FC = () => (\r\n  <div className=\"flex items-center justify-center min-h-[400px]\">\r\n    <Card className=\"w-full max-w-md\">\r\n      <CardContent className=\"flex flex-col items-center justify-center p-8\">\r\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mb-4\"></div>\r\n        <CardTitle className=\"text-lg font-medium text-gray-600 mb-2\">\r\n          Loading ShuddhiDoot Module...\r\n        </CardTitle>\r\n        <CardDescription className=\"text-center text-gray-500\">\r\n          Initializing purification systems and real-time data feeds\r\n        </CardDescription>\r\n      </CardContent>\r\n    </Card>\r\n  </div>\r\n);\r\n\r\n// Quick metrics display for overview\r\nconst QuickMetrics: React.FC = () => (\r\n  <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\r\n    <Card>\r\n      <CardContent className=\"p-4\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <div>\r\n            <p className=\"text-sm font-medium text-gray-600\">CH₄ Purity</p>\r\n            <p className=\"text-2xl font-bold text-green-600\">96.5%</p>\r\n          </div>\r\n          <Gauge className=\"h-8 w-8 text-green-600\" />\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n\r\n    <Card>\r\n      <CardContent className=\"p-4\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <div>\r\n            <p className=\"text-sm font-medium text-gray-600\">Active Cycles</p>\r\n            <p className=\"text-2xl font-bold text-blue-600\">3</p>\r\n          </div>\r\n          <RotateCcw className=\"h-8 w-8 text-blue-600\" />\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n\r\n    <Card>\r\n      <CardContent className=\"p-4\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <div>\r\n            <p className=\"text-sm font-medium text-gray-600\">System Status</p>\r\n            <Badge variant=\"secondary\" className=\"bg-green-100 text-green-800\">\r\n              Operational\r\n            </Badge>\r\n          </div>\r\n          <CheckCircle className=\"h-8 w-8 text-green-600\" />\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n\r\n    <Card>\r\n      <CardContent className=\"p-4\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <div>\r\n            <p className=\"text-sm font-medium text-gray-600\">Efficiency</p>\r\n            <p className=\"text-2xl font-bold text-purple-600\">94.2%</p>\r\n          </div>\r\n          <TrendingUp className=\"h-8 w-8 text-purple-600\" />\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  </div>\r\n);\r\n\r\nconst PurificationModule: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  // Base path for the purification module\r\n  const basePath = '/purification';\r\n\r\n  const navigationItems = [\r\n    {\r\n      id: 'dashboard',\r\n      label: 'Dashboard',\r\n      icon: <BarChart3 className=\"w-5 h-5\" />,\r\n      onClick: () => navigate(`${basePath}`),\r\n      isActive: location.pathname === basePath || location.pathname === `${basePath}/`,\r\n      badge: undefined\r\n    },\r\n    {\r\n      id: 'cycles',\r\n      label: 'Cycle Management',\r\n      icon: <RotateCcw className=\"w-5 h-5\" />,\r\n      onClick: () => navigate(`${basePath}/cycles`),\r\n      isActive: location.pathname === `${basePath}/cycles`,\r\n      badge: '3' // Active cycles\r\n    },\r\n    {\r\n      id: 'quality',\r\n      label: 'Quality Control',\r\n      icon: <CheckCircle className=\"w-5 h-5\" />,\r\n      onClick: () => navigate(`${basePath}/quality`),\r\n      isActive: location.pathname === `${basePath}/quality`,\r\n      badge: undefined\r\n    },\r\n    {\r\n      id: 'maintenance',\r\n      label: 'Maintenance',\r\n      icon: <Wrench className=\"w-5 h-5\" />,\r\n      onClick: () => navigate(`${basePath}/maintenance`),\r\n      isActive: location.pathname === `${basePath}/maintenance`,\r\n      badge: '2' // Pending maintenance\r\n    },\r\n    {\r\n      id: 'inventory',\r\n      label: 'Inventory Transfer',\r\n      icon: <Package className=\"w-5 h-5\" />,\r\n      onClick: () => navigate(`${basePath}/inventory`),\r\n      isActive: location.pathname === `${basePath}/inventory`,\r\n      badge: '5' // Pending transfers\r\n    },\r\n    {\r\n      id: 'slurry',\r\n      label: 'Slurry Management',\r\n      icon: <Droplets className=\"w-5 h-5\" />,\r\n      onClick: () => navigate(`${basePath}/slurry`),\r\n      isActive: location.pathname === `${basePath}/slurry`,\r\n      badge: undefined\r\n    },\r\n    {\r\n      id: 'monitoring',\r\n      label: 'Real-time Monitoring',\r\n      icon: <Activity className=\"w-5 h-5\" />,\r\n      onClick: () => navigate(`${basePath}/monitoring`),\r\n      isActive: location.pathname === `${basePath}/monitoring`,\r\n      badge: undefined\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <BaseLayout\r\n      moduleName=\"ShuddhiDoot\"\r\n      moduleSubtitle=\"Biogas Purification & Quality Management\"\r\n      navigationItems={navigationItems}\r\n      userInfo={{\r\n        name: \"Purification Manager\",\r\n        role: \"Plant Operations Head\"\r\n      }}\r\n    >\r\n      <div className=\"space-y-6\">\r\n        {/* Main content area */}\r\n        <Suspense fallback={<PageLoader />}>\r\n          <Routes>\r\n            {/* Default route redirects to dashboard */}\r\n            <Route path=\"/\" element={<Dashboard />} />\r\n            <Route path=\"/cycles\" element={<CycleManagement />} />\r\n            <Route path=\"/quality\" element={<QualityControl />} />\r\n            <Route path=\"/maintenance\" element={<MaintenanceManagement />} />\r\n            <Route path=\"/inventory\" element={<InventoryTransfer />} />\r\n            <Route path=\"/slurry\" element={<SlurryManagement />} />\r\n            <Route path=\"/monitoring\" element={<RealTimeMonitoring />} />\r\n\r\n            {/* Fallback route */}\r\n            <Route path=\"*\" element={<Dashboard />} />\r\n          </Routes>\r\n        </Suspense>\r\n      </div>\r\n    </BaseLayout>\r\n  );\r\n};\r\n\r\nexport default PurificationModule;","import React from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Progress } from '@/components/ui/progress';\r\nimport { Alert, AlertDescription } from '@/components/ui/alert';\r\nimport {\r\n  TrendingUp,\r\n  TrendingDown,\r\n  DollarSign,\r\n  Target,\r\n  AlertTriangle,\r\n  CheckCircle,\r\n  Activity,\r\n  RefreshCw,\r\n  Volume2,\r\n  ArrowUpRight,\r\n  ArrowDownRight,\r\n  Minus\r\n} from 'lucide-react';\r\nimport { useExecutiveAnalytics } from '../../contexts/ExecutiveAnalyticsContext';\r\n\r\nconst ExecutiveSummary: React.FC = () => {\r\n  const {\r\n    kpis,\r\n    insights,\r\n    overallPerformanceScore,\r\n    criticalAlerts,\r\n    topOpportunities,\r\n    refreshing,\r\n    refreshData\r\n  } = useExecutiveAnalytics();\r\n\r\n  const getKPIIcon = (category: string) => {\r\n    switch (category) {\r\n      case 'financial':\r\n        return <DollarSign className=\"h-5 w-5\" />;\r\n      case 'operational':\r\n        return <Activity className=\"h-5 w-5\" />;\r\n      case 'environmental':\r\n        return <Target className=\"h-5 w-5\" />;\r\n      case 'strategic':\r\n        return <TrendingUp className=\"h-5 w-5\" />;\r\n      default:\r\n        return <Activity className=\"h-5 w-5\" />;\r\n    }\r\n  };\r\n\r\n  const getTrendIcon = (trend: string, change: number) => {\r\n    if (trend === 'up' || change > 0) {\r\n      return <ArrowUpRight className=\"h-4 w-4 text-green-600\" />;\r\n    } else if (trend === 'down' || change < 0) {\r\n      return <ArrowDownRight className=\"h-4 w-4 text-red-600\" />;\r\n    }\r\n    return <Minus className=\"h-4 w-4 text-gray-600\" />;\r\n  };\r\n\r\n  const getPerformanceColor = (score: number) => {\r\n    if (score >= 90) return 'text-green-600';\r\n    if (score >= 75) return 'text-yellow-600';\r\n    return 'text-red-600';\r\n  };\r\n\r\n  const getConfidenceColor = (confidence: number) => {\r\n    if (confidence >= 0.8) return 'bg-green-100 text-green-800';\r\n    if (confidence >= 0.6) return 'bg-yellow-100 text-yellow-800';\r\n    return 'bg-red-100 text-red-800';\r\n  };\r\n\r\n  const formatCurrency = (value: number): string => {\r\n    if (value >= 10000000) {\r\n      return `₹${(value / 10000000).toFixed(1)}Cr`;\r\n    } else if (value >= 100000) {\r\n      return `₹${(value / 100000).toFixed(1)}L`;\r\n    }\r\n    return `₹${value.toLocaleString()}`;\r\n  };\r\n\r\n  const formatValue = (value: number, unit: string): string => {\r\n    if (unit === '₹') {\r\n      return formatCurrency(value);\r\n    }\r\n    return `${value.toLocaleString()} ${unit}`;\r\n  };\r\n\r\n  const speakSummary = () => {\r\n    const summaryText = `Executive Summary: Overall performance score is ${overallPerformanceScore}%. Revenue is ${formatCurrency(kpis.find(k => k.id === 'revenue')?.value || 0)} with ${kpis.find(k => k.id === 'revenue')?.change || 0}% growth. ${criticalAlerts.length} critical alerts require immediate attention.`;\r\n\r\n    if ('speechSynthesis' in window) {\r\n      const utterance = new SpeechSynthesisUtterance(summaryText);\r\n      speechSynthesis.speak(utterance);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header with Overall Performance */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h2 className=\"text-2xl font-bold text-gray-900\">Executive Summary</h2>\r\n          <p className=\"text-gray-600\">Real-time business intelligence and key performance indicators</p>\r\n        </div>\r\n        <div className=\"flex items-center gap-4\">\r\n          <div className=\"text-center\">\r\n            <div className={`text-3xl font-bold ${getPerformanceColor(overallPerformanceScore)}`}>\r\n              {overallPerformanceScore}%\r\n            </div>\r\n            <div className=\"text-sm text-gray-500\">Overall Performance</div>\r\n          </div>\r\n          <Button\r\n            onClick={speakSummary}\r\n            variant=\"outline\"\r\n            size=\"sm\"\r\n            className=\"hidden sm:flex\"\r\n          >\r\n            <Volume2 className=\"h-4 w-4 mr-2\" />\r\n            Listen\r\n          </Button>\r\n          <Button\r\n            onClick={refreshData}\r\n            variant=\"outline\"\r\n            size=\"sm\"\r\n            disabled={refreshing}\r\n            className=\"flex items-center gap-2\"\r\n          >\r\n            <RefreshCw className={`h-4 w-4 ${refreshing ? 'animate-spin' : ''}`} />\r\n            Refresh\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Critical Alerts */}\r\n      {criticalAlerts.length > 0 && (\r\n        <Alert className=\"border-red-200 bg-red-50\">\r\n          <AlertTriangle className=\"h-4 w-4 text-red-600\" />\r\n          <AlertDescription className=\"text-red-800\">\r\n            <strong>{criticalAlerts.length} Critical Alert{criticalAlerts.length > 1 ? 's' : ''}</strong>\r\n            <div className=\"mt-2 space-y-1\">\r\n              {criticalAlerts.slice(0, 2).map((alert) => (\r\n                <div key={alert.id} className=\"text-sm\">\r\n                  • {alert.title}: {alert.description}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </AlertDescription>\r\n        </Alert>\r\n      )}\r\n\r\n      {/* Top Opportunities */}\r\n      {topOpportunities.length > 0 && (\r\n        <Alert className=\"border-green-200 bg-green-50\">\r\n          <CheckCircle className=\"h-4 w-4 text-green-600\" />\r\n          <AlertDescription className=\"text-green-800\">\r\n            <strong>Top Growth Opportunity</strong>\r\n            <div className=\"mt-2 text-sm\">\r\n              {topOpportunities[0].title}: {topOpportunities[0].description}\r\n              {topOpportunities[0].estimatedValue && (\r\n                <span className=\"font-semibold ml-2\">\r\n                  Potential Value: {formatCurrency(topOpportunities[0].estimatedValue)}\r\n                </span>\r\n              )}\r\n            </div>\r\n          </AlertDescription>\r\n        </Alert>\r\n      )}\r\n\r\n      {/* KPI Grid */}\r\n      <div className=\"grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-3\">\r\n        {kpis.map((kpi) => (\r\n          <Card key={kpi.id} className=\"hover:shadow-lg transition-shadow duration-200\">\r\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n              <CardTitle className=\"text-sm font-medium text-gray-600\">\r\n                {kpi.name}\r\n              </CardTitle>\r\n              <div className={`p-2 rounded-lg ${\r\n                kpi.category === 'financial' ? 'bg-blue-100 text-blue-600' :\r\n                kpi.category === 'operational' ? 'bg-green-100 text-green-600' :\r\n                kpi.category === 'environmental' ? 'bg-purple-100 text-purple-600' :\r\n                'bg-orange-100 text-orange-600'\r\n              }`}>\r\n                {getKPIIcon(kpi.category)}\r\n              </div>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"flex items-baseline justify-between\">\r\n                <div className=\"text-2xl font-bold text-gray-900\">\r\n                  {formatValue(kpi.value, kpi.unit)}\r\n                </div>\r\n                <div className=\"flex items-center gap-1\">\r\n                  {getTrendIcon(kpi.trend, kpi.change)}\r\n                  <span className={`text-sm font-medium ${\r\n                    kpi.change > 0 ? 'text-green-600' :\r\n                    kpi.change < 0 ? 'text-red-600' :\r\n                    'text-gray-600'\r\n                  }`}>\r\n                    {kpi.change > 0 ? '+' : ''}{kpi.change.toFixed(1)}%\r\n                  </span>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"mt-4 space-y-2\">\r\n                <div className=\"flex justify-between text-sm text-gray-600\">\r\n                  <span>Progress to Target</span>\r\n                  <span>{Math.round((kpi.value / kpi.target) * 100)}%</span>\r\n                </div>\r\n                <Progress\r\n                  value={(kpi.value / kpi.target) * 100}\r\n                  className=\"h-2\"\r\n                />\r\n                <div className=\"flex justify-between items-center\">\r\n                  <span className=\"text-xs text-gray-500\">\r\n                    Target: {formatValue(kpi.target, kpi.unit)}\r\n                  </span>\r\n                  <Badge\r\n                    variant=\"outline\"\r\n                    className={getConfidenceColor(kpi.confidence)}\r\n                  >\r\n                    {Math.round(kpi.confidence * 100)}% Confidence\r\n                  </Badge>\r\n                </div>\r\n              </div>\r\n\r\n              {kpi.priority === 'high' && (\r\n                <div className=\"mt-2\">\r\n                  <Badge variant=\"destructive\" className=\"text-xs\">\r\n                    High Priority\r\n                  </Badge>\r\n                </div>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Quick Insights */}\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle className=\"flex items-center gap-2\">\r\n            <TrendingUp className=\"h-5 w-5\" />\r\n            Quick Insights\r\n          </CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"grid grid-cols-1 gap-4 md:grid-cols-2 lg:grid-cols-3\">\r\n            {insights.slice(0, 3).map((insight) => (\r\n              <div\r\n                key={insight.id}\r\n                className={`p-4 rounded-lg border-l-4 ${\r\n                  insight.impact === 'positive' ? 'border-green-500 bg-green-50' :\r\n                  insight.impact === 'negative' ? 'border-red-500 bg-red-50' :\r\n                  'border-gray-500 bg-gray-50'\r\n                }`}\r\n              >\r\n                <div className=\"flex items-start justify-between\">\r\n                  <h4 className=\"font-medium text-gray-900\">{insight.title}</h4>\r\n                  <Badge\r\n                    variant=\"outline\"\r\n                    className={getConfidenceColor(insight.confidence)}\r\n                  >\r\n                    {Math.round(insight.confidence * 100)}%\r\n                  </Badge>\r\n                </div>\r\n                <p className=\"mt-2 text-sm text-gray-600\">{insight.description}</p>\r\n                <div className=\"mt-3 flex items-center justify-between\">\r\n                  <span className=\"text-xs text-gray-500\">{insight.timeline}</span>\r\n                  {insight.estimatedValue && (\r\n                    <span className={`text-sm font-medium ${\r\n                      insight.impact === 'positive' ? 'text-green-600' : 'text-red-600'\r\n                    }`}>\r\n                      {insight.impact === 'positive' ? '+' : ''}{formatCurrency(insight.estimatedValue)}\r\n                    </span>\r\n                  )}\r\n                </div>\r\n                {insight.actionRequired && (\r\n                  <Badge variant=\"outline\" className=\"mt-2 text-xs bg-yellow-100 text-yellow-800\">\r\n                    Action Required\r\n                  </Badge>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Executive Actions */}\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Recommended Actions</CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"space-y-3\">\r\n            {insights\r\n              .filter(insight => insight.actionRequired)\r\n              .slice(0, 3)\r\n              .map((insight) => (\r\n                <div key={insight.id} className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\r\n                  <div className=\"flex-1\">\r\n                    <h4 className=\"font-medium text-gray-900\">{insight.title}</h4>\r\n                    <p className=\"text-sm text-gray-600 mt-1\">{insight.timeline}</p>\r\n                  </div>\r\n                  <div className=\"flex items-center gap-2\">\r\n                    {insight.estimatedValue && (\r\n                      <span className={`text-sm font-medium ${\r\n                        insight.impact === 'positive' ? 'text-green-600' : 'text-red-600'\r\n                      }`}>\r\n                        {insight.impact === 'positive' ? '+' : ''}{formatCurrency(insight.estimatedValue)}\r\n                      </span>\r\n                    )}\r\n                    <Button size=\"sm\" variant=\"outline\">\r\n                      Review\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExecutiveSummary;","import React, { useState, useEffect, useRef } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Alert, AlertDescription } from '@/components/ui/alert';\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\r\nimport {\r\n  Mic,\r\n  MicOff,\r\n  Volume2,\r\n  VolumeX,\r\n  Play,\r\n  Pause,\r\n  RotateCcw,\r\n  MessageSquare,\r\n  Brain,\r\n  Languages,\r\n  History,\r\n  TrendingUp,\r\n  DollarSign,\r\n  Leaf,\r\n  Users,\r\n  Shield,\r\n  Lock,\r\n  Eye,\r\n  EyeOff,\r\n  Clock,\r\n  AlertTriangle\r\n} from 'lucide-react';\r\nimport { useExecutiveAnalytics } from '../../contexts/ExecutiveAnalyticsContext';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\n\r\ninterface VoiceSession {\r\n  id: string;\r\n  startTime: Date;\r\n  endTime?: Date;\r\n  queries: number;\r\n  language: 'en' | 'hi';\r\n  accuracy: number;\r\n  userId: string;\r\n  consentGiven: boolean;\r\n  dataRetention: 'session' | 'encrypted' | 'permanent';\r\n  privacyLevel: 'high' | 'medium' | 'standard';\r\n  encryptionEnabled: boolean;\r\n}\r\n\r\ninterface VoicePrivacySettings {\r\n  consentRequired: boolean;\r\n  sessionTimeout: number; // in minutes\r\n  dataRetention: 'session' | 'encrypted' | 'permanent';\r\n  encryptionEnabled: boolean;\r\n  anonymizeTranscripts: boolean;\r\n  blockSensitiveData: boolean;\r\n}\r\n\r\ninterface VoiceCommand {\r\n  command: string;\r\n  description: string;\r\n  examples: string[];\r\n  category: 'kpi' | 'financial' | 'strategic' | 'environmental';\r\n}\r\n\r\nconst VoiceAnalytics: React.FC = () => {\r\n  const { addVoiceQuery, kpis, carbonMetrics, competitiveData } = useExecutiveAnalytics();\r\n  const { user, hasPermission, isExecutive, getAccessLevel } = useAuth();\r\n\r\n  // Voice states\r\n  const [isListening, setIsListening] = useState(false);\r\n  const [isSpeaking, setIsSpeaking] = useState(false);\r\n  const [transcript, setTranscript] = useState('');\r\n  const [language, setLanguage] = useState<'en' | 'hi'>('en');\r\n  const [confidence, setConfidence] = useState(0);\r\n  const [currentSession, setCurrentSession] = useState<VoiceSession | null>(null);\r\n  const [queryHistory, setQueryHistory] = useState<any[]>([]);\r\n\r\n  // Privacy and security states\r\n  const [consentGiven, setConsentGiven] = useState(false);\r\n  const [showConsentDialog, setShowConsentDialog] = useState(false);\r\n  const [privacySettings, setPrivacySettings] = useState<VoicePrivacySettings>({\r\n    consentRequired: true,\r\n    sessionTimeout: isExecutive() ? 30 : 60, // Shorter timeout for executives\r\n    dataRetention: isExecutive() ? 'encrypted' : 'session',\r\n    encryptionEnabled: true,\r\n    anonymizeTranscripts: !isExecutive(), // Don't anonymize for executives who need full context\r\n    blockSensitiveData: true\r\n  });\r\n  const [sessionTimeRemaining, setSessionTimeRemaining] = useState<number>(0);\r\n  const [encryptedData, setEncryptedData] = useState<string>('');\r\n  const [privacyMode, setPrivacyMode] = useState(false);\r\n\r\n  // Refs\r\n  const recognitionRef = useRef<SpeechRecognition | null>(null);\r\n  const synthRef = useRef<SpeechSynthesis | null>(null);\r\n  const sessionTimeoutRef = useRef<NodeJS.Timeout | null>(null);\r\n\r\n  // Privacy and encryption utilities\r\n  const simpleEncrypt = (text: string): string => {\r\n    // Simple encryption for demo - in production, use proper encryption\r\n    return btoa(text.split('').map(char => String.fromCharCode(char.charCodeAt(0) + 1)).join(''));\r\n  };\r\n\r\n  const simpleDecrypt = (encryptedText: string): string => {\r\n    try {\r\n      return atob(encryptedText).split('').map(char => String.fromCharCode(char.charCodeAt(0) - 1)).join('');\r\n    } catch {\r\n      return encryptedText;\r\n    }\r\n  };\r\n\r\n  const sanitizeSensitiveData = (text: string): string => {\r\n    if (!privacySettings.blockSensitiveData) return text;\r\n\r\n    // Remove potential sensitive information patterns\r\n    return text\r\n      .replace(/\\b\\d{12,16}\\b/g, '[CARD-REDACTED]') // Credit card numbers\r\n      .replace(/\\b\\d{10,15}\\b/g, '[PHONE-REDACTED]') // Phone numbers\r\n      .replace(/\\b[A-Z]{2}\\d{2}[A-Z0-9]{4}\\d{7}([A-Z0-9]?){0,16}\\b/g, '[IBAN-REDACTED]') // IBAN\r\n      .replace(/\\b\\d{4}-\\d{4}-\\d{4}-\\d{4}\\b/g, '[ACCOUNT-REDACTED]') // Account numbers\r\n      .replace(/password|pin|secret|confidential/gi, '[SENSITIVE-REDACTED]');\r\n  };\r\n\r\n  const anonymizeTranscript = (text: string): string => {\r\n    if (!privacySettings.anonymizeTranscripts) return text;\r\n\r\n    // Replace names and personal identifiers\r\n    return text\r\n      .replace(/\\b[A-Z][a-z]+\\s+[A-Z][a-z]+\\b/g, '[NAME-REDACTED]')\r\n      .replace(/\\b[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}\\b/g, '[EMAIL-REDACTED]');\r\n  };\r\n\r\n  // Voice command categories\r\n  const voiceCommands: VoiceCommand[] = [\r\n    {\r\n      command: 'Revenue Summary',\r\n      description: 'Get current revenue metrics and growth trends',\r\n      examples: [\r\n        'What is our monthly revenue?',\r\n        'मासिक आय कितनी है?',\r\n        'Show me revenue growth',\r\n        'Revenue trends this quarter'\r\n      ],\r\n      category: 'financial'\r\n    },\r\n    {\r\n      command: 'Production Analytics',\r\n      description: 'Biogas production and efficiency metrics',\r\n      examples: [\r\n        'How much biogas did we produce today?',\r\n        'आज कितना बायोगैस उत्पादन हुआ?',\r\n        'Show production efficiency',\r\n        'Which plants are performing best?'\r\n      ],\r\n      category: 'kpi'\r\n    },\r\n    {\r\n      command: 'Carbon Credits',\r\n      description: 'Environmental impact and carbon credit revenue',\r\n      examples: [\r\n        'How many carbon credits did we generate?',\r\n        'कार्बन क्रेडिट कितने जेनरेट हुए?',\r\n        'Carbon revenue projections',\r\n        'Environmental impact summary'\r\n      ],\r\n      category: 'environmental'\r\n    },\r\n    {\r\n      command: 'Strategic Planning',\r\n      description: 'Market position and strategic initiatives',\r\n      examples: [\r\n        'What is our market share?',\r\n        'बाजार में हमारी स्थिति क्या है?',\r\n        'Strategic initiative progress',\r\n        'Competitive analysis summary'\r\n      ],\r\n      category: 'strategic'\r\n    }\r\n  ];\r\n\r\n  // Executive query patterns\r\n  const executiveQueries = {\r\n    revenue: [\r\n      /(?:what|how much|tell me).*(?:revenue|sales|income|earnings)/i,\r\n      /(?:मासिक|कुल).*(?:आय|राजस्व|कमाई)/i,\r\n      /(?:show|display).*(?:financial|revenue).*(?:performance|metrics)/i\r\n    ],\r\n    production: [\r\n      /(?:what|how much).*(?:production|biogas|output)/i,\r\n      /(?:आज|कुल).*(?:उत्पादन|बायोगैस)/i,\r\n      /(?:efficiency|performance).*(?:plant|production)/i\r\n    ],\r\n    carbon: [\r\n      /(?:what|how many).*(?:carbon|credits|environmental)/i,\r\n      /(?:कार्बन|पर्यावरण).*(?:क्रेडिट|प्रभाव)/i,\r\n      /(?:sustainability|green|environmental).*(?:impact|metrics)/i\r\n    ],\r\n    strategic: [\r\n      /(?:what|how).*(?:market|position|share|competitive)/i,\r\n      /(?:बाजार|प्रतिस्पर्धा).*(?:स्थिति|विश्लेषण)/i,\r\n      /(?:strategic|planning|initiatives)/i\r\n    ],\r\n    forecast: [\r\n      /(?:what|show).*(?:forecast|prediction|projection)/i,\r\n      /(?:भविष्यवाणी|पूर्वानुमान|अनुमान)/i,\r\n      /(?:future|next).*(?:quarter|year|month)/i\r\n    ]\r\n  };\r\n\r\n  // Session management and consent handling\r\n  const requestVoiceConsent = () => {\r\n    if (!user) return false;\r\n\r\n    if (privacySettings.consentRequired && !consentGiven) {\r\n      setShowConsentDialog(true);\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const grantConsent = () => {\r\n    setConsentGiven(true);\r\n    setShowConsentDialog(false);\r\n    console.log(`Voice consent granted for ${user?.name} (${user?.role})`);\r\n\r\n    // Store consent with timestamp\r\n    const consentData = {\r\n      userId: user?.id,\r\n      granted: true,\r\n      timestamp: new Date().toISOString(),\r\n      privacyLevel: getAccessLevel()\r\n    };\r\n    localStorage.setItem('voiceConsent', JSON.stringify(consentData));\r\n  };\r\n\r\n  const startVoiceSession = () => {\r\n    if (!user || !requestVoiceConsent()) return;\r\n\r\n    const sessionId = `voice-session-${Date.now()}`;\r\n    const newSession: VoiceSession = {\r\n      id: sessionId,\r\n      startTime: new Date(),\r\n      queries: 0,\r\n      language,\r\n      accuracy: 0,\r\n      userId: user.id,\r\n      consentGiven: true,\r\n      dataRetention: privacySettings.dataRetention,\r\n      privacyLevel: getAccessLevel() === 'high' ? 'high' : 'standard',\r\n      encryptionEnabled: privacySettings.encryptionEnabled\r\n    };\r\n\r\n    setCurrentSession(newSession);\r\n    setSessionTimeRemaining(privacySettings.sessionTimeout * 60); // Convert to seconds\r\n\r\n    // Set session timeout\r\n    if (sessionTimeoutRef.current) {\r\n      clearTimeout(sessionTimeoutRef.current);\r\n    }\r\n\r\n    sessionTimeoutRef.current = setTimeout(() => {\r\n      endVoiceSession();\r\n    }, privacySettings.sessionTimeout * 60 * 1000);\r\n\r\n    console.log(`Voice session started for ${user.name} - Session ID: ${sessionId}`);\r\n  };\r\n\r\n  const endVoiceSession = () => {\r\n    if (currentSession) {\r\n      const updatedSession = {\r\n        ...currentSession,\r\n        endTime: new Date()\r\n      };\r\n\r\n      // Handle data based on retention policy\r\n      if (privacySettings.dataRetention === 'session') {\r\n        // Clear all session data\r\n        console.log('Clearing session data as per privacy policy');\r\n        localStorage.removeItem('voiceSessionData');\r\n      } else if (privacySettings.dataRetention === 'encrypted') {\r\n        // Encrypt and store\r\n        const encryptedSessionData = simpleEncrypt(JSON.stringify(updatedSession));\r\n        localStorage.setItem('voiceSessionData', encryptedSessionData);\r\n        console.log('Session data encrypted and stored');\r\n      }\r\n\r\n      setCurrentSession(null);\r\n      setSessionTimeRemaining(0);\r\n      setIsListening(false);\r\n\r\n      if (sessionTimeoutRef.current) {\r\n        clearTimeout(sessionTimeoutRef.current);\r\n      }\r\n\r\n      console.log(`Voice session ended - Duration: ${Math.round((Date.now() - currentSession.startTime.getTime()) / 1000)}s`);\r\n    }\r\n  };\r\n\r\n  const processVoiceInput = (input: string) => {\r\n    if (!currentSession || !user) return;\r\n\r\n    // Apply privacy filters\r\n    let processedInput = input;\r\n    processedInput = sanitizeSensitiveData(processedInput);\r\n    processedInput = anonymizeTranscript(processedInput);\r\n\r\n    // Encrypt if required\r\n    if (privacySettings.encryptionEnabled) {\r\n      const encryptedInput = simpleEncrypt(processedInput);\r\n      setEncryptedData(encryptedInput);\r\n    }\r\n\r\n    // Update session\r\n    const updatedSession = {\r\n      ...currentSession,\r\n      queries: currentSession.queries + 1\r\n    };\r\n    setCurrentSession(updatedSession);\r\n\r\n    console.log(`Processed voice input (Privacy Level: ${updatedSession.privacyLevel}):`,\r\n                privacyMode ? '[REDACTED]' : processedInput);\r\n  };\r\n\r\n  // Initialize speech recognition\r\n  useEffect(() => {\r\n    if ('webkitSpeechRecognition' in window || 'SpeechRecognition' in window) {\r\n      const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n      recognitionRef.current = new SpeechRecognition();\r\n\r\n      recognitionRef.current.continuous = true;\r\n      recognitionRef.current.interimResults = true;\r\n      recognitionRef.current.lang = language === 'hi' ? 'hi-IN' : 'en-US';\r\n\r\n      recognitionRef.current.onresult = (event) => {\r\n        let finalTranscript = '';\r\n        let interimTranscript = '';\r\n\r\n        for (let i = event.resultIndex; i < event.results.length; i++) {\r\n          const result = event.results[i];\r\n          if (result.isFinal) {\r\n            finalTranscript += result[0].transcript;\r\n            setConfidence(result[0].confidence);\r\n          } else {\r\n            interimTranscript += result[0].transcript;\r\n          }\r\n        }\r\n\r\n        setTranscript(finalTranscript || interimTranscript);\r\n\r\n        if (finalTranscript) {\r\n          // Process with privacy controls\r\n          processVoiceInput(finalTranscript);\r\n          processVoiceQuery(finalTranscript, result[0].confidence);\r\n        }\r\n      };\r\n\r\n      recognitionRef.current.onerror = (event) => {\r\n        console.error('Speech recognition error:', event.error);\r\n        setIsListening(false);\r\n      };\r\n\r\n      recognitionRef.current.onend = () => {\r\n        setIsListening(false);\r\n      };\r\n    }\r\n\r\n    synthRef.current = speechSynthesis;\r\n  }, [language]);\r\n\r\n  // Session timeout monitoring\r\n  useEffect(() => {\r\n    let interval: NodeJS.Timeout;\r\n\r\n    if (currentSession && sessionTimeRemaining > 0) {\r\n      interval = setInterval(() => {\r\n        setSessionTimeRemaining(prev => {\r\n          if (prev <= 1) {\r\n            endVoiceSession();\r\n            return 0;\r\n          }\r\n\r\n          // Warning at 5 minutes remaining\r\n          if (prev === 300) {\r\n            console.warn('Voice session will expire in 5 minutes');\r\n            if (isExecutive()) {\r\n              speakResponse(language === 'hi'\r\n                ? 'सेशन 5 मिनट में समाप्त हो जाएगा'\r\n                : 'Session will expire in 5 minutes');\r\n            }\r\n          }\r\n\r\n          return prev - 1;\r\n        });\r\n      }, 1000);\r\n    }\r\n\r\n    return () => {\r\n      if (interval) clearInterval(interval);\r\n    };\r\n  }, [currentSession, sessionTimeRemaining]);\r\n\r\n  // Check for existing consent on component mount\r\n  useEffect(() => {\r\n    if (user) {\r\n      const storedConsent = localStorage.getItem('voiceConsent');\r\n      if (storedConsent) {\r\n        try {\r\n          const consentData = JSON.parse(storedConsent);\r\n          if (consentData.userId === user.id && consentData.granted) {\r\n            // Check if consent is still valid (24 hours for executives, 7 days for others)\r\n            const consentAge = Date.now() - new Date(consentData.timestamp).getTime();\r\n            const maxConsentAge = isExecutive() ? 24 * 60 * 60 * 1000 : 7 * 24 * 60 * 60 * 1000;\r\n\r\n            if (consentAge < maxConsentAge) {\r\n              setConsentGiven(true);\r\n            } else {\r\n              localStorage.removeItem('voiceConsent');\r\n            }\r\n          }\r\n        } catch (error) {\r\n          console.error('Error parsing stored consent:', error);\r\n          localStorage.removeItem('voiceConsent');\r\n        }\r\n      }\r\n    }\r\n  }, [user]);\r\n\r\n  // Cleanup on unmount\r\n  useEffect(() => {\r\n    return () => {\r\n      if (sessionTimeoutRef.current) {\r\n        clearTimeout(sessionTimeoutRef.current);\r\n      }\r\n      if (currentSession) {\r\n        endVoiceSession();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // Process voice queries with advanced NLP\r\n  const processVoiceQuery = async (query: string, confidence: number) => {\r\n    const queryType = identifyQueryType(query);\r\n    const response = await generateResponse(queryType, query);\r\n\r\n    // Add to voice history\r\n    const voiceQuery = {\r\n      id: Date.now().toString(),\r\n      query,\r\n      timestamp: new Date(),\r\n      response: response.text,\r\n      confidence,\r\n      category: queryType,\r\n      language\r\n    };\r\n\r\n    addVoiceQuery(voiceQuery);\r\n    setQueryHistory(prev => [voiceQuery, ...prev.slice(0, 9)]);\r\n\r\n    // Speak response\r\n    if (response.spoken) {\r\n      speakResponse(response.spoken);\r\n    }\r\n\r\n    // Update session metrics\r\n    if (currentSession) {\r\n      setCurrentSession(prev => prev ? {\r\n        ...prev,\r\n        queries: prev.queries + 1,\r\n        accuracy: (prev.accuracy + confidence) / 2\r\n      } : null);\r\n    }\r\n  };\r\n\r\n  const identifyQueryType = (query: string): string => {\r\n    const lowerQuery = query.toLowerCase();\r\n\r\n    for (const [type, patterns] of Object.entries(executiveQueries)) {\r\n      if (patterns.some(pattern => pattern.test(lowerQuery))) {\r\n        return type;\r\n      }\r\n    }\r\n\r\n    return 'general';\r\n  };\r\n\r\n  const generateResponse = async (queryType: string, query: string) => {\r\n    const responses: Record<string, any> = {\r\n      revenue: {\r\n        text: `Current monthly revenue is ₹${(kpis.find(k => k.id === 'revenue')?.value || 0 / 10000000).toFixed(1)} crores, showing ${kpis.find(k => k.id === 'revenue')?.change || 0}% growth this month.`,\r\n        spoken: language === 'hi'\r\n          ? `वर्तमान मासिक आय ${(kpis.find(k => k.id === 'revenue')?.value || 0 / 10000000).toFixed(1)} करोड़ रुपए है, जो इस महीने ${kpis.find(k => k.id === 'revenue')?.change || 0}% की वृद्धि दिखा रहा है।`\r\n          : `Current monthly revenue is ${(kpis.find(k => k.id === 'revenue')?.value || 0 / 10000000).toFixed(1)} crores, showing ${kpis.find(k => k.id === 'revenue')?.change || 0}% growth this month.`\r\n      },\r\n      production: {\r\n        text: `Biogas production is ${kpis.find(k => k.id === 'production')?.value || 0} cubic meters per day with ${kpis.find(k => k.id === 'efficiency')?.value || 0}% efficiency.`,\r\n        spoken: language === 'hi'\r\n          ? `बायोगैस उत्पादन प्रतिदिन ${kpis.find(k => k.id === 'production')?.value || 0} क्यूबिक मीटर है, जिसकी दक्षता ${kpis.find(k => k.id === 'efficiency')?.value || 0}% है।`\r\n          : `Biogas production is ${kpis.find(k => k.id === 'production')?.value || 0} cubic meters per day with ${kpis.find(k => k.id === 'efficiency')?.value || 0}% efficiency.`\r\n      },\r\n      carbon: {\r\n        text: `We generated ${carbonMetrics.creditsGenerated} tons of carbon credits worth ₹${(carbonMetrics.marketValue / 100000).toFixed(1)} lakhs.`,\r\n        spoken: language === 'hi'\r\n          ? `हमने ${carbonMetrics.creditsGenerated} टन कार्बन क्रेडिट जेनरेट किए हैं जिनकी कीमत ${(carbonMetrics.marketValue / 100000).toFixed(1)} लाख रुपए है।`\r\n          : `We generated ${carbonMetrics.creditsGenerated} tons of carbon credits worth ${(carbonMetrics.marketValue / 100000).toFixed(1)} lakhs rupees.`\r\n      },\r\n      strategic: {\r\n        text: `Our market share is ${competitiveData.marketShare}% and we rank #${competitiveData.ranking} in the industry.`,\r\n        spoken: language === 'hi'\r\n          ? `हमारी बाजार हिस्सेदारी ${competitiveData.marketShare}% है और हम उद्योग में ${competitiveData.ranking} नंबर पर हैं।`\r\n          : `Our market share is ${competitiveData.marketShare}% and we rank number ${competitiveData.ranking} in the industry.`\r\n      }\r\n    };\r\n\r\n    return responses[queryType] || {\r\n      text: 'I can help you with revenue, production, carbon credits, or strategic planning metrics.',\r\n      spoken: language === 'hi'\r\n        ? 'मैं आपकी आय, उत्पादन, कार्बन क्रेडिट, या रणनीतिक योजना मेट्रिक्स में मदद कर सकता हूं।'\r\n        : 'I can help you with revenue, production, carbon credits, or strategic planning metrics.'\r\n    };\r\n  };\r\n\r\n  const speakResponse = (text: string) => {\r\n    if (synthRef.current) {\r\n      setIsSpeaking(true);\r\n      const utterance = new SpeechSynthesisUtterance(text);\r\n      utterance.lang = language === 'hi' ? 'hi-IN' : 'en-US';\r\n      utterance.onend = () => setIsSpeaking(false);\r\n      synthRef.current.speak(utterance);\r\n    }\r\n  };\r\n\r\n  const startListening = () => {\r\n    // Check permissions first\r\n    if (!user || !hasPermission('voice', 'query')) {\r\n      alert('You do not have permission to use voice analytics');\r\n      return;\r\n    }\r\n\r\n    if (!requestVoiceConsent()) {\r\n      return; // Consent dialog will be shown\r\n    }\r\n\r\n    if (recognitionRef.current) {\r\n      setIsListening(true);\r\n      recognitionRef.current.start();\r\n\r\n      // Start session if none exists\r\n      if (!currentSession) {\r\n        startVoiceSession();\r\n      }\r\n    }\r\n  };\r\n\r\n  const stopListening = () => {\r\n    if (recognitionRef.current) {\r\n      recognitionRef.current.stop();\r\n      setIsListening(false);\r\n    }\r\n  };\r\n\r\n  const stopSpeaking = () => {\r\n    if (synthRef.current) {\r\n      synthRef.current.cancel();\r\n      setIsSpeaking(false);\r\n    }\r\n  };\r\n\r\n  const toggleLanguage = () => {\r\n    setLanguage(prev => prev === 'en' ? 'hi' : 'en');\r\n    if (recognitionRef.current) {\r\n      recognitionRef.current.lang = language === 'en' ? 'hi-IN' : 'en-US';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h2 className=\"text-2xl font-bold text-gray-900\">Voice Analytics Assistant</h2>\r\n          <p className=\"text-gray-600\">Advanced voice-enabled business intelligence</p>\r\n        </div>\r\n        <div className=\"flex items-center gap-2\">\r\n          <Button\r\n            onClick={toggleLanguage}\r\n            variant=\"outline\"\r\n            size=\"sm\"\r\n            className=\"flex items-center gap-2\"\r\n          >\r\n            <Languages className=\"h-4 w-4\" />\r\n            {language === 'en' ? 'हिंदी' : 'English'}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Privacy Controls and Session Status */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n        {/* Privacy Status */}\r\n        <Card>\r\n          <CardHeader className=\"pb-3\">\r\n            <CardTitle className=\"flex items-center gap-2 text-sm\">\r\n              <Shield className=\"h-4 w-4\" />\r\n              Privacy Controls\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardContent className=\"space-y-2\">\r\n            <div className=\"flex items-center justify-between text-xs\">\r\n              <span>Data Encryption</span>\r\n              <Badge variant={privacySettings.encryptionEnabled ? \"default\" : \"secondary\"}>\r\n                {privacySettings.encryptionEnabled ? \"ON\" : \"OFF\"}\r\n              </Badge>\r\n            </div>\r\n            <div className=\"flex items-center justify-between text-xs\">\r\n              <span>Privacy Level</span>\r\n              <Badge variant=\"outline\">\r\n                {getAccessLevel().toUpperCase()}\r\n              </Badge>\r\n            </div>\r\n            <div className=\"flex items-center justify-between text-xs\">\r\n              <span>Data Retention</span>\r\n              <Badge variant=\"secondary\">\r\n                {privacySettings.dataRetention.toUpperCase()}\r\n              </Badge>\r\n            </div>\r\n            <Button\r\n              onClick={() => setPrivacyMode(!privacyMode)}\r\n              variant=\"outline\"\r\n              size=\"sm\"\r\n              className=\"w-full mt-2\"\r\n            >\r\n              {privacyMode ? <EyeOff className=\"h-3 w-3 mr-1\" /> : <Eye className=\"h-3 w-3 mr-1\" />}\r\n              {privacyMode ? 'Show Data' : 'Hide Data'}\r\n            </Button>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Session Timer */}\r\n        <Card>\r\n          <CardHeader className=\"pb-3\">\r\n            <CardTitle className=\"flex items-center gap-2 text-sm\">\r\n              <Clock className=\"h-4 w-4\" />\r\n              Session Timer\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            {currentSession ? (\r\n              <div className=\"space-y-2\">\r\n                <div className=\"text-2xl font-bold text-center\">\r\n                  {Math.floor(sessionTimeRemaining / 60)}:{(sessionTimeRemaining % 60).toString().padStart(2, '0')}\r\n                </div>\r\n                <div className=\"text-xs text-center text-gray-500\">Time Remaining</div>\r\n                {sessionTimeRemaining <= 300 && (\r\n                  <Alert className=\"p-2\">\r\n                    <AlertTriangle className=\"h-3 w-3\" />\r\n                    <AlertDescription className=\"text-xs\">\r\n                      Session expiring soon!\r\n                    </AlertDescription>\r\n                  </Alert>\r\n                )}\r\n                <Button\r\n                  onClick={endVoiceSession}\r\n                  variant=\"outline\"\r\n                  size=\"sm\"\r\n                  className=\"w-full\"\r\n                >\r\n                  End Session\r\n                </Button>\r\n              </div>\r\n            ) : (\r\n              <div className=\"text-center text-gray-500 text-sm\">\r\n                No active session\r\n              </div>\r\n            )}\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Consent Status */}\r\n        <Card>\r\n          <CardHeader className=\"pb-3\">\r\n            <CardTitle className=\"flex items-center gap-2 text-sm\">\r\n              <Lock className=\"h-4 w-4\" />\r\n              Consent Status\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"space-y-2\">\r\n              <div className=\"flex items-center justify-between text-xs\">\r\n                <span>Voice Recording</span>\r\n                <Badge variant={consentGiven ? \"default\" : \"destructive\"}>\r\n                  {consentGiven ? \"ALLOWED\" : \"DENIED\"}\r\n                </Badge>\r\n              </div>\r\n              <div className=\"text-xs text-gray-500\">\r\n                User: {user?.name}\r\n              </div>\r\n              <div className=\"text-xs text-gray-500\">\r\n                Role: {user?.role?.toUpperCase()}\r\n              </div>\r\n              {!consentGiven && (\r\n                <Button\r\n                  onClick={() => setShowConsentDialog(true)}\r\n                  variant=\"outline\"\r\n                  size=\"sm\"\r\n                  className=\"w-full\"\r\n                >\r\n                  Grant Consent\r\n                </Button>\r\n              )}\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      {/* Consent Dialog */}\r\n      {showConsentDialog && (\r\n        <Card className=\"border-orange-200 bg-orange-50\">\r\n          <CardHeader>\r\n            <CardTitle className=\"flex items-center gap-2 text-orange-800\">\r\n              <Shield className=\"h-5 w-5\" />\r\n              Voice Analytics Consent Required\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardContent className=\"space-y-4\">\r\n            <div className=\"text-sm text-orange-700\">\r\n              <p className=\"mb-2\">\r\n                <strong>SAUBHAGYA Voice Analytics</strong> requests permission to:\r\n              </p>\r\n              <ul className=\"list-disc list-inside space-y-1 ml-4\">\r\n                <li>Record and process your voice queries</li>\r\n                <li>Analyze speech patterns for business intelligence</li>\r\n                <li>Store session data according to privacy settings</li>\r\n                <li>Apply role-based access controls for data security</li>\r\n              </ul>\r\n\r\n              <div className=\"mt-4 p-3 bg-white rounded border\">\r\n                <h4 className=\"font-medium text-gray-900 mb-2\">Privacy Settings for {user?.name}:</h4>\r\n                <div className=\"grid grid-cols-2 gap-2 text-xs\">\r\n                  <div>Session Timeout: <span className=\"font-medium\">{privacySettings.sessionTimeout} minutes</span></div>\r\n                  <div>Data Retention: <span className=\"font-medium\">{privacySettings.dataRetention}</span></div>\r\n                  <div>Encryption: <span className=\"font-medium\">{privacySettings.encryptionEnabled ? 'Enabled' : 'Disabled'}</span></div>\r\n                  <div>Anonymization: <span className=\"font-medium\">{privacySettings.anonymizeTranscripts ? 'Enabled' : 'Disabled'}</span></div>\r\n                </div>\r\n              </div>\r\n\r\n              <p className=\"mt-3 text-xs text-gray-600\">\r\n                By clicking \"Grant Consent\", you agree to voice data processing under SAUBHAGYA privacy policy.\r\n                {isExecutive() && \" Executive sessions have enhanced security and shorter timeouts.\"}\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"flex gap-2\">\r\n              <Button\r\n                onClick={grantConsent}\r\n                className=\"flex-1\"\r\n              >\r\n                <Shield className=\"h-4 w-4 mr-2\" />\r\n                Grant Consent\r\n              </Button>\r\n              <Button\r\n                onClick={() => setShowConsentDialog(false)}\r\n                variant=\"outline\"\r\n                className=\"flex-1\"\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n\r\n      {/* Current Session */}\r\n      {currentSession && (\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle className=\"flex items-center gap-2\">\r\n              <MessageSquare className=\"h-5 w-5\" />\r\n              Current Voice Session\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"grid grid-cols-4 gap-4\">\r\n              <div className=\"text-center\">\r\n                <div className=\"text-2xl font-bold text-blue-600\">{currentSession.queries}</div>\r\n                <div className=\"text-sm text-gray-500\">Queries</div>\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <div className=\"text-2xl font-bold text-green-600\">\r\n                  {Math.round(currentSession.accuracy * 100)}%\r\n                </div>\r\n                <div className=\"text-sm text-gray-500\">Accuracy</div>\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <div className=\"text-2xl font-bold text-purple-600\">\r\n                  {Math.round((Date.now() - currentSession.startTime.getTime()) / 60000)}m\r\n                </div>\r\n                <div className=\"text-sm text-gray-500\">Duration</div>\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <Badge variant=\"outline\" className=\"text-sm\">\r\n                  {currentSession.language === 'hi' ? 'हिंदी' : 'English'}\r\n                </Badge>\r\n                <div className=\"text-sm text-gray-500\">Language</div>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n\r\n      {/* Voice Controls */}\r\n      <Card>\r\n        <CardContent className=\"pt-6\">\r\n          <div className=\"flex flex-col items-center space-y-4\">\r\n            {/* Main Voice Button */}\r\n            <Button\r\n              onClick={isListening ? stopListening : startListening}\r\n              size=\"lg\"\r\n              className={`h-20 w-20 rounded-full ${\r\n                isListening\r\n                  ? 'bg-red-600 hover:bg-red-700 animate-pulse'\r\n                  : 'bg-blue-600 hover:bg-blue-700'\r\n              }`}\r\n            >\r\n              {isListening ? <MicOff className=\"h-8 w-8\" /> : <Mic className=\"h-8 w-8\" />}\r\n            </Button>\r\n\r\n            {/* Status */}\r\n            <div className=\"text-center\">\r\n              <Badge\r\n                variant={isListening ? \"default\" : \"secondary\"}\r\n                className=\"mb-2\"\r\n              >\r\n                {isListening ? \"Listening...\" : \"Click to speak\"}\r\n              </Badge>\r\n              {confidence > 0 && (\r\n                <div className=\"text-sm text-gray-500\">\r\n                  Confidence: {Math.round(confidence * 100)}%\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* Controls */}\r\n            <div className=\"flex items-center gap-2\">\r\n              {isSpeaking && (\r\n                <Button onClick={stopSpeaking} variant=\"outline\" size=\"sm\">\r\n                  <VolumeX className=\"h-4 w-4 mr-2\" />\r\n                  Stop Speaking\r\n                </Button>\r\n              )}\r\n\r\n              <Button\r\n                onClick={() => setTranscript('')}\r\n                variant=\"outline\"\r\n                size=\"sm\"\r\n              >\r\n                <RotateCcw className=\"h-4 w-4 mr-2\" />\r\n                Clear\r\n              </Button>\r\n            </div>\r\n\r\n            {/* Current Transcript */}\r\n            {transcript && (\r\n              <Alert className=\"w-full max-w-2xl\">\r\n                <Brain className=\"h-4 w-4\" />\r\n                <AlertDescription>\r\n                  <strong>You said:</strong> \"{transcript}\"\r\n                </AlertDescription>\r\n              </Alert>\r\n            )}\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Voice Commands & History Tabs */}\r\n      <Tabs defaultValue=\"commands\" className=\"w-full\">\r\n        <TabsList className=\"grid w-full grid-cols-2\">\r\n          <TabsTrigger value=\"commands\">Voice Commands</TabsTrigger>\r\n          <TabsTrigger value=\"history\">Query History</TabsTrigger>\r\n        </TabsList>\r\n\r\n        <TabsContent value=\"commands\" className=\"space-y-4\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Available Voice Commands</CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"grid grid-cols-1 gap-4 md:grid-cols-2\">\r\n                {voiceCommands.map((command, index) => (\r\n                  <div\r\n                    key={index}\r\n                    className={`p-4 rounded-lg border-l-4 ${\r\n                      command.category === 'financial' ? 'border-blue-500 bg-blue-50' :\r\n                      command.category === 'kpi' ? 'border-green-500 bg-green-50' :\r\n                      command.category === 'environmental' ? 'border-purple-500 bg-purple-50' :\r\n                      'border-orange-500 bg-orange-50'\r\n                    }`}\r\n                  >\r\n                    <div className=\"flex items-center gap-2 mb-2\">\r\n                      {command.category === 'financial' && <DollarSign className=\"h-5 w-5 text-blue-600\" />}\r\n                      {command.category === 'kpi' && <TrendingUp className=\"h-5 w-5 text-green-600\" />}\r\n                      {command.category === 'environmental' && <Leaf className=\"h-5 w-5 text-purple-600\" />}\r\n                      {command.category === 'strategic' && <Users className=\"h-5 w-5 text-orange-600\" />}\r\n                      <h4 className=\"font-medium text-gray-900\">{command.command}</h4>\r\n                    </div>\r\n                    <p className=\"text-sm text-gray-600 mb-3\">{command.description}</p>\r\n                    <div className=\"space-y-1\">\r\n                      <div className=\"text-xs font-medium text-gray-500\">Examples:</div>\r\n                      {command.examples.slice(0, 2).map((example, idx) => (\r\n                        <div key={idx} className=\"text-xs text-gray-600\">\r\n                          • \"{example}\"\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"history\" className=\"space-y-4\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                <History className=\"h-5 w-5\" />\r\n                Recent Voice Queries\r\n              </CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              {queryHistory.length > 0 ? (\r\n                <div className=\"space-y-3\">\r\n                  {queryHistory.map((query) => (\r\n                    <div key={query.id} className=\"p-3 bg-gray-50 rounded-lg\">\r\n                      <div className=\"flex items-start justify-between mb-2\">\r\n                        <div className=\"text-sm font-medium text-gray-900\">\r\n                          \"{query.query}\"\r\n                        </div>\r\n                        <div className=\"flex items-center gap-2\">\r\n                          <Badge variant=\"outline\" className=\"text-xs\">\r\n                            {Math.round(query.confidence * 100)}%\r\n                          </Badge>\r\n                          <Badge variant=\"outline\" className=\"text-xs\">\r\n                            {query.language === 'hi' ? 'हिंदी' : 'English'}\r\n                          </Badge>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"text-sm text-gray-600 mb-2\">\r\n                        <strong>Response:</strong> {query.response}\r\n                      </div>\r\n                      <div className=\"text-xs text-gray-500\">\r\n                        {query.timestamp.toLocaleTimeString()} • Category: {query.category}\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              ) : (\r\n                <div className=\"text-center py-8 text-gray-500\">\r\n                  No voice queries yet. Start speaking to see your history here.\r\n                </div>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VoiceAnalytics;","import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Progress } from '@/components/ui/progress';\r\nimport { Alert, AlertDescription } from '@/components/ui/alert';\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\r\nimport { Input } from '@/components/ui/input';\r\nimport {\r\n  TrendingUp,\r\n  TrendingDown,\r\n  Target,\r\n  DollarSign,\r\n  Calendar,\r\n  AlertTriangle,\r\n  CheckCircle,\r\n  BarChart3,\r\n  PieChart,\r\n  Activity,\r\n  Zap,\r\n  Shield,\r\n  Users,\r\n  RefreshCw,\r\n  Volume2,\r\n  Download,\r\n  Filter,\r\n  Settings,\r\n  ArrowUpRight,\r\n  ArrowDownRight,\r\n  Minus,\r\n  PlayCircle,\r\n  PauseCircle,\r\n  StopCircle,\r\n  Clock\r\n} from 'lucide-react';\r\nimport { useExecutiveAnalytics, StrategicInitiative } from '../../contexts/ExecutiveAnalyticsContext';\r\n\r\ninterface ScenarioModel {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  assumptions: {\r\n    marketGrowth: number;\r\n    investmentLevel: number;\r\n    riskFactor: number;\r\n    timeframe: number;\r\n  };\r\n  projectedOutcomes: {\r\n    revenue: number;\r\n    profit: number;\r\n    marketShare: number;\r\n    roi: number;\r\n    confidence: number;\r\n  };\r\n  risks: Array<{\r\n    category: string;\r\n    probability: number;\r\n    impact: number;\r\n    mitigation: string;\r\n  }>;\r\n}\r\n\r\ninterface InvestmentOpportunity {\r\n  id: string;\r\n  title: string;\r\n  sector: string;\r\n  investmentRequired: number;\r\n  projectedRoi: number;\r\n  riskLevel: 'low' | 'medium' | 'high';\r\n  timeToBreakeven: number;\r\n  strategicAlignment: number;\r\n  competitiveAdvantage: string;\r\n  marketSize: number;\r\n  confidence: number;\r\n  npv: number;\r\n  irr: number;\r\n  paybackPeriod: number;\r\n  discountRate: number;\r\n}\r\n\r\ninterface GeographicOpportunity {\r\n  id: string;\r\n  region: string;\r\n  state: string;\r\n  marketSize: number;\r\n  penetrationRate: number;\r\n  competitionLevel: 'low' | 'medium' | 'high';\r\n  regulatorySupport: number;\r\n  infrastructureScore: number;\r\n  investmentRequired: number;\r\n  projectedRevenue: number;\r\n  riskScore: number;\r\n  opportunityScore: number;\r\n}\r\n\r\ninterface MonteCarloSimulation {\r\n  scenario: string;\r\n  iterations: number;\r\n  outcomes: {\r\n    revenue: { mean: number; stdDev: number; percentile95: number; percentile5: number };\r\n    profit: { mean: number; stdDev: number; percentile95: number; percentile5: number };\r\n    roi: { mean: number; stdDev: number; percentile95: number; percentile5: number };\r\n  };\r\n  confidenceLevel: number;\r\n  riskOfLoss: number;\r\n}\r\n\r\ninterface SensitivityAnalysis {\r\n  variable: string;\r\n  baseValue: number;\r\n  unit: string;\r\n  impact: {\r\n    low: { change: number; revenueImpact: number; roiImpact: number };\r\n    high: { change: number; revenueImpact: number; roiImpact: number };\r\n  };\r\n  elasticity: number;\r\n}\r\n\r\ninterface RiskAssessment {\r\n  id: string;\r\n  category: 'market' | 'operational' | 'financial' | 'regulatory' | 'technology';\r\n  title: string;\r\n  description: string;\r\n  probability: number;\r\n  impact: number;\r\n  severity: 'low' | 'medium' | 'high' | 'critical';\r\n  mitigationStrategy: string;\r\n  owner: string;\r\n  status: 'identified' | 'monitoring' | 'mitigating' | 'resolved';\r\n  estimatedCost: number;\r\n}\r\n\r\nconst StrategicPlanning: React.FC = () => {\r\n  const { initiatives, refreshData, refreshing, updateInitiative } = useExecutiveAnalytics();\r\n\r\n  const [selectedScenario, setSelectedScenario] = useState<string>('baseline');\r\n  const [selectedTimeframe, setSelectedTimeframe] = useState<string>('12m');\r\n  const [activeTab, setActiveTab] = useState<string>('initiatives');\r\n  const [showAdvancedMetrics, setShowAdvancedMetrics] = useState<boolean>(false);\r\n\r\n  // Mock data for strategic planning components\r\n  const [scenarioModels] = useState<ScenarioModel[]>([\r\n    {\r\n      id: 'baseline',\r\n      name: 'Baseline Growth',\r\n      description: 'Conservative growth with current market conditions',\r\n      assumptions: {\r\n        marketGrowth: 12,\r\n        investmentLevel: 80,\r\n        riskFactor: 20,\r\n        timeframe: 12\r\n      },\r\n      projectedOutcomes: {\r\n        revenue: 1500000000,\r\n        profit: 375000000,\r\n        marketShare: 22,\r\n        roi: 25,\r\n        confidence: 0.85\r\n      },\r\n      risks: [\r\n        { category: 'Market', probability: 0.3, impact: 0.4, mitigation: 'Diversify customer base' },\r\n        { category: 'Regulatory', probability: 0.2, impact: 0.6, mitigation: 'Government relations program' }\r\n      ]\r\n    },\r\n    {\r\n      id: 'aggressive',\r\n      name: 'Aggressive Expansion',\r\n      description: 'High-growth strategy with significant market expansion',\r\n      assumptions: {\r\n        marketGrowth: 25,\r\n        investmentLevel: 150,\r\n        riskFactor: 45,\r\n        timeframe: 18\r\n      },\r\n      projectedOutcomes: {\r\n        revenue: 2250000000,\r\n        profit: 450000000,\r\n        marketShare: 35,\r\n        roi: 42,\r\n        confidence: 0.68\r\n      },\r\n      risks: [\r\n        { category: 'Market', probability: 0.5, impact: 0.7, mitigation: 'Phased expansion approach' },\r\n        { category: 'Financial', probability: 0.4, impact: 0.8, mitigation: 'Strategic partnerships' }\r\n      ]\r\n    },\r\n    {\r\n      id: 'conservative',\r\n      name: 'Conservative Consolidation',\r\n      description: 'Focus on operational efficiency and market consolidation',\r\n      assumptions: {\r\n        marketGrowth: 8,\r\n        investmentLevel: 50,\r\n        riskFactor: 10,\r\n        timeframe: 24\r\n      },\r\n      projectedOutcomes: {\r\n        revenue: 1200000000,\r\n        profit: 360000000,\r\n        marketShare: 18,\r\n        roi: 18,\r\n        confidence: 0.92\r\n      },\r\n      risks: [\r\n        { category: 'Competition', probability: 0.4, impact: 0.3, mitigation: 'Innovation investment' },\r\n        { category: 'Technology', probability: 0.2, impact: 0.4, mitigation: 'R&D partnerships' }\r\n      ]\r\n    }\r\n  ]);\r\n\r\n  const [investmentOpportunities] = useState<InvestmentOpportunity[]>([\r\n    {\r\n      id: 'ai_optimization',\r\n      title: 'AI-Driven Production Optimization',\r\n      sector: 'Technology',\r\n      investmentRequired: 250000000,\r\n      projectedRoi: 320,\r\n      riskLevel: 'medium',\r\n      timeToBreakeven: 18,\r\n      strategicAlignment: 95,\r\n      competitiveAdvantage: 'First-mover advantage in biogas AI optimization',\r\n      marketSize: 1500000000,\r\n      confidence: 0.82,\r\n      npv: 485000000,\r\n      irr: 42.5,\r\n      paybackPeriod: 2.8,\r\n      discountRate: 12\r\n    },\r\n    {\r\n      id: 'carbon_trading',\r\n      title: 'Carbon Credit Trading Platform',\r\n      sector: 'Environmental',\r\n      investmentRequired: 150000000,\r\n      projectedRoi: 450,\r\n      riskLevel: 'low',\r\n      timeToBreakeven: 12,\r\n      strategicAlignment: 88,\r\n      competitiveAdvantage: 'Integrated production and trading ecosystem',\r\n      marketSize: 2800000000,\r\n      confidence: 0.91,\r\n      npv: 625000000,\r\n      irr: 58.3,\r\n      paybackPeriod: 2.1,\r\n      discountRate: 10\r\n    },\r\n    {\r\n      id: 'rural_expansion',\r\n      title: 'Rural Distribution Network Expansion',\r\n      sector: 'Infrastructure',\r\n      investmentRequired: 800000000,\r\n      projectedRoi: 180,\r\n      riskLevel: 'high',\r\n      timeToBreakeven: 36,\r\n      strategicAlignment: 92,\r\n      competitiveAdvantage: 'Last-mile connectivity advantage',\r\n      marketSize: 5000000000,\r\n      confidence: 0.76,\r\n      npv: 320000000,\r\n      irr: 28.7,\r\n      paybackPeriod: 4.2,\r\n      discountRate: 15\r\n    },\r\n    {\r\n      id: 'smart_grid_integration',\r\n      title: 'Smart Grid Integration Platform',\r\n      sector: 'Technology',\r\n      investmentRequired: 400000000,\r\n      projectedRoi: 280,\r\n      riskLevel: 'medium',\r\n      timeToBreakeven: 24,\r\n      strategicAlignment: 89,\r\n      competitiveAdvantage: 'Integrated energy distribution network',\r\n      marketSize: 3200000000,\r\n      confidence: 0.78,\r\n      npv: 420000000,\r\n      irr: 35.2,\r\n      paybackPeriod: 3.5,\r\n      discountRate: 13\r\n    }\r\n  ]);\r\n\r\n  const [geographicOpportunities] = useState<GeographicOpportunity[]>([\r\n    {\r\n      id: 'maharashtra_west',\r\n      region: 'Western Maharashtra',\r\n      state: 'Maharashtra',\r\n      marketSize: 850000000,\r\n      penetrationRate: 12,\r\n      competitionLevel: 'medium',\r\n      regulatorySupport: 85,\r\n      infrastructureScore: 78,\r\n      investmentRequired: 180000000,\r\n      projectedRevenue: 320000000,\r\n      riskScore: 25,\r\n      opportunityScore: 88\r\n    },\r\n    {\r\n      id: 'punjab_rural',\r\n      region: 'Rural Punjab',\r\n      state: 'Punjab',\r\n      marketSize: 620000000,\r\n      penetrationRate: 8,\r\n      competitionLevel: 'low',\r\n      regulatorySupport: 92,\r\n      infrastructureScore: 82,\r\n      investmentRequired: 140000000,\r\n      projectedRevenue: 280000000,\r\n      riskScore: 18,\r\n      opportunityScore: 94\r\n    },\r\n    {\r\n      id: 'gujarat_industrial',\r\n      region: 'Industrial Gujarat',\r\n      state: 'Gujarat',\r\n      marketSize: 950000000,\r\n      penetrationRate: 15,\r\n      competitionLevel: 'high',\r\n      regulatorySupport: 78,\r\n      infrastructureScore: 88,\r\n      investmentRequired: 220000000,\r\n      projectedRevenue: 380000000,\r\n      riskScore: 35,\r\n      opportunityScore: 82\r\n    },\r\n    {\r\n      id: 'up_eastern',\r\n      region: 'Eastern Uttar Pradesh',\r\n      state: 'Uttar Pradesh',\r\n      marketSize: 720000000,\r\n      penetrationRate: 6,\r\n      competitionLevel: 'low',\r\n      regulatorySupport: 75,\r\n      infrastructureScore: 65,\r\n      investmentRequired: 160000000,\r\n      projectedRevenue: 250000000,\r\n      riskScore: 28,\r\n      opportunityScore: 85\r\n    },\r\n    {\r\n      id: 'karnataka_tech',\r\n      region: 'Tech Corridor Karnataka',\r\n      state: 'Karnataka',\r\n      marketSize: 580000000,\r\n      penetrationRate: 10,\r\n      competitionLevel: 'medium',\r\n      regulatorySupport: 88,\r\n      infrastructureScore: 92,\r\n      investmentRequired: 125000000,\r\n      projectedRevenue: 210000000,\r\n      riskScore: 22,\r\n      opportunityScore: 90\r\n    }\r\n  ]);\r\n\r\n  const [monteCarloResults] = useState<MonteCarloSimulation[]>([\r\n    {\r\n      scenario: 'baseline',\r\n      iterations: 10000,\r\n      outcomes: {\r\n        revenue: { mean: 1500000000, stdDev: 180000000, percentile95: 1820000000, percentile5: 1210000000 },\r\n        profit: { mean: 375000000, stdDev: 65000000, percentile95: 485000000, percentile5: 285000000 },\r\n        roi: { mean: 25, stdDev: 4.2, percentile95: 32.5, percentile5: 18.8 }\r\n      },\r\n      confidenceLevel: 0.85,\r\n      riskOfLoss: 0.12\r\n    },\r\n    {\r\n      scenario: 'aggressive',\r\n      iterations: 10000,\r\n      outcomes: {\r\n        revenue: { mean: 2250000000, stdDev: 385000000, percentile95: 2885000000, percentile5: 1680000000 },\r\n        profit: { mean: 450000000, stdDev: 125000000, percentile95: 665000000, percentile5: 285000000 },\r\n        roi: { mean: 42, stdDev: 8.5, percentile95: 56.2, percentile5: 28.5 }\r\n      },\r\n      confidenceLevel: 0.68,\r\n      riskOfLoss: 0.28\r\n    },\r\n    {\r\n      scenario: 'conservative',\r\n      iterations: 10000,\r\n      outcomes: {\r\n        revenue: { mean: 1200000000, stdDev: 85000000, percentile95: 1345000000, percentile5: 1085000000 },\r\n        profit: { mean: 360000000, stdDev: 42000000, percentile95: 430000000, percentile5: 305000000 },\r\n        roi: { mean: 18, stdDev: 2.8, percentile95: 22.8, percentile5: 14.2 }\r\n      },\r\n      confidenceLevel: 0.92,\r\n      riskOfLoss: 0.05\r\n    }\r\n  ]);\r\n\r\n  const [sensitivityData] = useState<SensitivityAnalysis[]>([\r\n    {\r\n      variable: 'Market Growth Rate',\r\n      baseValue: 12,\r\n      unit: '%',\r\n      impact: {\r\n        low: { change: -20, revenueImpact: -180000000, roiImpact: -4.2 },\r\n        high: { change: 30, revenueImpact: 285000000, roiImpact: 6.8 }\r\n      },\r\n      elasticity: 1.45\r\n    },\r\n    {\r\n      variable: 'Raw Material Cost',\r\n      baseValue: 35,\r\n      unit: '₹/unit',\r\n      impact: {\r\n        low: { change: -15, revenueImpact: 125000000, roiImpact: 3.2 },\r\n        high: { change: 25, revenueImpact: -185000000, roiImpact: -5.8 }\r\n      },\r\n      elasticity: -0.85\r\n    },\r\n    {\r\n      variable: 'Carbon Credit Price',\r\n      baseValue: 150000,\r\n      unit: '₹/ton',\r\n      impact: {\r\n        low: { change: -30, revenueImpact: -95000000, roiImpact: -2.8 },\r\n        high: { change: 40, revenueImpact: 165000000, roiImpact: 4.5 }\r\n      },\r\n      elasticity: 1.12\r\n    },\r\n    {\r\n      variable: 'Regulatory Support',\r\n      baseValue: 80,\r\n      unit: 'score',\r\n      impact: {\r\n        low: { change: -25, revenueImpact: -220000000, roiImpact: -6.5 },\r\n        high: { change: 20, revenueImpact: 145000000, roiImpact: 3.8 }\r\n      },\r\n      elasticity: 0.95\r\n    },\r\n    {\r\n      variable: 'Technology Adoption Rate',\r\n      baseValue: 65,\r\n      unit: '%',\r\n      impact: {\r\n        low: { change: -30, revenueImpact: -155000000, roiImpact: -4.2 },\r\n        high: { change: 35, revenueImpact: 198000000, roiImpact: 5.5 }\r\n      },\r\n      elasticity: 1.28\r\n    }\r\n  ]);\r\n\r\n  const [riskAssessments] = useState<RiskAssessment[]>([\r\n    {\r\n      id: 'regulatory_changes',\r\n      category: 'regulatory',\r\n      title: 'Government Policy Changes',\r\n      description: 'Potential changes in renewable energy subsidies and regulations',\r\n      probability: 0.6,\r\n      impact: 0.7,\r\n      severity: 'high',\r\n      mitigationStrategy: 'Active government relations and policy advocacy',\r\n      owner: 'Government Affairs Team',\r\n      status: 'monitoring',\r\n      estimatedCost: 125000000\r\n    },\r\n    {\r\n      id: 'market_saturation',\r\n      category: 'market',\r\n      title: 'Market Saturation Risk',\r\n      description: 'Risk of market saturation in primary regions',\r\n      probability: 0.4,\r\n      impact: 0.8,\r\n      severity: 'high',\r\n      mitigationStrategy: 'Geographic diversification and new product development',\r\n      owner: 'Strategic Planning Team',\r\n      status: 'mitigating',\r\n      estimatedCost: 200000000\r\n    },\r\n    {\r\n      id: 'technology_disruption',\r\n      category: 'technology',\r\n      title: 'Disruptive Technology Threat',\r\n      description: 'Emergence of competing renewable energy technologies',\r\n      probability: 0.3,\r\n      impact: 0.9,\r\n      severity: 'critical',\r\n      mitigationStrategy: 'R&D investment and technology partnerships',\r\n      owner: 'Technology Innovation Team',\r\n      status: 'mitigating',\r\n      estimatedCost: 300000000\r\n    }\r\n  ]);\r\n\r\n  const formatCurrency = (value: number): string => {\r\n    if (value >= 10000000) {\r\n      return `₹${(value / 10000000).toFixed(1)}Cr`;\r\n    } else if (value >= 100000) {\r\n      return `₹${(value / 100000).toFixed(1)}L`;\r\n    }\r\n    return `₹${value.toLocaleString()}`;\r\n  };\r\n\r\n  const getStatusIcon = (status: string) => {\r\n    switch (status) {\r\n      case 'planning':\r\n        return <Clock className=\"h-4 w-4 text-blue-600\" />;\r\n      case 'in-progress':\r\n        return <PlayCircle className=\"h-4 w-4 text-green-600\" />;\r\n      case 'completed':\r\n        return <CheckCircle className=\"h-4 w-4 text-green-600\" />;\r\n      case 'on-hold':\r\n        return <PauseCircle className=\"h-4 w-4 text-yellow-600\" />;\r\n      default:\r\n        return <Clock className=\"h-4 w-4 text-gray-600\" />;\r\n    }\r\n  };\r\n\r\n  const getRiskColor = (level: string) => {\r\n    switch (level) {\r\n      case 'low':\r\n        return 'bg-green-100 text-green-800';\r\n      case 'medium':\r\n        return 'bg-yellow-100 text-yellow-800';\r\n      case 'high':\r\n        return 'bg-red-100 text-red-800';\r\n      case 'critical':\r\n        return 'bg-red-200 text-red-900';\r\n      default:\r\n        return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  const getSeverityScore = (probability: number, impact: number): number => {\r\n    return Math.round(probability * impact * 100);\r\n  };\r\n\r\n  const speakStrategicSummary = () => {\r\n    const activeInitiatives = initiatives.filter(i => i.status === 'in-progress').length;\r\n    const totalBudget = initiatives.reduce((sum, i) => sum + i.budget, 0);\r\n    const avgRoi = initiatives.reduce((sum, i) => sum + i.roi, 0) / initiatives.length;\r\n    const totalInvestmentOpps = investmentOpportunities.reduce((sum, o) => sum + o.investmentRequired, 0);\r\n    const avgNpv = investmentOpportunities.reduce((sum, o) => sum + o.npv, 0) / investmentOpportunities.length;\r\n    const topGeographicOpp = geographicOpportunities.sort((a, b) => b.opportunityScore - a.opportunityScore)[0];\r\n    const highRisks = riskAssessments.filter(r => r.severity === 'high' || r.severity === 'critical').length;\r\n\r\n    const summaryText = `Strategic Planning Executive Summary: ${activeInitiatives} strategic initiatives in progress with ${formatCurrency(totalBudget)} total budget and ${avgRoi.toFixed(1)}% average ROI. Investment portfolio includes ${investmentOpportunities.length} opportunities worth ${formatCurrency(totalInvestmentOpps)} with average NPV of ${formatCurrency(avgNpv)}. Top geographic opportunity is ${topGeographicOpp.region} with ${topGeographicOpp.opportunityScore} opportunity score. ${highRisks} high-priority risks require immediate attention. Monte Carlo analysis shows ${Math.round(monteCarloResults.find(r => r.scenario === selectedScenario)?.confidenceLevel * 100 || 0)}% confidence level for current scenario.`;\r\n\r\n    if ('speechSynthesis' in window) {\r\n      const utterance = new SpeechSynthesisUtterance(summaryText);\r\n      speechSynthesis.speak(utterance);\r\n    }\r\n  };\r\n\r\n  const exportReport = () => {\r\n    const reportData = {\r\n      timestamp: new Date().toISOString(),\r\n      scenario: selectedScenario,\r\n      timeframe: selectedTimeframe,\r\n      summary: {\r\n        activeInitiatives: initiatives.filter(i => i.status === 'in-progress').length,\r\n        totalBudget: initiatives.reduce((sum, i) => sum + i.budget, 0),\r\n        avgRoi: initiatives.reduce((sum, i) => sum + i.roi, 0) / initiatives.length,\r\n        highPriorityRisks: riskAssessments.filter(r => r.severity === 'high' || r.severity === 'critical').length,\r\n        totalInvestmentOpportunities: investmentOpportunities.length,\r\n        topGeographicOpportunity: geographicOpportunities.sort((a, b) => b.opportunityScore - a.opportunityScore)[0]?.region || 'N/A'\r\n      },\r\n      initiatives,\r\n      scenarios: scenarioModels,\r\n      investments: {\r\n        opportunities: investmentOpportunities,\r\n        portfolioMetrics: {\r\n          totalInvestment: investmentOpportunities.reduce((sum, o) => sum + o.investmentRequired, 0),\r\n          averageNPV: investmentOpportunities.reduce((sum, o) => sum + o.npv, 0) / investmentOpportunities.length,\r\n          averageIRR: investmentOpportunities.reduce((sum, o) => sum + o.irr, 0) / investmentOpportunities.length,\r\n          averagePayback: investmentOpportunities.reduce((sum, o) => sum + o.paybackPeriod, 0) / investmentOpportunities.length\r\n        }\r\n      },\r\n      geographic: {\r\n        opportunities: geographicOpportunities,\r\n        totalMarketSize: geographicOpportunities.reduce((sum, g) => sum + g.marketSize, 0),\r\n        totalInvestmentRequired: geographicOpportunities.reduce((sum, g) => sum + g.investmentRequired, 0),\r\n        averageOpportunityScore: geographicOpportunities.reduce((sum, g) => sum + g.opportunityScore, 0) / geographicOpportunities.length\r\n      },\r\n      simulation: {\r\n        monteCarloResults,\r\n        sensitivityAnalysis: sensitivityData,\r\n        selectedScenarioConfidence: monteCarloResults.find(r => r.scenario === selectedScenario)?.confidenceLevel || 0\r\n      },\r\n      risks: {\r\n        assessments: riskAssessments,\r\n        totalExposure: riskAssessments.reduce((sum, r) => sum + r.estimatedCost, 0),\r\n        activeMitigations: riskAssessments.filter(r => r.status === 'mitigating').length,\r\n        resolvedRisks: riskAssessments.filter(r => r.status === 'resolved').length\r\n      }\r\n    };\r\n\r\n    const blob = new Blob([JSON.stringify(reportData, null, 2)], { type: 'application/json' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = `strategic-planning-comprehensive-report-${new Date().toISOString().split('T')[0]}.json`;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  const selectedScenarioData = scenarioModels.find(s => s.id === selectedScenario);\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h2 className=\"text-2xl font-bold text-gray-900\">Strategic Planning & Analysis</h2>\r\n          <p className=\"text-gray-600\">Long-term business planning, scenario modeling, and strategic initiatives</p>\r\n        </div>\r\n        <div className=\"flex items-center gap-3\">\r\n          <Button\r\n            onClick={speakStrategicSummary}\r\n            variant=\"outline\"\r\n            size=\"sm\"\r\n            className=\"hidden sm:flex\"\r\n          >\r\n            <Volume2 className=\"h-4 w-4 mr-2\" />\r\n            Listen\r\n          </Button>\r\n          <Button\r\n            onClick={exportReport}\r\n            variant=\"outline\"\r\n            size=\"sm\"\r\n          >\r\n            <Download className=\"h-4 w-4 mr-2\" />\r\n            Export\r\n          </Button>\r\n          <Button\r\n            onClick={refreshData}\r\n            variant=\"outline\"\r\n            size=\"sm\"\r\n            disabled={refreshing}\r\n          >\r\n            <RefreshCw className={`h-4 w-4 ${refreshing ? 'animate-spin' : ''} mr-2`} />\r\n            Refresh\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Strategic Controls */}\r\n      <div className=\"flex flex-wrap gap-4 p-4 bg-gray-50 rounded-lg\">\r\n        <div className=\"flex items-center gap-2\">\r\n          <label className=\"text-sm font-medium text-gray-700\">Scenario:</label>\r\n          <Select value={selectedScenario} onValueChange={setSelectedScenario}>\r\n            <SelectTrigger className=\"w-48\">\r\n              <SelectValue />\r\n            </SelectTrigger>\r\n            <SelectContent>\r\n              {scenarioModels.map(scenario => (\r\n                <SelectItem key={scenario.id} value={scenario.id}>\r\n                  {scenario.name}\r\n                </SelectItem>\r\n              ))}\r\n            </SelectContent>\r\n          </Select>\r\n        </div>\r\n        <div className=\"flex items-center gap-2\">\r\n          <label className=\"text-sm font-medium text-gray-700\">Timeframe:</label>\r\n          <Select value={selectedTimeframe} onValueChange={setSelectedTimeframe}>\r\n            <SelectTrigger className=\"w-32\">\r\n              <SelectValue />\r\n            </SelectTrigger>\r\n            <SelectContent>\r\n              <SelectItem value=\"6m\">6 Months</SelectItem>\r\n              <SelectItem value=\"12m\">12 Months</SelectItem>\r\n              <SelectItem value=\"24m\">24 Months</SelectItem>\r\n              <SelectItem value=\"36m\">36 Months</SelectItem>\r\n            </SelectContent>\r\n          </Select>\r\n        </div>\r\n        <Button\r\n          variant=\"outline\"\r\n          size=\"sm\"\r\n          onClick={() => setShowAdvancedMetrics(!showAdvancedMetrics)}\r\n        >\r\n          <Settings className=\"h-4 w-4 mr-2\" />\r\n          Advanced\r\n        </Button>\r\n      </div>\r\n\r\n      <Tabs value={activeTab} onValueChange={setActiveTab} className=\"space-y-6\">\r\n        <TabsList className=\"grid w-full grid-cols-7\">\r\n          <TabsTrigger value=\"initiatives\">Initiatives</TabsTrigger>\r\n          <TabsTrigger value=\"scenarios\">Scenarios</TabsTrigger>\r\n          <TabsTrigger value=\"investments\">Investments</TabsTrigger>\r\n          <TabsTrigger value=\"geographic\">Geographic</TabsTrigger>\r\n          <TabsTrigger value=\"simulation\">Simulation</TabsTrigger>\r\n          <TabsTrigger value=\"risks\">Risks</TabsTrigger>\r\n          <TabsTrigger value=\"planning\">Planning</TabsTrigger>\r\n        </TabsList>\r\n\r\n        {/* Strategic Initiatives Tab */}\r\n        <TabsContent value=\"initiatives\" className=\"space-y-6\">\r\n          <div className=\"grid grid-cols-1 gap-6 lg:grid-cols-2\">\r\n            {/* Initiative Overview */}\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center gap-2\">\r\n                  <Target className=\"h-5 w-5\" />\r\n                  Initiative Portfolio Overview\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"grid grid-cols-2 gap-4\">\r\n                  <div className=\"text-center p-4 bg-blue-50 rounded-lg\">\r\n                    <div className=\"text-2xl font-bold text-blue-600\">\r\n                      {initiatives.filter(i => i.status === 'in-progress').length}\r\n                    </div>\r\n                    <div className=\"text-sm text-blue-700\">Active Initiatives</div>\r\n                  </div>\r\n                  <div className=\"text-center p-4 bg-green-50 rounded-lg\">\r\n                    <div className=\"text-2xl font-bold text-green-600\">\r\n                      {formatCurrency(initiatives.reduce((sum, i) => sum + i.budget, 0))}\r\n                    </div>\r\n                    <div className=\"text-sm text-green-700\">Total Investment</div>\r\n                  </div>\r\n                  <div className=\"text-center p-4 bg-purple-50 rounded-lg\">\r\n                    <div className=\"text-2xl font-bold text-purple-600\">\r\n                      {(initiatives.reduce((sum, i) => sum + i.roi, 0) / initiatives.length).toFixed(1)}%\r\n                    </div>\r\n                    <div className=\"text-sm text-purple-700\">Average ROI</div>\r\n                  </div>\r\n                  <div className=\"text-center p-4 bg-orange-50 rounded-lg\">\r\n                    <div className=\"text-2xl font-bold text-orange-600\">\r\n                      {Math.round(initiatives.reduce((sum, i) => sum + i.progress, 0) / initiatives.length)}%\r\n                    </div>\r\n                    <div className=\"text-sm text-orange-700\">Avg Progress</div>\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            {/* ROI Analysis */}\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center gap-2\">\r\n                  <TrendingUp className=\"h-5 w-5\" />\r\n                  ROI Performance Analysis\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"space-y-4\">\r\n                  {initiatives.map((initiative) => (\r\n                    <div key={initiative.id} className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\r\n                      <div className=\"flex-1\">\r\n                        <div className=\"flex items-center gap-2\">\r\n                          {getStatusIcon(initiative.status)}\r\n                          <span className=\"font-medium\">{initiative.name}</span>\r\n                        </div>\r\n                        <div className=\"text-sm text-gray-600 mt-1\">\r\n                          Budget: {formatCurrency(initiative.budget)} |\r\n                          Spent: {formatCurrency(initiative.spent)} |\r\n                          Progress: {initiative.progress}%\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"text-right\">\r\n                        <div className={`text-lg font-bold ${\r\n                          initiative.roi >= 300 ? 'text-green-600' :\r\n                          initiative.roi >= 200 ? 'text-blue-600' :\r\n                          'text-gray-600'\r\n                        }`}>\r\n                          {initiative.roi}% ROI\r\n                        </div>\r\n                        <Badge variant=\"outline\" className={getRiskColor(initiative.riskLevel)}>\r\n                          {initiative.riskLevel} risk\r\n                        </Badge>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          {/* Detailed Initiative Cards */}\r\n          <div className=\"grid grid-cols-1 gap-6 lg:grid-cols-2\">\r\n            {initiatives.map((initiative) => (\r\n              <Card key={initiative.id} className=\"hover:shadow-lg transition-shadow\">\r\n                <CardHeader>\r\n                  <div className=\"flex items-start justify-between\">\r\n                    <div>\r\n                      <CardTitle className=\"text-lg\">{initiative.name}</CardTitle>\r\n                      <p className=\"text-sm text-gray-600 mt-1\">{initiative.description}</p>\r\n                    </div>\r\n                    <Badge\r\n                      variant=\"outline\"\r\n                      className={\r\n                        initiative.status === 'completed' ? 'bg-green-100 text-green-800' :\r\n                        initiative.status === 'in-progress' ? 'bg-blue-100 text-blue-800' :\r\n                        initiative.status === 'planning' ? 'bg-yellow-100 text-yellow-800' :\r\n                        'bg-gray-100 text-gray-800'\r\n                      }\r\n                    >\r\n                      {initiative.status.replace('-', ' ')}\r\n                    </Badge>\r\n                  </div>\r\n                </CardHeader>\r\n                <CardContent className=\"space-y-4\">\r\n                  <div className=\"grid grid-cols-2 gap-4 text-sm\">\r\n                    <div>\r\n                      <span className=\"text-gray-600\">Budget Utilization</span>\r\n                      <div className=\"font-medium\">\r\n                        {formatCurrency(initiative.spent)} / {formatCurrency(initiative.budget)}\r\n                      </div>\r\n                    </div>\r\n                    <div>\r\n                      <span className=\"text-gray-600\">Expected ROI</span>\r\n                      <div className=\"font-medium text-green-600\">{initiative.roi}%</div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <div className=\"flex justify-between text-sm mb-2\">\r\n                      <span>Progress</span>\r\n                      <span>{initiative.progress}%</span>\r\n                    </div>\r\n                    <Progress value={initiative.progress} className=\"h-2\" />\r\n                  </div>\r\n\r\n                  <div className=\"text-sm\">\r\n                    <div className=\"text-gray-600\">Timeline</div>\r\n                    <div className=\"font-medium\">\r\n                      {new Date(initiative.timeline.start).toLocaleDateString()} - {new Date(initiative.timeline.end).toLocaleDateString()}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"text-sm\">\r\n                    <div className=\"text-gray-600\">Owner</div>\r\n                    <div className=\"font-medium\">{initiative.owner}</div>\r\n                  </div>\r\n\r\n                  {showAdvancedMetrics && (\r\n                    <div className=\"pt-3 border-t border-gray-200\">\r\n                      <div className=\"text-sm space-y-2\">\r\n                        <div className=\"flex justify-between\">\r\n                          <span className=\"text-gray-600\">Risk Level:</span>\r\n                          <Badge variant=\"outline\" className={getRiskColor(initiative.riskLevel)}>\r\n                            {initiative.riskLevel}\r\n                          </Badge>\r\n                        </div>\r\n                        <div className=\"flex justify-between\">\r\n                          <span className=\"text-gray-600\">Milestones:</span>\r\n                          <span>{initiative.timeline.milestones.length} planned</span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </CardContent>\r\n              </Card>\r\n            ))}\r\n          </div>\r\n        </TabsContent>\r\n\r\n        {/* Scenario Modeling Tab */}\r\n        <TabsContent value=\"scenarios\" className=\"space-y-6\">\r\n          {selectedScenarioData && (\r\n            <>\r\n              <Card>\r\n                <CardHeader>\r\n                  <CardTitle className=\"flex items-center gap-2\">\r\n                    <BarChart3 className=\"h-5 w-5\" />\r\n                    Scenario Analysis: {selectedScenarioData.name}\r\n                  </CardTitle>\r\n                  <p className=\"text-gray-600\">{selectedScenarioData.description}</p>\r\n                </CardHeader>\r\n                <CardContent>\r\n                  <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n                    {/* Assumptions */}\r\n                    <div className=\"space-y-4\">\r\n                      <h4 className=\"font-medium text-gray-900\">Key Assumptions</h4>\r\n                      <div className=\"space-y-3\">\r\n                        <div className=\"flex justify-between items-center\">\r\n                          <span className=\"text-gray-600\">Market Growth Rate</span>\r\n                          <span className=\"font-medium\">{selectedScenarioData.assumptions.marketGrowth}%</span>\r\n                        </div>\r\n                        <div className=\"flex justify-between items-center\">\r\n                          <span className=\"text-gray-600\">Investment Level</span>\r\n                          <span className=\"font-medium\">{selectedScenarioData.assumptions.investmentLevel}%</span>\r\n                        </div>\r\n                        <div className=\"flex justify-between items-center\">\r\n                          <span className=\"text-gray-600\">Risk Factor</span>\r\n                          <span className=\"font-medium\">{selectedScenarioData.assumptions.riskFactor}%</span>\r\n                        </div>\r\n                        <div className=\"flex justify-between items-center\">\r\n                          <span className=\"text-gray-600\">Timeframe</span>\r\n                          <span className=\"font-medium\">{selectedScenarioData.assumptions.timeframe} months</span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* Projected Outcomes */}\r\n                    <div className=\"space-y-4\">\r\n                      <h4 className=\"font-medium text-gray-900\">Projected Outcomes</h4>\r\n                      <div className=\"grid grid-cols-2 gap-3\">\r\n                        <div className=\"text-center p-3 bg-blue-50 rounded-lg\">\r\n                          <div className=\"text-lg font-bold text-blue-600\">\r\n                            {formatCurrency(selectedScenarioData.projectedOutcomes.revenue)}\r\n                          </div>\r\n                          <div className=\"text-xs text-blue-700\">Revenue</div>\r\n                        </div>\r\n                        <div className=\"text-center p-3 bg-green-50 rounded-lg\">\r\n                          <div className=\"text-lg font-bold text-green-600\">\r\n                            {formatCurrency(selectedScenarioData.projectedOutcomes.profit)}\r\n                          </div>\r\n                          <div className=\"text-xs text-green-700\">Profit</div>\r\n                        </div>\r\n                        <div className=\"text-center p-3 bg-purple-50 rounded-lg\">\r\n                          <div className=\"text-lg font-bold text-purple-600\">\r\n                            {selectedScenarioData.projectedOutcomes.marketShare}%\r\n                          </div>\r\n                          <div className=\"text-xs text-purple-700\">Market Share</div>\r\n                        </div>\r\n                        <div className=\"text-center p-3 bg-orange-50 rounded-lg\">\r\n                          <div className=\"text-lg font-bold text-orange-600\">\r\n                            {selectedScenarioData.projectedOutcomes.roi}%\r\n                          </div>\r\n                          <div className=\"text-xs text-orange-700\">ROI</div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"text-center mt-4\">\r\n                        <Badge\r\n                          variant=\"outline\"\r\n                          className={`${\r\n                            selectedScenarioData.projectedOutcomes.confidence >= 0.8 ? 'bg-green-100 text-green-800' :\r\n                            selectedScenarioData.projectedOutcomes.confidence >= 0.6 ? 'bg-yellow-100 text-yellow-800' :\r\n                            'bg-red-100 text-red-800'\r\n                          }`}\r\n                        >\r\n                          {Math.round(selectedScenarioData.projectedOutcomes.confidence * 100)}% Confidence\r\n                        </Badge>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n\r\n              {/* Scenario Comparison */}\r\n              <Card>\r\n                <CardHeader>\r\n                  <CardTitle className=\"flex items-center gap-2\">\r\n                    <PieChart className=\"h-5 w-5\" />\r\n                    Scenario Comparison Matrix\r\n                  </CardTitle>\r\n                </CardHeader>\r\n                <CardContent>\r\n                  <div className=\"overflow-x-auto\">\r\n                    <table className=\"w-full text-sm\">\r\n                      <thead>\r\n                        <tr className=\"border-b border-gray-200\">\r\n                          <th className=\"text-left py-3 px-4\">Scenario</th>\r\n                          <th className=\"text-center py-3 px-4\">Revenue</th>\r\n                          <th className=\"text-center py-3 px-4\">ROI</th>\r\n                          <th className=\"text-center py-3 px-4\">Market Share</th>\r\n                          <th className=\"text-center py-3 px-4\">Risk Level</th>\r\n                          <th className=\"text-center py-3 px-4\">Confidence</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {scenarioModels.map((scenario) => (\r\n                          <tr\r\n                            key={scenario.id}\r\n                            className={`border-b border-gray-100 ${scenario.id === selectedScenario ? 'bg-blue-50' : ''}`}\r\n                          >\r\n                            <td className=\"py-3 px-4 font-medium\">{scenario.name}</td>\r\n                            <td className=\"text-center py-3 px-4\">{formatCurrency(scenario.projectedOutcomes.revenue)}</td>\r\n                            <td className=\"text-center py-3 px-4\">{scenario.projectedOutcomes.roi}%</td>\r\n                            <td className=\"text-center py-3 px-4\">{scenario.projectedOutcomes.marketShare}%</td>\r\n                            <td className=\"text-center py-3 px-4\">{scenario.assumptions.riskFactor}%</td>\r\n                            <td className=\"text-center py-3 px-4\">\r\n                              <Badge\r\n                                variant=\"outline\"\r\n                                className={`${\r\n                                  scenario.projectedOutcomes.confidence >= 0.8 ? 'bg-green-100 text-green-800' :\r\n                                  scenario.projectedOutcomes.confidence >= 0.6 ? 'bg-yellow-100 text-yellow-800' :\r\n                                  'bg-red-100 text-red-800'\r\n                                }`}\r\n                              >\r\n                                {Math.round(scenario.projectedOutcomes.confidence * 100)}%\r\n                              </Badge>\r\n                            </td>\r\n                          </tr>\r\n                        ))}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n\r\n              {/* Risk Analysis for Selected Scenario */}\r\n              <Card>\r\n                <CardHeader>\r\n                  <CardTitle className=\"flex items-center gap-2\">\r\n                    <Shield className=\"h-5 w-5\" />\r\n                    Scenario Risk Analysis\r\n                  </CardTitle>\r\n                </CardHeader>\r\n                <CardContent>\r\n                  <div className=\"space-y-4\">\r\n                    {selectedScenarioData.risks.map((risk, index) => (\r\n                      <div key={index} className=\"flex items-center justify-between p-4 bg-gray-50 rounded-lg\">\r\n                        <div className=\"flex-1\">\r\n                          <div className=\"font-medium text-gray-900\">{risk.category} Risk</div>\r\n                          <div className=\"text-sm text-gray-600\">{risk.mitigation}</div>\r\n                        </div>\r\n                        <div className=\"text-right space-y-1\">\r\n                          <div className=\"text-sm\">\r\n                            <span className=\"text-gray-600\">Probability:</span> {Math.round(risk.probability * 100)}%\r\n                          </div>\r\n                          <div className=\"text-sm\">\r\n                            <span className=\"text-gray-600\">Impact:</span> {Math.round(risk.impact * 100)}%\r\n                          </div>\r\n                          <Badge\r\n                            variant=\"outline\"\r\n                            className={getSeverityScore(risk.probability, risk.impact) >= 50 ? 'bg-red-100 text-red-800' : 'bg-yellow-100 text-yellow-800'}\r\n                          >\r\n                            Score: {getSeverityScore(risk.probability, risk.impact)}\r\n                          </Badge>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n            </>\r\n          )}\r\n        </TabsContent>\r\n\r\n        {/* Investment Portfolio Tab */}\r\n        <TabsContent value=\"investments\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                <DollarSign className=\"h-5 w-5\" />\r\n                Investment Opportunity Portfolio\r\n              </CardTitle>\r\n              <p className=\"text-gray-600\">Prioritized investment opportunities with ROI analysis and strategic alignment</p>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"grid grid-cols-1 gap-6 lg:grid-cols-2\">\r\n                {investmentOpportunities\r\n                  .sort((a, b) => (b.projectedRoi * b.strategicAlignment) - (a.projectedRoi * a.strategicAlignment))\r\n                  .map((opportunity) => (\r\n                  <Card key={opportunity.id} className=\"hover:shadow-lg transition-shadow\">\r\n                    <CardHeader>\r\n                      <div className=\"flex items-start justify-between\">\r\n                        <div>\r\n                          <CardTitle className=\"text-lg\">{opportunity.title}</CardTitle>\r\n                          <Badge variant=\"outline\" className=\"mt-2\">\r\n                            {opportunity.sector}\r\n                          </Badge>\r\n                        </div>\r\n                        <Badge\r\n                          variant=\"outline\"\r\n                          className={getRiskColor(opportunity.riskLevel)}\r\n                        >\r\n                          {opportunity.riskLevel} risk\r\n                        </Badge>\r\n                      </div>\r\n                    </CardHeader>\r\n                    <CardContent className=\"space-y-4\">\r\n                      <div className=\"grid grid-cols-2 gap-4\">\r\n                        <div className=\"text-center p-3 bg-blue-50 rounded-lg\">\r\n                          <div className=\"text-lg font-bold text-blue-600\">\r\n                            {formatCurrency(opportunity.investmentRequired)}\r\n                          </div>\r\n                          <div className=\"text-xs text-blue-700\">Investment Required</div>\r\n                        </div>\r\n                        <div className=\"text-center p-3 bg-green-50 rounded-lg\">\r\n                          <div className=\"text-lg font-bold text-green-600\">\r\n                            {opportunity.projectedRoi}%\r\n                          </div>\r\n                          <div className=\"text-xs text-green-700\">Projected ROI</div>\r\n                        </div>\r\n                        <div className=\"text-center p-3 bg-purple-50 rounded-lg\">\r\n                          <div className=\"text-lg font-bold text-purple-600\">\r\n                            {formatCurrency(opportunity.npv)}\r\n                          </div>\r\n                          <div className=\"text-xs text-purple-700\">NPV</div>\r\n                        </div>\r\n                        <div className=\"text-center p-3 bg-orange-50 rounded-lg\">\r\n                          <div className=\"text-lg font-bold text-orange-600\">\r\n                            {opportunity.irr}%\r\n                          </div>\r\n                          <div className=\"text-xs text-orange-700\">IRR</div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"space-y-3\">\r\n                        <div className=\"flex justify-between items-center\">\r\n                          <span className=\"text-gray-600\">Time to Breakeven</span>\r\n                          <span className=\"font-medium\">{opportunity.timeToBreakeven} months</span>\r\n                        </div>\r\n                        <div className=\"flex justify-between items-center\">\r\n                          <span className=\"text-gray-600\">Strategic Alignment</span>\r\n                          <div className=\"flex items-center gap-2\">\r\n                            <Progress value={opportunity.strategicAlignment} className=\"h-2 w-16\" />\r\n                            <span className=\"font-medium\">{opportunity.strategicAlignment}%</span>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"flex justify-between items-center\">\r\n                          <span className=\"text-gray-600\">Market Size</span>\r\n                          <span className=\"font-medium\">{formatCurrency(opportunity.marketSize)}</span>\r\n                        </div>\r\n                        <div className=\"flex justify-between items-center\">\r\n                          <span className=\"text-gray-600\">Payback Period</span>\r\n                          <span className=\"font-medium\">{opportunity.paybackPeriod} years</span>\r\n                        </div>\r\n                        <div className=\"flex justify-between items-center\">\r\n                          <span className=\"text-gray-600\">Discount Rate</span>\r\n                          <span className=\"font-medium\">{opportunity.discountRate}%</span>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"pt-3 border-t border-gray-200\">\r\n                        <div className=\"text-sm text-gray-600 mb-2\">Competitive Advantage</div>\r\n                        <div className=\"text-sm font-medium\">{opportunity.competitiveAdvantage}</div>\r\n                      </div>\r\n\r\n                      <div className=\"flex items-center justify-between\">\r\n                        <Badge\r\n                          variant=\"outline\"\r\n                          className={`${\r\n                            opportunity.confidence >= 0.8 ? 'bg-green-100 text-green-800' :\r\n                            opportunity.confidence >= 0.6 ? 'bg-yellow-100 text-yellow-800' :\r\n                            'bg-red-100 text-red-800'\r\n                          }`}\r\n                        >\r\n                          {Math.round(opportunity.confidence * 100)}% Confidence\r\n                        </Badge>\r\n                        <Button size=\"sm\" variant=\"outline\">\r\n                          Detailed Analysis\r\n                        </Button>\r\n                      </div>\r\n                    </CardContent>\r\n                  </Card>\r\n                ))}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          {/* Investment Portfolio Summary */}\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                <Activity className=\"h-5 w-5\" />\r\n                Portfolio Optimization Analysis\r\n              </CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\r\n                <div className=\"space-y-4\">\r\n                  <h4 className=\"font-medium text-gray-900\">Risk-Return Profile</h4>\r\n                  <div className=\"space-y-3\">\r\n                    {['low', 'medium', 'high'].map(risk => {\r\n                      const opportunities = investmentOpportunities.filter(o => o.riskLevel === risk);\r\n                      const avgRoi = opportunities.reduce((sum, o) => sum + o.projectedRoi, 0) / opportunities.length || 0;\r\n                      const totalInvestment = opportunities.reduce((sum, o) => sum + o.investmentRequired, 0);\r\n\r\n                      return (\r\n                        <div key={risk} className=\"flex justify-between items-center p-3 bg-gray-50 rounded\">\r\n                          <div>\r\n                            <div className=\"font-medium capitalize\">{risk} Risk</div>\r\n                            <div className=\"text-sm text-gray-600\">{opportunities.length} opportunities</div>\r\n                          </div>\r\n                          <div className=\"text-right\">\r\n                            <div className=\"font-medium\">{avgRoi.toFixed(1)}% ROI</div>\r\n                            <div className=\"text-sm text-gray-600\">{formatCurrency(totalInvestment)}</div>\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"space-y-4\">\r\n                  <h4 className=\"font-medium text-gray-900\">Sector Distribution</h4>\r\n                  <div className=\"space-y-3\">\r\n                    {Array.from(new Set(investmentOpportunities.map(o => o.sector))).map(sector => {\r\n                      const sectorOpportunities = investmentOpportunities.filter(o => o.sector === sector);\r\n                      const totalInvestment = sectorOpportunities.reduce((sum, o) => sum + o.investmentRequired, 0);\r\n\r\n                      return (\r\n                        <div key={sector} className=\"flex justify-between items-center p-3 bg-gray-50 rounded\">\r\n                          <div>\r\n                            <div className=\"font-medium\">{sector}</div>\r\n                            <div className=\"text-sm text-gray-600\">{sectorOpportunities.length} opportunities</div>\r\n                          </div>\r\n                          <div className=\"font-medium\">{formatCurrency(totalInvestment)}</div>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"space-y-4\">\r\n                  <h4 className=\"font-medium text-gray-900\">Recommended Allocation</h4>\r\n                  <div className=\"space-y-3\">\r\n                    <div className=\"p-4 bg-green-50 rounded-lg border border-green-200\">\r\n                      <div className=\"font-medium text-green-800\">Optimal Portfolio</div>\r\n                      <div className=\"text-sm text-green-700 mt-1\">\r\n                        Balanced risk-return allocation\r\n                      </div>\r\n                      <div className=\"mt-3 space-y-2\">\r\n                        <div className=\"flex justify-between text-sm\">\r\n                          <span>Expected ROI:</span>\r\n                          <span className=\"font-medium\">285%</span>\r\n                        </div>\r\n                        <div className=\"flex justify-between text-sm\">\r\n                          <span>Total Investment:</span>\r\n                          <span className=\"font-medium\">{formatCurrency(\r\n                            investmentOpportunities.reduce((sum, o) => sum + o.investmentRequired, 0)\r\n                          )}</span>\r\n                        </div>\r\n                        <div className=\"flex justify-between text-sm\">\r\n                          <span>Payback Period:</span>\r\n                          <span className=\"font-medium\">22 months</span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        {/* Risk Assessment Tab */}\r\n        <TabsContent value=\"risks\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                <AlertTriangle className=\"h-5 w-5\" />\r\n                Strategic Risk Assessment & Mitigation\r\n              </CardTitle>\r\n              <p className=\"text-gray-600\">Comprehensive risk analysis with impact assessment and mitigation strategies</p>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-6\">\r\n                {/* Risk Overview */}\r\n                <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-4\">\r\n                  {['critical', 'high', 'medium', 'low'].map(severity => {\r\n                    const risks = riskAssessments.filter(r => r.severity === severity);\r\n                    return (\r\n                      <div key={severity} className={`text-center p-4 rounded-lg ${\r\n                        severity === 'critical' ? 'bg-red-100' :\r\n                        severity === 'high' ? 'bg-orange-100' :\r\n                        severity === 'medium' ? 'bg-yellow-100' :\r\n                        'bg-green-100'\r\n                      }`}>\r\n                        <div className={`text-2xl font-bold ${\r\n                          severity === 'critical' ? 'text-red-600' :\r\n                          severity === 'high' ? 'text-orange-600' :\r\n                          severity === 'medium' ? 'text-yellow-600' :\r\n                          'text-green-600'\r\n                        }`}>\r\n                          {risks.length}\r\n                        </div>\r\n                        <div className={`text-sm ${\r\n                          severity === 'critical' ? 'text-red-700' :\r\n                          severity === 'high' ? 'text-orange-700' :\r\n                          severity === 'medium' ? 'text-yellow-700' :\r\n                          'text-green-700'\r\n                        }`}>\r\n                          {severity.charAt(0).toUpperCase() + severity.slice(1)} Risk\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n\r\n                {/* Detailed Risk Cards */}\r\n                <div className=\"space-y-4\">\r\n                  {riskAssessments\r\n                    .sort((a, b) => getSeverityScore(b.probability, b.impact) - getSeverityScore(a.probability, a.impact))\r\n                    .map((risk) => (\r\n                    <Card key={risk.id} className=\"hover:shadow-lg transition-shadow\">\r\n                      <CardHeader>\r\n                        <div className=\"flex items-start justify-between\">\r\n                          <div className=\"flex-1\">\r\n                            <CardTitle className=\"text-lg\">{risk.title}</CardTitle>\r\n                            <p className=\"text-sm text-gray-600 mt-1\">{risk.description}</p>\r\n                            <div className=\"flex items-center gap-2 mt-2\">\r\n                              <Badge variant=\"outline\" className={\r\n                                risk.category === 'market' ? 'bg-blue-100 text-blue-800' :\r\n                                risk.category === 'operational' ? 'bg-green-100 text-green-800' :\r\n                                risk.category === 'financial' ? 'bg-purple-100 text-purple-800' :\r\n                                risk.category === 'regulatory' ? 'bg-orange-100 text-orange-800' :\r\n                                'bg-gray-100 text-gray-800'\r\n                              }>\r\n                                {risk.category}\r\n                              </Badge>\r\n                              <Badge variant=\"outline\" className={getRiskColor(risk.severity)}>\r\n                                {risk.severity}\r\n                              </Badge>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"text-right\">\r\n                            <div className=\"text-2xl font-bold text-red-600\">\r\n                              {getSeverityScore(risk.probability, risk.impact)}\r\n                            </div>\r\n                            <div className=\"text-sm text-gray-600\">Risk Score</div>\r\n                          </div>\r\n                        </div>\r\n                      </CardHeader>\r\n                      <CardContent className=\"space-y-4\">\r\n                        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-4\">\r\n                          <div>\r\n                            <div className=\"text-sm text-gray-600 mb-2\">Risk Metrics</div>\r\n                            <div className=\"space-y-2\">\r\n                              <div className=\"flex justify-between\">\r\n                                <span className=\"text-sm\">Probability:</span>\r\n                                <span className=\"font-medium\">{Math.round(risk.probability * 100)}%</span>\r\n                              </div>\r\n                              <div className=\"flex justify-between\">\r\n                                <span className=\"text-sm\">Impact:</span>\r\n                                <span className=\"font-medium\">{Math.round(risk.impact * 100)}%</span>\r\n                              </div>\r\n                              <div className=\"flex justify-between\">\r\n                                <span className=\"text-sm\">Est. Cost:</span>\r\n                                <span className=\"font-medium\">{formatCurrency(risk.estimatedCost)}</span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div>\r\n                            <div className=\"text-sm text-gray-600 mb-2\">Mitigation Strategy</div>\r\n                            <div className=\"text-sm\">{risk.mitigationStrategy}</div>\r\n                          </div>\r\n\r\n                          <div>\r\n                            <div className=\"text-sm text-gray-600 mb-2\">Management</div>\r\n                            <div className=\"space-y-2\">\r\n                              <div className=\"text-sm\">\r\n                                <span className=\"text-gray-600\">Owner:</span> {risk.owner}\r\n                              </div>\r\n                              <Badge\r\n                                variant=\"outline\"\r\n                                className={\r\n                                  risk.status === 'resolved' ? 'bg-green-100 text-green-800' :\r\n                                  risk.status === 'mitigating' ? 'bg-blue-100 text-blue-800' :\r\n                                  risk.status === 'monitoring' ? 'bg-yellow-100 text-yellow-800' :\r\n                                  'bg-gray-100 text-gray-800'\r\n                                }\r\n                              >\r\n                                {risk.status}\r\n                              </Badge>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </CardContent>\r\n                    </Card>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          {/* Risk Mitigation Summary */}\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                <Shield className=\"h-5 w-5\" />\r\n                Risk Mitigation Investment Summary\r\n              </CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\r\n                <div className=\"text-center p-6 bg-red-50 rounded-lg\">\r\n                  <div className=\"text-3xl font-bold text-red-600\">\r\n                    {formatCurrency(riskAssessments.reduce((sum, r) => sum + r.estimatedCost, 0))}\r\n                  </div>\r\n                  <div className=\"text-sm text-red-700 mt-2\">Total Risk Exposure</div>\r\n                </div>\r\n                <div className=\"text-center p-6 bg-blue-50 rounded-lg\">\r\n                  <div className=\"text-3xl font-bold text-blue-600\">\r\n                    {riskAssessments.filter(r => r.status === 'mitigating').length}\r\n                  </div>\r\n                  <div className=\"text-sm text-blue-700 mt-2\">Active Mitigations</div>\r\n                </div>\r\n                <div className=\"text-center p-6 bg-green-50 rounded-lg\">\r\n                  <div className=\"text-3xl font-bold text-green-600\">\r\n                    {Math.round((riskAssessments.filter(r => r.status === 'resolved').length / riskAssessments.length) * 100)}%\r\n                  </div>\r\n                  <div className=\"text-sm text-green-700 mt-2\">Risks Resolved</div>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        {/* Geographic Expansion Tab */}\r\n        <TabsContent value=\"geographic\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                <Target className=\"h-5 w-5\" />\r\n                Geographic Market Expansion Analysis\r\n              </CardTitle>\r\n              <p className=\"text-gray-600\">Regional opportunity assessment and market penetration strategy</p>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-6\">\r\n                {/* Market Opportunity Map */}\r\n                <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n                  {geographicOpportunities\r\n                    .sort((a, b) => b.opportunityScore - a.opportunityScore)\r\n                    .map((region) => (\r\n                    <Card key={region.id} className=\"hover:shadow-lg transition-shadow\">\r\n                      <CardHeader>\r\n                        <div className=\"flex items-start justify-between\">\r\n                          <div>\r\n                            <CardTitle className=\"text-lg\">{region.region}</CardTitle>\r\n                            <Badge variant=\"outline\" className=\"mt-2\">\r\n                              {region.state}\r\n                            </Badge>\r\n                          </div>\r\n                          <div className=\"text-right\">\r\n                            <div className=\"text-2xl font-bold text-green-600\">\r\n                              {region.opportunityScore}\r\n                            </div>\r\n                            <div className=\"text-sm text-gray-600\">Opportunity Score</div>\r\n                          </div>\r\n                        </div>\r\n                      </CardHeader>\r\n                      <CardContent className=\"space-y-4\">\r\n                        <div className=\"grid grid-cols-2 gap-4\">\r\n                          <div className=\"text-center p-3 bg-blue-50 rounded-lg\">\r\n                            <div className=\"text-lg font-bold text-blue-600\">\r\n                              {formatCurrency(region.marketSize)}\r\n                            </div>\r\n                            <div className=\"text-xs text-blue-700\">Market Size</div>\r\n                          </div>\r\n                          <div className=\"text-center p-3 bg-green-50 rounded-lg\">\r\n                            <div className=\"text-lg font-bold text-green-600\">\r\n                              {formatCurrency(region.projectedRevenue)}\r\n                            </div>\r\n                            <div className=\"text-xs text-green-700\">Projected Revenue</div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"space-y-3\">\r\n                          <div className=\"flex justify-between items-center\">\r\n                            <span className=\"text-gray-600\">Current Penetration</span>\r\n                            <div className=\"flex items-center gap-2\">\r\n                              <Progress value={region.penetrationRate} className=\"h-2 w-16\" />\r\n                              <span className=\"font-medium\">{region.penetrationRate}%</span>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"flex justify-between items-center\">\r\n                            <span className=\"text-gray-600\">Regulatory Support</span>\r\n                            <div className=\"flex items-center gap-2\">\r\n                              <Progress value={region.regulatorySupport} className=\"h-2 w-16\" />\r\n                              <span className=\"font-medium\">{region.regulatorySupport}%</span>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"flex justify-between items-center\">\r\n                            <span className=\"text-gray-600\">Infrastructure</span>\r\n                            <div className=\"flex items-center gap-2\">\r\n                              <Progress value={region.infrastructureScore} className=\"h-2 w-16\" />\r\n                              <span className=\"font-medium\">{region.infrastructureScore}%</span>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"pt-3 border-t border-gray-200\">\r\n                          <div className=\"flex justify-between items-center mb-2\">\r\n                            <span className=\"text-gray-600\">Investment Required</span>\r\n                            <span className=\"font-medium\">{formatCurrency(region.investmentRequired)}</span>\r\n                          </div>\r\n                          <div className=\"flex justify-between items-center mb-2\">\r\n                            <span className=\"text-gray-600\">Competition Level</span>\r\n                            <Badge\r\n                              variant=\"outline\"\r\n                              className={getRiskColor(region.competitionLevel)}\r\n                            >\r\n                              {region.competitionLevel}\r\n                            </Badge>\r\n                          </div>\r\n                          <div className=\"flex justify-between items-center\">\r\n                            <span className=\"text-gray-600\">Risk Score</span>\r\n                            <span className={`font-medium ${\r\n                              region.riskScore <= 20 ? 'text-green-600' :\r\n                              region.riskScore <= 30 ? 'text-yellow-600' :\r\n                              'text-red-600'\r\n                            }`}>\r\n                              {region.riskScore}/100\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <Button size=\"sm\" className=\"w-full\">\r\n                          View Detailed Analysis\r\n                        </Button>\r\n                      </CardContent>\r\n                    </Card>\r\n                  ))}\r\n                </div>\r\n\r\n                {/* Regional Summary */}\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle className=\"flex items-center gap-2\">\r\n                      <BarChart3 className=\"h-5 w-5\" />\r\n                      Regional Expansion Summary\r\n                    </CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-6\">\r\n                      <div className=\"text-center p-4 bg-blue-50 rounded-lg\">\r\n                        <div className=\"text-2xl font-bold text-blue-600\">\r\n                          {formatCurrency(geographicOpportunities.reduce((sum, r) => sum + r.marketSize, 0))}\r\n                        </div>\r\n                        <div className=\"text-sm text-blue-700 mt-2\">Total Addressable Market</div>\r\n                      </div>\r\n                      <div className=\"text-center p-4 bg-green-50 rounded-lg\">\r\n                        <div className=\"text-2xl font-bold text-green-600\">\r\n                          {formatCurrency(geographicOpportunities.reduce((sum, r) => sum + r.investmentRequired, 0))}\r\n                        </div>\r\n                        <div className=\"text-sm text-green-700 mt-2\">Total Investment Required</div>\r\n                      </div>\r\n                      <div className=\"text-center p-4 bg-purple-50 rounded-lg\">\r\n                        <div className=\"text-2xl font-bold text-purple-600\">\r\n                          {formatCurrency(geographicOpportunities.reduce((sum, r) => sum + r.projectedRevenue, 0))}\r\n                        </div>\r\n                        <div className=\"text-sm text-purple-700 mt-2\">Total Projected Revenue</div>\r\n                      </div>\r\n                      <div className=\"text-center p-4 bg-orange-50 rounded-lg\">\r\n                        <div className=\"text-2xl font-bold text-orange-600\">\r\n                          {Math.round(geographicOpportunities.reduce((sum, r) => sum + r.opportunityScore, 0) / geographicOpportunities.length)}\r\n                        </div>\r\n                        <div className=\"text-sm text-orange-700 mt-2\">Avg Opportunity Score</div>\r\n                      </div>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        {/* Monte Carlo Simulation Tab */}\r\n        <TabsContent value=\"simulation\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                <Activity className=\"h-5 w-5\" />\r\n                Monte Carlo Simulation & Sensitivity Analysis\r\n              </CardTitle>\r\n              <p className=\"text-gray-600\">Statistical modeling and risk assessment for strategic scenarios</p>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-6\">\r\n                {/* Monte Carlo Results */}\r\n                <div className=\"space-y-4\">\r\n                  <h4 className=\"font-medium text-gray-900\">Monte Carlo Simulation Results (10,000 iterations)</h4>\r\n                  <div className=\"grid grid-cols-1 gap-6\">\r\n                    {monteCarloResults.map((result) => (\r\n                      <Card key={result.scenario} className=\"hover:shadow-lg transition-shadow\">\r\n                        <CardHeader>\r\n                          <div className=\"flex items-center justify-between\">\r\n                            <CardTitle className=\"text-lg capitalize\">\r\n                              {result.scenario} Scenario\r\n                            </CardTitle>\r\n                            <div className=\"flex items-center gap-4\">\r\n                              <Badge\r\n                                variant=\"outline\"\r\n                                className={`${\r\n                                  result.confidenceLevel >= 0.8 ? 'bg-green-100 text-green-800' :\r\n                                  result.confidenceLevel >= 0.6 ? 'bg-yellow-100 text-yellow-800' :\r\n                                  'bg-red-100 text-red-800'\r\n                                }`}\r\n                              >\r\n                                {Math.round(result.confidenceLevel * 100)}% Confidence\r\n                              </Badge>\r\n                              <Badge\r\n                                variant=\"outline\"\r\n                                className={`${\r\n                                  result.riskOfLoss <= 0.1 ? 'bg-green-100 text-green-800' :\r\n                                  result.riskOfLoss <= 0.25 ? 'bg-yellow-100 text-yellow-800' :\r\n                                  'bg-red-100 text-red-800'\r\n                                }`}\r\n                              >\r\n                                {Math.round(result.riskOfLoss * 100)}% Risk of Loss\r\n                              </Badge>\r\n                            </div>\r\n                          </div>\r\n                        </CardHeader>\r\n                        <CardContent>\r\n                          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\r\n                            {/* Revenue Distribution */}\r\n                            <div className=\"space-y-3\">\r\n                              <h5 className=\"font-medium text-blue-600\">Revenue Distribution</h5>\r\n                              <div className=\"space-y-2\">\r\n                                <div className=\"flex justify-between text-sm\">\r\n                                  <span>Mean:</span>\r\n                                  <span className=\"font-medium\">{formatCurrency(result.outcomes.revenue.mean)}</span>\r\n                                </div>\r\n                                <div className=\"flex justify-between text-sm\">\r\n                                  <span>Std Dev:</span>\r\n                                  <span className=\"font-medium\">{formatCurrency(result.outcomes.revenue.stdDev)}</span>\r\n                                </div>\r\n                                <div className=\"flex justify-between text-sm\">\r\n                                  <span>95th %ile:</span>\r\n                                  <span className=\"font-medium text-green-600\">{formatCurrency(result.outcomes.revenue.percentile95)}</span>\r\n                                </div>\r\n                                <div className=\"flex justify-between text-sm\">\r\n                                  <span>5th %ile:</span>\r\n                                  <span className=\"font-medium text-red-600\">{formatCurrency(result.outcomes.revenue.percentile5)}</span>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n\r\n                            {/* Profit Distribution */}\r\n                            <div className=\"space-y-3\">\r\n                              <h5 className=\"font-medium text-green-600\">Profit Distribution</h5>\r\n                              <div className=\"space-y-2\">\r\n                                <div className=\"flex justify-between text-sm\">\r\n                                  <span>Mean:</span>\r\n                                  <span className=\"font-medium\">{formatCurrency(result.outcomes.profit.mean)}</span>\r\n                                </div>\r\n                                <div className=\"flex justify-between text-sm\">\r\n                                  <span>Std Dev:</span>\r\n                                  <span className=\"font-medium\">{formatCurrency(result.outcomes.profit.stdDev)}</span>\r\n                                </div>\r\n                                <div className=\"flex justify-between text-sm\">\r\n                                  <span>95th %ile:</span>\r\n                                  <span className=\"font-medium text-green-600\">{formatCurrency(result.outcomes.profit.percentile95)}</span>\r\n                                </div>\r\n                                <div className=\"flex justify-between text-sm\">\r\n                                  <span>5th %ile:</span>\r\n                                  <span className=\"font-medium text-red-600\">{formatCurrency(result.outcomes.profit.percentile5)}</span>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n\r\n                            {/* ROI Distribution */}\r\n                            <div className=\"space-y-3\">\r\n                              <h5 className=\"font-medium text-purple-600\">ROI Distribution</h5>\r\n                              <div className=\"space-y-2\">\r\n                                <div className=\"flex justify-between text-sm\">\r\n                                  <span>Mean:</span>\r\n                                  <span className=\"font-medium\">{result.outcomes.roi.mean.toFixed(1)}%</span>\r\n                                </div>\r\n                                <div className=\"flex justify-between text-sm\">\r\n                                  <span>Std Dev:</span>\r\n                                  <span className=\"font-medium\">{result.outcomes.roi.stdDev.toFixed(1)}%</span>\r\n                                </div>\r\n                                <div className=\"flex justify-between text-sm\">\r\n                                  <span>95th %ile:</span>\r\n                                  <span className=\"font-medium text-green-600\">{result.outcomes.roi.percentile95.toFixed(1)}%</span>\r\n                                </div>\r\n                                <div className=\"flex justify-between text-sm\">\r\n                                  <span>5th %ile:</span>\r\n                                  <span className=\"font-medium text-red-600\">{result.outcomes.roi.percentile5.toFixed(1)}%</span>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </CardContent>\r\n                      </Card>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Sensitivity Analysis */}\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle className=\"flex items-center gap-2\">\r\n                      <TrendingUp className=\"h-5 w-5\" />\r\n                      Sensitivity Analysis - Key Variables Impact\r\n                    </CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    <div className=\"space-y-4\">\r\n                      {sensitivityData.map((variable, index) => (\r\n                        <Card key={index} className=\"hover:shadow-lg transition-shadow\">\r\n                          <CardHeader>\r\n                            <div className=\"flex items-center justify-between\">\r\n                              <CardTitle className=\"text-lg\">{variable.variable}</CardTitle>\r\n                              <Badge\r\n                                variant=\"outline\"\r\n                                className={`${\r\n                                  Math.abs(variable.elasticity) >= 1.2 ? 'bg-red-100 text-red-800' :\r\n                                  Math.abs(variable.elasticity) >= 0.8 ? 'bg-yellow-100 text-yellow-800' :\r\n                                  'bg-green-100 text-green-800'\r\n                                }`}\r\n                              >\r\n                                Elasticity: {variable.elasticity.toFixed(2)}\r\n                              </Badge>\r\n                            </div>\r\n                          </CardHeader>\r\n                          <CardContent>\r\n                            <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\r\n                              <div className=\"text-center p-4 bg-gray-50 rounded-lg\">\r\n                                <div className=\"text-lg font-bold text-gray-800\">\r\n                                  {variable.baseValue} {variable.unit}\r\n                                </div>\r\n                                <div className=\"text-sm text-gray-600\">Base Value</div>\r\n                              </div>\r\n                              <div className=\"space-y-3\">\r\n                                <h5 className=\"font-medium text-red-600\">Downside Scenario ({variable.impact.low.change}%)</h5>\r\n                                <div className=\"space-y-2\">\r\n                                  <div className=\"flex justify-between text-sm\">\r\n                                    <span>Revenue Impact:</span>\r\n                                    <span className=\"font-medium text-red-600\">{formatCurrency(variable.impact.low.revenueImpact)}</span>\r\n                                  </div>\r\n                                  <div className=\"flex justify-between text-sm\">\r\n                                    <span>ROI Impact:</span>\r\n                                    <span className=\"font-medium text-red-600\">{variable.impact.low.roiImpact.toFixed(1)}%</span>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"space-y-3\">\r\n                                <h5 className=\"font-medium text-green-600\">Upside Scenario ({variable.impact.high.change}%)</h5>\r\n                                <div className=\"space-y-2\">\r\n                                  <div className=\"flex justify-between text-sm\">\r\n                                    <span>Revenue Impact:</span>\r\n                                    <span className=\"font-medium text-green-600\">{formatCurrency(variable.impact.high.revenueImpact)}</span>\r\n                                  </div>\r\n                                  <div className=\"flex justify-between text-sm\">\r\n                                    <span>ROI Impact:</span>\r\n                                    <span className=\"font-medium text-green-600\">+{variable.impact.high.roiImpact.toFixed(1)}%</span>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </CardContent>\r\n                        </Card>\r\n                      ))}\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        {/* Long-term Planning Tab */}\r\n        <TabsContent value=\"planning\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                <Calendar className=\"h-5 w-5\" />\r\n                Long-term Business Planning Framework\r\n              </CardTitle>\r\n              <p className=\"text-gray-600\">Strategic roadmap and long-term vision execution</p>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-6\">\r\n                {/* Strategic Vision Timeline */}\r\n                <div className=\"space-y-4\">\r\n                  <h4 className=\"font-medium text-gray-900\">Strategic Vision Timeline (2024-2027)</h4>\r\n                  <div className=\"space-y-4\">\r\n                    {[\r\n                      {\r\n                        year: '2024',\r\n                        focus: 'Market Consolidation & Technology Integration',\r\n                        goals: ['Achieve 25% market share', 'Complete AI optimization rollout', 'Launch carbon trading platform'],\r\n                        investment: 850000000,\r\n                        targetRoi: 280\r\n                      },\r\n                      {\r\n                        year: '2025',\r\n                        focus: 'Regional Expansion & Innovation',\r\n                        goals: ['Expand to 5 new regions', 'Launch next-gen biogas technology', 'Establish R&D centers'],\r\n                        investment: 1200000000,\r\n                        targetRoi: 320\r\n                      },\r\n                      {\r\n                        year: '2026',\r\n                        focus: 'International Markets & Sustainability Leadership',\r\n                        goals: ['Enter international markets', 'Achieve carbon neutrality', 'IPO preparation'],\r\n                        investment: 1800000000,\r\n                        targetRoi: 380\r\n                      },\r\n                      {\r\n                        year: '2027',\r\n                        focus: 'Global Leadership & Ecosystem Development',\r\n                        goals: ['Global market presence', 'Complete ecosystem integration', 'Industry leadership'],\r\n                        investment: 2500000000,\r\n                        targetRoi: 450\r\n                      }\r\n                    ].map((phase) => (\r\n                      <Card key={phase.year} className=\"hover:shadow-lg transition-shadow\">\r\n                        <CardHeader>\r\n                          <div className=\"flex items-center justify-between\">\r\n                            <CardTitle className=\"text-lg\">{phase.year}: {phase.focus}</CardTitle>\r\n                            <Badge variant=\"outline\" className=\"bg-blue-100 text-blue-800\">\r\n                              {phase.targetRoi}% ROI Target\r\n                            </Badge>\r\n                          </div>\r\n                        </CardHeader>\r\n                        <CardContent>\r\n                          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\r\n                            <div>\r\n                              <div className=\"text-sm text-gray-600 mb-2\">Strategic Goals</div>\r\n                              <ul className=\"space-y-1\">\r\n                                {phase.goals.map((goal, index) => (\r\n                                  <li key={index} className=\"text-sm flex items-center gap-2\">\r\n                                    <CheckCircle className=\"h-3 w-3 text-green-600\" />\r\n                                    {goal}\r\n                                  </li>\r\n                                ))}\r\n                              </ul>\r\n                            </div>\r\n                            <div className=\"text-right\">\r\n                              <div className=\"text-sm text-gray-600\">Planned Investment</div>\r\n                              <div className=\"text-2xl font-bold text-blue-600\">\r\n                                {formatCurrency(phase.investment)}\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </CardContent>\r\n                      </Card>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Key Performance Indicators Tracking */}\r\n                <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n                  <Card>\r\n                    <CardHeader>\r\n                      <CardTitle className=\"flex items-center gap-2\">\r\n                        <Target className=\"h-5 w-5\" />\r\n                        Long-term KPI Targets\r\n                      </CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent>\r\n                      <div className=\"space-y-4\">\r\n                        {[\r\n                          { metric: 'Annual Revenue', current: '₹125Cr', target: '₹500Cr', progress: 25 },\r\n                          { metric: 'Market Share', current: '18.5%', target: '40%', progress: 46 },\r\n                          { metric: 'Geographic Presence', current: '12 states', target: '28 states', progress: 43 },\r\n                          { metric: 'Carbon Credits', current: '450 tons', target: '2,000 tons', progress: 23 },\r\n                          { metric: 'Customer Base', current: '15,000', target: '100,000', progress: 15 }\r\n                        ].map((kpi, index) => (\r\n                          <div key={index} className=\"space-y-2\">\r\n                            <div className=\"flex justify-between text-sm\">\r\n                              <span className=\"font-medium\">{kpi.metric}</span>\r\n                              <span className=\"text-gray-600\">{kpi.current} → {kpi.target}</span>\r\n                            </div>\r\n                            <div className=\"flex items-center gap-2\">\r\n                              <Progress value={kpi.progress} className=\"h-2 flex-1\" />\r\n                              <span className=\"text-sm font-medium\">{kpi.progress}%</span>\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    </CardContent>\r\n                  </Card>\r\n\r\n                  <Card>\r\n                    <CardHeader>\r\n                      <CardTitle className=\"flex items-center gap-2\">\r\n                        <Zap className=\"h-5 w-5\" />\r\n                        Strategic Success Factors\r\n                      </CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent>\r\n                      <div className=\"space-y-4\">\r\n                        {[\r\n                          { factor: 'Technology Innovation', score: 85, trend: 'up' },\r\n                          { factor: 'Market Position', score: 78, trend: 'up' },\r\n                          { factor: 'Financial Health', score: 92, trend: 'stable' },\r\n                          { factor: 'Operational Excellence', score: 87, trend: 'up' },\r\n                          { factor: 'Sustainability Leadership', score: 74, trend: 'up' },\r\n                          { factor: 'Talent & Culture', score: 81, trend: 'stable' }\r\n                        ].map((factor, index) => (\r\n                          <div key={index} className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\r\n                            <div className=\"flex items-center gap-2\">\r\n                              <span className=\"font-medium text-sm\">{factor.factor}</span>\r\n                              {factor.trend === 'up' ?\r\n                                <ArrowUpRight className=\"h-4 w-4 text-green-600\" /> :\r\n                                factor.trend === 'down' ?\r\n                                <ArrowDownRight className=\"h-4 w-4 text-red-600\" /> :\r\n                                <Minus className=\"h-4 w-4 text-gray-600\" />\r\n                              }\r\n                            </div>\r\n                            <div className=\"flex items-center gap-2\">\r\n                              <Progress value={factor.score} className=\"h-2 w-16\" />\r\n                              <span className=\"text-sm font-medium\">{factor.score}%</span>\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    </CardContent>\r\n                  </Card>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StrategicPlanning;","import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Progress } from '@/components/ui/progress';\r\nimport { Alert, AlertDescription } from '@/components/ui/alert';\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\r\nimport {\r\n  TrendingUp,\r\n  TrendingDown,\r\n  Leaf,\r\n  Globe,\r\n  Award,\r\n  Target,\r\n  AlertTriangle,\r\n  CheckCircle,\r\n  BarChart3,\r\n  PieChart,\r\n  Activity,\r\n  Shield,\r\n  RefreshCw,\r\n  Volume2,\r\n  Download,\r\n  Calculator,\r\n  Zap,\r\n  Factory,\r\n  ArrowUpRight,\r\n  ArrowDownRight,\r\n  Minus,\r\n  DollarSign,\r\n  Calendar,\r\n  Users,\r\n  Building,\r\n  Wind,\r\n  Recycle\r\n} from 'lucide-react';\r\nimport { useExecutiveAnalytics } from '../../contexts/ExecutiveAnalyticsContext';\r\n\r\ninterface CarbonCreditData {\r\n  id: string;\r\n  projectName: string;\r\n  creditType: 'VCS' | 'CDM' | 'Gold Standard' | 'CAR' | 'VER';\r\n  creditsGenerated: number;\r\n  creditsIssued: number;\r\n  creditsSold: number;\r\n  pricePerCredit: number;\r\n  revenue: number;\r\n  vintage: number;\r\n  expiryDate: string;\r\n  co2Reduced: number;\r\n  verificationStatus: 'pending' | 'verified' | 'issued' | 'retired';\r\n  buyer?: string;\r\n  additionalityScore: number;\r\n}\r\n\r\ninterface ESGMetrics {\r\n  environmental: {\r\n    carbonReduction: number;\r\n    renewableEnergyGenerated: number;\r\n    wasteReduction: number;\r\n    waterConservation: number;\r\n    biodiversityImpact: number;\r\n    certifications: string[];\r\n    score: number;\r\n  };\r\n  social: {\r\n    jobsCreated: number;\r\n    communityImpact: number;\r\n    ruralFamiliesBenefited: number;\r\n    healthImprovements: number;\r\n    educationPrograms: number;\r\n    genderEquity: number;\r\n    score: number;\r\n  };\r\n  governance: {\r\n    boardDiversity: number;\r\n    transparencyIndex: number;\r\n    ethicsScore: number;\r\n    complianceRating: number;\r\n    stakeholderEngagement: number;\r\n    dataQuality: number;\r\n    score: number;\r\n  };\r\n  overallRating: 'A+' | 'A' | 'B+' | 'B' | 'C+' | 'C' | 'D';\r\n}\r\n\r\ninterface MarketTrend {\r\n  date: string;\r\n  vcsPrice: number;\r\n  cdmPrice: number;\r\n  goldStandardPrice: number;\r\n  volume: number;\r\n  volatility: number;\r\n  marketCap: number;\r\n}\r\n\r\ninterface ComplianceFramework {\r\n  id: string;\r\n  framework: string;\r\n  status: 'compliant' | 'non-compliant' | 'partial' | 'pending';\r\n  lastAssessment: string;\r\n  nextDue: string;\r\n  score: number;\r\n  requirements: Array<{\r\n    requirement: string;\r\n    status: 'met' | 'partial' | 'not-met';\r\n    evidence: string;\r\n  }>;\r\n  riskLevel: 'low' | 'medium' | 'high';\r\n}\r\n\r\nconst CarbonAnalytics: React.FC = () => {\r\n  const { carbonMetrics, refreshData, refreshing } = useExecutiveAnalytics();\r\n\r\n  const [selectedTimeframe, setSelectedTimeframe] = useState<string>('12m');\r\n  const [selectedMetric, setSelectedMetric] = useState<string>('revenue');\r\n  const [activeTab, setActiveTab] = useState<string>('credits');\r\n  const [showProjections, setShowProjections] = useState<boolean>(false);\r\n\r\n  // Mock data for carbon analytics\r\n  const [carbonCredits] = useState<CarbonCreditData[]>([\r\n    {\r\n      id: 'cc001',\r\n      projectName: 'Biogas Plant Maharashtra',\r\n      creditType: 'VCS',\r\n      creditsGenerated: 120,\r\n      creditsIssued: 115,\r\n      creditsSold: 98,\r\n      pricePerCredit: 185000,\r\n      revenue: 18130000,\r\n      vintage: 2024,\r\n      expiryDate: '2034-12-31',\r\n      co2Reduced: 600,\r\n      verificationStatus: 'issued',\r\n      buyer: 'Green Energy Corp',\r\n      additionalityScore: 92\r\n    },\r\n    {\r\n      id: 'cc002',\r\n      projectName: 'Rural Biogas Gujarat',\r\n      creditType: 'Gold Standard',\r\n      creditsGenerated: 85,\r\n      creditsIssued: 85,\r\n      creditsSold: 75,\r\n      pricePerCredit: 210000,\r\n      revenue: 15750000,\r\n      vintage: 2024,\r\n      expiryDate: '2034-06-30',\r\n      co2Reduced: 425,\r\n      verificationStatus: 'issued',\r\n      buyer: 'Climate Solutions Ltd',\r\n      additionalityScore: 89\r\n    },\r\n    {\r\n      id: 'cc003',\r\n      projectName: 'Community Biogas Punjab',\r\n      creditType: 'CDM',\r\n      creditsGenerated: 150,\r\n      creditsIssued: 0,\r\n      creditsSold: 0,\r\n      pricePerCredit: 165000,\r\n      revenue: 0,\r\n      vintage: 2024,\r\n      expiryDate: '2034-09-30',\r\n      co2Reduced: 750,\r\n      verificationStatus: 'pending',\r\n      additionalityScore: 87\r\n    },\r\n    {\r\n      id: 'cc004',\r\n      projectName: 'Integrated Waste Management',\r\n      creditType: 'VER',\r\n      creditsGenerated: 200,\r\n      creditsIssued: 180,\r\n      creditsSold: 160,\r\n      pricePerCredit: 155000,\r\n      revenue: 24800000,\r\n      vintage: 2024,\r\n      expiryDate: '2034-03-31',\r\n      co2Reduced: 1000,\r\n      verificationStatus: 'issued',\r\n      buyer: 'Carbon Offset International',\r\n      additionalityScore: 94\r\n    }\r\n  ]);\r\n\r\n  const [esgMetrics] = useState<ESGMetrics>({\r\n    environmental: {\r\n      carbonReduction: 2775,\r\n      renewableEnergyGenerated: 45000,\r\n      wasteReduction: 125000,\r\n      waterConservation: 85000,\r\n      biodiversityImpact: 78,\r\n      certifications: ['ISO 14001', 'Gold Standard', 'VCS', 'B Corp'],\r\n      score: 87\r\n    },\r\n    social: {\r\n      jobsCreated: 1250,\r\n      communityImpact: 85,\r\n      ruralFamiliesBenefited: 12500,\r\n      healthImprovements: 78,\r\n      educationPrograms: 45,\r\n      genderEquity: 72,\r\n      score: 82\r\n    },\r\n    governance: {\r\n      boardDiversity: 68,\r\n      transparencyIndex: 91,\r\n      ethicsScore: 89,\r\n      complianceRating: 94,\r\n      stakeholderEngagement: 86,\r\n      dataQuality: 92,\r\n      score: 88\r\n    },\r\n    overallRating: 'A'\r\n  });\r\n\r\n  const [marketTrends] = useState<MarketTrend[]>([\r\n    { date: '2024-01', vcsPrice: 142000, cdmPrice: 128000, goldStandardPrice: 195000, volume: 2500000, volatility: 0.15, marketCap: 45000000000 },\r\n    { date: '2024-02', vcsPrice: 148000, cdmPrice: 135000, goldStandardPrice: 201000, volume: 2750000, volatility: 0.12, marketCap: 47500000000 },\r\n    { date: '2024-03', vcsPrice: 155000, cdmPrice: 140000, goldStandardPrice: 205000, volume: 2900000, volatility: 0.18, marketCap: 50200000000 },\r\n    { date: '2024-04', vcsPrice: 162000, cdmPrice: 145000, goldStandardPrice: 210000, volume: 3100000, volatility: 0.14, marketCap: 52800000000 },\r\n    { date: '2024-05', vcsPrice: 175000, cdmPrice: 158000, goldStandardPrice: 218000, volume: 3350000, volatility: 0.16, marketCap: 55600000000 },\r\n    { date: '2024-06', vcsPrice: 185000, cdmPrice: 165000, goldStandardPrice: 225000, volume: 3500000, volatility: 0.11, marketCap: 58200000000 }\r\n  ]);\r\n\r\n  const [complianceFrameworks] = useState<ComplianceFramework[]>([\r\n    {\r\n      id: 'tcfd',\r\n      framework: 'TCFD (Task Force on Climate-related Financial Disclosures)',\r\n      status: 'compliant',\r\n      lastAssessment: '2024-03-15',\r\n      nextDue: '2025-03-15',\r\n      score: 92,\r\n      requirements: [\r\n        { requirement: 'Climate Risk Governance', status: 'met', evidence: 'Board climate committee established' },\r\n        { requirement: 'Strategy Disclosure', status: 'met', evidence: 'Climate strategy published' },\r\n        { requirement: 'Risk Management', status: 'met', evidence: 'Climate risk framework implemented' },\r\n        { requirement: 'Metrics & Targets', status: 'met', evidence: 'Net-zero targets set' }\r\n      ],\r\n      riskLevel: 'low'\r\n    },\r\n    {\r\n      id: 'ghg',\r\n      framework: 'GHG Protocol Corporate Standard',\r\n      status: 'compliant',\r\n      lastAssessment: '2024-02-28',\r\n      nextDue: '2025-02-28',\r\n      score: 89,\r\n      requirements: [\r\n        { requirement: 'Scope 1 Emissions', status: 'met', evidence: 'Direct emissions calculated' },\r\n        { requirement: 'Scope 2 Emissions', status: 'met', evidence: 'Indirect emissions reported' },\r\n        { requirement: 'Scope 3 Emissions', status: 'partial', evidence: 'Value chain assessment ongoing' },\r\n        { requirement: 'Verification', status: 'met', evidence: 'Third-party verified' }\r\n      ],\r\n      riskLevel: 'low'\r\n    },\r\n    {\r\n      id: 'science_targets',\r\n      framework: 'Science Based Targets initiative (SBTi)',\r\n      status: 'pending',\r\n      lastAssessment: '2024-01-15',\r\n      nextDue: '2024-07-15',\r\n      score: 75,\r\n      requirements: [\r\n        { requirement: 'Target Setting', status: 'met', evidence: 'Targets submitted for validation' },\r\n        { requirement: 'Coverage', status: 'partial', evidence: '85% scope 1&2 coverage achieved' },\r\n        { requirement: 'Timeline', status: 'met', evidence: 'Net-zero by 2050 committed' },\r\n        { requirement: 'Validation', status: 'not-met', evidence: 'Awaiting SBTi approval' }\r\n      ],\r\n      riskLevel: 'medium'\r\n    },\r\n    {\r\n      id: 'cdp',\r\n      framework: 'CDP Climate Change',\r\n      status: 'compliant',\r\n      lastAssessment: '2024-04-30',\r\n      nextDue: '2025-04-30',\r\n      score: 85,\r\n      requirements: [\r\n        { requirement: 'Climate Governance', status: 'met', evidence: 'A- rating achieved' },\r\n        { requirement: 'Risk & Opportunity', status: 'met', evidence: 'Comprehensive assessment' },\r\n        { requirement: 'Business Strategy', status: 'met', evidence: 'Climate integration documented' },\r\n        { requirement: 'Targets & Performance', status: 'met', evidence: 'Progress tracking implemented' }\r\n      ],\r\n      riskLevel: 'low'\r\n    }\r\n  ]);\r\n\r\n  const formatCurrency = (value: number): string => {\r\n    if (value >= 10000000) {\r\n      return `₹${(value / 10000000).toFixed(1)}Cr`;\r\n    } else if (value >= 100000) {\r\n      return `₹${(value / 100000).toFixed(1)}L`;\r\n    }\r\n    return `₹${value.toLocaleString()}`;\r\n  };\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'verified':\r\n      case 'issued':\r\n      case 'compliant':\r\n      case 'met':\r\n        return 'bg-green-100 text-green-800';\r\n      case 'pending':\r\n      case 'partial':\r\n        return 'bg-yellow-100 text-yellow-800';\r\n      case 'non-compliant':\r\n      case 'not-met':\r\n        return 'bg-red-100 text-red-800';\r\n      default:\r\n        return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  const getESGRatingColor = (rating: string) => {\r\n    switch (rating) {\r\n      case 'A+':\r\n      case 'A':\r\n        return 'bg-green-100 text-green-800 border-green-300';\r\n      case 'B+':\r\n      case 'B':\r\n        return 'bg-blue-100 text-blue-800 border-blue-300';\r\n      case 'C+':\r\n      case 'C':\r\n        return 'bg-yellow-100 text-yellow-800 border-yellow-300';\r\n      case 'D':\r\n        return 'bg-red-100 text-red-800 border-red-300';\r\n      default:\r\n        return 'bg-gray-100 text-gray-800 border-gray-300';\r\n    }\r\n  };\r\n\r\n  const getCreditTypeIcon = (type: string) => {\r\n    switch (type) {\r\n      case 'VCS':\r\n        return <Shield className=\"h-4 w-4\" />;\r\n      case 'Gold Standard':\r\n        return <Award className=\"h-4 w-4\" />;\r\n      case 'CDM':\r\n        return <Globe className=\"h-4 w-4\" />;\r\n      case 'CAR':\r\n        return <Factory className=\"h-4 w-4\" />;\r\n      case 'VER':\r\n        return <Recycle className=\"h-4 w-4\" />;\r\n      default:\r\n        return <Leaf className=\"h-4 w-4\" />;\r\n    }\r\n  };\r\n\r\n  const speakCarbonSummary = () => {\r\n    const totalCredits = carbonCredits.reduce((sum, cc) => sum + cc.creditsGenerated, 0);\r\n    const totalRevenue = carbonCredits.reduce((sum, cc) => sum + cc.revenue, 0);\r\n    const avgPrice = totalRevenue / carbonCredits.reduce((sum, cc) => sum + cc.creditsSold, 0);\r\n\r\n    const summaryText = `Carbon Analytics Summary: Generated ${totalCredits} carbon credits with total revenue of ${formatCurrency(totalRevenue)}. Average price per credit is ${formatCurrency(avgPrice)}. ESG rating is ${esgMetrics.overallRating}. Environmental score is ${esgMetrics.environmental.score}%, social score is ${esgMetrics.social.score}%, and governance score is ${esgMetrics.governance.score}%.`;\r\n\r\n    if ('speechSynthesis' in window) {\r\n      const utterance = new SpeechSynthesisUtterance(summaryText);\r\n      speechSynthesis.speak(utterance);\r\n    }\r\n  };\r\n\r\n  const exportCarbonReport = () => {\r\n    const reportData = {\r\n      timestamp: new Date().toISOString(),\r\n      carbonCredits,\r\n      esgMetrics,\r\n      marketTrends,\r\n      complianceFrameworks,\r\n      summary: {\r\n        totalCredits: carbonCredits.reduce((sum, cc) => sum + cc.creditsGenerated, 0),\r\n        totalRevenue: carbonCredits.reduce((sum, cc) => sum + cc.revenue, 0),\r\n        co2Reduced: carbonCredits.reduce((sum, cc) => sum + cc.co2Reduced, 0),\r\n        overallESGRating: esgMetrics.overallRating\r\n      }\r\n    };\r\n\r\n    const blob = new Blob([JSON.stringify(reportData, null, 2)], { type: 'application/json' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = `carbon-analytics-report-${new Date().toISOString().split('T')[0]}.json`;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h2 className=\"text-2xl font-bold text-gray-900\">Carbon Analytics & ESG Reporting</h2>\r\n          <p className=\"text-gray-600\">Comprehensive carbon credit tracking, environmental impact analysis, and ESG compliance</p>\r\n        </div>\r\n        <div className=\"flex items-center gap-3\">\r\n          <Button\r\n            onClick={speakCarbonSummary}\r\n            variant=\"outline\"\r\n            size=\"sm\"\r\n            className=\"hidden sm:flex\"\r\n          >\r\n            <Volume2 className=\"h-4 w-4 mr-2\" />\r\n            Listen\r\n          </Button>\r\n          <Button\r\n            onClick={exportCarbonReport}\r\n            variant=\"outline\"\r\n            size=\"sm\"\r\n          >\r\n            <Download className=\"h-4 w-4 mr-2\" />\r\n            Export\r\n          </Button>\r\n          <Button\r\n            onClick={refreshData}\r\n            variant=\"outline\"\r\n            size=\"sm\"\r\n            disabled={refreshing}\r\n          >\r\n            <RefreshCw className={`h-4 w-4 ${refreshing ? 'animate-spin' : ''} mr-2`} />\r\n            Refresh\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Carbon Overview Cards */}\r\n      <div className=\"grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-4\">\r\n        <Card className=\"hover:shadow-lg transition-shadow\">\r\n          <CardContent className=\"p-6\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm text-gray-600\">Total Credits Generated</p>\r\n                <p className=\"text-2xl font-bold text-green-600\">\r\n                  {carbonCredits.reduce((sum, cc) => sum + cc.creditsGenerated, 0)}\r\n                </p>\r\n                <p className=\"text-xs text-gray-500 mt-1\">\r\n                  {carbonCredits.reduce((sum, cc) => sum + cc.co2Reduced, 0)} tons CO₂\r\n                </p>\r\n              </div>\r\n              <div className=\"p-3 bg-green-100 rounded-lg\">\r\n                <Leaf className=\"h-6 w-6 text-green-600\" />\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card className=\"hover:shadow-lg transition-shadow\">\r\n          <CardContent className=\"p-6\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm text-gray-600\">Carbon Revenue</p>\r\n                <p className=\"text-2xl font-bold text-blue-600\">\r\n                  {formatCurrency(carbonCredits.reduce((sum, cc) => sum + cc.revenue, 0))}\r\n                </p>\r\n                <p className=\"text-xs text-gray-500 mt-1\">\r\n                  +22% from last quarter\r\n                </p>\r\n              </div>\r\n              <div className=\"p-3 bg-blue-100 rounded-lg\">\r\n                <DollarSign className=\"h-6 w-6 text-blue-600\" />\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card className=\"hover:shadow-lg transition-shadow\">\r\n          <CardContent className=\"p-6\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm text-gray-600\">ESG Rating</p>\r\n                <p className={`text-2xl font-bold border-2 px-3 py-1 rounded-lg inline-block ${getESGRatingColor(esgMetrics.overallRating)}`}>\r\n                  {esgMetrics.overallRating}\r\n                </p>\r\n                <p className=\"text-xs text-gray-500 mt-1\">\r\n                  Top 10% in industry\r\n                </p>\r\n              </div>\r\n              <div className=\"p-3 bg-purple-100 rounded-lg\">\r\n                <Award className=\"h-6 w-6 text-purple-600\" />\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card className=\"hover:shadow-lg transition-shadow\">\r\n          <CardContent className=\"p-6\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm text-gray-600\">Market Price Avg</p>\r\n                <p className=\"text-2xl font-bold text-orange-600\">\r\n                  {formatCurrency(marketTrends[marketTrends.length - 1]?.vcsPrice || 0)}\r\n                </p>\r\n                <p className=\"text-xs text-gray-500 mt-1 flex items-center\">\r\n                  <ArrowUpRight className=\"h-3 w-3 text-green-600 mr-1\" />\r\n                  +18% this month\r\n                </p>\r\n              </div>\r\n              <div className=\"p-3 bg-orange-100 rounded-lg\">\r\n                <TrendingUp className=\"h-6 w-6 text-orange-600\" />\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      <Tabs value={activeTab} onValueChange={setActiveTab} className=\"space-y-6\">\r\n        <TabsList className=\"grid w-full grid-cols-5\">\r\n          <TabsTrigger value=\"credits\">Carbon Credits</TabsTrigger>\r\n          <TabsTrigger value=\"esg\">ESG Metrics</TabsTrigger>\r\n          <TabsTrigger value=\"compliance\">Compliance</TabsTrigger>\r\n          <TabsTrigger value=\"market\">Market Analysis</TabsTrigger>\r\n          <TabsTrigger value=\"projections\">Projections</TabsTrigger>\r\n        </TabsList>\r\n\r\n        {/* Carbon Credits Tab */}\r\n        <TabsContent value=\"credits\" className=\"space-y-6\">\r\n          <div className=\"grid grid-cols-1 gap-6\">\r\n            {/* Credit Portfolio Overview */}\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center gap-2\">\r\n                  <Leaf className=\"h-5 w-5\" />\r\n                  Carbon Credit Portfolio Management\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"space-y-6\">\r\n                  {carbonCredits.map((credit) => (\r\n                    <Card key={credit.id} className=\"hover:shadow-lg transition-shadow\">\r\n                      <CardHeader>\r\n                        <div className=\"flex items-start justify-between\">\r\n                          <div>\r\n                            <CardTitle className=\"text-lg\">{credit.projectName}</CardTitle>\r\n                            <div className=\"flex items-center gap-2 mt-2\">\r\n                              <Badge\r\n                                variant=\"outline\"\r\n                                className=\"flex items-center gap-1\"\r\n                              >\r\n                                {getCreditTypeIcon(credit.creditType)}\r\n                                {credit.creditType}\r\n                              </Badge>\r\n                              <Badge\r\n                                variant=\"outline\"\r\n                                className={getStatusColor(credit.verificationStatus)}\r\n                              >\r\n                                {credit.verificationStatus}\r\n                              </Badge>\r\n                              <Badge variant=\"outline\">\r\n                                Vintage {credit.vintage}\r\n                              </Badge>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"text-right\">\r\n                            <div className=\"text-2xl font-bold text-green-600\">\r\n                              {credit.creditsGenerated}\r\n                            </div>\r\n                            <div className=\"text-sm text-gray-600\">Credits Generated</div>\r\n                          </div>\r\n                        </div>\r\n                      </CardHeader>\r\n                      <CardContent className=\"space-y-4\">\r\n                        <div className=\"grid grid-cols-2 lg:grid-cols-4 gap-4\">\r\n                          <div className=\"text-center p-3 bg-blue-50 rounded-lg\">\r\n                            <div className=\"text-lg font-bold text-blue-600\">{credit.creditsIssued}</div>\r\n                            <div className=\"text-xs text-blue-700\">Issued</div>\r\n                          </div>\r\n                          <div className=\"text-center p-3 bg-green-50 rounded-lg\">\r\n                            <div className=\"text-lg font-bold text-green-600\">{credit.creditsSold}</div>\r\n                            <div className=\"text-xs text-green-700\">Sold</div>\r\n                          </div>\r\n                          <div className=\"text-center p-3 bg-purple-50 rounded-lg\">\r\n                            <div className=\"text-lg font-bold text-purple-600\">{formatCurrency(credit.pricePerCredit)}</div>\r\n                            <div className=\"text-xs text-purple-700\">Price/Credit</div>\r\n                          </div>\r\n                          <div className=\"text-center p-3 bg-orange-50 rounded-lg\">\r\n                            <div className=\"text-lg font-bold text-orange-600\">{formatCurrency(credit.revenue)}</div>\r\n                            <div className=\"text-xs text-orange-700\">Revenue</div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-4 text-sm\">\r\n                          <div>\r\n                            <span className=\"text-gray-600\">CO₂ Reduction:</span>\r\n                            <div className=\"font-medium\">{credit.co2Reduced} tons</div>\r\n                          </div>\r\n                          <div>\r\n                            <span className=\"text-gray-600\">Additionality Score:</span>\r\n                            <div className=\"font-medium\">{credit.additionalityScore}%</div>\r\n                          </div>\r\n                          <div>\r\n                            <span className=\"text-gray-600\">Expires:</span>\r\n                            <div className=\"font-medium\">{new Date(credit.expiryDate).toLocaleDateString()}</div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        {credit.buyer && (\r\n                          <div className=\"text-sm\">\r\n                            <span className=\"text-gray-600\">Buyer:</span>\r\n                            <span className=\"font-medium ml-2\">{credit.buyer}</span>\r\n                          </div>\r\n                        )}\r\n\r\n                        <div className=\"flex items-center justify-between pt-3 border-t border-gray-200\">\r\n                          <div className=\"text-sm\">\r\n                            <span className=\"text-gray-600\">Utilization:</span>\r\n                            <span className=\"font-medium ml-2\">\r\n                              {Math.round((credit.creditsSold / credit.creditsGenerated) * 100)}%\r\n                            </span>\r\n                          </div>\r\n                          <Button size=\"sm\" variant=\"outline\">\r\n                            View Details\r\n                          </Button>\r\n                        </div>\r\n                      </CardContent>\r\n                    </Card>\r\n                  ))}\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            {/* Credit Type Analysis */}\r\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n              <Card>\r\n                <CardHeader>\r\n                  <CardTitle className=\"flex items-center gap-2\">\r\n                    <PieChart className=\"h-5 w-5\" />\r\n                    Credit Type Distribution\r\n                  </CardTitle>\r\n                </CardHeader>\r\n                <CardContent>\r\n                  <div className=\"space-y-4\">\r\n                    {Array.from(new Set(carbonCredits.map(cc => cc.creditType))).map(type => {\r\n                      const typeCredits = carbonCredits.filter(cc => cc.creditType === type);\r\n                      const totalCredits = typeCredits.reduce((sum, cc) => sum + cc.creditsGenerated, 0);\r\n                      const totalRevenue = typeCredits.reduce((sum, cc) => sum + cc.revenue, 0);\r\n                      const percentage = (totalCredits / carbonCredits.reduce((sum, cc) => sum + cc.creditsGenerated, 0)) * 100;\r\n\r\n                      return (\r\n                        <div key={type} className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\r\n                          <div className=\"flex items-center gap-3\">\r\n                            <div className=\"p-2 bg-blue-100 rounded\">\r\n                              {getCreditTypeIcon(type)}\r\n                            </div>\r\n                            <div>\r\n                              <div className=\"font-medium\">{type}</div>\r\n                              <div className=\"text-sm text-gray-600\">{typeCredits.length} projects</div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"text-right\">\r\n                            <div className=\"font-medium\">{totalCredits} credits</div>\r\n                            <div className=\"text-sm text-gray-600\">{formatCurrency(totalRevenue)}</div>\r\n                            <div className=\"text-xs text-blue-600\">{percentage.toFixed(1)}%</div>\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n\r\n              <Card>\r\n                <CardHeader>\r\n                  <CardTitle className=\"flex items-center gap-2\">\r\n                    <Activity className=\"h-5 w-5\" />\r\n                    Performance Metrics\r\n                  </CardTitle>\r\n                </CardHeader>\r\n                <CardContent>\r\n                  <div className=\"space-y-4\">\r\n                    <div className=\"space-y-2\">\r\n                      <div className=\"flex justify-between text-sm\">\r\n                        <span>Average Additionality Score</span>\r\n                        <span>{(carbonCredits.reduce((sum, cc) => sum + cc.additionalityScore, 0) / carbonCredits.length).toFixed(1)}%</span>\r\n                      </div>\r\n                      <Progress value={carbonCredits.reduce((sum, cc) => sum + cc.additionalityScore, 0) / carbonCredits.length} className=\"h-2\" />\r\n                    </div>\r\n\r\n                    <div className=\"space-y-2\">\r\n                      <div className=\"flex justify-between text-sm\">\r\n                        <span>Credit Issuance Rate</span>\r\n                        <span>{Math.round((carbonCredits.reduce((sum, cc) => sum + cc.creditsIssued, 0) / carbonCredits.reduce((sum, cc) => sum + cc.creditsGenerated, 0)) * 100)}%</span>\r\n                      </div>\r\n                      <Progress value={(carbonCredits.reduce((sum, cc) => sum + cc.creditsIssued, 0) / carbonCredits.reduce((sum, cc) => sum + cc.creditsGenerated, 0)) * 100} className=\"h-2\" />\r\n                    </div>\r\n\r\n                    <div className=\"space-y-2\">\r\n                      <div className=\"flex justify-between text-sm\">\r\n                        <span>Sales Conversion Rate</span>\r\n                        <span>{Math.round((carbonCredits.reduce((sum, cc) => sum + cc.creditsSold, 0) / carbonCredits.reduce((sum, cc) => sum + cc.creditsIssued, 0)) * 100)}%</span>\r\n                      </div>\r\n                      <Progress value={(carbonCredits.reduce((sum, cc) => sum + cc.creditsSold, 0) / carbonCredits.reduce((sum, cc) => sum + cc.creditsIssued, 0)) * 100} className=\"h-2\" />\r\n                    </div>\r\n\r\n                    <div className=\"pt-3 border-t border-gray-200\">\r\n                      <div className=\"grid grid-cols-2 gap-4 text-center\">\r\n                        <div className=\"p-3 bg-green-50 rounded\">\r\n                          <div className=\"text-lg font-bold text-green-600\">\r\n                            {formatCurrency(carbonCredits.reduce((sum, cc) => sum + cc.revenue, 0) / carbonCredits.reduce((sum, cc) => sum + cc.creditsSold, 0))}\r\n                          </div>\r\n                          <div className=\"text-xs text-green-700\">Avg Price/Credit</div>\r\n                        </div>\r\n                        <div className=\"p-3 bg-blue-50 rounded\">\r\n                          <div className=\"text-lg font-bold text-blue-600\">\r\n                            {carbonCredits.reduce((sum, cc) => sum + cc.co2Reduced, 0)}\r\n                          </div>\r\n                          <div className=\"text-xs text-blue-700\">Total CO₂ Reduced</div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n            </div>\r\n          </div>\r\n        </TabsContent>\r\n\r\n        {/* ESG Metrics Tab */}\r\n        <TabsContent value=\"esg\" className=\"space-y-6\">\r\n          <div className=\"grid grid-cols-1 gap-6\">\r\n            {/* ESG Overview */}\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center gap-2\">\r\n                  <Award className=\"h-5 w-5\" />\r\n                  ESG Performance Dashboard\r\n                </CardTitle>\r\n                <div className=\"flex items-center gap-4 mt-4\">\r\n                  <div className={`text-3xl font-bold border-2 px-4 py-2 rounded-lg ${getESGRatingColor(esgMetrics.overallRating)}`}>\r\n                    {esgMetrics.overallRating}\r\n                  </div>\r\n                  <div>\r\n                    <div className=\"text-sm text-gray-600\">Overall ESG Rating</div>\r\n                    <div className=\"text-sm text-gray-500\">Industry ranking: Top 10%</div>\r\n                  </div>\r\n                </div>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\r\n                  {/* Environmental */}\r\n                  <Card>\r\n                    <CardHeader>\r\n                      <CardTitle className=\"flex items-center gap-2 text-green-700\">\r\n                        <Leaf className=\"h-5 w-5\" />\r\n                        Environmental\r\n                      </CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent className=\"space-y-4\">\r\n                      <div className=\"text-center\">\r\n                        <div className=\"text-3xl font-bold text-green-600\">{esgMetrics.environmental.score}</div>\r\n                        <div className=\"text-sm text-gray-600\">Score</div>\r\n                      </div>\r\n\r\n                      <div className=\"space-y-3\">\r\n                        <div className=\"flex justify-between items-center\">\r\n                          <span className=\"text-sm text-gray-600\">Carbon Reduction</span>\r\n                          <span className=\"font-medium\">{esgMetrics.environmental.carbonReduction} tons</span>\r\n                        </div>\r\n                        <div className=\"flex justify-between items-center\">\r\n                          <span className=\"text-sm text-gray-600\">Renewable Energy</span>\r\n                          <span className=\"font-medium\">{esgMetrics.environmental.renewableEnergyGenerated.toLocaleString()} kWh</span>\r\n                        </div>\r\n                        <div className=\"flex justify-between items-center\">\r\n                          <span className=\"text-sm text-gray-600\">Waste Reduction</span>\r\n                          <span className=\"font-medium\">{esgMetrics.environmental.wasteReduction.toLocaleString()} kg</span>\r\n                        </div>\r\n                        <div className=\"flex justify-between items-center\">\r\n                          <span className=\"text-sm text-gray-600\">Water Conservation</span>\r\n                          <span className=\"font-medium\">{esgMetrics.environmental.waterConservation.toLocaleString()} L</span>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div>\r\n                        <div className=\"text-sm text-gray-600 mb-2\">Certifications</div>\r\n                        <div className=\"flex flex-wrap gap-1\">\r\n                          {esgMetrics.environmental.certifications.map((cert, index) => (\r\n                            <Badge key={index} variant=\"outline\" className=\"text-xs\">\r\n                              {cert}\r\n                            </Badge>\r\n                          ))}\r\n                        </div>\r\n                      </div>\r\n                    </CardContent>\r\n                  </Card>\r\n\r\n                  {/* Social */}\r\n                  <Card>\r\n                    <CardHeader>\r\n                      <CardTitle className=\"flex items-center gap-2 text-blue-700\">\r\n                        <Users className=\"h-5 w-5\" />\r\n                        Social\r\n                      </CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent className=\"space-y-4\">\r\n                      <div className=\"text-center\">\r\n                        <div className=\"text-3xl font-bold text-blue-600\">{esgMetrics.social.score}</div>\r\n                        <div className=\"text-sm text-gray-600\">Score</div>\r\n                      </div>\r\n\r\n                      <div className=\"space-y-3\">\r\n                        <div className=\"flex justify-between items-center\">\r\n                          <span className=\"text-sm text-gray-600\">Jobs Created</span>\r\n                          <span className=\"font-medium\">{esgMetrics.social.jobsCreated.toLocaleString()}</span>\r\n                        </div>\r\n                        <div className=\"flex justify-between items-center\">\r\n                          <span className=\"text-sm text-gray-600\">Families Benefited</span>\r\n                          <span className=\"font-medium\">{esgMetrics.social.ruralFamiliesBenefited.toLocaleString()}</span>\r\n                        </div>\r\n                        <div className=\"flex justify-between items-center\">\r\n                          <span className=\"text-sm text-gray-600\">Health Improvements</span>\r\n                          <span className=\"font-medium\">{esgMetrics.social.healthImprovements}%</span>\r\n                        </div>\r\n                        <div className=\"flex justify-between items-center\">\r\n                          <span className=\"text-sm text-gray-600\">Education Programs</span>\r\n                          <span className=\"font-medium\">{esgMetrics.social.educationPrograms}</span>\r\n                        </div>\r\n                        <div className=\"flex justify-between items-center\">\r\n                          <span className=\"text-sm text-gray-600\">Gender Equity</span>\r\n                          <span className=\"font-medium\">{esgMetrics.social.genderEquity}%</span>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"space-y-2\">\r\n                        <div className=\"flex justify-between text-sm\">\r\n                          <span>Community Impact</span>\r\n                          <span>{esgMetrics.social.communityImpact}%</span>\r\n                        </div>\r\n                        <Progress value={esgMetrics.social.communityImpact} className=\"h-2\" />\r\n                      </div>\r\n                    </CardContent>\r\n                  </Card>\r\n\r\n                  {/* Governance */}\r\n                  <Card>\r\n                    <CardHeader>\r\n                      <CardTitle className=\"flex items-center gap-2 text-purple-700\">\r\n                        <Building className=\"h-5 w-5\" />\r\n                        Governance\r\n                      </CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent className=\"space-y-4\">\r\n                      <div className=\"text-center\">\r\n                        <div className=\"text-3xl font-bold text-purple-600\">{esgMetrics.governance.score}</div>\r\n                        <div className=\"text-sm text-gray-600\">Score</div>\r\n                      </div>\r\n\r\n                      <div className=\"space-y-3\">\r\n                        <div className=\"space-y-2\">\r\n                          <div className=\"flex justify-between text-sm\">\r\n                            <span>Board Diversity</span>\r\n                            <span>{esgMetrics.governance.boardDiversity}%</span>\r\n                          </div>\r\n                          <Progress value={esgMetrics.governance.boardDiversity} className=\"h-1\" />\r\n                        </div>\r\n\r\n                        <div className=\"space-y-2\">\r\n                          <div className=\"flex justify-between text-sm\">\r\n                            <span>Transparency Index</span>\r\n                            <span>{esgMetrics.governance.transparencyIndex}%</span>\r\n                          </div>\r\n                          <Progress value={esgMetrics.governance.transparencyIndex} className=\"h-1\" />\r\n                        </div>\r\n\r\n                        <div className=\"space-y-2\">\r\n                          <div className=\"flex justify-between text-sm\">\r\n                            <span>Ethics Score</span>\r\n                            <span>{esgMetrics.governance.ethicsScore}%</span>\r\n                          </div>\r\n                          <Progress value={esgMetrics.governance.ethicsScore} className=\"h-1\" />\r\n                        </div>\r\n\r\n                        <div className=\"space-y-2\">\r\n                          <div className=\"flex justify-between text-sm\">\r\n                            <span>Compliance Rating</span>\r\n                            <span>{esgMetrics.governance.complianceRating}%</span>\r\n                          </div>\r\n                          <Progress value={esgMetrics.governance.complianceRating} className=\"h-1\" />\r\n                        </div>\r\n\r\n                        <div className=\"space-y-2\">\r\n                          <div className=\"flex justify-between text-sm\">\r\n                            <span>Data Quality</span>\r\n                            <span>{esgMetrics.governance.dataQuality}%</span>\r\n                          </div>\r\n                          <Progress value={esgMetrics.governance.dataQuality} className=\"h-1\" />\r\n                        </div>\r\n                      </div>\r\n                    </CardContent>\r\n                  </Card>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            {/* ESG Initiatives & Progress */}\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center gap-2\">\r\n                  <Target className=\"h-5 w-5\" />\r\n                  ESG Initiatives & Targets\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"space-y-6\">\r\n                  {[\r\n                    {\r\n                      category: 'Environmental',\r\n                      initiatives: [\r\n                        { name: 'Carbon Neutrality by 2030', progress: 68, target: '100% by 2030', status: 'on-track' },\r\n                        { name: 'Renewable Energy Adoption', progress: 85, target: '100% by 2026', status: 'ahead' },\r\n                        { name: 'Waste Reduction Program', progress: 72, target: '50% reduction by 2025', status: 'on-track' },\r\n                        { name: 'Water Conservation Initiative', progress: 58, target: '30% reduction by 2025', status: 'behind' }\r\n                      ]\r\n                    },\r\n                    {\r\n                      category: 'Social',\r\n                      initiatives: [\r\n                        { name: 'Rural Employment Generation', progress: 78, target: '2,000 jobs by 2025', status: 'on-track' },\r\n                        { name: 'Women Empowerment Program', progress: 65, target: '40% female workforce', status: 'on-track' },\r\n                        { name: 'Community Health Initiatives', progress: 82, target: '50 health centers', status: 'ahead' },\r\n                        { name: 'Educational Scholarships', progress: 45, target: '1,000 scholarships', status: 'behind' }\r\n                      ]\r\n                    },\r\n                    {\r\n                      category: 'Governance',\r\n                      initiatives: [\r\n                        { name: 'Board Independence', progress: 75, target: '80% independence', status: 'on-track' },\r\n                        { name: 'Transparency Reporting', progress: 90, target: 'Quarterly reports', status: 'ahead' },\r\n                        { name: 'Ethics Training Program', progress: 88, target: '100% completion', status: 'on-track' },\r\n                        { name: 'Stakeholder Engagement', progress: 70, target: 'Monthly sessions', status: 'on-track' }\r\n                      ]\r\n                    }\r\n                  ].map((category) => (\r\n                    <div key={category.category}>\r\n                      <h4 className=\"font-medium text-gray-900 mb-3\">{category.category} Initiatives</h4>\r\n                      <div className=\"space-y-3\">\r\n                        {category.initiatives.map((initiative, index) => (\r\n                          <div key={index} className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\r\n                            <div className=\"flex-1\">\r\n                              <div className=\"flex items-center gap-2\">\r\n                                <span className=\"font-medium text-sm\">{initiative.name}</span>\r\n                                <Badge\r\n                                  variant=\"outline\"\r\n                                  className={\r\n                                    initiative.status === 'ahead' ? 'bg-green-100 text-green-800' :\r\n                                    initiative.status === 'on-track' ? 'bg-blue-100 text-blue-800' :\r\n                                    'bg-yellow-100 text-yellow-800'\r\n                                  }\r\n                                >\r\n                                  {initiative.status}\r\n                                </Badge>\r\n                              </div>\r\n                              <div className=\"text-xs text-gray-600 mt-1\">{initiative.target}</div>\r\n                            </div>\r\n                            <div className=\"flex items-center gap-3\">\r\n                              <div className=\"w-24\">\r\n                                <Progress value={initiative.progress} className=\"h-2\" />\r\n                              </div>\r\n                              <span className=\"text-sm font-medium w-12 text-right\">{initiative.progress}%</span>\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </TabsContent>\r\n\r\n        {/* Compliance Tab */}\r\n        <TabsContent value=\"compliance\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                <Shield className=\"h-5 w-5\" />\r\n                Regulatory Compliance & Risk Assessment\r\n              </CardTitle>\r\n              <p className=\"text-gray-600\">Comprehensive compliance tracking across all relevant frameworks</p>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-6\">\r\n                {/* Compliance Overview */}\r\n                <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-4\">\r\n                  {['compliant', 'partial', 'pending', 'non-compliant'].map(status => {\r\n                    const frameworks = complianceFrameworks.filter(f => f.status === status);\r\n                    return (\r\n                      <div key={status} className={`text-center p-4 rounded-lg ${\r\n                        status === 'compliant' ? 'bg-green-100' :\r\n                        status === 'partial' ? 'bg-yellow-100' :\r\n                        status === 'pending' ? 'bg-blue-100' :\r\n                        'bg-red-100'\r\n                      }`}>\r\n                        <div className={`text-2xl font-bold ${\r\n                          status === 'compliant' ? 'text-green-600' :\r\n                          status === 'partial' ? 'text-yellow-600' :\r\n                          status === 'pending' ? 'text-blue-600' :\r\n                          'text-red-600'\r\n                        }`}>\r\n                          {frameworks.length}\r\n                        </div>\r\n                        <div className={`text-sm ${\r\n                          status === 'compliant' ? 'text-green-700' :\r\n                          status === 'partial' ? 'text-yellow-700' :\r\n                          status === 'pending' ? 'text-blue-700' :\r\n                          'text-red-700'\r\n                        }`}>\r\n                          {status.charAt(0).toUpperCase() + status.slice(1)}\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n\r\n                {/* Detailed Compliance Cards */}\r\n                <div className=\"space-y-4\">\r\n                  {complianceFrameworks.map((framework) => (\r\n                    <Card key={framework.id} className=\"hover:shadow-lg transition-shadow\">\r\n                      <CardHeader>\r\n                        <div className=\"flex items-start justify-between\">\r\n                          <div className=\"flex-1\">\r\n                            <CardTitle className=\"text-lg\">{framework.framework}</CardTitle>\r\n                            <div className=\"flex items-center gap-2 mt-2\">\r\n                              <Badge\r\n                                variant=\"outline\"\r\n                                className={getStatusColor(framework.status)}\r\n                              >\r\n                                {framework.status}\r\n                              </Badge>\r\n                              <Badge\r\n                                variant=\"outline\"\r\n                                className={getStatusColor(framework.riskLevel)}\r\n                              >\r\n                                {framework.riskLevel} risk\r\n                              </Badge>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"text-right\">\r\n                            <div className=\"text-2xl font-bold text-blue-600\">{framework.score}</div>\r\n                            <div className=\"text-sm text-gray-600\">Compliance Score</div>\r\n                          </div>\r\n                        </div>\r\n                      </CardHeader>\r\n                      <CardContent className=\"space-y-4\">\r\n                        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4 text-sm\">\r\n                          <div>\r\n                            <span className=\"text-gray-600\">Last Assessment:</span>\r\n                            <div className=\"font-medium\">{new Date(framework.lastAssessment).toLocaleDateString()}</div>\r\n                          </div>\r\n                          <div>\r\n                            <span className=\"text-gray-600\">Next Due:</span>\r\n                            <div className=\"font-medium\">{new Date(framework.nextDue).toLocaleDateString()}</div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div>\r\n                          <div className=\"text-sm font-medium text-gray-900 mb-3\">Requirements Status</div>\r\n                          <div className=\"space-y-2\">\r\n                            {framework.requirements.map((req, index) => (\r\n                              <div key={index} className=\"flex items-center justify-between p-2 bg-gray-50 rounded\">\r\n                                <div className=\"flex-1\">\r\n                                  <div className=\"text-sm font-medium\">{req.requirement}</div>\r\n                                  <div className=\"text-xs text-gray-600\">{req.evidence}</div>\r\n                                </div>\r\n                                <Badge\r\n                                  variant=\"outline\"\r\n                                  className={getStatusColor(req.status)}\r\n                                >\r\n                                  {req.status}\r\n                                </Badge>\r\n                              </div>\r\n                            ))}\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"flex items-center justify-between pt-3 border-t border-gray-200\">\r\n                          <div className=\"text-sm\">\r\n                            <span className=\"text-gray-600\">Overall Progress:</span>\r\n                            <span className=\"font-medium ml-2\">\r\n                              {Math.round((framework.requirements.filter(r => r.status === 'met').length / framework.requirements.length) * 100)}%\r\n                            </span>\r\n                          </div>\r\n                          <Button size=\"sm\" variant=\"outline\">\r\n                            View Report\r\n                          </Button>\r\n                        </div>\r\n                      </CardContent>\r\n                    </Card>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        {/* Market Analysis Tab */}\r\n        <TabsContent value=\"market\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                <BarChart3 className=\"h-5 w-5\" />\r\n                Carbon Market Trends & Analysis\r\n              </CardTitle>\r\n              <p className=\"text-gray-600\">Real-time market data and trend analysis for carbon credit pricing</p>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-6\">\r\n                {/* Market Overview */}\r\n                <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-4\">\r\n                  <div className=\"text-center p-4 bg-blue-50 rounded-lg\">\r\n                    <div className=\"text-2xl font-bold text-blue-600\">\r\n                      {formatCurrency(marketTrends[marketTrends.length - 1]?.vcsPrice || 0)}\r\n                    </div>\r\n                    <div className=\"text-sm text-blue-700\">VCS Price</div>\r\n                    <div className=\"text-xs text-gray-600 mt-1\">\r\n                      +{((marketTrends[marketTrends.length - 1]?.vcsPrice - marketTrends[0]?.vcsPrice) / marketTrends[0]?.vcsPrice * 100).toFixed(1)}% YTD\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"text-center p-4 bg-green-50 rounded-lg\">\r\n                    <div className=\"text-2xl font-bold text-green-600\">\r\n                      {formatCurrency(marketTrends[marketTrends.length - 1]?.goldStandardPrice || 0)}\r\n                    </div>\r\n                    <div className=\"text-sm text-green-700\">Gold Standard</div>\r\n                    <div className=\"text-xs text-gray-600 mt-1\">Premium Standard</div>\r\n                  </div>\r\n                  <div className=\"text-center p-4 bg-purple-50 rounded-lg\">\r\n                    <div className=\"text-2xl font-bold text-purple-600\">\r\n                      {((marketTrends[marketTrends.length - 1]?.volume || 0) / 1000000).toFixed(1)}M\r\n                    </div>\r\n                    <div className=\"text-sm text-purple-700\">Monthly Volume</div>\r\n                    <div className=\"text-xs text-gray-600 mt-1\">Credits Traded</div>\r\n                  </div>\r\n                  <div className=\"text-center p-4 bg-orange-50 rounded-lg\">\r\n                    <div className=\"text-2xl font-bold text-orange-600\">\r\n                      {((marketTrends[marketTrends.length - 1]?.volatility || 0) * 100).toFixed(1)}%\r\n                    </div>\r\n                    <div className=\"text-sm text-orange-700\">Volatility</div>\r\n                    <div className=\"text-xs text-gray-600 mt-1\">30-day average</div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Market Trend Analysis */}\r\n                <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n                  <Card>\r\n                    <CardHeader>\r\n                      <CardTitle>Price Trends by Credit Type</CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent>\r\n                      <div className=\"space-y-4\">\r\n                        {['VCS', 'Gold Standard', 'CDM'].map(type => {\r\n                          const currentPrice = type === 'VCS' ? marketTrends[marketTrends.length - 1]?.vcsPrice :\r\n                                             type === 'Gold Standard' ? marketTrends[marketTrends.length - 1]?.goldStandardPrice :\r\n                                             marketTrends[marketTrends.length - 1]?.cdmPrice;\r\n                          const pastPrice = type === 'VCS' ? marketTrends[0]?.vcsPrice :\r\n                                          type === 'Gold Standard' ? marketTrends[0]?.goldStandardPrice :\r\n                                          marketTrends[0]?.cdmPrice;\r\n                          const change = ((currentPrice - pastPrice) / pastPrice * 100);\r\n\r\n                          return (\r\n                            <div key={type} className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\r\n                              <div className=\"flex items-center gap-3\">\r\n                                <div className=\"p-2 bg-blue-100 rounded\">\r\n                                  {getCreditTypeIcon(type)}\r\n                                </div>\r\n                                <div>\r\n                                  <div className=\"font-medium\">{type}</div>\r\n                                  <div className=\"text-sm text-gray-600\">{formatCurrency(currentPrice)}</div>\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"text-right\">\r\n                                <div className={`flex items-center gap-1 ${change >= 0 ? 'text-green-600' : 'text-red-600'}`}>\r\n                                  {change >= 0 ? <ArrowUpRight className=\"h-4 w-4\" /> : <ArrowDownRight className=\"h-4 w-4\" />}\r\n                                  <span className=\"font-medium\">{change >= 0 ? '+' : ''}{change.toFixed(1)}%</span>\r\n                                </div>\r\n                                <div className=\"text-xs text-gray-500\">6-month change</div>\r\n                              </div>\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    </CardContent>\r\n                  </Card>\r\n\r\n                  <Card>\r\n                    <CardHeader>\r\n                      <CardTitle>Market Opportunities</CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent>\r\n                      <div className=\"space-y-4\">\r\n                        {[\r\n                          {\r\n                            opportunity: 'International Markets',\r\n                            description: 'EU ETS pricing 35% higher than domestic',\r\n                            potential: '₹8.5Cr additional revenue',\r\n                            confidence: 78,\r\n                            timeframe: '6-9 months'\r\n                          },\r\n                          {\r\n                            opportunity: 'Article 6 Compliance',\r\n                            description: 'Paris Agreement implementation creating premium',\r\n                            potential: '₹12.2Cr market expansion',\r\n                            confidence: 65,\r\n                            timeframe: '12-18 months'\r\n                          },\r\n                          {\r\n                            opportunity: 'Corporate ESG Demand',\r\n                            description: 'Increased corporate carbon neutrality commitments',\r\n                            potential: '₹15.8Cr demand growth',\r\n                            confidence: 85,\r\n                            timeframe: '3-6 months'\r\n                          }\r\n                        ].map((opp, index) => (\r\n                          <div key={index} className=\"p-4 bg-green-50 rounded-lg border border-green-200\">\r\n                            <div className=\"flex items-start justify-between\">\r\n                              <div className=\"flex-1\">\r\n                                <div className=\"font-medium text-green-800\">{opp.opportunity}</div>\r\n                                <div className=\"text-sm text-green-700 mt-1\">{opp.description}</div>\r\n                                <div className=\"text-sm text-gray-600 mt-2\">\r\n                                  <span className=\"font-medium\">Timeframe:</span> {opp.timeframe}\r\n                                </div>\r\n                              </div>\r\n                              <div className=\"text-right ml-4\">\r\n                                <div className=\"font-medium text-green-600\">{opp.potential}</div>\r\n                                <Badge variant=\"outline\" className=\"mt-1 bg-green-100 text-green-800\">\r\n                                  {opp.confidence}% confidence\r\n                                </Badge>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    </CardContent>\r\n                  </Card>\r\n                </div>\r\n\r\n                {/* Price Forecasting */}\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle className=\"flex items-center gap-2\">\r\n                      <Calculator className=\"h-5 w-5\" />\r\n                      Price Forecasting & Revenue Projections\r\n                    </CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\r\n                      {['Conservative', 'Baseline', 'Optimistic'].map((scenario, index) => {\r\n                        const multiplier = index === 0 ? 1.1 : index === 1 ? 1.25 : 1.45;\r\n                        const projectedPrice = marketTrends[marketTrends.length - 1]?.vcsPrice * multiplier;\r\n                        const projectedRevenue = carbonCredits.reduce((sum, cc) => sum + (cc.creditsGenerated * projectedPrice), 0);\r\n\r\n                        return (\r\n                          <div key={scenario} className={`p-4 rounded-lg ${\r\n                            scenario === 'Conservative' ? 'bg-yellow-50 border border-yellow-200' :\r\n                            scenario === 'Baseline' ? 'bg-blue-50 border border-blue-200' :\r\n                            'bg-green-50 border border-green-200'\r\n                          }`}>\r\n                            <div className=\"text-center\">\r\n                              <div className=\"font-medium text-gray-900\">{scenario} Scenario</div>\r\n                              <div className={`text-2xl font-bold mt-2 ${\r\n                                scenario === 'Conservative' ? 'text-yellow-600' :\r\n                                scenario === 'Baseline' ? 'text-blue-600' :\r\n                                'text-green-600'\r\n                              }`}>\r\n                                {formatCurrency(projectedPrice)}\r\n                              </div>\r\n                              <div className=\"text-sm text-gray-600\">Projected Price/Credit</div>\r\n                              <div className=\"text-lg font-medium text-gray-900 mt-3\">\r\n                                {formatCurrency(projectedRevenue)}\r\n                              </div>\r\n                              <div className=\"text-sm text-gray-600\">Total Revenue Potential</div>\r\n                              <div className=\"text-xs text-gray-500 mt-2\">\r\n                                {(((projectedRevenue - carbonCredits.reduce((sum, cc) => sum + cc.revenue, 0)) / carbonCredits.reduce((sum, cc) => sum + cc.revenue, 0)) * 100).toFixed(1)}% increase\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        {/* Projections Tab */}\r\n        <TabsContent value=\"projections\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                <TrendingUp className=\"h-5 w-5\" />\r\n                Carbon Revenue & Impact Projections\r\n              </CardTitle>\r\n              <p className=\"text-gray-600\">Long-term forecasting and strategic carbon planning</p>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-6\">\r\n                {/* Projection Controls */}\r\n                <div className=\"flex flex-wrap gap-4 p-4 bg-gray-50 rounded-lg\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <label className=\"text-sm font-medium text-gray-700\">Timeframe:</label>\r\n                    <Select value={selectedTimeframe} onValueChange={setSelectedTimeframe}>\r\n                      <SelectTrigger className=\"w-32\">\r\n                        <SelectValue />\r\n                      </SelectTrigger>\r\n                      <SelectContent>\r\n                        <SelectItem value=\"12m\">12 Months</SelectItem>\r\n                        <SelectItem value=\"24m\">24 Months</SelectItem>\r\n                        <SelectItem value=\"36m\">36 Months</SelectItem>\r\n                        <SelectItem value=\"60m\">60 Months</SelectItem>\r\n                      </SelectContent>\r\n                    </Select>\r\n                  </div>\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <label className=\"text-sm font-medium text-gray-700\">Growth Scenario:</label>\r\n                    <Select defaultValue=\"baseline\">\r\n                      <SelectTrigger className=\"w-40\">\r\n                        <SelectValue />\r\n                      </SelectTrigger>\r\n                      <SelectContent>\r\n                        <SelectItem value=\"conservative\">Conservative</SelectItem>\r\n                        <SelectItem value=\"baseline\">Baseline</SelectItem>\r\n                        <SelectItem value=\"aggressive\">Aggressive</SelectItem>\r\n                      </SelectContent>\r\n                    </Select>\r\n                  </div>\r\n                  <Button\r\n                    variant=\"outline\"\r\n                    size=\"sm\"\r\n                    onClick={() => setShowProjections(!showProjections)}\r\n                  >\r\n                    <Calculator className=\"h-4 w-4 mr-2\" />\r\n                    Advanced Modeling\r\n                  </Button>\r\n                </div>\r\n\r\n                {/* Revenue Projections */}\r\n                <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n                  <Card>\r\n                    <CardHeader>\r\n                      <CardTitle>Revenue Growth Projections</CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent>\r\n                      <div className=\"space-y-4\">\r\n                        {[\r\n                          { period: '2024 Q4', revenue: 78500000, growth: 15.2, confidence: 92 },\r\n                          { period: '2025 Q1', revenue: 95200000, growth: 21.3, confidence: 87 },\r\n                          { period: '2025 Q2', revenue: 118700000, growth: 24.7, confidence: 82 },\r\n                          { period: '2025 Q3', revenue: 145800000, growth: 22.8, confidence: 78 },\r\n                          { period: '2025 Q4', revenue: 175200000, growth: 25.1, confidence: 74 }\r\n                        ].map((projection, index) => (\r\n                          <div key={index} className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\r\n                            <div>\r\n                              <div className=\"font-medium\">{projection.period}</div>\r\n                              <div className=\"text-sm text-gray-600\">\r\n                                +{projection.growth}% growth\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"text-right\">\r\n                              <div className=\"font-medium text-green-600\">\r\n                                {formatCurrency(projection.revenue)}\r\n                              </div>\r\n                              <Badge variant=\"outline\" className=\"mt-1 text-xs\">\r\n                                {projection.confidence}% confidence\r\n                              </Badge>\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    </CardContent>\r\n                  </Card>\r\n\r\n                  <Card>\r\n                    <CardHeader>\r\n                      <CardTitle>Impact Projections</CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent>\r\n                      <div className=\"space-y-4\">\r\n                        {[\r\n                          { metric: 'CO₂ Reduction', current: 2775, projected: 8500, unit: 'tons', growth: 206 },\r\n                          { metric: 'Credits Generated', current: 555, projected: 1850, unit: 'credits', growth: 233 },\r\n                          { metric: 'Projects Active', current: 4, projected: 15, unit: 'projects', growth: 275 },\r\n                          { metric: 'Communities Impacted', current: 125, projected: 450, unit: 'communities', growth: 260 },\r\n                          { metric: 'Jobs Created', current: 1250, projected: 4200, unit: 'jobs', growth: 236 }\r\n                        ].map((impact, index) => (\r\n                          <div key={index} className=\"space-y-2\">\r\n                            <div className=\"flex justify-between items-center\">\r\n                              <span className=\"text-sm font-medium\">{impact.metric}</span>\r\n                              <span className=\"text-sm text-gray-600\">\r\n                                {impact.current.toLocaleString()} → {impact.projected.toLocaleString()} {impact.unit}\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"flex items-center gap-2\">\r\n                              <Progress value={75} className=\"h-2 flex-1\" />\r\n                              <span className=\"text-sm font-medium text-green-600\">+{impact.growth}%</span>\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    </CardContent>\r\n                  </Card>\r\n                </div>\r\n\r\n                {/* Strategic Targets */}\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle className=\"flex items-center gap-2\">\r\n                      <Target className=\"h-5 w-5\" />\r\n                      2025-2027 Strategic Carbon Targets\r\n                    </CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\r\n                      {[\r\n                        {\r\n                          year: '2025',\r\n                          targets: [\r\n                            'Generate 1,500 carbon credits',\r\n                            'Achieve ₹85Cr carbon revenue',\r\n                            'Expand to 8 new regions',\r\n                            'Launch carbon trading platform'\r\n                          ],\r\n                          investment: 180000000,\r\n                          expectedRoi: 285\r\n                        },\r\n                        {\r\n                          year: '2026',\r\n                          targets: [\r\n                            'Generate 2,500 carbon credits',\r\n                            'Achieve ₹145Cr carbon revenue',\r\n                            'International market entry',\r\n                            'Carbon neutrality certification'\r\n                          ],\r\n                          investment: 320000000,\r\n                          expectedRoi: 340\r\n                        },\r\n                        {\r\n                          year: '2027',\r\n                          targets: [\r\n                            'Generate 4,000 carbon credits',\r\n                            'Achieve ₹250Cr carbon revenue',\r\n                            'Industry leadership position',\r\n                            'Complete ESG integration'\r\n                          ],\r\n                          investment: 500000000,\r\n                          expectedRoi: 420\r\n                        }\r\n                      ].map((target) => (\r\n                        <Card key={target.year} className=\"hover:shadow-lg transition-shadow\">\r\n                          <CardHeader>\r\n                            <CardTitle className=\"text-lg\">{target.year} Targets</CardTitle>\r\n                            <Badge variant=\"outline\" className=\"w-fit bg-blue-100 text-blue-800\">\r\n                              {target.expectedRoi}% ROI\r\n                            </Badge>\r\n                          </CardHeader>\r\n                          <CardContent className=\"space-y-4\">\r\n                            <div>\r\n                              <div className=\"text-sm text-gray-600 mb-2\">Strategic Goals</div>\r\n                              <ul className=\"space-y-1\">\r\n                                {target.targets.map((goal, index) => (\r\n                                  <li key={index} className=\"text-sm flex items-start gap-2\">\r\n                                    <CheckCircle className=\"h-3 w-3 text-green-600 mt-0.5 flex-shrink-0\" />\r\n                                    {goal}\r\n                                  </li>\r\n                                ))}\r\n                              </ul>\r\n                            </div>\r\n                            <div className=\"pt-3 border-t border-gray-200\">\r\n                              <div className=\"text-sm text-gray-600\">Required Investment</div>\r\n                              <div className=\"text-lg font-bold text-blue-600\">\r\n                                {formatCurrency(target.investment)}\r\n                              </div>\r\n                            </div>\r\n                          </CardContent>\r\n                        </Card>\r\n                      ))}\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CarbonAnalytics;","import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Progress } from '@/components/ui/progress';\r\nimport { Alert, AlertDescription } from '@/components/ui/alert';\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\r\nimport {\r\n  TrendingUp,\r\n  TrendingDown,\r\n  Users,\r\n  Building,\r\n  Award,\r\n  Target,\r\n  AlertTriangle,\r\n  CheckCircle,\r\n  BarChart3,\r\n  PieChart,\r\n  Activity,\r\n  Shield,\r\n  RefreshCw,\r\n  Volume2,\r\n  Download,\r\n  Search,\r\n  Eye,\r\n  Zap,\r\n  Crown,\r\n  ArrowUpRight,\r\n  ArrowDownRight,\r\n  Minus,\r\n  DollarSign,\r\n  Calendar,\r\n  Globe,\r\n  Lightbulb,\r\n  Minus as TrendingFlat,\r\n  Star,\r\n  Brain,\r\n  Network,\r\n  MapPin\r\n} from 'lucide-react';\r\nimport { useExecutiveAnalytics } from '../../contexts/ExecutiveAnalyticsContext';\r\n\r\ninterface Competitor {\r\n  id: string;\r\n  name: string;\r\n  tier: 'direct' | 'indirect' | 'emerging';\r\n  marketShare: number;\r\n  revenue: number;\r\n  growth: number;\r\n  employees: number;\r\n  regions: string[];\r\n  strengths: string[];\r\n  weaknesses: string[];\r\n  recentMoves: string[];\r\n  threatLevel: 'low' | 'medium' | 'high' | 'critical';\r\n  innovationScore: number;\r\n  customerSatisfaction: number;\r\n  financialHealth: number;\r\n  operationalEfficiency: number;\r\n  logo?: string;\r\n}\r\n\r\ninterface MarketSegment {\r\n  id: string;\r\n  name: string;\r\n  size: number;\r\n  growth: number;\r\n  ourShare: number;\r\n  leader: string;\r\n  leaderShare: number;\r\n  opportunity: 'low' | 'medium' | 'high';\r\n  barriers: string[];\r\n  trends: string[];\r\n}\r\n\r\ninterface SWOTAnalysis {\r\n  strengths: Array<{\r\n    factor: string;\r\n    impact: 'high' | 'medium' | 'low';\r\n    description: string;\r\n    score: number;\r\n  }>;\r\n  weaknesses: Array<{\r\n    factor: string;\r\n    impact: 'high' | 'medium' | 'low';\r\n    description: string;\r\n    score: number;\r\n    actionPlan?: string;\r\n  }>;\r\n  opportunities: Array<{\r\n    factor: string;\r\n    potential: 'high' | 'medium' | 'low';\r\n    description: string;\r\n    timeframe: string;\r\n    investmentRequired: number;\r\n    expectedReturn: number;\r\n  }>;\r\n  threats: Array<{\r\n    factor: string;\r\n    severity: 'high' | 'medium' | 'low';\r\n    description: string;\r\n    probability: number;\r\n    mitigation: string;\r\n    timeline: string;\r\n  }>;\r\n}\r\n\r\ninterface BenchmarkMetric {\r\n  metric: string;\r\n  ourValue: number;\r\n  industryAverage: number;\r\n  topPerformer: number;\r\n  unit: string;\r\n  trend: 'up' | 'down' | 'stable';\r\n  ranking: number;\r\n  totalCompetitors: number;\r\n}\r\n\r\ninterface CompetitiveAdvantage {\r\n  id: string;\r\n  advantage: string;\r\n  category: 'technology' | 'operational' | 'financial' | 'market' | 'human';\r\n  sustainability: 'sustainable' | 'temporary' | 'at-risk';\r\n  strength: number;\r\n  description: string;\r\n  evidence: string[];\r\n  threats: string[];\r\n  reinforcementPlan: string;\r\n}\r\n\r\nconst CompetitiveIntelligence: React.FC = () => {\r\n  const { competitiveData, refreshData, refreshing } = useExecutiveAnalytics();\r\n\r\n  const [selectedTimeframe, setSelectedTimeframe] = useState<string>('12m');\r\n  const [selectedSegment, setSelectedSegment] = useState<string>('all');\r\n  const [activeTab, setActiveTab] = useState<string>('overview');\r\n  const [showAdvancedAnalysis, setShowAdvancedAnalysis] = useState<boolean>(false);\r\n\r\n  // Mock data for competitive intelligence\r\n  const [competitors] = useState<Competitor[]>([\r\n    {\r\n      id: 'comp001',\r\n      name: 'EcoGas Solutions',\r\n      tier: 'direct',\r\n      marketShare: 25.3,\r\n      revenue: 180000000000,\r\n      growth: 18.5,\r\n      employees: 3200,\r\n      regions: ['Maharashtra', 'Gujarat', 'Rajasthan', 'Punjab'],\r\n      strengths: ['Government Relations', 'Scale Operations', 'Financial Resources'],\r\n      weaknesses: ['Innovation Speed', 'Rural Penetration', 'Technology Adoption'],\r\n      recentMoves: ['Acquired tech startup for ₹45Cr', 'Launched mobile app platform', 'Expanded to 3 new states'],\r\n      threatLevel: 'high',\r\n      innovationScore: 72,\r\n      customerSatisfaction: 78,\r\n      financialHealth: 91,\r\n      operationalEfficiency: 85\r\n    },\r\n    {\r\n      id: 'comp002',\r\n      name: 'GreenTech Biogas',\r\n      tier: 'direct',\r\n      marketShare: 22.1,\r\n      revenue: 158000000000,\r\n      growth: 22.3,\r\n      employees: 2800,\r\n      regions: ['Tamil Nadu', 'Karnataka', 'Andhra Pradesh', 'Kerala'],\r\n      strengths: ['Technology Innovation', 'Customer Service', 'Digital Platform'],\r\n      weaknesses: ['Market Coverage', 'Capital Efficiency', 'Brand Recognition'],\r\n      recentMoves: ['IPO announced for Q2 2025', 'Partnership with IIT Chennai', 'AI optimization rollout'],\r\n      threatLevel: 'critical',\r\n      innovationScore: 89,\r\n      customerSatisfaction: 85,\r\n      financialHealth: 82,\r\n      operationalEfficiency: 78\r\n    },\r\n    {\r\n      id: 'comp003',\r\n      name: 'Rural Energy Corp',\r\n      tier: 'direct',\r\n      marketShare: 15.7,\r\n      revenue: 112000000000,\r\n      growth: 12.8,\r\n      employees: 1950,\r\n      regions: ['Uttar Pradesh', 'Bihar', 'Madhya Pradesh', 'Odisha'],\r\n      strengths: ['Rural Network', 'Cost Efficiency', 'Local Partnerships'],\r\n      weaknesses: ['Technology Infrastructure', 'Financial Resources', 'Scalability'],\r\n      recentMoves: ['Secured ₹200Cr funding', 'Rural expansion program', 'Community partnership model'],\r\n      threatLevel: 'medium',\r\n      innovationScore: 65,\r\n      customerSatisfaction: 82,\r\n      financialHealth: 75,\r\n      operationalEfficiency: 88\r\n    },\r\n    {\r\n      id: 'comp004',\r\n      name: 'CleanEnergy Dynamics',\r\n      tier: 'indirect',\r\n      marketShare: 8.2,\r\n      revenue: 89000000000,\r\n      growth: 35.1,\r\n      employees: 1200,\r\n      regions: ['West Bengal', 'Assam', 'Jharkhand'],\r\n      strengths: ['Innovation', 'Agility', 'Technology Stack'],\r\n      weaknesses: ['Market Presence', 'Scale', 'Financial Stability'],\r\n      recentMoves: ['Series B funding ₹125Cr', 'AI research lab setup', 'International expansion plan'],\r\n      threatLevel: 'medium',\r\n      innovationScore: 95,\r\n      customerSatisfaction: 87,\r\n      financialHealth: 68,\r\n      operationalEfficiency: 72\r\n    }\r\n  ]);\r\n\r\n  const [marketSegments] = useState<MarketSegment[]>([\r\n    {\r\n      id: 'rural_communities',\r\n      name: 'Rural Communities',\r\n      size: 45000000000,\r\n      growth: 15.2,\r\n      ourShare: 22.1,\r\n      leader: 'EcoGas Solutions',\r\n      leaderShare: 28.5,\r\n      opportunity: 'high',\r\n      barriers: ['Infrastructure Development', 'Financing Solutions', 'Technology Adoption'],\r\n      trends: ['Government push for clean energy', 'Rural digitization', 'Cooperative model adoption']\r\n    },\r\n    {\r\n      id: 'industrial_waste',\r\n      name: 'Industrial Waste Management',\r\n      size: 28000000000,\r\n      growth: 18.7,\r\n      ourShare: 18.3,\r\n      leader: 'GreenTech Biogas',\r\n      leaderShare: 32.1,\r\n      opportunity: 'medium',\r\n      barriers: ['Regulatory Compliance', 'Technical Expertise', 'Capital Investment'],\r\n      trends: ['Circular economy adoption', 'ESG compliance requirements', 'Zero waste initiatives']\r\n    },\r\n    {\r\n      id: 'urban_waste',\r\n      name: 'Urban Waste Processing',\r\n      size: 35000000000,\r\n      growth: 12.4,\r\n      ourShare: 15.8,\r\n      leader: 'EcoGas Solutions',\r\n      leaderShare: 24.3,\r\n      opportunity: 'medium',\r\n      barriers: ['Urban Infrastructure', 'Municipal Partnerships', 'Scale Requirements'],\r\n      trends: ['Smart city initiatives', 'Waste segregation mandates', 'Public-private partnerships']\r\n    },\r\n    {\r\n      id: 'agricultural',\r\n      name: 'Agricultural Biogas',\r\n      size: 22000000000,\r\n      growth: 20.8,\r\n      ourShare: 25.6,\r\n      leader: 'SAUBHAGYA',\r\n      leaderShare: 25.6,\r\n      opportunity: 'high',\r\n      barriers: ['Farmer Education', 'Seasonal Variations', 'Supply Chain'],\r\n      trends: ['Sustainable farming practices', 'Carbon credit awareness', 'Cooperative farming growth']\r\n    }\r\n  ]);\r\n\r\n  const [swotAnalysis] = useState<SWOTAnalysis>({\r\n    strengths: [\r\n      {\r\n        factor: 'Technology Innovation',\r\n        impact: 'high',\r\n        description: 'Advanced IoT integration and AI-driven optimization giving 15-20% efficiency advantage',\r\n        score: 92\r\n      },\r\n      {\r\n        factor: 'Rural Market Penetration',\r\n        impact: 'high',\r\n        description: 'Deep rural network with established community relationships across 12 states',\r\n        score: 88\r\n      },\r\n      {\r\n        factor: 'Operational Efficiency',\r\n        impact: 'high',\r\n        description: 'Lean operations model with 23% lower cost structure than industry average',\r\n        score: 87\r\n      },\r\n      {\r\n        factor: 'Financial Health',\r\n        impact: 'medium',\r\n        description: 'Strong balance sheet with low debt-to-equity ratio and positive cash flow',\r\n        score: 85\r\n      },\r\n      {\r\n        factor: 'Brand Trust',\r\n        impact: 'medium',\r\n        description: 'High customer satisfaction (4.6/5) and strong word-of-mouth referrals',\r\n        score: 82\r\n      }\r\n    ],\r\n    weaknesses: [\r\n      {\r\n        factor: 'Scale Limitations',\r\n        impact: 'high',\r\n        description: 'Smaller scale compared to top 2 competitors limiting economies of scale',\r\n        score: 65,\r\n        actionPlan: 'Aggressive expansion plan with ₹500Cr investment over 18 months'\r\n      },\r\n      {\r\n        factor: 'Brand Recognition',\r\n        impact: 'medium',\r\n        description: 'Lower brand awareness in urban markets compared to established players',\r\n        score: 58,\r\n        actionPlan: 'Comprehensive brand building campaign focusing on ESG leadership'\r\n      },\r\n      {\r\n        factor: 'Capital Resources',\r\n        impact: 'medium',\r\n        description: 'Limited access to large-scale funding compared to listed competitors',\r\n        score: 62,\r\n        actionPlan: 'IPO preparation and strategic investor partnerships'\r\n      },\r\n      {\r\n        factor: 'Geographic Coverage',\r\n        impact: 'medium',\r\n        description: 'Presence in 12 states vs. competitors covering 15-20 states',\r\n        score: 68,\r\n        actionPlan: 'Phased expansion to 8 new states by 2025'\r\n      }\r\n    ],\r\n    opportunities: [\r\n      {\r\n        factor: 'Government Policy Support',\r\n        potential: 'high',\r\n        description: 'New renewable energy policies creating ₹200Cr+ market opportunities',\r\n        timeframe: '6-12 months',\r\n        investmentRequired: 150000000,\r\n        expectedReturn: 380000000\r\n      },\r\n      {\r\n        factor: 'Carbon Credit Market',\r\n        potential: 'high',\r\n        description: 'International carbon market expansion with 40% price premium opportunities',\r\n        timeframe: '12-18 months',\r\n        investmentRequired: 200000000,\r\n        expectedReturn: 650000000\r\n      },\r\n      {\r\n        factor: 'Technology Integration',\r\n        potential: 'medium',\r\n        description: 'AI and IoT adoption creating competitive differentiation',\r\n        timeframe: '3-9 months',\r\n        investmentRequired: 120000000,\r\n        expectedReturn: 280000000\r\n      },\r\n      {\r\n        factor: 'Corporate ESG Demand',\r\n        potential: 'high',\r\n        description: 'Increasing corporate sustainability commitments driving B2B opportunities',\r\n        timeframe: '6-15 months',\r\n        investmentRequired: 80000000,\r\n        expectedReturn: 320000000\r\n      }\r\n    ],\r\n    threats: [\r\n      {\r\n        factor: 'New Market Entrants',\r\n        severity: 'high',\r\n        description: 'Well-funded startups with disruptive technology entering market',\r\n        probability: 0.75,\r\n        mitigation: 'Accelerate innovation and build switching costs through platform integration',\r\n        timeline: '6-12 months'\r\n      },\r\n      {\r\n        factor: 'Regulatory Changes',\r\n        severity: 'medium',\r\n        description: 'Potential changes in renewable energy subsidies affecting profitability',\r\n        probability: 0.45,\r\n        mitigation: 'Diversify revenue streams and reduce subsidy dependence',\r\n        timeline: '12-24 months'\r\n      },\r\n      {\r\n        factor: 'Economic Downturn',\r\n        severity: 'medium',\r\n        description: 'Economic slowdown affecting investment in renewable energy projects',\r\n        probability: 0.35,\r\n        mitigation: 'Focus on essential services and government contracts',\r\n        timeline: '6-18 months'\r\n      },\r\n      {\r\n        factor: 'Technology Disruption',\r\n        severity: 'high',\r\n        description: 'Breakthrough in alternative technologies making biogas less competitive',\r\n        probability: 0.25,\r\n        mitigation: 'Invest in R&D and maintain technology leadership',\r\n        timeline: '24-36 months'\r\n      }\r\n    ]\r\n  });\r\n\r\n  const [benchmarkMetrics] = useState<BenchmarkMetric[]>([\r\n    {\r\n      metric: 'Revenue per Employee',\r\n      ourValue: 10500000,\r\n      industryAverage: 8200000,\r\n      topPerformer: 12800000,\r\n      unit: '₹',\r\n      trend: 'up',\r\n      ranking: 3,\r\n      totalCompetitors: 15\r\n    },\r\n    {\r\n      metric: 'Customer Acquisition Cost',\r\n      ourValue: 25000,\r\n      industryAverage: 32000,\r\n      topPerformer: 18000,\r\n      unit: '₹',\r\n      trend: 'down',\r\n      ranking: 4,\r\n      totalCompetitors: 15\r\n    },\r\n    {\r\n      metric: 'Customer Retention Rate',\r\n      ourValue: 92,\r\n      industryAverage: 85,\r\n      topPerformer: 95,\r\n      unit: '%',\r\n      trend: 'up',\r\n      ranking: 2,\r\n      totalCompetitors: 15\r\n    },\r\n    {\r\n      metric: 'Time to Market',\r\n      ourValue: 8.5,\r\n      industryAverage: 12.2,\r\n      topPerformer: 6.8,\r\n      unit: 'months',\r\n      trend: 'down',\r\n      ranking: 2,\r\n      totalCompetitors: 15\r\n    },\r\n    {\r\n      metric: 'Operational Efficiency',\r\n      ourValue: 87.3,\r\n      industryAverage: 78.5,\r\n      topPerformer: 91.2,\r\n      unit: '%',\r\n      trend: 'up',\r\n      ranking: 3,\r\n      totalCompetitors: 15\r\n    },\r\n    {\r\n      metric: 'Innovation Index',\r\n      ourValue: 82,\r\n      industryAverage: 68,\r\n      topPerformer: 95,\r\n      unit: 'score',\r\n      trend: 'up',\r\n      ranking: 4,\r\n      totalCompetitors: 15\r\n    }\r\n  ]);\r\n\r\n  const [competitiveAdvantages] = useState<CompetitiveAdvantage[]>([\r\n    {\r\n      id: 'tech_integration',\r\n      advantage: 'IoT-AI Platform Integration',\r\n      category: 'technology',\r\n      sustainability: 'sustainable',\r\n      strength: 92,\r\n      description: 'Proprietary IoT platform with AI optimization providing 15-20% efficiency gains',\r\n      evidence: ['15% higher biogas yield', '20% reduction in operational costs', '95% system uptime'],\r\n      threats: ['Competitor technology catch-up', 'New disruptive technologies'],\r\n      reinforcementPlan: 'Continuous R&D investment, patent protection, talent acquisition'\r\n    },\r\n    {\r\n      id: 'rural_network',\r\n      advantage: 'Deep Rural Penetration',\r\n      category: 'market',\r\n      sustainability: 'sustainable',\r\n      strength: 88,\r\n      description: 'Established community relationships and distribution network in rural areas',\r\n      evidence: ['12 state presence', '85% rural customer base', 'Community partnership model'],\r\n      threats: ['Competitor rural expansion', 'Digital disruption'],\r\n      reinforcementPlan: 'Strengthen community partnerships, expand network, digital enhancement'\r\n    },\r\n    {\r\n      id: 'cost_efficiency',\r\n      advantage: 'Lean Operations Model',\r\n      category: 'operational',\r\n      sustainability: 'sustainable',\r\n      strength: 85,\r\n      description: 'Optimized operations delivering 23% cost advantage over industry average',\r\n      evidence: ['23% lower OPEX', '87% operational efficiency', 'Automated processes'],\r\n      threats: ['Scale disadvantages', 'Process replication by competitors'],\r\n      reinforcementPlan: 'Process automation, scale expansion, continuous improvement'\r\n    },\r\n    {\r\n      id: 'esg_leadership',\r\n      advantage: 'ESG Leadership Position',\r\n      category: 'market',\r\n      sustainability: 'sustainable',\r\n      strength: 89,\r\n      description: 'Industry-leading ESG practices and carbon credit generation capabilities',\r\n      evidence: ['A rating ESG score', '450 carbon credits generated', 'B Corp certification'],\r\n      threats: ['ESG commoditization', 'Regulatory changes'],\r\n      reinforcementPlan: 'ESG innovation, certification expansion, thought leadership'\r\n    }\r\n  ]);\r\n\r\n  const formatCurrency = (value: number): string => {\r\n    if (value >= 10000000) {\r\n      return `₹${(value / 10000000).toFixed(1)}Cr`;\r\n    } else if (value >= 100000) {\r\n      return `₹${(value / 100000).toFixed(1)}L`;\r\n    }\r\n    return `₹${value.toLocaleString()}`;\r\n  };\r\n\r\n  const getThreatColor = (level: string) => {\r\n    switch (level) {\r\n      case 'low':\r\n        return 'bg-green-100 text-green-800';\r\n      case 'medium':\r\n        return 'bg-yellow-100 text-yellow-800';\r\n      case 'high':\r\n        return 'bg-orange-100 text-orange-800';\r\n      case 'critical':\r\n        return 'bg-red-100 text-red-800';\r\n      default:\r\n        return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  const getImpactColor = (impact: string) => {\r\n    switch (impact) {\r\n      case 'high':\r\n        return 'bg-red-100 text-red-800';\r\n      case 'medium':\r\n        return 'bg-yellow-100 text-yellow-800';\r\n      case 'low':\r\n        return 'bg-green-100 text-green-800';\r\n      default:\r\n        return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  const getTrendIcon = (trend: string) => {\r\n    switch (trend) {\r\n      case 'up':\r\n        return <ArrowUpRight className=\"h-4 w-4 text-green-600\" />;\r\n      case 'down':\r\n        return <ArrowDownRight className=\"h-4 w-4 text-red-600\" />;\r\n      case 'stable':\r\n        return <TrendingFlat className=\"h-4 w-4 text-gray-600\" />;\r\n      default:\r\n        return <Minus className=\"h-4 w-4 text-gray-600\" />;\r\n    }\r\n  };\r\n\r\n  const getSustainabilityColor = (sustainability: string) => {\r\n    switch (sustainability) {\r\n      case 'sustainable':\r\n        return 'bg-green-100 text-green-800';\r\n      case 'temporary':\r\n        return 'bg-yellow-100 text-yellow-800';\r\n      case 'at-risk':\r\n        return 'bg-red-100 text-red-800';\r\n      default:\r\n        return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  const speakCompetitiveSummary = () => {\r\n    const marketShare = competitiveData.marketShare;\r\n    const ranking = competitiveData.ranking;\r\n    const strengthScore = competitiveData.strengthScore;\r\n\r\n    const summaryText = `Competitive Intelligence Summary: We hold ${marketShare}% market share, ranking ${ranking} in the industry. Overall competitive strength score is ${strengthScore}%. We have ${competitors.filter(c => c.threatLevel === 'high' || c.threatLevel === 'critical').length} high-threat competitors. Key opportunities include government policy support and carbon credit market expansion.`;\r\n\r\n    if ('speechSynthesis' in window) {\r\n      const utterance = new SpeechSynthesisUtterance(summaryText);\r\n      speechSynthesis.speak(utterance);\r\n    }\r\n  };\r\n\r\n  const exportCompetitiveReport = () => {\r\n    const reportData = {\r\n      timestamp: new Date().toISOString(),\r\n      executiveSummary: {\r\n        marketPosition: competitiveData,\r\n        keyThreats: competitors.filter(c => c.threatLevel === 'high' || c.threatLevel === 'critical').length,\r\n        topOpportunities: swotAnalysis.opportunities.slice(0, 3),\r\n        competitiveAdvantages: competitiveAdvantages.length\r\n      },\r\n      competitors,\r\n      marketSegments,\r\n      swotAnalysis,\r\n      benchmarkMetrics,\r\n      competitiveAdvantages\r\n    };\r\n\r\n    const blob = new Blob([JSON.stringify(reportData, null, 2)], { type: 'application/json' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = `competitive-intelligence-report-${new Date().toISOString().split('T')[0]}.json`;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h2 className=\"text-2xl font-bold text-gray-900\">Competitive Intelligence & Market Analysis</h2>\r\n          <p className=\"text-gray-600\">Comprehensive competitive positioning, market analysis, and strategic insights</p>\r\n        </div>\r\n        <div className=\"flex items-center gap-3\">\r\n          <Button\r\n            onClick={speakCompetitiveSummary}\r\n            variant=\"outline\"\r\n            size=\"sm\"\r\n            className=\"hidden sm:flex\"\r\n          >\r\n            <Volume2 className=\"h-4 w-4 mr-2\" />\r\n            Listen\r\n          </Button>\r\n          <Button\r\n            onClick={exportCompetitiveReport}\r\n            variant=\"outline\"\r\n            size=\"sm\"\r\n          >\r\n            <Download className=\"h-4 w-4 mr-2\" />\r\n            Export\r\n          </Button>\r\n          <Button\r\n            onClick={refreshData}\r\n            variant=\"outline\"\r\n            size=\"sm\"\r\n            disabled={refreshing}\r\n          >\r\n            <RefreshCw className={`h-4 w-4 ${refreshing ? 'animate-spin' : ''} mr-2`} />\r\n            Refresh\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Competitive Overview Cards */}\r\n      <div className=\"grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-4\">\r\n        <Card className=\"hover:shadow-lg transition-shadow\">\r\n          <CardContent className=\"p-6\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm text-gray-600\">Market Share</p>\r\n                <p className=\"text-2xl font-bold text-blue-600\">\r\n                  {competitiveData.marketShare}%\r\n                </p>\r\n                <p className=\"text-xs text-gray-500 mt-1\">\r\n                  Rank #{competitiveData.ranking} of {competitiveData.competitorCount}\r\n                </p>\r\n              </div>\r\n              <div className=\"p-3 bg-blue-100 rounded-lg\">\r\n                <PieChart className=\"h-6 w-6 text-blue-600\" />\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card className=\"hover:shadow-lg transition-shadow\">\r\n          <CardContent className=\"p-6\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm text-gray-600\">Competitive Strength</p>\r\n                <p className=\"text-2xl font-bold text-green-600\">\r\n                  {competitiveData.strengthScore}\r\n                </p>\r\n                <p className=\"text-xs text-gray-500 mt-1\">\r\n                  Above industry average\r\n                </p>\r\n              </div>\r\n              <div className=\"p-3 bg-green-100 rounded-lg\">\r\n                <Award className=\"h-6 w-6 text-green-600\" />\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card className=\"hover:shadow-lg transition-shadow\">\r\n          <CardContent className=\"p-6\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm text-gray-600\">High-Threat Competitors</p>\r\n                <p className=\"text-2xl font-bold text-orange-600\">\r\n                  {competitors.filter(c => c.threatLevel === 'high' || c.threatLevel === 'critical').length}\r\n                </p>\r\n                <p className=\"text-xs text-gray-500 mt-1\">\r\n                  Requiring immediate attention\r\n                </p>\r\n              </div>\r\n              <div className=\"p-3 bg-orange-100 rounded-lg\">\r\n                <AlertTriangle className=\"h-6 w-6 text-orange-600\" />\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card className=\"hover:shadow-lg transition-shadow\">\r\n          <CardContent className=\"p-6\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm text-gray-600\">Key Opportunities</p>\r\n                <p className=\"text-2xl font-bold text-purple-600\">\r\n                  {swotAnalysis.opportunities.filter(o => o.potential === 'high').length}\r\n                </p>\r\n                <p className=\"text-xs text-gray-500 mt-1\">\r\n                  High-potential opportunities\r\n                </p>\r\n              </div>\r\n              <div className=\"p-3 bg-purple-100 rounded-lg\">\r\n                <Lightbulb className=\"h-6 w-6 text-purple-600\" />\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      <Tabs value={activeTab} onValueChange={setActiveTab} className=\"space-y-6\">\r\n        <TabsList className=\"grid w-full grid-cols-5\">\r\n          <TabsTrigger value=\"overview\">Market Overview</TabsTrigger>\r\n          <TabsTrigger value=\"competitors\">Competitor Analysis</TabsTrigger>\r\n          <TabsTrigger value=\"swot\">SWOT Analysis</TabsTrigger>\r\n          <TabsTrigger value=\"benchmarks\">Benchmarking</TabsTrigger>\r\n          <TabsTrigger value=\"advantages\">Competitive Edge</TabsTrigger>\r\n        </TabsList>\r\n\r\n        {/* Market Overview Tab */}\r\n        <TabsContent value=\"overview\" className=\"space-y-6\">\r\n          <div className=\"grid grid-cols-1 gap-6\">\r\n            {/* Market Position Dashboard */}\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center gap-2\">\r\n                  <BarChart3 className=\"h-5 w-5\" />\r\n                  Market Position Analysis\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n                  {/* Market Share Visualization */}\r\n                  <div className=\"space-y-4\">\r\n                    <h4 className=\"font-medium text-gray-900\">Market Share Distribution</h4>\r\n                    <div className=\"space-y-3\">\r\n                      {[\r\n                        { name: 'EcoGas Solutions', share: 25.3, color: 'bg-red-500' },\r\n                        { name: 'GreenTech Biogas', share: 22.1, color: 'bg-orange-500' },\r\n                        { name: 'SAUBHAGYA', share: 18.5, color: 'bg-blue-500' },\r\n                        { name: 'Rural Energy Corp', share: 15.7, color: 'bg-green-500' },\r\n                        { name: 'CleanEnergy Dynamics', share: 8.2, color: 'bg-purple-500' },\r\n                        { name: 'Others', share: 10.2, color: 'bg-gray-400' }\r\n                      ].map((company, index) => (\r\n                        <div key={index} className=\"flex items-center justify-between\">\r\n                          <div className=\"flex items-center gap-3\">\r\n                            <div className={`w-4 h-4 rounded ${company.color}`}></div>\r\n                            <span className=\"font-medium\">{company.name}</span>\r\n                            {company.name === 'SAUBHAGYA' && (\r\n                              <Badge variant=\"outline\" className=\"bg-blue-100 text-blue-800\">\r\n                                Us\r\n                              </Badge>\r\n                            )}\r\n                          </div>\r\n                          <div className=\"text-right\">\r\n                            <div className=\"font-medium\">{company.share}%</div>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Competitive Positioning */}\r\n                  <div className=\"space-y-4\">\r\n                    <h4 className=\"font-medium text-gray-900\">Competitive Positioning</h4>\r\n                    <div className=\"grid grid-cols-2 gap-4\">\r\n                      <div className=\"text-center p-4 bg-blue-50 rounded-lg\">\r\n                        <div className=\"text-2xl font-bold text-blue-600\">3rd</div>\r\n                        <div className=\"text-sm text-blue-700\">Market Ranking</div>\r\n                      </div>\r\n                      <div className=\"text-center p-4 bg-green-50 rounded-lg\">\r\n                        <div className=\"text-2xl font-bold text-green-600\">+3.2%</div>\r\n                        <div className=\"text-sm text-green-700\">YoY Growth</div>\r\n                      </div>\r\n                      <div className=\"text-center p-4 bg-purple-50 rounded-lg\">\r\n                        <div className=\"text-2xl font-bold text-purple-600\">{formatCurrency(125000000000)}</div>\r\n                        <div className=\"text-sm text-purple-700\">Revenue</div>\r\n                      </div>\r\n                      <div className=\"text-center p-4 bg-orange-50 rounded-lg\">\r\n                        <div className=\"text-2xl font-bold text-orange-600\">12</div>\r\n                        <div className=\"text-sm text-orange-700\">States Present</div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            {/* Market Segments Analysis */}\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center gap-2\">\r\n                  <Target className=\"h-5 w-5\" />\r\n                  Market Segments Performance\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"space-y-4\">\r\n                  {marketSegments.map((segment) => (\r\n                    <Card key={segment.id} className=\"hover:shadow-lg transition-shadow\">\r\n                      <CardContent className=\"p-4\">\r\n                        <div className=\"flex items-start justify-between\">\r\n                          <div className=\"flex-1\">\r\n                            <div className=\"flex items-center gap-2\">\r\n                              <h4 className=\"font-medium text-gray-900\">{segment.name}</h4>\r\n                              <Badge\r\n                                variant=\"outline\"\r\n                                className={\r\n                                  segment.opportunity === 'high' ? 'bg-green-100 text-green-800' :\r\n                                  segment.opportunity === 'medium' ? 'bg-yellow-100 text-yellow-800' :\r\n                                  'bg-gray-100 text-gray-800'\r\n                                }\r\n                              >\r\n                                {segment.opportunity} opportunity\r\n                              </Badge>\r\n                              {segment.leader === 'SAUBHAGYA' && (\r\n                                <Badge variant=\"outline\" className=\"bg-blue-100 text-blue-800\">\r\n                                  <Crown className=\"h-3 w-3 mr-1\" />\r\n                                  Leader\r\n                                </Badge>\r\n                              )}\r\n                            </div>\r\n                            <div className=\"grid grid-cols-2 lg:grid-cols-4 gap-4 mt-3\">\r\n                              <div>\r\n                                <div className=\"text-sm text-gray-600\">Market Size</div>\r\n                                <div className=\"font-medium\">{formatCurrency(segment.size)}</div>\r\n                              </div>\r\n                              <div>\r\n                                <div className=\"text-sm text-gray-600\">Growth Rate</div>\r\n                                <div className=\"font-medium text-green-600\">+{segment.growth}%</div>\r\n                              </div>\r\n                              <div>\r\n                                <div className=\"text-sm text-gray-600\">Our Share</div>\r\n                                <div className=\"font-medium\">{segment.ourShare}%</div>\r\n                              </div>\r\n                              <div>\r\n                                <div className=\"text-sm text-gray-600\">Leader</div>\r\n                                <div className=\"font-medium\">{segment.leader} ({segment.leaderShare}%)</div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"mt-4 space-y-3\">\r\n                          <div>\r\n                            <div className=\"text-sm text-gray-600 mb-2\">Key Trends</div>\r\n                            <div className=\"flex flex-wrap gap-1\">\r\n                              {segment.trends.map((trend, index) => (\r\n                                <Badge key={index} variant=\"outline\" className=\"text-xs\">\r\n                                  {trend}\r\n                                </Badge>\r\n                              ))}\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div>\r\n                            <div className=\"text-sm text-gray-600 mb-2\">Market Barriers</div>\r\n                            <div className=\"flex flex-wrap gap-1\">\r\n                              {segment.barriers.map((barrier, index) => (\r\n                                <Badge key={index} variant=\"outline\" className=\"text-xs bg-red-50 text-red-700\">\r\n                                  {barrier}\r\n                                </Badge>\r\n                              ))}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </CardContent>\r\n                    </Card>\r\n                  ))}\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </TabsContent>\r\n\r\n        {/* Competitor Analysis Tab */}\r\n        <TabsContent value=\"competitors\" className=\"space-y-6\">\r\n          <div className=\"grid grid-cols-1 gap-6\">\r\n            {/* Competitive Landscape */}\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center gap-2\">\r\n                  <Users className=\"h-5 w-5\" />\r\n                  Competitive Landscape Analysis\r\n                </CardTitle>\r\n                <div className=\"flex items-center gap-4 mt-4\">\r\n                  <Select value={selectedTimeframe} onValueChange={setSelectedTimeframe}>\r\n                    <SelectTrigger className=\"w-40\">\r\n                      <SelectValue />\r\n                    </SelectTrigger>\r\n                    <SelectContent>\r\n                      <SelectItem value=\"6m\">6 Months</SelectItem>\r\n                      <SelectItem value=\"12m\">12 Months</SelectItem>\r\n                      <SelectItem value=\"24m\">24 Months</SelectItem>\r\n                    </SelectContent>\r\n                  </Select>\r\n                  <Button\r\n                    variant=\"outline\"\r\n                    size=\"sm\"\r\n                    onClick={() => setShowAdvancedAnalysis(!showAdvancedAnalysis)}\r\n                  >\r\n                    <Brain className=\"h-4 w-4 mr-2\" />\r\n                    Advanced Analysis\r\n                  </Button>\r\n                </div>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"space-y-6\">\r\n                  {competitors.map((competitor) => (\r\n                    <Card key={competitor.id} className=\"hover:shadow-lg transition-shadow\">\r\n                      <CardHeader>\r\n                        <div className=\"flex items-start justify-between\">\r\n                          <div>\r\n                            <div className=\"flex items-center gap-3\">\r\n                              <CardTitle className=\"text-lg\">{competitor.name}</CardTitle>\r\n                              <Badge\r\n                                variant=\"outline\"\r\n                                className={\r\n                                  competitor.tier === 'direct' ? 'bg-red-100 text-red-800' :\r\n                                  competitor.tier === 'indirect' ? 'bg-yellow-100 text-yellow-800' :\r\n                                  'bg-blue-100 text-blue-800'\r\n                                }\r\n                              >\r\n                                {competitor.tier} competitor\r\n                              </Badge>\r\n                              <Badge\r\n                                variant=\"outline\"\r\n                                className={getThreatColor(competitor.threatLevel)}\r\n                              >\r\n                                {competitor.threatLevel} threat\r\n                              </Badge>\r\n                            </div>\r\n                            <div className=\"flex items-center gap-4 mt-2 text-sm text-gray-600\">\r\n                              <span>Market Share: {competitor.marketShare}%</span>\r\n                              <span>Revenue: {formatCurrency(competitor.revenue)}</span>\r\n                              <span>Growth: {competitor.growth}%</span>\r\n                              <span>Employees: {competitor.employees.toLocaleString()}</span>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"text-right\">\r\n                            <div className=\"text-2xl font-bold text-gray-900\">\r\n                              {Math.round((competitor.innovationScore + competitor.customerSatisfaction + competitor.financialHealth + competitor.operationalEfficiency) / 4)}\r\n                            </div>\r\n                            <div className=\"text-sm text-gray-600\">Overall Score</div>\r\n                          </div>\r\n                        </div>\r\n                      </CardHeader>\r\n                      <CardContent className=\"space-y-4\">\r\n                        {/* Performance Metrics */}\r\n                        <div className=\"grid grid-cols-2 lg:grid-cols-4 gap-4\">\r\n                          <div className=\"text-center p-3 bg-blue-50 rounded-lg\">\r\n                            <div className=\"text-lg font-bold text-blue-600\">{competitor.innovationScore}</div>\r\n                            <div className=\"text-xs text-blue-700\">Innovation</div>\r\n                          </div>\r\n                          <div className=\"text-center p-3 bg-green-50 rounded-lg\">\r\n                            <div className=\"text-lg font-bold text-green-600\">{competitor.customerSatisfaction}</div>\r\n                            <div className=\"text-xs text-green-700\">Customer Sat</div>\r\n                          </div>\r\n                          <div className=\"text-center p-3 bg-purple-50 rounded-lg\">\r\n                            <div className=\"text-lg font-bold text-purple-600\">{competitor.financialHealth}</div>\r\n                            <div className=\"text-xs text-purple-700\">Financial</div>\r\n                          </div>\r\n                          <div className=\"text-center p-3 bg-orange-50 rounded-lg\">\r\n                            <div className=\"text-lg font-bold text-orange-600\">{competitor.operationalEfficiency}</div>\r\n                            <div className=\"text-xs text-orange-700\">Operations</div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        {/* Geographic Presence */}\r\n                        <div>\r\n                          <div className=\"text-sm text-gray-600 mb-2\">Geographic Presence</div>\r\n                          <div className=\"flex flex-wrap gap-1\">\r\n                            {competitor.regions.map((region, index) => (\r\n                              <Badge key={index} variant=\"outline\" className=\"text-xs\">\r\n                                <MapPin className=\"h-3 w-3 mr-1\" />\r\n                                {region}\r\n                              </Badge>\r\n                            ))}\r\n                          </div>\r\n                        </div>\r\n\r\n                        {/* Strengths and Weaknesses */}\r\n                        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\r\n                          <div>\r\n                            <div className=\"text-sm text-gray-600 mb-2\">Key Strengths</div>\r\n                            <div className=\"space-y-1\">\r\n                              {competitor.strengths.map((strength, index) => (\r\n                                <div key={index} className=\"flex items-center gap-2 text-sm\">\r\n                                  <CheckCircle className=\"h-3 w-3 text-green-600\" />\r\n                                  {strength}\r\n                                </div>\r\n                              ))}\r\n                            </div>\r\n                          </div>\r\n                          <div>\r\n                            <div className=\"text-sm text-gray-600 mb-2\">Key Weaknesses</div>\r\n                            <div className=\"space-y-1\">\r\n                              {competitor.weaknesses.map((weakness, index) => (\r\n                                <div key={index} className=\"flex items-center gap-2 text-sm\">\r\n                                  <AlertTriangle className=\"h-3 w-3 text-red-600\" />\r\n                                  {weakness}\r\n                                </div>\r\n                              ))}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        {/* Recent Strategic Moves */}\r\n                        <div>\r\n                          <div className=\"text-sm text-gray-600 mb-2\">Recent Strategic Moves</div>\r\n                          <div className=\"space-y-2\">\r\n                            {competitor.recentMoves.map((move, index) => (\r\n                              <div key={index} className=\"flex items-start gap-2 text-sm p-2 bg-gray-50 rounded\">\r\n                                <Activity className=\"h-3 w-3 text-blue-600 mt-0.5\" />\r\n                                {move}\r\n                              </div>\r\n                            ))}\r\n                          </div>\r\n                        </div>\r\n\r\n                        {showAdvancedAnalysis && (\r\n                          <div className=\"pt-3 border-t border-gray-200\">\r\n                            <div className=\"text-sm font-medium text-gray-900 mb-3\">Advanced Intelligence</div>\r\n                            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4 text-sm\">\r\n                              <div>\r\n                                <div className=\"text-gray-600\">Predicted Next Moves:</div>\r\n                                <ul className=\"mt-1 space-y-1\">\r\n                                  <li>• Market expansion to new states</li>\r\n                                  <li>• Technology acquisition or partnership</li>\r\n                                  <li>• Price competition in key segments</li>\r\n                                </ul>\r\n                              </div>\r\n                              <div>\r\n                                <div className=\"text-gray-600\">Vulnerability Assessment:</div>\r\n                                <ul className=\"mt-1 space-y-1\">\r\n                                  <li>• Capital constraints limiting expansion</li>\r\n                                  <li>• Technology gap in rural markets</li>\r\n                                  <li>• Regulatory dependency risks</li>\r\n                                </ul>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                      </CardContent>\r\n                    </Card>\r\n                  ))}\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </TabsContent>\r\n\r\n        {/* SWOT Analysis Tab */}\r\n        <TabsContent value=\"swot\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                <Shield className=\"h-5 w-5\" />\r\n                Strategic SWOT Analysis\r\n              </CardTitle>\r\n              <p className=\"text-gray-600\">Comprehensive analysis of Strengths, Weaknesses, Opportunities, and Threats</p>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n                {/* Strengths */}\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle className=\"flex items-center gap-2 text-green-700\">\r\n                      <CheckCircle className=\"h-5 w-5\" />\r\n                      Strengths\r\n                    </CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"space-y-4\">\r\n                    {swotAnalysis.strengths.map((strength, index) => (\r\n                      <div key={index} className=\"space-y-2\">\r\n                        <div className=\"flex items-center justify-between\">\r\n                          <span className=\"font-medium text-sm\">{strength.factor}</span>\r\n                          <div className=\"flex items-center gap-2\">\r\n                            <Badge variant=\"outline\" className={getImpactColor(strength.impact)}>\r\n                              {strength.impact} impact\r\n                            </Badge>\r\n                            <span className=\"text-sm font-medium\">{strength.score}/100</span>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"text-xs text-gray-600\">{strength.description}</div>\r\n                        <Progress value={strength.score} className=\"h-2\" />\r\n                      </div>\r\n                    ))}\r\n                  </CardContent>\r\n                </Card>\r\n\r\n                {/* Weaknesses */}\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle className=\"flex items-center gap-2 text-red-700\">\r\n                      <AlertTriangle className=\"h-5 w-5\" />\r\n                      Weaknesses\r\n                    </CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"space-y-4\">\r\n                    {swotAnalysis.weaknesses.map((weakness, index) => (\r\n                      <div key={index} className=\"space-y-2\">\r\n                        <div className=\"flex items-center justify-between\">\r\n                          <span className=\"font-medium text-sm\">{weakness.factor}</span>\r\n                          <div className=\"flex items-center gap-2\">\r\n                            <Badge variant=\"outline\" className={getImpactColor(weakness.impact)}>\r\n                              {weakness.impact} impact\r\n                            </Badge>\r\n                            <span className=\"text-sm font-medium\">{weakness.score}/100</span>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"text-xs text-gray-600\">{weakness.description}</div>\r\n                        <Progress value={weakness.score} className=\"h-2\" />\r\n                        {weakness.actionPlan && (\r\n                          <div className=\"text-xs text-blue-600 bg-blue-50 p-2 rounded\">\r\n                            <strong>Action Plan:</strong> {weakness.actionPlan}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    ))}\r\n                  </CardContent>\r\n                </Card>\r\n\r\n                {/* Opportunities */}\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle className=\"flex items-center gap-2 text-blue-700\">\r\n                      <Lightbulb className=\"h-5 w-5\" />\r\n                      Opportunities\r\n                    </CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"space-y-4\">\r\n                    {swotAnalysis.opportunities.map((opportunity, index) => (\r\n                      <div key={index} className=\"p-3 bg-blue-50 rounded-lg border border-blue-200\">\r\n                        <div className=\"flex items-start justify-between\">\r\n                          <div className=\"flex-1\">\r\n                            <div className=\"flex items-center gap-2\">\r\n                              <span className=\"font-medium text-blue-800\">{opportunity.factor}</span>\r\n                              <Badge\r\n                                variant=\"outline\"\r\n                                className={\r\n                                  opportunity.potential === 'high' ? 'bg-green-100 text-green-800' :\r\n                                  opportunity.potential === 'medium' ? 'bg-yellow-100 text-yellow-800' :\r\n                                  'bg-gray-100 text-gray-800'\r\n                                }\r\n                              >\r\n                                {opportunity.potential} potential\r\n                              </Badge>\r\n                            </div>\r\n                            <div className=\"text-sm text-blue-700 mt-1\">{opportunity.description}</div>\r\n                            <div className=\"grid grid-cols-2 gap-4 mt-3 text-sm\">\r\n                              <div>\r\n                                <span className=\"text-gray-600\">Timeframe:</span>\r\n                                <div className=\"font-medium\">{opportunity.timeframe}</div>\r\n                              </div>\r\n                              <div>\r\n                                <span className=\"text-gray-600\">Investment:</span>\r\n                                <div className=\"font-medium\">{formatCurrency(opportunity.investmentRequired)}</div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"text-right ml-4\">\r\n                            <div className=\"font-medium text-green-600\">\r\n                              {formatCurrency(opportunity.expectedReturn)}\r\n                            </div>\r\n                            <div className=\"text-sm text-gray-600\">Expected Return</div>\r\n                            <div className=\"text-xs text-green-600 mt-1\">\r\n                              {Math.round((opportunity.expectedReturn / opportunity.investmentRequired) * 100)}% ROI\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </CardContent>\r\n                </Card>\r\n\r\n                {/* Threats */}\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle className=\"flex items-center gap-2 text-orange-700\">\r\n                      <AlertTriangle className=\"h-5 w-5\" />\r\n                      Threats\r\n                    </CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"space-y-4\">\r\n                    {swotAnalysis.threats.map((threat, index) => (\r\n                      <div key={index} className=\"p-3 bg-orange-50 rounded-lg border border-orange-200\">\r\n                        <div className=\"flex items-start justify-between\">\r\n                          <div className=\"flex-1\">\r\n                            <div className=\"flex items-center gap-2\">\r\n                              <span className=\"font-medium text-orange-800\">{threat.factor}</span>\r\n                              <Badge\r\n                                variant=\"outline\"\r\n                                className={\r\n                                  threat.severity === 'high' ? 'bg-red-100 text-red-800' :\r\n                                  threat.severity === 'medium' ? 'bg-yellow-100 text-yellow-800' :\r\n                                  'bg-green-100 text-green-800'\r\n                                }\r\n                              >\r\n                                {threat.severity} severity\r\n                              </Badge>\r\n                            </div>\r\n                            <div className=\"text-sm text-orange-700 mt-1\">{threat.description}</div>\r\n                            <div className=\"grid grid-cols-2 gap-4 mt-3 text-sm\">\r\n                              <div>\r\n                                <span className=\"text-gray-600\">Timeline:</span>\r\n                                <div className=\"font-medium\">{threat.timeline}</div>\r\n                              </div>\r\n                              <div>\r\n                                <span className=\"text-gray-600\">Probability:</span>\r\n                                <div className=\"font-medium\">{Math.round(threat.probability * 100)}%</div>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"mt-3 p-2 bg-white rounded text-sm\">\r\n                              <span className=\"text-gray-600\">Mitigation:</span>\r\n                              <div className=\"font-medium\">{threat.mitigation}</div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </CardContent>\r\n                </Card>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        {/* Benchmarking Tab */}\r\n        <TabsContent value=\"benchmarks\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                <BarChart3 className=\"h-5 w-5\" />\r\n                Competitive Benchmarking Analysis\r\n              </CardTitle>\r\n              <p className=\"text-gray-600\">Performance comparison against industry standards and top performers</p>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-6\">\r\n                {benchmarkMetrics.map((metric, index) => (\r\n                  <Card key={index} className=\"hover:shadow-lg transition-shadow\">\r\n                    <CardContent className=\"p-4\">\r\n                      <div className=\"flex items-start justify-between\">\r\n                        <div className=\"flex-1\">\r\n                          <div className=\"flex items-center gap-3\">\r\n                            <h4 className=\"font-medium text-gray-900\">{metric.metric}</h4>\r\n                            {getTrendIcon(metric.trend)}\r\n                            <Badge variant=\"outline\" className=\"bg-blue-100 text-blue-800\">\r\n                              Rank #{metric.ranking} of {metric.totalCompetitors}\r\n                            </Badge>\r\n                          </div>\r\n\r\n                          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6 mt-4\">\r\n                            {/* Our Performance */}\r\n                            <div className=\"space-y-3\">\r\n                              <div className=\"text-sm text-gray-600\">Our Performance</div>\r\n                              <div className=\"text-2xl font-bold text-blue-600\">\r\n                                {metric.unit === '₹' ? formatCurrency(metric.ourValue) :\r\n                                 metric.unit === 'months' ? `${metric.ourValue}${metric.unit}` :\r\n                                 `${metric.ourValue}${metric.unit}`}\r\n                              </div>\r\n                              <div className=\"w-full bg-gray-200 rounded-full h-2\">\r\n                                <div\r\n                                  className=\"bg-blue-600 h-2 rounded-full\"\r\n                                  style={{\r\n                                    width: `${Math.min((metric.ourValue / metric.topPerformer) * 100, 100)}%`\r\n                                  }}\r\n                                ></div>\r\n                              </div>\r\n                            </div>\r\n\r\n                            {/* Industry Average */}\r\n                            <div className=\"space-y-3\">\r\n                              <div className=\"text-sm text-gray-600\">Industry Average</div>\r\n                              <div className=\"text-2xl font-bold text-gray-600\">\r\n                                {metric.unit === '₹' ? formatCurrency(metric.industryAverage) :\r\n                                 metric.unit === 'months' ? `${metric.industryAverage}${metric.unit}` :\r\n                                 `${metric.industryAverage}${metric.unit}`}\r\n                              </div>\r\n                              <div className=\"text-sm\">\r\n                                <span className={`font-medium ${\r\n                                  (metric.metric.includes('Cost') || metric.metric.includes('Time')) ?\r\n                                  (metric.ourValue < metric.industryAverage ? 'text-green-600' : 'text-red-600') :\r\n                                  (metric.ourValue > metric.industryAverage ? 'text-green-600' : 'text-red-600')\r\n                                }`}>\r\n                                  {(metric.metric.includes('Cost') || metric.metric.includes('Time')) ?\r\n                                    (metric.ourValue < metric.industryAverage ? 'Better' : 'Worse') :\r\n                                    (metric.ourValue > metric.industryAverage ? 'Above' : 'Below')\r\n                                  } by {\r\n                                    Math.abs(((metric.ourValue - metric.industryAverage) / metric.industryAverage) * 100).toFixed(1)\r\n                                  }%\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n\r\n                            {/* Top Performer */}\r\n                            <div className=\"space-y-3\">\r\n                              <div className=\"text-sm text-gray-600\">Best in Class</div>\r\n                              <div className=\"text-2xl font-bold text-green-600\">\r\n                                {metric.unit === '₹' ? formatCurrency(metric.topPerformer) :\r\n                                 metric.unit === 'months' ? `${metric.topPerformer}${metric.unit}` :\r\n                                 `${metric.topPerformer}${metric.unit}`}\r\n                              </div>\r\n                              <div className=\"text-sm\">\r\n                                <span className=\"text-orange-600 font-medium\">\r\n                                  Gap: {\r\n                                    Math.abs(((metric.topPerformer - metric.ourValue) / metric.topPerformer) * 100).toFixed(1)\r\n                                  }%\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </CardContent>\r\n                  </Card>\r\n                ))}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          {/* Performance Summary */}\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                <Star className=\"h-5 w-5\" />\r\n                Benchmarking Summary\r\n              </CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\r\n                <div className=\"text-center p-6 bg-green-50 rounded-lg\">\r\n                  <div className=\"text-3xl font-bold text-green-600\">\r\n                    {benchmarkMetrics.filter(m =>\r\n                      (m.metric.includes('Cost') || m.metric.includes('Time')) ?\r\n                      m.ourValue < m.industryAverage :\r\n                      m.ourValue > m.industryAverage\r\n                    ).length}\r\n                  </div>\r\n                  <div className=\"text-sm text-green-700 mt-2\">Above Industry Average</div>\r\n                </div>\r\n                <div className=\"text-center p-6 bg-blue-50 rounded-lg\">\r\n                  <div className=\"text-3xl font-bold text-blue-600\">\r\n                    {Math.round(benchmarkMetrics.reduce((sum, m) => sum + m.ranking, 0) / benchmarkMetrics.length)}\r\n                  </div>\r\n                  <div className=\"text-sm text-blue-700 mt-2\">Average Ranking</div>\r\n                </div>\r\n                <div className=\"text-center p-6 bg-purple-50 rounded-lg\">\r\n                  <div className=\"text-3xl font-bold text-purple-600\">\r\n                    {benchmarkMetrics.filter(m => m.ranking <= 3).length}\r\n                  </div>\r\n                  <div className=\"text-sm text-purple-700 mt-2\">Top 3 Rankings</div>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        {/* Competitive Advantages Tab */}\r\n        <TabsContent value=\"advantages\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                <Crown className=\"h-5 w-5\" />\r\n                Competitive Advantages & Differentiation\r\n              </CardTitle>\r\n              <p className=\"text-gray-600\">Analysis of sustainable competitive advantages and strategic differentiation</p>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-6\">\r\n                {competitiveAdvantages.map((advantage) => (\r\n                  <Card key={advantage.id} className=\"hover:shadow-lg transition-shadow\">\r\n                    <CardHeader>\r\n                      <div className=\"flex items-start justify-between\">\r\n                        <div>\r\n                          <div className=\"flex items-center gap-3\">\r\n                            <CardTitle className=\"text-lg\">{advantage.advantage}</CardTitle>\r\n                            <Badge\r\n                              variant=\"outline\"\r\n                              className={\r\n                                advantage.category === 'technology' ? 'bg-blue-100 text-blue-800' :\r\n                                advantage.category === 'operational' ? 'bg-green-100 text-green-800' :\r\n                                advantage.category === 'financial' ? 'bg-purple-100 text-purple-800' :\r\n                                advantage.category === 'market' ? 'bg-orange-100 text-orange-800' :\r\n                                'bg-gray-100 text-gray-800'\r\n                              }\r\n                            >\r\n                              {advantage.category}\r\n                            </Badge>\r\n                            <Badge\r\n                              variant=\"outline\"\r\n                              className={getSustainabilityColor(advantage.sustainability)}\r\n                            >\r\n                              {advantage.sustainability}\r\n                            </Badge>\r\n                          </div>\r\n                          <p className=\"text-sm text-gray-600 mt-2\">{advantage.description}</p>\r\n                        </div>\r\n                        <div className=\"text-right\">\r\n                          <div className=\"text-2xl font-bold text-green-600\">{advantage.strength}</div>\r\n                          <div className=\"text-sm text-gray-600\">Strength Score</div>\r\n                        </div>\r\n                      </div>\r\n                    </CardHeader>\r\n                    <CardContent className=\"space-y-4\">\r\n                      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n                        {/* Evidence */}\r\n                        <div>\r\n                          <div className=\"text-sm font-medium text-gray-900 mb-3\">Supporting Evidence</div>\r\n                          <div className=\"space-y-2\">\r\n                            {advantage.evidence.map((evidence, index) => (\r\n                              <div key={index} className=\"flex items-start gap-2 text-sm\">\r\n                                <CheckCircle className=\"h-3 w-3 text-green-600 mt-0.5\" />\r\n                                {evidence}\r\n                              </div>\r\n                            ))}\r\n                          </div>\r\n                        </div>\r\n\r\n                        {/* Threats */}\r\n                        <div>\r\n                          <div className=\"text-sm font-medium text-gray-900 mb-3\">Potential Threats</div>\r\n                          <div className=\"space-y-2\">\r\n                            {advantage.threats.map((threat, index) => (\r\n                              <div key={index} className=\"flex items-start gap-2 text-sm\">\r\n                                <AlertTriangle className=\"h-3 w-3 text-red-600 mt-0.5\" />\r\n                                {threat}\r\n                              </div>\r\n                            ))}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* Reinforcement Plan */}\r\n                      <div className=\"pt-3 border-t border-gray-200\">\r\n                        <div className=\"text-sm font-medium text-gray-900 mb-2\">Reinforcement Strategy</div>\r\n                        <div className=\"text-sm text-gray-700 p-3 bg-blue-50 rounded-lg\">\r\n                          {advantage.reinforcementPlan}\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* Strength Meter */}\r\n                      <div className=\"pt-3 border-t border-gray-200\">\r\n                        <div className=\"flex justify-between text-sm mb-2\">\r\n                          <span>Competitive Strength</span>\r\n                          <span>{advantage.strength}/100</span>\r\n                        </div>\r\n                        <Progress value={advantage.strength} className=\"h-3\" />\r\n                      </div>\r\n                    </CardContent>\r\n                  </Card>\r\n                ))}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          {/* Advantage Portfolio Summary */}\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                <Network className=\"h-5 w-5\" />\r\n                Competitive Advantage Portfolio\r\n              </CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n                {/* By Category */}\r\n                <div className=\"space-y-4\">\r\n                  <h4 className=\"font-medium text-gray-900\">Advantages by Category</h4>\r\n                  <div className=\"space-y-3\">\r\n                    {Array.from(new Set(competitiveAdvantages.map(a => a.category))).map(category => {\r\n                      const categoryAdvantages = competitiveAdvantages.filter(a => a.category === category);\r\n                      const avgStrength = categoryAdvantages.reduce((sum, a) => sum + a.strength, 0) / categoryAdvantages.length;\r\n\r\n                      return (\r\n                        <div key={category} className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\r\n                          <div className=\"flex items-center gap-3\">\r\n                            <div className={`p-2 rounded ${\r\n                              category === 'technology' ? 'bg-blue-100' :\r\n                              category === 'operational' ? 'bg-green-100' :\r\n                              category === 'financial' ? 'bg-purple-100' :\r\n                              category === 'market' ? 'bg-orange-100' :\r\n                              'bg-gray-100'\r\n                            }`}>\r\n                              <Brain className=\"h-4 w-4\" />\r\n                            </div>\r\n                            <div>\r\n                              <div className=\"font-medium capitalize\">{category}</div>\r\n                              <div className=\"text-sm text-gray-600\">{categoryAdvantages.length} advantages</div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"text-right\">\r\n                            <div className=\"font-medium\">{Math.round(avgStrength)}/100</div>\r\n                            <div className=\"text-sm text-gray-600\">Avg Strength</div>\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div>\r\n\r\n                {/* By Sustainability */}\r\n                <div className=\"space-y-4\">\r\n                  <h4 className=\"font-medium text-gray-900\">Sustainability Assessment</h4>\r\n                  <div className=\"space-y-3\">\r\n                    {['sustainable', 'temporary', 'at-risk'].map(sustainability => {\r\n                      const sustainabilityAdvantages = competitiveAdvantages.filter(a => a.sustainability === sustainability);\r\n                      const percentage = (sustainabilityAdvantages.length / competitiveAdvantages.length) * 100;\r\n\r\n                      return (\r\n                        <div key={sustainability} className=\"space-y-2\">\r\n                          <div className=\"flex justify-between text-sm\">\r\n                            <span className=\"font-medium capitalize\">{sustainability} Advantages</span>\r\n                            <span>{sustainabilityAdvantages.length} ({percentage.toFixed(0)}%)</span>\r\n                          </div>\r\n                          <Progress value={percentage} className=\"h-2\" />\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n\r\n                  <div className=\"mt-6 p-4 bg-green-50 rounded-lg border border-green-200\">\r\n                    <div className=\"font-medium text-green-800\">Strategic Recommendation</div>\r\n                    <div className=\"text-sm text-green-700 mt-1\">\r\n                      Focus on reinforcing sustainable advantages while developing mitigation strategies for at-risk advantages.\r\n                      Priority should be given to technology and market advantages as they provide the strongest differentiation.\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CompetitiveIntelligence;","import React, { useState, useEffect } from 'react'\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'\r\nimport { ExecutiveAnalyticsProvider } from '../contexts/ExecutiveAnalyticsContext'\r\nimport { usePlatform } from '../contexts/PlatformContext'\r\nimport ExecutiveSummary from '../components/executive/ExecutiveSummary'\r\nimport VoiceAnalytics from '../components/voice/VoiceAnalytics'\r\nimport StrategicPlanning from '../components/executive/StrategicPlanning'\r\nimport CarbonAnalytics from '../components/executive/CarbonAnalytics'\r\nimport CompetitiveIntelligence from '../components/executive/CompetitiveIntelligence'\r\nimport { TrendingUp, Mic, BarChart3, Leaf, Target, Brain, Globe } from 'lucide-react'\r\n\r\ninterface DashboardTab {\r\n  id: string;\r\n  label: string;\r\n  icon: React.ReactNode;\r\n  description: string;\r\n}\r\n\r\nconst UrjaNeta: React.FC = () => {\r\n  const { trackModuleUsage, updateBreadcrumbs } = usePlatform()\r\n  const [activeTab, setActiveTab] = useState('summary');\r\n\r\n  const dashboardTabs: DashboardTab[] = [\r\n    {\r\n      id: 'summary',\r\n      label: 'Executive Summary',\r\n      icon: <TrendingUp className=\"h-4 w-4\" />,\r\n      description: 'Real-time KPIs and business intelligence'\r\n    },\r\n    {\r\n      id: 'voice',\r\n      label: 'Voice Analytics',\r\n      icon: <Mic className=\"h-4 w-4\" />,\r\n      description: 'Voice-enabled business queries'\r\n    },\r\n    {\r\n      id: 'strategic',\r\n      label: 'Strategic Planning',\r\n      icon: <Target className=\"h-4 w-4\" />,\r\n      description: 'Strategic initiatives and planning'\r\n    },\r\n    {\r\n      id: 'carbon',\r\n      label: 'Carbon Analytics',\r\n      icon: <Leaf className=\"h-4 w-4\" />,\r\n      description: 'Environmental impact and carbon credits'\r\n    },\r\n    {\r\n      id: 'competitive',\r\n      label: 'Market Intelligence',\r\n      icon: <BarChart3 className=\"h-4 w-4\" />,\r\n      description: 'Competitive analysis and market insights'\r\n    }\r\n  ];\r\n\r\n  const translations = {\r\n    en: {\r\n      title: 'UrjaNeta Executive Analytics',\r\n      subtitle: 'Advanced voice-enabled business intelligence platform',\r\n    },\r\n    hi: {\r\n      title: 'उर्जा नेता कार्यकारी विश्लेषण',\r\n      subtitle: 'उन्नत वॉइस-सक्षम व्यापारिक बुद्धिमत्ता प्लेटफॉर्म',\r\n    }\r\n  };\r\n\r\n  const t = translations['en']; // Default to English for now\r\n\r\n  // Track module usage and update breadcrumbs for platform integration\r\n  useEffect(() => {\r\n    trackModuleUsage('urja-neta')\r\n    updateBreadcrumbs([\r\n      { label: 'UrjaNeta', url: '/urjaneta', module: 'urja-neta' },\r\n      { label: 'Executive Analytics', url: '/urjaneta', module: 'urja-neta' }\r\n    ])\r\n  }, [])\r\n\r\n  return (\r\n    <ExecutiveAnalyticsProvider>\r\n      <div className=\"space-y-6\">\r\n        {/* Header */}\r\n        <div className=\"flex items-center justify-between\">\r\n          <div className=\"flex items-center gap-4\">\r\n            <div className=\"p-3 rounded-lg bg-gradient-to-r from-blue-600 to-purple-600 text-white\">\r\n              <Brain className=\"h-8 w-8\" />\r\n            </div>\r\n            <div>\r\n              <h1 className=\"text-3xl font-bold text-gray-900\">{t.title}</h1>\r\n              <p className=\"text-gray-600 flex items-center gap-2\">\r\n                <Globe className=\"h-4 w-4\" />\r\n                {t.subtitle}\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div className=\"flex items-center gap-2\">\r\n            <div className=\"px-3 py-1 bg-green-100 text-green-800 rounded-full text-sm font-medium\">\r\n              • Live Data\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Executive Dashboard Tabs */}\r\n        <Tabs value={activeTab} onValueChange={setActiveTab} className=\"w-full\">\r\n          <TabsList className=\"grid w-full grid-cols-5 lg:grid-cols-5\">\r\n            {dashboardTabs.map((tab) => (\r\n              <TabsTrigger\r\n                key={tab.id}\r\n                value={tab.id}\r\n                className=\"flex flex-col gap-1 p-3 h-auto\"\r\n              >\r\n                <div className=\"flex items-center gap-2\">\r\n                  {tab.icon}\r\n                  <span className=\"text-xs font-medium hidden sm:inline\">{tab.label}</span>\r\n                </div>\r\n                <span className=\"text-xs text-gray-500 hidden lg:inline\">\r\n                  {tab.description}\r\n                </span>\r\n              </TabsTrigger>\r\n            ))}\r\n          </TabsList>\r\n\r\n          {/* Executive Summary Tab */}\r\n          <TabsContent value=\"summary\" className=\"space-y-6\">\r\n            <ExecutiveSummary />\r\n          </TabsContent>\r\n\r\n          {/* Voice Analytics Tab */}\r\n          <TabsContent value=\"voice\" className=\"space-y-6\">\r\n            <VoiceAnalytics />\r\n          </TabsContent>\r\n\r\n          {/* Strategic Planning Tab */}\r\n          <TabsContent value=\"strategic\" className=\"space-y-6\">\r\n            <StrategicPlanning />\r\n          </TabsContent>\r\n\r\n          {/* Carbon Analytics Tab */}\r\n          <TabsContent value=\"carbon\" className=\"space-y-6\">\r\n            <CarbonAnalytics />\r\n          </TabsContent>\r\n\r\n          {/* Competitive Intelligence Tab */}\r\n          <TabsContent value=\"competitive\" className=\"space-y-6\">\r\n            <CompetitiveIntelligence />\r\n          </TabsContent>\r\n        </Tabs>\r\n      </div>\r\n    </ExecutiveAnalyticsProvider>\r\n  );\r\n};\r\n\r\nexport default UrjaNeta;","import React, { Suspense } from 'react';\r\nimport { Routes, Route, useNavigate, useLocation } from 'react-router-dom';\r\nimport BaseLayout from '@/components/layout/BaseLayout';\r\nimport {\r\n  LayoutDashboard,\r\n  Calendar,\r\n  Route as RouteIcon,\r\n  Truck,\r\n  CheckCircle,\r\n  Settings,\r\n  History\r\n} from 'lucide-react';\r\n\r\n// Lazy loaded components for better performance\r\nconst Dashboard = React.lazy(() =>\r\n  import('./pages/Dashboard/Dashboard').then(module => ({\r\n    default: module.Dashboard\r\n  }))\r\n);\r\n\r\nconst ScheduleManager = React.lazy(() =>\r\n  import('./pages/ScheduleManager/ScheduleManager').then(module => ({\r\n    default: module.ScheduleManager\r\n  }))\r\n);\r\n\r\nconst RouteOptimization = React.lazy(() =>\r\n  import('./pages/RouteOptimization/RouteOptimization').then(module => ({\r\n    default: module.RouteOptimization\r\n  }))\r\n);\r\n\r\nconst ActiveDeliveries = React.lazy(() =>\r\n  import('./pages/ActiveDeliveries/ActiveDeliveries').then(module => ({\r\n    default: module.ActiveDeliveries\r\n  }))\r\n);\r\n\r\nconst DeliveryConfirmation = React.lazy(() =>\r\n  import('./pages/DeliveryConfirmation/DeliveryConfirmation').then(module => ({\r\n    default: module.DeliveryConfirmation\r\n  }))\r\n);\r\n\r\nconst VehicleManagement = React.lazy(() =>\r\n  import('./pages/VehicleManagement/VehicleManagement').then(module => ({\r\n    default: module.VehicleManagement\r\n  }))\r\n);\r\n\r\nconst DeliveryHistory = React.lazy(() =>\r\n  import('./pages/DeliveryHistory/DeliveryHistory').then(module => ({\r\n    default: module.DeliveryHistory\r\n  }))\r\n);\r\n\r\n// Loading component for Suspense\r\nconst PageLoader: React.FC = () => (\r\n  <div className=\"flex items-center justify-center min-h-[400px]\">\r\n    <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\r\n    <span className=\"ml-3 text-gray-600\">Loading...</span>\r\n  </div>\r\n);\r\n\r\nconst TransporterModule: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  // Base path for the transporter module\r\n  const basePath = '/transport';\r\n\r\n  const navigationItems = [\r\n    {\r\n      id: 'dashboard',\r\n      label: 'Dashboard',\r\n      icon: <LayoutDashboard className=\"w-5 h-5\" />,\r\n      onClick: () => navigate(`${basePath}/dashboard`),\r\n      isActive: location.pathname === `${basePath}/dashboard` || location.pathname === basePath\r\n    },\r\n    {\r\n      id: 'schedule',\r\n      label: 'Schedule Manager',\r\n      icon: <Calendar className=\"w-5 h-5\" />,\r\n      onClick: () => navigate(`${basePath}/schedule`),\r\n      isActive: location.pathname === `${basePath}/schedule`,\r\n      badge: '15' // Example badge for pending schedules\r\n    },\r\n    {\r\n      id: 'routes',\r\n      label: 'Route Optimization',\r\n      icon: <RouteIcon className=\"w-5 h-5\" />,\r\n      onClick: () => navigate(`${basePath}/routes`),\r\n      isActive: location.pathname === `${basePath}/routes`\r\n    },\r\n    {\r\n      id: 'deliveries',\r\n      label: 'Active Deliveries',\r\n      icon: <Truck className=\"w-5 h-5\" />,\r\n      onClick: () => navigate(`${basePath}/deliveries`),\r\n      isActive: location.pathname === `${basePath}/deliveries`,\r\n      badge: '8' // Example badge for active deliveries\r\n    },\r\n    {\r\n      id: 'confirmation',\r\n      label: 'Delivery Confirmation',\r\n      icon: <CheckCircle className=\"w-5 h-5\" />,\r\n      onClick: () => navigate(`${basePath}/confirmation`),\r\n      isActive: location.pathname === `${basePath}/confirmation`,\r\n      badge: '3' // Example badge for pending confirmations\r\n    },\r\n    {\r\n      id: 'vehicles',\r\n      label: 'Vehicle Management',\r\n      icon: <Settings className=\"w-5 h-5\" />,\r\n      onClick: () => navigate(`${basePath}/vehicles`),\r\n      isActive: location.pathname === `${basePath}/vehicles`\r\n    },\r\n    {\r\n      id: 'history',\r\n      label: 'Delivery History',\r\n      icon: <History className=\"w-5 h-5\" />,\r\n      onClick: () => navigate(`${basePath}/history`),\r\n      isActive: location.pathname === `${basePath}/history`\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <BaseLayout\r\n      moduleName=\"Transporter\"\r\n      moduleSubtitle=\"Biogas Delivery Management\"\r\n      navigationItems={navigationItems}\r\n      userInfo={{\r\n        name: \"Transport Manager\",\r\n        role: \"Operations Head\"\r\n      }}\r\n    >\r\n      <div className=\"p-6\">\r\n        <Suspense fallback={<PageLoader />}>\r\n          <Routes>\r\n            {/* Default route redirects to dashboard */}\r\n            <Route path=\"/\" element={<Dashboard />} />\r\n            <Route path=\"/dashboard\" element={<Dashboard />} />\r\n            <Route path=\"/schedule\" element={<ScheduleManager />} />\r\n            <Route path=\"/routes\" element={<RouteOptimization />} />\r\n            <Route path=\"/deliveries\" element={<ActiveDeliveries />} />\r\n            <Route path=\"/confirmation\" element={<DeliveryConfirmation />} />\r\n            <Route path=\"/vehicles\" element={<VehicleManagement />} />\r\n            <Route path=\"/history\" element={<DeliveryHistory />} />\r\n\r\n            {/* Fallback route */}\r\n            <Route path=\"*\" element={<Dashboard />} />\r\n          </Routes>\r\n        </Suspense>\r\n      </div>\r\n    </BaseLayout>\r\n  );\r\n};\r\n\r\nexport default TransporterModule;","import React, { useEffect } from 'react'\r\nimport { useNavigate, useLocation } from 'react-router-dom'\r\nimport { useAuth } from '../../contexts/AuthContext'\r\n\r\nconst RoleBasedRouter: React.FC = () => {\r\n  const { user, loading } = useAuth()\r\n  const navigate = useNavigate()\r\n  const location = useLocation()\r\n\r\n  useEffect(() => {\r\n    // Don't redirect if we're still loading or if user is not logged in\r\n    if (loading || !user) return\r\n\r\n    // Don't redirect if we're already on login page or other specific pages\r\n    if (location.pathname === '/login' ||\r\n        location.pathname === '/admin' ||\r\n        location.pathname === '/testing' ||\r\n        location.pathname === '/database-setup') {\r\n      return\r\n    }\r\n\r\n    // Role-based routing logic\r\n    const getDefaultRouteForUser = () => {\r\n      // For executives and senior leaders, prioritize executive dashboard\r\n      // But let admin appType users go to admin dashboard\r\n      if ((user.executiveLevel || user.role === 'senior_leader') && user.appType !== 'admin') {\r\n        return '/executive-dashboard'\r\n      }\r\n\r\n      // Check if user has biogas-related roles from backend\r\n      const hasBiogasRole = user.role === 'cluster_manager' ||\r\n                           user.appType === 'biogassangh' ||\r\n                           (user.roles && user.roles.some((r: string) =>\r\n                             r === 'BIOGAS_SANGH' || r === 'CLUSTER_MANAGER'))\r\n\r\n      // Prioritize biogas users to go to cluster dashboard\r\n      if (hasBiogasRole) {\r\n        return '/cluster'\r\n      }\r\n\r\n      // Route based on app type\r\n      switch (user.appType) {\r\n        case 'gausakhi':\r\n          // Field workers -> Gaushala Dashboard (cattle management)\r\n          if (user.role === 'field_worker') {\r\n            return '/gaushala'\r\n          }\r\n          return '/dashboard'\r\n\r\n        case 'biogassangh':\r\n          // Cluster managers -> BiogasSangh Dashboard\r\n          return '/cluster'\r\n\r\n        case 'urjavyapar':\r\n          // CBG sales -> Sales dashboard\r\n          return '/sales'\r\n\r\n        case 'urjasanyojak':\r\n          // Business development -> UrjaSanyojak Dashboard\r\n          return '/urjasanyojak'\r\n\r\n        case 'admin':\r\n          // System administrators -> Admin dashboard\r\n          return '/admin'\r\n\r\n        case 'urjaneta':\r\n          // Senior leaders/CEO -> UrjaNeta executive analytics\r\n          return '/urja-neta'\r\n\r\n        case 'shuddhidoot':\r\n          // Purification operators -> Purification dashboard\r\n          return '/purification'\r\n\r\n        default:\r\n          // Default fallback\r\n          return '/dashboard'\r\n      }\r\n    }\r\n\r\n    // Only redirect if we're on the root path or login redirect\r\n    if (location.pathname === '/' || location.pathname === '/dashboard') {\r\n      const defaultRoute = getDefaultRouteForUser()\r\n      console.log(`Routing ${user.name} (${user.role}/${user.appType}) to ${defaultRoute}`)\r\n      navigate(defaultRoute, { replace: true })\r\n    }\r\n  }, [user, loading, location, navigate])\r\n\r\n  // This component doesn't render anything, it just handles routing\r\n  return null\r\n}\r\n\r\nexport default RoleBasedRouter","import { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom'\r\nimport { AuthProvider, useAuth } from './contexts/AuthContext'\r\nimport { PlatformProvider } from './contexts/PlatformContext'\r\nimport { Toaster } from 'sonner'\r\nimport Login from './pages/Login'\r\nimport AdminModule from './modules/admin/Admin.container'\r\nimport Admin from './pages/Admin'\r\nimport UrjaSanyojak from './pages/UrjaSanyojak'\r\nimport Dashboard from './pages/Dashboard'\r\nimport ExecutiveDashboard from './pages/ExecutiveDashboard'\r\nimport GauShala from './pages/GauShala'\r\nimport BiogasSangh from './pages/BiogasSangh'\r\nimport { SalesModule } from './modules/sales'\r\nimport { PurificationModule } from './modules/purification'\r\nimport UrjaNeta from './pages/UrjaNeta'\r\nimport TransporterModule from './modules/transporter'\r\nimport RoleBasedRouter from './components/routing/RoleBasedRouter'\r\n\r\nfunction PrivateRoute({ children }: { children: React.ReactNode }) {\r\n  const { user, loading } = useAuth()\r\n\r\n  if (loading) {\r\n    return <div className=\"flex items-center justify-center min-h-screen\">Loading...</div>\r\n  }\r\n\r\n  return user ? <>{children}</> : <Navigate to=\"/login\" />\r\n}\r\n\r\nfunction AppRoutes() {\r\n  return (\r\n    <Routes>\r\n      <Route path=\"/login\" element={<Login />} />\r\n      <Route path=\"/\" element={\r\n        <PrivateRoute>\r\n          <RoleBasedRouter />\r\n        </PrivateRoute>\r\n      } />\r\n      <Route path=\"/admin/*\" element={\r\n        <PrivateRoute>\r\n          <AdminModule />\r\n        </PrivateRoute>\r\n      } />\r\n      <Route path=\"/gaushala/*\" element={\r\n        <PrivateRoute>\r\n          <GauShala />\r\n        </PrivateRoute>\r\n      } />\r\n      <Route path=\"/cluster/*\" element={\r\n        <PrivateRoute>\r\n          <BiogasSangh />\r\n        </PrivateRoute>\r\n      } />\r\n      <Route path=\"/sales/*\" element={\r\n        <PrivateRoute>\r\n          <SalesModule />\r\n        </PrivateRoute>\r\n      } />\r\n      <Route path=\"/purification/*\" element={\r\n        <PrivateRoute>\r\n          <PurificationModule />\r\n        </PrivateRoute>\r\n      } />\r\n      <Route path=\"/urjaneta/*\" element={\r\n        <PrivateRoute>\r\n          <UrjaNeta />\r\n        </PrivateRoute>\r\n      } />\r\n      <Route path=\"/urjasanyojak/*\" element={\r\n        <PrivateRoute>\r\n          <UrjaSanyojak />\r\n        </PrivateRoute>\r\n      } />\r\n      <Route path=\"/admin-dashboard/*\" element={\r\n        <PrivateRoute>\r\n          <Admin />\r\n        </PrivateRoute>\r\n      } />\r\n      <Route path=\"/dashboard/*\" element={\r\n        <PrivateRoute>\r\n          <Dashboard />\r\n        </PrivateRoute>\r\n      } />\r\n      <Route path=\"/executive/*\" element={\r\n        <PrivateRoute>\r\n          <ExecutiveDashboard />\r\n        </PrivateRoute>\r\n      } />\r\n      <Route path=\"/transport/*\" element={\r\n        <PrivateRoute>\r\n          <TransporterModule />\r\n        </PrivateRoute>\r\n      } />\r\n    </Routes>\r\n  )\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <AuthProvider>\r\n      <PlatformProvider>\r\n        <Router>\r\n          <AppRoutes />\r\n          <Toaster position=\"top-right\" richColors closeButton />\r\n        </Router>\r\n      </PlatformProvider>\r\n    </AuthProvider>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom/client'\r\nimport App from './App.tsx'\r\nimport './index.css'\r\n\r\nReactDOM.createRoot(document.getElementById('root')!).render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n)\r\n"],"file":"assets/index-Cwg1D4Xy.js"}