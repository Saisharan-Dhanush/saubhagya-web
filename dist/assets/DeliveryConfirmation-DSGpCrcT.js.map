{"version":3,"file":"DeliveryConfirmation-DSGpCrcT.js","sources":["../../src/modules/transporter/pages/DeliveryConfirmation/DeliveryConfirmation.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Card, CardHeader, CardTitle, CardDescription, CardContent } from '@/components/ui/card';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Button } from '@/components/ui/button';\r\nimport {\r\n  CheckCircle,\r\n  Camera,\r\n  FileText,\r\n  PenTool,\r\n  Package,\r\n  MapPin,\r\n  Clock,\r\n  User,\r\n  AlertTriangle,\r\n  Save,\r\n  Send,\r\n  X\r\n} from 'lucide-react';\r\nimport { transporterService } from '../../services/mockDataService';\r\nimport { Delivery } from '../../types';\r\n\r\ninterface ConfirmationForm {\r\n  deliveryId: string;\r\n  confirmedBy: string;\r\n  customerSignature: string;\r\n  photo: string;\r\n  notes: string;\r\n  actualQuantity: number;\r\n  customerSatisfaction: number;\r\n  deliveryIssues: string[];\r\n}\r\n\r\nconst DeliveryConfirmation: React.FC = () => {\r\n  const [pendingDeliveries, setPendingDeliveries] = useState<Delivery[]>([]);\r\n  const [selectedDelivery, setSelectedDelivery] = useState<Delivery | null>(null);\r\n  const [confirmationForm, setConfirmationForm] = useState<ConfirmationForm>({\r\n    deliveryId: '',\r\n    confirmedBy: '',\r\n    customerSignature: '',\r\n    photo: '',\r\n    notes: '',\r\n    actualQuantity: 0,\r\n    customerSatisfaction: 5,\r\n    deliveryIssues: []\r\n  });\r\n  const [loading, setLoading] = useState(true);\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const deliveryIssueOptions = [\r\n    'Late delivery',\r\n    'Quantity discrepancy',\r\n    'Quality issues',\r\n    'Customer unavailable',\r\n    'Access problems',\r\n    'Equipment malfunction',\r\n    'Documentation issues'\r\n  ];\r\n\r\n  useEffect(() => {\r\n    loadPendingDeliveries();\r\n  }, []);\r\n\r\n  const loadPendingDeliveries = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await transporterService.getActiveDeliveries();\r\n      if (response.success) {\r\n        // Filter for deliveries that need confirmation (in_transit status)\r\n        const pendingConfirmation = response.data.filter(\r\n          d => d.status === 'in_transit' || d.status === 'picked_up'\r\n        );\r\n        setPendingDeliveries(pendingConfirmation);\r\n      } else {\r\n        setError('Failed to load pending deliveries');\r\n      }\r\n    } catch (err) {\r\n      setError('Failed to load pending deliveries');\r\n      console.error('Pending deliveries load error:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSelectDelivery = (delivery: Delivery) => {\r\n    setSelectedDelivery(delivery);\r\n    setConfirmationForm({\r\n      deliveryId: delivery.id,\r\n      confirmedBy: 'Driver', // Default value\r\n      customerSignature: '',\r\n      photo: '',\r\n      notes: '',\r\n      actualQuantity: delivery.biogasQuantity,\r\n      customerSatisfaction: 5,\r\n      deliveryIssues: []\r\n    });\r\n  };\r\n\r\n  const handleIssueToggle = (issue: string) => {\r\n    const currentIssues = confirmationForm.deliveryIssues;\r\n    const updatedIssues = currentIssues.includes(issue)\r\n      ? currentIssues.filter(i => i !== issue)\r\n      : [...currentIssues, issue];\r\n\r\n    setConfirmationForm({\r\n      ...confirmationForm,\r\n      deliveryIssues: updatedIssues\r\n    });\r\n  };\r\n\r\n  const handleSignatureCapture = () => {\r\n    // Simulate signature capture\r\n    setConfirmationForm({\r\n      ...confirmationForm,\r\n      customerSignature: `signature_${Date.now()}.png`\r\n    });\r\n  };\r\n\r\n  const handlePhotoCapture = () => {\r\n    // Simulate photo capture\r\n    setConfirmationForm({\r\n      ...confirmationForm,\r\n      photo: `delivery_photo_${Date.now()}.jpg`\r\n    });\r\n  };\r\n\r\n  const handleSubmitConfirmation = async () => {\r\n    if (!selectedDelivery) return;\r\n\r\n    try {\r\n      setSubmitting(true);\r\n\r\n      const response = await transporterService.confirmDelivery(\r\n        selectedDelivery.id,\r\n        confirmationForm\r\n      );\r\n\r\n      if (response.success) {\r\n        // Remove confirmed delivery from pending list\r\n        setPendingDeliveries(prev =>\r\n          prev.filter(d => d.id !== selectedDelivery.id)\r\n        );\r\n        setSelectedDelivery(null);\r\n        setConfirmationForm({\r\n          deliveryId: '',\r\n          confirmedBy: '',\r\n          customerSignature: '',\r\n          photo: '',\r\n          notes: '',\r\n          actualQuantity: 0,\r\n          customerSatisfaction: 5,\r\n          deliveryIssues: []\r\n        });\r\n\r\n        // Show success message (in a real app, you might use a toast notification)\r\n        alert('Delivery confirmed successfully!');\r\n      } else {\r\n        setError('Failed to confirm delivery');\r\n      }\r\n    } catch (err) {\r\n      setError('Failed to confirm delivery');\r\n      console.error('Confirmation error:', err);\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const formatTime = (dateString: string) => {\r\n    return new Date(dateString).toLocaleString('en-IN', {\r\n      month: 'short',\r\n      day: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"space-y-6\">\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold tracking-tight\">Delivery Confirmation</h1>\r\n          <p className=\"text-muted-foreground\">\r\n            Confirm completed deliveries and collect customer feedback\r\n          </p>\r\n        </div>\r\n        <div className=\"animate-pulse space-y-4\">\r\n          {Array.from({ length: 3 }).map((_, index) => (\r\n            <Card key={index}>\r\n              <CardContent className=\"pt-6\">\r\n                <div className=\"h-4 bg-gray-300 rounded w-3/4 mb-2\"></div>\r\n                <div className=\"h-4 bg-gray-300 rounded w-1/2\"></div>\r\n              </CardContent>\r\n            </Card>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"space-y-6\">\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold tracking-tight\">Delivery Confirmation</h1>\r\n          <p className=\"text-muted-foreground\">\r\n            Confirm completed deliveries and collect customer feedback\r\n          </p>\r\n        </div>\r\n        <Card className=\"border-red-200 bg-red-50\">\r\n          <CardContent className=\"pt-6\">\r\n            <div className=\"flex items-center space-x-2 text-red-800\">\r\n              <AlertTriangle className=\"h-5 w-5\" />\r\n              <span>{error}</span>\r\n            </div>\r\n            <Button\r\n              onClick={() => window.location.reload()}\r\n              className=\"mt-4\"\r\n              variant=\"outline\"\r\n            >\r\n              Retry\r\n            </Button>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div>\r\n        <h1 className=\"text-3xl font-bold tracking-tight\">Delivery Confirmation</h1>\r\n        <p className=\"text-muted-foreground\">\r\n          Confirm completed deliveries and collect customer feedback\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n        {/* Pending Deliveries List */}\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle className=\"flex items-center space-x-2\">\r\n              <Package className=\"h-5 w-5\" />\r\n              <span>Pending Confirmations</span>\r\n              <Badge variant=\"outline\">{pendingDeliveries.length}</Badge>\r\n            </CardTitle>\r\n            <CardDescription>\r\n              Deliveries ready for confirmation\r\n            </CardDescription>\r\n          </CardHeader>\r\n          <CardContent>\r\n            {pendingDeliveries.length === 0 ? (\r\n              <div className=\"text-center py-8\">\r\n                <CheckCircle className=\"h-12 w-12 text-green-500 mx-auto mb-4\" />\r\n                <h3 className=\"text-lg font-medium text-gray-900 mb-2\">All caught up!</h3>\r\n                <p className=\"text-gray-500\">No deliveries pending confirmation.</p>\r\n              </div>\r\n            ) : (\r\n              <div className=\"space-y-4\">\r\n                {pendingDeliveries.map((delivery) => (\r\n                  <div\r\n                    key={delivery.id}\r\n                    className={`p-4 border rounded-lg cursor-pointer transition-colors ${\r\n                      selectedDelivery?.id === delivery.id\r\n                        ? 'border-blue-500 bg-blue-50'\r\n                        : 'border-gray-200 hover:border-gray-300'\r\n                    }`}\r\n                    onClick={() => handleSelectDelivery(delivery)}\r\n                  >\r\n                    <div className=\"flex justify-between items-start mb-2\">\r\n                      <div>\r\n                        <h4 className=\"font-medium\">{delivery.customerName}</h4>\r\n                        <p className=\"text-sm text-gray-600\">#{delivery.id}</p>\r\n                      </div>\r\n                      <Badge className=\"bg-yellow-500 text-white\">\r\n                        {delivery.status === 'in_transit' ? 'In Transit' : 'Picked Up'}\r\n                      </Badge>\r\n                    </div>\r\n\r\n                    <div className=\"space-y-1 text-sm text-gray-600\">\r\n                      <div className=\"flex items-center space-x-2\">\r\n                        <MapPin className=\"h-4 w-4\" />\r\n                        <span>{delivery.customerAddress}</span>\r\n                      </div>\r\n\r\n                      <div className=\"flex items-center space-x-2\">\r\n                        <Package className=\"h-4 w-4\" />\r\n                        <span>{delivery.biogasQuantity}kg Biogas</span>\r\n                      </div>\r\n\r\n                      <div className=\"flex items-center space-x-2\">\r\n                        <Clock className=\"h-4 w-4\" />\r\n                        <span>ETA: {formatTime(delivery.estimatedArrival)}</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Confirmation Form */}\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle className=\"flex items-center space-x-2\">\r\n              <CheckCircle className=\"h-5 w-5\" />\r\n              <span>Confirmation Details</span>\r\n            </CardTitle>\r\n            <CardDescription>\r\n              {selectedDelivery\r\n                ? `Confirming delivery for ${selectedDelivery.customerName}`\r\n                : 'Select a delivery to confirm'\r\n              }\r\n            </CardDescription>\r\n          </CardHeader>\r\n          <CardContent>\r\n            {selectedDelivery ? (\r\n              <div className=\"space-y-6\">\r\n                {/* Delivery Summary */}\r\n                <div className=\"p-4 bg-gray-50 rounded-lg\">\r\n                  <h4 className=\"font-medium mb-2\">Delivery Summary</h4>\r\n                  <div className=\"space-y-2 text-sm\">\r\n                    <div className=\"flex justify-between\">\r\n                      <span>Customer:</span>\r\n                      <span className=\"font-medium\">{selectedDelivery.customerName}</span>\r\n                    </div>\r\n                    <div className=\"flex justify-between\">\r\n                      <span>Scheduled Quantity:</span>\r\n                      <span className=\"font-medium\">{selectedDelivery.biogasQuantity}kg</span>\r\n                    </div>\r\n                    <div className=\"flex justify-between\">\r\n                      <span>Delivery ID:</span>\r\n                      <span className=\"font-medium\">#{selectedDelivery.id}</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Confirmation Form */}\r\n                <div className=\"space-y-4\">\r\n                  {/* Confirmed By */}\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium mb-2\">Confirmed By</label>\r\n                    <select\r\n                      className=\"w-full border border-gray-300 rounded-md px-3 py-2\"\r\n                      value={confirmationForm.confirmedBy}\r\n                      onChange={(e) => setConfirmationForm({\r\n                        ...confirmationForm,\r\n                        confirmedBy: e.target.value\r\n                      })}\r\n                    >\r\n                      <option value=\"Driver\">Driver</option>\r\n                      <option value=\"Customer\">Customer</option>\r\n                      <option value=\"Supervisor\">Supervisor</option>\r\n                    </select>\r\n                  </div>\r\n\r\n                  {/* Actual Quantity */}\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium mb-2\">Actual Quantity Delivered (kg)</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      className=\"w-full border border-gray-300 rounded-md px-3 py-2\"\r\n                      value={confirmationForm.actualQuantity}\r\n                      onChange={(e) => setConfirmationForm({\r\n                        ...confirmationForm,\r\n                        actualQuantity: parseFloat(e.target.value) || 0\r\n                      })}\r\n                    />\r\n                    {confirmationForm.actualQuantity !== selectedDelivery.biogasQuantity && (\r\n                      <p className=\"text-sm text-yellow-600 mt-1\">\r\n                        Quantity differs from scheduled amount\r\n                      </p>\r\n                    )}\r\n                  </div>\r\n\r\n                  {/* Customer Satisfaction */}\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium mb-2\">Customer Satisfaction (1-5)</label>\r\n                    <div className=\"flex space-x-2\">\r\n                      {[1, 2, 3, 4, 5].map((rating) => (\r\n                        <Button\r\n                          key={rating}\r\n                          variant={confirmationForm.customerSatisfaction === rating ? \"default\" : \"outline\"}\r\n                          size=\"sm\"\r\n                          onClick={() => setConfirmationForm({\r\n                            ...confirmationForm,\r\n                            customerSatisfaction: rating\r\n                          })}\r\n                        >\r\n                          {rating}\r\n                        </Button>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Delivery Issues */}\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium mb-2\">Delivery Issues (if any)</label>\r\n                    <div className=\"grid grid-cols-2 gap-2\">\r\n                      {deliveryIssueOptions.map((issue) => (\r\n                        <label key={issue} className=\"flex items-center space-x-2\">\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            checked={confirmationForm.deliveryIssues.includes(issue)}\r\n                            onChange={() => handleIssueToggle(issue)}\r\n                          />\r\n                          <span className=\"text-sm\">{issue}</span>\r\n                        </label>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Signature and Photo */}\r\n                  <div className=\"grid grid-cols-2 gap-4\">\r\n                    <div>\r\n                      <label className=\"block text-sm font-medium mb-2\">Customer Signature</label>\r\n                      <Button\r\n                        variant=\"outline\"\r\n                        onClick={handleSignatureCapture}\r\n                        className=\"w-full\"\r\n                      >\r\n                        <PenTool className=\"w-4 h-4 mr-2\" />\r\n                        {confirmationForm.customerSignature ? 'Signature Captured' : 'Capture Signature'}\r\n                      </Button>\r\n                      {confirmationForm.customerSignature && (\r\n                        <p className=\"text-sm text-green-600 mt-1\">\r\n                          ✓ Signature saved\r\n                        </p>\r\n                      )}\r\n                    </div>\r\n\r\n                    <div>\r\n                      <label className=\"block text-sm font-medium mb-2\">Delivery Photo</label>\r\n                      <Button\r\n                        variant=\"outline\"\r\n                        onClick={handlePhotoCapture}\r\n                        className=\"w-full\"\r\n                      >\r\n                        <Camera className=\"w-4 h-4 mr-2\" />\r\n                        {confirmationForm.photo ? 'Photo Captured' : 'Take Photo'}\r\n                      </Button>\r\n                      {confirmationForm.photo && (\r\n                        <p className=\"text-sm text-green-600 mt-1\">\r\n                          ✓ Photo saved\r\n                        </p>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Notes */}\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium mb-2\">Additional Notes</label>\r\n                    <textarea\r\n                      className=\"w-full border border-gray-300 rounded-md px-3 py-2\"\r\n                      rows={3}\r\n                      placeholder=\"Any additional comments or observations...\"\r\n                      value={confirmationForm.notes}\r\n                      onChange={(e) => setConfirmationForm({\r\n                        ...confirmationForm,\r\n                        notes: e.target.value\r\n                      })}\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Action Buttons */}\r\n                <div className=\"flex space-x-3\">\r\n                  <Button\r\n                    onClick={handleSubmitConfirmation}\r\n                    disabled={submitting}\r\n                    className=\"flex-1 bg-green-600 hover:bg-green-700\"\r\n                  >\r\n                    {submitting ? (\r\n                      <>\r\n                        <Save className=\"w-4 h-4 mr-2 animate-pulse\" />\r\n                        Confirming...\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <CheckCircle className=\"w-4 h-4 mr-2\" />\r\n                        Confirm Delivery\r\n                      </>\r\n                    )}\r\n                  </Button>\r\n\r\n                  <Button\r\n                    variant=\"outline\"\r\n                    onClick={() => setSelectedDelivery(null)}\r\n                  >\r\n                    <X className=\"w-4 h-4 mr-2\" />\r\n                    Cancel\r\n                  </Button>\r\n                </div>\r\n\r\n                {/* Validation Warnings */}\r\n                {(!confirmationForm.customerSignature || !confirmationForm.photo) && (\r\n                  <div className=\"p-3 border border-yellow-200 bg-yellow-50 rounded-lg\">\r\n                    <div className=\"flex items-start space-x-2\">\r\n                      <AlertTriangle className=\"h-4 w-4 text-yellow-600 mt-0.5\" />\r\n                      <div className=\"text-sm text-yellow-800\">\r\n                        <p className=\"font-medium\">Recommended:</p>\r\n                        <ul className=\"mt-1 space-y-1\">\r\n                          {!confirmationForm.customerSignature && (\r\n                            <li>• Capture customer signature for verification</li>\r\n                          )}\r\n                          {!confirmationForm.photo && (\r\n                            <li>• Take delivery photo for documentation</li>\r\n                          )}\r\n                        </ul>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ) : (\r\n              <div className=\"text-center py-8 text-gray-500\">\r\n                <FileText className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\r\n                <p>Select a pending delivery to begin confirmation process</p>\r\n              </div>\r\n            )}\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeliveryConfirmation;\r\nexport { DeliveryConfirmation };"],"names":["DeliveryConfirmation","pendingDeliveries","setPendingDeliveries","useState","selectedDelivery","setSelectedDelivery","confirmationForm","setConfirmationForm","loading","setLoading","submitting","setSubmitting","error","setError","deliveryIssueOptions","useEffect","loadPendingDeliveries","response","transporterService","pendingConfirmation","d","handleSelectDelivery","delivery","handleIssueToggle","issue","currentIssues","updatedIssues","i","handleSignatureCapture","handlePhotoCapture","handleSubmitConfirmation","prev","formatTime","dateString","jsxs","jsx","_","index","Card","CardContent","AlertTriangle","Button","CardHeader","CardTitle","Package","Badge","CardDescription","CheckCircle","MapPin","Clock","e","rating","PenTool","Camera","Fragment","Save","X","FileText"],"mappings":"4VAgCA,MAAMA,EAAiC,IAAM,CAC3C,KAAM,CAACC,EAAmBC,CAAoB,EAAIC,EAAAA,SAAqB,CAAA,CAAE,EACnE,CAACC,EAAkBC,CAAmB,EAAIF,EAAAA,SAA0B,IAAI,EACxE,CAACG,EAAkBC,CAAmB,EAAIJ,WAA2B,CACzE,WAAY,GACZ,YAAa,GACb,kBAAmB,GACnB,MAAO,GACP,MAAO,GACP,eAAgB,EAChB,qBAAsB,EACtB,eAAgB,CAAA,CAAC,CAClB,EACK,CAACK,EAASC,CAAU,EAAIN,EAAAA,SAAS,EAAI,EACrC,CAACO,EAAYC,CAAa,EAAIR,EAAAA,SAAS,EAAK,EAC5C,CAACS,EAAOC,CAAQ,EAAIV,EAAAA,SAAwB,IAAI,EAEhDW,EAAuB,CAC3B,gBACA,uBACA,iBACA,uBACA,kBACA,wBACA,sBAAA,EAGFC,EAAAA,UAAU,IAAM,CACdC,EAAA,CACF,EAAG,CAAA,CAAE,EAEL,MAAMA,EAAwB,SAAY,CACxC,GAAI,CACFP,EAAW,EAAI,EACf,MAAMQ,EAAW,MAAMC,EAAmB,oBAAA,EAC1C,GAAID,EAAS,QAAS,CAEpB,MAAME,EAAsBF,EAAS,KAAK,OACxCG,GAAKA,EAAE,SAAW,cAAgBA,EAAE,SAAW,WAAA,EAEjDlB,EAAqBiB,CAAmB,CAC1C,MACEN,EAAS,mCAAmC,CAEhD,MAAc,CACZA,EAAS,mCAAmC,CAE9C,QAAA,CACEJ,EAAW,EAAK,CAClB,CACF,EAEMY,EAAwBC,GAAuB,CACnDjB,EAAoBiB,CAAQ,EAC5Bf,EAAoB,CAClB,WAAYe,EAAS,GACrB,YAAa,SACb,kBAAmB,GACnB,MAAO,GACP,MAAO,GACP,eAAgBA,EAAS,eACzB,qBAAsB,EACtB,eAAgB,CAAA,CAAC,CAClB,CACH,EAEMC,EAAqBC,GAAkB,CAC3C,MAAMC,EAAgBnB,EAAiB,eACjCoB,EAAgBD,EAAc,SAASD,CAAK,EAC9CC,EAAc,OAAOE,GAAKA,IAAMH,CAAK,EACrC,CAAC,GAAGC,EAAeD,CAAK,EAE5BjB,EAAoB,CAClB,GAAGD,EACH,eAAgBoB,CAAA,CACjB,CACH,EAEME,EAAyB,IAAM,CAEnCrB,EAAoB,CAClB,GAAGD,EACH,kBAAmB,aAAa,KAAK,IAAA,CAAK,MAAA,CAC3C,CACH,EAEMuB,EAAqB,IAAM,CAE/BtB,EAAoB,CAClB,GAAGD,EACH,MAAO,kBAAkB,KAAK,IAAA,CAAK,MAAA,CACpC,CACH,EAEMwB,EAA2B,SAAY,CAC3C,GAAK1B,EAEL,GAAI,CACFO,EAAc,EAAI,GAED,MAAMO,EAAmB,gBACxCd,EAAiB,GACjBE,CAAA,GAGW,SAEXJ,KACE6B,EAAK,UAAYX,EAAE,KAAOhB,EAAiB,EAAE,CAAA,EAE/CC,EAAoB,IAAI,EACxBE,EAAoB,CAClB,WAAY,GACZ,YAAa,GACb,kBAAmB,GACnB,MAAO,GACP,MAAO,GACP,eAAgB,EAChB,qBAAsB,EACtB,eAAgB,CAAA,CAAC,CAClB,EAGD,MAAM,kCAAkC,GAExCM,EAAS,4BAA4B,CAEzC,MAAc,CACZA,EAAS,4BAA4B,CAEvC,QAAA,CACEF,EAAc,EAAK,CACrB,CACF,EAEMqB,EAAcC,GACX,IAAI,KAAKA,CAAU,EAAE,eAAe,QAAS,CAClD,MAAO,QACP,IAAK,UACL,KAAM,UACN,OAAQ,SAAA,CACT,EAGH,OAAIzB,EAEA0B,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAG,UAAU,oCAAoC,SAAA,wBAAqB,EACvEA,EAAAA,IAAC,IAAA,CAAE,UAAU,wBAAwB,SAAA,4DAAA,CAErC,CAAA,EACF,EACAA,EAAAA,IAAC,OAAI,UAAU,0BACZ,eAAM,KAAK,CAAE,OAAQ,CAAA,CAAG,EAAE,IAAI,CAACC,EAAGC,IACjCF,MAACG,GACC,SAAAJ,EAAAA,KAACK,EAAA,CAAY,UAAU,OACrB,SAAA,CAAAJ,EAAAA,IAAC,MAAA,CAAI,UAAU,oCAAA,CAAqC,EACpDA,EAAAA,IAAC,MAAA,CAAI,UAAU,+BAAA,CAAgC,CAAA,EACjD,CAAA,EAJSE,CAKX,CACD,CAAA,CACH,CAAA,EACF,EAIAzB,EAEAsB,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAG,UAAU,oCAAoC,SAAA,wBAAqB,EACvEA,EAAAA,IAAC,IAAA,CAAE,UAAU,wBAAwB,SAAA,4DAAA,CAErC,CAAA,EACF,QACCG,EAAA,CAAK,UAAU,2BACd,SAAAJ,EAAAA,KAACK,EAAA,CAAY,UAAU,OACrB,SAAA,CAAAL,EAAAA,KAAC,MAAA,CAAI,UAAU,2CACb,SAAA,CAAAC,EAAAA,IAACK,EAAA,CAAc,UAAU,SAAA,CAAU,EACnCL,EAAAA,IAAC,QAAM,SAAAvB,CAAA,CAAM,CAAA,EACf,EACAuB,EAAAA,IAACM,EAAA,CACC,QAAS,IAAM,OAAO,SAAS,OAAA,EAC/B,UAAU,OACV,QAAQ,UACT,SAAA,OAAA,CAAA,CAED,CAAA,CACF,CAAA,CACF,CAAA,EACF,EAKFP,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAG,UAAU,oCAAoC,SAAA,wBAAqB,EACvEA,EAAAA,IAAC,IAAA,CAAE,UAAU,wBAAwB,SAAA,4DAAA,CAErC,CAAA,EACF,EAEAD,EAAAA,KAAC,MAAA,CAAI,UAAU,wCAEb,SAAA,CAAAA,OAACI,EAAA,CACC,SAAA,CAAAJ,OAACQ,EAAA,CACC,SAAA,CAAAR,EAAAA,KAACS,EAAA,CAAU,UAAU,8BACnB,SAAA,CAAAR,EAAAA,IAACS,EAAA,CAAQ,UAAU,SAAA,CAAU,EAC7BT,EAAAA,IAAC,QAAK,SAAA,uBAAA,CAAqB,EAC3BA,EAAAA,IAACU,EAAA,CAAM,QAAQ,UAAW,WAAkB,MAAA,CAAO,CAAA,EACrD,EACAV,EAAAA,IAACW,GAAgB,SAAA,mCAAA,CAEjB,CAAA,EACF,EACAX,EAAAA,IAACI,GACE,SAAAtC,EAAkB,SAAW,EAC5BiC,EAAAA,KAAC,MAAA,CAAI,UAAU,mBACb,SAAA,CAAAC,EAAAA,IAACY,EAAA,CAAY,UAAU,uCAAA,CAAwC,EAC/DZ,EAAAA,IAAC,KAAA,CAAG,UAAU,yCAAyC,SAAA,iBAAc,EACrEA,EAAAA,IAAC,IAAA,CAAE,UAAU,gBAAgB,SAAA,qCAAA,CAAmC,CAAA,CAAA,CAClE,QAEC,MAAA,CAAI,UAAU,YACZ,SAAAlC,EAAkB,IAAKqB,GACtBY,EAAAA,KAAC,MAAA,CAEC,UAAW,0DACT9B,GAAkB,KAAOkB,EAAS,GAC9B,6BACA,uCACN,GACA,QAAS,IAAMD,EAAqBC,CAAQ,EAE5C,SAAA,CAAAY,EAAAA,KAAC,MAAA,CAAI,UAAU,wCACb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAG,UAAU,cAAe,SAAAb,EAAS,aAAa,EACnDY,EAAAA,KAAC,IAAA,CAAE,UAAU,wBAAwB,SAAA,CAAA,IAAEZ,EAAS,EAAA,CAAA,CAAG,CAAA,EACrD,EACAa,EAAAA,IAACU,GAAM,UAAU,2BACd,WAAS,SAAW,aAAe,aAAe,WAAA,CACrD,CAAA,EACF,EAEAX,EAAAA,KAAC,MAAA,CAAI,UAAU,kCACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAC,EAAAA,IAACa,EAAA,CAAO,UAAU,SAAA,CAAU,EAC5Bb,EAAAA,IAAC,OAAA,CAAM,SAAAb,EAAS,eAAA,CAAgB,CAAA,EAClC,EAEAY,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAC,EAAAA,IAACS,EAAA,CAAQ,UAAU,SAAA,CAAU,SAC5B,OAAA,CAAM,SAAA,CAAAtB,EAAS,eAAe,WAAA,CAAA,CAAS,CAAA,EAC1C,EAEAY,EAAAA,KAAC,MAAA,CAAI,UAAU,8BACb,SAAA,CAAAC,EAAAA,IAACc,EAAA,CAAM,UAAU,SAAA,CAAU,SAC1B,OAAA,CAAK,SAAA,CAAA,QAAMjB,EAAWV,EAAS,gBAAgB,CAAA,CAAA,CAAE,CAAA,CAAA,CACpD,CAAA,CAAA,CACF,CAAA,CAAA,EAjCKA,EAAS,EAAA,CAmCjB,EACH,CAAA,CAEJ,CAAA,EACF,SAGCgB,EAAA,CACC,SAAA,CAAAJ,OAACQ,EAAA,CACC,SAAA,CAAAR,EAAAA,KAACS,EAAA,CAAU,UAAU,8BACnB,SAAA,CAAAR,EAAAA,IAACY,EAAA,CAAY,UAAU,SAAA,CAAU,EACjCZ,EAAAA,IAAC,QAAK,SAAA,sBAAA,CAAoB,CAAA,EAC5B,QACCW,EAAA,CACE,SAAA1C,EACG,2BAA2BA,EAAiB,YAAY,GACxD,8BAAA,CAEN,CAAA,EACF,QACCmC,EAAA,CACE,SAAAnC,EACC8B,OAAC,MAAA,CAAI,UAAU,YAEb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,4BACb,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAG,UAAU,mBAAmB,SAAA,mBAAgB,EACjDD,EAAAA,KAAC,MAAA,CAAI,UAAU,oBACb,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,uBACb,SAAA,CAAAC,EAAAA,IAAC,QAAK,SAAA,WAAA,CAAS,EACfA,EAAAA,IAAC,OAAA,CAAK,UAAU,cAAe,WAAiB,YAAA,CAAa,CAAA,EAC/D,EACAD,EAAAA,KAAC,MAAA,CAAI,UAAU,uBACb,SAAA,CAAAC,EAAAA,IAAC,QAAK,SAAA,qBAAA,CAAmB,EACzBD,EAAAA,KAAC,OAAA,CAAK,UAAU,cAAe,SAAA,CAAA9B,EAAiB,eAAe,IAAA,CAAA,CAAE,CAAA,EACnE,EACA8B,EAAAA,KAAC,MAAA,CAAI,UAAU,uBACb,SAAA,CAAAC,EAAAA,IAAC,QAAK,SAAA,cAAA,CAAY,EAClBD,EAAAA,KAAC,OAAA,CAAK,UAAU,cAAc,SAAA,CAAA,IAAE9B,EAAiB,EAAA,CAAA,CAAG,CAAA,CAAA,CACtD,CAAA,CAAA,CACF,CAAA,EACF,EAGA8B,EAAAA,KAAC,MAAA,CAAI,UAAU,YAEb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAC,EAAAA,IAAC,QAAA,CAAM,UAAU,iCAAiC,SAAA,eAAY,EAC9DD,EAAAA,KAAC,SAAA,CACC,UAAU,qDACV,MAAO5B,EAAiB,YACxB,SAAW4C,GAAM3C,EAAoB,CACnC,GAAGD,EACH,YAAa4C,EAAE,OAAO,KAAA,CACvB,EAED,SAAA,CAAAf,EAAAA,IAAC,SAAA,CAAO,MAAM,SAAS,SAAA,SAAM,EAC7BA,EAAAA,IAAC,SAAA,CAAO,MAAM,WAAW,SAAA,WAAQ,EACjCA,EAAAA,IAAC,SAAA,CAAO,MAAM,aAAa,SAAA,YAAA,CAAU,CAAA,CAAA,CAAA,CACvC,EACF,SAGC,MAAA,CACC,SAAA,CAAAA,EAAAA,IAAC,QAAA,CAAM,UAAU,iCAAiC,SAAA,iCAA8B,EAChFA,EAAAA,IAAC,QAAA,CACC,KAAK,SACL,UAAU,qDACV,MAAO7B,EAAiB,eACxB,SAAW4C,GAAM3C,EAAoB,CACnC,GAAGD,EACH,eAAgB,WAAW4C,EAAE,OAAO,KAAK,GAAK,CAAA,CAC/C,CAAA,CAAA,EAEF5C,EAAiB,iBAAmBF,EAAiB,sBACnD,IAAA,CAAE,UAAU,+BAA+B,SAAA,wCAAA,CAE5C,CAAA,EAEJ,SAGC,MAAA,CACC,SAAA,CAAA+B,EAAAA,IAAC,QAAA,CAAM,UAAU,iCAAiC,SAAA,8BAA2B,EAC7EA,EAAAA,IAAC,MAAA,CAAI,UAAU,iBACZ,SAAA,CAAC,EAAG,EAAG,EAAG,EAAG,CAAC,EAAE,IAAKgB,GACpBhB,EAAAA,IAACM,EAAA,CAEC,QAASnC,EAAiB,uBAAyB6C,EAAS,UAAY,UACxE,KAAK,KACL,QAAS,IAAM5C,EAAoB,CACjC,GAAGD,EACH,qBAAsB6C,CAAA,CACvB,EAEA,SAAAA,CAAA,EARIA,CAAA,CAUR,CAAA,CACH,CAAA,EACF,SAGC,MAAA,CACC,SAAA,CAAAhB,EAAAA,IAAC,QAAA,CAAM,UAAU,iCAAiC,SAAA,2BAAwB,EAC1EA,EAAAA,IAAC,MAAA,CAAI,UAAU,yBACZ,SAAArB,EAAqB,IAAKU,GACzBU,EAAAA,KAAC,QAAA,CAAkB,UAAU,8BAC3B,SAAA,CAAAC,EAAAA,IAAC,QAAA,CACC,KAAK,WACL,QAAS7B,EAAiB,eAAe,SAASkB,CAAK,EACvD,SAAU,IAAMD,EAAkBC,CAAK,CAAA,CAAA,EAEzCW,EAAAA,IAAC,OAAA,CAAK,UAAU,UAAW,SAAAX,CAAA,CAAM,CAAA,CAAA,EANvBA,CAOZ,CACD,CAAA,CACH,CAAA,EACF,EAGAU,EAAAA,KAAC,MAAA,CAAI,UAAU,yBACb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAC,EAAAA,IAAC,QAAA,CAAM,UAAU,iCAAiC,SAAA,qBAAkB,EACpED,EAAAA,KAACO,EAAA,CACC,QAAQ,UACR,QAASb,EACT,UAAU,SAEV,SAAA,CAAAO,EAAAA,IAACiB,EAAA,CAAQ,UAAU,cAAA,CAAe,EACjC9C,EAAiB,kBAAoB,qBAAuB,mBAAA,CAAA,CAAA,EAE9DA,EAAiB,mBAChB6B,EAAAA,IAAC,IAAA,CAAE,UAAU,8BAA8B,SAAA,mBAAA,CAE3C,CAAA,EAEJ,SAEC,MAAA,CACC,SAAA,CAAAA,EAAAA,IAAC,QAAA,CAAM,UAAU,iCAAiC,SAAA,iBAAc,EAChED,EAAAA,KAACO,EAAA,CACC,QAAQ,UACR,QAASZ,EACT,UAAU,SAEV,SAAA,CAAAM,EAAAA,IAACkB,EAAA,CAAO,UAAU,cAAA,CAAe,EAChC/C,EAAiB,MAAQ,iBAAmB,YAAA,CAAA,CAAA,EAE9CA,EAAiB,OAChB6B,EAAAA,IAAC,IAAA,CAAE,UAAU,8BAA8B,SAAA,eAAA,CAE3C,CAAA,CAAA,CAEJ,CAAA,EACF,SAGC,MAAA,CACC,SAAA,CAAAA,EAAAA,IAAC,QAAA,CAAM,UAAU,iCAAiC,SAAA,mBAAgB,EAClEA,EAAAA,IAAC,WAAA,CACC,UAAU,qDACV,KAAM,EACN,YAAY,6CACZ,MAAO7B,EAAiB,MACxB,SAAW4C,GAAM3C,EAAoB,CACnC,GAAGD,EACH,MAAO4C,EAAE,OAAO,KAAA,CACjB,CAAA,CAAA,CACH,CAAA,CACF,CAAA,EACF,EAGAhB,EAAAA,KAAC,MAAA,CAAI,UAAU,iBACb,SAAA,CAAAC,EAAAA,IAACM,EAAA,CACC,QAASX,EACT,SAAUpB,EACV,UAAU,yCAET,WACCwB,EAAAA,KAAAoB,EAAAA,SAAA,CACE,SAAA,CAAAnB,EAAAA,IAACoB,EAAA,CAAK,UAAU,4BAAA,CAA6B,EAAE,eAAA,CAAA,CAEjD,EAEArB,EAAAA,KAAAoB,EAAAA,SAAA,CACE,SAAA,CAAAnB,EAAAA,IAACY,EAAA,CAAY,UAAU,cAAA,CAAe,EAAE,kBAAA,CAAA,CAE1C,CAAA,CAAA,EAIJb,EAAAA,KAACO,EAAA,CACC,QAAQ,UACR,QAAS,IAAMpC,EAAoB,IAAI,EAEvC,SAAA,CAAA8B,EAAAA,IAACqB,EAAA,CAAE,UAAU,cAAA,CAAe,EAAE,QAAA,CAAA,CAAA,CAEhC,EACF,GAGE,CAAClD,EAAiB,mBAAqB,CAACA,EAAiB,QACzD6B,EAAAA,IAAC,MAAA,CAAI,UAAU,uDACb,SAAAD,OAAC,MAAA,CAAI,UAAU,6BACb,SAAA,CAAAC,EAAAA,IAACK,EAAA,CAAc,UAAU,gCAAA,CAAiC,EAC1DN,EAAAA,KAAC,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAC,EAAAA,IAAC,IAAA,CAAE,UAAU,cAAc,SAAA,eAAY,EACvCD,EAAAA,KAAC,KAAA,CAAG,UAAU,iBACX,SAAA,CAAA,CAAC5B,EAAiB,mBACjB6B,EAAAA,IAAC,KAAA,CAAG,SAAA,gDAA6C,EAElD,CAAC7B,EAAiB,OACjB6B,EAAAA,IAAC,MAAG,SAAA,yCAAA,CAAuC,CAAA,CAAA,CAE/C,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CAAA,CAEJ,EAEAD,EAAAA,KAAC,MAAA,CAAI,UAAU,iCACb,SAAA,CAAAC,EAAAA,IAACsB,EAAA,CAAS,UAAU,sCAAA,CAAuC,EAC3DtB,EAAAA,IAAC,KAAE,SAAA,yDAAA,CAAuD,CAAA,CAAA,CAC5D,CAAA,CAEJ,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,EACF,CAEJ"}