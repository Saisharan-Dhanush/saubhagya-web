{"version":3,"file":"CycleManagement-CbWbtEiJ.js","sources":["../../src/modules/purification/pages/CycleManagement/CycleManagement.tsx"],"sourcesContent":["/**\r\n * Cycle Management Page - SAUB-FE-003\r\n * Complete purification cycle management with timer, readings, and history\r\n */\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Progress } from '@/components/ui/progress';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Textarea } from '@/components/ui/textarea';\r\nimport { Alert, AlertDescription } from '@/components/ui/alert';\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\r\nimport { Separator } from '@/components/ui/separator';\r\nimport {\r\n  Play,\r\n  Pause,\r\n  Square,\r\n  Clock,\r\n  Gauge,\r\n  Activity,\r\n  CheckCircle,\r\n  AlertTriangle,\r\n  BarChart3,\r\n  Settings,\r\n  Timer,\r\n  FlaskConical,\r\n  Thermometer,\r\n  Wind\r\n} from 'lucide-react';\r\nimport { PurificationCycle, PurificationMetrics } from '../../Purification.types';\r\nimport { CYCLE_DURATIONS, PURIFICATION_STAGES, QUALITY_GRADES } from '../../Purification.config';\r\n\r\ninterface CycleFormData {\r\n  targetCH4: number;\r\n  sourceBatches: string[];\r\n  estimatedDuration: number;\r\n  operatorNotes: string;\r\n  priority: 'normal' | 'high' | 'urgent';\r\n}\r\n\r\nexport const CycleManagement: React.FC = () => {\r\n  const [activeCycles, setActiveCycles] = useState<PurificationCycle[]>([]);\r\n  const [selectedCycle, setSelectedCycle] = useState<PurificationCycle | null>(null);\r\n  const [currentReading, setCurrentReading] = useState<Partial<PurificationMetrics>>({\r\n    ch4Percentage: 0,\r\n    pressure: 0,\r\n    temperature: 0,\r\n    h2sLevel: 0\r\n  });\r\n  const [newCycleForm, setNewCycleForm] = useState<CycleFormData>({\r\n    targetCH4: 95,\r\n    sourceBatches: [],\r\n    estimatedDuration: CYCLE_DURATIONS.standard,\r\n    operatorNotes: '',\r\n    priority: 'normal'\r\n  });\r\n  const [cycleHistory, setCycleHistory] = useState<PurificationCycle[]>([]);\r\n\r\n  // Mock active cycles\r\n  useEffect(() => {\r\n    const mockActiveCycles: PurificationCycle[] = [\r\n      {\r\n        id: 'cycle-001',\r\n        batchId: 'BATCH-2024-001',\r\n        startTime: new Date(Date.now() - 45 * 60 * 1000), // 45 minutes ago\r\n        duration: 60,\r\n        status: 'running',\r\n        preCH4Reading: 88.5,\r\n        targetCH4: 95,\r\n        sourceUnits: ['unit-1', 'unit-2'],\r\n        operatorId: 'OP001',\r\n        qualityGrade: 'B',\r\n        pesoCompliant: true,\r\n        notes: 'Standard purification cycle'\r\n      },\r\n      {\r\n        id: 'cycle-002',\r\n        batchId: 'BATCH-2024-002',\r\n        startTime: new Date(Date.now() - 20 * 60 * 1000), // 20 minutes ago\r\n        duration: 90,\r\n        status: 'running',\r\n        preCH4Reading: 90.2,\r\n        targetCH4: 96,\r\n        sourceUnits: ['unit-3'],\r\n        operatorId: 'OP002',\r\n        qualityGrade: 'A',\r\n        pesoCompliant: true,\r\n        notes: 'Extended cycle for premium grade'\r\n      },\r\n      {\r\n        id: 'cycle-003',\r\n        batchId: 'BATCH-2024-003',\r\n        startTime: new Date(Date.now() - 10 * 60 * 1000), // 10 minutes ago\r\n        duration: 45,\r\n        status: 'paused',\r\n        preCH4Reading: 87.1,\r\n        targetCH4: 92,\r\n        sourceUnits: ['unit-2'],\r\n        operatorId: 'OP001',\r\n        qualityGrade: 'B',\r\n        pesoCompliant: false,\r\n        notes: 'Rapid cycle - paused for maintenance'\r\n      }\r\n    ];\r\n\r\n    const mockHistory: PurificationCycle[] = [\r\n      {\r\n        id: 'cycle-h001',\r\n        batchId: 'BATCH-2024-H001',\r\n        startTime: new Date(Date.now() - 4 * 60 * 60 * 1000),\r\n        endTime: new Date(Date.now() - 3 * 60 * 60 * 1000),\r\n        duration: 60,\r\n        status: 'completed',\r\n        preCH4Reading: 89.5,\r\n        postCH4Reading: 95.8,\r\n        targetCH4: 95,\r\n        sourceUnits: ['unit-1'],\r\n        outputVolume: 1250,\r\n        efficiency: 94.2,\r\n        operatorId: 'OP003',\r\n        qualityGrade: 'A',\r\n        pesoCompliant: true,\r\n        notes: 'Excellent results achieved'\r\n      },\r\n      {\r\n        id: 'cycle-h002',\r\n        batchId: 'BATCH-2024-H002',\r\n        startTime: new Date(Date.now() - 6 * 60 * 60 * 1000),\r\n        endTime: new Date(Date.now() - 5 * 60 * 60 * 1000),\r\n        duration: 45,\r\n        status: 'failed',\r\n        preCH4Reading: 85.2,\r\n        postCH4Reading: 88.1,\r\n        targetCH4: 95,\r\n        sourceUnits: ['unit-2'],\r\n        efficiency: 68.5,\r\n        operatorId: 'OP001',\r\n        qualityGrade: 'FAILED',\r\n        pesoCompliant: false,\r\n        notes: 'Equipment malfunction detected'\r\n      }\r\n    ];\r\n\r\n    setActiveCycles(mockActiveCycles);\r\n    setCycleHistory(mockHistory);\r\n    setSelectedCycle(mockActiveCycles[0]);\r\n  }, []);\r\n\r\n  const formatDuration = (startTime: Date, durationMinutes: number) => {\r\n    const elapsed = Math.floor((Date.now() - startTime.getTime()) / (1000 * 60));\r\n    const remaining = Math.max(0, durationMinutes - elapsed);\r\n    const progress = Math.min(100, (elapsed / durationMinutes) * 100);\r\n\r\n    const hours = Math.floor(remaining / 60);\r\n    const minutes = remaining % 60;\r\n\r\n    return {\r\n      elapsed,\r\n      remaining,\r\n      progress,\r\n      display: `${hours}h ${minutes}m remaining`\r\n    };\r\n  };\r\n\r\n  const getCurrentStage = (progress: number) => {\r\n    let cumulativeTime = 0;\r\n    for (const stage of PURIFICATION_STAGES) {\r\n      cumulativeTime += stage.duration;\r\n      if (progress <= (cumulativeTime / 60) * 100) {\r\n        return stage;\r\n      }\r\n    }\r\n    return PURIFICATION_STAGES[PURIFICATION_STAGES.length - 1];\r\n  };\r\n\r\n  const handleStartCycle = () => {\r\n    const newCycle: PurificationCycle = {\r\n      id: `cycle-${Date.now()}`,\r\n      batchId: `BATCH-${new Date().getFullYear()}-${String(Date.now()).slice(-3)}`,\r\n      startTime: new Date(),\r\n      duration: newCycleForm.estimatedDuration,\r\n      status: 'running',\r\n      preCH4Reading: currentReading.ch4Percentage || 0,\r\n      targetCH4: newCycleForm.targetCH4,\r\n      sourceUnits: ['unit-1'], // Default assignment\r\n      operatorId: 'CURRENT_USER',\r\n      qualityGrade: 'B',\r\n      pesoCompliant: true,\r\n      notes: newCycleForm.operatorNotes\r\n    };\r\n\r\n    setActiveCycles(prev => [...prev, newCycle]);\r\n    setSelectedCycle(newCycle);\r\n\r\n    // Reset form\r\n    setNewCycleForm({\r\n      targetCH4: 95,\r\n      sourceBatches: [],\r\n      estimatedDuration: CYCLE_DURATIONS.standard,\r\n      operatorNotes: '',\r\n      priority: 'normal'\r\n    });\r\n  };\r\n\r\n  const handleCycleAction = (cycleId: string, action: 'pause' | 'resume' | 'stop') => {\r\n    setActiveCycles(prev => prev.map(cycle => {\r\n      if (cycle.id === cycleId) {\r\n        switch (action) {\r\n          case 'pause':\r\n            return { ...cycle, status: 'paused' as const };\r\n          case 'resume':\r\n            return { ...cycle, status: 'running' as const };\r\n          case 'stop':\r\n            return { ...cycle, status: 'completed' as const, endTime: new Date() };\r\n          default:\r\n            return cycle;\r\n        }\r\n      }\r\n      return cycle;\r\n    }));\r\n  };\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'running': return 'bg-green-100 text-green-800';\r\n      case 'paused': return 'bg-yellow-100 text-yellow-800';\r\n      case 'completed': return 'bg-blue-100 text-blue-800';\r\n      case 'failed': return 'bg-red-100 text-red-800';\r\n      default: return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  const getPriorityColor = (priority: string) => {\r\n    switch (priority) {\r\n      case 'urgent': return 'bg-red-100 text-red-800';\r\n      case 'high': return 'bg-orange-100 text-orange-800';\r\n      default: return 'bg-blue-100 text-blue-800';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold text-gray-900\">Cycle Management</h1>\r\n          <p className=\"text-gray-600 mt-1\">Monitor and control purification cycles</p>\r\n        </div>\r\n        <Button onClick={() => setSelectedCycle(null)} className=\"bg-blue-600 hover:bg-blue-700\">\r\n          <Play className=\"w-4 h-4 mr-2\" />\r\n          New Cycle\r\n        </Button>\r\n      </div>\r\n\r\n      <Tabs defaultValue=\"active\" className=\"w-full\">\r\n        <TabsList className=\"grid w-full grid-cols-3\">\r\n          <TabsTrigger value=\"active\">Active Cycles ({activeCycles.length})</TabsTrigger>\r\n          <TabsTrigger value=\"new\">Start New Cycle</TabsTrigger>\r\n          <TabsTrigger value=\"history\">Cycle History</TabsTrigger>\r\n        </TabsList>\r\n\r\n        <TabsContent value=\"active\" className=\"space-y-4\">\r\n          {activeCycles.length === 0 ? (\r\n            <Card>\r\n              <CardContent className=\"flex flex-col items-center justify-center py-12\">\r\n                <Activity className=\"h-12 w-12 text-gray-400 mb-4\" />\r\n                <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No Active Cycles</h3>\r\n                <p className=\"text-gray-500 text-center mb-4\">\r\n                  Start a new purification cycle to begin processing biogas batches\r\n                </p>\r\n                <Button onClick={() => setSelectedCycle(null)} variant=\"outline\">\r\n                  Start New Cycle\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n          ) : (\r\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n              {/* Active Cycles List */}\r\n              <div className=\"space-y-4\">\r\n                {activeCycles.map((cycle) => {\r\n                  const timing = formatDuration(cycle.startTime, cycle.duration);\r\n                  const currentStage = getCurrentStage(timing.progress);\r\n\r\n                  return (\r\n                    <Card key={cycle.id} className={`cursor-pointer transition-shadow ${\r\n                      selectedCycle?.id === cycle.id ? 'ring-2 ring-blue-500' : ''\r\n                    }`} onClick={() => setSelectedCycle(cycle)}>\r\n                      <CardHeader className=\"pb-3\">\r\n                        <div className=\"flex items-center justify-between\">\r\n                          <div>\r\n                            <CardTitle className=\"text-lg\">{cycle.batchId}</CardTitle>\r\n                            <CardDescription>Target: {cycle.targetCH4}% CH₄</CardDescription>\r\n                          </div>\r\n                          <Badge className={getStatusColor(cycle.status)}>\r\n                            {cycle.status}\r\n                          </Badge>\r\n                        </div>\r\n                      </CardHeader>\r\n                      <CardContent className=\"space-y-4\">\r\n                        <div className=\"space-y-2\">\r\n                          <div className=\"flex items-center justify-between text-sm\">\r\n                            <span className=\"text-gray-600\">Progress</span>\r\n                            <span className=\"font-medium\">{timing.progress.toFixed(1)}%</span>\r\n                          </div>\r\n                          <Progress value={timing.progress} className=\"h-2\" />\r\n                          <div className=\"flex items-center justify-between text-sm text-gray-600\">\r\n                            <span>Current: {currentStage.name}</span>\r\n                            <span>{timing.display}</span>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"grid grid-cols-2 gap-4 text-sm\">\r\n                          <div>\r\n                            <span className=\"text-gray-600\">Pre-CH₄:</span>\r\n                            <span className=\"ml-1 font-medium\">{cycle.preCH4Reading}%</span>\r\n                          </div>\r\n                          <div>\r\n                            <span className=\"text-gray-600\">Units:</span>\r\n                            <span className=\"ml-1 font-medium\">{cycle.sourceUnits.join(', ')}</span>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"flex items-center justify-between\">\r\n                          <div className=\"flex items-center space-x-2\">\r\n                            <Clock className=\"w-4 h-4 text-gray-400\" />\r\n                            <span className=\"text-sm text-gray-600\">\r\n                              Started {cycle.startTime.toLocaleTimeString()}\r\n                            </span>\r\n                          </div>\r\n                          <div className=\"flex space-x-2\">\r\n                            {cycle.status === 'running' && (\r\n                              <Button\r\n                                size=\"sm\"\r\n                                variant=\"outline\"\r\n                                onClick={(e) => {\r\n                                  e.stopPropagation();\r\n                                  handleCycleAction(cycle.id, 'pause');\r\n                                }}\r\n                              >\r\n                                <Pause className=\"w-3 h-3\" />\r\n                              </Button>\r\n                            )}\r\n                            {cycle.status === 'paused' && (\r\n                              <Button\r\n                                size=\"sm\"\r\n                                variant=\"outline\"\r\n                                onClick={(e) => {\r\n                                  e.stopPropagation();\r\n                                  handleCycleAction(cycle.id, 'resume');\r\n                                }}\r\n                              >\r\n                                <Play className=\"w-3 h-3\" />\r\n                              </Button>\r\n                            )}\r\n                            <Button\r\n                              size=\"sm\"\r\n                              variant=\"outline\"\r\n                              onClick={(e) => {\r\n                                e.stopPropagation();\r\n                                handleCycleAction(cycle.id, 'stop');\r\n                              }}\r\n                            >\r\n                              <Square className=\"w-3 h-3\" />\r\n                            </Button>\r\n                          </div>\r\n                        </div>\r\n                      </CardContent>\r\n                    </Card>\r\n                  );\r\n                })}\r\n              </div>\r\n\r\n              {/* Selected Cycle Details */}\r\n              {selectedCycle && (\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle className=\"flex items-center\">\r\n                      <Timer className=\"w-5 h-5 mr-2 text-blue-600\" />\r\n                      Cycle Details: {selectedCycle.batchId}\r\n                    </CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent className=\"space-y-6\">\r\n                    {/* Live Readings */}\r\n                    <div>\r\n                      <h4 className=\"font-medium mb-3 flex items-center\">\r\n                        <Activity className=\"w-4 h-4 mr-2\" />\r\n                        Live Readings\r\n                      </h4>\r\n                      <div className=\"grid grid-cols-2 gap-4\">\r\n                        <div className=\"bg-green-50 p-3 rounded-lg\">\r\n                          <div className=\"flex items-center justify-between\">\r\n                            <span className=\"text-sm text-green-700\">CH₄ Level</span>\r\n                            <Gauge className=\"w-4 h-4 text-green-600\" />\r\n                          </div>\r\n                          <div className=\"text-2xl font-bold text-green-900\">\r\n                            {(selectedCycle.preCH4Reading + Math.random() * 2).toFixed(1)}%\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"bg-blue-50 p-3 rounded-lg\">\r\n                          <div className=\"flex items-center justify-between\">\r\n                            <span className=\"text-sm text-blue-700\">Pressure</span>\r\n                            <Wind className=\"w-4 h-4 text-blue-600\" />\r\n                          </div>\r\n                          <div className=\"text-2xl font-bold text-blue-900\">\r\n                            {(2.1 + Math.random() * 0.2).toFixed(2)} bar\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"bg-orange-50 p-3 rounded-lg\">\r\n                          <div className=\"flex items-center justify-between\">\r\n                            <span className=\"text-sm text-orange-700\">Temperature</span>\r\n                            <Thermometer className=\"w-4 h-4 text-orange-600\" />\r\n                          </div>\r\n                          <div className=\"text-2xl font-bold text-orange-900\">\r\n                            {(37 + Math.random() * 2).toFixed(1)}°C\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"bg-purple-50 p-3 rounded-lg\">\r\n                          <div className=\"flex items-center justify-between\">\r\n                            <span className=\"text-sm text-purple-700\">H₂S Level</span>\r\n                            <FlaskConical className=\"w-4 h-4 text-purple-600\" />\r\n                          </div>\r\n                          <div className=\"text-2xl font-bold text-purple-900\">\r\n                            {(12 + Math.random() * 3).toFixed(1)} ppm\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <Separator />\r\n\r\n                    {/* Cycle Information */}\r\n                    <div className=\"space-y-3\">\r\n                      <h4 className=\"font-medium\">Cycle Information</h4>\r\n                      <div className=\"grid grid-cols-1 gap-3 text-sm\">\r\n                        <div className=\"flex justify-between\">\r\n                          <span className=\"text-gray-600\">Target CH₄:</span>\r\n                          <span className=\"font-medium\">{selectedCycle.targetCH4}%</span>\r\n                        </div>\r\n                        <div className=\"flex justify-between\">\r\n                          <span className=\"text-gray-600\">Source Units:</span>\r\n                          <span className=\"font-medium\">{selectedCycle.sourceUnits.join(', ')}</span>\r\n                        </div>\r\n                        <div className=\"flex justify-between\">\r\n                          <span className=\"text-gray-600\">Operator:</span>\r\n                          <span className=\"font-medium\">{selectedCycle.operatorId}</span>\r\n                        </div>\r\n                        <div className=\"flex justify-between\">\r\n                          <span className=\"text-gray-600\">PESO Compliant:</span>\r\n                          <Badge className={selectedCycle.pesoCompliant ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'}>\r\n                            {selectedCycle.pesoCompliant ? 'Yes' : 'No'}\r\n                          </Badge>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    {selectedCycle.notes && (\r\n                      <>\r\n                        <Separator />\r\n                        <div>\r\n                          <h4 className=\"font-medium mb-2\">Notes</h4>\r\n                          <p className=\"text-sm text-gray-600 bg-gray-50 p-3 rounded\">\r\n                            {selectedCycle.notes}\r\n                          </p>\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                  </CardContent>\r\n                </Card>\r\n              )}\r\n            </div>\r\n          )}\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"new\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center\">\r\n                <Play className=\"w-5 h-5 mr-2 text-green-600\" />\r\n                Start New Purification Cycle\r\n              </CardTitle>\r\n              <CardDescription>\r\n                Configure parameters for a new biogas purification cycle\r\n              </CardDescription>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-6\">\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                {/* Pre-Treatment Readings */}\r\n                <div className=\"space-y-4\">\r\n                  <h3 className=\"font-medium flex items-center\">\r\n                    <Gauge className=\"w-4 h-4 mr-2\" />\r\n                    Pre-Treatment Readings\r\n                  </h3>\r\n                  <div className=\"space-y-3\">\r\n                    <div>\r\n                      <Label htmlFor=\"preCH4\">Current CH₄ Percentage</Label>\r\n                      <Input\r\n                        id=\"preCH4\"\r\n                        type=\"number\"\r\n                        step=\"0.1\"\r\n                        min=\"0\"\r\n                        max=\"100\"\r\n                        value={currentReading.ch4Percentage || ''}\r\n                        onChange={(e) => setCurrentReading(prev => ({\r\n                          ...prev,\r\n                          ch4Percentage: parseFloat(e.target.value) || 0\r\n                        }))}\r\n                        placeholder=\"Enter current CH₄ %\"\r\n                      />\r\n                    </div>\r\n                    <div>\r\n                      <Label htmlFor=\"prePressure\">Pressure (bar)</Label>\r\n                      <Input\r\n                        id=\"prePressure\"\r\n                        type=\"number\"\r\n                        step=\"0.1\"\r\n                        min=\"0\"\r\n                        value={currentReading.pressure || ''}\r\n                        onChange={(e) => setCurrentReading(prev => ({\r\n                          ...prev,\r\n                          pressure: parseFloat(e.target.value) || 0\r\n                        }))}\r\n                        placeholder=\"Enter pressure\"\r\n                      />\r\n                    </div>\r\n                    <div>\r\n                      <Label htmlFor=\"preTemp\">Temperature (°C)</Label>\r\n                      <Input\r\n                        id=\"preTemp\"\r\n                        type=\"number\"\r\n                        step=\"0.1\"\r\n                        value={currentReading.temperature || ''}\r\n                        onChange={(e) => setCurrentReading(prev => ({\r\n                          ...prev,\r\n                          temperature: parseFloat(e.target.value) || 0\r\n                        }))}\r\n                        placeholder=\"Enter temperature\"\r\n                      />\r\n                    </div>\r\n                    <div>\r\n                      <Label htmlFor=\"preH2S\">H₂S Level (ppm)</Label>\r\n                      <Input\r\n                        id=\"preH2S\"\r\n                        type=\"number\"\r\n                        step=\"0.1\"\r\n                        min=\"0\"\r\n                        value={currentReading.h2sLevel || ''}\r\n                        onChange={(e) => setCurrentReading(prev => ({\r\n                          ...prev,\r\n                          h2sLevel: parseFloat(e.target.value) || 0\r\n                        }))}\r\n                        placeholder=\"Enter H₂S level\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Cycle Configuration */}\r\n                <div className=\"space-y-4\">\r\n                  <h3 className=\"font-medium flex items-center\">\r\n                    <Settings className=\"w-4 h-4 mr-2\" />\r\n                    Cycle Configuration\r\n                  </h3>\r\n                  <div className=\"space-y-3\">\r\n                    <div>\r\n                      <Label htmlFor=\"targetCH4\">Target CH₄ Percentage</Label>\r\n                      <Input\r\n                        id=\"targetCH4\"\r\n                        type=\"number\"\r\n                        step=\"0.1\"\r\n                        min=\"90\"\r\n                        max=\"98\"\r\n                        value={newCycleForm.targetCH4}\r\n                        onChange={(e) => setNewCycleForm(prev => ({\r\n                          ...prev,\r\n                          targetCH4: parseFloat(e.target.value) || 95\r\n                        }))}\r\n                      />\r\n                    </div>\r\n                    <div>\r\n                      <Label htmlFor=\"duration\">Estimated Duration (minutes)</Label>\r\n                      <select\r\n                        id=\"duration\"\r\n                        className=\"w-full p-2 border border-gray-300 rounded-md\"\r\n                        value={newCycleForm.estimatedDuration}\r\n                        onChange={(e) => setNewCycleForm(prev => ({\r\n                          ...prev,\r\n                          estimatedDuration: parseInt(e.target.value)\r\n                        }))}\r\n                      >\r\n                        <option value={CYCLE_DURATIONS.rapid}>Rapid (45 min)</option>\r\n                        <option value={CYCLE_DURATIONS.standard}>Standard (60 min)</option>\r\n                        <option value={CYCLE_DURATIONS.extended}>Extended (90 min)</option>\r\n                        <option value={CYCLE_DURATIONS.deep_clean}>Deep Clean (120 min)</option>\r\n                      </select>\r\n                    </div>\r\n                    <div>\r\n                      <Label htmlFor=\"priority\">Priority Level</Label>\r\n                      <select\r\n                        id=\"priority\"\r\n                        className=\"w-full p-2 border border-gray-300 rounded-md\"\r\n                        value={newCycleForm.priority}\r\n                        onChange={(e) => setNewCycleForm(prev => ({\r\n                          ...prev,\r\n                          priority: e.target.value as 'normal' | 'high' | 'urgent'\r\n                        }))}\r\n                      >\r\n                        <option value=\"normal\">Normal</option>\r\n                        <option value=\"high\">High</option>\r\n                        <option value=\"urgent\">Urgent</option>\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                <Label htmlFor=\"notes\">Operator Notes (Optional)</Label>\r\n                <Textarea\r\n                  id=\"notes\"\r\n                  placeholder=\"Add any specific instructions or observations...\"\r\n                  value={newCycleForm.operatorNotes}\r\n                  onChange={(e) => setNewCycleForm(prev => ({\r\n                    ...prev,\r\n                    operatorNotes: e.target.value\r\n                  }))}\r\n                  rows={3}\r\n                />\r\n              </div>\r\n\r\n              {/* Validation and Start */}\r\n              <div className=\"space-y-4\">\r\n                {(!currentReading.ch4Percentage || !currentReading.pressure) && (\r\n                  <Alert>\r\n                    <AlertTriangle className=\"h-4 w-4\" />\r\n                    <AlertDescription>\r\n                      Please enter pre-treatment readings before starting the cycle.\r\n                    </AlertDescription>\r\n                  </Alert>\r\n                )}\r\n\r\n                <div className=\"flex justify-end space-x-3\">\r\n                  <Button variant=\"outline\">\r\n                    Save as Draft\r\n                  </Button>\r\n                  <Button\r\n                    onClick={handleStartCycle}\r\n                    disabled={!currentReading.ch4Percentage || !currentReading.pressure}\r\n                    className=\"bg-green-600 hover:bg-green-700\"\r\n                  >\r\n                    <Play className=\"w-4 h-4 mr-2\" />\r\n                    Start Cycle\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"history\" className=\"space-y-4\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center\">\r\n                <BarChart3 className=\"w-5 h-5 mr-2 text-purple-600\" />\r\n                Cycle History\r\n              </CardTitle>\r\n              <CardDescription>\r\n                View completed and failed purification cycles\r\n              </CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-4\">\r\n                {cycleHistory.map((cycle) => (\r\n                  <div key={cycle.id} className=\"border rounded-lg p-4 hover:bg-gray-50\">\r\n                    <div className=\"flex items-center justify-between mb-3\">\r\n                      <div>\r\n                        <h4 className=\"font-medium\">{cycle.batchId}</h4>\r\n                        <p className=\"text-sm text-gray-600\">\r\n                          {cycle.startTime.toLocaleDateString()} at {cycle.startTime.toLocaleTimeString()}\r\n                        </p>\r\n                      </div>\r\n                      <div className=\"flex items-center space-x-2\">\r\n                        <Badge className={getStatusColor(cycle.status)}>\r\n                          {cycle.status}\r\n                        </Badge>\r\n                        <Badge className={`bg-${QUALITY_GRADES[cycle.qualityGrade]?.color}-100 text-${QUALITY_GRADES[cycle.qualityGrade]?.color}-800`}>\r\n                          Grade {cycle.qualityGrade}\r\n                        </Badge>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\">\r\n                      <div>\r\n                        <span className=\"text-gray-600\">Pre-CH₄:</span>\r\n                        <span className=\"ml-1 font-medium\">{cycle.preCH4Reading}%</span>\r\n                      </div>\r\n                      <div>\r\n                        <span className=\"text-gray-600\">Post-CH₄:</span>\r\n                        <span className=\"ml-1 font-medium\">{cycle.postCH4Reading || 'N/A'}%</span>\r\n                      </div>\r\n                      <div>\r\n                        <span className=\"text-gray-600\">Output:</span>\r\n                        <span className=\"ml-1 font-medium\">{cycle.outputVolume || 'N/A'} L</span>\r\n                      </div>\r\n                      <div>\r\n                        <span className=\"text-gray-600\">Efficiency:</span>\r\n                        <span className=\"ml-1 font-medium\">{cycle.efficiency || 'N/A'}%</span>\r\n                      </div>\r\n                    </div>\r\n\r\n                    {cycle.notes && (\r\n                      <p className=\"text-sm text-gray-600 mt-3 bg-gray-50 p-2 rounded\">\r\n                        {cycle.notes}\r\n                      </p>\r\n                    )}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};"],"names":["CycleManagement","activeCycles","setActiveCycles","useState","selectedCycle","setSelectedCycle","currentReading","setCurrentReading","newCycleForm","setNewCycleForm","CYCLE_DURATIONS","cycleHistory","setCycleHistory","useEffect","mockActiveCycles","mockHistory","formatDuration","startTime","durationMinutes","elapsed","remaining","progress","hours","minutes","getCurrentStage","cumulativeTime","stage","PURIFICATION_STAGES","handleStartCycle","newCycle","prev","handleCycleAction","cycleId","action","cycle","getStatusColor","status","jsxs","jsx","Button","Play","Tabs","TabsList","TabsTrigger","TabsContent","Card","CardContent","Activity","timing","currentStage","CardHeader","CardTitle","CardDescription","Badge","Progress","Clock","e","Pause","Square","Timer","Gauge","Wind","Thermometer","FlaskConical","Separator","Fragment","Label","Input","Settings","Textarea","Alert","AlertTriangle","AlertDescription","BarChart3","QUALITY_GRADES"],"mappings":"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"}